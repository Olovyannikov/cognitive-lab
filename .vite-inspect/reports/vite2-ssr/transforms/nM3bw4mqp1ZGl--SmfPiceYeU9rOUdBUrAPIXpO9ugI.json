{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Image, type ImageProps } from '@mantine/core';\nimport clsx from 'clsx';\n\nimport { CDN_URL } from '@/shared/config';\n\nimport s from './Picture.module.css';\n\ninterface PictureProps extends ImageProps {\n    width?: number;\n    height?: number;\n    alt?: string;\n    draggable?: boolean;\n    extraPath?: string;\n    cdn?: boolean;\n}\n\nexport const Picture = ({\n    src,\n    width,\n    height,\n    alt = '',\n    draggable = false,\n    className,\n    extraPath,\n    cdn = false,\n    ...props\n}: PictureProps) => {\n    const path = src?.split('/')?.at(-1);\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n\n    if (cdn) {\n        fullPath = CDN_URL + fullPath;\n    }\n\n    return (\n        <picture className={clsx(s.picture, className)}>\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\n            <Image\n                fetchPriority='high'\n                loading='lazy'\n                draggable={draggable}\n                w={width}\n                h={height}\n                width={width}\n                height={height}\n                src={fullPath + '.png'}\n                alt={alt}\n                aria-hidden\n                fallbackSrc={fullPath + '.png'}\n                {...props}\n            />\n        </picture>\n    );\n};\n",
      "start": 1750271784866,
      "end": 1750271784884,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Image } from '@mantine/core';\nimport clsx from 'clsx';\nimport { CDN_URL } from '@/shared/config';\nimport s from './Picture.module.css';\nexport const Picture = ({ src, width, height, alt = '', draggable = false, className, extraPath, cdn = false, ...props })=>{\n    const path = src?.split('/')?.at(-1);\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n    if (cdn) {\n        fullPath = CDN_URL + fullPath;\n    }\n    return /*#__PURE__*/ _jsxs(\"picture\", {\n        className: clsx(s.picture, className),\n        children: [\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`,\n                type: \"image/avif\"\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`,\n                type: \"image/webp\"\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x`\n            }),\n            /*#__PURE__*/ _jsx(Image, {\n                fetchPriority: \"high\",\n                loading: \"lazy\",\n                draggable: draggable,\n                w: width,\n                h: height,\n                width: width,\n                height: height,\n                src: fullPath + '.png',\n                alt: alt,\n                \"aria-hidden\": true,\n                fallbackSrc: fullPath + '.png',\n                ...props\n            })\n        ]\n    });\n};\n",
      "start": 1750271784884,
      "end": 1750271784898,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx\"],\"sourcesContent\":[\"import { Image, type ImageProps } from '@mantine/core';\\nimport clsx from 'clsx';\\n\\nimport { CDN_URL } from '@/shared/config';\\n\\nimport s from './Picture.module.css';\\n\\ninterface PictureProps extends ImageProps {\\n    width?: number;\\n    height?: number;\\n    alt?: string;\\n    draggable?: boolean;\\n    extraPath?: string;\\n    cdn?: boolean;\\n}\\n\\nexport const Picture = ({\\n    src,\\n    width,\\n    height,\\n    alt = '',\\n    draggable = false,\\n    className,\\n    extraPath,\\n    cdn = false,\\n    ...props\\n}: PictureProps) => {\\n    const path = src?.split('/')?.at(-1);\\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\\n\\n    if (cdn) {\\n        fullPath = CDN_URL + fullPath;\\n    }\\n\\n    return (\\n        <picture className={clsx(s.picture, className)}>\\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\\n            <Image\\n                fetchPriority='high'\\n                loading='lazy'\\n                draggable={draggable}\\n                w={width}\\n                h={height}\\n                width={width}\\n                height={height}\\n                src={fullPath + '.png'}\\n                alt={alt}\\n                aria-hidden\\n                fallbackSrc={fullPath + '.png'}\\n                {...props}\\n            />\\n        </picture>\\n    );\\n};\\n\"],\"names\":[\"Image\",\"clsx\",\"CDN_URL\",\"s\",\"Picture\",\"src\",\"width\",\"height\",\"alt\",\"draggable\",\"className\",\"extraPath\",\"cdn\",\"props\",\"path\",\"split\",\"at\",\"fullPath\",\"picture\",\"source\",\"srcSet\",\"type\",\"fetchPriority\",\"loading\",\"w\",\"h\",\"aria-hidden\",\"fallbackSrc\"],\"mappings\":\";AAAA,SAASA,KAAK,QAAyB,gBAAgB;AACvD,OAAOC,UAAU,OAAO;AAExB,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,OAAOC,OAAO,uBAAuB;AAWrC,OAAO,MAAMC,UAAU,CAAC,EACpBC,GAAG,EACHC,KAAK,EACLC,MAAM,EACNC,MAAM,EAAE,EACRC,YAAY,KAAK,EACjBC,SAAS,EACTC,SAAS,EACTC,MAAM,KAAK,EACX,GAAGC,OACQ;IACX,MAAMC,OAAOT,KAAKU,MAAM,MAAMC,GAAG,CAAC;IAClC,IAAIC,WAAW,GAAGZ,IAAI,CAAC,EAAES,OAAOH,YAAY,GAAGA,WAAW,GAAG,IAAI;IAEjE,IAAIC,KAAK;QACLK,WAAWf,UAAUe;IACzB;IAEA,qBACI,MAACC;QAAQR,WAAWT,KAAKE,EAAEe,OAAO,EAAER;;0BAChC,KAACS;gBAAOC,QAAQ,GAAGH,SAAS,UAAU,EAAEA,SAAS,WAAW,CAAC;gBAAEI,MAAK;;0BACpE,KAACF;gBAAOC,QAAQ,GAAGH,SAAS,UAAU,EAAEA,SAAS,WAAW,CAAC;gBAAEI,MAAK;;0BACpE,KAACF;gBAAOC,QAAQ,GAAGH,SAAS,UAAU,EAAEA,SAAS,WAAW,CAAC;;0BAC7D,KAACE;gBAAOC,QAAQ,GAAGH,SAAS,SAAS,EAAEA,SAAS,UAAU,CAAC;;0BAC3D,KAACE;gBAAOC,QAAQ,GAAGH,SAAS,SAAS,EAAEA,SAAS,UAAU,CAAC;;0BAC3D,KAACjB;gBACGsB,eAAc;gBACdC,SAAQ;gBACRd,WAAWA;gBACXe,GAAGlB;gBACHmB,GAAGlB;gBACHD,OAAOA;gBACPC,QAAQA;gBACRF,KAAKY,WAAW;gBAChBT,KAAKA;gBACLkB,aAAW;gBACXC,aAAaV,WAAW;gBACvB,GAAGJ,KAAK;;;;AAIzB,EAAE\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Image } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { CDN_URL } from \"@/shared/config\";\nimport s from \"./Picture.module.css\";\nexport const Picture = ({ src, width, height, alt = \"\", draggable = false, className, extraPath, cdn = false, ...props }) => {\n  const path = src?.split(\"/\")?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : \"\"}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return /* @__PURE__ */ _jsxs(\"picture\", {\n    className: clsx(s.picture, className),\n    children: [\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`,\n        type: \"image/avif\"\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`,\n        type: \"image/webp\"\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x`\n      }),\n      /* @__PURE__ */ _jsx(Image, {\n        fetchPriority: \"high\",\n        loading: \"lazy\",\n        draggable,\n        w: width,\n        h: height,\n        width,\n        height,\n        src: fullPath + \".png\",\n        alt,\n        \"aria-hidden\": true,\n        fallbackSrc: fullPath + \".png\",\n        ...props\n      })\n    ]\n  });\n};\n",
      "start": 1750271784898,
      "end": 1750271785007,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Image } from '@mantine/core';\nimport clsx from 'clsx';\nimport { CDN_URL } from '@/shared/config';\nimport s from './Picture.module.css';\nexport const Picture = ({ src, width, height, alt = '', draggable = false, className, extraPath, cdn = false, ...props })=>{\n    const path = src?.split('/')?.at(-1);\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n    if (cdn) {\n        fullPath = CDN_URL + fullPath;\n    }\n    return /*#__PURE__*/ _jsxs(\"picture\", {\n        className: clsx(s.picture, className),\n        children: [\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`,\n                type: \"image/avif\"\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`,\n                type: \"image/webp\"\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`\n            }),\n            /*#__PURE__*/ _jsx(\"source\", {\n                srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x`\n            }),\n            /*#__PURE__*/ _jsx(Image, {\n                fetchPriority: \"high\",\n                loading: \"lazy\",\n                draggable: draggable,\n                w: width,\n                h: height,\n                width: width,\n                height: height,\n                src: fullPath + '.png',\n                alt: alt,\n                \"aria-hidden\": true,\n                fallbackSrc: fullPath + '.png',\n                ...props\n            })\n        ]\n    });\n};\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,aAAa;AACtB,OAAO,UAAU;AACjB,SAAS,eAAe;AACxB,OAAO,OAAO;AACP,aAAM,UAAU,CAAC,EAAE,KAAK,OAAO,QAAQ,MAAM,IAAI,YAAY,OAAO,WAAW,WAAW,MAAM,OAAO,GAAG,MAAM,MAAI;AACvH,QAAM,OAAO,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE;AACnC,MAAI,WAAW,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,SAAS,KAAK,EAAE;AAC/D,MAAI,KAAK;AACL,eAAW,UAAU;AAAA,EACzB;AACA,SAAqB,sBAAM,WAAW;AAAA,IAClC,WAAW,KAAK,EAAE,SAAS,SAAS;AAAA,IACpC,UAAU;AAAA,MACQ,qBAAK,UAAU;AAAA,QACzB,QAAQ,GAAG,QAAQ,aAAa,QAAQ;AAAA,QACxC,MAAM;AAAA,MACV,CAAC;AAAA,MACa,qBAAK,UAAU;AAAA,QACzB,QAAQ,GAAG,QAAQ,aAAa,QAAQ;AAAA,QACxC,MAAM;AAAA,MACV,CAAC;AAAA,MACa,qBAAK,UAAU;AAAA,QACzB,QAAQ,GAAG,QAAQ,aAAa,QAAQ;AAAA,MAC5C,CAAC;AAAA,MACa,qBAAK,UAAU;AAAA,QACzB,QAAQ,GAAG,QAAQ,YAAY,QAAQ;AAAA,MAC3C,CAAC;AAAA,MACa,qBAAK,UAAU;AAAA,QACzB,QAAQ,GAAG,QAAQ,YAAY,QAAQ;AAAA,MAC3C,CAAC;AAAA,MACa,qBAAK,OAAO;AAAA,QACtB,eAAe;AAAA,QACf,SAAS;AAAA,QACT;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK,WAAW;AAAA,QAChB;AAAA,QACA,eAAe;AAAA,QACf,aAAa,WAAW;AAAA,QACxB,GAAG;AAAA,MACP,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/Picture/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Image } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { CDN_URL } from \"@/shared/config\";\nimport s from \"./Picture.module.css\";\nexport const Picture = ({ src, width, height, alt = \"\", draggable = false, className, extraPath, cdn = false, ...props }) => {\n  const path = src?.split(\"/\")?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : \"\"}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return /* @__PURE__ */ _jsxs(\"picture\", {\n    className: clsx(s.picture, className),\n    children: [\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`,\n        type: \"image/avif\"\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`,\n        type: \"image/webp\"\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`\n      }),\n      /* @__PURE__ */ _jsx(\"source\", {\n        srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x`\n      }),\n      /* @__PURE__ */ _jsx(Image, {\n        fetchPriority: \"high\",\n        loading: \"lazy\",\n        draggable,\n        w: width,\n        h: height,\n        width,\n        height,\n        src: fullPath + \".png\",\n        alt,\n        \"aria-hidden\": true,\n        fallbackSrc: fullPath + \".png\",\n        ...props\n      })\n    ]\n  });\n};\n",
      "start": 1750271785007,
      "end": 1750271785007,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/Picture/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrrrlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

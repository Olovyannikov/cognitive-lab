{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Image, type ImageProps } from '@mantine/core';\nimport clsx from 'clsx';\n\nimport { CDN_URL } from '@/shared/config';\n\nimport s from './Picture.module.css';\n\ninterface PictureProps extends ImageProps {\n    width?: number;\n    height?: number;\n    alt?: string;\n    draggable?: boolean;\n    extraPath?: string;\n    cdn?: boolean;\n}\n\nexport const Picture = ({\n    src,\n    width,\n    height,\n    alt = '',\n    draggable = false,\n    className,\n    extraPath,\n    cdn = false,\n    ...props\n}: PictureProps) => {\n    const path = src?.split('/')?.at(-1);\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n\n    if (cdn) {\n        fullPath = CDN_URL + fullPath;\n    }\n\n    return (\n        <picture className={clsx(s.picture, className)}>\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\n            <Image\n                fetchPriority='high'\n                loading='lazy'\n                draggable={draggable}\n                w={width}\n                h={height}\n                width={width}\n                height={height}\n                src={fullPath + '.png'}\n                alt={alt}\n                aria-hidden\n                fallbackSrc={fullPath + '.png'}\n                {...props}\n            />\n        </picture>\n    );\n};\n",
      "start": 1750275033662,
      "end": 1750275033693,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Image, type ImageProps } from '@mantine/core';\nimport clsx from 'clsx';\nimport { CDN_URL } from '@/shared/config';\nimport s from './Picture.module.css';\ninterface PictureProps extends ImageProps {\n  width?: number;\n  height?: number;\n  alt?: string;\n  draggable?: boolean;\n  extraPath?: string;\n  cdn?: boolean;\n}\nexport const Picture = ({\n  src,\n  width,\n  height,\n  alt = '',\n  draggable = false,\n  className,\n  extraPath,\n  cdn = false,\n  ...props\n}: PictureProps) => {\n  const path = src?.split('/')?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return <picture className={clsx(s.picture, className)}>\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\n            <Image fetchPriority='high' loading='lazy' draggable={draggable} w={width} h={height} width={width} height={height} src={fullPath + '.png'} alt={alt} aria-hidden fallbackSrc={fullPath + '.png'} {...props} />\n        </picture>;\n};",
      "start": 1750275033693,
      "end": 1750275033694,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Image",
          "ImageProps",
          "clsx",
          "CDN_URL",
          "s",
          "PictureProps",
          "width",
          "height",
          "alt",
          "draggable",
          "extraPath",
          "cdn",
          "Picture",
          "src",
          "className",
          "props",
          "path",
          "split",
          "at",
          "fullPath",
          "picture"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx"],
        "sourcesContent": [
          "import { Image, type ImageProps } from '@mantine/core';\nimport clsx from 'clsx';\n\nimport { CDN_URL } from '@/shared/config';\n\nimport s from './Picture.module.css';\n\ninterface PictureProps extends ImageProps {\n    width?: number;\n    height?: number;\n    alt?: string;\n    draggable?: boolean;\n    extraPath?: string;\n    cdn?: boolean;\n}\n\nexport const Picture = ({\n    src,\n    width,\n    height,\n    alt = '',\n    draggable = false,\n    className,\n    extraPath,\n    cdn = false,\n    ...props\n}: PictureProps) => {\n    const path = src?.split('/')?.at(-1);\n    let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n\n    if (cdn) {\n        fullPath = CDN_URL + fullPath;\n    }\n\n    return (\n        <picture className={clsx(s.picture, className)}>\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\n            <Image\n                fetchPriority='high'\n                loading='lazy'\n                draggable={draggable}\n                w={width}\n                h={height}\n                width={width}\n                height={height}\n                src={fullPath + '.png'}\n                alt={alt}\n                aria-hidden\n                fallbackSrc={fullPath + '.png'}\n                {...props}\n            />\n        </picture>\n    );\n};\n"
        ],
        "mappings": "AAAA,SAASA,KAAK,EAAE,KAAKC,UAAU,QAAQ,eAAe;AACtD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAOC,CAAC,MAAM,sBAAsB;AAEpC,UAAUC,YAAY,SAASJ,UAAU,CAAC;EACtCK,KAAK,CAAC,EAAE,MAAM;EACdC,MAAM,CAAC,EAAE,MAAM;EACfC,GAAG,CAAC,EAAE,MAAM;EACZC,SAAS,CAAC,EAAE,OAAO;EACnBC,SAAS,CAAC,EAAE,MAAM;EAClBC,GAAG,CAAC,EAAE,OAAO;AACjB;AAEA,OAAO,MAAMC,OAAO,GAAGA,CAAC;EACpBC,GAAG;EACHP,KAAK;EACLC,MAAM;EACNC,GAAG,GAAG,EAAE;EACRC,SAAS,GAAG,KAAK;EACjBK,SAAS;EACTJ,SAAS;EACTC,GAAG,GAAG,KAAK;EACX,GAAGI;AACO,CAAb,EAAEV,YAAY,KAAK;EAChB,MAAMW,IAAI,GAAGH,GAAG,EAAEI,KAAK,CAAC,GAAG,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpC,IAAIC,QAAQ,GAAG,GAAGN,GAAG,IAAIG,IAAI,GAAGN,SAAS,GAAG,GAAGA,SAAS,EAAE,GAAG,EAAE,EAAE;EAEjE,IAAIC,GAAG,EAAE;IACLQ,QAAQ,GAAGhB,OAAO,GAAGgB,QAAQ;EACjC;EAEA,OACI,CAAC,OAAO,CAAC,SAAS,CAAC,CAACjB,IAAI,CAACE,CAAC,CAACgB,OAAO,EAAEN,SAAS,CAAC,CAAC;AACvD,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAGK,QAAQ,aAAaA,QAAQ,aAAa,CAAC,CAAC,IAAI,CAAC,YAAY;AAC5F,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAGA,QAAQ,aAAaA,QAAQ,aAAa,CAAC,CAAC,IAAI,CAAC,YAAY;AAC5F,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAGA,QAAQ,aAAaA,QAAQ,aAAa,CAAC;AAC1E,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAGA,QAAQ,YAAYA,QAAQ,YAAY,CAAC;AACxE,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAGA,QAAQ,YAAYA,QAAQ,YAAY,CAAC;AACxE,YAAY,CAAC,KAAK,CACF,aAAa,CAAC,MAAM,CACpB,OAAO,CAAC,MAAM,CACd,SAAS,CAAC,CAACV,SAAS,CAAC,CACrB,CAAC,CAAC,CAACH,KAAK,CAAC,CACT,CAAC,CAAC,CAACC,MAAM,CAAC,CACV,KAAK,CAAC,CAACD,KAAK,CAAC,CACb,MAAM,CAAC,CAACC,MAAM,CAAC,CACf,GAAG,CAAC,CAACY,QAAQ,GAAG,MAAM,CAAC,CACvB,GAAG,CAAC,CAACX,GAAG,CAAC,CACT,WAAW,CACX,WAAW,CAAC,CAACW,QAAQ,GAAG,MAAM,CAAC,CAC/B,IAAIJ,KAAK,CAAC;AAE1B,QAAQ,EAAE,OAAO,CAAC;AAElB,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Image } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { CDN_URL } from \"@/shared/config\";\nimport s from \"./Picture.module.css\";\nexport const Picture = ({\n  src,\n  width,\n  height,\n  alt = \"\",\n  draggable = false,\n  className,\n  extraPath,\n  cdn = false,\n  ...props\n}) => {\n  const path = src?.split(\"/\")?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : \"\"}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return /* @__PURE__ */ jsxs(\"picture\", { className: clsx(s.picture, className), children: [\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`, type: \"image/avif\" }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`, type: \"image/webp\" }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x` }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x` }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x` }),\n    /* @__PURE__ */ jsx(Image, { fetchPriority: \"high\", loading: \"lazy\", draggable, w: width, h: height, width, height, src: fullPath + \".png\", alt, \"aria-hidden\": true, fallbackSrc: fullPath + \".png\", ...props })\n  ] });\n};\n",
      "start": 1750275033694,
      "end": 1750275033925,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Picture/index.tsx"],
        "sourcesContent": [
          "import { Image, type ImageProps } from '@mantine/core';\nimport clsx from 'clsx';\nimport { CDN_URL } from '@/shared/config';\nimport s from './Picture.module.css';\ninterface PictureProps extends ImageProps {\n  width?: number;\n  height?: number;\n  alt?: string;\n  draggable?: boolean;\n  extraPath?: string;\n  cdn?: boolean;\n}\nexport const Picture = ({\n  src,\n  width,\n  height,\n  alt = '',\n  draggable = false,\n  className,\n  extraPath,\n  cdn = false,\n  ...props\n}: PictureProps) => {\n  const path = src?.split('/')?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ''}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return <picture className={clsx(s.picture, className)}>\n            <source srcSet={`${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`} type='image/avif' />\n            <source srcSet={`${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`} type='image/webp' />\n            <source srcSet={`${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x`} />\n            <source srcSet={`${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x`} />\n            <source srcSet={`${fullPath}.png 1x, ${fullPath}@2x.png 2x`} />\n            <Image fetchPriority='high' loading='lazy' draggable={draggable} w={width} h={height} width={width} height={height} src={fullPath + '.png'} alt={alt} aria-hidden fallbackSrc={fullPath + '.png'} {...props} />\n        </picture>;\n};"
        ],
        "mappings": "AA4BS,SACG,KADH;AA5BT,SAAS,aAA8B;AACvC,OAAO,UAAU;AACjB,SAAS,eAAe;AACxB,OAAO,OAAO;AASP,aAAM,UAAU,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN,GAAG;AACL,MAAoB;AAClB,QAAM,OAAO,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE;AACnC,MAAI,WAAW,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,SAAS,KAAK,EAAE;AAC/D,MAAI,KAAK;AACP,eAAW,UAAU;AAAA,EACvB;AACA,SAAO,qBAAC,aAAQ,WAAW,KAAK,EAAE,SAAS,SAAS,GAC1C;AAAA,wBAAC,YAAO,QAAQ,GAAG,QAAQ,aAAa,QAAQ,eAAe,MAAK,cAAa;AAAA,IACjF,oBAAC,YAAO,QAAQ,GAAG,QAAQ,aAAa,QAAQ,eAAe,MAAK,cAAa;AAAA,IACjF,oBAAC,YAAO,QAAQ,GAAG,QAAQ,aAAa,QAAQ,eAAe;AAAA,IAC/D,oBAAC,YAAO,QAAQ,GAAG,QAAQ,YAAY,QAAQ,cAAc;AAAA,IAC7D,oBAAC,YAAO,QAAQ,GAAG,QAAQ,YAAY,QAAQ,cAAc;AAAA,IAC7D,oBAAC,SAAM,eAAc,QAAO,SAAQ,QAAO,WAAsB,GAAG,OAAO,GAAG,QAAQ,OAAc,QAAgB,KAAK,WAAW,QAAQ,KAAU,eAAW,MAAC,aAAa,WAAW,QAAS,GAAG,OAAO;AAAA,KACjN;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/Picture/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Image } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { CDN_URL } from \"@/shared/config\";\nimport s from \"./Picture.module.css\";\nexport const Picture = ({\n  src,\n  width,\n  height,\n  alt = \"\",\n  draggable = false,\n  className,\n  extraPath,\n  cdn = false,\n  ...props\n}) => {\n  const path = src?.split(\"/\")?.at(-1);\n  let fullPath = `${src}/${path}${extraPath ? `${extraPath}` : \"\"}`;\n  if (cdn) {\n    fullPath = CDN_URL + fullPath;\n  }\n  return /* @__PURE__ */ jsxs(\"picture\", { className: clsx(s.picture, className), children: [\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`, type: \"image/avif\" }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`, type: \"image/webp\" }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x` }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x` }),\n    /* @__PURE__ */ jsx(\"source\", { srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x` }),\n    /* @__PURE__ */ jsx(Image, { fetchPriority: \"high\", loading: \"lazy\", draggable, w: width, h: height, width, height, src: fullPath + \".png\", alt, \"aria-hidden\": true, fallbackSrc: fullPath + \".png\", ...props })\n  ] });\n};\n",
      "start": 1750275033925,
      "end": 1750275033925,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/Picture/index.tsx"],
        "names": [],
        "mappings": "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"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/ReportNavigationTemplate/desktop/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Link } from 'react-scroll';\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport { convertToUrlId } from '@/entities/Report';\n\nimport { getIconsMap } from '../../../const';\n\nimport s from '../ReportNavigationTemplate.module.css';\n\ninterface DesktopProps {\n    opened: boolean;\n    toggle: VoidFunction;\n    content: string[];\n    color: string;\n    onPageChange({ idx, title }: { idx: number; title: string }): void;\n    activeMenu: string;\n    title?: string;\n}\n\nexport const Desktop = ({ content, activeMenu, toggle, color, title, onPageChange }: DesktopProps) => {\n    const isLarge = useIsLarge();\n    const icons = getIconsMap(isLarge);\n\n    return (\n        <Menu\n            offset={16}\n            keepMounted\n            width='target'\n            classNames={s}\n            data-color={color}\n            position='bottom-end'\n            key={activeMenu}\n            closeOnItemClick\n            middlewares={{\n                flip: false,\n            }}\n        >\n            <Menu.Target>\n                <Button\n                    px={0}\n                    fullWidth\n                    classNames={s}\n                    justify='flex-start'\n                    variant='transparent'\n                    size={isLarge ? 'xl' : 'lg'}\n                    onClick={() => !isLarge && toggle()}\n                >\n                    <Group gap={0} className={s.group} justify={isLarge ? 'flex-start' : 'space-between'}>\n                        <Group\n                            mr={isLarge ? 32 : 20}\n                            gap={isLarge ? 'lg' : 'xs'}\n                            wrap='nowrap'\n                            style={{ overflow: 'hidden' }}\n                        >\n                            <Flex\n                                maw={48}\n                                mah={48}\n                                align='center'\n                                justify='center'\n                                c={`${color}.9`}\n                                bg={`${color}.1`}\n                                p={isLarge ? 'sm' : 10}\n                                className={s.iconWrapper}\n                            >\n                                {icons[title ?? activeMenu]}\n                            </Flex>\n                            <Text ta='start' truncate='end' fz={isLarge ? 24 : 20} fw='bold'>\n                                {title ?? activeMenu}\n                            </Text>\n                        </Group>\n                        <CaretDown\n                            style={{ flex: '0 1 32px' }}\n                            color='var(--mantine-color-dark-9)'\n                            size={isLarge ? 32 : 20}\n                        />\n                    </Group>\n                </Button>\n            </Menu.Target>\n            <Menu.Dropdown visibleFrom='xs' w='auto'>\n                {content?.map((title, idx) => (\n                    <Menu.Item\n                        key={title}\n                        bg={activeMenu === title ? `${color}.0` : 'transparent'}\n                        leftSection={\n                            <Paper p={isLarge ? 10 : 'xxs'} radius='xs' bg={`${color}.1`}>\n                                <Center c={`${color}.9`} className={s.dropdownIcon}>\n                                    {icons[title]}\n                                </Center>\n                            </Paper>\n                        }\n                        onClick={() => onPageChange({ idx, title })}\n                    >\n                        <Link spy offset={-100} to={convertToUrlId(title)} onClick={() => onPageChange({ idx, title })}>\n                            <Text style={{ pointerEvents: 'none' }} span inline fz={14} fw='bold'>\n                                {title}\n                            </Text>\n                        </Link>\n                    </Menu.Item>\n                ))}\n            </Menu.Dropdown>\n        </Menu>\n    );\n};\n",
      "start": 1750278467405,
      "end": 1750278467435,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Link } from 'react-scroll';\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport { convertToUrlId } from '@/entities/Report';\nimport { getIconsMap } from '../../../const';\nimport s from '../ReportNavigationTemplate.module.css';\ninterface DesktopProps {\n  opened: boolean;\n  toggle: VoidFunction;\n  content: string[];\n  color: string;\n  onPageChange({\n    idx,\n    title\n  }: {\n    idx: number;\n    title: string;\n  }): void;\n  activeMenu: string;\n  title?: string;\n}\nexport const Desktop = ({\n  content,\n  activeMenu,\n  toggle,\n  color,\n  title,\n  onPageChange\n}: DesktopProps) => {\n  const isLarge = useIsLarge();\n  const icons = getIconsMap(isLarge);\n  return <Menu offset={16} keepMounted width='target' classNames={s} data-color={color} position='bottom-end' key={activeMenu} closeOnItemClick middlewares={{\n    flip: false\n  }}>\n            <Menu.Target>\n                <Button px={0} fullWidth classNames={s} justify='flex-start' variant='transparent' size={isLarge ? 'xl' : 'lg'} onClick={() => !isLarge && toggle()}>\n                    <Group gap={0} className={s.group} justify={isLarge ? 'flex-start' : 'space-between'}>\n                        <Group mr={isLarge ? 32 : 20} gap={isLarge ? 'lg' : 'xs'} wrap='nowrap' style={{\n            overflow: 'hidden'\n          }}>\n                            <Flex maw={48} mah={48} align='center' justify='center' c={`${color}.9`} bg={`${color}.1`} p={isLarge ? 'sm' : 10} className={s.iconWrapper}>\n                                {icons[title ?? activeMenu]}\n                            </Flex>\n                            <Text ta='start' truncate='end' fz={isLarge ? 24 : 20} fw='bold'>\n                                {title ?? activeMenu}\n                            </Text>\n                        </Group>\n                        <CaretDown style={{\n            flex: '0 1 32px'\n          }} color='var(--mantine-color-dark-9)' size={isLarge ? 32 : 20} />\n                    </Group>\n                </Button>\n            </Menu.Target>\n            <Menu.Dropdown visibleFrom='xs' w='auto'>\n                {content?.map((title, idx) => <Menu.Item key={title} bg={activeMenu === title ? `${color}.0` : 'transparent'} leftSection={<Paper p={isLarge ? 10 : 'xxs'} radius='xs' bg={`${color}.1`}>\n                                <Center c={`${color}.9`} className={s.dropdownIcon}>\n                                    {icons[title]}\n                                </Center>\n                            </Paper>} onClick={() => onPageChange({\n        idx,\n        title\n      })}>\n                        <Link spy offset={-100} to={convertToUrlId(title)} onClick={() => onPageChange({\n          idx,\n          title\n        })}>\n                            <Text style={{\n            pointerEvents: 'none'\n          }} span inline fz={14} fw='bold'>\n                                {title}\n                            </Text>\n                        </Link>\n                    </Menu.Item>)}\n            </Menu.Dropdown>\n        </Menu>;\n};",
      "start": 1750278467435,
      "end": 1750278467437,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Link",
          "Button",
          "Center",
          "Flex",
          "Group",
          "Menu",
          "Paper",
          "Text",
          "CaretDown",
          "useIsLarge",
          "convertToUrlId",
          "getIconsMap",
          "s",
          "DesktopProps",
          "opened",
          "toggle",
          "VoidFunction",
          "content",
          "color",
          "onPageChange",
          "idx",
          "title",
          "activeMenu",
          "Desktop",
          "isLarge",
          "icons",
          "flip",
          "group",
          "overflow",
          "iconWrapper",
          "flex",
          "map",
          "dropdownIcon",
          "pointerEvents"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/ReportNavigationTemplate/desktop/index.tsx"
        ],
        "sourcesContent": [
          "import { Link } from 'react-scroll';\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport { convertToUrlId } from '@/entities/Report';\n\nimport { getIconsMap } from '../../../const';\n\nimport s from '../ReportNavigationTemplate.module.css';\n\ninterface DesktopProps {\n    opened: boolean;\n    toggle: VoidFunction;\n    content: string[];\n    color: string;\n    onPageChange({ idx, title }: { idx: number; title: string }): void;\n    activeMenu: string;\n    title?: string;\n}\n\nexport const Desktop = ({ content, activeMenu, toggle, color, title, onPageChange }: DesktopProps) => {\n    const isLarge = useIsLarge();\n    const icons = getIconsMap(isLarge);\n\n    return (\n        <Menu\n            offset={16}\n            keepMounted\n            width='target'\n            classNames={s}\n            data-color={color}\n            position='bottom-end'\n            key={activeMenu}\n            closeOnItemClick\n            middlewares={{\n                flip: false,\n            }}\n        >\n            <Menu.Target>\n                <Button\n                    px={0}\n                    fullWidth\n                    classNames={s}\n                    justify='flex-start'\n                    variant='transparent'\n                    size={isLarge ? 'xl' : 'lg'}\n                    onClick={() => !isLarge && toggle()}\n                >\n                    <Group gap={0} className={s.group} justify={isLarge ? 'flex-start' : 'space-between'}>\n                        <Group\n                            mr={isLarge ? 32 : 20}\n                            gap={isLarge ? 'lg' : 'xs'}\n                            wrap='nowrap'\n                            style={{ overflow: 'hidden' }}\n                        >\n                            <Flex\n                                maw={48}\n                                mah={48}\n                                align='center'\n                                justify='center'\n                                c={`${color}.9`}\n                                bg={`${color}.1`}\n                                p={isLarge ? 'sm' : 10}\n                                className={s.iconWrapper}\n                            >\n                                {icons[title ?? activeMenu]}\n                            </Flex>\n                            <Text ta='start' truncate='end' fz={isLarge ? 24 : 20} fw='bold'>\n                                {title ?? activeMenu}\n                            </Text>\n                        </Group>\n                        <CaretDown\n                            style={{ flex: '0 1 32px' }}\n                            color='var(--mantine-color-dark-9)'\n                            size={isLarge ? 32 : 20}\n                        />\n                    </Group>\n                </Button>\n            </Menu.Target>\n            <Menu.Dropdown visibleFrom='xs' w='auto'>\n                {content?.map((title, idx) => (\n                    <Menu.Item\n                        key={title}\n                        bg={activeMenu === title ? `${color}.0` : 'transparent'}\n                        leftSection={\n                            <Paper p={isLarge ? 10 : 'xxs'} radius='xs' bg={`${color}.1`}>\n                                <Center c={`${color}.9`} className={s.dropdownIcon}>\n                                    {icons[title]}\n                                </Center>\n                            </Paper>\n                        }\n                        onClick={() => onPageChange({ idx, title })}\n                    >\n                        <Link spy offset={-100} to={convertToUrlId(title)} onClick={() => onPageChange({ idx, title })}>\n                            <Text style={{ pointerEvents: 'none' }} span inline fz={14} fw='bold'>\n                                {title}\n                            </Text>\n                        </Link>\n                    </Menu.Item>\n                ))}\n            </Menu.Dropdown>\n        </Menu>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Link } from \"react-scroll\";\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from \"@mantine/core\";\nimport { CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { convertToUrlId } from \"@/entities/Report\";\nimport { getIconsMap } from \"../../../const\";\nimport s from \"../ReportNavigationTemplate.module.css\";\nexport const Desktop = ({\n  content,\n  activeMenu,\n  toggle,\n  color,\n  title,\n  onPageChange\n}) => {\n  const isLarge = useIsLarge();\n  const icons = getIconsMap(isLarge);\n  return /* @__PURE__ */ jsxs(Menu, { offset: 16, keepMounted: true, width: \"target\", classNames: s, \"data-color\": color, position: \"bottom-end\", closeOnItemClick: true, middlewares: {\n    flip: false\n  }, children: [\n    /* @__PURE__ */ jsx(Menu.Target, { children: /* @__PURE__ */ jsx(Button, { px: 0, fullWidth: true, classNames: s, justify: \"flex-start\", variant: \"transparent\", size: isLarge ? \"xl\" : \"lg\", onClick: () => !isLarge && toggle(), children: /* @__PURE__ */ jsxs(Group, { gap: 0, className: s.group, justify: isLarge ? \"flex-start\" : \"space-between\", children: [\n      /* @__PURE__ */ jsxs(Group, { mr: isLarge ? 32 : 20, gap: isLarge ? \"lg\" : \"xs\", wrap: \"nowrap\", style: {\n        overflow: \"hidden\"\n      }, children: [\n        /* @__PURE__ */ jsx(Flex, { maw: 48, mah: 48, align: \"center\", justify: \"center\", c: `${color}.9`, bg: `${color}.1`, p: isLarge ? \"sm\" : 10, className: s.iconWrapper, children: icons[title ?? activeMenu] }),\n        /* @__PURE__ */ jsx(Text, { ta: \"start\", truncate: \"end\", fz: isLarge ? 24 : 20, fw: \"bold\", children: title ?? activeMenu })\n      ] }),\n      /* @__PURE__ */ jsx(CaretDown, { style: {\n        flex: \"0 1 32px\"\n      }, color: \"var(--mantine-color-dark-9)\", size: isLarge ? 32 : 20 })\n    ] }) }) }),\n    /* @__PURE__ */ jsx(Menu.Dropdown, { visibleFrom: \"xs\", w: \"auto\", children: content?.map((title2, idx) => /* @__PURE__ */ jsx(Menu.Item, { bg: activeMenu === title2 ? `${color}.0` : \"transparent\", leftSection: /* @__PURE__ */ jsx(Paper, { p: isLarge ? 10 : \"xxs\", radius: \"xs\", bg: `${color}.1`, children: /* @__PURE__ */ jsx(Center, { c: `${color}.9`, className: s.dropdownIcon, children: icons[title2] }) }), onClick: () => onPageChange({\n      idx,\n      title: title2\n    }), children: /* @__PURE__ */ jsx(Link, { spy: true, offset: -100, to: convertToUrlId(title2), onClick: () => onPageChange({\n      idx,\n      title: title2\n    }), children: /* @__PURE__ */ jsx(Text, { style: {\n      pointerEvents: \"none\"\n    }, span: true, inline: true, fz: 14, fw: \"bold\", children: title2 }) }) }, title2)) })\n  ] }, activeMenu);\n};\n",
      "start": 1750278467437,
      "end": 1750278467572,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/ReportNavigationTemplate/desktop/index.tsx"
        ],
        "sourcesContent": [
          "import { Link } from 'react-scroll';\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport { convertToUrlId } from '@/entities/Report';\nimport { getIconsMap } from '../../../const';\nimport s from '../ReportNavigationTemplate.module.css';\ninterface DesktopProps {\n  opened: boolean;\n  toggle: VoidFunction;\n  content: string[];\n  color: string;\n  onPageChange({\n    idx,\n    title\n  }: {\n    idx: number;\n    title: string;\n  }): void;\n  activeMenu: string;\n  title?: string;\n}\nexport const Desktop = ({\n  content,\n  activeMenu,\n  toggle,\n  color,\n  title,\n  onPageChange\n}: DesktopProps) => {\n  const isLarge = useIsLarge();\n  const icons = getIconsMap(isLarge);\n  return <Menu offset={16} keepMounted width='target' classNames={s} data-color={color} position='bottom-end' key={activeMenu} closeOnItemClick middlewares={{\n    flip: false\n  }}>\n            <Menu.Target>\n                <Button px={0} fullWidth classNames={s} justify='flex-start' variant='transparent' size={isLarge ? 'xl' : 'lg'} onClick={() => !isLarge && toggle()}>\n                    <Group gap={0} className={s.group} justify={isLarge ? 'flex-start' : 'space-between'}>\n                        <Group mr={isLarge ? 32 : 20} gap={isLarge ? 'lg' : 'xs'} wrap='nowrap' style={{\n            overflow: 'hidden'\n          }}>\n                            <Flex maw={48} mah={48} align='center' justify='center' c={`${color}.9`} bg={`${color}.1`} p={isLarge ? 'sm' : 10} className={s.iconWrapper}>\n                                {icons[title ?? activeMenu]}\n                            </Flex>\n                            <Text ta='start' truncate='end' fz={isLarge ? 24 : 20} fw='bold'>\n                                {title ?? activeMenu}\n                            </Text>\n                        </Group>\n                        <CaretDown style={{\n            flex: '0 1 32px'\n          }} color='var(--mantine-color-dark-9)' size={isLarge ? 32 : 20} />\n                    </Group>\n                </Button>\n            </Menu.Target>\n            <Menu.Dropdown visibleFrom='xs' w='auto'>\n                {content?.map((title, idx) => <Menu.Item key={title} bg={activeMenu === title ? `${color}.0` : 'transparent'} leftSection={<Paper p={isLarge ? 10 : 'xxs'} radius='xs' bg={`${color}.1`}>\n                                <Center c={`${color}.9`} className={s.dropdownIcon}>\n                                    {icons[title]}\n                                </Center>\n                            </Paper>} onClick={() => onPageChange({\n        idx,\n        title\n      })}>\n                        <Link spy offset={-100} to={convertToUrlId(title)} onClick={() => onPageChange({\n          idx,\n          title\n        })}>\n                            <Text style={{\n            pointerEvents: 'none'\n          }} span inline fz={14} fw='bold'>\n                                {title}\n                            </Text>\n                        </Link>\n                    </Menu.Item>)}\n            </Menu.Dropdown>\n        </Menu>;\n};"
        ],
        "mappings": "AAsCwB,SAGI,KAHJ;AAtCxB,SAAS,YAAY;AACrB,SAAS,QAAQ,QAAQ,MAAM,OAAO,MAAM,OAAO,YAAY;AAC/D,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB;AAC5B,OAAO,OAAO;AAgBP,aAAM,UAAU,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAoB;AAClB,QAAM,UAAU,WAAW;AAC3B,QAAM,QAAQ,YAAY,OAAO;AACjC,SAAO,qBAAC,QAAK,QAAQ,IAAI,aAAW,MAAC,OAAM,UAAS,YAAY,GAAG,cAAY,OAAO,UAAS,cAA8B,kBAAgB,MAAC,aAAa;AAAA,IACzJ,MAAM;AAAA,EACR,GACU;AAAA,wBAAC,KAAK,QAAL,EACG,8BAAC,UAAO,IAAI,GAAG,WAAS,MAAC,YAAY,GAAG,SAAQ,cAAa,SAAQ,eAAc,MAAM,UAAU,OAAO,MAAM,SAAS,MAAM,CAAC,WAAW,OAAO,GAC9I,+BAAC,SAAM,KAAK,GAAG,WAAW,EAAE,OAAO,SAAS,UAAU,eAAe,iBACjE;AAAA,2BAAC,SAAM,IAAI,UAAU,KAAK,IAAI,KAAK,UAAU,OAAO,MAAM,MAAK,UAAS,OAAO;AAAA,QAC3F,UAAU;AAAA,MACZ,GACkB;AAAA,4BAAC,QAAK,KAAK,IAAI,KAAK,IAAI,OAAM,UAAS,SAAQ,UAAS,GAAG,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,GAAG,UAAU,OAAO,IAAI,WAAW,EAAE,aAC3H,gBAAM,SAAS,UAAU,GAC9B;AAAA,QACA,oBAAC,QAAK,IAAG,SAAQ,UAAS,OAAM,IAAI,UAAU,KAAK,IAAI,IAAG,QACrD,mBAAS,YACd;AAAA,SACJ;AAAA,MACA,oBAAC,aAAU,OAAO;AAAA,QAC9B,MAAM;AAAA,MACR,GAAG,OAAM,+BAA8B,MAAM,UAAU,KAAK,IAAI;AAAA,OACtD,GACJ,GACJ;AAAA,IACA,oBAAC,KAAK,UAAL,EAAc,aAAY,MAAK,GAAE,QAC7B,mBAAS,IAAI,CAACA,QAAO,QAAQ,oBAAC,KAAK,MAAL,EAAsB,IAAI,eAAeA,SAAQ,GAAG,KAAK,OAAO,eAAe,aAAa,oBAAC,SAAM,GAAG,UAAU,KAAK,OAAO,QAAO,MAAK,IAAI,GAAG,KAAK,MACnK,8BAAC,UAAO,GAAG,GAAG,KAAK,MAAM,WAAW,EAAE,cACjC,gBAAMA,MAAK,GAChB,GACJ,GAAU,SAAS,MAAM,aAAa;AAAA,MAC1D;AAAA,MACA,OAAAA;AAAA,IACF,CAAC,GACiB,8BAAC,QAAK,KAAG,MAAC,QAAQ,MAAM,IAAI,eAAeA,MAAK,GAAG,SAAS,MAAM,aAAa;AAAA,MAC7F;AAAA,MACA,OAAAA;AAAA,IACF,CAAC,GACmB,8BAAC,QAAK,OAAO;AAAA,MAC7B,eAAe;AAAA,IACjB,GAAG,MAAI,MAAC,QAAM,MAAC,IAAI,IAAI,IAAG,QACH,UAAAA,QACL,GACJ,KAjBsCA,MAkB1C,CAAY,GACpB;AAAA,OA1CuG,UA2C3G;AACR;",
        "names": ["title"]
      }
    },
    {
      "name": "vite:worker",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Report/ui/ReportNavigationTemplate/desktop/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Link } from \"react-scroll\";\nimport { Button, Center, Flex, Group, Menu, Paper, Text } from \"@mantine/core\";\nimport { CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { convertToUrlId } from \"@/entities/Report\";\nimport { getIconsMap } from \"../../../const\";\nimport s from \"../ReportNavigationTemplate.module.css\";\nexport const Desktop = ({\n  content,\n  activeMenu,\n  toggle,\n  color,\n  title,\n  onPageChange\n}) => {\n  const isLarge = useIsLarge();\n  const icons = getIconsMap(isLarge);\n  return /* @__PURE__ */ jsxs(Menu, { offset: 16, keepMounted: true, width: \"target\", classNames: s, \"data-color\": color, position: \"bottom-end\", closeOnItemClick: true, middlewares: {\n    flip: false\n  }, children: [\n    /* @__PURE__ */ jsx(Menu.Target, { children: /* @__PURE__ */ jsx(Button, { px: 0, fullWidth: true, classNames: s, justify: \"flex-start\", variant: \"transparent\", size: isLarge ? \"xl\" : \"lg\", onClick: () => !isLarge && toggle(), children: /* @__PURE__ */ jsxs(Group, { gap: 0, className: s.group, justify: isLarge ? \"flex-start\" : \"space-between\", children: [\n      /* @__PURE__ */ jsxs(Group, { mr: isLarge ? 32 : 20, gap: isLarge ? \"lg\" : \"xs\", wrap: \"nowrap\", style: {\n        overflow: \"hidden\"\n      }, children: [\n        /* @__PURE__ */ jsx(Flex, { maw: 48, mah: 48, align: \"center\", justify: \"center\", c: `${color}.9`, bg: `${color}.1`, p: isLarge ? \"sm\" : 10, className: s.iconWrapper, children: icons[title ?? activeMenu] }),\n        /* @__PURE__ */ jsx(Text, { ta: \"start\", truncate: \"end\", fz: isLarge ? 24 : 20, fw: \"bold\", children: title ?? activeMenu })\n      ] }),\n      /* @__PURE__ */ jsx(CaretDown, { style: {\n        flex: \"0 1 32px\"\n      }, color: \"var(--mantine-color-dark-9)\", size: isLarge ? 32 : 20 })\n    ] }) }) }),\n    /* @__PURE__ */ jsx(Menu.Dropdown, { visibleFrom: \"xs\", w: \"auto\", children: content?.map((title2, idx) => /* @__PURE__ */ jsx(Menu.Item, { bg: activeMenu === title2 ? `${color}.0` : \"transparent\", leftSection: /* @__PURE__ */ jsx(Paper, { p: isLarge ? 10 : \"xxs\", radius: \"xs\", bg: `${color}.1`, children: /* @__PURE__ */ jsx(Center, { c: `${color}.9`, className: s.dropdownIcon, children: icons[title2] }) }), onClick: () => onPageChange({\n      idx,\n      title: title2\n    }), children: /* @__PURE__ */ jsx(Link, { spy: true, offset: -100, to: convertToUrlId(title2), onClick: () => onPageChange({\n      idx,\n      title: title2\n    }), children: /* @__PURE__ */ jsx(Text, { style: {\n      pointerEvents: \"none\"\n    }, span: true, inline: true, fz: 14, fw: \"bold\", children: title2 }) }) }, title2)) })\n  ] }, activeMenu);\n};\n",
      "start": 1750278467572,
      "end": 1750278467572,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/ui/ReportNavigationTemplate/desktop/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACltD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfxzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/IconList/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { List, Text, ThemeIcon } from '@mantine/core';\nimport { CheckCircle } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport type { ListItem } from '../../types';\n\nimport s from './IconList.module.css';\n\ninterface IconListProps {\n    items: ListItem[];\n    color?: string;\n}\n\nexport const IconList = ({ items, color }: IconListProps) => {\n    const isLarge = useIsLarge();\n\n    return (\n        <List classNames={s} data-type='IconList'>\n            {items.map((item) => (\n                <List.Item\n                    icon={\n                        <ThemeIcon color='transparent' c={`${color}.9`} size={isLarge ? 32 : 24}>\n                            <CheckCircle size={isLarge ? 32 : 24} />\n                        </ThemeIcon>\n                    }\n                    key={`${item.type}_${item.text}`}\n                    mb='md'\n                >\n                    <Text fz={isLarge ? 22 : 18} lh={isLarge ? '28px' : '21px'}>\n                        {item.text}\n                    </Text>\n                </List.Item>\n            ))}\n        </List>\n    );\n};\n",
      "start": 1750105187722,
      "end": 1750105187776,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { List, Text, ThemeIcon } from '@mantine/core';\nimport { CheckCircle } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport type { ListItem } from '../../types';\nimport s from './IconList.module.css';\ninterface IconListProps {\n  items: ListItem[];\n  color?: string;\n}\nexport const IconList = ({\n  items,\n  color\n}: IconListProps) => {\n  const isLarge = useIsLarge();\n  return <List classNames={s} data-type='IconList'>\n            {items.map(item => <List.Item icon={<ThemeIcon color='transparent' c={`${color}.9`} size={isLarge ? 32 : 24}>\n                            <CheckCircle size={isLarge ? 32 : 24} />\n                        </ThemeIcon>} key={`${item.type}_${item.text}`} mb='md'>\n                    <Text fz={isLarge ? 22 : 18} lh={isLarge ? '28px' : '21px'}>\n                        {item.text}\n                    </Text>\n                </List.Item>)}\n        </List>;\n};",
      "start": 1750105187776,
      "end": 1750105187778,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "List",
          "Text",
          "ThemeIcon",
          "CheckCircle",
          "useIsLarge",
          "ListItem",
          "s",
          "IconListProps",
          "items",
          "color",
          "IconList",
          "isLarge",
          "map",
          "item",
          "type",
          "text"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/IconList/index.tsx"
        ],
        "sourcesContent": [
          "import { List, Text, ThemeIcon } from '@mantine/core';\nimport { CheckCircle } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport type { ListItem } from '../../types';\n\nimport s from './IconList.module.css';\n\ninterface IconListProps {\n    items: ListItem[];\n    color?: string;\n}\n\nexport const IconList = ({ items, color }: IconListProps) => {\n    const isLarge = useIsLarge();\n\n    return (\n        <List classNames={s} data-type='IconList'>\n            {items.map((item) => (\n                <List.Item\n                    icon={\n                        <ThemeIcon color='transparent' c={`${color}.9`} size={isLarge ? 32 : 24}>\n                            <CheckCircle size={isLarge ? 32 : 24} />\n                        </ThemeIcon>\n                    }\n                    key={`${item.type}_${item.text}`}\n                    mb='md'\n                >\n                    <Text fz={isLarge ? 22 : 18} lh={isLarge ? '28px' : '21px'}>\n                        {item.text}\n                    </Text>\n                </List.Item>\n            ))}\n        </List>\n    );\n};\n"
        ],
        "mappings": "AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;AACrD,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,SAASC,UAAU,QAAQ,cAAc;AAEzC,cAAcC,QAAQ,QAAQ,aAAa;AAE3C,OAAOC,CAAC,MAAM,uBAAuB;AAErC,UAAUC,aAAa,CAAC;EACpBC,KAAK,EAAEH,QAAQ,EAAE;EACjBI,KAAK,CAAC,EAAE,MAAM;AAClB;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEF,KAAK;EAAEC;AAAqB,CAAd,EAAEF,aAAa,KAAK;EACzD,MAAMI,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5B,OACI,CAAC,IAAI,CAAC,UAAU,CAAC,CAACE,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU;AACjD,YAAY,CAACE,KAAK,CAACI,GAAG,CAAEC,IAAI,IACZ,CAAC,IAAI,CAAC,IAAI,CACN,IAAI,CAAC,CACD,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAGJ,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAACE,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;AAChG,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,CAACA,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;AACjE,wBAAwB,EAAE,SAAS,CACf,CAAC,CACD,GAAG,CAAC,CAAC,GAAGE,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,IAAI,EAAE,CAAC,CACjC,EAAE,CAAC,IAAI;AAE3B,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAACJ,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAACA,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;AAC/E,wBAAwB,CAACE,IAAI,CAACE,IAAI;AAClC,oBAAoB,EAAE,IAAI;AAC1B,gBAAgB,EAAE,IAAI,CAAC,IAAI,CACd,CAAC;AACd,QAAQ,EAAE,IAAI,CAAC;AAEf,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { List, Text, ThemeIcon } from \"@mantine/core\";\nimport { CheckCircle } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport s from \"./IconList.module.css\";\nexport const IconList = ({\n  items,\n  color\n}) => {\n  const isLarge = useIsLarge();\n  return /* @__PURE__ */ jsx(List, { classNames: s, \"data-type\": \"IconList\", children: items.map((item) => /* @__PURE__ */ jsx(List.Item, { icon: /* @__PURE__ */ jsx(ThemeIcon, { color: \"transparent\", c: `${color}.9`, size: isLarge ? 32 : 24, children: /* @__PURE__ */ jsx(CheckCircle, { size: isLarge ? 32 : 24 }) }), mb: \"md\", children: /* @__PURE__ */ jsx(Text, { fz: isLarge ? 22 : 18, lh: isLarge ? \"28px\" : \"21px\", children: item.text }) }, `${item.type}_${item.text}`)) });\n};\n",
      "start": 1750105187778,
      "end": 1750105188028,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/IconList/index.tsx"
        ],
        "sourcesContent": [
          "import { List, Text, ThemeIcon } from '@mantine/core';\nimport { CheckCircle } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport type { ListItem } from '../../types';\nimport s from './IconList.module.css';\ninterface IconListProps {\n  items: ListItem[];\n  color?: string;\n}\nexport const IconList = ({\n  items,\n  color\n}: IconListProps) => {\n  const isLarge = useIsLarge();\n  return <List classNames={s} data-type='IconList'>\n            {items.map(item => <List.Item icon={<ThemeIcon color='transparent' c={`${color}.9`} size={isLarge ? 32 : 24}>\n                            <CheckCircle size={isLarge ? 32 : 24} />\n                        </ThemeIcon>} key={`${item.type}_${item.text}`} mb='md'>\n                    <Text fz={isLarge ? 22 : 18} lh={isLarge ? '28px' : '21px'}>\n                        {item.text}\n                    </Text>\n                </List.Item>)}\n        </List>;\n};"
        ],
        "mappings": "AAgB4B;AAhB5B,SAAS,MAAM,MAAM,iBAAiB;AACtC,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAE3B,OAAO,OAAO;AAKP,aAAM,WAAW,CAAC;AAAA,EACvB;AAAA,EACA;AACF,MAAqB;AACnB,QAAM,UAAU,WAAW;AAC3B,SAAO,oBAAC,QAAK,YAAY,GAAG,aAAU,YAC3B,gBAAM,IAAI,UAAQ,oBAAC,KAAK,MAAL,EAAU,MAAM,oBAAC,aAAU,OAAM,eAAc,GAAG,GAAG,KAAK,MAAM,MAAM,UAAU,KAAK,IACzF,8BAAC,eAAY,MAAM,UAAU,KAAK,IAAI,GAC1C,GAAgD,IAAG,MACvD,8BAAC,QAAK,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,SAAS,QAC/C,eAAK,MACV,KAHuB,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,EAIpD,CAAY,GACpB;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750105188028,
      "end": 1750105188028,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Report/ui/IconList/index.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { List, Text, ThemeIcon } from \"@mantine/core\";\nimport { CheckCircle } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport s from \"./IconList.module.css\";\nexport const IconList = ({\n  items,\n  color\n}) => {\n  const isLarge = useIsLarge();\n  return /* @__PURE__ */ jsx(List, { classNames: s, \"data-type\": \"IconList\", children: items.map((item) => /* @__PURE__ */ jsx(List.Item, { icon: /* @__PURE__ */ jsx(ThemeIcon, { color: \"transparent\", c: `${color}.9`, size: isLarge ? 32 : 24, children: /* @__PURE__ */ jsx(CheckCircle, { size: isLarge ? 32 : 24 }) }), mb: \"md\", children: /* @__PURE__ */ jsx(Text, { fz: isLarge ? 22 : 18, lh: isLarge ? \"28px\" : \"21px\", children: item.text }) }, `${item.type}_${item.text}`)) });\n};\n",
      "start": 1750105188028,
      "end": 1750105188029,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "src/entities/Report/ui/IconList/index.tsx"
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/d,CAAC;"
      }
    }
  ]
}

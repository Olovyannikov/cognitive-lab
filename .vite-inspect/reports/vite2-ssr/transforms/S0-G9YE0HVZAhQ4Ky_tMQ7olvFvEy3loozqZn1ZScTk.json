{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/ReportPagination/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Container, Flex, Group, Pagination, Text } from '@mantine/core';\nimport { useWindowScroll } from '@mantine/hooks';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport { useStoreMap, useUnit } from 'effector-react';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from '@/entities/Report';\n\nimport s from './ReportPagination.module.css';\n\nexport const ReportPagination = () => {\n    const isLarge = useIsLarge();\n\n    const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n    const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n\n    const content = useStoreMap({\n        store: getFullReportQuery.$data,\n        keys: ['title', 'content', page],\n        fn: (content) => content?.content?.map(({ title }) => ({ title, mbti: content.mbti_type })),\n    });\n\n    const icons = getIconsMap(isLarge);\n    const titlePrev = content?.[page - 2]?.title ?? '';\n    const titleNext = content?.[page]?.title ?? '';\n    const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n    const [_, scrollTo] = useWindowScroll();\n\n    if (!content) return null;\n\n    return (\n        <Pagination.Root\n            className={s.root}\n            value={page}\n            onChange={(page) => {\n                onChangePage(page);\n                setTimeout(\n                    () =>\n                        scrollTo({\n                            x: 0,\n                            y: 0,\n                        }),\n                    0\n                );\n            }}\n            total={content?.length}\n        >\n            <Container>\n                <Group className={s.grid}>\n                    {!isFirstPage && (\n                        <Pagination.Previous\n                            className={s.prev}\n                            icon={() => (\n                                <Group className={s.controlWrapper} align='center' wrap='nowrap'>\n                                    <ArrowLeft color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                                    <Group wrap='nowrap'>\n                                        <Flex\n                                            align='center'\n                                            justify='center'\n                                            className={s.paper}\n                                            p={isLarge ? 'sm' : 'xs'}\n                                            bg={`${color}.0`}\n                                            c={`${color}.9`}\n                                        >\n                                            {icons[titlePrev]}\n                                        </Flex>\n                                        <Text hidden={!isLarge} className={s.text}>\n                                            {titlePrev ?? ''}\n                                        </Text>\n                                    </Group>\n                                </Group>\n                            )}\n                        />\n                    )}\n                    <Pagination.Next\n                        className={s.next}\n                        hidden={isLastPage}\n                        icon={() => (\n                            <Group align='center' wrap='nowrap' className={s.controlWrapper} data-last>\n                                <Group className={s.nextGroup} wrap='nowrap'>\n                                    <Flex\n                                        data-last\n                                        align='center'\n                                        justify='center'\n                                        className={s.paper}\n                                        p={isLarge ? 'sm' : 'xs'}\n                                        bg={`${color}.0`}\n                                        c={`${color}.9`}\n                                    >\n                                        {icons[titleNext]}\n                                    </Flex>\n                                    <Text hidden={!isLarge} className={s.text}>\n                                        {content?.[page]?.title ?? ''}\n                                    </Text>\n                                </Group>\n                                <ArrowRight color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                            </Group>\n                        )}\n                    />\n                </Group>\n            </Container>\n        </Pagination.Root>\n    );\n};\n",
      "start": 1750184198966,
      "end": 1750184199010,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Container, Flex, Group, Pagination, Text } from '@mantine/core';\nimport { useWindowScroll } from '@mantine/hooks';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport { useStoreMap, useUnit } from 'effector-react';\nimport { useIsLarge } from '@/shared/lib';\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from '@/entities/Report';\nimport s from './ReportPagination.module.css';\nexport const ReportPagination = () => {\n  const isLarge = useIsLarge();\n  const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n  const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: ['title', 'content', page],\n    fn: content => content?.content?.map(({\n      title\n    }) => ({\n      title,\n      mbti: content.mbti_type\n    }))\n  });\n  const icons = getIconsMap(isLarge);\n  const titlePrev = content?.[page - 2]?.title ?? '';\n  const titleNext = content?.[page]?.title ?? '';\n  const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n  const [_, scrollTo] = useWindowScroll();\n  if (!content) return null;\n  return <Pagination.Root className={s.root} value={page} onChange={page => {\n    onChangePage(page);\n    setTimeout(() => scrollTo({\n      x: 0,\n      y: 0\n    }), 0);\n  }} total={content?.length}>\n            <Container>\n                <Group className={s.grid}>\n                    {!isFirstPage && <Pagination.Previous className={s.prev} icon={() => <Group className={s.controlWrapper} align='center' wrap='nowrap'>\n                                    <ArrowLeft color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                                    <Group wrap='nowrap'>\n                                        <Flex align='center' justify='center' className={s.paper} p={isLarge ? 'sm' : 'xs'} bg={`${color}.0`} c={`${color}.9`}>\n                                            {icons[titlePrev]}\n                                        </Flex>\n                                        <Text hidden={!isLarge} className={s.text}>\n                                            {titlePrev ?? ''}\n                                        </Text>\n                                    </Group>\n                                </Group>} />}\n                    <Pagination.Next className={s.next} hidden={isLastPage} icon={() => <Group align='center' wrap='nowrap' className={s.controlWrapper} data-last>\n                                <Group className={s.nextGroup} wrap='nowrap'>\n                                    <Flex data-last align='center' justify='center' className={s.paper} p={isLarge ? 'sm' : 'xs'} bg={`${color}.0`} c={`${color}.9`}>\n                                        {icons[titleNext]}\n                                    </Flex>\n                                    <Text hidden={!isLarge} className={s.text}>\n                                        {content?.[page]?.title ?? ''}\n                                    </Text>\n                                </Group>\n                                <ArrowRight color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                            </Group>} />\n                </Group>\n            </Container>\n        </Pagination.Root>;\n};",
      "start": 1750184199010,
      "end": 1750184199013,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Container",
          "Flex",
          "Group",
          "Pagination",
          "Text",
          "useWindowScroll",
          "ArrowLeft",
          "ArrowRight",
          "useStoreMap",
          "useUnit",
          "useIsLarge",
          "getFullReportQuery",
          "getIconsMap",
          "ReportModel",
          "TYPE_TO_COLOR_MAP",
          "s",
          "ReportPagination",
          "isLarge",
          "page",
          "onChangePage",
          "$currentPage",
          "currentPageChanged",
          "isFirstPage",
          "isLastPage",
          "$isFirstPage",
          "$isLastPage",
          "content",
          "store",
          "$data",
          "keys",
          "fn",
          "map",
          "title",
          "mbti",
          "mbti_type",
          "icons",
          "titlePrev",
          "titleNext",
          "color",
          "_",
          "scrollTo",
          "root",
          "setTimeout",
          "x",
          "y",
          "length",
          "grid",
          "prev",
          "controlWrapper",
          "paper",
          "text",
          "next",
          "nextGroup"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/ReportPagination/index.tsx"],
        "sourcesContent": [
          "import { Container, Flex, Group, Pagination, Text } from '@mantine/core';\nimport { useWindowScroll } from '@mantine/hooks';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport { useStoreMap, useUnit } from 'effector-react';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from '@/entities/Report';\n\nimport s from './ReportPagination.module.css';\n\nexport const ReportPagination = () => {\n    const isLarge = useIsLarge();\n\n    const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n    const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n\n    const content = useStoreMap({\n        store: getFullReportQuery.$data,\n        keys: ['title', 'content', page],\n        fn: (content) => content?.content?.map(({ title }) => ({ title, mbti: content.mbti_type })),\n    });\n\n    const icons = getIconsMap(isLarge);\n    const titlePrev = content?.[page - 2]?.title ?? '';\n    const titleNext = content?.[page]?.title ?? '';\n    const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n    const [_, scrollTo] = useWindowScroll();\n\n    if (!content) return null;\n\n    return (\n        <Pagination.Root\n            className={s.root}\n            value={page}\n            onChange={(page) => {\n                onChangePage(page);\n                setTimeout(\n                    () =>\n                        scrollTo({\n                            x: 0,\n                            y: 0,\n                        }),\n                    0\n                );\n            }}\n            total={content?.length}\n        >\n            <Container>\n                <Group className={s.grid}>\n                    {!isFirstPage && (\n                        <Pagination.Previous\n                            className={s.prev}\n                            icon={() => (\n                                <Group className={s.controlWrapper} align='center' wrap='nowrap'>\n                                    <ArrowLeft color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                                    <Group wrap='nowrap'>\n                                        <Flex\n                                            align='center'\n                                            justify='center'\n                                            className={s.paper}\n                                            p={isLarge ? 'sm' : 'xs'}\n                                            bg={`${color}.0`}\n                                            c={`${color}.9`}\n                                        >\n                                            {icons[titlePrev]}\n                                        </Flex>\n                                        <Text hidden={!isLarge} className={s.text}>\n                                            {titlePrev ?? ''}\n                                        </Text>\n                                    </Group>\n                                </Group>\n                            )}\n                        />\n                    )}\n                    <Pagination.Next\n                        className={s.next}\n                        hidden={isLastPage}\n                        icon={() => (\n                            <Group align='center' wrap='nowrap' className={s.controlWrapper} data-last>\n                                <Group className={s.nextGroup} wrap='nowrap'>\n                                    <Flex\n                                        data-last\n                                        align='center'\n                                        justify='center'\n                                        className={s.paper}\n                                        p={isLarge ? 'sm' : 'xs'}\n                                        bg={`${color}.0`}\n                                        c={`${color}.9`}\n                                    >\n                                        {icons[titleNext]}\n                                    </Flex>\n                                    <Text hidden={!isLarge} className={s.text}>\n                                        {content?.[page]?.title ?? ''}\n                                    </Text>\n                                </Group>\n                                <ArrowRight color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                            </Group>\n                        )}\n                    />\n                </Group>\n            </Container>\n        </Pagination.Root>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Container, Flex, Group, Pagination, Text } from \"@mantine/core\";\nimport { useWindowScroll } from \"@mantine/hooks\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport { useStoreMap, useUnit } from \"effector-react\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from \"@/entities/Report\";\nimport s from \"./ReportPagination.module.css\";\nexport const ReportPagination = () => {\n  const isLarge = useIsLarge();\n  const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n  const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: [\"title\", \"content\", page],\n    fn: (content2) => content2?.content?.map(({\n      title\n    }) => ({\n      title,\n      mbti: content2.mbti_type\n    }))\n  });\n  const icons = getIconsMap(isLarge);\n  const titlePrev = content?.[page - 2]?.title ?? \"\";\n  const titleNext = content?.[page]?.title ?? \"\";\n  const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n  const [_, scrollTo] = useWindowScroll();\n  if (!content) return null;\n  return /* @__PURE__ */ jsx(Pagination.Root, { className: s.root, value: page, onChange: (page2) => {\n    onChangePage(page2);\n    setTimeout(() => scrollTo({\n      x: 0,\n      y: 0\n    }), 0);\n  }, total: content?.length, children: /* @__PURE__ */ jsx(Container, { children: /* @__PURE__ */ jsxs(Group, { className: s.grid, children: [\n    !isFirstPage && /* @__PURE__ */ jsx(Pagination.Previous, { className: s.prev, icon: () => /* @__PURE__ */ jsxs(Group, { className: s.controlWrapper, align: \"center\", wrap: \"nowrap\", children: [\n      /* @__PURE__ */ jsx(ArrowLeft, { color: `var(--mantine-color-${color}-9)`, weight: \"bold\", size: 24 }),\n      /* @__PURE__ */ jsxs(Group, { wrap: \"nowrap\", children: [\n        /* @__PURE__ */ jsx(Flex, { align: \"center\", justify: \"center\", className: s.paper, p: isLarge ? \"sm\" : \"xs\", bg: `${color}.0`, c: `${color}.9`, children: icons[titlePrev] }),\n        /* @__PURE__ */ jsx(Text, { hidden: !isLarge, className: s.text, children: titlePrev ?? \"\" })\n      ] })\n    ] }) }),\n    /* @__PURE__ */ jsx(Pagination.Next, { className: s.next, hidden: isLastPage, icon: () => /* @__PURE__ */ jsxs(Group, { align: \"center\", wrap: \"nowrap\", className: s.controlWrapper, \"data-last\": true, children: [\n      /* @__PURE__ */ jsxs(Group, { className: s.nextGroup, wrap: \"nowrap\", children: [\n        /* @__PURE__ */ jsx(Flex, { \"data-last\": true, align: \"center\", justify: \"center\", className: s.paper, p: isLarge ? \"sm\" : \"xs\", bg: `${color}.0`, c: `${color}.9`, children: icons[titleNext] }),\n        /* @__PURE__ */ jsx(Text, { hidden: !isLarge, className: s.text, children: content?.[page]?.title ?? \"\" })\n      ] }),\n      /* @__PURE__ */ jsx(ArrowRight, { color: `var(--mantine-color-${color}-9)`, weight: \"bold\", size: 24 })\n    ] }) })\n  ] }) }) });\n};\n",
      "start": 1750184199013,
      "end": 1750184199229,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/ReportPagination/index.tsx"],
        "sourcesContent": [
          "import { Container, Flex, Group, Pagination, Text } from '@mantine/core';\nimport { useWindowScroll } from '@mantine/hooks';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport { useStoreMap, useUnit } from 'effector-react';\nimport { useIsLarge } from '@/shared/lib';\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from '@/entities/Report';\nimport s from './ReportPagination.module.css';\nexport const ReportPagination = () => {\n  const isLarge = useIsLarge();\n  const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n  const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: ['title', 'content', page],\n    fn: content => content?.content?.map(({\n      title\n    }) => ({\n      title,\n      mbti: content.mbti_type\n    }))\n  });\n  const icons = getIconsMap(isLarge);\n  const titlePrev = content?.[page - 2]?.title ?? '';\n  const titleNext = content?.[page]?.title ?? '';\n  const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n  const [_, scrollTo] = useWindowScroll();\n  if (!content) return null;\n  return <Pagination.Root className={s.root} value={page} onChange={page => {\n    onChangePage(page);\n    setTimeout(() => scrollTo({\n      x: 0,\n      y: 0\n    }), 0);\n  }} total={content?.length}>\n            <Container>\n                <Group className={s.grid}>\n                    {!isFirstPage && <Pagination.Previous className={s.prev} icon={() => <Group className={s.controlWrapper} align='center' wrap='nowrap'>\n                                    <ArrowLeft color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                                    <Group wrap='nowrap'>\n                                        <Flex align='center' justify='center' className={s.paper} p={isLarge ? 'sm' : 'xs'} bg={`${color}.0`} c={`${color}.9`}>\n                                            {icons[titlePrev]}\n                                        </Flex>\n                                        <Text hidden={!isLarge} className={s.text}>\n                                            {titlePrev ?? ''}\n                                        </Text>\n                                    </Group>\n                                </Group>} />}\n                    <Pagination.Next className={s.next} hidden={isLastPage} icon={() => <Group align='center' wrap='nowrap' className={s.controlWrapper} data-last>\n                                <Group className={s.nextGroup} wrap='nowrap'>\n                                    <Flex data-last align='center' justify='center' className={s.paper} p={isLarge ? 'sm' : 'xs'} bg={`${color}.0`} c={`${color}.9`}>\n                                        {icons[titleNext]}\n                                    </Flex>\n                                    <Text hidden={!isLarge} className={s.text}>\n                                        {content?.[page]?.title ?? ''}\n                                    </Text>\n                                </Group>\n                                <ArrowRight color={`var(--mantine-color-${color}-9)`} weight='bold' size={24} />\n                            </Group>} />\n                </Group>\n            </Container>\n        </Pagination.Root>;\n};"
        ],
        "mappings": "AAqCoC,cACA,YADA;AArCpC,SAAS,WAAW,MAAM,OAAO,YAAY,YAAY;AACzD,SAAS,uBAAuB;AAChC,SAAS,WAAW,kBAAkB;AACtC,SAAS,aAAa,eAAe;AACrC,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB,aAAa,aAAa,yBAAyB;AAChF,OAAO,OAAO;AACP,aAAM,mBAAmB,MAAM;AACpC,QAAM,UAAU,WAAW;AAC3B,QAAM,CAAC,MAAM,YAAY,IAAI,QAAQ,CAAC,YAAY,cAAc,YAAY,kBAAkB,CAAC;AAC/F,QAAM,CAAC,aAAa,UAAU,IAAI,QAAQ,CAAC,YAAY,cAAc,YAAY,WAAW,CAAC;AAC7F,QAAM,UAAU,YAAY;AAAA,IAC1B,OAAO,mBAAmB;AAAA,IAC1B,MAAM,CAAC,SAAS,WAAW,IAAI;AAAA,IAC/B,IAAI,CAAAA,aAAWA,UAAS,SAAS,IAAI,CAAC;AAAA,MACpC;AAAA,IACF,OAAO;AAAA,MACL;AAAA,MACA,MAAMA,SAAQ;AAAA,IAChB,EAAE;AAAA,EACJ,CAAC;AACD,QAAM,QAAQ,YAAY,OAAO;AACjC,QAAM,YAAY,UAAU,OAAO,CAAC,GAAG,SAAS;AAChD,QAAM,YAAY,UAAU,IAAI,GAAG,SAAS;AAC5C,QAAM,QAAQ,kBAAkB,UAAU,IAAI,GAAG,IAAI,KAAK,kBAAkB,UAAU,CAAC,GAAG,IAAI;AAC9F,QAAM,CAAC,GAAG,QAAQ,IAAI,gBAAgB;AACtC,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,oBAAC,WAAW,MAAX,EAAgB,WAAW,EAAE,MAAM,OAAO,MAAM,UAAU,CAAAC,UAAQ;AACxE,iBAAaA,KAAI;AACjB,eAAW,MAAM,SAAS;AAAA,MACxB,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,EACP,GAAG,OAAO,SAAS,QACT,8BAAC,aACG,+BAAC,SAAM,WAAW,EAAE,MACf;AAAA,KAAC,eAAe,oBAAC,WAAW,UAAX,EAAoB,WAAW,EAAE,MAAM,MAAM,MAAM,qBAAC,SAAM,WAAW,EAAE,gBAAgB,OAAM,UAAS,MAAK,UAC7G;AAAA,0BAAC,aAAU,OAAO,uBAAuB,KAAK,OAAO,QAAO,QAAO,MAAM,IAAI;AAAA,MAC7E,qBAAC,SAAM,MAAK,UACR;AAAA,4BAAC,QAAK,OAAM,UAAS,SAAQ,UAAS,WAAW,EAAE,OAAO,GAAG,UAAU,OAAO,MAAM,IAAI,GAAG,KAAK,MAAM,GAAG,GAAG,KAAK,MAC5G,gBAAM,SAAS,GACpB;AAAA,QACA,oBAAC,QAAK,QAAQ,CAAC,SAAS,WAAW,EAAE,MAChC,uBAAa,IAClB;AAAA,SACJ;AAAA,OACJ,GAAU;AAAA,IACtB,oBAAC,WAAW,MAAX,EAAgB,WAAW,EAAE,MAAM,QAAQ,YAAY,MAAM,MAAM,qBAAC,SAAM,OAAM,UAAS,MAAK,UAAS,WAAW,EAAE,gBAAgB,aAAS,MAClI;AAAA,2BAAC,SAAM,WAAW,EAAE,WAAW,MAAK,UAChC;AAAA,4BAAC,QAAK,aAAS,MAAC,OAAM,UAAS,SAAQ,UAAS,WAAW,EAAE,OAAO,GAAG,UAAU,OAAO,MAAM,IAAI,GAAG,KAAK,MAAM,GAAG,GAAG,KAAK,MACtH,gBAAM,SAAS,GACpB;AAAA,QACA,oBAAC,QAAK,QAAQ,CAAC,SAAS,WAAW,EAAE,MAChC,oBAAU,IAAI,GAAG,SAAS,IAC/B;AAAA,SACJ;AAAA,MACA,oBAAC,cAAW,OAAO,uBAAuB,KAAK,OAAO,QAAO,QAAO,MAAM,IAAI;AAAA,OAClF,GAAU;AAAA,KACtB,GACJ,GACJ;AACR;",
        "names": ["content", "page"]
      }
    },
    {
      "name": "vite:worker",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750184199229,
      "end": 1750184199229,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750184199229,
      "end": 1750184199230,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750184199230,
      "end": 1750184199230,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750184199230,
      "end": 1750184199230,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750184199230,
      "end": 1750184199230,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/ReportPagination/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Container, Flex, Group, Pagination, Text } from \"@mantine/core\";\nimport { useWindowScroll } from \"@mantine/hooks\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport { useStoreMap, useUnit } from \"effector-react\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { getFullReportQuery, getIconsMap, ReportModel, TYPE_TO_COLOR_MAP } from \"@/entities/Report\";\nimport s from \"./ReportPagination.module.css\";\nexport const ReportPagination = () => {\n  const isLarge = useIsLarge();\n  const [page, onChangePage] = useUnit([ReportModel.$currentPage, ReportModel.currentPageChanged]);\n  const [isFirstPage, isLastPage] = useUnit([ReportModel.$isFirstPage, ReportModel.$isLastPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: [\"title\", \"content\", page],\n    fn: (content2) => content2?.content?.map(({\n      title\n    }) => ({\n      title,\n      mbti: content2.mbti_type\n    }))\n  });\n  const icons = getIconsMap(isLarge);\n  const titlePrev = content?.[page - 2]?.title ?? \"\";\n  const titleNext = content?.[page]?.title ?? \"\";\n  const color = TYPE_TO_COLOR_MAP[content?.[page]?.mbti] ?? TYPE_TO_COLOR_MAP[content?.[0]?.mbti];\n  const [_, scrollTo] = useWindowScroll();\n  if (!content) return null;\n  return /* @__PURE__ */ jsx(Pagination.Root, { className: s.root, value: page, onChange: (page2) => {\n    onChangePage(page2);\n    setTimeout(() => scrollTo({\n      x: 0,\n      y: 0\n    }), 0);\n  }, total: content?.length, children: /* @__PURE__ */ jsx(Container, { children: /* @__PURE__ */ jsxs(Group, { className: s.grid, children: [\n    !isFirstPage && /* @__PURE__ */ jsx(Pagination.Previous, { className: s.prev, icon: () => /* @__PURE__ */ jsxs(Group, { className: s.controlWrapper, align: \"center\", wrap: \"nowrap\", children: [\n      /* @__PURE__ */ jsx(ArrowLeft, { color: `var(--mantine-color-${color}-9)`, weight: \"bold\", size: 24 }),\n      /* @__PURE__ */ jsxs(Group, { wrap: \"nowrap\", children: [\n        /* @__PURE__ */ jsx(Flex, { align: \"center\", justify: \"center\", className: s.paper, p: isLarge ? \"sm\" : \"xs\", bg: `${color}.0`, c: `${color}.9`, children: icons[titlePrev] }),\n        /* @__PURE__ */ jsx(Text, { hidden: !isLarge, className: s.text, children: titlePrev ?? \"\" })\n      ] })\n    ] }) }),\n    /* @__PURE__ */ jsx(Pagination.Next, { className: s.next, hidden: isLastPage, icon: () => /* @__PURE__ */ jsxs(Group, { align: \"center\", wrap: \"nowrap\", className: s.controlWrapper, \"data-last\": true, children: [\n      /* @__PURE__ */ jsxs(Group, { className: s.nextGroup, wrap: \"nowrap\", children: [\n        /* @__PURE__ */ jsx(Flex, { \"data-last\": true, align: \"center\", justify: \"center\", className: s.paper, p: isLarge ? \"sm\" : \"xs\", bg: `${color}.0`, c: `${color}.9`, children: icons[titleNext] }),\n        /* @__PURE__ */ jsx(Text, { hidden: !isLarge, className: s.text, children: content?.[page]?.title ?? \"\" })\n      ] }),\n      /* @__PURE__ */ jsx(ArrowRight, { color: `var(--mantine-color-${color}-9)`, weight: \"bold\", size: 24 })\n    ] }) })\n  ] }) }) });\n};\n",
      "start": 1750184199230,
      "end": 1750184199230,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/ReportPagination/index.tsx"],
        "names": [],
        "mappingsxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACznG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvptpvN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtzj
      }
    }
  ]
}

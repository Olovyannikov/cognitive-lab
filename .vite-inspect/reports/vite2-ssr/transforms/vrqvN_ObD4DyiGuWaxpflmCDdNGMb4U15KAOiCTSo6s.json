{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\n\nimport { atom } from '@/shared/factories';\n\nimport { sendFreeReportOnEmailMutation } from '../api';\n\nexport const SendReportEmailModel = atom(() => {\n    const submitForm = createEvent<{ email: string; user_report_id: string }>();\n\n    const showUserEmailNotificationFx = createEffect((email: string) => {\n        notifications.show({\n            title: 'Отчет отправлен!',\n            message: `Отчет отправлен на почту ${email}`,\n        });\n    });\n\n    sample({\n        clock: submitForm,\n        target: sendFreeReportOnEmailMutation.start,\n    });\n\n    sample({\n        clock: sendFreeReportOnEmailMutation.finished.success,\n        filter: ({ params }) => Boolean(params.email),\n        fn: ({ params: { email } }) => email,\n        target: showUserEmailNotificationFx,\n    });\n\n    return {\n        submitForm,\n    };\n});\n",
      "start": 1750184199071,
      "end": 1750184199113,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { sendFreeReportOnEmailMutation } from '../api';\nexport const SendReportEmailModel = atom(() => {\n  const submitForm = createEvent<{\n    email: string;\n    user_report_id: string;\n  }>({\n    name: \"submitForm\",\n    sid: \"-261mp6\"\n  });\n  const showUserEmailNotificationFx = createEffect((email: string) => {\n    notifications.show({\n      title: 'Отчет отправлен!',\n      message: `Отчет отправлен на почту ${email}`\n    });\n  }, {\n    name: \"showUserEmailNotificationFx\",\n    sid: \"82dtwb\"\n  });\n  sample({\n    and: [{\n      clock: submitForm,\n      target: sendFreeReportOnEmailMutation.start\n    }],\n    or: {\n      sid: \"-fgmro9\"\n    }\n  });\n  sample({\n    and: [{\n      clock: sendFreeReportOnEmailMutation.finished.success,\n      filter: ({\n        params\n      }) => Boolean(params.email),\n      fn: ({\n        params: {\n          email\n        }\n      }) => email,\n      target: showUserEmailNotificationFx\n    }],\n    or: {\n      sid: \"-f2c48v\"\n    }\n  });\n  return {\n    submitForm\n  };\n});",
      "start": 1750184199113,
      "end": 1750184199114,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "notifications",
          "createEffect",
          "createEvent",
          "sample",
          "atom",
          "sendFreeReportOnEmailMutation",
          "SendReportEmailModel",
          "submitForm",
          "email",
          "user_report_id",
          "name",
          "sid",
          "showUserEmailNotificationFx",
          "show",
          "title",
          "message",
          "and",
          "clock",
          "target",
          "start",
          "or",
          "finished",
          "success",
          "filter",
          "params",
          "Boolean",
          "fn"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/model/index.ts"],
        "sourcesContent": [
          "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\n\nimport { atom } from '@/shared/factories';\n\nimport { sendFreeReportOnEmailMutation } from '../api';\n\nexport const SendReportEmailModel = atom(() => {\n    const submitForm = createEvent<{ email: string; user_report_id: string }>();\n\n    const showUserEmailNotificationFx = createEffect((email: string) => {\n        notifications.show({\n            title: 'Отчет отправлен!',\n            message: `Отчет отправлен на почту ${email}`,\n        });\n    });\n\n    sample({\n        clock: submitForm,\n        target: sendFreeReportOnEmailMutation.start,\n    });\n\n    sample({\n        clock: sendFreeReportOnEmailMutation.finished.success,\n        filter: ({ params }) => Boolean(params.email),\n        fn: ({ params: { email } }) => email,\n        target: showUserEmailNotificationFx,\n    });\n\n    return {\n        submitForm,\n    };\n});\n"
        ],
        "mappings": "AAAA,SAASA,aAAa,QAAQ,wBAAwB;AACtD,SAASC,YAAY,EAAEC,WAAW,EAAEC,MAAM,QAAQ,UAAU;AAE5D,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,6BAA6B,QAAQ,QAAQ;AAEtD,OAAO,MAAMC,oBAAoB,GAAGF,IAAI,CAAC,MAAM;EAC3C,MAAMG,UAAU,GAAGL,WAAW,CAAC;IAAEM,KAAK,EAAE,MAAM;IAAEC,cAAc,EAAE,MAAM;EAAC,CAAC,CAAC;IAAAC,IAAA;IAAAC,GAAA;EAAA,CAAC,CAAC;EAE3E,MAAMC,2BAA2B,GAAGX,YAAY,CAAC,CAACO,KAAK,EAAE,MAAM,KAAK;IAChER,aAAa,CAACa,IAAI,CAAC;MACfC,KAAK,EAAE,kBAAkB;MACzBC,OAAO,EAAE,4BAA4BP,KAAK;IAC9C,CAAC,CAAC;EACN,CAAC;IAAAE,IAAA;IAAAC,GAAA;EAAA,EAAC;EAEFR,MAAM;IAAAa,GAAA,GAAC;MACHC,KAAK,EAAEV,UAAU;MACjBW,MAAM,EAAEb,6BAA6B,CAACc;IAC1C,CAAC;IAAAC,EAAA;MAAAT,GAAA;IAAA;EAAA,EAAC;EAEFR,MAAM;IAAAa,GAAA,GAAC;MACHC,KAAK,EAAEZ,6BAA6B,CAACgB,QAAQ,CAACC,OAAO;MACrDC,MAAM,EAAEA,CAAC;QAAEC;MAAO,CAAC,KAAKC,OAAO,CAACD,MAAM,CAAChB,KAAK,CAAC;MAC7CkB,EAAE,EAAEA,CAAC;QAAEF,MAAM,EAAE;UAAEhB;QAAM;MAAE,CAAC,KAAKA,KAAK;MACpCU,MAAM,EAAEN;IACZ,CAAC;IAAAQ,EAAA;MAAAT,GAAA;IAAA;EAAA,EAAC;EAEF,OAAO;IACHJ;EACJ,CAAC;AACL,CAAC,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, sample } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { sendFreeReportOnEmailMutation } from \"../api\";\nexport const SendReportEmailModel = atom(() => {\n  const submitForm = createEvent({\n    name: \"submitForm\",\n    sid: \"-261mp6\"\n  });\n  const showUserEmailNotificationFx = createEffect((email) => {\n    notifications.show({\n      title: \"Отчет отправлен!\",\n      message: `Отчет отправлен на почту ${email}`\n    });\n  }, {\n    name: \"showUserEmailNotificationFx\",\n    sid: \"82dtwb\"\n  });\n  sample({\n    and: [{\n      clock: submitForm,\n      target: sendFreeReportOnEmailMutation.start\n    }],\n    or: {\n      sid: \"-fgmro9\"\n    }\n  });\n  sample({\n    and: [{\n      clock: sendFreeReportOnEmailMutation.finished.success,\n      filter: ({\n        params\n      }) => Boolean(params.email),\n      fn: ({\n        params: {\n          email\n        }\n      }) => email,\n      target: showUserEmailNotificationFx\n    }],\n    or: {\n      sid: \"-f2c48v\"\n    }\n  });\n  return {\n    submitForm\n  };\n});\n",
      "start": 1750184199114,
      "end": 1750184199377,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/model/index.ts"],
        "sourcesContent": [
          "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { sendFreeReportOnEmailMutation } from '../api';\nexport const SendReportEmailModel = atom(() => {\n  const submitForm = createEvent<{\n    email: string;\n    user_report_id: string;\n  }>({\n    name: \"submitForm\",\n    sid: \"-261mp6\"\n  });\n  const showUserEmailNotificationFx = createEffect((email: string) => {\n    notifications.show({\n      title: 'Отчет отправлен!',\n      message: `Отчет отправлен на почту ${email}`\n    });\n  }, {\n    name: \"showUserEmailNotificationFx\",\n    sid: \"82dtwb\"\n  });\n  sample({\n    and: [{\n      clock: submitForm,\n      target: sendFreeReportOnEmailMutation.start\n    }],\n    or: {\n      sid: \"-fgmro9\"\n    }\n  });\n  sample({\n    and: [{\n      clock: sendFreeReportOnEmailMutation.finished.success,\n      filter: ({\n        params\n      }) => Boolean(params.email),\n      fn: ({\n        params: {\n          email\n        }\n      }) => email,\n      target: showUserEmailNotificationFx\n    }],\n    or: {\n      sid: \"-f2c48v\"\n    }\n  });\n  return {\n    submitForm\n  };\n});"
        ],
        "mappings": "AAAA,SAAS,qBAAqB;AAC9B,SAAS,cAAc,aAAa,cAAc;AAClD,SAAS,YAAY;AACrB,SAAS,qCAAqC;AACvC,aAAM,uBAAuB,KAAK,MAAM;AAC7C,QAAM,aAAa,YAGhB;AAAA,IACD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,8BAA8B,aAAa,CAAC,UAAkB;AAClE,kBAAc,KAAK;AAAA,MACjB,OAAO;AAAA,MACP,SAAS,4BAA4B,KAAK;AAAA,IAC5C,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ,8BAA8B;AAAA,IACxC,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO,8BAA8B,SAAS;AAAA,MAC9C,QAAQ,CAAC;AAAA,QACP;AAAA,MACF,MAAM,QAAQ,OAAO,KAAK;AAAA,MAC1B,IAAI,CAAC;AAAA,QACH,QAAQ;AAAA,UACN;AAAA,QACF;AAAA,MACF,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL;AAAA,EACF;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/features/SendReportEmail/model/index.ts [vike:pluginModuleBanner] */\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, sample } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { sendFreeReportOnEmailMutation } from \"../api\";\nexport const SendReportEmailModel = atom(() => {\n  const submitForm = createEvent({\n    name: \"submitForm\",\n    sid: \"-261mp6\"\n  });\n  const showUserEmailNotificationFx = createEffect((email) => {\n    notifications.show({\n      title: \"Отчет отправлен!\",\n      message: `Отчет отправлен на почту ${email}`\n    });\n  }, {\n    name: \"showUserEmailNotificationFx\",\n    sid: \"82dtwb\"\n  });\n  sample({\n    and: [{\n      clock: submitForm,\n      target: sendFreeReportOnEmailMutation.start\n    }],\n    or: {\n      sid: \"-fgmro9\"\n    }\n  });\n  sample({\n    and: [{\n      clock: sendFreeReportOnEmailMutation.finished.success,\n      filter: ({\n        params\n      }) => Boolean(params.email),\n      fn: ({\n        params: {\n          email\n        }\n      }) => email,\n      target: showUserEmailNotificationFx\n    }],\n    or: {\n      sid: \"-f2c48v\"\n    }\n  });\n  return {\n    submitForm\n  };\n});\n",
      "start": 1750184199377,
      "end": 1750184199377,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/features/SendReportEmail/model/index.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\n\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\n\nimport { CARDS } from './const';\nimport { Card } from './ui';\n\nimport s from './SplashScreen.module.css';\n\nexport const TestSplashScreen = () => {\n    const { isMobile } = usePageContext();\n    const isLarge = useIsLarge();\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\n        TestModel.$currentProgress.map((progress) => progress > 0),\n        TestModel.setSplashScreenVisibility,\n        TakeTestAgainModel.takeTestAgainClicked,\n    ]);\n    const [reportsLen, isLoading, isStale] = useUnit([\n        ReportModel.$allUserReports.map((reports) => reports?.length),\n        getSurveysInfoQuery.$pending,\n        getSurveysInfoQuery.$stale,\n    ]);\n\n    const [mounted, setMounted] = useState(false);\n\n    const onStartClickHandler = () => {\n        testAgain();\n        setSplashScreen(false);\n    };\n\n    useEffect(() => setMounted(true), []);\n    if (isStale || isLoading || !mounted) return <PageLoader />;\n\n    return (\n        <Box py={!isLarge || isMobile ? 0 : 120}>\n            <Container mb='5xl'>\n                <Stack gap={0}>\n                    <Title className={s.title} order={2}>\n                        Тест на определение типа личности\n                    </Title>\n                    <Flex className={s.cards}>\n                        {CARDS.map((card) => (\n                            <Card {...card} key={card.id} />\n                        ))}\n                    </Flex>\n                    <Stack justify='center' align='center'>\n                        {(reportsLen < 1 || isStarted) && (\n                            <Button\n                                fullWidth\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                className='mantine-button-rainbow'\n                                onClick={() => setSplashScreen(false)}\n                            >\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\n                            </Button>\n                        )}\n                        {reportsLen > 0 && (\n                            <Button\n                                fullWidth\n                                variant='default'\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                onClick={onStartClickHandler}\n                            >\n                                Начать заново\n                            </Button>\n                        )}\n                    </Stack>\n                </Stack>\n            </Container>\n        </Box>\n    );\n};\n",
      "start": 1750239308406,
      "end": 1750239308419,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\nimport { CARDS } from './const';\nimport { Card } from './ui';\nimport s from './SplashScreen.module.css';\nexport const TestSplashScreen = ()=>{\n    const { isMobile } = usePageContext();\n    const isLarge = useIsLarge();\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\n        TestModel.$currentProgress.map((progress)=>progress > 0),\n        TestModel.setSplashScreenVisibility,\n        TakeTestAgainModel.takeTestAgainClicked\n    ]);\n    const [reportsLen, isLoading, isStale] = useUnit([\n        ReportModel.$allUserReports.map((reports)=>reports?.length),\n        getSurveysInfoQuery.$pending,\n        getSurveysInfoQuery.$stale\n    ]);\n    const [mounted, setMounted] = useState(false);\n    const onStartClickHandler = ()=>{\n        testAgain();\n        setSplashScreen(false);\n    };\n    useEffect(()=>setMounted(true), []);\n    if (isStale || isLoading || !mounted) return /*#__PURE__*/ _jsx(PageLoader, {});\n    return /*#__PURE__*/ _jsx(Box, {\n        py: !isLarge || isMobile ? 0 : 120,\n        children: /*#__PURE__*/ _jsx(Container, {\n            mb: \"5xl\",\n            children: /*#__PURE__*/ _jsxs(Stack, {\n                gap: 0,\n                children: [\n                    /*#__PURE__*/ _jsx(Title, {\n                        className: s.title,\n                        order: 2,\n                        children: \"Тест на определение типа личности\"\n                    }),\n                    /*#__PURE__*/ _jsx(Flex, {\n                        className: s.cards,\n                        children: CARDS.map((card)=>/*#__PURE__*/ _createElement(Card, {\n                                ...card,\n                                key: card.id\n                            }))\n                    }),\n                    /*#__PURE__*/ _jsxs(Stack, {\n                        justify: \"center\",\n                        align: \"center\",\n                        children: [\n                            (reportsLen < 1 || isStarted) && /*#__PURE__*/ _jsx(Button, {\n                                fullWidth: true,\n                                maw: isLarge ? 350 : '100%',\n                                size: isLarge ? 'xl' : 'lg',\n                                className: \"mantine-button-rainbow\",\n                                onClick: ()=>setSplashScreen(false),\n                                children: isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'\n                            }),\n                            reportsLen > 0 && /*#__PURE__*/ _jsx(Button, {\n                                fullWidth: true,\n                                variant: \"default\",\n                                maw: isLarge ? 350 : '100%',\n                                size: isLarge ? 'xl' : 'lg',\n                                onClick: onStartClickHandler,\n                                children: \"Начать заново\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        })\n    });\n};\n",
      "start": 1750239308419,
      "end": 1750239308423,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx\"],\"sourcesContent\":[\"import { useEffect, useState } from 'react';\\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\\nimport { useUnit } from 'effector-react';\\nimport { usePageContext } from 'vike-react/usePageContext';\\n\\nimport { useIsLarge } from '@/shared/lib';\\nimport { PageLoader } from '@/shared/ui';\\n\\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\\nimport { TestModel } from '@/entities/Test';\\n\\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\\n\\nimport { CARDS } from './const';\\nimport { Card } from './ui';\\n\\nimport s from './SplashScreen.module.css';\\n\\nexport const TestSplashScreen = () => {\\n    const { isMobile } = usePageContext();\\n    const isLarge = useIsLarge();\\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\\n        TestModel.$currentProgress.map((progress) => progress > 0),\\n        TestModel.setSplashScreenVisibility,\\n        TakeTestAgainModel.takeTestAgainClicked,\\n    ]);\\n    const [reportsLen, isLoading, isStale] = useUnit([\\n        ReportModel.$allUserReports.map((reports) => reports?.length),\\n        getSurveysInfoQuery.$pending,\\n        getSurveysInfoQuery.$stale,\\n    ]);\\n\\n    const [mounted, setMounted] = useState(false);\\n\\n    const onStartClickHandler = () => {\\n        testAgain();\\n        setSplashScreen(false);\\n    };\\n\\n    useEffect(() => setMounted(true), []);\\n    if (isStale || isLoading || !mounted) return <PageLoader />;\\n\\n    return (\\n        <Box py={!isLarge || isMobile ? 0 : 120}>\\n            <Container mb='5xl'>\\n                <Stack gap={0}>\\n                    <Title className={s.title} order={2}>\\n                        Тест на определение типа личности\\n                    </Title>\\n                    <Flex className={s.cards}>\\n                        {CARDS.map((card) => (\\n                            <Card {...card} key={card.id} />\\n                        ))}\\n                    </Flex>\\n                    <Stack justify='center' align='center'>\\n                        {(reportsLen < 1 || isStarted) && (\\n                            <Button\\n                                fullWidth\\n                                maw={isLarge ? 350 : '100%'}\\n                                size={isLarge ? 'xl' : 'lg'}\\n                                className='mantine-button-rainbow'\\n                                onClick={() => setSplashScreen(false)}\\n                            >\\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\\n                            </Button>\\n                        )}\\n                        {reportsLen > 0 && (\\n                            <Button\\n                                fullWidth\\n                                variant='default'\\n                                maw={isLarge ? 350 : '100%'}\\n                                size={isLarge ? 'xl' : 'lg'}\\n                                onClick={onStartClickHandler}\\n                            >\\n                                Начать заново\\n                            </Button>\\n                        )}\\n                    </Stack>\\n                </Stack>\\n            </Container>\\n        </Box>\\n    );\\n};\\n\"],\"names\":[\"useEffect\",\"useState\",\"Box\",\"Button\",\"Container\",\"Flex\",\"Stack\",\"Title\",\"useUnit\",\"usePageContext\",\"useIsLarge\",\"PageLoader\",\"getSurveysInfoQuery\",\"ReportModel\",\"TestModel\",\"TakeTestAgainModel\",\"CARDS\",\"Card\",\"s\",\"TestSplashScreen\",\"isMobile\",\"isLarge\",\"isStarted\",\"setSplashScreen\",\"testAgain\",\"$currentProgress\",\"map\",\"progress\",\"setSplashScreenVisibility\",\"takeTestAgainClicked\",\"reportsLen\",\"isLoading\",\"isStale\",\"$allUserReports\",\"reports\",\"length\",\"$pending\",\"$stale\",\"mounted\",\"setMounted\",\"onStartClickHandler\",\"py\",\"mb\",\"gap\",\"className\",\"title\",\"order\",\"cards\",\"card\",\"key\",\"id\",\"justify\",\"align\",\"fullWidth\",\"maw\",\"size\",\"onClick\",\"variant\"],\"mappings\":\";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,QAAQ;AAC5C,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AAC3E,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,oBAAoB;AACrE,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,IAAI,QAAQ,OAAO;AAE5B,OAAOC,OAAO,4BAA4B;AAE1C,OAAO,MAAMC,mBAAmB;IAC5B,MAAM,EAAEC,QAAQ,EAAE,GAAGX;IACrB,MAAMY,UAAUX;IAChB,MAAM,CAACY,WAAWC,iBAAiBC,UAAU,GAAGhB,QAAQ;QACpDM,UAAUW,gBAAgB,CAACC,GAAG,CAAC,CAACC,WAAaA,WAAW;QACxDb,UAAUc,yBAAyB;QACnCb,mBAAmBc,oBAAoB;KAC1C;IACD,MAAM,CAACC,YAAYC,WAAWC,QAAQ,GAAGxB,QAAQ;QAC7CK,YAAYoB,eAAe,CAACP,GAAG,CAAC,CAACQ,UAAYA,SAASC;QACtDvB,oBAAoBwB,QAAQ;QAC5BxB,oBAAoByB,MAAM;KAC7B;IAED,MAAM,CAACC,SAASC,WAAW,GAAGtC,SAAS;IAEvC,MAAMuC,sBAAsB;QACxBhB;QACAD,gBAAgB;IACpB;IAEAvB,UAAU,IAAMuC,WAAW,OAAO,EAAE;IACpC,IAAIP,WAAWD,aAAa,CAACO,SAAS,qBAAO,KAAC3B;IAE9C,qBACI,KAACT;QAAIuC,IAAI,CAACpB,WAAWD,WAAW,IAAI;kBAChC,cAAA,KAAChB;YAAUsC,IAAG;sBACV,cAAA,MAACpC;gBAAMqC,KAAK;;kCACR,KAACpC;wBAAMqC,WAAW1B,EAAE2B,KAAK;wBAAEC,OAAO;kCAAG;;kCAGrC,KAACzC;wBAAKuC,WAAW1B,EAAE6B,KAAK;kCACnB/B,MAAMU,GAAG,CAAC,CAACsB,qBACR,eAAC/B;gCAAM,GAAG+B,IAAI;gCAAEC,KAAKD,KAAKE,EAAE;;;kCAGpC,MAAC5C;wBAAM6C,SAAQ;wBAASC,OAAM;;4BACxBtB,CAAAA,aAAa,KAAKR,SAAQ,mBACxB,KAACnB;gCACGkD,SAAS;gCACTC,KAAKjC,UAAU,MAAM;gCACrBkC,MAAMlC,UAAU,OAAO;gCACvBuB,WAAU;gCACVY,SAAS,IAAMjC,gBAAgB;0CAE9BD,YAAY,4BAA4B;;4BAGhDQ,aAAa,mBACV,KAAC3B;gCACGkD,SAAS;gCACTI,SAAQ;gCACRH,KAAKjC,UAAU,MAAM;gCACrBkC,MAAMlC,UAAU,OAAO;gCACvBmC,SAAShB;0CACZ;;;;;;;;AAS7B,EAAE\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Container, Flex, Stack, Title } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { TestModel } from \"@/entities/Test\";\nimport { TakeTestAgainModel } from \"@/features/TakeTestAgain\";\nimport { CARDS } from \"./const\";\nimport { Card } from \"./ui\";\nimport s from \"./SplashScreen.module.css\";\nexport const TestSplashScreen = () => {\n  const { isMobile } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([\n    TestModel.$currentProgress.map((progress) => progress > 0),\n    TestModel.setSplashScreenVisibility,\n    TakeTestAgainModel.takeTestAgainClicked\n  ]);\n  const [reportsLen, isLoading, isStale] = useUnit([\n    ReportModel.$allUserReports.map((reports) => reports?.length),\n    getSurveysInfoQuery.$pending,\n    getSurveysInfoQuery.$stale\n  ]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return /* @__PURE__ */ _jsx(PageLoader, {});\n  return /* @__PURE__ */ _jsx(Box, {\n    py: !isLarge || isMobile ? 0 : 120,\n    children: /* @__PURE__ */ _jsx(Container, {\n      mb: \"5xl\",\n      children: /* @__PURE__ */ _jsxs(Stack, {\n        gap: 0,\n        children: [\n          /* @__PURE__ */ _jsx(Title, {\n            className: s.title,\n            order: 2,\n            children: \"Тест на определение типа личности\"\n          }),\n          /* @__PURE__ */ _jsx(Flex, {\n            className: s.cards,\n            children: CARDS.map((card) => /* @__PURE__ */ _createElement(Card, {\n              ...card,\n              key: card.id\n            }))\n          }),\n          /* @__PURE__ */ _jsxs(Stack, {\n            justify: \"center\",\n            align: \"center\",\n            children: [\n              (reportsLen < 1 || isStarted) && /* @__PURE__ */ _jsx(Button, {\n                fullWidth: true,\n                maw: isLarge ? 350 : \"100%\",\n                size: isLarge ? \"xl\" : \"lg\",\n                className: \"mantine-button-rainbow\",\n                onClick: () => setSplashScreen(false),\n                children: isStarted ? \"Продолжить тестирование\" : \"Пройти тестирование\"\n              }),\n              reportsLen > 0 && /* @__PURE__ */ _jsx(Button, {\n                fullWidth: true,\n                variant: \"default\",\n                maw: isLarge ? 350 : \"100%\",\n                size: isLarge ? \"xl\" : \"lg\",\n                onClick: onStartClickHandler,\n                children: \"Начать заново\"\n              })\n            ]\n          })\n        ]\n      })\n    })\n  });\n};\n",
      "start": 1750239308423,
      "end": 1750239308625,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\nimport { CARDS } from './const';\nimport { Card } from './ui';\nimport s from './SplashScreen.module.css';\nexport const TestSplashScreen = ()=>{\n    const { isMobile } = usePageContext();\n    const isLarge = useIsLarge();\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\n        TestModel.$currentProgress.map((progress)=>progress > 0),\n        TestModel.setSplashScreenVisibility,\n        TakeTestAgainModel.takeTestAgainClicked\n    ]);\n    const [reportsLen, isLoading, isStale] = useUnit([\n        ReportModel.$allUserReports.map((reports)=>reports?.length),\n        getSurveysInfoQuery.$pending,\n        getSurveysInfoQuery.$stale\n    ]);\n    const [mounted, setMounted] = useState(false);\n    const onStartClickHandler = ()=>{\n        testAgain();\n        setSplashScreen(false);\n    };\n    useEffect(()=>setMounted(true), []);\n    if (isStale || isLoading || !mounted) return /*#__PURE__*/ _jsx(PageLoader, {});\n    return /*#__PURE__*/ _jsx(Box, {\n        py: !isLarge || isMobile ? 0 : 120,\n        children: /*#__PURE__*/ _jsx(Container, {\n            mb: \"5xl\",\n            children: /*#__PURE__*/ _jsxs(Stack, {\n                gap: 0,\n                children: [\n                    /*#__PURE__*/ _jsx(Title, {\n                        className: s.title,\n                        order: 2,\n                        children: \"Тест на определение типа личности\"\n                    }),\n                    /*#__PURE__*/ _jsx(Flex, {\n                        className: s.cards,\n                        children: CARDS.map((card)=>/*#__PURE__*/ _createElement(Card, {\n                                ...card,\n                                key: card.id\n                            }))\n                    }),\n                    /*#__PURE__*/ _jsxs(Stack, {\n                        justify: \"center\",\n                        align: \"center\",\n                        children: [\n                            (reportsLen < 1 || isStarted) && /*#__PURE__*/ _jsx(Button, {\n                                fullWidth: true,\n                                maw: isLarge ? 350 : '100%',\n                                size: isLarge ? 'xl' : 'lg',\n                                className: \"mantine-button-rainbow\",\n                                onClick: ()=>setSplashScreen(false),\n                                children: isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'\n                            }),\n                            reportsLen > 0 && /*#__PURE__*/ _jsx(Button, {\n                                fullWidth: true,\n                                variant: \"default\",\n                                maw: isLarge ? 350 : '100%',\n                                size: isLarge ? 'xl' : 'lg',\n                                onClick: onStartClickHandler,\n                                children: \"Начать заново\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        })\n    });\n};\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,iBAAiB,sBAAsB;AAChD,SAAS,WAAW,gBAAgB;AACpC,SAAS,KAAK,QAAQ,WAAW,MAAM,OAAO,aAAa;AAC3D,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,qBAAqB,mBAAmB;AACjD,SAAS,iBAAiB;AAC1B,SAAS,0BAA0B;AACnC,SAAS,aAAa;AACtB,SAAS,YAAY;AACrB,OAAO,OAAO;AACP,aAAM,mBAAmB,MAAI;AAChC,QAAM,EAAE,SAAS,IAAI,eAAe;AACpC,QAAM,UAAU,WAAW;AAC3B,QAAM,CAAC,WAAW,iBAAiB,SAAS,IAAI,QAAQ;AAAA,IACpD,UAAU,iBAAiB,IAAI,CAAC,aAAW,WAAW,CAAC;AAAA,IACvD,UAAU;AAAA,IACV,mBAAmB;AAAA,EACvB,CAAC;AACD,QAAM,CAAC,YAAY,WAAW,OAAO,IAAI,QAAQ;AAAA,IAC7C,YAAY,gBAAgB,IAAI,CAAC,YAAU,SAAS,MAAM;AAAA,IAC1D,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,EACxB,CAAC;AACD,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAC5C,QAAM,sBAAsB,MAAI;AAC5B,cAAU;AACV,oBAAgB,KAAK;AAAA,EACzB;AACA,YAAU,MAAI,WAAW,IAAI,GAAG,CAAC,CAAC;AAClC,MAAI,WAAW,aAAa,CAAC,QAAS,QAAqB,qBAAK,YAAY,CAAC,CAAC;AAC9E,SAAqB,qBAAK,KAAK;AAAA,IAC3B,IAAI,CAAC,WAAW,WAAW,IAAI;AAAA,IAC/B,UAAwB,qBAAK,WAAW;AAAA,MACpC,IAAI;AAAA,MACJ,UAAwB,sBAAM,OAAO;AAAA,QACjC,KAAK;AAAA,QACL,UAAU;AAAA,UACQ,qBAAK,OAAO;AAAA,YACtB,WAAW,EAAE;AAAA,YACb,OAAO;AAAA,YACP,UAAU;AAAA,UACd,CAAC;AAAA,UACa,qBAAK,MAAM;AAAA,YACrB,WAAW,EAAE;AAAA,YACb,UAAU,MAAM,IAAI,CAAC,SAAqB,+BAAe,MAAM;AAAA,cACvD,GAAG;AAAA,cACH,KAAK,KAAK;AAAA,YACd,CAAC,CAAC;AAAA,UACV,CAAC;AAAA,UACa,sBAAM,OAAO;AAAA,YACvB,SAAS;AAAA,YACT,OAAO;AAAA,YACP,UAAU;AAAA,eACL,aAAa,KAAK,cAA4B,qBAAK,QAAQ;AAAA,gBACxD,WAAW;AAAA,gBACX,KAAK,UAAU,MAAM;AAAA,gBACrB,MAAM,UAAU,OAAO;AAAA,gBACvB,WAAW;AAAA,gBACX,SAAS,MAAI,gBAAgB,KAAK;AAAA,gBAClC,UAAU,YAAY,4BAA4B;AAAA,cACtD,CAAC;AAAA,cACD,aAAa,KAAmB,qBAAK,QAAQ;AAAA,gBACzC,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,KAAK,UAAU,MAAM;AAAA,gBACrB,MAAM,UAAU,OAAO;AAAA,gBACvB,SAAS;AAAA,gBACT,UAAU;AAAA,cACd,CAAC;AAAA,YACL;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAAA,EACL,CAAC;AACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/Test/SplashScreen/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Container, Flex, Stack, Title } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { TestModel } from \"@/entities/Test\";\nimport { TakeTestAgainModel } from \"@/features/TakeTestAgain\";\nimport { CARDS } from \"./const\";\nimport { Card } from \"./ui\";\nimport s from \"./SplashScreen.module.css\";\nexport const TestSplashScreen = () => {\n  const { isMobile } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([\n    TestModel.$currentProgress.map((progress) => progress > 0),\n    TestModel.setSplashScreenVisibility,\n    TakeTestAgainModel.takeTestAgainClicked\n  ]);\n  const [reportsLen, isLoading, isStale] = useUnit([\n    ReportModel.$allUserReports.map((reports) => reports?.length),\n    getSurveysInfoQuery.$pending,\n    getSurveysInfoQuery.$stale\n  ]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return /* @__PURE__ */ _jsx(PageLoader, {});\n  return /* @__PURE__ */ _jsx(Box, {\n    py: !isLarge || isMobile ? 0 : 120,\n    children: /* @__PURE__ */ _jsx(Container, {\n      mb: \"5xl\",\n      children: /* @__PURE__ */ _jsxs(Stack, {\n        gap: 0,\n        children: [\n          /* @__PURE__ */ _jsx(Title, {\n            className: s.title,\n            order: 2,\n            children: \"Тест на определение типа личности\"\n          }),\n          /* @__PURE__ */ _jsx(Flex, {\n            className: s.cards,\n            children: CARDS.map((card) => /* @__PURE__ */ _createElement(Card, {\n              ...card,\n              key: card.id\n            }))\n          }),\n          /* @__PURE__ */ _jsxs(Stack, {\n            justify: \"center\",\n            align: \"center\",\n            children: [\n              (reportsLen < 1 || isStarted) && /* @__PURE__ */ _jsx(Button, {\n                fullWidth: true,\n                maw: isLarge ? 350 : \"100%\",\n                size: isLarge ? \"xl\" : \"lg\",\n                className: \"mantine-button-rainbow\",\n                onClick: () => setSplashScreen(false),\n                children: isStarted ? \"Продолжить тестирование\" : \"Пройти тестирование\"\n              }),\n              reportsLen > 0 && /* @__PURE__ */ _jsx(Button, {\n                fullWidth: true,\n                variant: \"default\",\n                maw: isLarge ? 350 : \"100%\",\n                size: isLarge ? \"xl\" : \"lg\",\n                onClick: onStartClickHandler,\n                children: \"Начать заново\"\n              })\n            ]\n          })\n        ]\n      })\n    })\n  });\n};\n",
      "start": 1750239308625,
      "end": 1750239308625,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/Test/SplashScreen/index.tsx"],
        "names": [],
        "mappingsvxzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChlxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

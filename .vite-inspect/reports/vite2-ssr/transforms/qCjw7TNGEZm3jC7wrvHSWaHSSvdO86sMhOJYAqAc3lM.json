{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\n\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\n\nimport { CARDS } from './const';\nimport { Card } from './ui';\n\nimport s from './SplashScreen.module.css';\n\nexport const TestSplashScreen = () => {\n    const { isMobile } = usePageContext();\n    const isLarge = useIsLarge();\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\n        TestModel.$currentProgress.map((progress) => progress > 0),\n        TestModel.setSplashScreenVisibility,\n        TakeTestAgainModel.takeTestAgainClicked,\n    ]);\n    const [reportsLen, isLoading, isStale] = useUnit([\n        ReportModel.$allUserReports.map((reports) => reports?.length),\n        getSurveysInfoQuery.$pending,\n        getSurveysInfoQuery.$stale,\n    ]);\n\n    const [mounted, setMounted] = useState(false);\n\n    const onStartClickHandler = () => {\n        testAgain();\n        setSplashScreen(false);\n    };\n\n    useEffect(() => setMounted(true), []);\n    if (isStale || isLoading || !mounted) return <PageLoader />;\n\n    return (\n        <Box py={!isLarge || isMobile ? 0 : 120}>\n            <Container mb='5xl'>\n                <Stack gap={0}>\n                    <Title className={s.title} order={2}>\n                        Тест на определение типа личности\n                    </Title>\n                    <Flex className={s.cards}>\n                        {CARDS.map((card) => (\n                            <Card {...card} key={card.id} />\n                        ))}\n                    </Flex>\n                    <Stack justify='center' align='center'>\n                        {(reportsLen < 1 || isStarted) && (\n                            <Button\n                                fullWidth\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                className='mantine-button-rainbow'\n                                onClick={() => setSplashScreen(false)}\n                            >\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\n                            </Button>\n                        )}\n                        {reportsLen > 0 && (\n                            <Button\n                                fullWidth\n                                variant='default'\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                onClick={onStartClickHandler}\n                            >\n                                Начать заново\n                            </Button>\n                        )}\n                    </Stack>\n                </Stack>\n            </Container>\n        </Box>\n    );\n};\n",
      "start": 1750275033850,
      "end": 1750275033895,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\nimport { CARDS } from './const';\nimport { Card } from './ui';\nimport s from './SplashScreen.module.css';\nexport const TestSplashScreen = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([TestModel.$currentProgress.map(progress => progress > 0), TestModel.setSplashScreenVisibility, TakeTestAgainModel.takeTestAgainClicked]);\n  const [reportsLen, isLoading, isStale] = useUnit([ReportModel.$allUserReports.map(reports => reports?.length), getSurveysInfoQuery.$pending, getSurveysInfoQuery.$stale]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return <PageLoader />;\n  return <Box py={!isLarge || isMobile ? 0 : 120}>\n            <Container mb='5xl'>\n                <Stack gap={0}>\n                    <Title className={s.title} order={2}>\n                        Тест на определение типа личности\n                    </Title>\n                    <Flex className={s.cards}>\n                        {CARDS.map(card => <Card {...card} key={card.id} />)}\n                    </Flex>\n                    <Stack justify='center' align='center'>\n                        {(reportsLen < 1 || isStarted) && <Button fullWidth maw={isLarge ? 350 : '100%'} size={isLarge ? 'xl' : 'lg'} className='mantine-button-rainbow' onClick={() => setSplashScreen(false)}>\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\n                            </Button>}\n                        {reportsLen > 0 && <Button fullWidth variant='default' maw={isLarge ? 350 : '100%'} size={isLarge ? 'xl' : 'lg'} onClick={onStartClickHandler}>\n                                Начать заново\n                            </Button>}\n                    </Stack>\n                </Stack>\n            </Container>\n        </Box>;\n};",
      "start": 1750275033895,
      "end": 1750275033897,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useEffect",
          "useState",
          "Box",
          "Button",
          "Container",
          "Flex",
          "Stack",
          "Title",
          "useUnit",
          "usePageContext",
          "useIsLarge",
          "PageLoader",
          "getSurveysInfoQuery",
          "ReportModel",
          "TestModel",
          "TakeTestAgainModel",
          "CARDS",
          "Card",
          "s",
          "TestSplashScreen",
          "isMobile",
          "isLarge",
          "isStarted",
          "setSplashScreen",
          "testAgain",
          "$currentProgress",
          "map",
          "progress",
          "setSplashScreenVisibility",
          "takeTestAgainClicked",
          "reportsLen",
          "isLoading",
          "isStale",
          "$allUserReports",
          "reports",
          "length",
          "$pending",
          "$stale",
          "mounted",
          "setMounted",
          "onStartClickHandler",
          "title",
          "cards",
          "card",
          "id"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx"],
        "sourcesContent": [
          "import { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\n\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\n\nimport { CARDS } from './const';\nimport { Card } from './ui';\n\nimport s from './SplashScreen.module.css';\n\nexport const TestSplashScreen = () => {\n    const { isMobile } = usePageContext();\n    const isLarge = useIsLarge();\n    const [isStarted, setSplashScreen, testAgain] = useUnit([\n        TestModel.$currentProgress.map((progress) => progress > 0),\n        TestModel.setSplashScreenVisibility,\n        TakeTestAgainModel.takeTestAgainClicked,\n    ]);\n    const [reportsLen, isLoading, isStale] = useUnit([\n        ReportModel.$allUserReports.map((reports) => reports?.length),\n        getSurveysInfoQuery.$pending,\n        getSurveysInfoQuery.$stale,\n    ]);\n\n    const [mounted, setMounted] = useState(false);\n\n    const onStartClickHandler = () => {\n        testAgain();\n        setSplashScreen(false);\n    };\n\n    useEffect(() => setMounted(true), []);\n    if (isStale || isLoading || !mounted) return <PageLoader />;\n\n    return (\n        <Box py={!isLarge || isMobile ? 0 : 120}>\n            <Container mb='5xl'>\n                <Stack gap={0}>\n                    <Title className={s.title} order={2}>\n                        Тест на определение типа личности\n                    </Title>\n                    <Flex className={s.cards}>\n                        {CARDS.map((card) => (\n                            <Card {...card} key={card.id} />\n                        ))}\n                    </Flex>\n                    <Stack justify='center' align='center'>\n                        {(reportsLen < 1 || isStarted) && (\n                            <Button\n                                fullWidth\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                className='mantine-button-rainbow'\n                                onClick={() => setSplashScreen(false)}\n                            >\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\n                            </Button>\n                        )}\n                        {reportsLen > 0 && (\n                            <Button\n                                fullWidth\n                                variant='default'\n                                maw={isLarge ? 350 : '100%'}\n                                size={isLarge ? 'xl' : 'lg'}\n                                onClick={onStartClickHandler}\n                            >\n                                Начать заново\n                            </Button>\n                        )}\n                    </Stack>\n                </Stack>\n            </Container>\n        </Box>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Container, Flex, Stack, Title } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { TestModel } from \"@/entities/Test\";\nimport { TakeTestAgainModel } from \"@/features/TakeTestAgain\";\nimport { CARDS } from \"./const\";\nimport { Card } from \"./ui\";\nimport s from \"./SplashScreen.module.css\";\nexport const TestSplashScreen = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([TestModel.$currentProgress.map((progress) => progress > 0), TestModel.setSplashScreenVisibility, TakeTestAgainModel.takeTestAgainClicked]);\n  const [reportsLen, isLoading, isStale] = useUnit([ReportModel.$allUserReports.map((reports) => reports?.length), getSurveysInfoQuery.$pending, getSurveysInfoQuery.$stale]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return /* @__PURE__ */ jsx(PageLoader, {});\n  return /* @__PURE__ */ jsx(Box, { py: !isLarge || isMobile ? 0 : 120, children: /* @__PURE__ */ jsx(Container, { mb: \"5xl\", children: /* @__PURE__ */ jsxs(Stack, { gap: 0, children: [\n    /* @__PURE__ */ jsx(Title, { className: s.title, order: 2, children: \"Тест на определение типа личности\" }),\n    /* @__PURE__ */ jsx(Flex, { className: s.cards, children: CARDS.map((card) => /* @__PURE__ */ createElement(Card, { ...card, key: card.id })) }),\n    /* @__PURE__ */ jsxs(Stack, { justify: \"center\", align: \"center\", children: [\n      (reportsLen < 1 || isStarted) && /* @__PURE__ */ jsx(Button, { fullWidth: true, maw: isLarge ? 350 : \"100%\", size: isLarge ? \"xl\" : \"lg\", className: \"mantine-button-rainbow\", onClick: () => setSplashScreen(false), children: isStarted ? \"Продолжить тестирование\" : \"Пройти тестирование\" }),\n      reportsLen > 0 && /* @__PURE__ */ jsx(Button, { fullWidth: true, variant: \"default\", maw: isLarge ? 350 : \"100%\", size: isLarge ? \"xl\" : \"lg\", onClick: onStartClickHandler, children: \"Начать заново\" })\n    ] })\n  ] }) }) });\n};\n",
      "start": 1750275033897,
      "end": 1750275034184,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SplashScreen/index.tsx"],
        "sourcesContent": [
          "import { useEffect, useState } from 'react';\nimport { Box, Button, Container, Flex, Stack, Title } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { useIsLarge } from '@/shared/lib';\nimport { PageLoader } from '@/shared/ui';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { TestModel } from '@/entities/Test';\nimport { TakeTestAgainModel } from '@/features/TakeTestAgain';\nimport { CARDS } from './const';\nimport { Card } from './ui';\nimport s from './SplashScreen.module.css';\nexport const TestSplashScreen = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([TestModel.$currentProgress.map(progress => progress > 0), TestModel.setSplashScreenVisibility, TakeTestAgainModel.takeTestAgainClicked]);\n  const [reportsLen, isLoading, isStale] = useUnit([ReportModel.$allUserReports.map(reports => reports?.length), getSurveysInfoQuery.$pending, getSurveysInfoQuery.$stale]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return <PageLoader />;\n  return <Box py={!isLarge || isMobile ? 0 : 120}>\n            <Container mb='5xl'>\n                <Stack gap={0}>\n                    <Title className={s.title} order={2}>\n                        Тест на определение типа личности\n                    </Title>\n                    <Flex className={s.cards}>\n                        {CARDS.map(card => <Card {...card} key={card.id} />)}\n                    </Flex>\n                    <Stack justify='center' align='center'>\n                        {(reportsLen < 1 || isStarted) && <Button fullWidth maw={isLarge ? 350 : '100%'} size={isLarge ? 'xl' : 'lg'} className='mantine-button-rainbow' onClick={() => setSplashScreen(false)}>\n                                {isStarted ? 'Продолжить тестирование' : 'Пройти тестирование'}\n                            </Button>}\n                        {reportsLen > 0 && <Button fullWidth variant='default' maw={isLarge ? 350 : '100%'} size={isLarge ? 'xl' : 'lg'} onClick={onStartClickHandler}>\n                                Начать заново\n                            </Button>}\n                    </Stack>\n                </Stack>\n            </Container>\n        </Box>;\n};"
        ],
        "mappings": "AAyB+C,cAU3B,YAV2B;AAQJ;AAjC3C,SAAS,WAAW,gBAAgB;AACpC,SAAS,KAAK,QAAQ,WAAW,MAAM,OAAO,aAAa;AAC3D,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,qBAAqB,mBAAmB;AACjD,SAAS,iBAAiB;AAC1B,SAAS,0BAA0B;AACnC,SAAS,aAAa;AACtB,SAAS,YAAY;AACrB,OAAO,OAAO;AACP,aAAM,mBAAmB,MAAM;AACpC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,eAAe;AACnB,QAAM,UAAU,WAAW;AAC3B,QAAM,CAAC,WAAW,iBAAiB,SAAS,IAAI,QAAQ,CAAC,UAAU,iBAAiB,IAAI,cAAY,WAAW,CAAC,GAAG,UAAU,2BAA2B,mBAAmB,oBAAoB,CAAC;AAChM,QAAM,CAAC,YAAY,WAAW,OAAO,IAAI,QAAQ,CAAC,YAAY,gBAAgB,IAAI,aAAW,SAAS,MAAM,GAAG,oBAAoB,UAAU,oBAAoB,MAAM,CAAC;AACxK,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAC5C,QAAM,sBAAsB,MAAM;AAChC,cAAU;AACV,oBAAgB,KAAK;AAAA,EACvB;AACA,YAAU,MAAM,WAAW,IAAI,GAAG,CAAC,CAAC;AACpC,MAAI,WAAW,aAAa,CAAC,QAAS,QAAO,oBAAC,cAAW;AACzD,SAAO,oBAAC,OAAI,IAAI,CAAC,WAAW,WAAW,IAAI,KACjC,8BAAC,aAAU,IAAG,OACV,+BAAC,SAAM,KAAK,GACR;AAAA,wBAAC,SAAM,WAAW,EAAE,OAAO,OAAO,GAAG,+CAErC;AAAA,IACA,oBAAC,QAAK,WAAW,EAAE,OACd,gBAAM,IAAI,UAAQ,8BAAC,QAAM,GAAG,MAAM,KAAK,KAAK,IAAI,CAAE,GACvD;AAAA,IACA,qBAAC,SAAM,SAAQ,UAAS,OAAM,UACxB;AAAA,oBAAa,KAAK,cAAc,oBAAC,UAAO,WAAS,MAAC,KAAK,UAAU,MAAM,QAAQ,MAAM,UAAU,OAAO,MAAM,WAAU,0BAAyB,SAAS,MAAM,gBAAgB,KAAK,GAC5K,sBAAY,4BAA4B,uBAC7C;AAAA,MACH,aAAa,KAAK,oBAAC,UAAO,WAAS,MAAC,SAAQ,WAAU,KAAK,UAAU,MAAM,QAAQ,MAAM,UAAU,OAAO,MAAM,SAAS,qBAAqB,2BAE3I;AAAA,OACR;AAAA,KACJ,GACJ,GACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/Test/SplashScreen/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Container, Flex, Stack, Title } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { TestModel } from \"@/entities/Test\";\nimport { TakeTestAgainModel } from \"@/features/TakeTestAgain\";\nimport { CARDS } from \"./const\";\nimport { Card } from \"./ui\";\nimport s from \"./SplashScreen.module.css\";\nexport const TestSplashScreen = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const isLarge = useIsLarge();\n  const [isStarted, setSplashScreen, testAgain] = useUnit([TestModel.$currentProgress.map((progress) => progress > 0), TestModel.setSplashScreenVisibility, TakeTestAgainModel.takeTestAgainClicked]);\n  const [reportsLen, isLoading, isStale] = useUnit([ReportModel.$allUserReports.map((reports) => reports?.length), getSurveysInfoQuery.$pending, getSurveysInfoQuery.$stale]);\n  const [mounted, setMounted] = useState(false);\n  const onStartClickHandler = () => {\n    testAgain();\n    setSplashScreen(false);\n  };\n  useEffect(() => setMounted(true), []);\n  if (isStale || isLoading || !mounted) return /* @__PURE__ */ jsx(PageLoader, {});\n  return /* @__PURE__ */ jsx(Box, { py: !isLarge || isMobile ? 0 : 120, children: /* @__PURE__ */ jsx(Container, { mb: \"5xl\", children: /* @__PURE__ */ jsxs(Stack, { gap: 0, children: [\n    /* @__PURE__ */ jsx(Title, { className: s.title, order: 2, children: \"Тест на определение типа личности\" }),\n    /* @__PURE__ */ jsx(Flex, { className: s.cards, children: CARDS.map((card) => /* @__PURE__ */ createElement(Card, { ...card, key: card.id })) }),\n    /* @__PURE__ */ jsxs(Stack, { justify: \"center\", align: \"center\", children: [\n      (reportsLen < 1 || isStarted) && /* @__PURE__ */ jsx(Button, { fullWidth: true, maw: isLarge ? 350 : \"100%\", size: isLarge ? \"xl\" : \"lg\", className: \"mantine-button-rainbow\", onClick: () => setSplashScreen(false), children: isStarted ? \"Продолжить тестирование\" : \"Пройти тестирование\" }),\n      reportsLen > 0 && /* @__PURE__ */ jsx(Button, { fullWidth: true, variant: \"default\", maw: isLarge ? 350 : \"100%\", size: isLarge ? \"xl\" : \"lg\", onClick: onStartClickHandler, children: \"Начать заново\" })\n    ] })\n  ] }) }) });\n};\n",
      "start": 1750275034184,
      "end": 1750275034184,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/Test/SplashScreen/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrxzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxpJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACht
      }
    }
  ]
}

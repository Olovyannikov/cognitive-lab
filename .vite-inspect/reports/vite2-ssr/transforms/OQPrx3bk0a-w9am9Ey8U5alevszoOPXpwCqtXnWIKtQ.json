{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/lib/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { PersonalityTypesResponse } from '../api/dto';\n\nexport const normalizePersonalities = (data: PersonalityTypesResponse[]) =>\n    data\n        .map((types) => types.types)\n        .flat()\n        .reduce(\n            (acc, curr) => {\n                acc[curr.code] = curr.name;\n\n                return acc;\n            },\n            {} as Record<string, string>\n        ) ?? ({} as Record<string, string>);\n",
      "start": 1750239308334,
      "end": 1750239308360,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "export const normalizePersonalities = (data)=>data.map((types)=>types.types).flat().reduce((acc, curr)=>{\n        acc[curr.code] = curr.name;\n        return acc;\n    }, {}) ?? {};\n",
      "start": 1750239308360,
      "end": 1750239308363,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/lib/index.ts\"],\"sourcesContent\":[\"import type { PersonalityTypesResponse } from '../api/dto';\\n\\nexport const normalizePersonalities = (data: PersonalityTypesResponse[]) =>\\n    data\\n        .map((types) => types.types)\\n        .flat()\\n        .reduce(\\n            (acc, curr) => {\\n                acc[curr.code] = curr.name;\\n\\n                return acc;\\n            },\\n            {} as Record<string, string>\\n        ) ?? ({} as Record<string, string>);\\n\"],\"names\":[\"normalizePersonalities\",\"data\",\"map\",\"types\",\"flat\",\"reduce\",\"acc\",\"curr\",\"code\",\"name\"],\"mappings\":\"AAEA,OAAO,MAAMA,yBAAyB,CAACC,OACnCA,KACKC,GAAG,CAAC,CAACC,QAAUA,MAAMA,KAAK,EAC1BC,IAAI,GACJC,MAAM,CACH,CAACC,KAAKC;QACFD,GAAG,CAACC,KAAKC,IAAI,CAAC,GAAGD,KAAKE,IAAI;QAE1B,OAAOH;IACX,GACA,CAAC,MACC,CAAC,EAA6B\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "export const normalizePersonalities = (data) => data.map((types) => types.types).flat().reduce((acc, curr) => {\n  acc[curr.code] = curr.name;\n  return acc;\n}, {}) ?? {};\n",
      "start": 1750239308363,
      "end": 1750239308477,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/lib/index.ts"],
        "sourcesContent": [
          "export const normalizePersonalities = (data)=>data.map((types)=>types.types).flat().reduce((acc, curr)=>{\n        acc[curr.code] = curr.name;\n        return acc;\n    }, {}) ?? {};\n"
        ],
        "mappings": "AAAO,aAAM,yBAAyB,CAAC,SAAO,KAAK,IAAI,CAAC,UAAQ,MAAM,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,SAAO;AAChG,MAAI,KAAK,IAAI,IAAI,KAAK;AACtB,SAAO;AACX,GAAG,CAAC,CAAC,KAAK,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Personality/lib/index.ts [vike:pluginModuleBanner] */\nexport const normalizePersonalities = (data) => data.map((types) => types.types).flat().reduce((acc, curr) => {\n  acc[curr.code] = curr.name;\n  return acc;\n}, {}) ?? {};\n",
      "start": 1750239308478,
      "end": 1750239308478,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Personality/lib/index.ts"],
        "names": [],
        "mappings
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\n\nimport { TestModel } from '@/entities/Test';\n\nimport { Rephrasing } from '@/features/Rephrasing';\n\nimport { SubmitTestModel } from '@/widgets/Test';\n\nimport s from './Controls.module.css';\n\nexport const Controls = () => {\n    const questions = useUnit(TestModel.$questions);\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n        page: TestModel.$currentPage,\n        onChange: TestModel.formPageChanged,\n        controlModal: SubmitTestModel.submitModalStateChanged,\n        value: TestModel.$currentValue,\n        form: TestModel.$scaleForm,\n        onDirectionChange: TestModel.directionChanged,\n    });\n    const [visible, setVisible] = useState(false);\n\n    const isExists = () => {\n        if (isArray(value)) {\n            return value.length > 0;\n        }\n\n        if (isObject(value)) {\n            return value?.value !== undefined;\n        }\n\n        return value !== null;\n    };\n\n    useTimeout(() => (isExists() ? setVisible(true) : setVisible(false)), isExists() ? 250 : 0);\n\n    if (!questions) return null;\n\n    const isFirst = page === 1;\n    const isLast = page === questions.length;\n\n    return (\n        <Pagination.Root\n            className={s.root}\n            total={questions.length}\n            mt='auto'\n            value={page}\n            onChange={(payload) => {\n                onChange(payload);\n                onDirectionChange(payload > page ? 'forward' : 'backward');\n            }}\n        >\n            <Group className={s.group}>\n                <Pagination.Previous\n                    disabled={isFirst}\n                    opacity={isFirst ? 0 : 1}\n                    className={clsx(s.button, s.prev)}\n                    icon={() => <ArrowLeft weight='bold' />}\n                />\n\n                <Rephrasing />\n                <Pagination.Next\n                    opacity={!visible || isLast ? 0 : 1}\n                    disabled={!visible || isLast}\n                    className={clsx(s.button, s.next)}\n                    icon={() => <ArrowRight weight='bold' />}\n                />\n                <Button\n                    fw='700'\n                    fz={16}\n                    c='dark.6'\n                    variant='subtle'\n                    hidden={!isLast}\n                    onClick={controlModal}\n                    aria-label='Завершить тестирование'\n                    className={clsx(s.button, s.next, s.end)}\n                    rightSection={<ArrowRight weight='bold' />}\n                />\n            </Group>\n        </Pagination.Root>\n    );\n};\n",
      "start": 1750271784981,
      "end": 1750271785006,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\nimport { TestModel } from '@/entities/Test';\nimport { Rephrasing } from '@/features/Rephrasing';\nimport { SubmitTestModel } from '@/widgets/Test';\nimport s from './Controls.module.css';\nexport const Controls = ()=>{\n    const questions = useUnit(TestModel.$questions);\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n        page: TestModel.$currentPage,\n        onChange: TestModel.formPageChanged,\n        controlModal: SubmitTestModel.submitModalStateChanged,\n        value: TestModel.$currentValue,\n        form: TestModel.$scaleForm,\n        onDirectionChange: TestModel.directionChanged\n    });\n    const [visible, setVisible] = useState(false);\n    const isExists = ()=>{\n        if (isArray(value)) {\n            return value.length > 0;\n        }\n        if (isObject(value)) {\n            return value?.value !== undefined;\n        }\n        return value !== null;\n    };\n    useTimeout(()=>isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n    if (!questions) return null;\n    const isFirst = page === 1;\n    const isLast = page === questions.length;\n    return /*#__PURE__*/ _jsx(Pagination.Root, {\n        className: s.root,\n        total: questions.length,\n        mt: \"auto\",\n        value: page,\n        onChange: (payload)=>{\n            onChange(payload);\n            onDirectionChange(payload > page ? 'forward' : 'backward');\n        },\n        children: /*#__PURE__*/ _jsxs(Group, {\n            className: s.group,\n            children: [\n                /*#__PURE__*/ _jsx(Pagination.Previous, {\n                    disabled: isFirst,\n                    opacity: isFirst ? 0 : 1,\n                    className: clsx(s.button, s.prev),\n                    icon: ()=>/*#__PURE__*/ _jsx(ArrowLeft, {\n                            weight: \"bold\"\n                        })\n                }),\n                /*#__PURE__*/ _jsx(Rephrasing, {}),\n                /*#__PURE__*/ _jsx(Pagination.Next, {\n                    opacity: !visible || isLast ? 0 : 1,\n                    disabled: !visible || isLast,\n                    className: clsx(s.button, s.next),\n                    icon: ()=>/*#__PURE__*/ _jsx(ArrowRight, {\n                            weight: \"bold\"\n                        })\n                }),\n                /*#__PURE__*/ _jsx(Button, {\n                    fw: \"700\",\n                    fz: 16,\n                    c: \"dark.6\",\n                    variant: \"subtle\",\n                    hidden: !isLast,\n                    onClick: controlModal,\n                    \"aria-label\": \"Завершить тестирование\",\n                    className: clsx(s.button, s.next, s.end),\n                    rightSection: /*#__PURE__*/ _jsx(ArrowRight, {\n                        weight: \"bold\"\n                    })\n                })\n            ]\n        })\n    });\n};\n",
      "start": 1750271785006,
      "end": 1750271785009,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx\"],\"sourcesContent\":[\"import { useState } from 'react';\\nimport { Button, Group, Pagination } from '@mantine/core';\\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\\nimport clsx from 'clsx';\\nimport { useUnit } from 'effector-react';\\nimport { isArray, isObject } from 'lodash-es';\\nimport { useTimeout } from 'usehooks-ts';\\n\\nimport { TestModel } from '@/entities/Test';\\n\\nimport { Rephrasing } from '@/features/Rephrasing';\\n\\nimport { SubmitTestModel } from '@/widgets/Test';\\n\\nimport s from './Controls.module.css';\\n\\nexport const Controls = () => {\\n    const questions = useUnit(TestModel.$questions);\\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\\n        page: TestModel.$currentPage,\\n        onChange: TestModel.formPageChanged,\\n        controlModal: SubmitTestModel.submitModalStateChanged,\\n        value: TestModel.$currentValue,\\n        form: TestModel.$scaleForm,\\n        onDirectionChange: TestModel.directionChanged,\\n    });\\n    const [visible, setVisible] = useState(false);\\n\\n    const isExists = () => {\\n        if (isArray(value)) {\\n            return value.length > 0;\\n        }\\n\\n        if (isObject(value)) {\\n            return value?.value !== undefined;\\n        }\\n\\n        return value !== null;\\n    };\\n\\n    useTimeout(() => (isExists() ? setVisible(true) : setVisible(false)), isExists() ? 250 : 0);\\n\\n    if (!questions) return null;\\n\\n    const isFirst = page === 1;\\n    const isLast = page === questions.length;\\n\\n    return (\\n        <Pagination.Root\\n            className={s.root}\\n            total={questions.length}\\n            mt='auto'\\n            value={page}\\n            onChange={(payload) => {\\n                onChange(payload);\\n                onDirectionChange(payload > page ? 'forward' : 'backward');\\n            }}\\n        >\\n            <Group className={s.group}>\\n                <Pagination.Previous\\n                    disabled={isFirst}\\n                    opacity={isFirst ? 0 : 1}\\n                    className={clsx(s.button, s.prev)}\\n                    icon={() => <ArrowLeft weight='bold' />}\\n                />\\n\\n                <Rephrasing />\\n                <Pagination.Next\\n                    opacity={!visible || isLast ? 0 : 1}\\n                    disabled={!visible || isLast}\\n                    className={clsx(s.button, s.next)}\\n                    icon={() => <ArrowRight weight='bold' />}\\n                />\\n                <Button\\n                    fw='700'\\n                    fz={16}\\n                    c='dark.6'\\n                    variant='subtle'\\n                    hidden={!isLast}\\n                    onClick={controlModal}\\n                    aria-label='Завершить тестирование'\\n                    className={clsx(s.button, s.next, s.end)}\\n                    rightSection={<ArrowRight weight='bold' />}\\n                />\\n            </Group>\\n        </Pagination.Root>\\n    );\\n};\\n\"],\"names\":[\"useState\",\"Button\",\"Group\",\"Pagination\",\"ArrowLeft\",\"ArrowRight\",\"clsx\",\"useUnit\",\"isArray\",\"isObject\",\"useTimeout\",\"TestModel\",\"Rephrasing\",\"SubmitTestModel\",\"s\",\"Controls\",\"questions\",\"$questions\",\"page\",\"onChange\",\"controlModal\",\"value\",\"onDirectionChange\",\"$currentPage\",\"formPageChanged\",\"submitModalStateChanged\",\"$currentValue\",\"form\",\"$scaleForm\",\"directionChanged\",\"visible\",\"setVisible\",\"isExists\",\"length\",\"undefined\",\"isFirst\",\"isLast\",\"Root\",\"className\",\"root\",\"total\",\"mt\",\"payload\",\"group\",\"Previous\",\"disabled\",\"opacity\",\"button\",\"prev\",\"icon\",\"weight\",\"Next\",\"next\",\"fw\",\"fz\",\"c\",\"variant\",\"hidden\",\"onClick\",\"aria-label\",\"end\",\"rightSection\"],\"mappings\":\";AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,SAASC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;AAC1D,SAASC,SAAS,EAAEC,UAAU,QAAQ,iCAAiC;AACvE,OAAOC,UAAU,OAAO;AACxB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAC9C,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,UAAU,QAAQ,wBAAwB;AAEnD,SAASC,eAAe,QAAQ,iBAAiB;AAEjD,OAAOC,OAAO,wBAAwB;AAEtC,OAAO,MAAMC,WAAW;IACpB,MAAMC,YAAYT,QAAQI,UAAUM,UAAU;IAC9C,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,EAAEC,iBAAiB,EAAE,GAAGf,QAAQ;QACvEW,MAAMP,UAAUY,YAAY;QAC5BJ,UAAUR,UAAUa,eAAe;QACnCJ,cAAcP,gBAAgBY,uBAAuB;QACrDJ,OAAOV,UAAUe,aAAa;QAC9BC,MAAMhB,UAAUiB,UAAU;QAC1BN,mBAAmBX,UAAUkB,gBAAgB;IACjD;IACA,MAAM,CAACC,SAASC,WAAW,GAAG/B,SAAS;IAEvC,MAAMgC,WAAW;QACb,IAAIxB,QAAQa,QAAQ;YAChB,OAAOA,MAAMY,MAAM,GAAG;QAC1B;QAEA,IAAIxB,SAASY,QAAQ;YACjB,OAAOA,OAAOA,UAAUa;QAC5B;QAEA,OAAOb,UAAU;IACrB;IAEAX,WAAW,IAAOsB,aAAaD,WAAW,QAAQA,WAAW,QAASC,aAAa,MAAM;IAEzF,IAAI,CAAChB,WAAW,OAAO;IAEvB,MAAMmB,UAAUjB,SAAS;IACzB,MAAMkB,SAASlB,SAASF,UAAUiB,MAAM;IAExC,qBACI,KAAC9B,WAAWkC,IAAI;QACZC,WAAWxB,EAAEyB,IAAI;QACjBC,OAAOxB,UAAUiB,MAAM;QACvBQ,IAAG;QACHpB,OAAOH;QACPC,UAAU,CAACuB;YACPvB,SAASuB;YACTpB,kBAAkBoB,UAAUxB,OAAO,YAAY;QACnD;kBAEA,cAAA,MAAChB;YAAMoC,WAAWxB,EAAE6B,KAAK;;8BACrB,KAACxC,WAAWyC,QAAQ;oBAChBC,UAAUV;oBACVW,SAASX,UAAU,IAAI;oBACvBG,WAAWhC,KAAKQ,EAAEiC,MAAM,EAAEjC,EAAEkC,IAAI;oBAChCC,MAAM,kBAAM,KAAC7C;4BAAU8C,QAAO;;;8BAGlC,KAACtC;8BACD,KAACT,WAAWgD,IAAI;oBACZL,SAAS,CAAChB,WAAWM,SAAS,IAAI;oBAClCS,UAAU,CAACf,WAAWM;oBACtBE,WAAWhC,KAAKQ,EAAEiC,MAAM,EAAEjC,EAAEsC,IAAI;oBAChCH,MAAM,kBAAM,KAAC5C;4BAAW6C,QAAO;;;8BAEnC,KAACjD;oBACGoD,IAAG;oBACHC,IAAI;oBACJC,GAAE;oBACFC,SAAQ;oBACRC,QAAQ,CAACrB;oBACTsB,SAAStC;oBACTuC,cAAW;oBACXrB,WAAWhC,KAAKQ,EAAEiC,MAAM,EAAEjC,EAAEsC,IAAI,EAAEtC,EAAE8C,GAAG;oBACvCC,4BAAc,KAACxD;wBAAW6C,QAAO;;;;;;AAKrD,EAAE\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { Button, Group, Pagination } from \"@mantine/core\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useUnit } from \"effector-react\";\nimport { isArray, isObject } from \"lodash-es\";\nimport { useTimeout } from \"usehooks-ts\";\nimport { TestModel } from \"@/entities/Test\";\nimport { Rephrasing } from \"@/features/Rephrasing\";\nimport { SubmitTestModel } from \"@/widgets/Test\";\nimport s from \"./Controls.module.css\";\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== void 0;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return /* @__PURE__ */ _jsx(Pagination.Root, {\n    className: s.root,\n    total: questions.length,\n    mt: \"auto\",\n    value: page,\n    onChange: (payload) => {\n      onChange(payload);\n      onDirectionChange(payload > page ? \"forward\" : \"backward\");\n    },\n    children: /* @__PURE__ */ _jsxs(Group, {\n      className: s.group,\n      children: [\n        /* @__PURE__ */ _jsx(Pagination.Previous, {\n          disabled: isFirst,\n          opacity: isFirst ? 0 : 1,\n          className: clsx(s.button, s.prev),\n          icon: () => /* @__PURE__ */ _jsx(ArrowLeft, {\n            weight: \"bold\"\n          })\n        }),\n        /* @__PURE__ */ _jsx(Rephrasing, {}),\n        /* @__PURE__ */ _jsx(Pagination.Next, {\n          opacity: !visible || isLast ? 0 : 1,\n          disabled: !visible || isLast,\n          className: clsx(s.button, s.next),\n          icon: () => /* @__PURE__ */ _jsx(ArrowRight, {\n            weight: \"bold\"\n          })\n        }),\n        /* @__PURE__ */ _jsx(Button, {\n          fw: \"700\",\n          fz: 16,\n          c: \"dark.6\",\n          variant: \"subtle\",\n          hidden: !isLast,\n          onClick: controlModal,\n          \"aria-label\": \"Завершить тестирование\",\n          className: clsx(s.button, s.next, s.end),\n          rightSection: /* @__PURE__ */ _jsx(ArrowRight, {\n            weight: \"bold\"\n          })\n        })\n      ]\n    })\n  });\n};\n",
      "start": 1750271785009,
      "end": 1750271785220,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\nimport { TestModel } from '@/entities/Test';\nimport { Rephrasing } from '@/features/Rephrasing';\nimport { SubmitTestModel } from '@/widgets/Test';\nimport s from './Controls.module.css';\nexport const Controls = ()=>{\n    const questions = useUnit(TestModel.$questions);\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n        page: TestModel.$currentPage,\n        onChange: TestModel.formPageChanged,\n        controlModal: SubmitTestModel.submitModalStateChanged,\n        value: TestModel.$currentValue,\n        form: TestModel.$scaleForm,\n        onDirectionChange: TestModel.directionChanged\n    });\n    const [visible, setVisible] = useState(false);\n    const isExists = ()=>{\n        if (isArray(value)) {\n            return value.length > 0;\n        }\n        if (isObject(value)) {\n            return value?.value !== undefined;\n        }\n        return value !== null;\n    };\n    useTimeout(()=>isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n    if (!questions) return null;\n    const isFirst = page === 1;\n    const isLast = page === questions.length;\n    return /*#__PURE__*/ _jsx(Pagination.Root, {\n        className: s.root,\n        total: questions.length,\n        mt: \"auto\",\n        value: page,\n        onChange: (payload)=>{\n            onChange(payload);\n            onDirectionChange(payload > page ? 'forward' : 'backward');\n        },\n        children: /*#__PURE__*/ _jsxs(Group, {\n            className: s.group,\n            children: [\n                /*#__PURE__*/ _jsx(Pagination.Previous, {\n                    disabled: isFirst,\n                    opacity: isFirst ? 0 : 1,\n                    className: clsx(s.button, s.prev),\n                    icon: ()=>/*#__PURE__*/ _jsx(ArrowLeft, {\n                            weight: \"bold\"\n                        })\n                }),\n                /*#__PURE__*/ _jsx(Rephrasing, {}),\n                /*#__PURE__*/ _jsx(Pagination.Next, {\n                    opacity: !visible || isLast ? 0 : 1,\n                    disabled: !visible || isLast,\n                    className: clsx(s.button, s.next),\n                    icon: ()=>/*#__PURE__*/ _jsx(ArrowRight, {\n                            weight: \"bold\"\n                        })\n                }),\n                /*#__PURE__*/ _jsx(Button, {\n                    fw: \"700\",\n                    fz: 16,\n                    c: \"dark.6\",\n                    variant: \"subtle\",\n                    hidden: !isLast,\n                    onClick: controlModal,\n                    \"aria-label\": \"Завершить тестирование\",\n                    className: clsx(s.button, s.next, s.end),\n                    rightSection: /*#__PURE__*/ _jsx(ArrowRight, {\n                        weight: \"bold\"\n                    })\n                })\n            ]\n        })\n    });\n};\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,gBAAgB;AACzB,SAAS,QAAQ,OAAO,kBAAkB;AAC1C,SAAS,WAAW,kBAAkB;AACtC,OAAO,UAAU;AACjB,SAAS,eAAe;AACxB,SAAS,SAAS,gBAAgB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,OAAO,OAAO;AACP,aAAM,WAAW,MAAI;AACxB,QAAM,YAAY,QAAQ,UAAU,UAAU;AAC9C,QAAM,EAAE,MAAM,UAAU,cAAc,OAAO,kBAAkB,IAAI,QAAQ;AAAA,IACvE,MAAM,UAAU;AAAA,IAChB,UAAU,UAAU;AAAA,IACpB,cAAc,gBAAgB;AAAA,IAC9B,OAAO,UAAU;AAAA,IACjB,MAAM,UAAU;AAAA,IAChB,mBAAmB,UAAU;AAAA,EACjC,CAAC;AACD,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAC5C,QAAM,WAAW,MAAI;AACjB,QAAI,QAAQ,KAAK,GAAG;AAChB,aAAO,MAAM,SAAS;AAAA,IAC1B;AACA,QAAI,SAAS,KAAK,GAAG;AACjB,aAAO,OAAO,UAAU;AAAA,IAC5B;AACA,WAAO,UAAU;AAAA,EACrB;AACA,aAAW,MAAI,SAAS,IAAI,WAAW,IAAI,IAAI,WAAW,KAAK,GAAG,SAAS,IAAI,MAAM,CAAC;AACtF,MAAI,CAAC,UAAW,QAAO;AACvB,QAAM,UAAU,SAAS;AACzB,QAAM,SAAS,SAAS,UAAU;AAClC,SAAqB,qBAAK,WAAW,MAAM;AAAA,IACvC,WAAW,EAAE;AAAA,IACb,OAAO,UAAU;AAAA,IACjB,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,UAAU,CAAC,YAAU;AACjB,eAAS,OAAO;AAChB,wBAAkB,UAAU,OAAO,YAAY,UAAU;AAAA,IAC7D;AAAA,IACA,UAAwB,sBAAM,OAAO;AAAA,MACjC,WAAW,EAAE;AAAA,MACb,UAAU;AAAA,QACQ,qBAAK,WAAW,UAAU;AAAA,UACpC,UAAU;AAAA,UACV,SAAS,UAAU,IAAI;AAAA,UACvB,WAAW,KAAK,EAAE,QAAQ,EAAE,IAAI;AAAA,UAChC,MAAM,MAAkB,qBAAK,WAAW;AAAA,YAChC,QAAQ;AAAA,UACZ,CAAC;AAAA,QACT,CAAC;AAAA,QACa,qBAAK,YAAY,CAAC,CAAC;AAAA,QACnB,qBAAK,WAAW,MAAM;AAAA,UAChC,SAAS,CAAC,WAAW,SAAS,IAAI;AAAA,UAClC,UAAU,CAAC,WAAW;AAAA,UACtB,WAAW,KAAK,EAAE,QAAQ,EAAE,IAAI;AAAA,UAChC,MAAM,MAAkB,qBAAK,YAAY;AAAA,YACjC,QAAQ;AAAA,UACZ,CAAC;AAAA,QACT,CAAC;AAAA,QACa,qBAAK,QAAQ;AAAA,UACvB,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,SAAS;AAAA,UACT,QAAQ,CAAC;AAAA,UACT,SAAS;AAAA,UACT,cAAc;AAAA,UACd,WAAW,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;AAAA,UACvC,cAA4B,qBAAK,YAAY;AAAA,YACzC,QAAQ;AAAA,UACZ,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/Test/Controls/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { Button, Group, Pagination } from \"@mantine/core\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useUnit } from \"effector-react\";\nimport { isArray, isObject } from \"lodash-es\";\nimport { useTimeout } from \"usehooks-ts\";\nimport { TestModel } from \"@/entities/Test\";\nimport { Rephrasing } from \"@/features/Rephrasing\";\nimport { SubmitTestModel } from \"@/widgets/Test\";\nimport s from \"./Controls.module.css\";\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== void 0;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return /* @__PURE__ */ _jsx(Pagination.Root, {\n    className: s.root,\n    total: questions.length,\n    mt: \"auto\",\n    value: page,\n    onChange: (payload) => {\n      onChange(payload);\n      onDirectionChange(payload > page ? \"forward\" : \"backward\");\n    },\n    children: /* @__PURE__ */ _jsxs(Group, {\n      className: s.group,\n      children: [\n        /* @__PURE__ */ _jsx(Pagination.Previous, {\n          disabled: isFirst,\n          opacity: isFirst ? 0 : 1,\n          className: clsx(s.button, s.prev),\n          icon: () => /* @__PURE__ */ _jsx(ArrowLeft, {\n            weight: \"bold\"\n          })\n        }),\n        /* @__PURE__ */ _jsx(Rephrasing, {}),\n        /* @__PURE__ */ _jsx(Pagination.Next, {\n          opacity: !visible || isLast ? 0 : 1,\n          disabled: !visible || isLast,\n          className: clsx(s.button, s.next),\n          icon: () => /* @__PURE__ */ _jsx(ArrowRight, {\n            weight: \"bold\"\n          })\n        }),\n        /* @__PURE__ */ _jsx(Button, {\n          fw: \"700\",\n          fz: 16,\n          c: \"dark.6\",\n          variant: \"subtle\",\n          hidden: !isLast,\n          onClick: controlModal,\n          \"aria-label\": \"Завершить тестирование\",\n          className: clsx(s.button, s.next, s.end),\n          rightSection: /* @__PURE__ */ _jsx(ArrowRight, {\n            weight: \"bold\"\n          })\n        })\n      ]\n    })\n  });\n};\n",
      "start": 1750271785220,
      "end": 1750271785220,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/Test/Controls/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\n\nimport { TestModel } from '@/entities/Test';\n\nimport { Rephrasing } from '@/features/Rephrasing';\n\nimport { SubmitTestModel } from '@/widgets/Test';\n\nimport s from './Controls.module.css';\n\nexport const Controls = () => {\n    const questions = useUnit(TestModel.$questions);\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n        page: TestModel.$currentPage,\n        onChange: TestModel.formPageChanged,\n        controlModal: SubmitTestModel.submitModalStateChanged,\n        value: TestModel.$currentValue,\n        form: TestModel.$scaleForm,\n        onDirectionChange: TestModel.directionChanged,\n    });\n    const [visible, setVisible] = useState(false);\n\n    const isExists = () => {\n        if (isArray(value)) {\n            return value.length > 0;\n        }\n\n        if (isObject(value)) {\n            return value?.value !== undefined;\n        }\n\n        return value !== null;\n    };\n\n    useTimeout(() => (isExists() ? setVisible(true) : setVisible(false)), isExists() ? 250 : 0);\n\n    if (!questions) return null;\n\n    const isFirst = page === 1;\n    const isLast = page === questions.length;\n\n    return (\n        <Pagination.Root\n            className={s.root}\n            total={questions.length}\n            mt='auto'\n            value={page}\n            onChange={(payload) => {\n                onChange(payload);\n                onDirectionChange(payload > page ? 'forward' : 'backward');\n            }}\n        >\n            <Group className={s.group}>\n                <Pagination.Previous\n                    disabled={isFirst}\n                    opacity={isFirst ? 0 : 1}\n                    className={clsx(s.button, s.prev)}\n                    icon={() => <ArrowLeft weight='bold' />}\n                />\n\n                <Rephrasing />\n                <Pagination.Next\n                    opacity={!visible || isLast ? 0 : 1}\n                    disabled={!visible || isLast}\n                    className={clsx(s.button, s.next)}\n                    icon={() => <ArrowRight weight='bold' />}\n                />\n                <Button\n                    fw='700'\n                    fz={16}\n                    c='dark.6'\n                    variant='subtle'\n                    hidden={!isLast || (isLast && !isExists())}\n                    className={clsx(s.button, s.next, s.end)}\n                    onClick={controlModal}\n                    rightSection={<ArrowRight weight='bold' />}\n                    aria-label='Завершить тестирование'\n                />\n            </Group>\n        </Pagination.Root>\n    );\n};\n",
      "start": 1746125696325,
      "end": 1746125696362,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\nimport { TestModel } from '@/entities/Test';\nimport { Rephrasing } from '@/features/Rephrasing';\nimport { SubmitTestModel } from '@/widgets/Test';\nimport s from './Controls.module.css';\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const {\n    page,\n    onChange,\n    controlModal,\n    value,\n    onDirectionChange\n  } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== undefined;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return <Pagination.Root className={s.root} total={questions.length} mt='auto' value={page} onChange={payload => {\n    onChange(payload);\n    onDirectionChange(payload > page ? 'forward' : 'backward');\n  }}>\n            <Group className={s.group}>\n                <Pagination.Previous disabled={isFirst} opacity={isFirst ? 0 : 1} className={clsx(s.button, s.prev)} icon={() => <ArrowLeft weight='bold' />} />\n\n                <Rephrasing />\n                <Pagination.Next opacity={!visible || isLast ? 0 : 1} disabled={!visible || isLast} className={clsx(s.button, s.next)} icon={() => <ArrowRight weight='bold' />} />\n                <Button fw='700' fz={16} c='dark.6' variant='subtle' hidden={!isLast || isLast && !isExists()} className={clsx(s.button, s.next, s.end)} onClick={controlModal} rightSection={<ArrowRight weight='bold' />} aria-label='Завершить тестирование' />\n            </Group>\n        </Pagination.Root>;\n};",
      "start": 1746125696362,
      "end": 1746125696364,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useState",
          "Button",
          "Group",
          "Pagination",
          "ArrowLeft",
          "ArrowRight",
          "clsx",
          "useUnit",
          "isArray",
          "isObject",
          "useTimeout",
          "TestModel",
          "Rephrasing",
          "SubmitTestModel",
          "s",
          "Controls",
          "questions",
          "$questions",
          "page",
          "onChange",
          "controlModal",
          "value",
          "onDirectionChange",
          "$currentPage",
          "formPageChanged",
          "submitModalStateChanged",
          "$currentValue",
          "form",
          "$scaleForm",
          "directionChanged",
          "visible",
          "setVisible",
          "isExists",
          "length",
          "undefined",
          "isFirst",
          "isLast",
          "root",
          "payload",
          "group",
          "button",
          "prev",
          "next",
          "end"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx"],
        "sourcesContent": [
          "import { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\n\nimport { TestModel } from '@/entities/Test';\n\nimport { Rephrasing } from '@/features/Rephrasing';\n\nimport { SubmitTestModel } from '@/widgets/Test';\n\nimport s from './Controls.module.css';\n\nexport const Controls = () => {\n    const questions = useUnit(TestModel.$questions);\n    const { page, onChange, controlModal, value, onDirectionChange } = useUnit({\n        page: TestModel.$currentPage,\n        onChange: TestModel.formPageChanged,\n        controlModal: SubmitTestModel.submitModalStateChanged,\n        value: TestModel.$currentValue,\n        form: TestModel.$scaleForm,\n        onDirectionChange: TestModel.directionChanged,\n    });\n    const [visible, setVisible] = useState(false);\n\n    const isExists = () => {\n        if (isArray(value)) {\n            return value.length > 0;\n        }\n\n        if (isObject(value)) {\n            return value?.value !== undefined;\n        }\n\n        return value !== null;\n    };\n\n    useTimeout(() => (isExists() ? setVisible(true) : setVisible(false)), isExists() ? 250 : 0);\n\n    if (!questions) return null;\n\n    const isFirst = page === 1;\n    const isLast = page === questions.length;\n\n    return (\n        <Pagination.Root\n            className={s.root}\n            total={questions.length}\n            mt='auto'\n            value={page}\n            onChange={(payload) => {\n                onChange(payload);\n                onDirectionChange(payload > page ? 'forward' : 'backward');\n            }}\n        >\n            <Group className={s.group}>\n                <Pagination.Previous\n                    disabled={isFirst}\n                    opacity={isFirst ? 0 : 1}\n                    className={clsx(s.button, s.prev)}\n                    icon={() => <ArrowLeft weight='bold' />}\n                />\n\n                <Rephrasing />\n                <Pagination.Next\n                    opacity={!visible || isLast ? 0 : 1}\n                    disabled={!visible || isLast}\n                    className={clsx(s.button, s.next)}\n                    icon={() => <ArrowRight weight='bold' />}\n                />\n                <Button\n                    fw='700'\n                    fz={16}\n                    c='dark.6'\n                    variant='subtle'\n                    hidden={!isLast || (isLast && !isExists())}\n                    className={clsx(s.button, s.next, s.end)}\n                    onClick={controlModal}\n                    rightSection={<ArrowRight weight='bold' />}\n                    aria-label='Завершить тестирование'\n                />\n            </Group>\n        </Pagination.Root>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { Button, Group, Pagination } from \"@mantine/core\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useUnit } from \"effector-react\";\nimport { isArray, isObject } from \"lodash-es\";\nimport { useTimeout } from \"usehooks-ts\";\nimport { TestModel } from \"@/entities/Test\";\nimport { Rephrasing } from \"@/features/Rephrasing\";\nimport { SubmitTestModel } from \"@/widgets/Test\";\nimport s from \"./Controls.module.css\";\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const {\n    page,\n    onChange,\n    controlModal,\n    value,\n    onDirectionChange\n  } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== void 0;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return /* @__PURE__ */ jsx(Pagination.Root, { className: s.root, total: questions.length, mt: \"auto\", value: page, onChange: (payload) => {\n    onChange(payload);\n    onDirectionChange(payload > page ? \"forward\" : \"backward\");\n  }, children: /* @__PURE__ */ jsxs(Group, { className: s.group, children: [\n    /* @__PURE__ */ jsx(Pagination.Previous, { disabled: isFirst, opacity: isFirst ? 0 : 1, className: clsx(s.button, s.prev), icon: () => /* @__PURE__ */ jsx(ArrowLeft, { weight: \"bold\" }) }),\n    /* @__PURE__ */ jsx(Rephrasing, {}),\n    /* @__PURE__ */ jsx(Pagination.Next, { opacity: !visible || isLast ? 0 : 1, disabled: !visible || isLast, className: clsx(s.button, s.next), icon: () => /* @__PURE__ */ jsx(ArrowRight, { weight: \"bold\" }) }),\n    /* @__PURE__ */ jsx(Button, { fw: \"700\", fz: 16, c: \"dark.6\", variant: \"subtle\", hidden: !isLast || isLast && !isExists(), className: clsx(s.button, s.next, s.end), onClick: controlModal, rightSection: /* @__PURE__ */ jsx(ArrowRight, { weight: \"bold\" }), \"aria-label\": \"Завершить тестирование\" })\n  ] }) });\n};\n",
      "start": 1746125696364,
      "end": 1746125696597,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/Controls/index.tsx"],
        "sourcesContent": [
          "import { useState } from 'react';\nimport { Button, Group, Pagination } from '@mantine/core';\nimport { ArrowLeft, ArrowRight } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useUnit } from 'effector-react';\nimport { isArray, isObject } from 'lodash-es';\nimport { useTimeout } from 'usehooks-ts';\nimport { TestModel } from '@/entities/Test';\nimport { Rephrasing } from '@/features/Rephrasing';\nimport { SubmitTestModel } from '@/widgets/Test';\nimport s from './Controls.module.css';\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const {\n    page,\n    onChange,\n    controlModal,\n    value,\n    onDirectionChange\n  } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== undefined;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return <Pagination.Root className={s.root} total={questions.length} mt='auto' value={page} onChange={payload => {\n    onChange(payload);\n    onDirectionChange(payload > page ? 'forward' : 'backward');\n  }}>\n            <Group className={s.group}>\n                <Pagination.Previous disabled={isFirst} opacity={isFirst ? 0 : 1} className={clsx(s.button, s.prev)} icon={() => <ArrowLeft weight='bold' />} />\n\n                <Rephrasing />\n                <Pagination.Next opacity={!visible || isLast ? 0 : 1} disabled={!visible || isLast} className={clsx(s.button, s.next)} icon={() => <ArrowRight weight='bold' />} />\n                <Button fw='700' fz={16} c='dark.6' variant='subtle' hidden={!isLast || isLast && !isExists()} className={clsx(s.button, s.next, s.end)} onClick={controlModal} rightSection={<ArrowRight weight='bold' />} aria-label='Завершить тестирование' />\n            </Group>\n        </Pagination.Root>;\n};"
        ],
        "mappings": "AA6CY,SACqH,KADrH;AA7CZ,SAAS,gBAAgB;AACzB,SAAS,QAAQ,OAAO,kBAAkB;AAC1C,SAAS,WAAW,kBAAkB;AACtC,OAAO,UAAU;AACjB,SAAS,eAAe;AACxB,SAAS,SAAS,gBAAgB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,OAAO,OAAO;AACP,aAAM,WAAW,MAAM;AAC5B,QAAM,YAAY,QAAQ,UAAU,UAAU;AAC9C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,QAAQ;AAAA,IACV,MAAM,UAAU;AAAA,IAChB,UAAU,UAAU;AAAA,IACpB,cAAc,gBAAgB;AAAA,IAC9B,OAAO,UAAU;AAAA,IACjB,MAAM,UAAU;AAAA,IAChB,mBAAmB,UAAU;AAAA,EAC/B,CAAC;AACD,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAC5C,QAAM,WAAW,MAAM;AACrB,QAAI,QAAQ,KAAK,GAAG;AAClB,aAAO,MAAM,SAAS;AAAA,IACxB;AACA,QAAI,SAAS,KAAK,GAAG;AACnB,aAAO,OAAO,UAAU;AAAA,IAC1B;AACA,WAAO,UAAU;AAAA,EACnB;AACA,aAAW,MAAM,SAAS,IAAI,WAAW,IAAI,IAAI,WAAW,KAAK,GAAG,SAAS,IAAI,MAAM,CAAC;AACxF,MAAI,CAAC,UAAW,QAAO;AACvB,QAAM,UAAU,SAAS;AACzB,QAAM,SAAS,SAAS,UAAU;AAClC,SAAO,oBAAC,WAAW,MAAX,EAAgB,WAAW,EAAE,MAAM,OAAO,UAAU,QAAQ,IAAG,QAAO,OAAO,MAAM,UAAU,aAAW;AAC9G,aAAS,OAAO;AAChB,sBAAkB,UAAU,OAAO,YAAY,UAAU;AAAA,EAC3D,GACU,+BAAC,SAAM,WAAW,EAAE,OAChB;AAAA,wBAAC,WAAW,UAAX,EAAoB,UAAU,SAAS,SAAS,UAAU,IAAI,GAAG,WAAW,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAG,MAAM,MAAM,oBAAC,aAAU,QAAO,QAAO,GAAI;AAAA,IAE9I,oBAAC,cAAW;AAAA,IACZ,oBAAC,WAAW,MAAX,EAAgB,SAAS,CAAC,WAAW,SAAS,IAAI,GAAG,UAAU,CAAC,WAAW,QAAQ,WAAW,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAG,MAAM,MAAM,oBAAC,cAAW,QAAO,QAAO,GAAI;AAAA,IACjK,oBAAC,UAAO,IAAG,OAAM,IAAI,IAAI,GAAE,UAAS,SAAQ,UAAS,QAAQ,CAAC,UAAU,UAAU,CAAC,SAAS,GAAG,WAAW,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,GAAG,SAAS,cAAc,cAAc,oBAAC,cAAW,QAAO,QAAO,GAAI,cAAW,0BAAyB;AAAA,KACpP,GACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/Test/Controls/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { Button, Group, Pagination } from \"@mantine/core\";\nimport { ArrowLeft, ArrowRight } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useUnit } from \"effector-react\";\nimport { isArray, isObject } from \"lodash-es\";\nimport { useTimeout } from \"usehooks-ts\";\nimport { TestModel } from \"@/entities/Test\";\nimport { Rephrasing } from \"@/features/Rephrasing\";\nimport { SubmitTestModel } from \"@/widgets/Test\";\nimport s from \"./Controls.module.css\";\nexport const Controls = () => {\n  const questions = useUnit(TestModel.$questions);\n  const {\n    page,\n    onChange,\n    controlModal,\n    value,\n    onDirectionChange\n  } = useUnit({\n    page: TestModel.$currentPage,\n    onChange: TestModel.formPageChanged,\n    controlModal: SubmitTestModel.submitModalStateChanged,\n    value: TestModel.$currentValue,\n    form: TestModel.$scaleForm,\n    onDirectionChange: TestModel.directionChanged\n  });\n  const [visible, setVisible] = useState(false);\n  const isExists = () => {\n    if (isArray(value)) {\n      return value.length > 0;\n    }\n    if (isObject(value)) {\n      return value?.value !== void 0;\n    }\n    return value !== null;\n  };\n  useTimeout(() => isExists() ? setVisible(true) : setVisible(false), isExists() ? 250 : 0);\n  if (!questions) return null;\n  const isFirst = page === 1;\n  const isLast = page === questions.length;\n  return /* @__PURE__ */ jsx(Pagination.Root, { className: s.root, total: questions.length, mt: \"auto\", value: page, onChange: (payload) => {\n    onChange(payload);\n    onDirectionChange(payload > page ? \"forward\" : \"backward\");\n  }, children: /* @__PURE__ */ jsxs(Group, { className: s.group, children: [\n    /* @__PURE__ */ jsx(Pagination.Previous, { disabled: isFirst, opacity: isFirst ? 0 : 1, className: clsx(s.button, s.prev), icon: () => /* @__PURE__ */ jsx(ArrowLeft, { weight: \"bold\" }) }),\n    /* @__PURE__ */ jsx(Rephrasing, {}),\n    /* @__PURE__ */ jsx(Pagination.Next, { opacity: !visible || isLast ? 0 : 1, disabled: !visible || isLast, className: clsx(s.button, s.next), icon: () => /* @__PURE__ */ jsx(ArrowRight, { weight: \"bold\" }) }),\n    /* @__PURE__ */ jsx(Button, { fw: \"700\", fz: 16, c: \"dark.6\", variant: \"subtle\", hidden: !isLast || isLast && !isExists(), className: clsx(s.button, s.next, s.end), onClick: controlModal, rightSection: /* @__PURE__ */ jsx(ArrowRight, { weight: \"bold\" }), \"aria-label\": \"Завершить тестирование\" })\n  ] }) });\n};\n",
      "start": 1746125696597,
      "end": 1746125696597,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/Test/Controls/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrhM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACn
      }
    }
  ]
}

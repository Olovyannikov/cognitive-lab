{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { CSSProperties } from 'react';\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion, type Transition, type Variants } from 'motion/react';\n\nimport s from './SpinningText.module.css';\n\ninterface SpinningTextProps {\n    children: string | string[];\n    style?: CSSProperties;\n    duration?: number;\n    className?: string;\n    reverse?: boolean;\n    fontSize?: number;\n    radius?: number;\n    transition?: Transition;\n    variants?: {\n        container?: Variants;\n        item?: Variants;\n    };\n}\n\nconst BASE_TRANSITION = {\n    repeat: Infinity,\n    ease: 'linear',\n};\n\nconst BASE_ITEM_VARIANTS = {\n    hidden: {\n        opacity: 1,\n    },\n    visible: {\n        opacity: 1,\n    },\n};\n\nexport const SpinningText = ({\n    children,\n    duration = 10,\n    style,\n    className,\n    reverse = false,\n    radius = 5,\n    transition,\n    variants,\n}: SpinningTextProps) => {\n    if (typeof children !== 'string' && !Array.isArray(children)) {\n        throw new Error('children must be a string or an array of strings');\n    }\n\n    if (Array.isArray(children)) {\n        if (!children.every((child) => typeof child === 'string')) {\n            throw new Error('all elements in children array must be strings');\n        }\n        // eslint-disable-next-line no-param-reassign\n        children = children.join('');\n    }\n\n    const letters = children.split('');\n    letters.push(' ');\n\n    const finalTransition = {\n        ...BASE_TRANSITION,\n        ...transition,\n        duration: (transition as { duration?: number })?.duration ?? duration,\n    };\n\n    const containerVariants = {\n        visible: { rotate: reverse ? -360 : 360 },\n        ...variants?.container,\n    };\n\n    const itemVariants = {\n        ...BASE_ITEM_VARIANTS,\n        ...variants?.item,\n    };\n\n    return (\n        <motion.div\n            className={clsx(s.relative, className)}\n            style={{\n                ...style,\n            }}\n            initial='hidden'\n            animate='visible'\n            variants={containerVariants}\n            transition={finalTransition}\n        >\n            {letters.map((letter, index) => (\n                <motion.span\n                    aria-hidden='true'\n                    key={`${index}-${letter}`}\n                    variants={itemVariants}\n                    className={s.letters}\n                    style={{\n                        '--index': index,\n                        '--total': letters.length,\n                        '--radius': radius,\n                    }}\n                >\n                    {letter}\n                </motion.span>\n            ))}\n            <VisuallyHidden>{children}</VisuallyHidden>\n        </motion.div>\n    );\n};\n",
      "start": 1750271784868,
      "end": 1750271784885,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion } from 'motion/react';\nimport s from './SpinningText.module.css';\nconst BASE_TRANSITION = {\n    repeat: Infinity,\n    ease: 'linear'\n};\nconst BASE_ITEM_VARIANTS = {\n    hidden: {\n        opacity: 1\n    },\n    visible: {\n        opacity: 1\n    }\n};\nexport const SpinningText = ({ children, duration = 10, style, className, reverse = false, radius = 5, transition, variants })=>{\n    if (typeof children !== 'string' && !Array.isArray(children)) {\n        throw new Error('children must be a string or an array of strings');\n    }\n    if (Array.isArray(children)) {\n        if (!children.every((child)=>typeof child === 'string')) {\n            throw new Error('all elements in children array must be strings');\n        }\n        // eslint-disable-next-line no-param-reassign\n        children = children.join('');\n    }\n    const letters = children.split('');\n    letters.push(' ');\n    const finalTransition = {\n        ...BASE_TRANSITION,\n        ...transition,\n        duration: transition?.duration ?? duration\n    };\n    const containerVariants = {\n        visible: {\n            rotate: reverse ? -360 : 360\n        },\n        ...variants?.container\n    };\n    const itemVariants = {\n        ...BASE_ITEM_VARIANTS,\n        ...variants?.item\n    };\n    return /*#__PURE__*/ _jsxs(motion.div, {\n        className: clsx(s.relative, className),\n        style: {\n            ...style\n        },\n        initial: \"hidden\",\n        animate: \"visible\",\n        variants: containerVariants,\n        transition: finalTransition,\n        children: [\n            letters.map((letter, index)=>/*#__PURE__*/ _jsx(motion.span, {\n                    \"aria-hidden\": \"true\",\n                    variants: itemVariants,\n                    className: s.letters,\n                    style: {\n                        '--index': index,\n                        '--total': letters.length,\n                        '--radius': radius\n                    },\n                    children: letter\n                }, `${index}-${letter}`)),\n            /*#__PURE__*/ _jsx(VisuallyHidden, {\n                children: children\n            })\n        ]\n    });\n};\n",
      "start": 1750271784885,
      "end": 1750271784898,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx\"],\"sourcesContent\":[\"import type { CSSProperties } from 'react';\\nimport { VisuallyHidden } from '@mantine/core';\\nimport clsx from 'clsx';\\nimport { motion, type Transition, type Variants } from 'motion/react';\\n\\nimport s from './SpinningText.module.css';\\n\\ninterface SpinningTextProps {\\n    children: string | string[];\\n    style?: CSSProperties;\\n    duration?: number;\\n    className?: string;\\n    reverse?: boolean;\\n    fontSize?: number;\\n    radius?: number;\\n    transition?: Transition;\\n    variants?: {\\n        container?: Variants;\\n        item?: Variants;\\n    };\\n}\\n\\nconst BASE_TRANSITION = {\\n    repeat: Infinity,\\n    ease: 'linear',\\n};\\n\\nconst BASE_ITEM_VARIANTS = {\\n    hidden: {\\n        opacity: 1,\\n    },\\n    visible: {\\n        opacity: 1,\\n    },\\n};\\n\\nexport const SpinningText = ({\\n    children,\\n    duration = 10,\\n    style,\\n    className,\\n    reverse = false,\\n    radius = 5,\\n    transition,\\n    variants,\\n}: SpinningTextProps) => {\\n    if (typeof children !== 'string' && !Array.isArray(children)) {\\n        throw new Error('children must be a string or an array of strings');\\n    }\\n\\n    if (Array.isArray(children)) {\\n        if (!children.every((child) => typeof child === 'string')) {\\n            throw new Error('all elements in children array must be strings');\\n        }\\n        // eslint-disable-next-line no-param-reassign\\n        children = children.join('');\\n    }\\n\\n    const letters = children.split('');\\n    letters.push(' ');\\n\\n    const finalTransition = {\\n        ...BASE_TRANSITION,\\n        ...transition,\\n        duration: (transition as { duration?: number })?.duration ?? duration,\\n    };\\n\\n    const containerVariants = {\\n        visible: { rotate: reverse ? -360 : 360 },\\n        ...variants?.container,\\n    };\\n\\n    const itemVariants = {\\n        ...BASE_ITEM_VARIANTS,\\n        ...variants?.item,\\n    };\\n\\n    return (\\n        <motion.div\\n            className={clsx(s.relative, className)}\\n            style={{\\n                ...style,\\n            }}\\n            initial='hidden'\\n            animate='visible'\\n            variants={containerVariants}\\n            transition={finalTransition}\\n        >\\n            {letters.map((letter, index) => (\\n                <motion.span\\n                    aria-hidden='true'\\n                    key={`${index}-${letter}`}\\n                    variants={itemVariants}\\n                    className={s.letters}\\n                    style={{\\n                        '--index': index,\\n                        '--total': letters.length,\\n                        '--radius': radius,\\n                    }}\\n                >\\n                    {letter}\\n                </motion.span>\\n            ))}\\n            <VisuallyHidden>{children}</VisuallyHidden>\\n        </motion.div>\\n    );\\n};\\n\"],\"names\":[\"VisuallyHidden\",\"clsx\",\"motion\",\"s\",\"BASE_TRANSITION\",\"repeat\",\"Infinity\",\"ease\",\"BASE_ITEM_VARIANTS\",\"hidden\",\"opacity\",\"visible\",\"SpinningText\",\"children\",\"duration\",\"style\",\"className\",\"reverse\",\"radius\",\"transition\",\"variants\",\"Array\",\"isArray\",\"Error\",\"every\",\"child\",\"join\",\"letters\",\"split\",\"push\",\"finalTransition\",\"containerVariants\",\"rotate\",\"container\",\"itemVariants\",\"item\",\"div\",\"relative\",\"initial\",\"animate\",\"map\",\"letter\",\"index\",\"span\",\"aria-hidden\",\"length\"],\"mappings\":\";AACA,SAASA,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,UAAU,OAAO;AACxB,SAASC,MAAM,QAAwC,eAAe;AAEtE,OAAOC,OAAO,4BAA4B;AAiB1C,MAAMC,kBAAkB;IACpBC,QAAQC;IACRC,MAAM;AACV;AAEA,MAAMC,qBAAqB;IACvBC,QAAQ;QACJC,SAAS;IACb;IACAC,SAAS;QACLD,SAAS;IACb;AACJ;AAEA,OAAO,MAAME,eAAe,CAAC,EACzBC,QAAQ,EACRC,WAAW,EAAE,EACbC,KAAK,EACLC,SAAS,EACTC,UAAU,KAAK,EACfC,SAAS,CAAC,EACVC,UAAU,EACVC,QAAQ,EACQ;IAChB,IAAI,OAAOP,aAAa,YAAY,CAACQ,MAAMC,OAAO,CAACT,WAAW;QAC1D,MAAM,IAAIU,MAAM;IACpB;IAEA,IAAIF,MAAMC,OAAO,CAACT,WAAW;QACzB,IAAI,CAACA,SAASW,KAAK,CAAC,CAACC,QAAU,OAAOA,UAAU,WAAW;YACvD,MAAM,IAAIF,MAAM;QACpB;QACA,6CAA6C;QAC7CV,WAAWA,SAASa,IAAI,CAAC;IAC7B;IAEA,MAAMC,UAAUd,SAASe,KAAK,CAAC;IAC/BD,QAAQE,IAAI,CAAC;IAEb,MAAMC,kBAAkB;QACpB,GAAG1B,eAAe;QAClB,GAAGe,UAAU;QACbL,UAAU,AAACK,YAAsCL,YAAYA;IACjE;IAEA,MAAMiB,oBAAoB;QACtBpB,SAAS;YAAEqB,QAAQf,UAAU,CAAC,MAAM;QAAI;QACxC,GAAGG,UAAUa,SAAS;IAC1B;IAEA,MAAMC,eAAe;QACjB,GAAG1B,kBAAkB;QACrB,GAAGY,UAAUe,IAAI;IACrB;IAEA,qBACI,MAACjC,OAAOkC,GAAG;QACPpB,WAAWf,KAAKE,EAAEkC,QAAQ,EAAErB;QAC5BD,OAAO;YACH,GAAGA,KAAK;QACZ;QACAuB,SAAQ;QACRC,SAAQ;QACRnB,UAAUW;QACVZ,YAAYW;;YAEXH,QAAQa,GAAG,CAAC,CAACC,QAAQC,sBAClB,KAACxC,OAAOyC,IAAI;oBACRC,eAAY;oBAEZxB,UAAUc;oBACVlB,WAAWb,EAAEwB,OAAO;oBACpBZ,OAAO;wBACH,WAAW2B;wBACX,WAAWf,QAAQkB,MAAM;wBACzB,YAAY3B;oBAChB;8BAECuB;mBATI,GAAGC,MAAM,CAAC,EAAED,QAAQ;0BAYjC,KAACzC;0BAAgBa;;;;AAG7B,EAAE\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { motion } from \"motion/react\";\nimport s from \"./SpinningText.module.css\";\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: \"linear\"\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({ children, duration = 10, style, className, reverse = false, radius = 5, transition, variants }) => {\n  if (typeof children !== \"string\" && !Array.isArray(children)) {\n    throw new Error(\"children must be a string or an array of strings\");\n  }\n  if (Array.isArray(children)) {\n    if (!children.every((child) => typeof child === \"string\")) {\n      throw new Error(\"all elements in children array must be strings\");\n    }\n    children = children.join(\"\");\n  }\n  const letters = children.split(\"\");\n  letters.push(\" \");\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: transition?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return /* @__PURE__ */ _jsxs(motion.div, {\n    className: clsx(s.relative, className),\n    style: {\n      ...style\n    },\n    initial: \"hidden\",\n    animate: \"visible\",\n    variants: containerVariants,\n    transition: finalTransition,\n    children: [\n      letters.map((letter, index) => /* @__PURE__ */ _jsx(motion.span, {\n        \"aria-hidden\": \"true\",\n        variants: itemVariants,\n        className: s.letters,\n        style: {\n          \"--index\": index,\n          \"--total\": letters.length,\n          \"--radius\": radius\n        },\n        children: letter\n      }, `${index}-${letter}`)),\n      /* @__PURE__ */ _jsx(VisuallyHidden, {\n        children\n      })\n    ]\n  });\n};\n",
      "start": 1750271784898,
      "end": 1750271785013,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion } from 'motion/react';\nimport s from './SpinningText.module.css';\nconst BASE_TRANSITION = {\n    repeat: Infinity,\n    ease: 'linear'\n};\nconst BASE_ITEM_VARIANTS = {\n    hidden: {\n        opacity: 1\n    },\n    visible: {\n        opacity: 1\n    }\n};\nexport const SpinningText = ({ children, duration = 10, style, className, reverse = false, radius = 5, transition, variants })=>{\n    if (typeof children !== 'string' && !Array.isArray(children)) {\n        throw new Error('children must be a string or an array of strings');\n    }\n    if (Array.isArray(children)) {\n        if (!children.every((child)=>typeof child === 'string')) {\n            throw new Error('all elements in children array must be strings');\n        }\n        // eslint-disable-next-line no-param-reassign\n        children = children.join('');\n    }\n    const letters = children.split('');\n    letters.push(' ');\n    const finalTransition = {\n        ...BASE_TRANSITION,\n        ...transition,\n        duration: transition?.duration ?? duration\n    };\n    const containerVariants = {\n        visible: {\n            rotate: reverse ? -360 : 360\n        },\n        ...variants?.container\n    };\n    const itemVariants = {\n        ...BASE_ITEM_VARIANTS,\n        ...variants?.item\n    };\n    return /*#__PURE__*/ _jsxs(motion.div, {\n        className: clsx(s.relative, className),\n        style: {\n            ...style\n        },\n        initial: \"hidden\",\n        animate: \"visible\",\n        variants: containerVariants,\n        transition: finalTransition,\n        children: [\n            letters.map((letter, index)=>/*#__PURE__*/ _jsx(motion.span, {\n                    \"aria-hidden\": \"true\",\n                    variants: itemVariants,\n                    className: s.letters,\n                    style: {\n                        '--index': index,\n                        '--total': letters.length,\n                        '--radius': radius\n                    },\n                    children: letter\n                }, `${index}-${letter}`)),\n            /*#__PURE__*/ _jsx(VisuallyHidden, {\n                children: children\n            })\n        ]\n    });\n};\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,sBAAsB;AAC/B,OAAO,UAAU;AACjB,SAAS,cAAc;AACvB,OAAO,OAAO;AACd,MAAM,kBAAkB;AAAA,EACpB,QAAQ;AAAA,EACR,MAAM;AACV;AACA,MAAM,qBAAqB;AAAA,EACvB,QAAQ;AAAA,IACJ,SAAS;AAAA,EACb;AAAA,EACA,SAAS;AAAA,IACL,SAAS;AAAA,EACb;AACJ;AACO,aAAM,eAAe,CAAC,EAAE,UAAU,WAAW,IAAI,OAAO,WAAW,UAAU,OAAO,SAAS,GAAG,YAAY,SAAS,MAAI;AAC5H,MAAI,OAAO,aAAa,YAAY,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC1D,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACtE;AACA,MAAI,MAAM,QAAQ,QAAQ,GAAG;AACzB,QAAI,CAAC,SAAS,MAAM,CAAC,UAAQ,OAAO,UAAU,QAAQ,GAAG;AACrD,YAAM,IAAI,MAAM,gDAAgD;AAAA,IACpE;AAEA,eAAW,SAAS,KAAK,EAAE;AAAA,EAC/B;AACA,QAAM,UAAU,SAAS,MAAM,EAAE;AACjC,UAAQ,KAAK,GAAG;AAChB,QAAM,kBAAkB;AAAA,IACpB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,UAAU,YAAY,YAAY;AAAA,EACtC;AACA,QAAM,oBAAoB;AAAA,IACtB,SAAS;AAAA,MACL,QAAQ,UAAU,OAAO;AAAA,IAC7B;AAAA,IACA,GAAG,UAAU;AAAA,EACjB;AACA,QAAM,eAAe;AAAA,IACjB,GAAG;AAAA,IACH,GAAG,UAAU;AAAA,EACjB;AACA,SAAqB,sBAAM,OAAO,KAAK;AAAA,IACnC,WAAW,KAAK,EAAE,UAAU,SAAS;AAAA,IACrC,OAAO;AAAA,MACH,GAAG;AAAA,IACP;AAAA,IACA,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,UAAU;AAAA,MACN,QAAQ,IAAI,CAAC,QAAQ,UAAsB,qBAAK,OAAO,MAAM;AAAA,QACrD,eAAe;AAAA,QACf,UAAU;AAAA,QACV,WAAW,EAAE;AAAA,QACb,OAAO;AAAA,UACH,WAAW;AAAA,UACX,WAAW,QAAQ;AAAA,UACnB,YAAY;AAAA,QAChB;AAAA,QACA,UAAU;AAAA,MACd,GAAG,GAAG,KAAK,IAAI,MAAM,EAAE,CAAC;AAAA,MACd,qBAAK,gBAAgB;AAAA,QAC/B;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/SpinningText/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { motion } from \"motion/react\";\nimport s from \"./SpinningText.module.css\";\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: \"linear\"\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({ children, duration = 10, style, className, reverse = false, radius = 5, transition, variants }) => {\n  if (typeof children !== \"string\" && !Array.isArray(children)) {\n    throw new Error(\"children must be a string or an array of strings\");\n  }\n  if (Array.isArray(children)) {\n    if (!children.every((child) => typeof child === \"string\")) {\n      throw new Error(\"all elements in children array must be strings\");\n    }\n    children = children.join(\"\");\n  }\n  const letters = children.split(\"\");\n  letters.push(\" \");\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: transition?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return /* @__PURE__ */ _jsxs(motion.div, {\n    className: clsx(s.relative, className),\n    style: {\n      ...style\n    },\n    initial: \"hidden\",\n    animate: \"visible\",\n    variants: containerVariants,\n    transition: finalTransition,\n    children: [\n      letters.map((letter, index) => /* @__PURE__ */ _jsx(motion.span, {\n        \"aria-hidden\": \"true\",\n        variants: itemVariants,\n        className: s.letters,\n        style: {\n          \"--index\": index,\n          \"--total\": letters.length,\n          \"--radius\": radius\n        },\n        children: letter\n      }, `${index}-${letter}`)),\n      /* @__PURE__ */ _jsx(VisuallyHidden, {\n        children\n      })\n    ]\n  });\n};\n",
      "start": 1750271785013,
      "end": 1750271785013,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/SpinningText/index.tsx"],
        "names": [],
        "mappingsvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACblI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvE,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { CSSProperties } from 'react';\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion, type Transition, type Variants } from 'motion/react';\n\nimport s from './SpinningText.module.css';\n\ninterface SpinningTextProps {\n    children: string | string[];\n    style?: CSSProperties;\n    duration?: number;\n    className?: string;\n    reverse?: boolean;\n    fontSize?: number;\n    radius?: number;\n    transition?: Transition;\n    variants?: {\n        container?: Variants;\n        item?: Variants;\n    };\n}\n\nconst BASE_TRANSITION = {\n    repeat: Infinity,\n    ease: 'linear',\n};\n\nconst BASE_ITEM_VARIANTS = {\n    hidden: {\n        opacity: 1,\n    },\n    visible: {\n        opacity: 1,\n    },\n};\n\nexport const SpinningText = ({\n    children,\n    duration = 10,\n    style,\n    className,\n    reverse = false,\n    radius = 5,\n    transition,\n    variants,\n}: SpinningTextProps) => {\n    if (typeof children !== 'string' && !Array.isArray(children)) {\n        throw new Error('children must be a string or an array of strings');\n    }\n\n    if (Array.isArray(children)) {\n        if (!children.every((child) => typeof child === 'string')) {\n            throw new Error('all elements in children array must be strings');\n        }\n        // eslint-disable-next-line no-param-reassign\n        children = children.join('');\n    }\n\n    const letters = children.split('');\n    letters.push(' ');\n\n    const finalTransition = {\n        ...BASE_TRANSITION,\n        ...transition,\n        duration: (transition as { duration?: number })?.duration ?? duration,\n    };\n\n    const containerVariants = {\n        visible: { rotate: reverse ? -360 : 360 },\n        ...variants?.container,\n    };\n\n    const itemVariants = {\n        ...BASE_ITEM_VARIANTS,\n        ...variants?.item,\n    };\n\n    return (\n        <motion.div\n            className={clsx(s.relative, className)}\n            style={{\n                ...style,\n            }}\n            initial='hidden'\n            animate='visible'\n            variants={containerVariants}\n            transition={finalTransition}\n        >\n            {letters.map((letter, index) => (\n                <motion.span\n                    aria-hidden='true'\n                    key={`${index}-${letter}`}\n                    variants={itemVariants}\n                    className={s.letters}\n                    style={{\n                        '--index': index,\n                        '--total': letters.length,\n                        '--radius': radius,\n                    }}\n                >\n                    {letter}\n                </motion.span>\n            ))}\n            <VisuallyHidden>{children}</VisuallyHidden>\n        </motion.div>\n    );\n};\n",
      "start": 1750184199013,
      "end": 1750184199059,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import type { CSSProperties } from 'react';\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion, type Transition, type Variants } from 'motion/react';\nimport s from './SpinningText.module.css';\ninterface SpinningTextProps {\n  children: string | string[];\n  style?: CSSProperties;\n  duration?: number;\n  className?: string;\n  reverse?: boolean;\n  fontSize?: number;\n  radius?: number;\n  transition?: Transition;\n  variants?: {\n    container?: Variants;\n    item?: Variants;\n  };\n}\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: 'linear'\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({\n  children,\n  duration = 10,\n  style,\n  className,\n  reverse = false,\n  radius = 5,\n  transition,\n  variants\n}: SpinningTextProps) => {\n  if (typeof children !== 'string' && !Array.isArray(children)) {\n    throw new Error('children must be a string or an array of strings');\n  }\n  if (Array.isArray(children)) {\n    if (!children.every(child => typeof child === 'string')) {\n      throw new Error('all elements in children array must be strings');\n    }\n    // eslint-disable-next-line no-param-reassign\n    children = children.join('');\n  }\n  const letters = children.split('');\n  letters.push(' ');\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: (transition as {\n      duration?: number;\n    })?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return <motion.div className={clsx(s.relative, className)} style={{\n    ...style\n  }} initial='hidden' animate='visible' variants={containerVariants} transition={finalTransition}>\n            {letters.map((letter, index) => <motion.span aria-hidden='true' key={`${index}-${letter}`} variants={itemVariants} className={s.letters} style={{\n      '--index': index,\n      '--total': letters.length,\n      '--radius': radius\n    }}>\n                    {letter}\n                </motion.span>)}\n            <VisuallyHidden>{children}</VisuallyHidden>\n        </motion.div>;\n};",
      "start": 1750184199059,
      "end": 1750184199060,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "CSSProperties",
          "VisuallyHidden",
          "clsx",
          "motion",
          "Transition",
          "Variants",
          "s",
          "SpinningTextProps",
          "children",
          "style",
          "duration",
          "className",
          "reverse",
          "fontSize",
          "radius",
          "transition",
          "variants",
          "container",
          "item",
          "BASE_TRANSITION",
          "repeat",
          "Infinity",
          "ease",
          "BASE_ITEM_VARIANTS",
          "hidden",
          "opacity",
          "visible",
          "SpinningText",
          "Array",
          "isArray",
          "Error",
          "every",
          "child",
          "join",
          "letters",
          "split",
          "push",
          "finalTransition",
          "containerVariants",
          "rotate",
          "itemVariants",
          "relative",
          "map",
          "letter",
          "index",
          "length"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx"],
        "sourcesContent": [
          "import type { CSSProperties } from 'react';\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion, type Transition, type Variants } from 'motion/react';\n\nimport s from './SpinningText.module.css';\n\ninterface SpinningTextProps {\n    children: string | string[];\n    style?: CSSProperties;\n    duration?: number;\n    className?: string;\n    reverse?: boolean;\n    fontSize?: number;\n    radius?: number;\n    transition?: Transition;\n    variants?: {\n        container?: Variants;\n        item?: Variants;\n    };\n}\n\nconst BASE_TRANSITION = {\n    repeat: Infinity,\n    ease: 'linear',\n};\n\nconst BASE_ITEM_VARIANTS = {\n    hidden: {\n        opacity: 1,\n    },\n    visible: {\n        opacity: 1,\n    },\n};\n\nexport const SpinningText = ({\n    children,\n    duration = 10,\n    style,\n    className,\n    reverse = false,\n    radius = 5,\n    transition,\n    variants,\n}: SpinningTextProps) => {\n    if (typeof children !== 'string' && !Array.isArray(children)) {\n        throw new Error('children must be a string or an array of strings');\n    }\n\n    if (Array.isArray(children)) {\n        if (!children.every((child) => typeof child === 'string')) {\n            throw new Error('all elements in children array must be strings');\n        }\n        // eslint-disable-next-line no-param-reassign\n        children = children.join('');\n    }\n\n    const letters = children.split('');\n    letters.push(' ');\n\n    const finalTransition = {\n        ...BASE_TRANSITION,\n        ...transition,\n        duration: (transition as { duration?: number })?.duration ?? duration,\n    };\n\n    const containerVariants = {\n        visible: { rotate: reverse ? -360 : 360 },\n        ...variants?.container,\n    };\n\n    const itemVariants = {\n        ...BASE_ITEM_VARIANTS,\n        ...variants?.item,\n    };\n\n    return (\n        <motion.div\n            className={clsx(s.relative, className)}\n            style={{\n                ...style,\n            }}\n            initial='hidden'\n            animate='visible'\n            variants={containerVariants}\n            transition={finalTransition}\n        >\n            {letters.map((letter, index) => (\n                <motion.span\n                    aria-hidden='true'\n                    key={`${index}-${letter}`}\n                    variants={itemVariants}\n                    className={s.letters}\n                    style={{\n                        '--index': index,\n                        '--total': letters.length,\n                        '--radius': radius,\n                    }}\n                >\n                    {letter}\n                </motion.span>\n            ))}\n            <VisuallyHidden>{children}</VisuallyHidden>\n        </motion.div>\n    );\n};\n"
        ],
        "mappings": "AAAA,cAAcA,aAAa,QAAQ,OAAO;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,EAAE,KAAKC,UAAU,EAAE,KAAKC,QAAQ,QAAQ,cAAc;AAErE,OAAOC,CAAC,MAAM,2BAA2B;AAEzC,UAAUC,iBAAiB,CAAC;EACxBC,QAAQ,EAAE,MAAM,GAAG,MAAM,EAAE;EAC3BC,KAAK,CAAC,EAAET,aAAa;EACrBU,QAAQ,CAAC,EAAE,MAAM;EACjBC,SAAS,CAAC,EAAE,MAAM;EAClBC,OAAO,CAAC,EAAE,OAAO;EACjBC,QAAQ,CAAC,EAAE,MAAM;EACjBC,MAAM,CAAC,EAAE,MAAM;EACfC,UAAU,CAAC,EAAEX,UAAU;EACvBY,QAAQ,CAAC,EAAE;IACPC,SAAS,CAAC,EAAEZ,QAAQ;IACpBa,IAAI,CAAC,EAAEb,QAAQ;EACnB,CAAC;AACL;AAEA,MAAMc,eAAe,GAAG;EACpBC,MAAM,EAAEC,QAAQ;EAChBC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACJC,OAAO,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACLD,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAAC;EACzBnB,QAAQ;EACRE,QAAQ,GAAG,EAAE;EACbD,KAAK;EACLE,SAAS;EACTC,OAAO,GAAG,KAAK;EACfE,MAAM,GAAG,CAAC;EACVC,UAAU;EACVC;AACe,CAAlB,EAAET,iBAAiB,KAAK;EACrB,IAAI,OAAOC,QAAQ,KAAK,QAAQ,IAAI,CAACoB,KAAK,CAACC,OAAO,CAACrB,QAAQ,CAAC,EAAE;IAC1D,MAAM,IAAIsB,KAAK,CAAC,kDAAkD,CAAC;EACvE;EAEA,IAAIF,KAAK,CAACC,OAAO,CAACrB,QAAQ,CAAC,EAAE;IACzB,IAAI,CAACA,QAAQ,CAACuB,KAAK,CAAEC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,CAAC,EAAE;MACvD,MAAM,IAAIF,KAAK,CAAC,gDAAgD,CAAC;IACrE;IACA;IACAtB,QAAQ,GAAGA,QAAQ,CAACyB,IAAI,CAAC,EAAE,CAAC;EAChC;EAEA,MAAMC,OAAO,GAAG1B,QAAQ,CAAC2B,KAAK,CAAC,EAAE,CAAC;EAClCD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;EAEjB,MAAMC,eAAe,GAAG;IACpB,GAAGlB,eAAe;IAClB,GAAGJ,UAAU;IACbL,QAAQ,EAAE,CAACK,UAAU,IAAI;MAAEL,QAAQ,CAAC,EAAE,MAAM;IAAC,CAAC,GAAGA,QAAQ,IAAIA;EACjE,CAAC;EAED,MAAM4B,iBAAiB,GAAG;IACtBZ,OAAO,EAAE;MAAEa,MAAM,EAAE3B,OAAO,GAAG,CAAC,GAAG,GAAG;IAAI,CAAC;IACzC,GAAGI,QAAQ,EAAEC;EACjB,CAAC;EAED,MAAMuB,YAAY,GAAG;IACjB,GAAGjB,kBAAkB;IACrB,GAAGP,QAAQ,EAAEE;EACjB,CAAC;EAED,OACI,CAAC,MAAM,CAAC,GAAG,CACP,SAAS,CAAC,CAAChB,IAAI,CAACI,CAAC,CAACmC,QAAQ,EAAE9B,SAAS,CAAC,CAAC,CACvC,KAAK,CAAC,CAAC;IACH,GAAGF;EACP,CAAC,CAAC,CACF,OAAO,CAAC,QAAQ,CAChB,OAAO,CAAC,SAAS,CACjB,QAAQ,CAAC,CAAC6B,iBAAiB,CAAC,CAC5B,UAAU,CAAC,CAACD,eAAe,CAAC;AAExC,YAAY,CAACH,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KACvB,CAAC,MAAM,CAAC,IAAI,CACR,WAAW,CAAC,MAAM,CAClB,GAAG,CAAC,CAAC,GAAGA,KAAK,IAAID,MAAM,EAAE,CAAC,CAC1B,QAAQ,CAAC,CAACH,YAAY,CAAC,CACvB,SAAS,CAAC,CAAClC,CAAC,CAAC4B,OAAO,CAAC,CACrB,KAAK,CAAC,CAAC;MACH,SAAS,EAAEU,KAAK;MAChB,SAAS,EAAEV,OAAO,CAACW,MAAM;MACzB,UAAU,EAAE/B;IAChB,CAAC,CAAC;AAEtB,oBAAoB,CAAC6B,MAAM;AAC3B,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAChB,CAAC;AACd,YAAY,CAAC,cAAc,CAAC,CAACnC,QAAQ,CAAC,EAAE,cAAc;AACtD,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC;AAErB,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { motion } from \"motion/react\";\nimport s from \"./SpinningText.module.css\";\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: \"linear\"\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({\n  children,\n  duration = 10,\n  style,\n  className,\n  reverse = false,\n  radius = 5,\n  transition,\n  variants\n}) => {\n  if (typeof children !== \"string\" && !Array.isArray(children)) {\n    throw new Error(\"children must be a string or an array of strings\");\n  }\n  if (Array.isArray(children)) {\n    if (!children.every((child) => typeof child === \"string\")) {\n      throw new Error(\"all elements in children array must be strings\");\n    }\n    children = children.join(\"\");\n  }\n  const letters = children.split(\"\");\n  letters.push(\" \");\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: transition?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return /* @__PURE__ */ jsxs(motion.div, { className: clsx(s.relative, className), style: {\n    ...style\n  }, initial: \"hidden\", animate: \"visible\", variants: containerVariants, transition: finalTransition, children: [\n    letters.map((letter, index) => /* @__PURE__ */ jsx(motion.span, { \"aria-hidden\": \"true\", variants: itemVariants, className: s.letters, style: {\n      \"--index\": index,\n      \"--total\": letters.length,\n      \"--radius\": radius\n    }, children: letter }, `${index}-${letter}`)),\n    /* @__PURE__ */ jsx(VisuallyHidden, { children })\n  ] });\n};\n",
      "start": 1750184199060,
      "end": 1750184199294,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/SpinningText/index.tsx"],
        "sourcesContent": [
          "import type { CSSProperties } from 'react';\nimport { VisuallyHidden } from '@mantine/core';\nimport clsx from 'clsx';\nimport { motion, type Transition, type Variants } from 'motion/react';\nimport s from './SpinningText.module.css';\ninterface SpinningTextProps {\n  children: string | string[];\n  style?: CSSProperties;\n  duration?: number;\n  className?: string;\n  reverse?: boolean;\n  fontSize?: number;\n  radius?: number;\n  transition?: Transition;\n  variants?: {\n    container?: Variants;\n    item?: Variants;\n  };\n}\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: 'linear'\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({\n  children,\n  duration = 10,\n  style,\n  className,\n  reverse = false,\n  radius = 5,\n  transition,\n  variants\n}: SpinningTextProps) => {\n  if (typeof children !== 'string' && !Array.isArray(children)) {\n    throw new Error('children must be a string or an array of strings');\n  }\n  if (Array.isArray(children)) {\n    if (!children.every(child => typeof child === 'string')) {\n      throw new Error('all elements in children array must be strings');\n    }\n    // eslint-disable-next-line no-param-reassign\n    children = children.join('');\n  }\n  const letters = children.split('');\n  letters.push(' ');\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: (transition as {\n      duration?: number;\n    })?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return <motion.div className={clsx(s.relative, className)} style={{\n    ...style\n  }} initial='hidden' animate='visible' variants={containerVariants} transition={finalTransition}>\n            {letters.map((letter, index) => <motion.span aria-hidden='true' key={`${index}-${letter}`} variants={itemVariants} className={s.letters} style={{\n      '--index': index,\n      '--total': letters.length,\n      '--radius': radius\n    }}>\n                    {letter}\n                </motion.span>)}\n            <VisuallyHidden>{children}</VisuallyHidden>\n        </motion.div>;\n};"
        ],
        "mappings": "AAsES,SAGmC,KAHnC;AArET,SAAS,sBAAsB;AAC/B,OAAO,UAAU;AACjB,SAAS,cAA8C;AACvD,OAAO,OAAO;AAed,MAAM,kBAAkB;AAAA,EACtB,QAAQ;AAAA,EACR,MAAM;AACR;AACA,MAAM,qBAAqB;AAAA,EACzB,QAAQ;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,EACX;AACF;AACO,aAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,SAAS;AAAA,EACT;AAAA,EACA;AACF,MAAyB;AACvB,MAAI,OAAO,aAAa,YAAY,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5D,UAAM,IAAI,MAAM,kDAAkD;AAAA,EACpE;AACA,MAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,QAAI,CAAC,SAAS,MAAM,WAAS,OAAO,UAAU,QAAQ,GAAG;AACvD,YAAM,IAAI,MAAM,gDAAgD;AAAA,IAClE;AAEA,eAAW,SAAS,KAAK,EAAE;AAAA,EAC7B;AACA,QAAM,UAAU,SAAS,MAAM,EAAE;AACjC,UAAQ,KAAK,GAAG;AAChB,QAAM,kBAAkB;AAAA,IACtB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,UAAW,YAEP,YAAY;AAAA,EAClB;AACA,QAAM,oBAAoB;AAAA,IACxB,SAAS;AAAA,MACP,QAAQ,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,GAAG,UAAU;AAAA,EACf;AACA,QAAM,eAAe;AAAA,IACnB,GAAG;AAAA,IACH,GAAG,UAAU;AAAA,EACf;AACA,SAAO,qBAAC,OAAO,KAAP,EAAW,WAAW,KAAK,EAAE,UAAU,SAAS,GAAG,OAAO;AAAA,IAChE,GAAG;AAAA,EACL,GAAG,SAAQ,UAAS,SAAQ,WAAU,UAAU,mBAAmB,YAAY,iBACpE;AAAA,YAAQ,IAAI,CAAC,QAAQ,UAAU,oBAAC,OAAO,MAAP,EAAY,eAAY,QAAkC,UAAU,cAAc,WAAW,EAAE,SAAS,OAAO;AAAA,MACtJ,WAAW;AAAA,MACX,WAAW,QAAQ;AAAA,MACnB,YAAY;AAAA,IACd,GACiB,oBAL4D,GAAG,KAAK,IAAI,MAAM,EAMnF,CAAc;AAAA,IAClB,oBAAC,kBAAgB,UAAS;AAAA,KAC9B;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/shared/ui/SpinningText/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { VisuallyHidden } from \"@mantine/core\";\nimport clsx from \"clsx\";\nimport { motion } from \"motion/react\";\nimport s from \"./SpinningText.module.css\";\nconst BASE_TRANSITION = {\n  repeat: Infinity,\n  ease: \"linear\"\n};\nconst BASE_ITEM_VARIANTS = {\n  hidden: {\n    opacity: 1\n  },\n  visible: {\n    opacity: 1\n  }\n};\nexport const SpinningText = ({\n  children,\n  duration = 10,\n  style,\n  className,\n  reverse = false,\n  radius = 5,\n  transition,\n  variants\n}) => {\n  if (typeof children !== \"string\" && !Array.isArray(children)) {\n    throw new Error(\"children must be a string or an array of strings\");\n  }\n  if (Array.isArray(children)) {\n    if (!children.every((child) => typeof child === \"string\")) {\n      throw new Error(\"all elements in children array must be strings\");\n    }\n    children = children.join(\"\");\n  }\n  const letters = children.split(\"\");\n  letters.push(\" \");\n  const finalTransition = {\n    ...BASE_TRANSITION,\n    ...transition,\n    duration: transition?.duration ?? duration\n  };\n  const containerVariants = {\n    visible: {\n      rotate: reverse ? -360 : 360\n    },\n    ...variants?.container\n  };\n  const itemVariants = {\n    ...BASE_ITEM_VARIANTS,\n    ...variants?.item\n  };\n  return /* @__PURE__ */ jsxs(motion.div, { className: clsx(s.relative, className), style: {\n    ...style\n  }, initial: \"hidden\", animate: \"visible\", variants: containerVariants, transition: finalTransition, children: [\n    letters.map((letter, index) => /* @__PURE__ */ jsx(motion.span, { \"aria-hidden\": \"true\", variants: itemVariants, className: s.letters, style: {\n      \"--index\": index,\n      \"--total\": letters.length,\n      \"--radius\": radius\n    }, children: letter }, `${index}-${letter}`)),\n    /* @__PURE__ */ jsx(VisuallyHidden, { children })\n  ] });\n};\n",
      "start": 1750184199294,
      "end": 1750184199294,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/SpinningText/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

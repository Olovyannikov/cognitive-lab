{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/BarChart/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Box, Group, Paper, Popover, Slider, Stack, Transition } from '@mantine/core';\nimport { Info } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport type { Mark } from '../../types';\nimport { Header } from '../Header';\nimport { Paragraph } from '../Paragraph';\nimport { useBarChartViewModel } from './view-model';\n\nimport s from './BarChart.module.css';\n\ninterface BarChartProps {\n    marks?: Mark[];\n}\n\nconst TypeToColorMap: Record<string, string> = {\n    'E-I': 'violet',\n    'J-P': 'yellow',\n    'S-N': 'green',\n    'T-F': 'indigo',\n};\n\nexport const BarChart = ({ marks }: BarChartProps) => {\n    const isLarge = useIsLarge();\n    const { onSelectItemMouseOverHandler, selectedItem, mounted } = useBarChartViewModel({ marks });\n\n    return (\n        <Group align='stretch' gap='lg' mb={isLarge ? 100 : 0} mt={isLarge ? '5xl' : 0}>\n            <Stack flex={1} mt={isLarge ? 0 : 40} mb={isLarge ? 0 : 60} gap={isLarge ? 74 : 84}>\n                {marks?.map((mark, i) => (\n                    <Box key={i} onMouseOver={() => isLarge && onSelectItemMouseOverHandler(mark)}>\n                        <Popover offset={40} width='90%' position='top' shadow='sm'>\n                            <Popover.Target>\n                                <Box pos='relative'>\n                                    <Info style={{ '--offset': mark.value + '%' }} size={16} className={s.icon} />\n                                    <Slider\n                                        labelAlwaysOn\n                                        classNames={s}\n                                        value={mark.value}\n                                        data-type={mark.label}\n                                        data-value={mark.value}\n                                    />\n                                </Box>\n                            </Popover.Target>\n                            <Popover.Dropdown hidden={isLarge} bg={`${TypeToColorMap[mark.mbti_type[i]]}.0`}>\n                                {mark.data.map((item, idx) => {\n                                    switch (item.type) {\n                                        case 'paragraph':\n                                            return <Paragraph key={idx} text={item.text} />;\n                                        case 'header':\n                                            return (\n                                                <Header\n                                                    key={idx}\n                                                    text={item.text}\n                                                    c={`${TypeToColorMap[mark.mbti_type[i]]}.9`}\n                                                />\n                                            );\n                                        default:\n                                            return null;\n                                    }\n                                })}\n                            </Popover.Dropdown>\n                        </Popover>\n                    </Box>\n                ))}\n            </Stack>\n            <Box flex={1} h='auto' visibleFrom='lg'>\n                {selectedItem && (\n                    <Transition mounted={mounted}>\n                        {(styles) => (\n                            <Paper\n                                py={22}\n                                px='3xl'\n                                h='100%'\n                                mih='auto'\n                                radius={30}\n                                style={styles}\n                                visibleFrom='md'\n                                bg={`${TypeToColorMap[selectedItem.label]}.0`}\n                            >\n                                {selectedItem?.data.map((item, idx) => {\n                                    switch (item.type) {\n                                        case 'paragraph':\n                                            return <Paragraph key={idx} text={item.text} />;\n                                        case 'header':\n                                            return (\n                                                <Header\n                                                    key={idx}\n                                                    text={item.text}\n                                                    c={`${TypeToColorMap[selectedItem.label]}.9`}\n                                                />\n                                            );\n                                        default:\n                                            return null;\n                                    }\n                                })}\n                            </Paper>\n                        )}\n                    </Transition>\n                )}\n            </Box>\n        </Group>\n    );\n};\n",
      "start": 1750278467098,
      "end": 1750278467149,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Box, Group, Paper, Popover, Slider, Stack, Transition } from '@mantine/core';\nimport { Info } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport type { Mark } from '../../types';\nimport { Header } from '../Header';\nimport { Paragraph } from '../Paragraph';\nimport { useBarChartViewModel } from './view-model';\nimport s from './BarChart.module.css';\ninterface BarChartProps {\n  marks?: Mark[];\n}\nconst TypeToColorMap: Record<string, string> = {\n  'E-I': 'violet',\n  'J-P': 'yellow',\n  'S-N': 'green',\n  'T-F': 'indigo'\n};\nexport const BarChart = ({\n  marks\n}: BarChartProps) => {\n  const isLarge = useIsLarge();\n  const {\n    onSelectItemMouseOverHandler,\n    selectedItem,\n    mounted\n  } = useBarChartViewModel({\n    marks\n  });\n  return <Group align='stretch' gap='lg' mb={isLarge ? 100 : 0} mt={isLarge ? '5xl' : 0}>\n            <Stack flex={1} mt={isLarge ? 0 : 40} mb={isLarge ? 0 : 60} gap={isLarge ? 74 : 84}>\n                {marks?.map((mark, i) => <Box key={i} onMouseOver={() => isLarge && onSelectItemMouseOverHandler(mark)}>\n                        <Popover offset={40} width='90%' position='top' shadow='sm'>\n                            <Popover.Target>\n                                <Box pos='relative'>\n                                    <Info style={{\n                '--offset': mark.value + '%'\n              }} size={16} className={s.icon} />\n                                    <Slider labelAlwaysOn classNames={s} value={mark.value} data-type={mark.label} data-value={mark.value} />\n                                </Box>\n                            </Popover.Target>\n                            <Popover.Dropdown hidden={isLarge} bg={`${TypeToColorMap[mark.mbti_type[i]]}.0`}>\n                                {mark.data.map((item, idx) => {\n              switch (item.type) {\n                case 'paragraph':\n                  return <Paragraph key={idx} text={item.text} />;\n                case 'header':\n                  return <Header key={idx} text={item.text} c={`${TypeToColorMap[mark.mbti_type[i]]}.9`} />;\n                default:\n                  return null;\n              }\n            })}\n                            </Popover.Dropdown>\n                        </Popover>\n                    </Box>)}\n            </Stack>\n            <Box flex={1} h='auto' visibleFrom='lg'>\n                {selectedItem && <Transition mounted={mounted}>\n                        {styles => <Paper py={22} px='3xl' h='100%' mih='auto' radius={30} style={styles} visibleFrom='md' bg={`${TypeToColorMap[selectedItem.label]}.0`}>\n                                {selectedItem?.data.map((item, idx) => {\n            switch (item.type) {\n              case 'paragraph':\n                return <Paragraph key={idx} text={item.text} />;\n              case 'header':\n                return <Header key={idx} text={item.text} c={`${TypeToColorMap[selectedItem.label]}.9`} />;\n              default:\n                return null;\n            }\n          })}\n                            </Paper>}\n                    </Transition>}\n            </Box>\n        </Group>;\n};",
      "start": 1750278467149,
      "end": 1750278467151,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Box",
          "Group",
          "Paper",
          "Popover",
          "Slider",
          "Stack",
          "Transition",
          "Info",
          "useIsLarge",
          "Mark",
          "Header",
          "Paragraph",
          "useBarChartViewModel",
          "s",
          "BarChartProps",
          "marks",
          "TypeToColorMap",
          "Record",
          "BarChart",
          "isLarge",
          "onSelectItemMouseOverHandler",
          "selectedItem",
          "mounted",
          "map",
          "mark",
          "i",
          "value",
          "icon",
          "label",
          "mbti_type",
          "data",
          "item",
          "idx",
          "type",
          "text",
          "styles"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/BarChart/index.tsx"],
        "sourcesContent": [
          "import { Box, Group, Paper, Popover, Slider, Stack, Transition } from '@mantine/core';\nimport { Info } from '@phosphor-icons/react/dist/ssr';\n\nimport { useIsLarge } from '@/shared/lib';\n\nimport type { Mark } from '../../types';\nimport { Header } from '../Header';\nimport { Paragraph } from '../Paragraph';\nimport { useBarChartViewModel } from './view-model';\n\nimport s from './BarChart.module.css';\n\ninterface BarChartProps {\n    marks?: Mark[];\n}\n\nconst TypeToColorMap: Record<string, string> = {\n    'E-I': 'violet',\n    'J-P': 'yellow',\n    'S-N': 'green',\n    'T-F': 'indigo',\n};\n\nexport const BarChart = ({ marks }: BarChartProps) => {\n    const isLarge = useIsLarge();\n    const { onSelectItemMouseOverHandler, selectedItem, mounted } = useBarChartViewModel({ marks });\n\n    return (\n        <Group align='stretch' gap='lg' mb={isLarge ? 100 : 0} mt={isLarge ? '5xl' : 0}>\n            <Stack flex={1} mt={isLarge ? 0 : 40} mb={isLarge ? 0 : 60} gap={isLarge ? 74 : 84}>\n                {marks?.map((mark, i) => (\n                    <Box key={i} onMouseOver={() => isLarge && onSelectItemMouseOverHandler(mark)}>\n                        <Popover offset={40} width='90%' position='top' shadow='sm'>\n                            <Popover.Target>\n                                <Box pos='relative'>\n                                    <Info style={{ '--offset': mark.value + '%' }} size={16} className={s.icon} />\n                                    <Slider\n                                        labelAlwaysOn\n                                        classNames={s}\n                                        value={mark.value}\n                                        data-type={mark.label}\n                                        data-value={mark.value}\n                                    />\n                                </Box>\n                            </Popover.Target>\n                            <Popover.Dropdown hidden={isLarge} bg={`${TypeToColorMap[mark.mbti_type[i]]}.0`}>\n                                {mark.data.map((item, idx) => {\n                                    switch (item.type) {\n                                        case 'paragraph':\n                                            return <Paragraph key={idx} text={item.text} />;\n                                        case 'header':\n                                            return (\n                                                <Header\n                                                    key={idx}\n                                                    text={item.text}\n                                                    c={`${TypeToColorMap[mark.mbti_type[i]]}.9`}\n                                                />\n                                            );\n                                        default:\n                                            return null;\n                                    }\n                                })}\n                            </Popover.Dropdown>\n                        </Popover>\n                    </Box>\n                ))}\n            </Stack>\n            <Box flex={1} h='auto' visibleFrom='lg'>\n                {selectedItem && (\n                    <Transition mounted={mounted}>\n                        {(styles) => (\n                            <Paper\n                                py={22}\n                                px='3xl'\n                                h='100%'\n                                mih='auto'\n                                radius={30}\n                                style={styles}\n                                visibleFrom='md'\n                                bg={`${TypeToColorMap[selectedItem.label]}.0`}\n                            >\n                                {selectedItem?.data.map((item, idx) => {\n                                    switch (item.type) {\n                                        case 'paragraph':\n                                            return <Paragraph key={idx} text={item.text} />;\n                                        case 'header':\n                                            return (\n                                                <Header\n                                                    key={idx}\n                                                    text={item.text}\n                                                    c={`${TypeToColorMap[selectedItem.label]}.9`}\n                                                />\n                                            );\n                                        default:\n                                            return null;\n                                    }\n                                })}\n                            </Paper>\n                        )}\n                    </Transition>\n                )}\n            </Box>\n        </Group>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Box, Group, Paper, Popover, Slider, Stack, Transition } from \"@mantine/core\";\nimport { Info } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { Header } from \"../Header\";\nimport { Paragraph } from \"../Paragraph\";\nimport { useBarChartViewModel } from \"./view-model\";\nimport s from \"./BarChart.module.css\";\nconst TypeToColorMap = {\n  \"E-I\": \"violet\",\n  \"J-P\": \"yellow\",\n  \"S-N\": \"green\",\n  \"T-F\": \"indigo\"\n};\nexport const BarChart = ({\n  marks\n}) => {\n  const isLarge = useIsLarge();\n  const {\n    onSelectItemMouseOverHandler,\n    selectedItem,\n    mounted\n  } = useBarChartViewModel({\n    marks\n  });\n  return /* @__PURE__ */ jsxs(Group, { align: \"stretch\", gap: \"lg\", mb: isLarge ? 100 : 0, mt: isLarge ? \"5xl\" : 0, children: [\n    /* @__PURE__ */ jsx(Stack, { flex: 1, mt: isLarge ? 0 : 40, mb: isLarge ? 0 : 60, gap: isLarge ? 74 : 84, children: marks?.map((mark, i) => /* @__PURE__ */ jsx(Box, { onMouseOver: () => isLarge && onSelectItemMouseOverHandler(mark), children: /* @__PURE__ */ jsxs(Popover, { offset: 40, width: \"90%\", position: \"top\", shadow: \"sm\", children: [\n      /* @__PURE__ */ jsx(Popover.Target, { children: /* @__PURE__ */ jsxs(Box, { pos: \"relative\", children: [\n        /* @__PURE__ */ jsx(Info, { style: {\n          \"--offset\": mark.value + \"%\"\n        }, size: 16, className: s.icon }),\n        /* @__PURE__ */ jsx(Slider, { labelAlwaysOn: true, classNames: s, value: mark.value, \"data-type\": mark.label, \"data-value\": mark.value })\n      ] }) }),\n      /* @__PURE__ */ jsx(Popover.Dropdown, { hidden: isLarge, bg: `${TypeToColorMap[mark.mbti_type[i]]}.0`, children: mark.data.map((item, idx) => {\n        switch (item.type) {\n          case \"paragraph\":\n            return /* @__PURE__ */ jsx(Paragraph, { text: item.text }, idx);\n          case \"header\":\n            return /* @__PURE__ */ jsx(Header, { text: item.text, c: `${TypeToColorMap[mark.mbti_type[i]]}.9` }, idx);\n          default:\n            return null;\n        }\n      }) })\n    ] }) }, i)) }),\n    /* @__PURE__ */ jsx(Box, { flex: 1, h: \"auto\", visibleFrom: \"lg\", children: selectedItem && /* @__PURE__ */ jsx(Transition, { mounted, children: (styles) => /* @__PURE__ */ jsx(Paper, { py: 22, px: \"3xl\", h: \"100%\", mih: \"auto\", radius: 30, style: styles, visibleFrom: \"md\", bg: `${TypeToColorMap[selectedItem.label]}.0`, children: selectedItem?.data.map((item, idx) => {\n      switch (item.type) {\n        case \"paragraph\":\n          return /* @__PURE__ */ jsx(Paragraph, { text: item.text }, idx);\n        case \"header\":\n          return /* @__PURE__ */ jsx(Header, { text: item.text, c: `${TypeToColorMap[selectedItem.label]}.9` }, idx);\n        default:\n          return null;\n      }\n    }) }) }) })\n  ] });\n};\n",
      "start": 1750278467151,
      "end": 1750278467365,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/BarChart/index.tsx"],
        "sourcesContent": [
          "import { Box, Group, Paper, Popover, Slider, Stack, Transition } from '@mantine/core';\nimport { Info } from '@phosphor-icons/react/dist/ssr';\nimport { useIsLarge } from '@/shared/lib';\nimport type { Mark } from '../../types';\nimport { Header } from '../Header';\nimport { Paragraph } from '../Paragraph';\nimport { useBarChartViewModel } from './view-model';\nimport s from './BarChart.module.css';\ninterface BarChartProps {\n  marks?: Mark[];\n}\nconst TypeToColorMap: Record<string, string> = {\n  'E-I': 'violet',\n  'J-P': 'yellow',\n  'S-N': 'green',\n  'T-F': 'indigo'\n};\nexport const BarChart = ({\n  marks\n}: BarChartProps) => {\n  const isLarge = useIsLarge();\n  const {\n    onSelectItemMouseOverHandler,\n    selectedItem,\n    mounted\n  } = useBarChartViewModel({\n    marks\n  });\n  return <Group align='stretch' gap='lg' mb={isLarge ? 100 : 0} mt={isLarge ? '5xl' : 0}>\n            <Stack flex={1} mt={isLarge ? 0 : 40} mb={isLarge ? 0 : 60} gap={isLarge ? 74 : 84}>\n                {marks?.map((mark, i) => <Box key={i} onMouseOver={() => isLarge && onSelectItemMouseOverHandler(mark)}>\n                        <Popover offset={40} width='90%' position='top' shadow='sm'>\n                            <Popover.Target>\n                                <Box pos='relative'>\n                                    <Info style={{\n                '--offset': mark.value + '%'\n              }} size={16} className={s.icon} />\n                                    <Slider labelAlwaysOn classNames={s} value={mark.value} data-type={mark.label} data-value={mark.value} />\n                                </Box>\n                            </Popover.Target>\n                            <Popover.Dropdown hidden={isLarge} bg={`${TypeToColorMap[mark.mbti_type[i]]}.0`}>\n                                {mark.data.map((item, idx) => {\n              switch (item.type) {\n                case 'paragraph':\n                  return <Paragraph key={idx} text={item.text} />;\n                case 'header':\n                  return <Header key={idx} text={item.text} c={`${TypeToColorMap[mark.mbti_type[i]]}.9`} />;\n                default:\n                  return null;\n              }\n            })}\n                            </Popover.Dropdown>\n                        </Popover>\n                    </Box>)}\n            </Stack>\n            <Box flex={1} h='auto' visibleFrom='lg'>\n                {selectedItem && <Transition mounted={mounted}>\n                        {styles => <Paper py={22} px='3xl' h='100%' mih='auto' radius={30} style={styles} visibleFrom='md' bg={`${TypeToColorMap[selectedItem.label]}.0`}>\n                                {selectedItem?.data.map((item, idx) => {\n            switch (item.type) {\n              case 'paragraph':\n                return <Paragraph key={idx} text={item.text} />;\n              case 'header':\n                return <Header key={idx} text={item.text} c={`${TypeToColorMap[selectedItem.label]}.9`} />;\n              default:\n                return null;\n            }\n          })}\n                            </Paper>}\n                    </Transition>}\n            </Box>\n        </Group>;\n};"
        ],
        "mappings": "AAiCgC,SACI,KADJ;AAjChC,SAAS,KAAK,OAAO,OAAO,SAAS,QAAQ,OAAO,kBAAkB;AACtE,SAAS,YAAY;AACrB,SAAS,kBAAkB;AAE3B,SAAS,cAAc;AACvB,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AACrC,OAAO,OAAO;AAId,MAAM,iBAAyC;AAAA,EAC7C,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AACT;AACO,aAAM,WAAW,CAAC;AAAA,EACvB;AACF,MAAqB;AACnB,QAAM,UAAU,WAAW;AAC3B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,qBAAqB;AAAA,IACvB;AAAA,EACF,CAAC;AACD,SAAO,qBAAC,SAAM,OAAM,WAAU,KAAI,MAAK,IAAI,UAAU,MAAM,GAAG,IAAI,UAAU,QAAQ,GAC1E;AAAA,wBAAC,SAAM,MAAM,GAAG,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,KAAK,UAAU,KAAK,IAC3E,iBAAO,IAAI,CAAC,MAAM,MAAM,oBAAC,OAAY,aAAa,MAAM,WAAW,6BAA6B,IAAI,GAC7F,+BAAC,WAAQ,QAAQ,IAAI,OAAM,OAAM,UAAS,OAAM,QAAO,MACnD;AAAA,0BAAC,QAAQ,QAAR,EACG,+BAAC,OAAI,KAAI,YACL;AAAA,4BAAC,QAAK,OAAO;AAAA,UACjC,YAAY,KAAK,QAAQ;AAAA,QAC3B,GAAG,MAAM,IAAI,WAAW,EAAE,MAAM;AAAA,QACV,oBAAC,UAAO,eAAa,MAAC,YAAY,GAAG,OAAO,KAAK,OAAO,aAAW,KAAK,OAAO,cAAY,KAAK,OAAO;AAAA,SAC3G,GACJ;AAAA,MACA,oBAAC,QAAQ,UAAR,EAAiB,QAAQ,SAAS,IAAI,GAAG,eAAe,KAAK,UAAU,CAAC,CAAC,CAAC,MACtE,eAAK,KAAK,IAAI,CAAC,MAAM,QAAQ;AAChD,gBAAQ,KAAK,MAAM;AAAA,UACjB,KAAK;AACH,mBAAO,oBAAC,aAAoB,MAAM,KAAK,QAAhB,GAAsB;AAAA,UAC/C,KAAK;AACH,mBAAO,oBAAC,UAAiB,MAAM,KAAK,MAAM,GAAG,GAAG,eAAe,KAAK,UAAU,CAAC,CAAC,CAAC,QAA7D,GAAmE;AAAA,UACzF;AACE,mBAAO;AAAA,QACX;AAAA,MACF,CAAC,GACe;AAAA,OACJ,KAtB2B,CAuB/B,CAAM,GACd;AAAA,IACA,oBAAC,OAAI,MAAM,GAAG,GAAE,QAAO,aAAY,MAC9B,0BAAgB,oBAAC,cAAW,SACpB,sBAAU,oBAAC,SAAM,IAAI,IAAI,IAAG,OAAM,GAAE,QAAO,KAAI,QAAO,QAAQ,IAAI,OAAO,QAAQ,aAAY,MAAK,IAAI,GAAG,eAAe,aAAa,KAAK,CAAC,MACnI,wBAAc,KAAK,IAAI,CAAC,MAAM,QAAQ;AAC3D,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK;AACH,iBAAO,oBAAC,aAAoB,MAAM,KAAK,QAAhB,GAAsB;AAAA,QAC/C,KAAK;AACH,iBAAO,oBAAC,UAAiB,MAAM,KAAK,MAAM,GAAG,GAAG,eAAe,aAAa,KAAK,CAAC,QAA9D,GAAoE;AAAA,QAC1F;AACE,iBAAO;AAAA,MACX;AAAA,IACF,CAAC,GACiB,GACR,GACR;AAAA,KACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Report/ui/BarChart/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Box, Group, Paper, Popover, Slider, Stack, Transition } from \"@mantine/core\";\nimport { Info } from \"@phosphor-icons/react/dist/ssr\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { Header } from \"../Header\";\nimport { Paragraph } from \"../Paragraph\";\nimport { useBarChartViewModel } from \"./view-model\";\nimport s from \"./BarChart.module.css\";\nconst TypeToColorMap = {\n  \"E-I\": \"violet\",\n  \"J-P\": \"yellow\",\n  \"S-N\": \"green\",\n  \"T-F\": \"indigo\"\n};\nexport const BarChart = ({\n  marks\n}) => {\n  const isLarge = useIsLarge();\n  const {\n    onSelectItemMouseOverHandler,\n    selectedItem,\n    mounted\n  } = useBarChartViewModel({\n    marks\n  });\n  return /* @__PURE__ */ jsxs(Group, { align: \"stretch\", gap: \"lg\", mb: isLarge ? 100 : 0, mt: isLarge ? \"5xl\" : 0, children: [\n    /* @__PURE__ */ jsx(Stack, { flex: 1, mt: isLarge ? 0 : 40, mb: isLarge ? 0 : 60, gap: isLarge ? 74 : 84, children: marks?.map((mark, i) => /* @__PURE__ */ jsx(Box, { onMouseOver: () => isLarge && onSelectItemMouseOverHandler(mark), children: /* @__PURE__ */ jsxs(Popover, { offset: 40, width: \"90%\", position: \"top\", shadow: \"sm\", children: [\n      /* @__PURE__ */ jsx(Popover.Target, { children: /* @__PURE__ */ jsxs(Box, { pos: \"relative\", children: [\n        /* @__PURE__ */ jsx(Info, { style: {\n          \"--offset\": mark.value + \"%\"\n        }, size: 16, className: s.icon }),\n        /* @__PURE__ */ jsx(Slider, { labelAlwaysOn: true, classNames: s, value: mark.value, \"data-type\": mark.label, \"data-value\": mark.value })\n      ] }) }),\n      /* @__PURE__ */ jsx(Popover.Dropdown, { hidden: isLarge, bg: `${TypeToColorMap[mark.mbti_type[i]]}.0`, children: mark.data.map((item, idx) => {\n        switch (item.type) {\n          case \"paragraph\":\n            return /* @__PURE__ */ jsx(Paragraph, { text: item.text }, idx);\n          case \"header\":\n            return /* @__PURE__ */ jsx(Header, { text: item.text, c: `${TypeToColorMap[mark.mbti_type[i]]}.9` }, idx);\n          default:\n            return null;\n        }\n      }) })\n    ] }) }, i)) }),\n    /* @__PURE__ */ jsx(Box, { flex: 1, h: \"auto\", visibleFrom: \"lg\", children: selectedItem && /* @__PURE__ */ jsx(Transition, { mounted, children: (styles) => /* @__PURE__ */ jsx(Paper, { py: 22, px: \"3xl\", h: \"100%\", mih: \"auto\", radius: 30, style: styles, visibleFrom: \"md\", bg: `${TypeToColorMap[selectedItem.label]}.0`, children: selectedItem?.data.map((item, idx) => {\n      switch (item.type) {\n        case \"paragraph\":\n          return /* @__PURE__ */ jsx(Paragraph, { text: item.text }, idx);\n        case \"header\":\n          return /* @__PURE__ */ jsx(Header, { text: item.text, c: `${TypeToColorMap[selectedItem.label]}.9` }, idx);\n        default:\n          return null;\n      }\n    }) }) }) })\n  ] });\n};\n",
      "start": 1750278467365,
      "end": 1750278467365,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/ui/BarChart/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CA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"
      }
    }
  ]
}

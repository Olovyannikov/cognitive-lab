{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/AccordionBlock/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Fragment } from 'react';\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\n\nimport { Accordion, Picture } from '@/shared/ui';\n\nimport { contentResolver } from '@/entities/Report';\n\nimport type { ListItem } from '../../types';\n\nimport s from './AccordionBlock.module.css';\n\ninterface AccordionBlockProps {\n    items?: ListItem[];\n}\n\nexport const AccordionBlock = ({ items }: AccordionBlockProps) => (\n    <Accordion radius={0} variant='filled' chevron={<CaretDown weight='bold' size={24} />}>\n        {items?.map((item, index) => (\n            <UIAccordion.Item key={index + (item?.title ?? '') + item.subtitle} value={item.title ?? ''}>\n                <UIAccordion.Control>\n                    <Group>\n                        <Picture width={60} height={60} src={`/types/circles/${item.title}`} />\n                        <Box>\n                            <Text className={s.description}>{item.subtitle}</Text>\n                            <Title className={s.title} order={3}>\n                                {item.title}\n                            </Title>\n                        </Box>\n                    </Group>\n                </UIAccordion.Control>\n                <UIAccordion.Panel>\n                    {item.content?.map((content, idx) => (\n                        <Fragment key={idx}>{contentResolver({ content, color: 'violet' })}</Fragment>\n                    ))}\n                </UIAccordion.Panel>\n            </UIAccordion.Item>\n        ))}\n    </Accordion>\n);\n",
      "start": 1750184199117,
      "end": 1750184199159,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Fragment } from 'react';\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport { Accordion, Picture } from '@/shared/ui';\nimport { contentResolver } from '@/entities/Report';\nimport type { ListItem } from '../../types';\nimport s from './AccordionBlock.module.css';\ninterface AccordionBlockProps {\n  items?: ListItem[];\n}\nexport const AccordionBlock = ({\n  items\n}: AccordionBlockProps) => <Accordion radius={0} variant='filled' chevron={<CaretDown weight='bold' size={24} />}>\n        {items?.map((item, index) => <UIAccordion.Item key={index + (item?.title ?? '') + item.subtitle} value={item.title ?? ''}>\n                <UIAccordion.Control>\n                    <Group>\n                        <Picture width={60} height={60} src={`/types/circles/${item.title}`} />\n                        <Box>\n                            <Text className={s.description}>{item.subtitle}</Text>\n                            <Title className={s.title} order={3}>\n                                {item.title}\n                            </Title>\n                        </Box>\n                    </Group>\n                </UIAccordion.Control>\n                <UIAccordion.Panel>\n                    {item.content?.map((content, idx) => <Fragment key={idx}>{contentResolver({\n          content,\n          color: 'violet'\n        })}</Fragment>)}\n                </UIAccordion.Panel>\n            </UIAccordion.Item>)}\n    </Accordion>;",
      "start": 1750184199159,
      "end": 1750184199160,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Fragment",
          "Accordion",
          "UIAccordion",
          "Box",
          "Group",
          "Text",
          "Title",
          "CaretDown",
          "Picture",
          "contentResolver",
          "ListItem",
          "s",
          "AccordionBlockProps",
          "items",
          "AccordionBlock",
          "map",
          "item",
          "index",
          "title",
          "subtitle",
          "description",
          "content",
          "idx",
          "color"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/AccordionBlock/index.tsx"
        ],
        "sourcesContent": [
          "import { Fragment } from 'react';\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\n\nimport { Accordion, Picture } from '@/shared/ui';\n\nimport { contentResolver } from '@/entities/Report';\n\nimport type { ListItem } from '../../types';\n\nimport s from './AccordionBlock.module.css';\n\ninterface AccordionBlockProps {\n    items?: ListItem[];\n}\n\nexport const AccordionBlock = ({ items }: AccordionBlockProps) => (\n    <Accordion radius={0} variant='filled' chevron={<CaretDown weight='bold' size={24} />}>\n        {items?.map((item, index) => (\n            <UIAccordion.Item key={index + (item?.title ?? '') + item.subtitle} value={item.title ?? ''}>\n                <UIAccordion.Control>\n                    <Group>\n                        <Picture width={60} height={60} src={`/types/circles/${item.title}`} />\n                        <Box>\n                            <Text className={s.description}>{item.subtitle}</Text>\n                            <Title className={s.title} order={3}>\n                                {item.title}\n                            </Title>\n                        </Box>\n                    </Group>\n                </UIAccordion.Control>\n                <UIAccordion.Panel>\n                    {item.content?.map((content, idx) => (\n                        <Fragment key={idx}>{contentResolver({ content, color: 'violet' })}</Fragment>\n                    ))}\n                </UIAccordion.Panel>\n            </UIAccordion.Item>\n        ))}\n    </Accordion>\n);\n"
        ],
        "mappings": "AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,IAAIC,WAAW,EAAEC,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,eAAe;AACjF,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,SAASN,SAAS,EAAEO,OAAO,QAAQ,aAAa;AAEhD,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,cAAcC,QAAQ,QAAQ,aAAa;AAE3C,OAAOC,CAAC,MAAM,6BAA6B;AAE3C,UAAUC,mBAAmB,CAAC;EAC1BC,KAAK,CAAC,EAAEH,QAAQ,EAAE;AACtB;AAEA,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAED;AAA2B,CAApB,EAAED,mBAAmB,KACzD,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AAC1F,QAAQ,CAACC,KAAK,EAAEE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACpB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAACA,KAAK,IAAID,IAAI,EAAEE,KAAK,IAAI,EAAE,CAAC,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,KAAK,CAAC,CAACH,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;AACxG,gBAAgB,CAAC,WAAW,CAAC,OAAO;AACpC,oBAAoB,CAAC,KAAK;AAC1B,wBAAwB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,kBAAkBF,IAAI,CAACE,KAAK,EAAE,CAAC;AAC5F,wBAAwB,CAAC,GAAG;AAC5B,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,CAACP,CAAC,CAACS,WAAW,CAAC,CAAC,CAACJ,IAAI,CAACG,QAAQ,CAAC,EAAE,IAAI;AACjF,4BAA4B,CAAC,KAAK,CAAC,SAAS,CAAC,CAACR,CAAC,CAACO,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChE,gCAAgC,CAACF,IAAI,CAACE,KAAK;AAC3C,4BAA4B,EAAE,KAAK;AACnC,wBAAwB,EAAE,GAAG;AAC7B,oBAAoB,EAAE,KAAK;AAC3B,gBAAgB,EAAE,WAAW,CAAC,OAAO;AACrC,gBAAgB,CAAC,WAAW,CAAC,KAAK;AAClC,oBAAoB,CAACF,IAAI,CAACK,OAAO,EAAEN,GAAG,CAAC,CAACM,OAAO,EAAEC,GAAG,KAC5B,CAAC,QAAQ,CAAC,GAAG,CAAC,CAACA,GAAG,CAAC,CAAC,CAACb,eAAe,CAAC;UAAEY,OAAO;UAAEE,KAAK,EAAE;QAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAChF,CAAC;AACtB,gBAAgB,EAAE,WAAW,CAAC,KAAK;AACnC,YAAY,EAAE,WAAW,CAAC,IAAI,CACrB,CAAC;AACV,IAAI,EAAE,SAAS,CACd",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from \"@mantine/core\";\nimport { CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport { Accordion, Picture } from \"@/shared/ui\";\nimport { contentResolver } from \"@/entities/Report\";\nimport s from \"./AccordionBlock.module.css\";\nexport const AccordionBlock = ({\n  items\n}) => /* @__PURE__ */ jsx(Accordion, { radius: 0, variant: \"filled\", chevron: /* @__PURE__ */ jsx(CaretDown, { weight: \"bold\", size: 24 }), children: items?.map((item, index) => /* @__PURE__ */ jsxs(UIAccordion.Item, { value: item.title ?? \"\", children: [\n  /* @__PURE__ */ jsx(UIAccordion.Control, { children: /* @__PURE__ */ jsxs(Group, { children: [\n    /* @__PURE__ */ jsx(Picture, { width: 60, height: 60, src: `/types/circles/${item.title}` }),\n    /* @__PURE__ */ jsxs(Box, { children: [\n      /* @__PURE__ */ jsx(Text, { className: s.description, children: item.subtitle }),\n      /* @__PURE__ */ jsx(Title, { className: s.title, order: 3, children: item.title })\n    ] })\n  ] }) }),\n  /* @__PURE__ */ jsx(UIAccordion.Panel, { children: item.content?.map((content, idx) => /* @__PURE__ */ jsx(Fragment, { children: contentResolver({\n    content,\n    color: \"violet\"\n  }) }, idx)) })\n] }, index + (item?.title ?? \"\") + item.subtitle)) });\n",
      "start": 1750184199160,
      "end": 1750184199405,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/ui/AccordionBlock/index.tsx"
        ],
        "sourcesContent": [
          "import { Fragment } from 'react';\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from '@mantine/core';\nimport { CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport { Accordion, Picture } from '@/shared/ui';\nimport { contentResolver } from '@/entities/Report';\nimport type { ListItem } from '../../types';\nimport s from './AccordionBlock.module.css';\ninterface AccordionBlockProps {\n  items?: ListItem[];\n}\nexport const AccordionBlock = ({\n  items\n}: AccordionBlockProps) => <Accordion radius={0} variant='filled' chevron={<CaretDown weight='bold' size={24} />}>\n        {items?.map((item, index) => <UIAccordion.Item key={index + (item?.title ?? '') + item.subtitle} value={item.title ?? ''}>\n                <UIAccordion.Control>\n                    <Group>\n                        <Picture width={60} height={60} src={`/types/circles/${item.title}`} />\n                        <Box>\n                            <Text className={s.description}>{item.subtitle}</Text>\n                            <Title className={s.title} order={3}>\n                                {item.title}\n                            </Title>\n                        </Box>\n                    </Group>\n                </UIAccordion.Control>\n                <UIAccordion.Panel>\n                    {item.content?.map((content, idx) => <Fragment key={idx}>{contentResolver({\n          content,\n          color: 'violet'\n        })}</Fragment>)}\n                </UIAccordion.Panel>\n            </UIAccordion.Item>)}\n    </Accordion>;"
        ],
        "mappings": "AAY2E,cAKnD,YALmD;AAZ3E,SAAS,gBAAgB;AACzB,SAAS,aAAa,aAAa,KAAK,OAAO,MAAM,aAAa;AAClE,SAAS,iBAAiB;AAC1B,SAAS,WAAW,eAAe;AACnC,SAAS,uBAAuB;AAEhC,OAAO,OAAO;AAIP,aAAM,iBAAiB,CAAC;AAAA,EAC7B;AACF,MAA2B,oBAAC,aAAU,QAAQ,GAAG,SAAQ,UAAS,SAAS,oBAAC,aAAU,QAAO,QAAO,MAAM,IAAI,GACrG,iBAAO,IAAI,CAAC,MAAM,UAAU,qBAAC,YAAY,MAAZ,EAAmE,OAAO,KAAK,SAAS,IAC9G;AAAA,sBAAC,YAAY,SAAZ,EACG,+BAAC,SACG;AAAA,wBAAC,WAAQ,OAAO,IAAI,QAAQ,IAAI,KAAK,kBAAkB,KAAK,KAAK,IAAI;AAAA,IACrE,qBAAC,OACG;AAAA,0BAAC,QAAK,WAAW,EAAE,aAAc,eAAK,UAAS;AAAA,MAC/C,oBAAC,SAAM,WAAW,EAAE,OAAO,OAAO,GAC7B,eAAK,OACV;AAAA,OACJ;AAAA,KACJ,GACJ;AAAA,EACA,oBAAC,YAAY,OAAZ,EACI,eAAK,SAAS,IAAI,CAAC,SAAS,QAAQ,oBAAC,YAAoB,0BAAgB;AAAA,IACpF;AAAA,IACA,OAAO;AAAA,EACT,CAAC,KAH+D,GAG7D,CAAW,GACN;AAAA,KAjB4C,SAAS,MAAM,SAAS,MAAM,KAAK,QAkBnF,CAAmB,GAC3B;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750184199405,
      "end": 1750184199405,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750184199405,
      "end": 1750184199406,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750184199406,
      "end": 1750184199406,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750184199406,
      "end": 1750184199406,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Report/ui/AccordionBlock/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport { Accordion as UIAccordion, Box, Group, Text, Title } from \"@mantine/core\";\nimport { CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport { Accordion, Picture } from \"@/shared/ui\";\nimport { contentResolver } from \"@/entities/Report\";\nimport s from \"./AccordionBlock.module.css\";\nexport const AccordionBlock = ({\n  items\n}) => /* @__PURE__ */ jsx(Accordion, { radius: 0, variant: \"filled\", chevron: /* @__PURE__ */ jsx(CaretDown, { weight: \"bold\", size: 24 }), children: items?.map((item, index) => /* @__PURE__ */ jsxs(UIAccordion.Item, { value: item.title ?? \"\", children: [\n  /* @__PURE__ */ jsx(UIAccordion.Control, { children: /* @__PURE__ */ jsxs(Group, { children: [\n    /* @__PURE__ */ jsx(Picture, { width: 60, height: 60, src: `/types/circles/${item.title}` }),\n    /* @__PURE__ */ jsxs(Box, { children: [\n      /* @__PURE__ */ jsx(Text, { className: s.description, children: item.subtitle }),\n      /* @__PURE__ */ jsx(Title, { className: s.title, order: 3, children: item.title })\n    ] })\n  ] }) }),\n  /* @__PURE__ */ jsx(UIAccordion.Panel, { children: item.content?.map((content, idx) => /* @__PURE__ */ jsx(Fragment, { children: contentResolver({\n    content,\n    color: \"violet\"\n  }) }, idx)) })\n] }, index + (item?.title ?? \"\") + item.subtitle)) });\n",
      "start": 1750184199406,
      "end": 1750184199406,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/ui/AccordionBlock/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnhtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvnJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    }
  ]
}

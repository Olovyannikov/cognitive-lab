{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/FAQ/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { restore } from 'effector';\n\nimport { atom } from '@/shared/factories';\n\nimport { getFAQQuery } from '../api';\nimport type { FaqItem } from '../types';\n\nexport const FaqModel = atom(() => {\n    const $faqItems = restore<FaqItem[]>(\n        getFAQQuery.finished.success.map(({ result }) => result.payload),\n        []\n    );\n\n    return {\n        $faqItems,\n    };\n});\n",
      "start": 1750275033477,
      "end": 1750275033511,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { restore } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { getFAQQuery } from '../api';\nimport type { FaqItem } from '../types';\nexport const FaqModel = atom(() => {\n  const $faqItems = restore<FaqItem[]>(getFAQQuery.finished.success.map(({\n    result\n  }) => result.payload), [], {\n    name: \"$faqItems\",\n    sid: \"-f1wks5\"\n  });\n  return {\n    $faqItems\n  };\n});",
      "start": 1750275033511,
      "end": 1750275033512,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "restore",
          "atom",
          "getFAQQuery",
          "FaqItem",
          "FaqModel",
          "$faqItems",
          "finished",
          "success",
          "map",
          "result",
          "payload",
          "name",
          "sid"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/FAQ/model/index.ts"],
        "sourcesContent": [
          "import { restore } from 'effector';\n\nimport { atom } from '@/shared/factories';\n\nimport { getFAQQuery } from '../api';\nimport type { FaqItem } from '../types';\n\nexport const FaqModel = atom(() => {\n    const $faqItems = restore<FaqItem[]>(\n        getFAQQuery.finished.success.map(({ result }) => result.payload),\n        []\n    );\n\n    return {\n        $faqItems,\n    };\n});\n"
        ],
        "mappings": "AAAA,SAASA,OAAO,QAAQ,UAAU;AAElC,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,WAAW,QAAQ,QAAQ;AACpC,cAAcC,OAAO,QAAQ,UAAU;AAEvC,OAAO,MAAMC,QAAQ,GAAGH,IAAI,CAAC,MAAM;EAC/B,MAAMI,SAAS,GAAGL,OAAO,CAACG,OAAO,EAAE,CAAC,CAChCD,WAAW,CAACI,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC;IAAEC;EAAO,CAAC,KAAKA,MAAM,CAACC,OAAO,CAAC,EAChE,EAAE;IAAAC,IAAA;IAAAC,GAAA;EAAA,CACN,CAAC;EAED,OAAO;IACHP;EACJ,CAAC;AACL,CAAC,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { restore } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { getFAQQuery } from \"../api\";\nexport const FaqModel = atom(() => {\n  const $faqItems = restore(getFAQQuery.finished.success.map(({\n    result\n  }) => result.payload), [], {\n    name: \"$faqItems\",\n    sid: \"-f1wks5\"\n  });\n  return {\n    $faqItems\n  };\n});\n",
      "start": 1750275033512,
      "end": 1750275033594,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/FAQ/model/index.ts"],
        "sourcesContent": [
          "import { restore } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { getFAQQuery } from '../api';\nimport type { FaqItem } from '../types';\nexport const FaqModel = atom(() => {\n  const $faqItems = restore<FaqItem[]>(getFAQQuery.finished.success.map(({\n    result\n  }) => result.payload), [], {\n    name: \"$faqItems\",\n    sid: \"-f1wks5\"\n  });\n  return {\n    $faqItems\n  };\n});"
        ],
        "mappings": "AAAA,SAAS,eAAe;AACxB,SAAS,YAAY;AACrB,SAAS,mBAAmB;AAErB,aAAM,WAAW,KAAK,MAAM;AACjC,QAAM,YAAY,QAAmB,YAAY,SAAS,QAAQ,IAAI,CAAC;AAAA,IACrE;AAAA,EACF,MAAM,OAAO,OAAO,GAAG,CAAC,GAAG;AAAA,IACzB,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,SAAO;AAAA,IACL;AAAA,EACF;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275033594,
      "end": 1750275033594,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275033594,
      "end": 1750275033595,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275033595,
      "end": 1750275033595,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275033595,
      "end": 1750275033595,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/FAQ/model/index.ts [vike:pluginModuleBanner] */\nimport { restore } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { getFAQQuery } from \"../api\";\nexport const FaqModel = atom(() => {\n  const $faqItems = restore(getFAQQuery.finished.success.map(({\n    result\n  }) => result.payload), [], {\n    name: \"$faqItems\",\n    sid: \"-f1wks5\"\n  });\n  return {\n    $faqItems\n  };\n});\n",
      "start": 1750275033595,
      "end": 1750275033595,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/FAQ/model/index.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

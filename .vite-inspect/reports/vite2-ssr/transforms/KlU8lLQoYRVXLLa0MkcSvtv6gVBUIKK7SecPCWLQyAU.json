{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/List/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport s from './List.module.css';\n\ninterface ListProps extends ComponentProps<'ul'> {\n    data: {\n        id: number;\n        label: ReactNode;\n        icon?: ReactNode;\n    }[];\n}\n\nexport const List = ({ data, className }: ListProps) => (\n    <ul className={clsx(s.list, className)}>\n        {data?.map((item) => (\n            <li key={item.id}>\n                {item.icon}\n                {item.label}\n            </li>\n        ))}\n    </ul>\n);\n",
      "start": 1750105187888,
      "end": 1750105187934,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import type { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport s from './List.module.css';\ninterface ListProps extends ComponentProps<'ul'> {\n  data: {\n    id: number;\n    label: ReactNode;\n    icon?: ReactNode;\n  }[];\n}\nexport const List = ({\n  data,\n  className\n}: ListProps) => <ul className={clsx(s.list, className)}>\n        {data?.map(item => <li key={item.id}>\n                {item.icon}\n                {item.label}\n            </li>)}\n    </ul>;",
      "start": 1750105187934,
      "end": 1750105187936,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "ComponentProps",
          "ReactNode",
          "clsx",
          "s",
          "ListProps",
          "data",
          "id",
          "label",
          "icon",
          "List",
          "className",
          "list",
          "map",
          "item"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/List/index.tsx"
        ],
        "sourcesContent": [
          "import type { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport s from './List.module.css';\n\ninterface ListProps extends ComponentProps<'ul'> {\n    data: {\n        id: number;\n        label: ReactNode;\n        icon?: ReactNode;\n    }[];\n}\n\nexport const List = ({ data, className }: ListProps) => (\n    <ul className={clsx(s.list, className)}>\n        {data?.map((item) => (\n            <li key={item.id}>\n                {item.icon}\n                {item.label}\n            </li>\n        ))}\n    </ul>\n);\n"
        ],
        "mappings": "AAAA,cAAcA,cAAc,EAAEC,SAAS,QAAQ,OAAO;AACtD,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,CAAC,MAAM,mBAAmB;AAEjC,UAAUC,SAAS,SAASJ,cAAc,CAAC,IAAI,CAAC,CAAC;EAC7CK,IAAI,EAAE;IACFC,EAAE,EAAE,MAAM;IACVC,KAAK,EAAEN,SAAS;IAChBO,IAAI,CAAC,EAAEP,SAAS;EACpB,CAAC,EAAE;AACP;AAEA,OAAO,MAAMQ,IAAI,GAAGA,CAAC;EAAEJ,IAAI;EAAEK;AAAqB,CAAV,EAAEN,SAAS,KAC/C,CAAC,EAAE,CAAC,SAAS,CAAC,CAACF,IAAI,CAACC,CAAC,CAACQ,IAAI,EAAED,SAAS,CAAC,CAAC;AAC3C,QAAQ,CAACL,IAAI,EAAEO,GAAG,CAAEC,IAAI,IACZ,CAAC,EAAE,CAAC,GAAG,CAAC,CAACA,IAAI,CAACP,EAAE,CAAC;AAC7B,gBAAgB,CAACO,IAAI,CAACL,IAAI;AAC1B,gBAAgB,CAACK,IAAI,CAACN,KAAK;AAC3B,YAAY,EAAE,EAAE,CACP,CAAC;AACV,IAAI,EAAE,EAAE,CACP",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport clsx from \"clsx\";\nimport s from \"./List.module.css\";\nexport const List = ({\n  data,\n  className\n}) => /* @__PURE__ */ jsx(\"ul\", { className: clsx(s.list, className), children: data?.map((item) => /* @__PURE__ */ jsxs(\"li\", { children: [\n  item.icon,\n  item.label\n] }, item.id)) });\n",
      "start": 1750105187936,
      "end": 1750105188212,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/List/index.tsx"
        ],
        "sourcesContent": [
          "import type { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\nimport s from './List.module.css';\ninterface ListProps extends ComponentProps<'ul'> {\n  data: {\n    id: number;\n    label: ReactNode;\n    icon?: ReactNode;\n  }[];\n}\nexport const List = ({\n  data,\n  className\n}: ListProps) => <ul className={clsx(s.list, className)}>\n        {data?.map(item => <li key={item.id}>\n                {item.icon}\n                {item.label}\n            </li>)}\n    </ul>;"
        ],
        "mappings": "AAaiB,cACU,YADV;AAZjB,OAAO,UAAU;AACjB,OAAO,OAAO;AAQP,aAAM,OAAO,CAAC;AAAA,EACnB;AAAA,EACA;AACF,MAAiB,oBAAC,QAAG,WAAW,KAAK,EAAE,MAAM,SAAS,GAC7C,gBAAM,IAAI,UAAQ,qBAAC,QACX;AAAA,OAAK;AAAA,EACL,KAAK;AAAA,KAFc,KAAK,EAG7B,CAAK,GACb;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/RootLayout/ui/List/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport clsx from \"clsx\";\nimport s from \"./List.module.css\";\nexport const List = ({\n  data,\n  className\n}) => /* @__PURE__ */ jsx(\"ul\", { className: clsx(s.list, className), children: data?.map((item) => /* @__PURE__ */ jsxs(\"li\", { children: [\n  item.icon,\n  item.label\n] }, item.id)) });\n",
      "start": 1750105188212,
      "end": 1750105188212,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "src/widgets/RootLayout/ui/List/index.tsx"
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACr
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { ComponentType } from 'react';\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\n\nimport { isExists } from '@/shared/lib';\n\nimport { RephrasingModel } from '../model';\n\nimport s from './Rephrasing.module.css';\n\nexport const Rephrasing = variant({\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button as ComponentType,\n    else: undefined,\n    bind: {\n        fz: 16,\n        c: 'dark.9',\n        color: 'dark.9',\n        display: 'flex',\n        variant: 'subtle',\n        className: s.root,\n        children: 'Перефразировать',\n        leftSection: <ArrowsClockwise size={18} />,\n        onClick: RephrasingModel.changePhraseIndex,\n    },\n});\n",
      "start": 1750271784982,
      "end": 1750271785006,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\nimport { isExists } from '@/shared/lib';\nimport { RephrasingModel } from '../model';\nimport s from './Rephrasing.module.css';\nexport const Rephrasing = variant({\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints })=>isExists(texts, 1) && isExists(hints, 1)),\n    then: Button,\n    else: undefined,\n    bind: {\n        fz: 16,\n        c: 'dark.9',\n        color: 'dark.9',\n        display: 'flex',\n        variant: 'subtle',\n        className: s.root,\n        children: 'Перефразировать',\n        leftSection: /*#__PURE__*/ _jsx(ArrowsClockwise, {\n            size: 18\n        }),\n        onClick: RephrasingModel.changePhraseIndex\n    }\n});\n",
      "start": 1750271785006,
      "end": 1750271785011,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx\"],\"sourcesContent\":[\"import type { ComponentType } from 'react';\\nimport { variant } from '@effector/reflect';\\nimport { Button } from '@mantine/core';\\nimport { ArrowsClockwise } from '@phosphor-icons/react';\\n\\nimport { isExists } from '@/shared/lib';\\n\\nimport { RephrasingModel } from '../model';\\n\\nimport s from './Rephrasing.module.css';\\n\\nexport const Rephrasing = variant({\\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\\n    then: Button as ComponentType,\\n    else: undefined,\\n    bind: {\\n        fz: 16,\\n        c: 'dark.9',\\n        color: 'dark.9',\\n        display: 'flex',\\n        variant: 'subtle',\\n        className: s.root,\\n        children: 'Перефразировать',\\n        leftSection: <ArrowsClockwise size={18} />,\\n        onClick: RephrasingModel.changePhraseIndex,\\n    },\\n});\\n\"],\"names\":[\"variant\",\"Button\",\"ArrowsClockwise\",\"isExists\",\"RephrasingModel\",\"s\",\"Rephrasing\",\"if\",\"$currentPhrases\",\"map\",\"texts\",\"hints\",\"then\",\"else\",\"undefined\",\"bind\",\"fz\",\"c\",\"color\",\"display\",\"className\",\"root\",\"children\",\"leftSection\",\"size\",\"onClick\",\"changePhraseIndex\"],\"mappings\":\";AACA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,eAAe,QAAQ,wBAAwB;AAExD,SAASC,QAAQ,QAAQ,eAAe;AAExC,SAASC,eAAe,QAAQ,WAAW;AAE3C,OAAOC,OAAO,0BAA0B;AAExC,OAAO,MAAMC,aAAaN,QAAQ;IAC9BO,IAAIH,gBAAgBI,eAAe,CAACC,GAAG,CAAC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAKR,SAASO,OAAO,MAAMP,SAASQ,OAAO;IACpGC,MAAMX;IACNY,MAAMC;IACNC,MAAM;QACFC,IAAI;QACJC,GAAG;QACHC,OAAO;QACPC,SAAS;QACTnB,SAAS;QACToB,WAAWf,EAAEgB,IAAI;QACjBC,UAAU;QACVC,2BAAa,KAACrB;YAAgBsB,MAAM;;QACpCC,SAASrB,gBAAgBsB,iBAAiB;IAC9C;AACJ,GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { variant } from \"@effector/reflect\";\nimport { Button } from \"@mantine/core\";\nimport { ArrowsClockwise } from \"@phosphor-icons/react\";\nimport { isExists } from \"@/shared/lib\";\nimport { RephrasingModel } from \"../model\";\nimport s from \"./Rephrasing.module.css\";\nexport const Rephrasing = variant({\n  if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\n  then: Button,\n  else: void 0,\n  bind: {\n    fz: 16,\n    c: \"dark.9\",\n    color: \"dark.9\",\n    display: \"flex\",\n    variant: \"subtle\",\n    className: s.root,\n    children: \"Перефразировать\",\n    leftSection: /* @__PURE__ */ _jsx(ArrowsClockwise, {\n      size: 18\n    }),\n    onClick: RephrasingModel.changePhraseIndex\n  }\n});\n",
      "start": 1750271785011,
      "end": 1750271785237,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\nimport { isExists } from '@/shared/lib';\nimport { RephrasingModel } from '../model';\nimport s from './Rephrasing.module.css';\nexport const Rephrasing = variant({\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints })=>isExists(texts, 1) && isExists(hints, 1)),\n    then: Button,\n    else: undefined,\n    bind: {\n        fz: 16,\n        c: 'dark.9',\n        color: 'dark.9',\n        display: 'flex',\n        variant: 'subtle',\n        className: s.root,\n        children: 'Перефразировать',\n        leftSection: /*#__PURE__*/ _jsx(ArrowsClockwise, {\n            size: 18\n        }),\n        onClick: RephrasingModel.changePhraseIndex\n    }\n});\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,YAAY;AAC5B,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,OAAO,OAAO;AACP,aAAM,aAAa,QAAQ;AAAA,EAC9B,IAAI,gBAAgB,gBAAgB,IAAI,CAAC,EAAE,OAAO,MAAM,MAAI,SAAS,OAAO,CAAC,KAAK,SAAS,OAAO,CAAC,CAAC;AAAA,EACpG,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,IACF,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW,EAAE;AAAA,IACb,UAAU;AAAA,IACV,aAA2B,qBAAK,iBAAiB;AAAA,MAC7C,MAAM;AAAA,IACV,CAAC;AAAA,IACD,SAAS,gBAAgB;AAAA,EAC7B;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785237,
      "end": 1750271785237,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785237,
      "end": 1750271785238,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785238,
      "end": 1750271785238,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785238,
      "end": 1750271785238,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785238,
      "end": 1750271785238,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/features/Rephrasing/ui/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { variant } from \"@effector/reflect\";\nimport { Button } from \"@mantine/core\";\nimport { ArrowsClockwise } from \"@phosphor-icons/react\";\nimport { isExists } from \"@/shared/lib\";\nimport { RephrasingModel } from \"../model\";\nimport s from \"./Rephrasing.module.css\";\nexport const Rephrasing = variant({\n  if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\n  then: Button,\n  else: void 0,\n  bind: {\n    fz: 16,\n    c: \"dark.9\",\n    color: \"dark.9\",\n    display: \"flex\",\n    variant: \"subtle\",\n    className: s.root,\n    children: \"Перефразировать\",\n    leftSection: /* @__PURE__ */ _jsx(ArrowsClockwise, {\n      size: 18\n    }),\n    onClick: RephrasingModel.changePhraseIndex\n  }\n});\n",
      "start": 1750271785238,
      "end": 1750271785238,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/features/Rephrasing/ui/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC;AACF,CAAC,CAAC;"
      }
    }
  ]
}

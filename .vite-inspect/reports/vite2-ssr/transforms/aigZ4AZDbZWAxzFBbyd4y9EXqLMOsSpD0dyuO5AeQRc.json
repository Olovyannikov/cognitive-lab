{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { ComponentType } from 'react';\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\n\nimport { isExists } from '@/shared/lib';\n\nimport { RephrasingModel } from '../model';\n\nimport s from './Rephrasing.module.css';\n\nexport const Rephrasing = variant({\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button as ComponentType,\n    else: undefined,\n    bind: {\n        fz: 16,\n        c: 'dark.9',\n        color: 'dark.9',\n        display: 'flex',\n        variant: 'subtle',\n        className: s.root,\n        children: 'Перефразировать',\n        leftSection: <ArrowsClockwise size={18} />,\n        onClick: RephrasingModel.changePhraseIndex,\n    },\n});\n",
      "start": 1750278467062,
      "end": 1750278467108,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { withFactory as _withFactory } from \"effector\";\nimport type { ComponentType } from 'react';\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\nimport { isExists } from '@/shared/lib';\nimport { RephrasingModel } from '../model';\nimport s from './Rephrasing.module.css';\nexport const Rephrasing = _withFactory({\n  sid: \"hbbhjk\",\n  fn: () => variant({\n    if: RephrasingModel.$currentPhrases.map(({\n      texts,\n      hints\n    }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button as ComponentType,\n    else: undefined,\n    bind: {\n      fz: 16,\n      c: 'dark.9',\n      color: 'dark.9',\n      display: 'flex',\n      variant: 'subtle',\n      className: s.root,\n      children: 'Перефразировать',\n      leftSection: <ArrowsClockwise size={18} />,\n      onClick: RephrasingModel.changePhraseIndex\n    }\n  }),\n  name: \"Rephrasing\",\n  method: \"variant\"\n});",
      "start": 1750278467108,
      "end": 1750278467110,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "ComponentType",
          "variant",
          "Button",
          "ArrowsClockwise",
          "isExists",
          "RephrasingModel",
          "s",
          "Rephrasing",
          "_withFactory",
          "sid",
          "\"hbbhjk\"",
          "fn",
          "if",
          "$currentPhrases",
          "map",
          "texts",
          "hints",
          "then",
          "else",
          "undefined",
          "bind",
          "fz",
          "c",
          "color",
          "display",
          "className",
          "root",
          "children",
          "leftSection",
          "onClick",
          "changePhraseIndex",
          "name",
          "\"Rephrasing\"",
          "method",
          "\"variant\""
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx"],
        "sourcesContent": [
          "import type { ComponentType } from 'react';\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\n\nimport { isExists } from '@/shared/lib';\n\nimport { RephrasingModel } from '../model';\n\nimport s from './Rephrasing.module.css';\n\nexport const Rephrasing = variant({\n    if: RephrasingModel.$currentPhrases.map(({ texts, hints }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button as ComponentType,\n    else: undefined,\n    bind: {\n        fz: 16,\n        c: 'dark.9',\n        color: 'dark.9',\n        display: 'flex',\n        variant: 'subtle',\n        className: s.root,\n        children: 'Перефразировать',\n        leftSection: <ArrowsClockwise size={18} />,\n        onClick: RephrasingModel.changePhraseIndex,\n    },\n});\n"
        ],
        "mappings": ";AAAA,cAAcA,aAAa,QAAQ,OAAO;AAC1C,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,eAAe,QAAQ,uBAAuB;AAEvD,SAASC,QAAQ,QAAQ,cAAc;AAEvC,SAASC,eAAe,QAAQ,UAAU;AAE1C,OAAOC,CAAC,MAAM,yBAAyB;AAEvC,OAAO,MAAMC,UAAU,GAAAC,YAAA;EAAAC,GAAA,EAAAC,QAAA;EAAAC,EAAA,EAAAA,CAAA,KAAGV,OAAO,CAAC;IAC9BW,EAAE,EAAEP,eAAe,CAACQ,eAAe,CAACC,GAAG,CAAC,CAAC;MAAEC,KAAK;MAAEC;IAAM,CAAC,KAAKZ,QAAQ,CAACW,KAAK,EAAE,CAAC,CAAC,IAAIX,QAAQ,CAACY,KAAK,EAAE,CAAC,CAAC,CAAC;IACvGC,IAAI,EAAEf,MAAM,IAAIF,aAAa;IAC7BkB,IAAI,EAAEC,SAAS;IACfC,IAAI,EAAE;MACFC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAE,QAAQ;MACXC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE,MAAM;MACfvB,OAAO,EAAE,QAAQ;MACjBwB,SAAS,EAAEnB,CAAC,CAACoB,IAAI;MACjBC,QAAQ,EAAE,iBAAiB;MAC3BC,WAAW,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG;MAC1CC,OAAO,EAAExB,eAAe,CAACyB;IAC7B;EACJ,CAAC,CAAC;EAAAC,IAAA,EAAAC,YAAA;EAAAC,MAAA,EAAAC;AAAA",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { withFactory as _withFactory } from \"effector\";\nimport { variant } from \"@effector/reflect\";\nimport { Button } from \"@mantine/core\";\nimport { ArrowsClockwise } from \"@phosphor-icons/react\";\nimport { isExists } from \"@/shared/lib\";\nimport { RephrasingModel } from \"../model\";\nimport s from \"./Rephrasing.module.css\";\nexport const Rephrasing = _withFactory({\n  sid: \"hbbhjk\",\n  fn: () => variant({\n    if: RephrasingModel.$currentPhrases.map(({\n      texts,\n      hints\n    }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button,\n    else: void 0,\n    bind: {\n      fz: 16,\n      c: \"dark.9\",\n      color: \"dark.9\",\n      display: \"flex\",\n      variant: \"subtle\",\n      className: s.root,\n      children: \"Перефразировать\",\n      leftSection: /* @__PURE__ */ jsx(ArrowsClockwise, { size: 18 }),\n      onClick: RephrasingModel.changePhraseIndex\n    }\n  }),\n  name: \"Rephrasing\",\n  method: \"variant\"\n});\n",
      "start": 1750278467110,
      "end": 1750278467361,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/Rephrasing/ui/index.tsx"],
        "sourcesContent": [
          "import { withFactory as _withFactory } from \"effector\";\nimport type { ComponentType } from 'react';\nimport { variant } from '@effector/reflect';\nimport { Button } from '@mantine/core';\nimport { ArrowsClockwise } from '@phosphor-icons/react';\nimport { isExists } from '@/shared/lib';\nimport { RephrasingModel } from '../model';\nimport s from './Rephrasing.module.css';\nexport const Rephrasing = _withFactory({\n  sid: \"hbbhjk\",\n  fn: () => variant({\n    if: RephrasingModel.$currentPhrases.map(({\n      texts,\n      hints\n    }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button as ComponentType,\n    else: undefined,\n    bind: {\n      fz: 16,\n      c: 'dark.9',\n      color: 'dark.9',\n      display: 'flex',\n      variant: 'subtle',\n      className: s.root,\n      children: 'Перефразировать',\n      leftSection: <ArrowsClockwise size={18} />,\n      onClick: RephrasingModel.changePhraseIndex\n    }\n  }),\n  name: \"Rephrasing\",\n  method: \"variant\"\n});"
        ],
        "mappings": "AAyBmB;AAzBnB,SAAS,eAAe,oBAAoB;AAE5C,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,OAAO,OAAO;AACP,aAAM,aAAa,aAAa;AAAA,EACrC,KAAK;AAAA,EACL,IAAI,MAAM,QAAQ;AAAA,IAChB,IAAI,gBAAgB,gBAAgB,IAAI,CAAC;AAAA,MACvC;AAAA,MACA;AAAA,IACF,MAAM,SAAS,OAAO,CAAC,KAAK,SAAS,OAAO,CAAC,CAAC;AAAA,IAC9C,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,GAAG;AAAA,MACH,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW,EAAE;AAAA,MACb,UAAU;AAAA,MACV,aAAa,oBAAC,mBAAgB,MAAM,IAAI;AAAA,MACxC,SAAS,gBAAgB;AAAA,IAC3B;AAAA,EACF,CAAC;AAAA,EACD,MAAM;AAAA,EACN,QAAQ;AACV,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/features/Rephrasing/ui/index.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { withFactory as _withFactory } from \"effector\";\nimport { variant } from \"@effector/reflect\";\nimport { Button } from \"@mantine/core\";\nimport { ArrowsClockwise } from \"@phosphor-icons/react\";\nimport { isExists } from \"@/shared/lib\";\nimport { RephrasingModel } from \"../model\";\nimport s from \"./Rephrasing.module.css\";\nexport const Rephrasing = _withFactory({\n  sid: \"hbbhjk\",\n  fn: () => variant({\n    if: RephrasingModel.$currentPhrases.map(({\n      texts,\n      hints\n    }) => isExists(texts, 1) && isExists(hints, 1)),\n    then: Button,\n    else: void 0,\n    bind: {\n      fz: 16,\n      c: \"dark.9\",\n      color: \"dark.9\",\n      display: \"flex\",\n      variant: \"subtle\",\n      className: s.root,\n      children: \"Перефразировать\",\n      leftSection: /* @__PURE__ */ jsx(ArrowsClockwise, { size: 18 }),\n      onClick: RephrasingModel.changePhraseIndex\n    }\n  }),\n  name: \"Rephrasing\",\n  method: \"variant\"\n});\n",
      "start": 1750278467361,
      "end": 1750278467361,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/features/Rephrasing/ui/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;"
      }
    }
  ]
}

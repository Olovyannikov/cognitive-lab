{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/getProgress.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Вычисляет процент прогресса прохождения теста\n * @param answersCount Количество ответов\n * @param questionsCount Количество вопросов\n */\nexport const getProgress = (answersCount: number, questionsCount: number): number => {\n    if (!questionsCount) return 0;\n    return Number(((answersCount / questionsCount) * 100).toFixed(0));\n};\n",
      "start": 1750275033856,
      "end": 1750275033905,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "/**\n * Вычисляет процент прогресса прохождения теста\n * @param answersCount Количество ответов\n * @param questionsCount Количество вопросов\n */\nexport const getProgress = (answersCount: number, questionsCount: number): number => {\n  if (!questionsCount) return 0;\n  return Number((answersCount / questionsCount * 100).toFixed(0));\n};",
      "start": 1750275033905,
      "end": 1750275033906,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": ["getProgress", "answersCount", "questionsCount", "Number", "toFixed"],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/getProgress.ts"],
        "sourcesContent": [
          "/**\n * Вычисляет процент прогресса прохождения теста\n * @param answersCount Количество ответов\n * @param questionsCount Количество вопросов\n */\nexport const getProgress = (answersCount: number, questionsCount: number): number => {\n    if (!questionsCount) return 0;\n    return Number(((answersCount / questionsCount) * 100).toFixed(0));\n};\n"
        ],
        "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,YAAY,EAAE,MAAM,EAAEC,cAAc,EAAE,MAAM,CAAC,EAAE,MAAM,IAAI;EACjF,IAAI,CAACA,cAAc,EAAE,OAAO,CAAC;EAC7B,OAAOC,MAAM,CAAC,CAAEF,YAAY,GAAGC,cAAc,GAAI,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "export const getProgress = (answersCount, questionsCount) => {\n  if (!questionsCount) return 0;\n  return Number((answersCount / questionsCount * 100).toFixed(0));\n};\n",
      "start": 1750275033906,
      "end": 1750275034161,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/getProgress.ts"],
        "sourcesContent": [
          "/**\n * Вычисляет процент прогресса прохождения теста\n * @param answersCount Количество ответов\n * @param questionsCount Количество вопросов\n */\nexport const getProgress = (answersCount: number, questionsCount: number): number => {\n  if (!questionsCount) return 0;\n  return Number((answersCount / questionsCount * 100).toFixed(0));\n};"
        ],
        "mappings": "AAKO,aAAM,cAAc,CAAC,cAAsB,mBAAmC;AACnF,MAAI,CAAC,eAAgB,QAAO;AAC5B,SAAO,QAAQ,eAAe,iBAAiB,KAAK,QAAQ,CAAC,CAAC;AAChE;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Test/model/getProgress.ts [vike:pluginModuleBanner] */\nexport const getProgress = (answersCount, questionsCount) => {\n  if (!questionsCount) return 0;\n  return Number((answersCount / questionsCount * 100).toFixed(0));\n};\n",
      "start": 1750275034161,
      "end": 1750275034161,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Test/model/getProgress.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC;"
      }
    }
  ]
}

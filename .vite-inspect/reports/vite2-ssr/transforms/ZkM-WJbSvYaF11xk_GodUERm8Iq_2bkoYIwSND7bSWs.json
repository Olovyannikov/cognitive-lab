{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/HelpForm/api/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createQuery } from '@farfetched/core';\n\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\n\nimport type { SendIssueRequest } from './dto';\n\nexport const sendIssueMutation = createQuery({\n    effect: createInternalRequestFx<SendIssueRequest, { id: string }>((body) => ({\n        url: API.support.issues,\n        method: HTTP_METHODS.POST,\n        body,\n    })),\n});\n",
      "start": 1750239308689,
      "end": 1750239308706,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createQuery } from '@farfetched/core';\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\nexport const sendIssueMutation = _effector$factory({\n    sid: \"eizrhkx\",\n    fn: ()=>createQuery({\n            effect: createInternalRequestFx((body)=>({\n                    url: API.support.issues,\n                    method: HTTP_METHODS.POST,\n                    body\n                }))\n        })\n});\n",
      "start": 1750239308706,
      "end": 1750239308708,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/HelpForm/api/index.ts\"],\"sourcesContent\":[\"import { createQuery } from '@farfetched/core';\\n\\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\\n\\nimport type { SendIssueRequest } from './dto';\\n\\nexport const sendIssueMutation = createQuery({\\n    effect: createInternalRequestFx<SendIssueRequest, { id: string }>((body) => ({\\n        url: API.support.issues,\\n        method: HTTP_METHODS.POST,\\n        body,\\n    })),\\n});\\n\"],\"names\":[\"createQuery\",\"API\",\"createInternalRequestFx\",\"HTTP_METHODS\",\"sendIssueMutation\",\"effect\",\"body\",\"url\",\"support\",\"issues\",\"method\",\"POST\"],\"mappings\":\";AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAE/C,SAASC,GAAG,EAAEC,uBAAuB,EAAEC,YAAY,QAAQ,eAAe;AAI1E,OAAO,MAAMC;;YAAoBJ,YAAY;YACzCK,QAAQH,wBAA0D,CAACI,OAAU,CAAA;oBACzEC,KAAKN,IAAIO,OAAO,CAACC,MAAM;oBACvBC,QAAQP,aAAaQ,IAAI;oBACzBL;gBACJ,CAAA;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createQuery } from \"@farfetched/core\";\nimport { API, createInternalRequestFx, HTTP_METHODS } from \"@/shared/api\";\nexport const sendIssueMutation = _effector$factory({\n  sid: \"eizrhkx\",\n  fn: () => createQuery({\n    effect: createInternalRequestFx((body) => ({\n      url: API.support.issues,\n      method: HTTP_METHODS.POST,\n      body\n    }))\n  })\n});\n",
      "start": 1750239308708,
      "end": 1750239308805,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/HelpForm/api/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createQuery } from '@farfetched/core';\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\nexport const sendIssueMutation = _effector$factory({\n    sid: \"eizrhkx\",\n    fn: ()=>createQuery({\n            effect: createInternalRequestFx((body)=>({\n                    url: API.support.issues,\n                    method: HTTP_METHODS.POST,\n                    body\n                }))\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,mBAAmB;AAC5B,SAAS,KAAK,yBAAyB,oBAAoB;AACpD,aAAM,oBAAoB,kBAAkB;AAAA,EAC/C,KAAK;AAAA,EACL,IAAI,MAAI,YAAY;AAAA,IACZ,QAAQ,wBAAwB,CAAC,UAAQ;AAAA,MACjC,KAAK,IAAI,QAAQ;AAAA,MACjB,QAAQ,aAAa;AAAA,MACrB;AAAA,IACJ,EAAE;AAAA,EACV,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/HelpForm/api/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createQuery } from \"@farfetched/core\";\nimport { API, createInternalRequestFx, HTTP_METHODS } from \"@/shared/api\";\nexport const sendIssueMutation = _effector$factory({\n  sid: \"eizrhkx\",\n  fn: () => createQuery({\n    effect: createInternalRequestFx((body) => ({\n      url: API.support.issues,\n      method: HTTP_METHODS.POST,\n      body\n    }))\n  })\n});\n",
      "start": 1750239308805,
      "end": 1750239308805,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/HelpForm/api/index.ts"],
        "names": [],
        "mappingszE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACx
      }
    }
  ]
}

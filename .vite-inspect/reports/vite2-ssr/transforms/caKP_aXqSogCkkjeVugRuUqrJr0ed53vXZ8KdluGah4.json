{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/factories/disclosure.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createFactory } from '@withease/factories';\nimport { createEvent, createStore, sample } from 'effector';\n\nexport const disclosureFactory = createFactory(({ open }: { open: boolean }) => {\n    const $open = createStore(open);\n\n    const toggle = createEvent();\n    const opened = createEvent<true>();\n    const closed = createEvent<false>();\n\n    sample({\n        clock: toggle,\n        source: $open,\n        fn: (isOpen) => !isOpen,\n        target: $open,\n    });\n\n    sample({\n        clock: [opened, closed],\n        target: $open,\n    });\n\n    return {\n        $open,\n        toggle,\n        opened,\n        closed,\n    };\n});\n",
      "start": 1750239308411,
      "end": 1750239308429,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createFactory } from '@withease/factories';\nimport { createEvent, createStore, sample } from 'effector';\nexport const disclosureFactory = _effector$factory({\n    sid: \"6tf0ee1n\",\n    fn: ()=>createFactory(({ open })=>{\n            const $open = createStore(open, {\n                sid: \"1rxzfvaf\"\n            });\n            const toggle = createEvent({\n                sid: \"7e2b8not\"\n            });\n            const opened = createEvent({\n                sid: \"cfxpuvez\"\n            });\n            const closed = createEvent({\n                sid: \"5ov8p6i1\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: toggle,\n                        source: $open,\n                        fn: (isOpen)=>!isOpen,\n                        target: $open\n                    }\n                ],\n                or: {\n                    sid: \"5oyw4lho\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            opened,\n                            closed\n                        ],\n                        target: $open\n                    }\n                ],\n                or: {\n                    sid: \"by0opxkd\"\n                }\n            });\n            return {\n                $open,\n                toggle,\n                opened,\n                closed\n            };\n        })\n});\n",
      "start": 1750239308429,
      "end": 1750239308434,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/factories/disclosure.ts\"],\"sourcesContent\":[\"import { createFactory } from '@withease/factories';\\nimport { createEvent, createStore, sample } from 'effector';\\n\\nexport const disclosureFactory = createFactory(({ open }: { open: boolean }) => {\\n    const $open = createStore(open);\\n\\n    const toggle = createEvent();\\n    const opened = createEvent<true>();\\n    const closed = createEvent<false>();\\n\\n    sample({\\n        clock: toggle,\\n        source: $open,\\n        fn: (isOpen) => !isOpen,\\n        target: $open,\\n    });\\n\\n    sample({\\n        clock: [opened, closed],\\n        target: $open,\\n    });\\n\\n    return {\\n        $open,\\n        toggle,\\n        opened,\\n        closed,\\n    };\\n});\\n\"],\"names\":[\"createFactory\",\"createEvent\",\"createStore\",\"sample\",\"disclosureFactory\",\"open\",\"$open\",\"toggle\",\"opened\",\"closed\",\"clock\",\"source\",\"fn\",\"isOpen\",\"target\"],\"mappings\":\";AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,EAAEC,WAAW,EAAEC,MAAM,QAAQ,WAAW;AAE5D,OAAO,MAAMC;;YAAoBJ,cAAc,CAAC,EAAEK,IAAI,EAAqB;YACvE,MAAMC,QAAQJ,YAAYG;;;YAE1B,MAAME,SAASN;;;YACf,MAAMO,SAASP;;;YACf,MAAMQ,SAASR;;;YAEfE;;oBAAO;wBACHO,OAAOH;wBACPI,QAAQL;wBACRM,IAAI,CAACC,SAAW,CAACA;wBACjBC,QAAQR;oBACZ;;;;;;YAEAH;;oBAAO;wBACHO,OAAO;4BAACF;4BAAQC;yBAAO;wBACvBK,QAAQR;oBACZ;;;;;;YAEA,OAAO;gBACHA;gBACAC;gBACAC;gBACAC;YACJ;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createFactory } from \"@withease/factories\";\nimport { createEvent, createStore, sample } from \"effector\";\nexport const disclosureFactory = _effector$factory({\n  sid: \"6tf0ee1n\",\n  fn: () => createFactory(({ open }) => {\n    const $open = createStore(open, {\n      sid: \"1rxzfvaf\"\n    });\n    const toggle = createEvent({\n      sid: \"7e2b8not\"\n    });\n    const opened = createEvent({\n      sid: \"cfxpuvez\"\n    });\n    const closed = createEvent({\n      sid: \"5ov8p6i1\"\n    });\n    sample({\n      and: [\n        {\n          clock: toggle,\n          source: $open,\n          fn: (isOpen) => !isOpen,\n          target: $open\n        }\n      ],\n      or: {\n        sid: \"5oyw4lho\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            opened,\n            closed\n          ],\n          target: $open\n        }\n      ],\n      or: {\n        sid: \"by0opxkd\"\n      }\n    });\n    return {\n      $open,\n      toggle,\n      opened,\n      closed\n    };\n  })\n});\n",
      "start": 1750239308434,
      "end": 1750239308630,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/factories/disclosure.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createFactory } from '@withease/factories';\nimport { createEvent, createStore, sample } from 'effector';\nexport const disclosureFactory = _effector$factory({\n    sid: \"6tf0ee1n\",\n    fn: ()=>createFactory(({ open })=>{\n            const $open = createStore(open, {\n                sid: \"1rxzfvaf\"\n            });\n            const toggle = createEvent({\n                sid: \"7e2b8not\"\n            });\n            const opened = createEvent({\n                sid: \"cfxpuvez\"\n            });\n            const closed = createEvent({\n                sid: \"5ov8p6i1\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: toggle,\n                        source: $open,\n                        fn: (isOpen)=>!isOpen,\n                        target: $open\n                    }\n                ],\n                or: {\n                    sid: \"5oyw4lho\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            opened,\n                            closed\n                        ],\n                        target: $open\n                    }\n                ],\n                or: {\n                    sid: \"by0opxkd\"\n                }\n            });\n            return {\n                $open,\n                toggle,\n                opened,\n                closed\n            };\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,qBAAqB;AAC9B,SAAS,aAAa,aAAa,cAAc;AAC1C,aAAM,oBAAoB,kBAAkB;AAAA,EAC/C,KAAK;AAAA,EACL,IAAI,MAAI,cAAc,CAAC,EAAE,KAAK,MAAI;AAC1B,UAAM,QAAQ,YAAY,MAAM;AAAA,MAC5B,KAAK;AAAA,IACT,CAAC;AACD,UAAM,SAAS,YAAY;AAAA,MACvB,KAAK;AAAA,IACT,CAAC;AACD,UAAM,SAAS,YAAY;AAAA,MACvB,KAAK;AAAA,IACT,CAAC;AACD,UAAM,SAAS,YAAY;AAAA,MACvB,KAAK;AAAA,IACT,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,IAAI,CAAC,WAAS,CAAC;AAAA,UACf,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO;AAAA,YACH;AAAA,YACA;AAAA,UACJ;AAAA,UACA,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308630,
      "end": 1750239308630,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308631,
      "end": 1750239308631,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/shared/factories/disclosure.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createFactory } from \"@withease/factories\";\nimport { createEvent, createStore, sample } from \"effector\";\nexport const disclosureFactory = _effector$factory({\n  sid: \"6tf0ee1n\",\n  fn: () => createFactory(({ open }) => {\n    const $open = createStore(open, {\n      sid: \"1rxzfvaf\"\n    });\n    const toggle = createEvent({\n      sid: \"7e2b8not\"\n    });\n    const opened = createEvent({\n      sid: \"cfxpuvez\"\n    });\n    const closed = createEvent({\n      sid: \"5ov8p6i1\"\n    });\n    sample({\n      and: [\n        {\n          clock: toggle,\n          source: $open,\n          fn: (isOpen) => !isOpen,\n          target: $open\n        }\n      ],\n      or: {\n        sid: \"5oyw4lho\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            opened,\n            closed\n          ],\n          target: $open\n        }\n      ],\n      or: {\n        sid: \"by0opxkd\"\n      }\n    });\n    return {\n      $open,\n      toggle,\n      opened,\n      closed\n    };\n  })\n});\n",
      "start": 1750239308631,
      "end": 1750239308631,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/factories/disclosure.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,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"
      }
    }
  ]
}

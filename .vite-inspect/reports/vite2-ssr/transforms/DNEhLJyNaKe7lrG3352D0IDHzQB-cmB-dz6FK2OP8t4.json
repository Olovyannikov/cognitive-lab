{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/barChartPreparedData.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { Mark } from '../types';\n\nexport type BarChartPreparedDataProps = Partial<{\n    mbti_data: Record<string, { text: string; type: 'header' | 'paragraph' }[]>;\n    mbti_percentages?: Record<string, { negative: number; positive: number }>;\n}>;\n\nexport function barChartPrepareData(item?: BarChartPreparedDataProps) {\n    return Object.entries(item?.mbti_percentages ?? '').map((el) => ({\n        value: el[1].positive,\n        label: el[0],\n        data: item?.mbti_data?.[el[0]],\n        mbti_type: Object.keys(item?.mbti_data ?? ''),\n    })) as Mark[];\n}\n",
      "start": 1750275034028,
      "end": 1750275034058,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import type { Mark } from '../types';\nexport type BarChartPreparedDataProps = Partial<{\n  mbti_data: Record<string, {\n    text: string;\n    type: 'header' | 'paragraph';\n  }[]>;\n  mbti_percentages?: Record<string, {\n    negative: number;\n    positive: number;\n  }>;\n}>;\nexport function barChartPrepareData(item?: BarChartPreparedDataProps) {\n  return Object.entries(item?.mbti_percentages ?? '').map(el => ({\n    value: el[1].positive,\n    label: el[0],\n    data: item?.mbti_data?.[el[0]],\n    mbti_type: Object.keys(item?.mbti_data ?? '')\n  })) as Mark[];\n}",
      "start": 1750275034058,
      "end": 1750275034060,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Mark",
          "BarChartPreparedDataProps",
          "Partial",
          "mbti_data",
          "Record",
          "text",
          "type",
          "mbti_percentages",
          "negative",
          "positive",
          "barChartPrepareData",
          "item",
          "Object",
          "entries",
          "map",
          "el",
          "value",
          "label",
          "data",
          "mbti_type",
          "keys"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/barChartPreparedData.ts"
        ],
        "sourcesContent": [
          "import type { Mark } from '../types';\n\nexport type BarChartPreparedDataProps = Partial<{\n    mbti_data: Record<string, { text: string; type: 'header' | 'paragraph' }[]>;\n    mbti_percentages?: Record<string, { negative: number; positive: number }>;\n}>;\n\nexport function barChartPrepareData(item?: BarChartPreparedDataProps) {\n    return Object.entries(item?.mbti_percentages ?? '').map((el) => ({\n        value: el[1].positive,\n        label: el[0],\n        data: item?.mbti_data?.[el[0]],\n        mbti_type: Object.keys(item?.mbti_data ?? ''),\n    })) as Mark[];\n}\n"
        ],
        "mappings": "AAAA,cAAcA,IAAI,QAAQ,UAAU;AAEpC,OAAO,KAAKC,yBAAyB,GAAGC,OAAO,CAAC;EAC5CC,SAAS,EAAEC,MAAM,CAAC,MAAM,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE,QAAQ,GAAG,WAAW;EAAC,CAAC,EAAE,CAAC;EAC3EC,gBAAgB,CAAC,EAAEH,MAAM,CAAC,MAAM,EAAE;IAAEI,QAAQ,EAAE,MAAM;IAAEC,QAAQ,EAAE,MAAM;EAAC,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEF,OAAO,SAASC,mBAAmBA,CAACC,IAAgC,CAA3B,EAAEV,yBAAyB,EAAE;EAClE,OAAOW,MAAM,CAACC,OAAO,CAACF,IAAI,EAAEJ,gBAAgB,IAAI,EAAE,CAAC,CAACO,GAAG,CAAEC,EAAE,KAAM;IAC7DC,KAAK,EAAED,EAAE,CAAC,CAAC,CAAC,CAACN,QAAQ;IACrBQ,KAAK,EAAEF,EAAE,CAAC,CAAC,CAAC;IACZG,IAAI,EAAEP,IAAI,EAAER,SAAS,GAAGY,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9BI,SAAS,EAAEP,MAAM,CAACQ,IAAI,CAACT,IAAI,EAAER,SAAS,IAAI,EAAE;EAChD,CAAC,CAAC,CAAC,IAAIH,IAAI,EAAE;AACjB",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "export function barChartPrepareData(item) {\n  return Object.entries(item?.mbti_percentages ?? \"\").map((el) => ({\n    value: el[1].positive,\n    label: el[0],\n    data: item?.mbti_data?.[el[0]],\n    mbti_type: Object.keys(item?.mbti_data ?? \"\")\n  }));\n}\n",
      "start": 1750275034060,
      "end": 1750275034258,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/barChartPreparedData.ts"
        ],
        "sourcesContent": [
          "import type { Mark } from '../types';\nexport type BarChartPreparedDataProps = Partial<{\n  mbti_data: Record<string, {\n    text: string;\n    type: 'header' | 'paragraph';\n  }[]>;\n  mbti_percentages?: Record<string, {\n    negative: number;\n    positive: number;\n  }>;\n}>;\nexport function barChartPrepareData(item?: BarChartPreparedDataProps) {\n  return Object.entries(item?.mbti_percentages ?? '').map(el => ({\n    value: el[1].positive,\n    label: el[0],\n    data: item?.mbti_data?.[el[0]],\n    mbti_type: Object.keys(item?.mbti_data ?? '')\n  })) as Mark[];\n}"
        ],
        "mappings": "AAWO,gBAAS,oBAAoB,MAAkC;AACpE,SAAO,OAAO,QAAQ,MAAM,oBAAoB,EAAE,EAAE,IAAI,SAAO;AAAA,IAC7D,OAAO,GAAG,CAAC,EAAE;AAAA,IACb,OAAO,GAAG,CAAC;AAAA,IACX,MAAM,MAAM,YAAY,GAAG,CAAC,CAAC;AAAA,IAC7B,WAAW,OAAO,KAAK,MAAM,aAAa,EAAE;AAAA,EAC9C,EAAE;AACJ;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Report/lib/barChartPreparedData.ts [vike:pluginModuleBanner] */\nexport function barChartPrepareData(item) {\n  return Object.entries(item?.mbti_percentages ?? \"\").map((el) => ({\n    value: el[1].positive,\n    label: el[0],\n    data: item?.mbti_data?.[el[0]],\n    mbti_type: Object.keys(item?.mbti_data ?? \"\")\n  }));\n}\n",
      "start": 1750275034258,
      "end": 1750275034258,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/lib/barChartPreparedData.ts"],
        "names": [],
        "mappingsnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SubscribeToNews/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\n\nimport { atom } from '@/shared/factories';\n\nimport { subscribeToNewsMutation } from '../api';\n\nexport const SubscribeToNewsModel = atom(() => {\n    const formSubmitted = createEvent<{ email: string }>();\n\n    const showSuccessToastFx = createEffect(() => {\n        notifications.show({\n            title: 'Успешно!',\n            message: 'Вы подписались на рассылку CognitiveLab',\n        });\n    });\n\n    sample({\n        clock: formSubmitted,\n        target: subscribeToNewsMutation.start,\n    });\n\n    sample({\n        clock: subscribeToNewsMutation.finished.success,\n        target: showSuccessToastFx,\n    });\n\n    return {\n        formSubmitted,\n    };\n});\n",
      "start": 1750271785348,
      "end": 1750271785355,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { subscribeToNewsMutation } from '../api';\nexport const SubscribeToNewsModel = _effector$factory({\n    sid: \"d7cquygc\",\n    fn: ()=>atom(()=>{\n            const formSubmitted = createEvent({\n                sid: \"3qa3g527\"\n            });\n            const showSuccessToastFx = createEffect(()=>{\n                notifications.show({\n                    title: 'Успешно!',\n                    message: 'Вы подписались на рассылку CognitiveLab'\n                });\n            }, {\n                sid: \"2ha6mcq2\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: formSubmitted,\n                        target: subscribeToNewsMutation.start\n                    }\n                ],\n                or: {\n                    sid: \"3ka3eqkm\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: subscribeToNewsMutation.finished.success,\n                        target: showSuccessToastFx\n                    }\n                ],\n                or: {\n                    sid: \"bcldczgo\"\n                }\n            });\n            return {\n                formSubmitted\n            };\n        })\n});\n",
      "start": 1750271785355,
      "end": 1750271785360,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SubscribeToNews/model/index.ts\"],\"sourcesContent\":[\"import { notifications } from '@mantine/notifications';\\nimport { createEffect, createEvent, sample } from 'effector';\\n\\nimport { atom } from '@/shared/factories';\\n\\nimport { subscribeToNewsMutation } from '../api';\\n\\nexport const SubscribeToNewsModel = atom(() => {\\n    const formSubmitted = createEvent<{ email: string }>();\\n\\n    const showSuccessToastFx = createEffect(() => {\\n        notifications.show({\\n            title: 'Успешно!',\\n            message: 'Вы подписались на рассылку CognitiveLab',\\n        });\\n    });\\n\\n    sample({\\n        clock: formSubmitted,\\n        target: subscribeToNewsMutation.start,\\n    });\\n\\n    sample({\\n        clock: subscribeToNewsMutation.finished.success,\\n        target: showSuccessToastFx,\\n    });\\n\\n    return {\\n        formSubmitted,\\n    };\\n});\\n\"],\"names\":[\"notifications\",\"createEffect\",\"createEvent\",\"sample\",\"atom\",\"subscribeToNewsMutation\",\"SubscribeToNewsModel\",\"formSubmitted\",\"showSuccessToastFx\",\"show\",\"title\",\"message\",\"clock\",\"target\",\"start\",\"finished\",\"success\"],\"mappings\":\";AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,YAAY,EAAEC,WAAW,EAAEC,MAAM,QAAQ,WAAW;AAE7D,SAASC,IAAI,QAAQ,qBAAqB;AAE1C,SAASC,uBAAuB,QAAQ,SAAS;AAEjD,OAAO,MAAMC;;YAAuBF,KAAK;YACrC,MAAMG,gBAAgBL;;;YAEtB,MAAMM,qBAAqBP,aAAa;gBACpCD,cAAcS,IAAI,CAAC;oBACfC,OAAO;oBACPC,SAAS;gBACb;YACJ;;;YAEAR;;oBAAO;wBACHS,OAAOL;wBACPM,QAAQR,wBAAwBS,KAAK;oBACzC;;;;;;YAEAX;;oBAAO;wBACHS,OAAOP,wBAAwBU,QAAQ,CAACC,OAAO;wBAC/CH,QAAQL;oBACZ;;;;;;YAEA,OAAO;gBACHD;YACJ;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, sample } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { subscribeToNewsMutation } from \"../api\";\nexport const SubscribeToNewsModel = _effector$factory({\n  sid: \"d7cquygc\",\n  fn: () => atom(() => {\n    const formSubmitted = createEvent({\n      sid: \"3qa3g527\"\n    });\n    const showSuccessToastFx = createEffect(() => {\n      notifications.show({\n        title: \"Успешно!\",\n        message: \"Вы подписались на рассылку CognitiveLab\"\n      });\n    }, {\n      sid: \"2ha6mcq2\"\n    });\n    sample({\n      and: [\n        {\n          clock: formSubmitted,\n          target: subscribeToNewsMutation.start\n        }\n      ],\n      or: {\n        sid: \"3ka3eqkm\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: subscribeToNewsMutation.finished.success,\n          target: showSuccessToastFx\n        }\n      ],\n      or: {\n        sid: \"bcldczgo\"\n      }\n    });\n    return {\n      formSubmitted\n    };\n  })\n});\n",
      "start": 1750271785360,
      "end": 1750271785371,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SubscribeToNews/model/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, sample } from 'effector';\nimport { atom } from '@/shared/factories';\nimport { subscribeToNewsMutation } from '../api';\nexport const SubscribeToNewsModel = _effector$factory({\n    sid: \"d7cquygc\",\n    fn: ()=>atom(()=>{\n            const formSubmitted = createEvent({\n                sid: \"3qa3g527\"\n            });\n            const showSuccessToastFx = createEffect(()=>{\n                notifications.show({\n                    title: 'Успешно!',\n                    message: 'Вы подписались на рассылку CognitiveLab'\n                });\n            }, {\n                sid: \"2ha6mcq2\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: formSubmitted,\n                        target: subscribeToNewsMutation.start\n                    }\n                ],\n                or: {\n                    sid: \"3ka3eqkm\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: subscribeToNewsMutation.finished.success,\n                        target: showSuccessToastFx\n                    }\n                ],\n                or: {\n                    sid: \"bcldczgo\"\n                }\n            });\n            return {\n                formSubmitted\n            };\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,qBAAqB;AAC9B,SAAS,cAAc,aAAa,cAAc;AAClD,SAAS,YAAY;AACrB,SAAS,+BAA+B;AACjC,aAAM,uBAAuB,kBAAkB;AAAA,EAClD,KAAK;AAAA,EACL,IAAI,MAAI,KAAK,MAAI;AACT,UAAM,gBAAgB,YAAY;AAAA,MAC9B,KAAK;AAAA,IACT,CAAC;AACD,UAAM,qBAAqB,aAAa,MAAI;AACxC,oBAAc,KAAK;AAAA,QACf,OAAO;AAAA,QACP,SAAS;AAAA,MACb,CAAC;AAAA,IACL,GAAG;AAAA,MACC,KAAK;AAAA,IACT,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO;AAAA,UACP,QAAQ,wBAAwB;AAAA,QACpC;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO,wBAAwB,SAAS;AAAA,UACxC,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH;AAAA,IACJ;AAAA,EACJ,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/features/SubscribeToNews/model/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, sample } from \"effector\";\nimport { atom } from \"@/shared/factories\";\nimport { subscribeToNewsMutation } from \"../api\";\nexport const SubscribeToNewsModel = _effector$factory({\n  sid: \"d7cquygc\",\n  fn: () => atom(() => {\n    const formSubmitted = createEvent({\n      sid: \"3qa3g527\"\n    });\n    const showSuccessToastFx = createEffect(() => {\n      notifications.show({\n        title: \"Успешно!\",\n        message: \"Вы подписались на рассылку CognitiveLab\"\n      });\n    }, {\n      sid: \"2ha6mcq2\"\n    });\n    sample({\n      and: [\n        {\n          clock: formSubmitted,\n          target: subscribeToNewsMutation.start\n        }\n      ],\n      or: {\n        sid: \"3ka3eqkm\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: subscribeToNewsMutation.finished.success,\n          target: showSuccessToastFx\n        }\n      ],\n      or: {\n        sid: \"bcldczgo\"\n      }\n    });\n    return {\n      formSubmitted\n    };\n  })\n});\n",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/features/SubscribeToNews/model/index.ts"],
        "names": [],
        "mappingstzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

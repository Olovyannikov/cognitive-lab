{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\n\nimport s from './Markdown.module.css';\n\nexport const Markdown = ({ children }: { children: string }) => (\n    <MarkdownToJsx\n        className={s.mkd}\n        options={{\n            overrides: {\n                h1: (props) => (\n                    <Title order={1} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                h2: (props) => (\n                    <Title order={2} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                p: (props) => <Text className={s.text}>{props.children}</Text>,\n                blockquote: (props) => (\n                    <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                        {props.children}\n                    </Blockquote>\n                ),\n                a: (props) => <>{props.children}</>,\n            },\n        }}\n    >\n        {children}\n    </MarkdownToJsx>\n);\n",
      "start": 1750271784873,
      "end": 1750271784897,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\nimport s from './Markdown.module.css';\nexport const Markdown = ({ children })=>/*#__PURE__*/ _jsx(MarkdownToJsx, {\n        className: s.mkd,\n        options: {\n            overrides: {\n                h1: (props)=>/*#__PURE__*/ _jsx(Title, {\n                        order: 1,\n                        className: s.title,\n                        children: props.children\n                    }),\n                h2: (props)=>/*#__PURE__*/ _jsx(Title, {\n                        order: 2,\n                        className: s.title,\n                        children: props.children\n                    }),\n                p: (props)=>/*#__PURE__*/ _jsx(Text, {\n                        className: s.text,\n                        children: props.children\n                    }),\n                blockquote: (props)=>/*#__PURE__*/ _jsx(Blockquote, {\n                        mb: \"md\",\n                        py: \"sm\",\n                        px: \"md\",\n                        color: `violet.9`,\n                        bg: \"transparent\",\n                        icon: null,\n                        children: props.children\n                    }),\n                a: (props)=>/*#__PURE__*/ _jsx(_Fragment, {\n                        children: props.children\n                    })\n            }\n        },\n        children: children\n    });\n",
      "start": 1750271784897,
      "end": 1750271784900,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx\"],\"sourcesContent\":[\"import { Blockquote, Text, Title } from '@mantine/core';\\nimport MarkdownToJsx from 'markdown-to-jsx';\\n\\nimport s from './Markdown.module.css';\\n\\nexport const Markdown = ({ children }: { children: string }) => (\\n    <MarkdownToJsx\\n        className={s.mkd}\\n        options={{\\n            overrides: {\\n                h1: (props) => (\\n                    <Title order={1} className={s.title}>\\n                        {props.children}\\n                    </Title>\\n                ),\\n                h2: (props) => (\\n                    <Title order={2} className={s.title}>\\n                        {props.children}\\n                    </Title>\\n                ),\\n                p: (props) => <Text className={s.text}>{props.children}</Text>,\\n                blockquote: (props) => (\\n                    <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\\n                        {props.children}\\n                    </Blockquote>\\n                ),\\n                a: (props) => <>{props.children}</>,\\n            },\\n        }}\\n    >\\n        {children}\\n    </MarkdownToJsx>\\n);\\n\"],\"names\":[\"Blockquote\",\"Text\",\"Title\",\"MarkdownToJsx\",\"s\",\"Markdown\",\"children\",\"className\",\"mkd\",\"options\",\"overrides\",\"h1\",\"props\",\"order\",\"title\",\"h2\",\"p\",\"text\",\"blockquote\",\"mb\",\"py\",\"px\",\"color\",\"bg\",\"icon\",\"a\"],\"mappings\":\";AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,KAAK,QAAQ,gBAAgB;AACxD,OAAOC,mBAAmB,kBAAkB;AAE5C,OAAOC,OAAO,wBAAwB;AAEtC,OAAO,MAAMC,WAAW,CAAC,EAAEC,QAAQ,EAAwB,iBACvD,KAACH;QACGI,WAAWH,EAAEI,GAAG;QAChBC,SAAS;YACLC,WAAW;gBACPC,IAAI,CAACC,sBACD,KAACV;wBAAMW,OAAO;wBAAGN,WAAWH,EAAEU,KAAK;kCAC9BF,MAAMN,QAAQ;;gBAGvBS,IAAI,CAACH,sBACD,KAACV;wBAAMW,OAAO;wBAAGN,WAAWH,EAAEU,KAAK;kCAC9BF,MAAMN,QAAQ;;gBAGvBU,GAAG,CAACJ,sBAAU,KAACX;wBAAKM,WAAWH,EAAEa,IAAI;kCAAGL,MAAMN,QAAQ;;gBACtDY,YAAY,CAACN,sBACT,KAACZ;wBAAWmB,IAAG;wBAAKC,IAAG;wBAAKC,IAAG;wBAAKC,OAAO,CAAC,QAAQ,CAAC;wBAAEC,IAAG;wBAAcC,MAAM;kCACzEZ,MAAMN,QAAQ;;gBAGvBmB,GAAG,CAACb,sBAAU;kCAAGA,MAAMN,QAAQ;;YACnC;QACJ;kBAECA;OAEP\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from \"@mantine/core\";\nimport MarkdownToJsx from \"markdown-to-jsx\";\nimport s from \"./Markdown.module.css\";\nexport const Markdown = ({ children }) => /* @__PURE__ */ _jsx(MarkdownToJsx, {\n  className: s.mkd,\n  options: {\n    overrides: {\n      h1: (props) => /* @__PURE__ */ _jsx(Title, {\n        order: 1,\n        className: s.title,\n        children: props.children\n      }),\n      h2: (props) => /* @__PURE__ */ _jsx(Title, {\n        order: 2,\n        className: s.title,\n        children: props.children\n      }),\n      p: (props) => /* @__PURE__ */ _jsx(Text, {\n        className: s.text,\n        children: props.children\n      }),\n      blockquote: (props) => /* @__PURE__ */ _jsx(Blockquote, {\n        mb: \"md\",\n        py: \"sm\",\n        px: \"md\",\n        color: `violet.9`,\n        bg: \"transparent\",\n        icon: null,\n        children: props.children\n      }),\n      a: (props) => /* @__PURE__ */ _jsx(_Fragment, {\n        children: props.children\n      })\n    }\n  },\n  children\n});\n",
      "start": 1750271784900,
      "end": 1750271785052,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx"],
        "sourcesContent": [
          "import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\nimport s from './Markdown.module.css';\nexport const Markdown = ({ children })=>/*#__PURE__*/ _jsx(MarkdownToJsx, {\n        className: s.mkd,\n        options: {\n            overrides: {\n                h1: (props)=>/*#__PURE__*/ _jsx(Title, {\n                        order: 1,\n                        className: s.title,\n                        children: props.children\n                    }),\n                h2: (props)=>/*#__PURE__*/ _jsx(Title, {\n                        order: 2,\n                        className: s.title,\n                        children: props.children\n                    }),\n                p: (props)=>/*#__PURE__*/ _jsx(Text, {\n                        className: s.text,\n                        children: props.children\n                    }),\n                blockquote: (props)=>/*#__PURE__*/ _jsx(Blockquote, {\n                        mb: \"md\",\n                        py: \"sm\",\n                        px: \"md\",\n                        color: `violet.9`,\n                        bg: \"transparent\",\n                        icon: null,\n                        children: props.children\n                    }),\n                a: (props)=>/*#__PURE__*/ _jsx(_Fragment, {\n                        children: props.children\n                    })\n            }\n        },\n        children: children\n    });\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,YAAY,iBAAiB;AACnD,SAAS,YAAY,MAAM,aAAa;AACxC,OAAO,mBAAmB;AAC1B,OAAO,OAAO;AACP,aAAM,WAAW,CAAC,EAAE,SAAS,MAAkB,qBAAK,eAAe;AAAA,EAClE,WAAW,EAAE;AAAA,EACb,SAAS;AAAA,IACL,WAAW;AAAA,MACP,IAAI,CAAC,UAAsB,qBAAK,OAAO;AAAA,QAC/B,OAAO;AAAA,QACP,WAAW,EAAE;AAAA,QACb,UAAU,MAAM;AAAA,MACpB,CAAC;AAAA,MACL,IAAI,CAAC,UAAsB,qBAAK,OAAO;AAAA,QAC/B,OAAO;AAAA,QACP,WAAW,EAAE;AAAA,QACb,UAAU,MAAM;AAAA,MACpB,CAAC;AAAA,MACL,GAAG,CAAC,UAAsB,qBAAK,MAAM;AAAA,QAC7B,WAAW,EAAE;AAAA,QACb,UAAU,MAAM;AAAA,MACpB,CAAC;AAAA,MACL,YAAY,CAAC,UAAsB,qBAAK,YAAY;AAAA,QAC5C,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,UAAU,MAAM;AAAA,MACpB,CAAC;AAAA,MACL,GAAG,CAAC,UAAsB,qBAAK,WAAW;AAAA,QAClC,UAAU,MAAM;AAAA,MACpB,CAAC;AAAA,IACT;AAAA,EACJ;AAAA,EACA;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/Markdown/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from \"@mantine/core\";\nimport MarkdownToJsx from \"markdown-to-jsx\";\nimport s from \"./Markdown.module.css\";\nexport const Markdown = ({ children }) => /* @__PURE__ */ _jsx(MarkdownToJsx, {\n  className: s.mkd,\n  options: {\n    overrides: {\n      h1: (props) => /* @__PURE__ */ _jsx(Title, {\n        order: 1,\n        className: s.title,\n        children: props.children\n      }),\n      h2: (props) => /* @__PURE__ */ _jsx(Title, {\n        order: 2,\n        className: s.title,\n        children: props.children\n      }),\n      p: (props) => /* @__PURE__ */ _jsx(Text, {\n        className: s.text,\n        children: props.children\n      }),\n      blockquote: (props) => /* @__PURE__ */ _jsx(Blockquote, {\n        mb: \"md\",\n        py: \"sm\",\n        px: \"md\",\n        color: `violet.9`,\n        bg: \"transparent\",\n        icon: null,\n        children: props.children\n      }),\n      a: (props) => /* @__PURE__ */ _jsx(_Fragment, {\n        children: props.children\n      })\n    }\n  },\n  children\n});\n",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/Markdown/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC;"
      }
    }
  ]
}

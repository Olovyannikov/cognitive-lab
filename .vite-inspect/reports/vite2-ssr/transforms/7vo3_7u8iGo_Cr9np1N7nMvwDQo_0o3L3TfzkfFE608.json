{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\n\nimport s from './Markdown.module.css';\n\nexport const Markdown = ({ children }: { children: string }) => (\n    <MarkdownToJsx\n        className={s.mkd}\n        options={{\n            overrides: {\n                h1: (props) => (\n                    <Title order={1} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                h2: (props) => (\n                    <Title order={2} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                p: (props) => <Text className={s.text}>{props.children}</Text>,\n                blockquote: (props) => (\n                    <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                        {props.children}\n                    </Blockquote>\n                ),\n                a: (props) => <>{props.children}</>,\n            },\n        }}\n    >\n        {children}\n    </MarkdownToJsx>\n);\n",
      "start": 1750275033662,
      "end": 1750275033698,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\nimport s from './Markdown.module.css';\nexport const Markdown = ({\n  children\n}: {\n  children: string;\n}) => <MarkdownToJsx className={s.mkd} options={{\n  overrides: {\n    h1: props => <Title order={1} className={s.title}>\n                        {props.children}\n                    </Title>,\n    h2: props => <Title order={2} className={s.title}>\n                        {props.children}\n                    </Title>,\n    p: props => <Text className={s.text}>{props.children}</Text>,\n    blockquote: props => <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                        {props.children}\n                    </Blockquote>,\n    a: props => <>{props.children}</>\n  }\n}}>\n        {children}\n    </MarkdownToJsx>;",
      "start": 1750275033699,
      "end": 1750275033700,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Blockquote",
          "Text",
          "Title",
          "MarkdownToJsx",
          "s",
          "Markdown",
          "children",
          "mkd",
          "overrides",
          "h1",
          "props",
          "title",
          "h2",
          "p",
          "text",
          "blockquote",
          "a"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx"],
        "sourcesContent": [
          "import { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\n\nimport s from './Markdown.module.css';\n\nexport const Markdown = ({ children }: { children: string }) => (\n    <MarkdownToJsx\n        className={s.mkd}\n        options={{\n            overrides: {\n                h1: (props) => (\n                    <Title order={1} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                h2: (props) => (\n                    <Title order={2} className={s.title}>\n                        {props.children}\n                    </Title>\n                ),\n                p: (props) => <Text className={s.text}>{props.children}</Text>,\n                blockquote: (props) => (\n                    <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                        {props.children}\n                    </Blockquote>\n                ),\n                a: (props) => <>{props.children}</>,\n            },\n        }}\n    >\n        {children}\n    </MarkdownToJsx>\n);\n"
        ],
        "mappings": "AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,KAAK,QAAQ,eAAe;AACvD,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,OAAOC,CAAC,MAAM,uBAAuB;AAErC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAA+B,CAArB,EAAE;EAAEA,QAAQ,EAAE,MAAM;AAAC,CAAC,KACvD,CAAC,aAAa,CACV,SAAS,CAAC,CAACF,CAAC,CAACG,GAAG,CAAC,CACjB,OAAO,CAAC,CAAC;EACLC,SAAS,EAAE;IACPC,EAAE,EAAGC,KAAK,IACN,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAACN,CAAC,CAACO,KAAK,CAAC;AACxD,wBAAwB,CAACD,KAAK,CAACJ,QAAQ;AACvC,oBAAoB,EAAE,KAAK,CACV;IACDM,EAAE,EAAGF,KAAK,IACN,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAACN,CAAC,CAACO,KAAK,CAAC;AACxD,wBAAwB,CAACD,KAAK,CAACJ,QAAQ;AACvC,oBAAoB,EAAE,KAAK,CACV;IACDO,CAAC,EAAGH,KAAK,IAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAACN,CAAC,CAACU,IAAI,CAAC,CAAC,CAACJ,KAAK,CAACJ,QAAQ,CAAC,EAAE,IAAI,CAAC;IAC9DS,UAAU,EAAGL,KAAK,IACd,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;AACvG,wBAAwB,CAACA,KAAK,CAACJ,QAAQ;AACvC,oBAAoB,EAAE,UAAU,CACf;IACDU,CAAC,EAAGN,KAAK,IAAK,EAAE,CAACA,KAAK,CAACJ,QAAQ,CAAC;EACpC;AACJ,CAAC,CAAC;AAEV,QAAQ,CAACA,QAAQ;AACjB,IAAI,EAAE,aAAa,CAClB",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from \"@mantine/core\";\nimport MarkdownToJsx from \"markdown-to-jsx\";\nimport s from \"./Markdown.module.css\";\nexport const Markdown = ({\n  children\n}) => /* @__PURE__ */ jsx(MarkdownToJsx, { className: s.mkd, options: {\n  overrides: {\n    h1: (props) => /* @__PURE__ */ jsx(Title, { order: 1, className: s.title, children: props.children }),\n    h2: (props) => /* @__PURE__ */ jsx(Title, { order: 2, className: s.title, children: props.children }),\n    p: (props) => /* @__PURE__ */ jsx(Text, { className: s.text, children: props.children }),\n    blockquote: (props) => /* @__PURE__ */ jsx(Blockquote, { mb: \"md\", py: \"sm\", px: \"md\", color: `violet.9`, bg: \"transparent\", icon: null, children: props.children }),\n    a: (props) => /* @__PURE__ */ jsx(Fragment, { children: props.children })\n  }\n}, children });\n",
      "start": 1750275033700,
      "end": 1750275033970,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/Markdown/index.tsx"],
        "sourcesContent": [
          "import { Blockquote, Text, Title } from '@mantine/core';\nimport MarkdownToJsx from 'markdown-to-jsx';\nimport s from './Markdown.module.css';\nexport const Markdown = ({\n  children\n}: {\n  children: string;\n}) => <MarkdownToJsx className={s.mkd} options={{\n  overrides: {\n    h1: props => <Title order={1} className={s.title}>\n                        {props.children}\n                    </Title>,\n    h2: props => <Title order={2} className={s.title}>\n                        {props.children}\n                    </Title>,\n    p: props => <Text className={s.text}>{props.children}</Text>,\n    blockquote: props => <Blockquote mb='md' py='sm' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                        {props.children}\n                    </Blockquote>,\n    a: props => <>{props.children}</>\n  }\n}}>\n        {children}\n    </MarkdownToJsx>;"
        ],
        "mappings": "AASiB,SAUD,UAVC;AATjB,SAAS,YAAY,MAAM,aAAa;AACxC,OAAO,mBAAmB;AAC1B,OAAO,OAAO;AACP,aAAM,WAAW,CAAC;AAAA,EACvB;AACF,MAEM,oBAAC,iBAAc,WAAW,EAAE,KAAK,SAAS;AAAA,EAC9C,WAAW;AAAA,IACT,IAAI,WAAS,oBAAC,SAAM,OAAO,GAAG,WAAW,EAAE,OACtB,gBAAM,UACX;AAAA,IAChB,IAAI,WAAS,oBAAC,SAAM,OAAO,GAAG,WAAW,EAAE,OACtB,gBAAM,UACX;AAAA,IAChB,GAAG,WAAS,oBAAC,QAAK,WAAW,EAAE,MAAO,gBAAM,UAAS;AAAA,IACrD,YAAY,WAAS,oBAAC,cAAW,IAAG,MAAK,IAAG,MAAK,IAAG,MAAK,OAAO,YAAY,IAAG,eAAc,MAAM,MAC9E,gBAAM,UACX;AAAA,IAChB,GAAG,WAAS,gCAAG,gBAAM,UAAS;AAAA,EAChC;AACF,GACS,UACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/Markdown/index.tsx [vike:pluginModuleBanner] */\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nimport { Blockquote, Text, Title } from \"@mantine/core\";\nimport MarkdownToJsx from \"markdown-to-jsx\";\nimport s from \"./Markdown.module.css\";\nexport const Markdown = ({\n  children\n}) => /* @__PURE__ */ jsx(MarkdownToJsx, { className: s.mkd, options: {\n  overrides: {\n    h1: (props) => /* @__PURE__ */ jsx(Title, { order: 1, className: s.title, children: props.children }),\n    h2: (props) => /* @__PURE__ */ jsx(Title, { order: 2, className: s.title, children: props.children }),\n    p: (props) => /* @__PURE__ */ jsx(Text, { className: s.text, children: props.children }),\n    blockquote: (props) => /* @__PURE__ */ jsx(Blockquote, { mb: \"md\", py: \"sm\", px: \"md\", color: `violet.9`, bg: \"transparent\", icon: null, children: props.children }),\n    a: (props) => /* @__PURE__ */ jsx(Fragment, { children: props.children })\n  }\n}, children });\n",
      "start": 1750275033971,
      "end": 1750275033971,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/Markdown/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzxK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createAction } from 'effector-action';\nimport { createGate } from 'effector-react';\nimport { persist } from 'effector-storage/local';\nimport { isUndefined } from 'lodash-es';\nimport { combineEvents, delay } from 'patronum';\nimport { navigate } from 'vike/client/router';\n\nimport { atom } from '@/shared/factories';\nimport { is404Error } from '@/shared/lib';\n\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from '../api';\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from './contentPage';\nimport { $userOrder, $userOrderStatus } from './order';\nimport { $reportContent } from './reportContent';\nimport {\n    $allUserReports,\n    $expressUserReports,\n    $freeUserReports,\n    $isUserHasFreeReport,\n    $lastUserFreeReport,\n    $paidUserReports,\n} from './userReports';\n\nexport const ReportModel = atom(() => {\n    const ReportGate = createGate();\n    const FreeReportGate = createGate();\n\n    const freeReportIdReceived = createEvent<string>();\n    const fullReportIdReceived = createEvent<string>();\n    const $currentFreeReportId = createStore<string | null>(null);\n    const $currentFullReportId = createStore<string | null>(null);\n\n    sample({\n        clock: freeReportIdReceived,\n        target: $currentFreeReportId,\n    });\n\n    sample({\n        clock: fullReportIdReceived,\n        target: $currentFullReportId,\n    });\n\n    const redirectToMainPageFx = createEffect(async () => await navigate('/'));\n\n    sample({\n        clock: getFreeResultQuery.finished.success,\n        filter: ({ result }) => !result,\n        target: redirectToMainPageFx,\n    });\n\n    const ReportPageGate = createGate();\n\n    persist({\n        store: $currentPage,\n        pickup: ReportPageGate.open,\n    });\n    persist({\n        store: $currentContentPage,\n        pickup: ReportPageGate.open,\n    });\n    $currentContentPage.reset(ReportPageGate.close);\n    $currentPage.reset(ReportPageGate.close);\n\n    const currentPageChanged = createEvent<number>();\n\n    createAction({\n        clock: currentPageChanged,\n        target: {\n            $currentContentPage,\n            $currentPage,\n        },\n        fn: (target, clock) => {\n            target.$currentPage(clock);\n            target.$currentContentPage(clock - 1);\n        },\n    });\n\n    const $userMbtiTypes = createStore<Record<string, string>[]>([]);\n\n    sample({\n        clock: getSurveysInfoQuery.finished.success,\n        filter: (data) => !isUndefined(data.result),\n        fn: ({ result }) =>\n            result?.reports.map((report) => ({\n                [report.user_report]: report.mbti_type,\n            })) ?? [],\n        target: $userMbtiTypes,\n    });\n\n    const freeReportReceived = combineEvents([delay(FreeReportGate.open, 600), freeReportIdReceived]);\n\n    sample({\n        clock: $currentFreeReportId,\n        target: [getFreeResultQuery.reset],\n    });\n\n    sample({\n        clock: [freeReportReceived, $currentFreeReportId],\n        source: $currentFreeReportId,\n        fn: (id) => ({ id: id ?? '' }),\n        target: [getFreeResultQuery.refresh],\n    });\n\n    const fullReportReceived = combineEvents([delay(ReportPageGate.open, 600), fullReportIdReceived]);\n\n    sample({\n        clock: $currentFullReportId,\n        target: [getFullReportQuery.reset],\n    });\n\n    sample({\n        clock: [fullReportReceived, $currentFullReportId],\n        source: $currentFullReportId,\n        fn: (id) => ({ id: id ?? '' }),\n        target: [getFullReportQuery.refresh],\n    });\n\n    const redirectTo404Fx = createEffect(async () => {\n        await navigate('/error/404');\n    });\n\n    sample({\n        clock: getFreeResultQuery.finished.failure,\n        filter: is404Error,\n        target: redirectTo404Fx,\n    });\n\n    return {\n        ReportGate,\n        $isUserHasFreeReport,\n        $lastUserFreeReport,\n        $allUserReports,\n        $freeUserReports,\n        $paidUserReports,\n        $expressUserReports,\n        $reportContent,\n        $userOrder,\n        $userOrderStatus,\n        $isFirstPage,\n        $isLastPage,\n        $currentContentPage,\n        currentPageChanged,\n        $userMbtiTypes,\n        ReportPageGate,\n        $currentPage,\n        FreeReportGate,\n        fullReportIdReceived,\n        freeReportIdReceived,\n        $currentFreeReportId,\n        $currentFullReportId,\n    };\n});\n",
      "start": 1750271784830,
      "end": 1750271784842,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createAction } from 'effector-action';\nimport { createGate } from 'effector-react';\nimport { persist } from 'effector-storage/local';\nimport { isUndefined } from 'lodash-es';\nimport { combineEvents, delay } from 'patronum';\nimport { navigate } from 'vike/client/router';\nimport { atom } from '@/shared/factories';\nimport { is404Error } from '@/shared/lib';\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from '../api';\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from './contentPage';\nimport { $userOrder, $userOrderStatus } from './order';\nimport { $reportContent } from './reportContent';\nimport { $allUserReports, $expressUserReports, $freeUserReports, $isUserHasFreeReport, $lastUserFreeReport, $paidUserReports } from './userReports';\nexport const ReportModel = _effector$factory({\n    sid: \"8x5mhe6c\",\n    fn: ()=>atom(()=>{\n            const ReportGate = createGate({\n                and: [],\n                or: {\n                    sid: \"3osohp11\"\n                }\n            });\n            const FreeReportGate = createGate({\n                and: [],\n                or: {\n                    sid: \"5lvsh367\"\n                }\n            });\n            const freeReportIdReceived = createEvent({\n                sid: \"8w5v1x9g\"\n            });\n            const fullReportIdReceived = createEvent({\n                sid: \"abswcep1\"\n            });\n            const $currentFreeReportId = createStore(null, {\n                sid: \"ctxqxyln\"\n            });\n            const $currentFullReportId = createStore(null, {\n                sid: \"8mp97y7q\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: freeReportIdReceived,\n                        target: $currentFreeReportId\n                    }\n                ],\n                or: {\n                    sid: \"4a1jilnk\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: fullReportIdReceived,\n                        target: $currentFullReportId\n                    }\n                ],\n                or: {\n                    sid: \"78pz3kf\"\n                }\n            });\n            const redirectToMainPageFx = createEffect(async ()=>await navigate('/'), {\n                sid: \"7fhp1iew\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getFreeResultQuery.finished.success,\n                        filter: ({ result })=>!result,\n                        target: redirectToMainPageFx\n                    }\n                ],\n                or: {\n                    sid: \"3uyenz8y\"\n                }\n            });\n            const ReportPageGate = createGate({\n                and: [],\n                or: {\n                    sid: \"2f8buem\"\n                }\n            });\n            persist({\n                store: $currentPage,\n                pickup: ReportPageGate.open\n            });\n            persist({\n                store: $currentContentPage,\n                pickup: ReportPageGate.open\n            });\n            $currentContentPage.reset(ReportPageGate.close);\n            $currentPage.reset(ReportPageGate.close);\n            const currentPageChanged = createEvent({\n                sid: \"5oyr7qpl\"\n            });\n            createAction({\n                clock: currentPageChanged,\n                target: {\n                    $currentContentPage,\n                    $currentPage\n                },\n                fn: (target, clock)=>{\n                    target.$currentPage(clock);\n                    target.$currentContentPage(clock - 1);\n                }\n            });\n            const $userMbtiTypes = createStore([], {\n                sid: \"adqsx5ge\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getSurveysInfoQuery.finished.success,\n                        filter: (data)=>!isUndefined(data.result),\n                        fn: ({ result })=>result?.reports.map((report)=>({\n                                    [report.user_report]: report.mbti_type\n                                })) ?? [],\n                        target: $userMbtiTypes\n                    }\n                ],\n                or: {\n                    sid: \"ctfaei4q\"\n                }\n            });\n            const freeReportReceived = _effector$factory({\n                sid: \"yix2ehi\",\n                fn: ()=>combineEvents([\n                        _effector$factory({\n                            sid: \"3caku1qe\",\n                            fn: ()=>delay(FreeReportGate.open, 600)\n                        }),\n                        freeReportIdReceived\n                    ])\n            });\n            sample({\n                and: [\n                    {\n                        clock: $currentFreeReportId,\n                        target: [\n                            getFreeResultQuery.reset\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4i4vl1tm\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            freeReportReceived,\n                            $currentFreeReportId\n                        ],\n                        source: $currentFreeReportId,\n                        fn: (id)=>({\n                                id: id ?? ''\n                            }),\n                        target: [\n                            getFreeResultQuery.refresh\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"2chjnn6m\"\n                }\n            });\n            const fullReportReceived = _effector$factory({\n                sid: \"7vo4ak1t\",\n                fn: ()=>combineEvents([\n                        _effector$factory({\n                            sid: \"93svfr50\",\n                            fn: ()=>delay(ReportPageGate.open, 600)\n                        }),\n                        fullReportIdReceived\n                    ])\n            });\n            sample({\n                and: [\n                    {\n                        clock: $currentFullReportId,\n                        target: [\n                            getFullReportQuery.reset\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4eeozwqp\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            fullReportReceived,\n                            $currentFullReportId\n                        ],\n                        source: $currentFullReportId,\n                        fn: (id)=>({\n                                id: id ?? ''\n                            }),\n                        target: [\n                            getFullReportQuery.refresh\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"9qo38khe\"\n                }\n            });\n            const redirectTo404Fx = createEffect(async ()=>{\n                await navigate('/error/404');\n            }, {\n                sid: \"6862zhmf\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getFreeResultQuery.finished.failure,\n                        filter: is404Error,\n                        target: redirectTo404Fx\n                    }\n                ],\n                or: {\n                    sid: \"3o36fmxg\"\n                }\n            });\n            return {\n                ReportGate,\n                $isUserHasFreeReport,\n                $lastUserFreeReport,\n                $allUserReports,\n                $freeUserReports,\n                $paidUserReports,\n                $expressUserReports,\n                $reportContent,\n                $userOrder,\n                $userOrderStatus,\n                $isFirstPage,\n                $isLastPage,\n                $currentContentPage,\n                currentPageChanged,\n                $userMbtiTypes,\n                ReportPageGate,\n                $currentPage,\n                FreeReportGate,\n                fullReportIdReceived,\n                freeReportIdReceived,\n                $currentFreeReportId,\n                $currentFullReportId\n            };\n        })\n});\n",
      "start": 1750271784842,
      "end": 1750271784850,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/model/index.ts\"],\"sourcesContent\":[\"import { createEffect, createEvent, createStore, sample } from 'effector';\\nimport { createAction } from 'effector-action';\\nimport { createGate } from 'effector-react';\\nimport { persist } from 'effector-storage/local';\\nimport { isUndefined } from 'lodash-es';\\nimport { combineEvents, delay } from 'patronum';\\nimport { navigate } from 'vike/client/router';\\n\\nimport { atom } from '@/shared/factories';\\nimport { is404Error } from '@/shared/lib';\\n\\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from '../api';\\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from './contentPage';\\nimport { $userOrder, $userOrderStatus } from './order';\\nimport { $reportContent } from './reportContent';\\nimport {\\n    $allUserReports,\\n    $expressUserReports,\\n    $freeUserReports,\\n    $isUserHasFreeReport,\\n    $lastUserFreeReport,\\n    $paidUserReports,\\n} from './userReports';\\n\\nexport const ReportModel = atom(() => {\\n    const ReportGate = createGate();\\n    const FreeReportGate = createGate();\\n\\n    const freeReportIdReceived = createEvent<string>();\\n    const fullReportIdReceived = createEvent<string>();\\n    const $currentFreeReportId = createStore<string | null>(null);\\n    const $currentFullReportId = createStore<string | null>(null);\\n\\n    sample({\\n        clock: freeReportIdReceived,\\n        target: $currentFreeReportId,\\n    });\\n\\n    sample({\\n        clock: fullReportIdReceived,\\n        target: $currentFullReportId,\\n    });\\n\\n    const redirectToMainPageFx = createEffect(async () => await navigate('/'));\\n\\n    sample({\\n        clock: getFreeResultQuery.finished.success,\\n        filter: ({ result }) => !result,\\n        target: redirectToMainPageFx,\\n    });\\n\\n    const ReportPageGate = createGate();\\n\\n    persist({\\n        store: $currentPage,\\n        pickup: ReportPageGate.open,\\n    });\\n    persist({\\n        store: $currentContentPage,\\n        pickup: ReportPageGate.open,\\n    });\\n    $currentContentPage.reset(ReportPageGate.close);\\n    $currentPage.reset(ReportPageGate.close);\\n\\n    const currentPageChanged = createEvent<number>();\\n\\n    createAction({\\n        clock: currentPageChanged,\\n        target: {\\n            $currentContentPage,\\n            $currentPage,\\n        },\\n        fn: (target, clock) => {\\n            target.$currentPage(clock);\\n            target.$currentContentPage(clock - 1);\\n        },\\n    });\\n\\n    const $userMbtiTypes = createStore<Record<string, string>[]>([]);\\n\\n    sample({\\n        clock: getSurveysInfoQuery.finished.success,\\n        filter: (data) => !isUndefined(data.result),\\n        fn: ({ result }) =>\\n            result?.reports.map((report) => ({\\n                [report.user_report]: report.mbti_type,\\n            })) ?? [],\\n        target: $userMbtiTypes,\\n    });\\n\\n    const freeReportReceived = combineEvents([delay(FreeReportGate.open, 600), freeReportIdReceived]);\\n\\n    sample({\\n        clock: $currentFreeReportId,\\n        target: [getFreeResultQuery.reset],\\n    });\\n\\n    sample({\\n        clock: [freeReportReceived, $currentFreeReportId],\\n        source: $currentFreeReportId,\\n        fn: (id) => ({ id: id ?? '' }),\\n        target: [getFreeResultQuery.refresh],\\n    });\\n\\n    const fullReportReceived = combineEvents([delay(ReportPageGate.open, 600), fullReportIdReceived]);\\n\\n    sample({\\n        clock: $currentFullReportId,\\n        target: [getFullReportQuery.reset],\\n    });\\n\\n    sample({\\n        clock: [fullReportReceived, $currentFullReportId],\\n        source: $currentFullReportId,\\n        fn: (id) => ({ id: id ?? '' }),\\n        target: [getFullReportQuery.refresh],\\n    });\\n\\n    const redirectTo404Fx = createEffect(async () => {\\n        await navigate('/error/404');\\n    });\\n\\n    sample({\\n        clock: getFreeResultQuery.finished.failure,\\n        filter: is404Error,\\n        target: redirectTo404Fx,\\n    });\\n\\n    return {\\n        ReportGate,\\n        $isUserHasFreeReport,\\n        $lastUserFreeReport,\\n        $allUserReports,\\n        $freeUserReports,\\n        $paidUserReports,\\n        $expressUserReports,\\n        $reportContent,\\n        $userOrder,\\n        $userOrderStatus,\\n        $isFirstPage,\\n        $isLastPage,\\n        $currentContentPage,\\n        currentPageChanged,\\n        $userMbtiTypes,\\n        ReportPageGate,\\n        $currentPage,\\n        FreeReportGate,\\n        fullReportIdReceived,\\n        freeReportIdReceived,\\n        $currentFreeReportId,\\n        $currentFullReportId,\\n    };\\n});\\n\"],\"names\":[\"createEffect\",\"createEvent\",\"createStore\",\"sample\",\"createAction\",\"createGate\",\"persist\",\"isUndefined\",\"combineEvents\",\"delay\",\"navigate\",\"atom\",\"is404Error\",\"getFreeResultQuery\",\"getFullReportQuery\",\"getSurveysInfoQuery\",\"$currentContentPage\",\"$currentPage\",\"$isFirstPage\",\"$isLastPage\",\"$userOrder\",\"$userOrderStatus\",\"$reportContent\",\"$allUserReports\",\"$expressUserReports\",\"$freeUserReports\",\"$isUserHasFreeReport\",\"$lastUserFreeReport\",\"$paidUserReports\",\"ReportModel\",\"ReportGate\",\"FreeReportGate\",\"freeReportIdReceived\",\"fullReportIdReceived\",\"$currentFreeReportId\",\"$currentFullReportId\",\"clock\",\"target\",\"redirectToMainPageFx\",\"finished\",\"success\",\"filter\",\"result\",\"ReportPageGate\",\"store\",\"pickup\",\"open\",\"reset\",\"close\",\"currentPageChanged\",\"fn\",\"$userMbtiTypes\",\"data\",\"reports\",\"map\",\"report\",\"user_report\",\"mbti_type\",\"freeReportReceived\",\"source\",\"id\",\"refresh\",\"fullReportReceived\",\"redirectTo404Fx\",\"failure\"],\"mappings\":\"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\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { createAction } from \"effector-action\";\nimport { createGate } from \"effector-react\";\nimport { persist } from \"effector-storage/local\";\nimport { isUndefined } from \"lodash-es\";\nimport { combineEvents, delay } from \"patronum\";\nimport { navigate } from \"vike/client/router\";\nimport { atom } from \"@/shared/factories\";\nimport { is404Error } from \"@/shared/lib\";\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from \"../api\";\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from \"./contentPage\";\nimport { $userOrder, $userOrderStatus } from \"./order\";\nimport { $reportContent } from \"./reportContent\";\nimport { $allUserReports, $expressUserReports, $freeUserReports, $isUserHasFreeReport, $lastUserFreeReport, $paidUserReports } from \"./userReports\";\nexport const ReportModel = _effector$factory({\n  sid: \"8x5mhe6c\",\n  fn: () => atom(() => {\n    const ReportGate = createGate({\n      and: [],\n      or: {\n        sid: \"3osohp11\"\n      }\n    });\n    const FreeReportGate = createGate({\n      and: [],\n      or: {\n        sid: \"5lvsh367\"\n      }\n    });\n    const freeReportIdReceived = createEvent({\n      sid: \"8w5v1x9g\"\n    });\n    const fullReportIdReceived = createEvent({\n      sid: \"abswcep1\"\n    });\n    const $currentFreeReportId = createStore(null, {\n      sid: \"ctxqxyln\"\n    });\n    const $currentFullReportId = createStore(null, {\n      sid: \"8mp97y7q\"\n    });\n    sample({\n      and: [\n        {\n          clock: freeReportIdReceived,\n          target: $currentFreeReportId\n        }\n      ],\n      or: {\n        sid: \"4a1jilnk\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: fullReportIdReceived,\n          target: $currentFullReportId\n        }\n      ],\n      or: {\n        sid: \"78pz3kf\"\n      }\n    });\n    const redirectToMainPageFx = createEffect(async () => await navigate(\"/\"), {\n      sid: \"7fhp1iew\"\n    });\n    sample({\n      and: [\n        {\n          clock: getFreeResultQuery.finished.success,\n          filter: ({ result }) => !result,\n          target: redirectToMainPageFx\n        }\n      ],\n      or: {\n        sid: \"3uyenz8y\"\n      }\n    });\n    const ReportPageGate = createGate({\n      and: [],\n      or: {\n        sid: \"2f8buem\"\n      }\n    });\n    persist({\n      store: $currentPage,\n      pickup: ReportPageGate.open\n    });\n    persist({\n      store: $currentContentPage,\n      pickup: ReportPageGate.open\n    });\n    $currentContentPage.reset(ReportPageGate.close);\n    $currentPage.reset(ReportPageGate.close);\n    const currentPageChanged = createEvent({\n      sid: \"5oyr7qpl\"\n    });\n    createAction({\n      clock: currentPageChanged,\n      target: {\n        $currentContentPage,\n        $currentPage\n      },\n      fn: (target, clock) => {\n        target.$currentPage(clock);\n        target.$currentContentPage(clock - 1);\n      }\n    });\n    const $userMbtiTypes = createStore([], {\n      sid: \"adqsx5ge\"\n    });\n    sample({\n      and: [\n        {\n          clock: getSurveysInfoQuery.finished.success,\n          filter: (data) => !isUndefined(data.result),\n          fn: ({ result }) => result?.reports.map((report) => ({\n            [report.user_report]: report.mbti_type\n          })) ?? [],\n          target: $userMbtiTypes\n        }\n      ],\n      or: {\n        sid: \"ctfaei4q\"\n      }\n    });\n    const freeReportReceived = _effector$factory({\n      sid: \"yix2ehi\",\n      fn: () => combineEvents([\n        _effector$factory({\n          sid: \"3caku1qe\",\n          fn: () => delay(FreeReportGate.open, 600)\n        }),\n        freeReportIdReceived\n      ])\n    });\n    sample({\n      and: [\n        {\n          clock: $currentFreeReportId,\n          target: [\n            getFreeResultQuery.reset\n          ]\n        }\n      ],\n      or: {\n        sid: \"4i4vl1tm\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            freeReportReceived,\n            $currentFreeReportId\n          ],\n          source: $currentFreeReportId,\n          fn: (id) => ({\n            id: id ?? \"\"\n          }),\n          target: [\n            getFreeResultQuery.refresh\n          ]\n        }\n      ],\n      or: {\n        sid: \"2chjnn6m\"\n      }\n    });\n    const fullReportReceived = _effector$factory({\n      sid: \"7vo4ak1t\",\n      fn: () => combineEvents([\n        _effector$factory({\n          sid: \"93svfr50\",\n          fn: () => delay(ReportPageGate.open, 600)\n        }),\n        fullReportIdReceived\n      ])\n    });\n    sample({\n      and: [\n        {\n          clock: $currentFullReportId,\n          target: [\n            getFullReportQuery.reset\n          ]\n        }\n      ],\n      or: {\n        sid: \"4eeozwqp\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            fullReportReceived,\n            $currentFullReportId\n          ],\n          source: $currentFullReportId,\n          fn: (id) => ({\n            id: id ?? \"\"\n          }),\n          target: [\n            getFullReportQuery.refresh\n          ]\n        }\n      ],\n      or: {\n        sid: \"9qo38khe\"\n      }\n    });\n    const redirectTo404Fx = createEffect(async () => {\n      await navigate(\"/error/404\");\n    }, {\n      sid: \"6862zhmf\"\n    });\n    sample({\n      and: [\n        {\n          clock: getFreeResultQuery.finished.failure,\n          filter: is404Error,\n          target: redirectTo404Fx\n        }\n      ],\n      or: {\n        sid: \"3o36fmxg\"\n      }\n    });\n    return {\n      ReportGate,\n      $isUserHasFreeReport,\n      $lastUserFreeReport,\n      $allUserReports,\n      $freeUserReports,\n      $paidUserReports,\n      $expressUserReports,\n      $reportContent,\n      $userOrder,\n      $userOrderStatus,\n      $isFirstPage,\n      $isLastPage,\n      $currentContentPage,\n      currentPageChanged,\n      $userMbtiTypes,\n      ReportPageGate,\n      $currentPage,\n      FreeReportGate,\n      fullReportIdReceived,\n      freeReportIdReceived,\n      $currentFreeReportId,\n      $currentFullReportId\n    };\n  })\n});\n",
      "start": 1750271784850,
      "end": 1750271784905,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/model/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createAction } from 'effector-action';\nimport { createGate } from 'effector-react';\nimport { persist } from 'effector-storage/local';\nimport { isUndefined } from 'lodash-es';\nimport { combineEvents, delay } from 'patronum';\nimport { navigate } from 'vike/client/router';\nimport { atom } from '@/shared/factories';\nimport { is404Error } from '@/shared/lib';\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from '../api';\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from './contentPage';\nimport { $userOrder, $userOrderStatus } from './order';\nimport { $reportContent } from './reportContent';\nimport { $allUserReports, $expressUserReports, $freeUserReports, $isUserHasFreeReport, $lastUserFreeReport, $paidUserReports } from './userReports';\nexport const ReportModel = _effector$factory({\n    sid: \"8x5mhe6c\",\n    fn: ()=>atom(()=>{\n            const ReportGate = createGate({\n                and: [],\n                or: {\n                    sid: \"3osohp11\"\n                }\n            });\n            const FreeReportGate = createGate({\n                and: [],\n                or: {\n                    sid: \"5lvsh367\"\n                }\n            });\n            const freeReportIdReceived = createEvent({\n                sid: \"8w5v1x9g\"\n            });\n            const fullReportIdReceived = createEvent({\n                sid: \"abswcep1\"\n            });\n            const $currentFreeReportId = createStore(null, {\n                sid: \"ctxqxyln\"\n            });\n            const $currentFullReportId = createStore(null, {\n                sid: \"8mp97y7q\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: freeReportIdReceived,\n                        target: $currentFreeReportId\n                    }\n                ],\n                or: {\n                    sid: \"4a1jilnk\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: fullReportIdReceived,\n                        target: $currentFullReportId\n                    }\n                ],\n                or: {\n                    sid: \"78pz3kf\"\n                }\n            });\n            const redirectToMainPageFx = createEffect(async ()=>await navigate('/'), {\n                sid: \"7fhp1iew\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getFreeResultQuery.finished.success,\n                        filter: ({ result })=>!result,\n                        target: redirectToMainPageFx\n                    }\n                ],\n                or: {\n                    sid: \"3uyenz8y\"\n                }\n            });\n            const ReportPageGate = createGate({\n                and: [],\n                or: {\n                    sid: \"2f8buem\"\n                }\n            });\n            persist({\n                store: $currentPage,\n                pickup: ReportPageGate.open\n            });\n            persist({\n                store: $currentContentPage,\n                pickup: ReportPageGate.open\n            });\n            $currentContentPage.reset(ReportPageGate.close);\n            $currentPage.reset(ReportPageGate.close);\n            const currentPageChanged = createEvent({\n                sid: \"5oyr7qpl\"\n            });\n            createAction({\n                clock: currentPageChanged,\n                target: {\n                    $currentContentPage,\n                    $currentPage\n                },\n                fn: (target, clock)=>{\n                    target.$currentPage(clock);\n                    target.$currentContentPage(clock - 1);\n                }\n            });\n            const $userMbtiTypes = createStore([], {\n                sid: \"adqsx5ge\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getSurveysInfoQuery.finished.success,\n                        filter: (data)=>!isUndefined(data.result),\n                        fn: ({ result })=>result?.reports.map((report)=>({\n                                    [report.user_report]: report.mbti_type\n                                })) ?? [],\n                        target: $userMbtiTypes\n                    }\n                ],\n                or: {\n                    sid: \"ctfaei4q\"\n                }\n            });\n            const freeReportReceived = _effector$factory({\n                sid: \"yix2ehi\",\n                fn: ()=>combineEvents([\n                        _effector$factory({\n                            sid: \"3caku1qe\",\n                            fn: ()=>delay(FreeReportGate.open, 600)\n                        }),\n                        freeReportIdReceived\n                    ])\n            });\n            sample({\n                and: [\n                    {\n                        clock: $currentFreeReportId,\n                        target: [\n                            getFreeResultQuery.reset\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4i4vl1tm\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            freeReportReceived,\n                            $currentFreeReportId\n                        ],\n                        source: $currentFreeReportId,\n                        fn: (id)=>({\n                                id: id ?? ''\n                            }),\n                        target: [\n                            getFreeResultQuery.refresh\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"2chjnn6m\"\n                }\n            });\n            const fullReportReceived = _effector$factory({\n                sid: \"7vo4ak1t\",\n                fn: ()=>combineEvents([\n                        _effector$factory({\n                            sid: \"93svfr50\",\n                            fn: ()=>delay(ReportPageGate.open, 600)\n                        }),\n                        fullReportIdReceived\n                    ])\n            });\n            sample({\n                and: [\n                    {\n                        clock: $currentFullReportId,\n                        target: [\n                            getFullReportQuery.reset\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4eeozwqp\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            fullReportReceived,\n                            $currentFullReportId\n                        ],\n                        source: $currentFullReportId,\n                        fn: (id)=>({\n                                id: id ?? ''\n                            }),\n                        target: [\n                            getFullReportQuery.refresh\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"9qo38khe\"\n                }\n            });\n            const redirectTo404Fx = createEffect(async ()=>{\n                await navigate('/error/404');\n            }, {\n                sid: \"6862zhmf\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: getFreeResultQuery.finished.failure,\n                        filter: is404Error,\n                        target: redirectTo404Fx\n                    }\n                ],\n                or: {\n                    sid: \"3o36fmxg\"\n                }\n            });\n            return {\n                ReportGate,\n                $isUserHasFreeReport,\n                $lastUserFreeReport,\n                $allUserReports,\n                $freeUserReports,\n                $paidUserReports,\n                $expressUserReports,\n                $reportContent,\n                $userOrder,\n                $userOrderStatus,\n                $isFirstPage,\n                $isLastPage,\n                $currentContentPage,\n                currentPageChanged,\n                $userMbtiTypes,\n                ReportPageGate,\n                $currentPage,\n                FreeReportGate,\n                fullReportIdReceived,\n                freeReportIdReceived,\n                $currentFreeReportId,\n                $currentFullReportId\n            };\n        })\n});\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Report/model/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { createAction } from \"effector-action\";\nimport { createGate } from \"effector-react\";\nimport { persist } from \"effector-storage/local\";\nimport { isUndefined } from \"lodash-es\";\nimport { combineEvents, delay } from \"patronum\";\nimport { navigate } from \"vike/client/router\";\nimport { atom } from \"@/shared/factories\";\nimport { is404Error } from \"@/shared/lib\";\nimport { getFreeResultQuery, getFullReportQuery, getSurveysInfoQuery } from \"../api\";\nimport { $currentContentPage, $currentPage, $isFirstPage, $isLastPage } from \"./contentPage\";\nimport { $userOrder, $userOrderStatus } from \"./order\";\nimport { $reportContent } from \"./reportContent\";\nimport { $allUserReports, $expressUserReports, $freeUserReports, $isUserHasFreeReport, $lastUserFreeReport, $paidUserReports } from \"./userReports\";\nexport const ReportModel = _effector$factory({\n  sid: \"8x5mhe6c\",\n  fn: () => atom(() => {\n    const ReportGate = createGate({\n      and: [],\n      or: {\n        sid: \"3osohp11\"\n      }\n    });\n    const FreeReportGate = createGate({\n      and: [],\n      or: {\n        sid: \"5lvsh367\"\n      }\n    });\n    const freeReportIdReceived = createEvent({\n      sid: \"8w5v1x9g\"\n    });\n    const fullReportIdReceived = createEvent({\n      sid: \"abswcep1\"\n    });\n    const $currentFreeReportId = createStore(null, {\n      sid: \"ctxqxyln\"\n    });\n    const $currentFullReportId = createStore(null, {\n      sid: \"8mp97y7q\"\n    });\n    sample({\n      and: [\n        {\n          clock: freeReportIdReceived,\n          target: $currentFreeReportId\n        }\n      ],\n      or: {\n        sid: \"4a1jilnk\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: fullReportIdReceived,\n          target: $currentFullReportId\n        }\n      ],\n      or: {\n        sid: \"78pz3kf\"\n      }\n    });\n    const redirectToMainPageFx = createEffect(async () => await navigate(\"/\"), {\n      sid: \"7fhp1iew\"\n    });\n    sample({\n      and: [\n        {\n          clock: getFreeResultQuery.finished.success,\n          filter: ({ result }) => !result,\n          target: redirectToMainPageFx\n        }\n      ],\n      or: {\n        sid: \"3uyenz8y\"\n      }\n    });\n    const ReportPageGate = createGate({\n      and: [],\n      or: {\n        sid: \"2f8buem\"\n      }\n    });\n    persist({\n      store: $currentPage,\n      pickup: ReportPageGate.open\n    });\n    persist({\n      store: $currentContentPage,\n      pickup: ReportPageGate.open\n    });\n    $currentContentPage.reset(ReportPageGate.close);\n    $currentPage.reset(ReportPageGate.close);\n    const currentPageChanged = createEvent({\n      sid: \"5oyr7qpl\"\n    });\n    createAction({\n      clock: currentPageChanged,\n      target: {\n        $currentContentPage,\n        $currentPage\n      },\n      fn: (target, clock) => {\n        target.$currentPage(clock);\n        target.$currentContentPage(clock - 1);\n      }\n    });\n    const $userMbtiTypes = createStore([], {\n      sid: \"adqsx5ge\"\n    });\n    sample({\n      and: [\n        {\n          clock: getSurveysInfoQuery.finished.success,\n          filter: (data) => !isUndefined(data.result),\n          fn: ({ result }) => result?.reports.map((report) => ({\n            [report.user_report]: report.mbti_type\n          })) ?? [],\n          target: $userMbtiTypes\n        }\n      ],\n      or: {\n        sid: \"ctfaei4q\"\n      }\n    });\n    const freeReportReceived = _effector$factory({\n      sid: \"yix2ehi\",\n      fn: () => combineEvents([\n        _effector$factory({\n          sid: \"3caku1qe\",\n          fn: () => delay(FreeReportGate.open, 600)\n        }),\n        freeReportIdReceived\n      ])\n    });\n    sample({\n      and: [\n        {\n          clock: $currentFreeReportId,\n          target: [\n            getFreeResultQuery.reset\n          ]\n        }\n      ],\n      or: {\n        sid: \"4i4vl1tm\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            freeReportReceived,\n            $currentFreeReportId\n          ],\n          source: $currentFreeReportId,\n          fn: (id) => ({\n            id: id ?? \"\"\n          }),\n          target: [\n            getFreeResultQuery.refresh\n          ]\n        }\n      ],\n      or: {\n        sid: \"2chjnn6m\"\n      }\n    });\n    const fullReportReceived = _effector$factory({\n      sid: \"7vo4ak1t\",\n      fn: () => combineEvents([\n        _effector$factory({\n          sid: \"93svfr50\",\n          fn: () => delay(ReportPageGate.open, 600)\n        }),\n        fullReportIdReceived\n      ])\n    });\n    sample({\n      and: [\n        {\n          clock: $currentFullReportId,\n          target: [\n            getFullReportQuery.reset\n          ]\n        }\n      ],\n      or: {\n        sid: \"4eeozwqp\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            fullReportReceived,\n            $currentFullReportId\n          ],\n          source: $currentFullReportId,\n          fn: (id) => ({\n            id: id ?? \"\"\n          }),\n          target: [\n            getFullReportQuery.refresh\n          ]\n        }\n      ],\n      or: {\n        sid: \"9qo38khe\"\n      }\n    });\n    const redirectTo404Fx = createEffect(async () => {\n      await navigate(\"/error/404\");\n    }, {\n      sid: \"6862zhmf\"\n    });\n    sample({\n      and: [\n        {\n          clock: getFreeResultQuery.finished.failure,\n          filter: is404Error,\n          target: redirectTo404Fx\n        }\n      ],\n      or: {\n        sid: \"3o36fmxg\"\n      }\n    });\n    return {\n      ReportGate,\n      $isUserHasFreeReport,\n      $lastUserFreeReport,\n      $allUserReports,\n      $freeUserReports,\n      $paidUserReports,\n      $expressUserReports,\n      $reportContent,\n      $userOrder,\n      $userOrderStatus,\n      $isFirstPage,\n      $isLastPage,\n      $currentContentPage,\n      currentPageChanged,\n      $userMbtiTypes,\n      ReportPageGate,\n      $currentPage,\n      FreeReportGate,\n      fullReportIdReceived,\n      freeReportIdReceived,\n      $currentFreeReportId,\n      $currentFullReportId\n    };\n  })\n});\n",
      "start": 1750271784905,
      "end": 1750271784905,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/model/index.ts"],
        "names": [],
        "mappingszhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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AC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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"
      }
    }
  ]
}

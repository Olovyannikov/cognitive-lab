{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/contentResolver.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { ContentResolverProps } from '../types';\nimport {\n    AccordionBlock,\n    BarChart,\n    BlockQuoteFilled,\n    BlockquoteLine,\n    Cards,\n    ConclusionPaywall,\n    FilledBulletList,\n    Header,\n    IconList,\n    OrderedCards,\n    OrderedList,\n    Paragraph,\n    Paywall,\n    ReportTitle,\n    Subscription,\n    Subtitle,\n    TextStrokeDash,\n} from '../ui';\nimport { barChartPrepareData } from './barChartPreparedData';\nimport { isListItemArray } from './guards';\n\nexport const contentResolver = ({\n    content,\n    color = 'violet',\n    actions,\n    surveyId,\n    mbti,\n    slots,\n    index,\n}: ContentResolverProps) => {\n    switch (content.type) {\n        case 'blockquote_filled':\n            return <BlockQuoteFilled color={color} text={content.text ?? ''} />;\n        case 'header':\n            return <Header {...content} />;\n        case 'paragraph':\n            return <Paragraph {...content} />;\n        case 'cards':\n            return isListItemArray(content.items) && <Cards items={content.items} color={color} />;\n        case 'ordered_cards':\n            return <OrderedCards color={content.color} items={isListItemArray(content.items) ? content.items : []} />;\n        case 'title':\n            return <ReportTitle>{content.text}</ReportTitle>;\n        case 'subtitle':\n            return <Subtitle {...content} />;\n        case 'ordered_list':\n            return (\n                <OrderedList\n                    color={color}\n                    data-type={content.type}\n                    resolver={contentResolver}\n                    items={isListItemArray(content.items) ? content.items : []}\n                />\n            );\n        case 'blockquote_line':\n            return <BlockquoteLine text={content.text} color={color} />;\n        case 'filled_bullet_list':\n            return <FilledBulletList data-color={color} items={isListItemArray(content.items) ? content.items : []} />;\n        case 'paywall':\n            return (\n                <Paywall\n                    {...content}\n                    color={color}\n                    surveyId={surveyId}\n                    mbti={mbti}\n                    index={index}\n                    action={slots?.paywallExtraAction}\n                />\n            );\n        case 'conclusion_paywall':\n            return <ConclusionPaywall {...content} color={color} actionsSlot={actions?.conclusion_paywall} />;\n        case 'bar_chart':\n            return <BarChart marks={barChartPrepareData(content)} />;\n        case 'icon_list':\n            return <IconList items={isListItemArray(content.items) ? content.items : []} color={color} />;\n        case 'subscription':\n            return <Subscription {...content} subscriptionFormSlot={slots?.subscribeEmail} />;\n        case 'text_stroke_dash':\n            return <TextStrokeDash text={content.text ?? ''} color={color} />;\n        case 'accordion':\n            return <AccordionBlock items={isListItemArray(content.items) ? content.items : []} />;\n        default:\n            return <>UNKNOWN</>;\n    }\n};\n",
      "start": 1746125081845,
      "end": 1746125081879,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import type { ContentResolverProps } from '../types';\nimport { AccordionBlock, BarChart, BlockQuoteFilled, BlockquoteLine, Cards, ConclusionPaywall, FilledBulletList, Header, IconList, OrderedCards, OrderedList, Paragraph, Paywall, ReportTitle, Subscription, Subtitle, TextStrokeDash } from '../ui';\nimport { barChartPrepareData } from './barChartPreparedData';\nimport { isListItemArray } from './guards';\nexport const contentResolver = ({\n  content,\n  color = 'violet',\n  actions,\n  surveyId,\n  mbti,\n  slots,\n  index\n}: ContentResolverProps) => {\n  switch (content.type) {\n    case 'blockquote_filled':\n      return <BlockQuoteFilled color={color} text={content.text ?? ''} />;\n    case 'header':\n      return <Header {...content} />;\n    case 'paragraph':\n      return <Paragraph {...content} />;\n    case 'cards':\n      return isListItemArray(content.items) && <Cards items={content.items} color={color} />;\n    case 'ordered_cards':\n      return <OrderedCards color={content.color} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'title':\n      return <ReportTitle>{content.text}</ReportTitle>;\n    case 'subtitle':\n      return <Subtitle {...content} />;\n    case 'ordered_list':\n      return <OrderedList color={color} data-type={content.type} resolver={contentResolver} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'blockquote_line':\n      return <BlockquoteLine text={content.text} color={color} />;\n    case 'filled_bullet_list':\n      return <FilledBulletList data-color={color} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'paywall':\n      return <Paywall {...content} color={color} surveyId={surveyId} mbti={mbti} index={index} action={slots?.paywallExtraAction} />;\n    case 'conclusion_paywall':\n      return <ConclusionPaywall {...content} color={color} actionsSlot={actions?.conclusion_paywall} />;\n    case 'bar_chart':\n      return <BarChart marks={barChartPrepareData(content)} />;\n    case 'icon_list':\n      return <IconList items={isListItemArray(content.items) ? content.items : []} color={color} />;\n    case 'subscription':\n      return <Subscription {...content} subscriptionFormSlot={slots?.subscribeEmail} />;\n    case 'text_stroke_dash':\n      return <TextStrokeDash text={content.text ?? ''} color={color} />;\n    case 'accordion':\n      return <AccordionBlock items={isListItemArray(content.items) ? content.items : []} />;\n    default:\n      return <>UNKNOWN</>;\n  }\n};",
      "start": 1746125081879,
      "end": 1746125081881,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "ContentResolverProps",
          "AccordionBlock",
          "BarChart",
          "BlockQuoteFilled",
          "BlockquoteLine",
          "Cards",
          "ConclusionPaywall",
          "FilledBulletList",
          "Header",
          "IconList",
          "OrderedCards",
          "OrderedList",
          "Paragraph",
          "Paywall",
          "ReportTitle",
          "Subscription",
          "Subtitle",
          "TextStrokeDash",
          "barChartPrepareData",
          "isListItemArray",
          "contentResolver",
          "content",
          "color",
          "actions",
          "surveyId",
          "mbti",
          "slots",
          "index",
          "type",
          "text",
          "items",
          "paywallExtraAction",
          "conclusion_paywall",
          "subscribeEmail"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/contentResolver.tsx"],
        "sourcesContent": [
          "import type { ContentResolverProps } from '../types';\nimport {\n    AccordionBlock,\n    BarChart,\n    BlockQuoteFilled,\n    BlockquoteLine,\n    Cards,\n    ConclusionPaywall,\n    FilledBulletList,\n    Header,\n    IconList,\n    OrderedCards,\n    OrderedList,\n    Paragraph,\n    Paywall,\n    ReportTitle,\n    Subscription,\n    Subtitle,\n    TextStrokeDash,\n} from '../ui';\nimport { barChartPrepareData } from './barChartPreparedData';\nimport { isListItemArray } from './guards';\n\nexport const contentResolver = ({\n    content,\n    color = 'violet',\n    actions,\n    surveyId,\n    mbti,\n    slots,\n    index,\n}: ContentResolverProps) => {\n    switch (content.type) {\n        case 'blockquote_filled':\n            return <BlockQuoteFilled color={color} text={content.text ?? ''} />;\n        case 'header':\n            return <Header {...content} />;\n        case 'paragraph':\n            return <Paragraph {...content} />;\n        case 'cards':\n            return isListItemArray(content.items) && <Cards items={content.items} color={color} />;\n        case 'ordered_cards':\n            return <OrderedCards color={content.color} items={isListItemArray(content.items) ? content.items : []} />;\n        case 'title':\n            return <ReportTitle>{content.text}</ReportTitle>;\n        case 'subtitle':\n            return <Subtitle {...content} />;\n        case 'ordered_list':\n            return (\n                <OrderedList\n                    color={color}\n                    data-type={content.type}\n                    resolver={contentResolver}\n                    items={isListItemArray(content.items) ? content.items : []}\n                />\n            );\n        case 'blockquote_line':\n            return <BlockquoteLine text={content.text} color={color} />;\n        case 'filled_bullet_list':\n            return <FilledBulletList data-color={color} items={isListItemArray(content.items) ? content.items : []} />;\n        case 'paywall':\n            return (\n                <Paywall\n                    {...content}\n                    color={color}\n                    surveyId={surveyId}\n                    mbti={mbti}\n                    index={index}\n                    action={slots?.paywallExtraAction}\n                />\n            );\n        case 'conclusion_paywall':\n            return <ConclusionPaywall {...content} color={color} actionsSlot={actions?.conclusion_paywall} />;\n        case 'bar_chart':\n            return <BarChart marks={barChartPrepareData(content)} />;\n        case 'icon_list':\n            return <IconList items={isListItemArray(content.items) ? content.items : []} color={color} />;\n        case 'subscription':\n            return <Subscription {...content} subscriptionFormSlot={slots?.subscribeEmail} />;\n        case 'text_stroke_dash':\n            return <TextStrokeDash text={content.text ?? ''} color={color} />;\n        case 'accordion':\n            return <AccordionBlock items={isListItemArray(content.items) ? content.items : []} />;\n        default:\n            return <>UNKNOWN</>;\n    }\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx } from \"react/jsx-runtime\";\nimport { AccordionBlock, BarChart, BlockQuoteFilled, BlockquoteLine, Cards, ConclusionPaywall, FilledBulletList, Header, IconList, OrderedCards, OrderedList, Paragraph, Paywall, ReportTitle, Subscription, Subtitle, TextStrokeDash } from \"../ui\";\nimport { barChartPrepareData } from \"./barChartPreparedData\";\nimport { isListItemArray } from \"./guards\";\nexport const contentResolver = ({\n  content,\n  color = \"violet\",\n  actions,\n  surveyId,\n  mbti,\n  slots,\n  index\n}) => {\n  switch (content.type) {\n    case \"blockquote_filled\":\n      return /* @__PURE__ */ jsx(BlockQuoteFilled, { color, text: content.text ?? \"\" });\n    case \"header\":\n      return /* @__PURE__ */ jsx(Header, { ...content });\n    case \"paragraph\":\n      return /* @__PURE__ */ jsx(Paragraph, { ...content });\n    case \"cards\":\n      return isListItemArray(content.items) && /* @__PURE__ */ jsx(Cards, { items: content.items, color });\n    case \"ordered_cards\":\n      return /* @__PURE__ */ jsx(OrderedCards, { color: content.color, items: isListItemArray(content.items) ? content.items : [] });\n    case \"title\":\n      return /* @__PURE__ */ jsx(ReportTitle, { children: content.text });\n    case \"subtitle\":\n      return /* @__PURE__ */ jsx(Subtitle, { ...content });\n    case \"ordered_list\":\n      return /* @__PURE__ */ jsx(OrderedList, { color, \"data-type\": content.type, resolver: contentResolver, items: isListItemArray(content.items) ? content.items : [] });\n    case \"blockquote_line\":\n      return /* @__PURE__ */ jsx(BlockquoteLine, { text: content.text, color });\n    case \"filled_bullet_list\":\n      return /* @__PURE__ */ jsx(FilledBulletList, { \"data-color\": color, items: isListItemArray(content.items) ? content.items : [] });\n    case \"paywall\":\n      return /* @__PURE__ */ jsx(Paywall, { ...content, color, surveyId, mbti, index, action: slots?.paywallExtraAction });\n    case \"conclusion_paywall\":\n      return /* @__PURE__ */ jsx(ConclusionPaywall, { ...content, color, actionsSlot: actions?.conclusion_paywall });\n    case \"bar_chart\":\n      return /* @__PURE__ */ jsx(BarChart, { marks: barChartPrepareData(content) });\n    case \"icon_list\":\n      return /* @__PURE__ */ jsx(IconList, { items: isListItemArray(content.items) ? content.items : [], color });\n    case \"subscription\":\n      return /* @__PURE__ */ jsx(Subscription, { ...content, subscriptionFormSlot: slots?.subscribeEmail });\n    case \"text_stroke_dash\":\n      return /* @__PURE__ */ jsx(TextStrokeDash, { text: content.text ?? \"\", color });\n    case \"accordion\":\n      return /* @__PURE__ */ jsx(AccordionBlock, { items: isListItemArray(content.items) ? content.items : [] });\n    default:\n      return /* @__PURE__ */ jsx(Fragment, { children: \"UNKNOWN\" });\n  }\n};\n",
      "start": 1746125081881,
      "end": 1746125082076,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Report/lib/contentResolver.tsx"],
        "sourcesContent": [
          "import type { ContentResolverProps } from '../types';\nimport { AccordionBlock, BarChart, BlockQuoteFilled, BlockquoteLine, Cards, ConclusionPaywall, FilledBulletList, Header, IconList, OrderedCards, OrderedList, Paragraph, Paywall, ReportTitle, Subscription, Subtitle, TextStrokeDash } from '../ui';\nimport { barChartPrepareData } from './barChartPreparedData';\nimport { isListItemArray } from './guards';\nexport const contentResolver = ({\n  content,\n  color = 'violet',\n  actions,\n  surveyId,\n  mbti,\n  slots,\n  index\n}: ContentResolverProps) => {\n  switch (content.type) {\n    case 'blockquote_filled':\n      return <BlockQuoteFilled color={color} text={content.text ?? ''} />;\n    case 'header':\n      return <Header {...content} />;\n    case 'paragraph':\n      return <Paragraph {...content} />;\n    case 'cards':\n      return isListItemArray(content.items) && <Cards items={content.items} color={color} />;\n    case 'ordered_cards':\n      return <OrderedCards color={content.color} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'title':\n      return <ReportTitle>{content.text}</ReportTitle>;\n    case 'subtitle':\n      return <Subtitle {...content} />;\n    case 'ordered_list':\n      return <OrderedList color={color} data-type={content.type} resolver={contentResolver} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'blockquote_line':\n      return <BlockquoteLine text={content.text} color={color} />;\n    case 'filled_bullet_list':\n      return <FilledBulletList data-color={color} items={isListItemArray(content.items) ? content.items : []} />;\n    case 'paywall':\n      return <Paywall {...content} color={color} surveyId={surveyId} mbti={mbti} index={index} action={slots?.paywallExtraAction} />;\n    case 'conclusion_paywall':\n      return <ConclusionPaywall {...content} color={color} actionsSlot={actions?.conclusion_paywall} />;\n    case 'bar_chart':\n      return <BarChart marks={barChartPrepareData(content)} />;\n    case 'icon_list':\n      return <IconList items={isListItemArray(content.items) ? content.items : []} color={color} />;\n    case 'subscription':\n      return <Subscription {...content} subscriptionFormSlot={slots?.subscribeEmail} />;\n    case 'text_stroke_dash':\n      return <TextStrokeDash text={content.text ?? ''} color={color} />;\n    case 'accordion':\n      return <AccordionBlock items={isListItemArray(content.items) ? content.items : []} />;\n    default:\n      return <>UNKNOWN</>;\n  }\n};"
        ],
        "mappings": "AAea,SAkCA,UAlCA;AAdb,SAAS,gBAAgB,UAAU,kBAAkB,gBAAgB,OAAO,mBAAmB,kBAAkB,QAAQ,UAAU,cAAc,aAAa,WAAW,SAAS,aAAa,cAAc,UAAU,sBAAsB;AAC7O,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AACzB,aAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA4B;AAC1B,UAAQ,QAAQ,MAAM;AAAA,IACpB,KAAK;AACH,aAAO,oBAAC,oBAAiB,OAAc,MAAM,QAAQ,QAAQ,IAAI;AAAA,IACnE,KAAK;AACH,aAAO,oBAAC,UAAQ,GAAG,SAAS;AAAA,IAC9B,KAAK;AACH,aAAO,oBAAC,aAAW,GAAG,SAAS;AAAA,IACjC,KAAK;AACH,aAAO,gBAAgB,QAAQ,KAAK,KAAK,oBAAC,SAAM,OAAO,QAAQ,OAAO,OAAc;AAAA,IACtF,KAAK;AACH,aAAO,oBAAC,gBAAa,OAAO,QAAQ,OAAO,OAAO,gBAAgB,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,GAAG;AAAA,IACzG,KAAK;AACH,aAAO,oBAAC,eAAa,kBAAQ,MAAK;AAAA,IACpC,KAAK;AACH,aAAO,oBAAC,YAAU,GAAG,SAAS;AAAA,IAChC,KAAK;AACH,aAAO,oBAAC,eAAY,OAAc,aAAW,QAAQ,MAAM,UAAU,iBAAiB,OAAO,gBAAgB,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,GAAG;AAAA,IACpJ,KAAK;AACH,aAAO,oBAAC,kBAAe,MAAM,QAAQ,MAAM,OAAc;AAAA,IAC3D,KAAK;AACH,aAAO,oBAAC,oBAAiB,cAAY,OAAO,OAAO,gBAAgB,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,GAAG;AAAA,IAC1G,KAAK;AACH,aAAO,oBAAC,WAAS,GAAG,SAAS,OAAc,UAAoB,MAAY,OAAc,QAAQ,OAAO,oBAAoB;AAAA,IAC9H,KAAK;AACH,aAAO,oBAAC,qBAAmB,GAAG,SAAS,OAAc,aAAa,SAAS,oBAAoB;AAAA,IACjG,KAAK;AACH,aAAO,oBAAC,YAAS,OAAO,oBAAoB,OAAO,GAAG;AAAA,IACxD,KAAK;AACH,aAAO,oBAAC,YAAS,OAAO,gBAAgB,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,GAAG,OAAc;AAAA,IAC7F,KAAK;AACH,aAAO,oBAAC,gBAAc,GAAG,SAAS,sBAAsB,OAAO,gBAAgB;AAAA,IACjF,KAAK;AACH,aAAO,oBAAC,kBAAe,MAAM,QAAQ,QAAQ,IAAI,OAAc;AAAA,IACjE,KAAK;AACH,aAAO,oBAAC,kBAAe,OAAO,gBAAgB,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,GAAG;AAAA,IACrF;AACE,aAAO,gCAAE,qBAAO;AAAA,EACpB;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Report/lib/contentResolver.tsx [vike:pluginModuleBanner] */\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nimport { AccordionBlock, BarChart, BlockQuoteFilled, BlockquoteLine, Cards, ConclusionPaywall, FilledBulletList, Header, IconList, OrderedCards, OrderedList, Paragraph, Paywall, ReportTitle, Subscription, Subtitle, TextStrokeDash } from \"../ui\";\nimport { barChartPrepareData } from \"./barChartPreparedData\";\nimport { isListItemArray } from \"./guards\";\nexport const contentResolver = ({\n  content,\n  color = \"violet\",\n  actions,\n  surveyId,\n  mbti,\n  slots,\n  index\n}) => {\n  switch (content.type) {\n    case \"blockquote_filled\":\n      return /* @__PURE__ */ jsx(BlockQuoteFilled, { color, text: content.text ?? \"\" });\n    case \"header\":\n      return /* @__PURE__ */ jsx(Header, { ...content });\n    case \"paragraph\":\n      return /* @__PURE__ */ jsx(Paragraph, { ...content });\n    case \"cards\":\n      return isListItemArray(content.items) && /* @__PURE__ */ jsx(Cards, { items: content.items, color });\n    case \"ordered_cards\":\n      return /* @__PURE__ */ jsx(OrderedCards, { color: content.color, items: isListItemArray(content.items) ? content.items : [] });\n    case \"title\":\n      return /* @__PURE__ */ jsx(ReportTitle, { children: content.text });\n    case \"subtitle\":\n      return /* @__PURE__ */ jsx(Subtitle, { ...content });\n    case \"ordered_list\":\n      return /* @__PURE__ */ jsx(OrderedList, { color, \"data-type\": content.type, resolver: contentResolver, items: isListItemArray(content.items) ? content.items : [] });\n    case \"blockquote_line\":\n      return /* @__PURE__ */ jsx(BlockquoteLine, { text: content.text, color });\n    case \"filled_bullet_list\":\n      return /* @__PURE__ */ jsx(FilledBulletList, { \"data-color\": color, items: isListItemArray(content.items) ? content.items : [] });\n    case \"paywall\":\n      return /* @__PURE__ */ jsx(Paywall, { ...content, color, surveyId, mbti, index, action: slots?.paywallExtraAction });\n    case \"conclusion_paywall\":\n      return /* @__PURE__ */ jsx(ConclusionPaywall, { ...content, color, actionsSlot: actions?.conclusion_paywall });\n    case \"bar_chart\":\n      return /* @__PURE__ */ jsx(BarChart, { marks: barChartPrepareData(content) });\n    case \"icon_list\":\n      return /* @__PURE__ */ jsx(IconList, { items: isListItemArray(content.items) ? content.items : [], color });\n    case \"subscription\":\n      return /* @__PURE__ */ jsx(Subscription, { ...content, subscriptionFormSlot: slots?.subscribeEmail });\n    case \"text_stroke_dash\":\n      return /* @__PURE__ */ jsx(TextStrokeDash, { text: content.text ?? \"\", color });\n    case \"accordion\":\n      return /* @__PURE__ */ jsx(AccordionBlock, { items: isListItemArray(content.items) ? content.items : [] });\n    default:\n      return /* @__PURE__ */ jsx(Fragment, { children: \"UNKNOWN\" });\n  }\n};\n",
      "start": 1746125082076,
      "end": 1746125082076,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Report/lib/contentResolver.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjphC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClpH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACphH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;AACF,CAAC;"
      }
    }
  ]
}

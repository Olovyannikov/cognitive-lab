{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SubmitTestModal/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { navigate } from 'vike/client/router';\n\nimport { atom } from '@/shared/factories';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from '@/entities/Test';\nimport { UserModel } from '@/entities/User';\n\nexport const SubmitTestModel = atom(() => {\n    const $isSubmitModalShown = createStore<boolean>(false);\n    const submitScaleForm = createEvent();\n    const submitModalStateChanged = createEvent();\n\n    const redirectToCongratsPageFx = createEffect(async (reportId: string) => {\n        await navigate(`/congratulations/${reportId}`);\n    });\n\n    const showSubmitErrorFx = createEffect(async (message: string) => {\n        notifications.show({\n            color: 'red',\n            title: 'Ошибка!',\n            message,\n        });\n    });\n\n    sample({\n        clock: getSurveysInfoQuery.$data,\n        filter: Boolean,\n        fn: (data) => data?.user?.email,\n        target: TestEmailFormModel.form.fields.email.change,\n    });\n\n    sample({\n        clock: submitModalStateChanged,\n        source: $isSubmitModalShown,\n        fn: (param) => !param,\n        target: $isSubmitModalShown,\n    });\n\n    sample({\n        clock: submitScaleForm,\n        source: {\n            form: TestModel.$scaleForm,\n            emailForm: TestEmailFormModel.form.$values,\n        },\n        fn: ({ form, emailForm }) => ({\n            answers: form.answers,\n            email: emailForm.email,\n            approve_subscription: emailForm.approve_subscription,\n        }),\n        target: submitAnswersMutation.start,\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        fn: () => false,\n        target: $isSubmitModalShown,\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        fn: ({ result }) => result.id,\n        target: [UserModel.$surveyId, getSurveysInfoQuery.start],\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        filter: () => !window?.location.origin.includes('free-report'),\n        fn: (report) => report.result.user_free_report,\n        target: [redirectToCongratsPageFx],\n    });\n\n    sample({\n        clock: redirectToCongratsPageFx.done,\n        source: submitAnswersMutation.finished.success.map((params) => params.result),\n        fn: (data) => data.user_free_report,\n        target: [ReportModel.freeReportIdReceived],\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.failure,\n        fn: ({ error }) => error.message,\n        target: showSubmitErrorFx,\n    });\n\n    return {\n        redirectToFreeReportPageFx: redirectToCongratsPageFx,\n        $isSubmitModalShown,\n        submitScaleForm,\n        submitModalStateChanged,\n    };\n});\n",
      "start": 1750105187947,
      "end": 1750105187993,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { navigate } from 'vike/client/router';\nimport { atom } from '@/shared/factories';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from '@/entities/Test';\nimport { UserModel } from '@/entities/User';\nexport const SubmitTestModel = atom(() => {\n  const $isSubmitModalShown = createStore<boolean>(false, {\n    name: \"$isSubmitModalShown\",\n    sid: \"-r9yc2g\"\n  });\n  const submitScaleForm = createEvent({\n    name: \"submitScaleForm\",\n    sid: \"8licx8\"\n  });\n  const submitModalStateChanged = createEvent({\n    name: \"submitModalStateChanged\",\n    sid: \"-dzuo34\"\n  });\n  const redirectToCongratsPageFx = createEffect(async (reportId: string) => {\n    await navigate(`/congratulations/${reportId}`);\n  }, {\n    name: \"redirectToCongratsPageFx\",\n    sid: \"-hv3x34\"\n  });\n  const showSubmitErrorFx = createEffect(async (message: string) => {\n    notifications.show({\n      color: 'red',\n      title: 'Ошибка!',\n      message\n    });\n  }, {\n    name: \"showSubmitErrorFx\",\n    sid: \"9u4oq0\"\n  });\n  sample({\n    and: [{\n      clock: getSurveysInfoQuery.$data,\n      filter: Boolean,\n      fn: data => data?.user?.email,\n      target: TestEmailFormModel.form.fields.email.change\n    }],\n    or: {\n      sid: \"mwve4u\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitModalStateChanged,\n      source: $isSubmitModalShown,\n      fn: param => !param,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"nc9mqy\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitScaleForm,\n      source: {\n        form: TestModel.$scaleForm,\n        emailForm: TestEmailFormModel.form.$values\n      },\n      fn: ({\n        form,\n        emailForm\n      }) => ({\n        answers: form.answers,\n        email: emailForm.email,\n        approve_subscription: emailForm.approve_subscription\n      }),\n      target: submitAnswersMutation.start\n    }],\n    or: {\n      sid: \"nrnvd2\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: () => false,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"oawo4p\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: ({\n        result\n      }) => result.id,\n      target: [UserModel.$surveyId, getSurveysInfoQuery.start]\n    }],\n    or: {\n      sid: \"opr45g\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      filter: () => !window?.location.origin.includes('free-report'),\n      fn: report => report.result.user_free_report,\n      target: [redirectToCongratsPageFx]\n    }],\n    or: {\n      sid: \"ot1vpm\"\n    }\n  });\n  sample({\n    and: [{\n      clock: redirectToCongratsPageFx.done,\n      source: submitAnswersMutation.finished.success.map(params => params.result),\n      fn: data => data.user_free_report,\n      target: [ReportModel.freeReportIdReceived]\n    }],\n    or: {\n      sid: \"p8g4bq\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.failure,\n      fn: ({\n        error\n      }) => error.message,\n      target: showSubmitErrorFx\n    }],\n    or: {\n      sid: \"pnucxu\"\n    }\n  });\n  return {\n    redirectToFreeReportPageFx: redirectToCongratsPageFx,\n    $isSubmitModalShown,\n    submitScaleForm,\n    submitModalStateChanged\n  };\n});",
      "start": 1750105187993,
      "end": 1750105187995,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "notifications",
          "createEffect",
          "createEvent",
          "createStore",
          "sample",
          "navigate",
          "atom",
          "getSurveysInfoQuery",
          "ReportModel",
          "submitAnswersMutation",
          "TestEmailFormModel",
          "TestModel",
          "UserModel",
          "SubmitTestModel",
          "$isSubmitModalShown",
          "name",
          "sid",
          "submitScaleForm",
          "submitModalStateChanged",
          "redirectToCongratsPageFx",
          "reportId",
          "showSubmitErrorFx",
          "message",
          "show",
          "color",
          "title",
          "and",
          "clock",
          "$data",
          "filter",
          "Boolean",
          "fn",
          "data",
          "user",
          "email",
          "target",
          "form",
          "fields",
          "change",
          "or",
          "source",
          "param",
          "$scaleForm",
          "emailForm",
          "$values",
          "answers",
          "approve_subscription",
          "start",
          "finished",
          "success",
          "result",
          "id",
          "$surveyId",
          "window",
          "location",
          "origin",
          "includes",
          "report",
          "user_free_report",
          "done",
          "map",
          "params",
          "freeReportIdReceived",
          "failure",
          "error",
          "redirectToFreeReportPageFx"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SubmitTestModal/model/index.ts"
        ],
        "sourcesContent": [
          "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { navigate } from 'vike/client/router';\n\nimport { atom } from '@/shared/factories';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from '@/entities/Test';\nimport { UserModel } from '@/entities/User';\n\nexport const SubmitTestModel = atom(() => {\n    const $isSubmitModalShown = createStore<boolean>(false);\n    const submitScaleForm = createEvent();\n    const submitModalStateChanged = createEvent();\n\n    const redirectToCongratsPageFx = createEffect(async (reportId: string) => {\n        await navigate(`/congratulations/${reportId}`);\n    });\n\n    const showSubmitErrorFx = createEffect(async (message: string) => {\n        notifications.show({\n            color: 'red',\n            title: 'Ошибка!',\n            message,\n        });\n    });\n\n    sample({\n        clock: getSurveysInfoQuery.$data,\n        filter: Boolean,\n        fn: (data) => data?.user?.email,\n        target: TestEmailFormModel.form.fields.email.change,\n    });\n\n    sample({\n        clock: submitModalStateChanged,\n        source: $isSubmitModalShown,\n        fn: (param) => !param,\n        target: $isSubmitModalShown,\n    });\n\n    sample({\n        clock: submitScaleForm,\n        source: {\n            form: TestModel.$scaleForm,\n            emailForm: TestEmailFormModel.form.$values,\n        },\n        fn: ({ form, emailForm }) => ({\n            answers: form.answers,\n            email: emailForm.email,\n            approve_subscription: emailForm.approve_subscription,\n        }),\n        target: submitAnswersMutation.start,\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        fn: () => false,\n        target: $isSubmitModalShown,\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        fn: ({ result }) => result.id,\n        target: [UserModel.$surveyId, getSurveysInfoQuery.start],\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.success,\n        filter: () => !window?.location.origin.includes('free-report'),\n        fn: (report) => report.result.user_free_report,\n        target: [redirectToCongratsPageFx],\n    });\n\n    sample({\n        clock: redirectToCongratsPageFx.done,\n        source: submitAnswersMutation.finished.success.map((params) => params.result),\n        fn: (data) => data.user_free_report,\n        target: [ReportModel.freeReportIdReceived],\n    });\n\n    sample({\n        clock: submitAnswersMutation.finished.failure,\n        fn: ({ error }) => error.message,\n        target: showSubmitErrorFx,\n    });\n\n    return {\n        redirectToFreeReportPageFx: redirectToCongratsPageFx,\n        $isSubmitModalShown,\n        submitScaleForm,\n        submitModalStateChanged,\n    };\n});\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { navigate } from \"vike/client/router\";\nimport { atom } from \"@/shared/factories\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from \"@/entities/Test\";\nimport { UserModel } from \"@/entities/User\";\nexport const SubmitTestModel = atom(() => {\n  const $isSubmitModalShown = createStore(false, {\n    name: \"$isSubmitModalShown\",\n    sid: \"-r9yc2g\"\n  });\n  const submitScaleForm = createEvent({\n    name: \"submitScaleForm\",\n    sid: \"8licx8\"\n  });\n  const submitModalStateChanged = createEvent({\n    name: \"submitModalStateChanged\",\n    sid: \"-dzuo34\"\n  });\n  const redirectToCongratsPageFx = createEffect(async (reportId) => {\n    await navigate(`/congratulations/${reportId}`);\n  }, {\n    name: \"redirectToCongratsPageFx\",\n    sid: \"-hv3x34\"\n  });\n  const showSubmitErrorFx = createEffect(async (message) => {\n    notifications.show({\n      color: \"red\",\n      title: \"Ошибка!\",\n      message\n    });\n  }, {\n    name: \"showSubmitErrorFx\",\n    sid: \"9u4oq0\"\n  });\n  sample({\n    and: [{\n      clock: getSurveysInfoQuery.$data,\n      filter: Boolean,\n      fn: (data) => data?.user?.email,\n      target: TestEmailFormModel.form.fields.email.change\n    }],\n    or: {\n      sid: \"mwve4u\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitModalStateChanged,\n      source: $isSubmitModalShown,\n      fn: (param) => !param,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"nc9mqy\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitScaleForm,\n      source: {\n        form: TestModel.$scaleForm,\n        emailForm: TestEmailFormModel.form.$values\n      },\n      fn: ({\n        form,\n        emailForm\n      }) => ({\n        answers: form.answers,\n        email: emailForm.email,\n        approve_subscription: emailForm.approve_subscription\n      }),\n      target: submitAnswersMutation.start\n    }],\n    or: {\n      sid: \"nrnvd2\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: () => false,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"oawo4p\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: ({\n        result\n      }) => result.id,\n      target: [UserModel.$surveyId, getSurveysInfoQuery.start]\n    }],\n    or: {\n      sid: \"opr45g\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      filter: () => !window?.location.origin.includes(\"free-report\"),\n      fn: (report) => report.result.user_free_report,\n      target: [redirectToCongratsPageFx]\n    }],\n    or: {\n      sid: \"ot1vpm\"\n    }\n  });\n  sample({\n    and: [{\n      clock: redirectToCongratsPageFx.done,\n      source: submitAnswersMutation.finished.success.map((params) => params.result),\n      fn: (data) => data.user_free_report,\n      target: [ReportModel.freeReportIdReceived]\n    }],\n    or: {\n      sid: \"p8g4bq\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.failure,\n      fn: ({\n        error\n      }) => error.message,\n      target: showSubmitErrorFx\n    }],\n    or: {\n      sid: \"pnucxu\"\n    }\n  });\n  return {\n    redirectToFreeReportPageFx: redirectToCongratsPageFx,\n    $isSubmitModalShown,\n    submitScaleForm,\n    submitModalStateChanged\n  };\n});\n",
      "start": 1750105187995,
      "end": 1750105188272,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/Test/SubmitTestModal/model/index.ts"
        ],
        "sourcesContent": [
          "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { navigate } from 'vike/client/router';\nimport { atom } from '@/shared/factories';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from '@/entities/Test';\nimport { UserModel } from '@/entities/User';\nexport const SubmitTestModel = atom(() => {\n  const $isSubmitModalShown = createStore<boolean>(false, {\n    name: \"$isSubmitModalShown\",\n    sid: \"-r9yc2g\"\n  });\n  const submitScaleForm = createEvent({\n    name: \"submitScaleForm\",\n    sid: \"8licx8\"\n  });\n  const submitModalStateChanged = createEvent({\n    name: \"submitModalStateChanged\",\n    sid: \"-dzuo34\"\n  });\n  const redirectToCongratsPageFx = createEffect(async (reportId: string) => {\n    await navigate(`/congratulations/${reportId}`);\n  }, {\n    name: \"redirectToCongratsPageFx\",\n    sid: \"-hv3x34\"\n  });\n  const showSubmitErrorFx = createEffect(async (message: string) => {\n    notifications.show({\n      color: 'red',\n      title: 'Ошибка!',\n      message\n    });\n  }, {\n    name: \"showSubmitErrorFx\",\n    sid: \"9u4oq0\"\n  });\n  sample({\n    and: [{\n      clock: getSurveysInfoQuery.$data,\n      filter: Boolean,\n      fn: data => data?.user?.email,\n      target: TestEmailFormModel.form.fields.email.change\n    }],\n    or: {\n      sid: \"mwve4u\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitModalStateChanged,\n      source: $isSubmitModalShown,\n      fn: param => !param,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"nc9mqy\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitScaleForm,\n      source: {\n        form: TestModel.$scaleForm,\n        emailForm: TestEmailFormModel.form.$values\n      },\n      fn: ({\n        form,\n        emailForm\n      }) => ({\n        answers: form.answers,\n        email: emailForm.email,\n        approve_subscription: emailForm.approve_subscription\n      }),\n      target: submitAnswersMutation.start\n    }],\n    or: {\n      sid: \"nrnvd2\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: () => false,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"oawo4p\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: ({\n        result\n      }) => result.id,\n      target: [UserModel.$surveyId, getSurveysInfoQuery.start]\n    }],\n    or: {\n      sid: \"opr45g\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      filter: () => !window?.location.origin.includes('free-report'),\n      fn: report => report.result.user_free_report,\n      target: [redirectToCongratsPageFx]\n    }],\n    or: {\n      sid: \"ot1vpm\"\n    }\n  });\n  sample({\n    and: [{\n      clock: redirectToCongratsPageFx.done,\n      source: submitAnswersMutation.finished.success.map(params => params.result),\n      fn: data => data.user_free_report,\n      target: [ReportModel.freeReportIdReceived]\n    }],\n    or: {\n      sid: \"p8g4bq\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.failure,\n      fn: ({\n        error\n      }) => error.message,\n      target: showSubmitErrorFx\n    }],\n    or: {\n      sid: \"pnucxu\"\n    }\n  });\n  return {\n    redirectToFreeReportPageFx: redirectToCongratsPageFx,\n    $isSubmitModalShown,\n    submitScaleForm,\n    submitModalStateChanged\n  };\n});"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750105188272,
      "end": 1750105188272,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/Test/SubmitTestModal/model/index.ts [vike:pluginModuleBanner] */\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { navigate } from \"vike/client/router\";\nimport { atom } from \"@/shared/factories\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { submitAnswersMutation, TestEmailFormModel, TestModel } from \"@/entities/Test\";\nimport { UserModel } from \"@/entities/User\";\nexport const SubmitTestModel = atom(() => {\n  const $isSubmitModalShown = createStore(false, {\n    name: \"$isSubmitModalShown\",\n    sid: \"-r9yc2g\"\n  });\n  const submitScaleForm = createEvent({\n    name: \"submitScaleForm\",\n    sid: \"8licx8\"\n  });\n  const submitModalStateChanged = createEvent({\n    name: \"submitModalStateChanged\",\n    sid: \"-dzuo34\"\n  });\n  const redirectToCongratsPageFx = createEffect(async (reportId) => {\n    await navigate(`/congratulations/${reportId}`);\n  }, {\n    name: \"redirectToCongratsPageFx\",\n    sid: \"-hv3x34\"\n  });\n  const showSubmitErrorFx = createEffect(async (message) => {\n    notifications.show({\n      color: \"red\",\n      title: \"Ошибка!\",\n      message\n    });\n  }, {\n    name: \"showSubmitErrorFx\",\n    sid: \"9u4oq0\"\n  });\n  sample({\n    and: [{\n      clock: getSurveysInfoQuery.$data,\n      filter: Boolean,\n      fn: (data) => data?.user?.email,\n      target: TestEmailFormModel.form.fields.email.change\n    }],\n    or: {\n      sid: \"mwve4u\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitModalStateChanged,\n      source: $isSubmitModalShown,\n      fn: (param) => !param,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"nc9mqy\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitScaleForm,\n      source: {\n        form: TestModel.$scaleForm,\n        emailForm: TestEmailFormModel.form.$values\n      },\n      fn: ({\n        form,\n        emailForm\n      }) => ({\n        answers: form.answers,\n        email: emailForm.email,\n        approve_subscription: emailForm.approve_subscription\n      }),\n      target: submitAnswersMutation.start\n    }],\n    or: {\n      sid: \"nrnvd2\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: () => false,\n      target: $isSubmitModalShown\n    }],\n    or: {\n      sid: \"oawo4p\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      fn: ({\n        result\n      }) => result.id,\n      target: [UserModel.$surveyId, getSurveysInfoQuery.start]\n    }],\n    or: {\n      sid: \"opr45g\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.success,\n      filter: () => !window?.location.origin.includes(\"free-report\"),\n      fn: (report) => report.result.user_free_report,\n      target: [redirectToCongratsPageFx]\n    }],\n    or: {\n      sid: \"ot1vpm\"\n    }\n  });\n  sample({\n    and: [{\n      clock: redirectToCongratsPageFx.done,\n      source: submitAnswersMutation.finished.success.map((params) => params.result),\n      fn: (data) => data.user_free_report,\n      target: [ReportModel.freeReportIdReceived]\n    }],\n    or: {\n      sid: \"p8g4bq\"\n    }\n  });\n  sample({\n    and: [{\n      clock: submitAnswersMutation.finished.failure,\n      fn: ({\n        error\n      }) => error.message,\n      target: showSubmitErrorFx\n    }],\n    or: {\n      sid: \"pnucxu\"\n    }\n  });\n  return {\n    redirectToFreeReportPageFx: redirectToCongratsPageFx,\n    $isSubmitModalShown,\n    submitScaleForm,\n    submitModalStateChanged\n  };\n});\n",
      "start": 1750105188272,
      "end": 1750105188273,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "src/widgets/Test/SubmitTestModal/model/index.ts"
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/IndexPage/ui/MoreInBlog/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useRef } from 'react';\nimport { Carousel } from '@mantine/carousel';\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from '@mantine/core';\nimport { ArrowUpRight } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport AutoScroll from 'embla-carousel-auto-scroll';\nimport { WheelGesturesPlugin } from 'embla-carousel-wheel-gestures';\nimport Markdown from 'markdown-to-jsx';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { Section } from '@/shared/ui';\n\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\n\nimport s from './MoreInBlog.module.css';\n\nexport const MoreInBlog = () => {\n    const { isMobile } = usePageContext();\n    const { data } = useUnit(getAllBlogPostsQuery);\n    const autoplay = useRef(\n        AutoScroll({\n            playOnInit: true,\n            startDelay: 200,\n            stopOnMouseEnter: true,\n            stopOnInteraction: true,\n            active: true,\n            speed: 0.5,\n            direction: 'backward',\n        })\n    );\n    const wheel = useRef(WheelGesturesPlugin({}));\n\n    const currentBlogPosts =\n        data.payload?.length > 5\n            ? data.payload\n            : [...(data.payload ?? []), ...(data.payload ?? []), ...(data.payload ?? [])];\n\n    return (\n        <Section hidden={!currentBlogPosts.length} containerClassName={s.container}>\n            <Title className={s.mainTitle} order={2}>\n                Узнать больше <br />\n                в&nbsp;\n                <a href='/blog'>\n                    блоге <ArrowUpRight />\n                </a>\n            </Title>\n            <Carousel\n                loop\n                slideGap='lg'\n                withControls={false}\n                plugins={[autoplay.current, wheel.current]}\n                slideSize={isMobile ? '70%' : 466}\n                onMouseLeave={() => autoplay?.current?.play?.()}\n                onPointerLeave={() => autoplay?.current?.play?.()}\n                onPointerEnter={() => autoplay?.current?.stop?.()}\n            >\n                {currentBlogPosts.map((post, index) => (\n                    <Carousel.Slide key={index} h='unset'>\n                        <Paper h='100%' component='a' href={`/blog/${post.id}`} withBorder className={s.paper}>\n                            <Stack justify='space-between' align='flex-start' gap='md'>\n                                <Image\n                                    width={304}\n                                    height={304}\n                                    src={post.image}\n                                    className={s.image}\n                                    alt={post.image_alt}\n                                />\n                                <Title order={5} className={s.cardTitle}>\n                                    {post.title}\n                                </Title>\n                                <Text c='dark.2'>{post.updated_at}</Text>\n                                <Box mah={150} style={{ overflow: 'hidden' }}>\n                                    <Markdown\n                                        options={{\n                                            overrides: {\n                                                p: (props) => (\n                                                    <Text\n                                                        {...props}\n                                                        mah={150}\n                                                        style={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        className={s.blogText}\n                                                        lineClamp={6}\n                                                    />\n                                                ),\n                                                a: (props) => <>{props.children}</>,\n                                                blockquote: (props) => (\n                                                    <Blockquote\n                                                        mah={150}\n                                                        py={0}\n                                                        style={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        mb='md'\n                                                        px='md'\n                                                        color={`violet.9`}\n                                                        bg='transparent'\n                                                        icon={null}\n                                                    >\n                                                        {props.children}\n                                                    </Blockquote>\n                                                ),\n                                            },\n                                        }}\n                                    >\n                                        {post.body.data}\n                                    </Markdown>\n                                </Box>\n                            </Stack>\n                        </Paper>\n                    </Carousel.Slide>\n                ))}\n            </Carousel>\n        </Section>\n    );\n};\n",
      "start": 1746125696348,
      "end": 1746125696408,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useRef } from 'react';\nimport { Carousel } from '@mantine/carousel';\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from '@mantine/core';\nimport { ArrowUpRight } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport AutoScroll from 'embla-carousel-auto-scroll';\nimport { WheelGesturesPlugin } from 'embla-carousel-wheel-gestures';\nimport Markdown from 'markdown-to-jsx';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { Section } from '@/shared/ui';\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport s from './MoreInBlog.module.css';\nexport const MoreInBlog = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const {\n    data\n  } = useUnit(getAllBlogPostsQuery);\n  const autoplay = useRef(AutoScroll({\n    playOnInit: true,\n    startDelay: 200,\n    stopOnMouseEnter: true,\n    stopOnInteraction: true,\n    active: true,\n    speed: 0.5,\n    direction: 'backward'\n  }));\n  const wheel = useRef(WheelGesturesPlugin({}));\n  const currentBlogPosts = data.payload?.length > 5 ? data.payload : [...(data.payload ?? []), ...(data.payload ?? []), ...(data.payload ?? [])];\n  return <Section hidden={!currentBlogPosts.length} containerClassName={s.container}>\n            <Title className={s.mainTitle} order={2}>\n                Узнать больше <br />\n                в&nbsp;\n                <a href='/blog'>\n                    блоге <ArrowUpRight />\n                </a>\n            </Title>\n            <Carousel loop slideGap='lg' withControls={false} plugins={[autoplay.current, wheel.current]} slideSize={isMobile ? '70%' : 466} onMouseLeave={() => autoplay?.current?.play?.()} onPointerLeave={() => autoplay?.current?.play?.()} onPointerEnter={() => autoplay?.current?.stop?.()}>\n                {currentBlogPosts.map((post, index) => <Carousel.Slide key={index} h='unset'>\n                        <Paper h='100%' component='a' href={`/blog/${post.id}`} withBorder className={s.paper}>\n                            <Stack justify='space-between' align='flex-start' gap='md'>\n                                <Image width={304} height={304} src={post.image} className={s.image} alt={post.image_alt} />\n                                <Title order={5} className={s.cardTitle}>\n                                    {post.title}\n                                </Title>\n                                <Text c='dark.2'>{post.updated_at}</Text>\n                                <Box mah={150} style={{\n              overflow: 'hidden'\n            }}>\n                                    <Markdown options={{\n                overrides: {\n                  p: props => <Text {...props} mah={150} style={{\n                    overflow: 'hidden'\n                  }} className={s.blogText} lineClamp={6} />,\n                  a: props => <>{props.children}</>,\n                  blockquote: props => <Blockquote mah={150} py={0} style={{\n                    overflow: 'hidden'\n                  }} mb='md' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                                                        {props.children}\n                                                    </Blockquote>\n                }\n              }}>\n                                        {post.body.data}\n                                    </Markdown>\n                                </Box>\n                            </Stack>\n                        </Paper>\n                    </Carousel.Slide>)}\n            </Carousel>\n        </Section>;\n};",
      "start": 1746125696408,
      "end": 1746125696410,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useRef",
          "Carousel",
          "Blockquote",
          "Box",
          "Image",
          "Paper",
          "Stack",
          "Text",
          "Title",
          "ArrowUpRight",
          "useUnit",
          "AutoScroll",
          "WheelGesturesPlugin",
          "Markdown",
          "usePageContext",
          "Section",
          "getAllBlogPostsQuery",
          "s",
          "MoreInBlog",
          "isMobile",
          "data",
          "autoplay",
          "playOnInit",
          "startDelay",
          "stopOnMouseEnter",
          "stopOnInteraction",
          "active",
          "speed",
          "direction",
          "wheel",
          "currentBlogPosts",
          "payload",
          "length",
          "container",
          "mainTitle",
          "current",
          "play",
          "stop",
          "map",
          "post",
          "index",
          "id",
          "paper",
          "image",
          "image_alt",
          "cardTitle",
          "title",
          "updated_at",
          "overflow",
          "overrides",
          "p",
          "props",
          "blogText",
          "a",
          "children",
          "blockquote",
          "body"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/IndexPage/ui/MoreInBlog/index.tsx"],
        "sourcesContent": [
          "import { useRef } from 'react';\nimport { Carousel } from '@mantine/carousel';\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from '@mantine/core';\nimport { ArrowUpRight } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport AutoScroll from 'embla-carousel-auto-scroll';\nimport { WheelGesturesPlugin } from 'embla-carousel-wheel-gestures';\nimport Markdown from 'markdown-to-jsx';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { Section } from '@/shared/ui';\n\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\n\nimport s from './MoreInBlog.module.css';\n\nexport const MoreInBlog = () => {\n    const { isMobile } = usePageContext();\n    const { data } = useUnit(getAllBlogPostsQuery);\n    const autoplay = useRef(\n        AutoScroll({\n            playOnInit: true,\n            startDelay: 200,\n            stopOnMouseEnter: true,\n            stopOnInteraction: true,\n            active: true,\n            speed: 0.5,\n            direction: 'backward',\n        })\n    );\n    const wheel = useRef(WheelGesturesPlugin({}));\n\n    const currentBlogPosts =\n        data.payload?.length > 5\n            ? data.payload\n            : [...(data.payload ?? []), ...(data.payload ?? []), ...(data.payload ?? [])];\n\n    return (\n        <Section hidden={!currentBlogPosts.length} containerClassName={s.container}>\n            <Title className={s.mainTitle} order={2}>\n                Узнать больше <br />\n                в&nbsp;\n                <a href='/blog'>\n                    блоге <ArrowUpRight />\n                </a>\n            </Title>\n            <Carousel\n                loop\n                slideGap='lg'\n                withControls={false}\n                plugins={[autoplay.current, wheel.current]}\n                slideSize={isMobile ? '70%' : 466}\n                onMouseLeave={() => autoplay?.current?.play?.()}\n                onPointerLeave={() => autoplay?.current?.play?.()}\n                onPointerEnter={() => autoplay?.current?.stop?.()}\n            >\n                {currentBlogPosts.map((post, index) => (\n                    <Carousel.Slide key={index} h='unset'>\n                        <Paper h='100%' component='a' href={`/blog/${post.id}`} withBorder className={s.paper}>\n                            <Stack justify='space-between' align='flex-start' gap='md'>\n                                <Image\n                                    width={304}\n                                    height={304}\n                                    src={post.image}\n                                    className={s.image}\n                                    alt={post.image_alt}\n                                />\n                                <Title order={5} className={s.cardTitle}>\n                                    {post.title}\n                                </Title>\n                                <Text c='dark.2'>{post.updated_at}</Text>\n                                <Box mah={150} style={{ overflow: 'hidden' }}>\n                                    <Markdown\n                                        options={{\n                                            overrides: {\n                                                p: (props) => (\n                                                    <Text\n                                                        {...props}\n                                                        mah={150}\n                                                        style={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        className={s.blogText}\n                                                        lineClamp={6}\n                                                    />\n                                                ),\n                                                a: (props) => <>{props.children}</>,\n                                                blockquote: (props) => (\n                                                    <Blockquote\n                                                        mah={150}\n                                                        py={0}\n                                                        style={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        mb='md'\n                                                        px='md'\n                                                        color={`violet.9`}\n                                                        bg='transparent'\n                                                        icon={null}\n                                                    >\n                                                        {props.children}\n                                                    </Blockquote>\n                                                ),\n                                            },\n                                        }}\n                                    >\n                                        {post.body.data}\n                                    </Markdown>\n                                </Box>\n                            </Stack>\n                        </Paper>\n                    </Carousel.Slide>\n                ))}\n            </Carousel>\n        </Section>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { useRef } from \"react\";\nimport { Carousel } from \"@mantine/carousel\";\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from \"@mantine/core\";\nimport { ArrowUpRight } from \"@phosphor-icons/react/dist/ssr\";\nimport { useUnit } from \"effector-react\";\nimport AutoScroll from \"embla-carousel-auto-scroll\";\nimport { WheelGesturesPlugin } from \"embla-carousel-wheel-gestures\";\nimport Markdown from \"markdown-to-jsx\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { Section } from \"@/shared/ui\";\nimport { getAllBlogPostsQuery } from \"@/entities/Blog\";\nimport s from \"./MoreInBlog.module.css\";\nexport const MoreInBlog = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const {\n    data\n  } = useUnit(getAllBlogPostsQuery);\n  const autoplay = useRef(AutoScroll({\n    playOnInit: true,\n    startDelay: 200,\n    stopOnMouseEnter: true,\n    stopOnInteraction: true,\n    active: true,\n    speed: 0.5,\n    direction: \"backward\"\n  }));\n  const wheel = useRef(WheelGesturesPlugin({}));\n  const currentBlogPosts = data.payload?.length > 5 ? data.payload : [...data.payload ?? [], ...data.payload ?? [], ...data.payload ?? []];\n  return /* @__PURE__ */ jsxs(Section, { hidden: !currentBlogPosts.length, containerClassName: s.container, children: [\n    /* @__PURE__ */ jsxs(Title, { className: s.mainTitle, order: 2, children: [\n      \"Узнать больше \",\n      /* @__PURE__ */ jsx(\"br\", {}),\n      \"в \",\n      /* @__PURE__ */ jsxs(\"a\", { href: \"/blog\", children: [\n        \"блоге \",\n        /* @__PURE__ */ jsx(ArrowUpRight, {})\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(Carousel, { loop: true, slideGap: \"lg\", withControls: false, plugins: [autoplay.current, wheel.current], slideSize: isMobile ? \"70%\" : 466, onMouseLeave: () => autoplay?.current?.play?.(), onPointerLeave: () => autoplay?.current?.play?.(), onPointerEnter: () => autoplay?.current?.stop?.(), children: currentBlogPosts.map((post, index) => /* @__PURE__ */ jsx(Carousel.Slide, { h: \"unset\", children: /* @__PURE__ */ jsx(Paper, { h: \"100%\", component: \"a\", href: `/blog/${post.id}`, withBorder: true, className: s.paper, children: /* @__PURE__ */ jsxs(Stack, { justify: \"space-between\", align: \"flex-start\", gap: \"md\", children: [\n      /* @__PURE__ */ jsx(Image, { width: 304, height: 304, src: post.image, className: s.image, alt: post.image_alt }),\n      /* @__PURE__ */ jsx(Title, { order: 5, className: s.cardTitle, children: post.title }),\n      /* @__PURE__ */ jsx(Text, { c: \"dark.2\", children: post.updated_at }),\n      /* @__PURE__ */ jsx(Box, { mah: 150, style: {\n        overflow: \"hidden\"\n      }, children: /* @__PURE__ */ jsx(Markdown, { options: {\n        overrides: {\n          p: (props) => /* @__PURE__ */ jsx(Text, { ...props, mah: 150, style: {\n            overflow: \"hidden\"\n          }, className: s.blogText, lineClamp: 6 }),\n          a: (props) => /* @__PURE__ */ jsx(Fragment, { children: props.children }),\n          blockquote: (props) => /* @__PURE__ */ jsx(Blockquote, { mah: 150, py: 0, style: {\n            overflow: \"hidden\"\n          }, mb: \"md\", px: \"md\", color: `violet.9`, bg: \"transparent\", icon: null, children: props.children })\n        }\n      }, children: post.body.data }) })\n    ] }) }) }, index)) })\n  ] });\n};\n",
      "start": 1746125696410,
      "end": 1746125696659,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/IndexPage/ui/MoreInBlog/index.tsx"],
        "sourcesContent": [
          "import { useRef } from 'react';\nimport { Carousel } from '@mantine/carousel';\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from '@mantine/core';\nimport { ArrowUpRight } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport AutoScroll from 'embla-carousel-auto-scroll';\nimport { WheelGesturesPlugin } from 'embla-carousel-wheel-gestures';\nimport Markdown from 'markdown-to-jsx';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { Section } from '@/shared/ui';\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport s from './MoreInBlog.module.css';\nexport const MoreInBlog = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const {\n    data\n  } = useUnit(getAllBlogPostsQuery);\n  const autoplay = useRef(AutoScroll({\n    playOnInit: true,\n    startDelay: 200,\n    stopOnMouseEnter: true,\n    stopOnInteraction: true,\n    active: true,\n    speed: 0.5,\n    direction: 'backward'\n  }));\n  const wheel = useRef(WheelGesturesPlugin({}));\n  const currentBlogPosts = data.payload?.length > 5 ? data.payload : [...(data.payload ?? []), ...(data.payload ?? []), ...(data.payload ?? [])];\n  return <Section hidden={!currentBlogPosts.length} containerClassName={s.container}>\n            <Title className={s.mainTitle} order={2}>\n                Узнать больше <br />\n                в&nbsp;\n                <a href='/blog'>\n                    блоге <ArrowUpRight />\n                </a>\n            </Title>\n            <Carousel loop slideGap='lg' withControls={false} plugins={[autoplay.current, wheel.current]} slideSize={isMobile ? '70%' : 466} onMouseLeave={() => autoplay?.current?.play?.()} onPointerLeave={() => autoplay?.current?.play?.()} onPointerEnter={() => autoplay?.current?.stop?.()}>\n                {currentBlogPosts.map((post, index) => <Carousel.Slide key={index} h='unset'>\n                        <Paper h='100%' component='a' href={`/blog/${post.id}`} withBorder className={s.paper}>\n                            <Stack justify='space-between' align='flex-start' gap='md'>\n                                <Image width={304} height={304} src={post.image} className={s.image} alt={post.image_alt} />\n                                <Title order={5} className={s.cardTitle}>\n                                    {post.title}\n                                </Title>\n                                <Text c='dark.2'>{post.updated_at}</Text>\n                                <Box mah={150} style={{\n              overflow: 'hidden'\n            }}>\n                                    <Markdown options={{\n                overrides: {\n                  p: props => <Text {...props} mah={150} style={{\n                    overflow: 'hidden'\n                  }} className={s.blogText} lineClamp={6} />,\n                  a: props => <>{props.children}</>,\n                  blockquote: props => <Blockquote mah={150} py={0} style={{\n                    overflow: 'hidden'\n                  }} mb='md' px='md' color={`violet.9`} bg='transparent' icon={null}>\n                                                        {props.children}\n                                                    </Blockquote>\n                }\n              }}>\n                                        {post.body.data}\n                                    </Markdown>\n                                </Box>\n                            </Stack>\n                        </Paper>\n                    </Carousel.Slide>)}\n            </Carousel>\n        </Section>;\n};"
        ],
        "mappings": "AAgC8B,SAuBA,UAvBA,KAEd,YAFc;AAhC9B,SAAS,cAAc;AACvB,SAAS,gBAAgB;AACzB,SAAS,YAAY,KAAK,OAAO,OAAO,OAAO,MAAM,aAAa;AAClE,SAAS,oBAAoB;AAC7B,SAAS,eAAe;AACxB,OAAO,gBAAgB;AACvB,SAAS,2BAA2B;AACpC,OAAO,cAAc;AACrB,SAAS,sBAAsB;AAC/B,SAAS,eAAe;AACxB,SAAS,4BAA4B;AACrC,OAAO,OAAO;AACP,aAAM,aAAa,MAAM;AAC9B,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,eAAe;AACnB,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,QAAQ,oBAAoB;AAChC,QAAM,WAAW,OAAO,WAAW;AAAA,IACjC,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,EACb,CAAC,CAAC;AACF,QAAM,QAAQ,OAAO,oBAAoB,CAAC,CAAC,CAAC;AAC5C,QAAM,mBAAmB,KAAK,SAAS,SAAS,IAAI,KAAK,UAAU,CAAC,GAAI,KAAK,WAAW,CAAC,GAAI,GAAI,KAAK,WAAW,CAAC,GAAI,GAAI,KAAK,WAAW,CAAC,CAAE;AAC7I,SAAO,qBAAC,WAAQ,QAAQ,CAAC,iBAAiB,QAAQ,oBAAoB,EAAE,WAC9D;AAAA,yBAAC,SAAM,WAAW,EAAE,WAAW,OAAO,GAAG;AAAA;AAAA,MACvB,oBAAC,QAAG;AAAA,MAAE;AAAA,MAEpB,qBAAC,OAAE,MAAK,SAAQ;AAAA;AAAA,QACN,oBAAC,gBAAa;AAAA,SACxB;AAAA,OACJ;AAAA,IACA,oBAAC,YAAS,MAAI,MAAC,UAAS,MAAK,cAAc,OAAO,SAAS,CAAC,SAAS,SAAS,MAAM,OAAO,GAAG,WAAW,WAAW,QAAQ,KAAK,cAAc,MAAM,UAAU,SAAS,OAAO,GAAG,gBAAgB,MAAM,UAAU,SAAS,OAAO,GAAG,gBAAgB,MAAM,UAAU,SAAS,OAAO,GAChR,2BAAiB,IAAI,CAAC,MAAM,UAAU,oBAAC,SAAS,OAAT,EAA2B,GAAE,SAC7D,8BAAC,SAAM,GAAE,QAAO,WAAU,KAAI,MAAM,SAAS,KAAK,EAAE,IAAI,YAAU,MAAC,WAAW,EAAE,OAC5E,+BAAC,SAAM,SAAQ,iBAAgB,OAAM,cAAa,KAAI,MAClD;AAAA,0BAAC,SAAM,OAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,OAAO,WAAW,EAAE,OAAO,KAAK,KAAK,WAAW;AAAA,MAC1F,oBAAC,SAAM,OAAO,GAAG,WAAW,EAAE,WACzB,eAAK,OACV;AAAA,MACA,oBAAC,QAAK,GAAE,UAAU,eAAK,YAAW;AAAA,MAClC,oBAAC,OAAI,KAAK,KAAK,OAAO;AAAA,QACxC,UAAU;AAAA,MACZ,GACwB,8BAAC,YAAS,SAAS;AAAA,QACvC,WAAW;AAAA,UACT,GAAG,WAAS,oBAAC,QAAM,GAAG,OAAO,KAAK,KAAK,OAAO;AAAA,YAC5C,UAAU;AAAA,UACZ,GAAG,WAAW,EAAE,UAAU,WAAW,GAAG;AAAA,UACxC,GAAG,WAAS,gCAAG,gBAAM,UAAS;AAAA,UAC9B,YAAY,WAAS,oBAAC,cAAW,KAAK,KAAK,IAAI,GAAG,OAAO;AAAA,YACvD,UAAU;AAAA,UACZ,GAAG,IAAG,MAAK,IAAG,MAAK,OAAO,YAAY,IAAG,eAAc,MAAM,MACtB,gBAAM,UACX;AAAA,QACpC;AAAA,MACF,GAC2B,eAAK,KAAK,MACf,GACJ;AAAA,OACJ,GACJ,KA5BoD,KA6BxD,CAAiB,GACzB;AAAA,KACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/pages/IndexPage/ui/MoreInBlog/index.tsx [vike:pluginModuleBanner] */\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { useRef } from \"react\";\nimport { Carousel } from \"@mantine/carousel\";\nimport { Blockquote, Box, Image, Paper, Stack, Text, Title } from \"@mantine/core\";\nimport { ArrowUpRight } from \"@phosphor-icons/react/dist/ssr\";\nimport { useUnit } from \"effector-react\";\nimport AutoScroll from \"embla-carousel-auto-scroll\";\nimport { WheelGesturesPlugin } from \"embla-carousel-wheel-gestures\";\nimport Markdown from \"markdown-to-jsx\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { Section } from \"@/shared/ui\";\nimport { getAllBlogPostsQuery } from \"@/entities/Blog\";\nimport s from \"./MoreInBlog.module.css\";\nexport const MoreInBlog = () => {\n  const {\n    isMobile\n  } = usePageContext();\n  const {\n    data\n  } = useUnit(getAllBlogPostsQuery);\n  const autoplay = useRef(AutoScroll({\n    playOnInit: true,\n    startDelay: 200,\n    stopOnMouseEnter: true,\n    stopOnInteraction: true,\n    active: true,\n    speed: 0.5,\n    direction: \"backward\"\n  }));\n  const wheel = useRef(WheelGesturesPlugin({}));\n  const currentBlogPosts = data.payload?.length > 5 ? data.payload : [...data.payload ?? [], ...data.payload ?? [], ...data.payload ?? []];\n  return /* @__PURE__ */ jsxs(Section, { hidden: !currentBlogPosts.length, containerClassName: s.container, children: [\n    /* @__PURE__ */ jsxs(Title, { className: s.mainTitle, order: 2, children: [\n      \"Узнать больше \",\n      /* @__PURE__ */ jsx(\"br\", {}),\n      \"в \",\n      /* @__PURE__ */ jsxs(\"a\", { href: \"/blog\", children: [\n        \"блоге \",\n        /* @__PURE__ */ jsx(ArrowUpRight, {})\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(Carousel, { loop: true, slideGap: \"lg\", withControls: false, plugins: [autoplay.current, wheel.current], slideSize: isMobile ? \"70%\" : 466, onMouseLeave: () => autoplay?.current?.play?.(), onPointerLeave: () => autoplay?.current?.play?.(), onPointerEnter: () => autoplay?.current?.stop?.(), children: currentBlogPosts.map((post, index) => /* @__PURE__ */ jsx(Carousel.Slide, { h: \"unset\", children: /* @__PURE__ */ jsx(Paper, { h: \"100%\", component: \"a\", href: `/blog/${post.id}`, withBorder: true, className: s.paper, children: /* @__PURE__ */ jsxs(Stack, { justify: \"space-between\", align: \"flex-start\", gap: \"md\", children: [\n      /* @__PURE__ */ jsx(Image, { width: 304, height: 304, src: post.image, className: s.image, alt: post.image_alt }),\n      /* @__PURE__ */ jsx(Title, { order: 5, className: s.cardTitle, children: post.title }),\n      /* @__PURE__ */ jsx(Text, { c: \"dark.2\", children: post.updated_at }),\n      /* @__PURE__ */ jsx(Box, { mah: 150, style: {\n        overflow: \"hidden\"\n      }, children: /* @__PURE__ */ jsx(Markdown, { options: {\n        overrides: {\n          p: (props) => /* @__PURE__ */ jsx(Text, { ...props, mah: 150, style: {\n            overflow: \"hidden\"\n          }, className: s.blogText, lineClamp: 6 }),\n          a: (props) => /* @__PURE__ */ jsx(Fragment, { children: props.children }),\n          blockquote: (props) => /* @__PURE__ */ jsx(Blockquote, { mah: 150, py: 0, style: {\n            overflow: \"hidden\"\n          }, mb: \"md\", px: \"md\", color: `violet.9`, bg: \"transparent\", icon: null, children: props.children })\n        }\n      }, children: post.body.data }) })\n    ] }) }) }, index)) })\n  ] });\n};\n",
      "start": 1746125696659,
      "end": 1746125696659,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/pages/IndexPage/ui/MoreInBlog/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxttB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

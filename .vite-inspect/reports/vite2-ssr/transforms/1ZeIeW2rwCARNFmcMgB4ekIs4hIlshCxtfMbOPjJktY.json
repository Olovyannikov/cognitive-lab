{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Root/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { invoke } from '@withease/factories';\nimport { createEvent, sample } from 'effector';\n\nimport { atom, disclosureFactory } from '@/shared/factories';\nimport { desktop } from '@/shared/media';\n\nexport const RootModel = atom(() => {\n    const MainMenu = invoke(disclosureFactory, {\n        open: false,\n    });\n    const Submenu = invoke(disclosureFactory, {\n        open: false,\n    });\n\n    const allMenusClosed = createEvent<false>();\n\n    sample({\n        clock: [allMenusClosed, desktop.$matches],\n        fn: () => false,\n        target: [MainMenu.$open, Submenu.$open],\n    });\n    sample({\n        clock: MainMenu.$open,\n        filter: (isOpen) => !isOpen,\n        target: Submenu.$open,\n    });\n\n    return {\n        $isMenuOpened: MainMenu.$open,\n        closeMenu: MainMenu.closed,\n        toggleMenu: MainMenu.toggle,\n        $isSubmenuOpened: Submenu.$open,\n        allMenusClosed,\n        openSubmenu: Submenu.opened,\n        closeSubmenu: Submenu.closed,\n    };\n});\n",
      "start": 1750271785227,
      "end": 1750271785241,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { invoke } from '@withease/factories';\nimport { createEvent, sample } from 'effector';\nimport { atom, disclosureFactory } from '@/shared/factories';\nimport { desktop } from '@/shared/media';\nexport const RootModel = _effector$factory({\n    sid: \"9dw06u10\",\n    fn: ()=>atom(()=>{\n            const MainMenu = _effector$factory({\n                sid: \"bi6ez88w\",\n                fn: ()=>invoke(disclosureFactory, {\n                        open: false\n                    })\n            });\n            const Submenu = _effector$factory({\n                sid: \"3l0ekbrq\",\n                fn: ()=>invoke(disclosureFactory, {\n                        open: false\n                    })\n            });\n            const allMenusClosed = createEvent({\n                sid: \"dknuxzxi\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            allMenusClosed,\n                            desktop.$matches\n                        ],\n                        fn: ()=>false,\n                        target: [\n                            MainMenu.$open,\n                            Submenu.$open\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4b0ccq3a\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: MainMenu.$open,\n                        filter: (isOpen)=>!isOpen,\n                        target: Submenu.$open\n                    }\n                ],\n                or: {\n                    sid: \"bn456wvo\"\n                }\n            });\n            return {\n                $isMenuOpened: MainMenu.$open,\n                closeMenu: MainMenu.closed,\n                toggleMenu: MainMenu.toggle,\n                $isSubmenuOpened: Submenu.$open,\n                allMenusClosed,\n                openSubmenu: Submenu.opened,\n                closeSubmenu: Submenu.closed\n            };\n        })\n});\n",
      "start": 1750271785241,
      "end": 1750271785244,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Root/model/index.ts\"],\"sourcesContent\":[\"import { invoke } from '@withease/factories';\\nimport { createEvent, sample } from 'effector';\\n\\nimport { atom, disclosureFactory } from '@/shared/factories';\\nimport { desktop } from '@/shared/media';\\n\\nexport const RootModel = atom(() => {\\n    const MainMenu = invoke(disclosureFactory, {\\n        open: false,\\n    });\\n    const Submenu = invoke(disclosureFactory, {\\n        open: false,\\n    });\\n\\n    const allMenusClosed = createEvent<false>();\\n\\n    sample({\\n        clock: [allMenusClosed, desktop.$matches],\\n        fn: () => false,\\n        target: [MainMenu.$open, Submenu.$open],\\n    });\\n    sample({\\n        clock: MainMenu.$open,\\n        filter: (isOpen) => !isOpen,\\n        target: Submenu.$open,\\n    });\\n\\n    return {\\n        $isMenuOpened: MainMenu.$open,\\n        closeMenu: MainMenu.closed,\\n        toggleMenu: MainMenu.toggle,\\n        $isSubmenuOpened: Submenu.$open,\\n        allMenusClosed,\\n        openSubmenu: Submenu.opened,\\n        closeSubmenu: Submenu.closed,\\n    };\\n});\\n\"],\"names\":[\"invoke\",\"createEvent\",\"sample\",\"atom\",\"disclosureFactory\",\"desktop\",\"RootModel\",\"MainMenu\",\"open\",\"Submenu\",\"allMenusClosed\",\"clock\",\"$matches\",\"fn\",\"target\",\"$open\",\"filter\",\"isOpen\",\"$isMenuOpened\",\"closeMenu\",\"closed\",\"toggleMenu\",\"toggle\",\"$isSubmenuOpened\",\"openSubmenu\",\"opened\",\"closeSubmenu\"],\"mappings\":\";AAAA,SAASA,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,WAAW,EAAEC,MAAM,QAAQ,WAAW;AAE/C,SAASC,IAAI,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC7D,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,OAAO,MAAMC;;YAAYH,KAAK;YAC1B,MAAMI;;wBAAWP,OAAOI,mBAAmB;wBACvCI,MAAM;oBACV;;YACA,MAAMC;;wBAAUT,OAAOI,mBAAmB;wBACtCI,MAAM;oBACV;;YAEA,MAAME,iBAAiBT;;;YAEvBC;;oBAAO;wBACHS,OAAO;4BAACD;4BAAgBL,QAAQO,QAAQ;yBAAC;wBACzCC,IAAI,IAAM;wBACVC,QAAQ;4BAACP,SAASQ,KAAK;4BAAEN,QAAQM,KAAK;yBAAC;oBAC3C;;;;;;YACAb;;oBAAO;wBACHS,OAAOJ,SAASQ,KAAK;wBACrBC,QAAQ,CAACC,SAAW,CAACA;wBACrBH,QAAQL,QAAQM,KAAK;oBACzB;;;;;;YAEA,OAAO;gBACHG,eAAeX,SAASQ,KAAK;gBAC7BI,WAAWZ,SAASa,MAAM;gBAC1BC,YAAYd,SAASe,MAAM;gBAC3BC,kBAAkBd,QAAQM,KAAK;gBAC/BL;gBACAc,aAAaf,QAAQgB,MAAM;gBAC3BC,cAAcjB,QAAQW,MAAM;YAChC;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { invoke } from \"@withease/factories\";\nimport { createEvent, sample } from \"effector\";\nimport { atom, disclosureFactory } from \"@/shared/factories\";\nimport { desktop } from \"@/shared/media\";\nexport const RootModel = _effector$factory({\n  sid: \"9dw06u10\",\n  fn: () => atom(() => {\n    const MainMenu = _effector$factory({\n      sid: \"bi6ez88w\",\n      fn: () => invoke(disclosureFactory, {\n        open: false\n      })\n    });\n    const Submenu = _effector$factory({\n      sid: \"3l0ekbrq\",\n      fn: () => invoke(disclosureFactory, {\n        open: false\n      })\n    });\n    const allMenusClosed = createEvent({\n      sid: \"dknuxzxi\"\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            allMenusClosed,\n            desktop.$matches\n          ],\n          fn: () => false,\n          target: [\n            MainMenu.$open,\n            Submenu.$open\n          ]\n        }\n      ],\n      or: {\n        sid: \"4b0ccq3a\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: MainMenu.$open,\n          filter: (isOpen) => !isOpen,\n          target: Submenu.$open\n        }\n      ],\n      or: {\n        sid: \"bn456wvo\"\n      }\n    });\n    return {\n      $isMenuOpened: MainMenu.$open,\n      closeMenu: MainMenu.closed,\n      toggleMenu: MainMenu.toggle,\n      $isSubmenuOpened: Submenu.$open,\n      allMenusClosed,\n      openSubmenu: Submenu.opened,\n      closeSubmenu: Submenu.closed\n    };\n  })\n});\n",
      "start": 1750271785244,
      "end": 1750271785341,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Root/model/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { invoke } from '@withease/factories';\nimport { createEvent, sample } from 'effector';\nimport { atom, disclosureFactory } from '@/shared/factories';\nimport { desktop } from '@/shared/media';\nexport const RootModel = _effector$factory({\n    sid: \"9dw06u10\",\n    fn: ()=>atom(()=>{\n            const MainMenu = _effector$factory({\n                sid: \"bi6ez88w\",\n                fn: ()=>invoke(disclosureFactory, {\n                        open: false\n                    })\n            });\n            const Submenu = _effector$factory({\n                sid: \"3l0ekbrq\",\n                fn: ()=>invoke(disclosureFactory, {\n                        open: false\n                    })\n            });\n            const allMenusClosed = createEvent({\n                sid: \"dknuxzxi\"\n            });\n            sample({\n                and: [\n                    {\n                        clock: [\n                            allMenusClosed,\n                            desktop.$matches\n                        ],\n                        fn: ()=>false,\n                        target: [\n                            MainMenu.$open,\n                            Submenu.$open\n                        ]\n                    }\n                ],\n                or: {\n                    sid: \"4b0ccq3a\"\n                }\n            });\n            sample({\n                and: [\n                    {\n                        clock: MainMenu.$open,\n                        filter: (isOpen)=>!isOpen,\n                        target: Submenu.$open\n                    }\n                ],\n                or: {\n                    sid: \"bn456wvo\"\n                }\n            });\n            return {\n                $isMenuOpened: MainMenu.$open,\n                closeMenu: MainMenu.closed,\n                toggleMenu: MainMenu.toggle,\n                $isSubmenuOpened: Submenu.$open,\n                allMenusClosed,\n                openSubmenu: Submenu.opened,\n                closeSubmenu: Submenu.closed\n            };\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,cAAc;AACvB,SAAS,aAAa,cAAc;AACpC,SAAS,MAAM,yBAAyB;AACxC,SAAS,eAAe;AACjB,aAAM,YAAY,kBAAkB;AAAA,EACvC,KAAK;AAAA,EACL,IAAI,MAAI,KAAK,MAAI;AACT,UAAM,WAAW,kBAAkB;AAAA,MAC/B,KAAK;AAAA,MACL,IAAI,MAAI,OAAO,mBAAmB;AAAA,QAC1B,MAAM;AAAA,MACV,CAAC;AAAA,IACT,CAAC;AACD,UAAM,UAAU,kBAAkB;AAAA,MAC9B,KAAK;AAAA,MACL,IAAI,MAAI,OAAO,mBAAmB;AAAA,QAC1B,MAAM;AAAA,MACV,CAAC;AAAA,IACT,CAAC;AACD,UAAM,iBAAiB,YAAY;AAAA,MAC/B,KAAK;AAAA,IACT,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO;AAAA,YACH;AAAA,YACA,QAAQ;AAAA,UACZ;AAAA,UACA,IAAI,MAAI;AAAA,UACR,QAAQ;AAAA,YACJ,SAAS;AAAA,YACT,QAAQ;AAAA,UACZ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH,KAAK;AAAA,QACD;AAAA,UACI,OAAO,SAAS;AAAA,UAChB,QAAQ,CAAC,WAAS,CAAC;AAAA,UACnB,QAAQ,QAAQ;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,QACA,KAAK;AAAA,MACT;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,MACH,eAAe,SAAS;AAAA,MACxB,WAAW,SAAS;AAAA,MACpB,YAAY,SAAS;AAAA,MACrB,kBAAkB,QAAQ;AAAA,MAC1B;AAAA,MACA,aAAa,QAAQ;AAAA,MACrB,cAAc,QAAQ;AAAA,IAC1B;AAAA,EACJ,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Root/model/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { invoke } from \"@withease/factories\";\nimport { createEvent, sample } from \"effector\";\nimport { atom, disclosureFactory } from \"@/shared/factories\";\nimport { desktop } from \"@/shared/media\";\nexport const RootModel = _effector$factory({\n  sid: \"9dw06u10\",\n  fn: () => atom(() => {\n    const MainMenu = _effector$factory({\n      sid: \"bi6ez88w\",\n      fn: () => invoke(disclosureFactory, {\n        open: false\n      })\n    });\n    const Submenu = _effector$factory({\n      sid: \"3l0ekbrq\",\n      fn: () => invoke(disclosureFactory, {\n        open: false\n      })\n    });\n    const allMenusClosed = createEvent({\n      sid: \"dknuxzxi\"\n    });\n    sample({\n      and: [\n        {\n          clock: [\n            allMenusClosed,\n            desktop.$matches\n          ],\n          fn: () => false,\n          target: [\n            MainMenu.$open,\n            Submenu.$open\n          ]\n        }\n      ],\n      or: {\n        sid: \"4b0ccq3a\"\n      }\n    });\n    sample({\n      and: [\n        {\n          clock: MainMenu.$open,\n          filter: (isOpen) => !isOpen,\n          target: Submenu.$open\n        }\n      ],\n      or: {\n        sid: \"bn456wvo\"\n      }\n    });\n    return {\n      $isMenuOpened: MainMenu.$open,\n      closeMenu: MainMenu.closed,\n      toggleMenu: MainMenu.toggle,\n      $isSubmenuOpened: Submenu.$open,\n      allMenusClosed,\n      openSubmenu: Submenu.opened,\n      closeSubmenu: Submenu.closed\n    };\n  })\n});\n",
      "start": 1750271785341,
      "end": 1750271785341,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Root/model/index.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

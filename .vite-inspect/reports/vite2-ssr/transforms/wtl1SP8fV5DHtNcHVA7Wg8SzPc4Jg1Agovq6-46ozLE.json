{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/api/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createMutation } from '@farfetched/core';\n\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\n\nexport const sendFreeReportOnEmailMutation = createMutation({\n    effect: createInternalRequestFx<{ email: string; user_report_id: string }, void>(({ user_report_id, ...body }) => ({\n        url: API.surveys.email(user_report_id),\n        method: HTTP_METHODS.POST,\n        body,\n    })),\n});\n",
      "start": 1750271784885,
      "end": 1750271784909,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createMutation } from '@farfetched/core';\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\nexport const sendFreeReportOnEmailMutation = _effector$factory({\n    sid: \"91c3v7tp\",\n    fn: ()=>createMutation({\n            effect: createInternalRequestFx(({ user_report_id, ...body })=>({\n                    url: API.surveys.email(user_report_id),\n                    method: HTTP_METHODS.POST,\n                    body\n                }))\n        })\n});\n",
      "start": 1750271784909,
      "end": 1750271784931,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/api/index.ts\"],\"sourcesContent\":[\"import { createMutation } from '@farfetched/core';\\n\\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\\n\\nexport const sendFreeReportOnEmailMutation = createMutation({\\n    effect: createInternalRequestFx<{ email: string; user_report_id: string }, void>(({ user_report_id, ...body }) => ({\\n        url: API.surveys.email(user_report_id),\\n        method: HTTP_METHODS.POST,\\n        body,\\n    })),\\n});\\n\"],\"names\":[\"createMutation\",\"API\",\"createInternalRequestFx\",\"HTTP_METHODS\",\"sendFreeReportOnEmailMutation\",\"effect\",\"user_report_id\",\"body\",\"url\",\"surveys\",\"email\",\"method\",\"POST\"],\"mappings\":\";AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAElD,SAASC,GAAG,EAAEC,uBAAuB,EAAEC,YAAY,QAAQ,eAAe;AAE1E,OAAO,MAAMC;;YAAgCJ,eAAe;YACxDK,QAAQH,wBAAyE,CAAC,EAAEI,cAAc,EAAE,GAAGC,MAAM,GAAM,CAAA;oBAC/GC,KAAKP,IAAIQ,OAAO,CAACC,KAAK,CAACJ;oBACvBK,QAAQR,aAAaS,IAAI;oBACzBL;gBACJ,CAAA;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createMutation } from \"@farfetched/core\";\nimport { API, createInternalRequestFx, HTTP_METHODS } from \"@/shared/api\";\nexport const sendFreeReportOnEmailMutation = _effector$factory({\n  sid: \"91c3v7tp\",\n  fn: () => createMutation({\n    effect: createInternalRequestFx(({ user_report_id, ...body }) => ({\n      url: API.surveys.email(user_report_id),\n      method: HTTP_METHODS.POST,\n      body\n    }))\n  })\n});\n",
      "start": 1750271784931,
      "end": 1750271785052,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/features/SendReportEmail/api/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createMutation } from '@farfetched/core';\nimport { API, createInternalRequestFx, HTTP_METHODS } from '@/shared/api';\nexport const sendFreeReportOnEmailMutation = _effector$factory({\n    sid: \"91c3v7tp\",\n    fn: ()=>createMutation({\n            effect: createInternalRequestFx(({ user_report_id, ...body })=>({\n                    url: API.surveys.email(user_report_id),\n                    method: HTTP_METHODS.POST,\n                    body\n                }))\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,sBAAsB;AAC/B,SAAS,KAAK,yBAAyB,oBAAoB;AACpD,aAAM,gCAAgC,kBAAkB;AAAA,EAC3D,KAAK;AAAA,EACL,IAAI,MAAI,eAAe;AAAA,IACf,QAAQ,wBAAwB,CAAC,EAAE,gBAAgB,GAAG,KAAK,OAAK;AAAA,MACxD,KAAK,IAAI,QAAQ,MAAM,cAAc;AAAA,MACrC,QAAQ,aAAa;AAAA,MACrB;AAAA,IACJ,EAAE;AAAA,EACV,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/features/SendReportEmail/api/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createMutation } from \"@farfetched/core\";\nimport { API, createInternalRequestFx, HTTP_METHODS } from \"@/shared/api\";\nexport const sendFreeReportOnEmailMutation = _effector$factory({\n  sid: \"91c3v7tp\",\n  fn: () => createMutation({\n    effect: createInternalRequestFx(({ user_report_id, ...body }) => ({\n      url: API.surveys.email(user_report_id),\n      method: HTTP_METHODS.POST,\n      body\n    }))\n  })\n});\n",
      "start": 1750271785052,
      "end": 1750271785052,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/features/SendReportEmail/api/index.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

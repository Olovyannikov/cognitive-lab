{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/ui/TestSingleChoiceQuestion/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useEffect } from 'react';\nimport { Paper, Radio, Stack } from '@mantine/core';\n\nimport { useIsLarge } from '@/shared/lib';\nimport { InputBorderless } from '@/shared/ui';\n\nimport type { QuestionsResponse } from '../../api/dto';\nimport { SingleChoiceAnswer } from '../../api/types';\nimport { AnswerLabel } from '../AnswerLabel';\nimport { QuestionTitle } from '../TestQuestionTitle';\n\nimport s from './TestSingleChoiceQuestion.module.css';\n\ninterface TestSingleChoiceQuestionProps extends QuestionsResponse {\n    value: SingleChoiceAnswer;\n    onChange: (payload: {\n        question: string;\n        answer: { input?: string; value: string };\n        index: number;\n        isSingle?: boolean;\n        showInput?: boolean;\n    }) => void;\n    page: number;\n    showInput: boolean;\n}\n\nexport const TestSingleChoiceQuestion = ({\n    text,\n    hint,\n    id,\n    value,\n    onChange,\n    page,\n    options,\n    showInput,\n}: TestSingleChoiceQuestionProps) => {\n    const isLarge = useIsLarge();\n\n    useEffect(() => {\n        if (!showInput) {\n            onChange({\n                question: id,\n                answer: {\n                    value: value?.value,\n                },\n                index: page - 1,\n                isSingle: true,\n                showInput,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [showInput]);\n\n    return (\n        <Paper mb='5xl'>\n            <QuestionTitle text={text} hint={hint} />\n            <Stack gap='xs' className={s.stack}>\n                <Radio.Group\n                    name={id}\n                    value={value?.value ?? ''}\n                    onChange={(localVal) => {\n                        onChange({\n                            question: id,\n                            answer: {\n                                value: localVal,\n                                input: showInput && value?.input ? value.input.trim() : ' '.trim(),\n                            },\n                            index: page - 1,\n                            isSingle: true,\n                            showInput: options?.find((el) => el.id === localVal)?.requires_input,\n                        });\n                    }}\n                >\n                    <Stack gap='lg' className={s.wrapper}>\n                        {options?.map((option) => (\n                            <Radio\n                                color='lime.8'\n                                key={option.id}\n                                value={option.id}\n                                size={isLarge ? 'xl' : 'lg'}\n                                label={<AnswerLabel>{option.text}</AnswerLabel>}\n                            />\n                        ))}\n                    </Stack>\n                </Radio.Group>\n                {showInput && (\n                    <InputBorderless\n                        autoFocus\n                        value={value?.input}\n                        defaultValue={value?.input}\n                        onChange={(e) => {\n                            onChange({\n                                question: id,\n                                answer: {\n                                    value: value.value,\n                                    input: e.target.value ?? ' ',\n                                },\n                                index: page - 1,\n                                isSingle: true,\n                                showInput,\n                            });\n                        }}\n                    />\n                )}\n            </Stack>\n        </Paper>\n    );\n};\n",
      "start": 1750105187928,
      "end": 1750105187974,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useEffect } from 'react';\nimport { Paper, Radio, Stack } from '@mantine/core';\nimport { useIsLarge } from '@/shared/lib';\nimport { InputBorderless } from '@/shared/ui';\nimport type { QuestionsResponse } from '../../api/dto';\nimport { SingleChoiceAnswer } from '../../api/types';\nimport { AnswerLabel } from '../AnswerLabel';\nimport { QuestionTitle } from '../TestQuestionTitle';\nimport s from './TestSingleChoiceQuestion.module.css';\ninterface TestSingleChoiceQuestionProps extends QuestionsResponse {\n  value: SingleChoiceAnswer;\n  onChange: (payload: {\n    question: string;\n    answer: {\n      input?: string;\n      value: string;\n    };\n    index: number;\n    isSingle?: boolean;\n    showInput?: boolean;\n  }) => void;\n  page: number;\n  showInput: boolean;\n}\nexport const TestSingleChoiceQuestion = ({\n  text,\n  hint,\n  id,\n  value,\n  onChange,\n  page,\n  options,\n  showInput\n}: TestSingleChoiceQuestionProps) => {\n  const isLarge = useIsLarge();\n  useEffect(() => {\n    if (!showInput) {\n      onChange({\n        question: id,\n        answer: {\n          value: value?.value\n        },\n        index: page - 1,\n        isSingle: true,\n        showInput\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showInput]);\n  return <Paper mb='5xl'>\n            <QuestionTitle text={text} hint={hint} />\n            <Stack gap='xs' className={s.stack}>\n                <Radio.Group name={id} value={value?.value ?? ''} onChange={localVal => {\n        onChange({\n          question: id,\n          answer: {\n            value: localVal,\n            input: showInput && value?.input ? value.input.trim() : ' '.trim()\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput: options?.find(el => el.id === localVal)?.requires_input\n        });\n      }}>\n                    <Stack gap='lg' className={s.wrapper}>\n                        {options?.map(option => <Radio color='lime.8' key={option.id} value={option.id} size={isLarge ? 'xl' : 'lg'} label={<AnswerLabel>{option.text}</AnswerLabel>} />)}\n                    </Stack>\n                </Radio.Group>\n                {showInput && <InputBorderless autoFocus value={value?.input} defaultValue={value?.input} onChange={e => {\n        onChange({\n          question: id,\n          answer: {\n            value: value.value,\n            input: e.target.value ?? ' '\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput\n        });\n      }} />}\n            </Stack>\n        </Paper>;\n};",
      "start": 1750105187974,
      "end": 1750105187976,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useEffect",
          "Paper",
          "Radio",
          "Stack",
          "useIsLarge",
          "InputBorderless",
          "QuestionsResponse",
          "SingleChoiceAnswer",
          "AnswerLabel",
          "QuestionTitle",
          "s",
          "TestSingleChoiceQuestionProps",
          "value",
          "onChange",
          "payload",
          "question",
          "answer",
          "input",
          "index",
          "isSingle",
          "showInput",
          "page",
          "TestSingleChoiceQuestion",
          "text",
          "hint",
          "id",
          "options",
          "isLarge",
          "stack",
          "localVal",
          "trim",
          "find",
          "el",
          "requires_input",
          "wrapper",
          "map",
          "option",
          "e",
          "target"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/ui/TestSingleChoiceQuestion/index.tsx"
        ],
        "sourcesContent": [
          "import { useEffect } from 'react';\nimport { Paper, Radio, Stack } from '@mantine/core';\n\nimport { useIsLarge } from '@/shared/lib';\nimport { InputBorderless } from '@/shared/ui';\n\nimport type { QuestionsResponse } from '../../api/dto';\nimport { SingleChoiceAnswer } from '../../api/types';\nimport { AnswerLabel } from '../AnswerLabel';\nimport { QuestionTitle } from '../TestQuestionTitle';\n\nimport s from './TestSingleChoiceQuestion.module.css';\n\ninterface TestSingleChoiceQuestionProps extends QuestionsResponse {\n    value: SingleChoiceAnswer;\n    onChange: (payload: {\n        question: string;\n        answer: { input?: string; value: string };\n        index: number;\n        isSingle?: boolean;\n        showInput?: boolean;\n    }) => void;\n    page: number;\n    showInput: boolean;\n}\n\nexport const TestSingleChoiceQuestion = ({\n    text,\n    hint,\n    id,\n    value,\n    onChange,\n    page,\n    options,\n    showInput,\n}: TestSingleChoiceQuestionProps) => {\n    const isLarge = useIsLarge();\n\n    useEffect(() => {\n        if (!showInput) {\n            onChange({\n                question: id,\n                answer: {\n                    value: value?.value,\n                },\n                index: page - 1,\n                isSingle: true,\n                showInput,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [showInput]);\n\n    return (\n        <Paper mb='5xl'>\n            <QuestionTitle text={text} hint={hint} />\n            <Stack gap='xs' className={s.stack}>\n                <Radio.Group\n                    name={id}\n                    value={value?.value ?? ''}\n                    onChange={(localVal) => {\n                        onChange({\n                            question: id,\n                            answer: {\n                                value: localVal,\n                                input: showInput && value?.input ? value.input.trim() : ' '.trim(),\n                            },\n                            index: page - 1,\n                            isSingle: true,\n                            showInput: options?.find((el) => el.id === localVal)?.requires_input,\n                        });\n                    }}\n                >\n                    <Stack gap='lg' className={s.wrapper}>\n                        {options?.map((option) => (\n                            <Radio\n                                color='lime.8'\n                                key={option.id}\n                                value={option.id}\n                                size={isLarge ? 'xl' : 'lg'}\n                                label={<AnswerLabel>{option.text}</AnswerLabel>}\n                            />\n                        ))}\n                    </Stack>\n                </Radio.Group>\n                {showInput && (\n                    <InputBorderless\n                        autoFocus\n                        value={value?.input}\n                        defaultValue={value?.input}\n                        onChange={(e) => {\n                            onChange({\n                                question: id,\n                                answer: {\n                                    value: value.value,\n                                    input: e.target.value ?? ' ',\n                                },\n                                index: page - 1,\n                                isSingle: true,\n                                showInput,\n                            });\n                        }}\n                    />\n                )}\n            </Stack>\n        </Paper>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { Paper, Radio, Stack } from \"@mantine/core\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { InputBorderless } from \"@/shared/ui\";\nimport { AnswerLabel } from \"../AnswerLabel\";\nimport { QuestionTitle } from \"../TestQuestionTitle\";\nimport s from \"./TestSingleChoiceQuestion.module.css\";\nexport const TestSingleChoiceQuestion = ({\n  text,\n  hint,\n  id,\n  value,\n  onChange,\n  page,\n  options,\n  showInput\n}) => {\n  const isLarge = useIsLarge();\n  useEffect(() => {\n    if (!showInput) {\n      onChange({\n        question: id,\n        answer: {\n          value: value?.value\n        },\n        index: page - 1,\n        isSingle: true,\n        showInput\n      });\n    }\n  }, [showInput]);\n  return /* @__PURE__ */ jsxs(Paper, { mb: \"5xl\", children: [\n    /* @__PURE__ */ jsx(QuestionTitle, { text, hint }),\n    /* @__PURE__ */ jsxs(Stack, { gap: \"xs\", className: s.stack, children: [\n      /* @__PURE__ */ jsx(Radio.Group, { name: id, value: value?.value ?? \"\", onChange: (localVal) => {\n        onChange({\n          question: id,\n          answer: {\n            value: localVal,\n            input: showInput && value?.input ? value.input.trim() : \" \".trim()\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput: options?.find((el) => el.id === localVal)?.requires_input\n        });\n      }, children: /* @__PURE__ */ jsx(Stack, { gap: \"lg\", className: s.wrapper, children: options?.map((option) => /* @__PURE__ */ jsx(Radio, { color: \"lime.8\", value: option.id, size: isLarge ? \"xl\" : \"lg\", label: /* @__PURE__ */ jsx(AnswerLabel, { children: option.text }) }, option.id)) }) }),\n      showInput && /* @__PURE__ */ jsx(InputBorderless, { autoFocus: true, value: value?.input, defaultValue: value?.input, onChange: (e) => {\n        onChange({\n          question: id,\n          answer: {\n            value: value.value,\n            input: e.target.value ?? \" \"\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput\n        });\n      } })\n    ] })\n  ] });\n};\n",
      "start": 1750105187976,
      "end": 1750105188248,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/ui/TestSingleChoiceQuestion/index.tsx"
        ],
        "sourcesContent": [
          "import { useEffect } from 'react';\nimport { Paper, Radio, Stack } from '@mantine/core';\nimport { useIsLarge } from '@/shared/lib';\nimport { InputBorderless } from '@/shared/ui';\nimport type { QuestionsResponse } from '../../api/dto';\nimport { SingleChoiceAnswer } from '../../api/types';\nimport { AnswerLabel } from '../AnswerLabel';\nimport { QuestionTitle } from '../TestQuestionTitle';\nimport s from './TestSingleChoiceQuestion.module.css';\ninterface TestSingleChoiceQuestionProps extends QuestionsResponse {\n  value: SingleChoiceAnswer;\n  onChange: (payload: {\n    question: string;\n    answer: {\n      input?: string;\n      value: string;\n    };\n    index: number;\n    isSingle?: boolean;\n    showInput?: boolean;\n  }) => void;\n  page: number;\n  showInput: boolean;\n}\nexport const TestSingleChoiceQuestion = ({\n  text,\n  hint,\n  id,\n  value,\n  onChange,\n  page,\n  options,\n  showInput\n}: TestSingleChoiceQuestionProps) => {\n  const isLarge = useIsLarge();\n  useEffect(() => {\n    if (!showInput) {\n      onChange({\n        question: id,\n        answer: {\n          value: value?.value\n        },\n        index: page - 1,\n        isSingle: true,\n        showInput\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showInput]);\n  return <Paper mb='5xl'>\n            <QuestionTitle text={text} hint={hint} />\n            <Stack gap='xs' className={s.stack}>\n                <Radio.Group name={id} value={value?.value ?? ''} onChange={localVal => {\n        onChange({\n          question: id,\n          answer: {\n            value: localVal,\n            input: showInput && value?.input ? value.input.trim() : ' '.trim()\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput: options?.find(el => el.id === localVal)?.requires_input\n        });\n      }}>\n                    <Stack gap='lg' className={s.wrapper}>\n                        {options?.map(option => <Radio color='lime.8' key={option.id} value={option.id} size={isLarge ? 'xl' : 'lg'} label={<AnswerLabel>{option.text}</AnswerLabel>} />)}\n                    </Stack>\n                </Radio.Group>\n                {showInput && <InputBorderless autoFocus value={value?.input} defaultValue={value?.input} onChange={e => {\n        onChange({\n          question: id,\n          answer: {\n            value: value.value,\n            input: e.target.value ?? ' '\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput\n        });\n      }} />}\n            </Stack>\n        </Paper>;\n};"
        ],
        "mappings": "AAkDY,cACA,YADA;AAlDZ,SAAS,iBAAiB;AAC1B,SAAS,OAAO,OAAO,aAAa;AACpC,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAGhC,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,OAAO,OAAO;AAgBP,aAAM,2BAA2B,CAAC;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAqC;AACnC,QAAM,UAAU,WAAW;AAC3B,YAAU,MAAM;AACd,QAAI,CAAC,WAAW;AACd,eAAS;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,UACN,OAAO,OAAO;AAAA,QAChB;AAAA,QACA,OAAO,OAAO;AAAA,QACd,UAAU;AAAA,QACV;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EAEF,GAAG,CAAC,SAAS,CAAC;AACd,SAAO,qBAAC,SAAM,IAAG,OACP;AAAA,wBAAC,iBAAc,MAAY,MAAY;AAAA,IACvC,qBAAC,SAAM,KAAI,MAAK,WAAW,EAAE,OACzB;AAAA,0BAAC,MAAM,OAAN,EAAY,MAAM,IAAI,OAAO,OAAO,SAAS,IAAI,UAAU,cAAY;AAChF,iBAAS;AAAA,UACP,UAAU;AAAA,UACV,QAAQ;AAAA,YACN,OAAO;AAAA,YACP,OAAO,aAAa,OAAO,QAAQ,MAAM,MAAM,KAAK,IAAI,IAAI,KAAK;AAAA,UACnE;AAAA,UACA,OAAO,OAAO;AAAA,UACd,UAAU;AAAA,UACV,WAAW,SAAS,KAAK,QAAM,GAAG,OAAO,QAAQ,GAAG;AAAA,QACtD,CAAC;AAAA,MACH,GACc,8BAAC,SAAM,KAAI,MAAK,WAAW,EAAE,SACxB,mBAAS,IAAI,YAAU,oBAAC,SAAM,OAAM,UAAyB,OAAO,OAAO,IAAI,MAAM,UAAU,OAAO,MAAM,OAAO,oBAAC,eAAa,iBAAO,MAAK,KAA3F,OAAO,EAAoG,CAAE,GACpK,GACJ;AAAA,MACC,aAAa,oBAAC,mBAAgB,WAAS,MAAC,OAAO,OAAO,OAAO,cAAc,OAAO,OAAO,UAAU,OAAK;AACjH,iBAAS;AAAA,UACP,UAAU;AAAA,UACV,QAAQ;AAAA,YACN,OAAO,MAAM;AAAA,YACb,OAAO,EAAE,OAAO,SAAS;AAAA,UAC3B;AAAA,UACA,OAAO,OAAO;AAAA,UACd,UAAU;AAAA,UACV;AAAA,QACF,CAAC;AAAA,MACH,GAAG;AAAA,OACG;AAAA,KACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Test/ui/TestSingleChoiceQuestion/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { Paper, Radio, Stack } from \"@mantine/core\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { InputBorderless } from \"@/shared/ui\";\nimport { AnswerLabel } from \"../AnswerLabel\";\nimport { QuestionTitle } from \"../TestQuestionTitle\";\nimport s from \"./TestSingleChoiceQuestion.module.css\";\nexport const TestSingleChoiceQuestion = ({\n  text,\n  hint,\n  id,\n  value,\n  onChange,\n  page,\n  options,\n  showInput\n}) => {\n  const isLarge = useIsLarge();\n  useEffect(() => {\n    if (!showInput) {\n      onChange({\n        question: id,\n        answer: {\n          value: value?.value\n        },\n        index: page - 1,\n        isSingle: true,\n        showInput\n      });\n    }\n  }, [showInput]);\n  return /* @__PURE__ */ jsxs(Paper, { mb: \"5xl\", children: [\n    /* @__PURE__ */ jsx(QuestionTitle, { text, hint }),\n    /* @__PURE__ */ jsxs(Stack, { gap: \"xs\", className: s.stack, children: [\n      /* @__PURE__ */ jsx(Radio.Group, { name: id, value: value?.value ?? \"\", onChange: (localVal) => {\n        onChange({\n          question: id,\n          answer: {\n            value: localVal,\n            input: showInput && value?.input ? value.input.trim() : \" \".trim()\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput: options?.find((el) => el.id === localVal)?.requires_input\n        });\n      }, children: /* @__PURE__ */ jsx(Stack, { gap: \"lg\", className: s.wrapper, children: options?.map((option) => /* @__PURE__ */ jsx(Radio, { color: \"lime.8\", value: option.id, size: isLarge ? \"xl\" : \"lg\", label: /* @__PURE__ */ jsx(AnswerLabel, { children: option.text }) }, option.id)) }) }),\n      showInput && /* @__PURE__ */ jsx(InputBorderless, { autoFocus: true, value: value?.input, defaultValue: value?.input, onChange: (e) => {\n        onChange({\n          question: id,\n          answer: {\n            value: value.value,\n            input: e.target.value ?? \" \"\n          },\n          index: page - 1,\n          isSingle: true,\n          showInput\n        });\n      } })\n    ] })\n  ] });\n};\n",
      "start": 1750105188248,
      "end": 1750105188248,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "src/entities/Test/ui/TestSingleChoiceQuestion/index.tsx"
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjttG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxxS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7I,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

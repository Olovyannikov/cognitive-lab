{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/CTA/ui/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Flex } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { getPersonalityTypeQuery } from '@/entities/Report';\nimport { UserModel } from '@/entities/User';\n\nimport { BuyNowButton } from '@/features/BuyNowButton';\nimport { NavigateToFullStructureTemplate } from '@/features/NavigateToFullStructureTemplate';\nimport { RedirectToTestPage } from '@/features/RedirectToTestPage';\nimport { TakeTestAgain } from '@/features/TakeTestAgain';\n\nimport s from './CTA.module.css';\n\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n    const { data } = useUnit(getPersonalityTypeQuery);\n\n    return (\n        <Flex className={s.actions}>\n            <BuyNowButton mbti={data?.mbti_type} />\n            <NavigateToFullStructureTemplate />\n        </Flex>\n    );\n};\n\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => (\n    <Flex className={s.actions}>\n        <RedirectToTestPage />\n        <NavigateToFullStructureTemplate />\n    </Flex>\n);\n\nexport const BuyNowOrRedirectToTestPageAction = () => {\n    const { routeParams } = usePageContext();\n\n    return (\n        <Flex className={s.actions}>\n            <RedirectToTestPage />\n            <BuyNowButton mbti={routeParams?.type ?? ' '} variant='default' bg='transparent' />\n        </Flex>\n    );\n};\n\nexport const TakeTestAgainOrBuyReportAction = () => {\n    const surveyId = useUnit(UserModel.$surveyId);\n    const {\n        routeParams: { reportId },\n    } = usePageContext();\n\n    return (\n        <Flex className={s.actions}>\n            {(reportId ?? surveyId) && <BuyNowButton showIcon survey={reportId ?? surveyId} />}\n            <TakeTestAgain />\n        </Flex>\n    );\n};\n",
      "start": 1746125696204,
      "end": 1746125696248,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Flex } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { getPersonalityTypeQuery } from '@/entities/Report';\nimport { UserModel } from '@/entities/User';\nimport { BuyNowButton } from '@/features/BuyNowButton';\nimport { NavigateToFullStructureTemplate } from '@/features/NavigateToFullStructureTemplate';\nimport { RedirectToTestPage } from '@/features/RedirectToTestPage';\nimport { TakeTestAgain } from '@/features/TakeTestAgain';\nimport s from './CTA.module.css';\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n  const {\n    data\n  } = useUnit(getPersonalityTypeQuery);\n  return <Flex className={s.actions}>\n            <BuyNowButton mbti={data?.mbti_type} />\n            <NavigateToFullStructureTemplate />\n        </Flex>;\n};\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => <Flex className={s.actions}>\n        <RedirectToTestPage />\n        <NavigateToFullStructureTemplate />\n    </Flex>;\nexport const BuyNowOrRedirectToTestPageAction = () => {\n  const {\n    routeParams\n  } = usePageContext();\n  return <Flex className={s.actions}>\n            <RedirectToTestPage />\n            <BuyNowButton mbti={routeParams?.type ?? ' '} variant='default' bg='transparent' />\n        </Flex>;\n};\nexport const TakeTestAgainOrBuyReportAction = () => {\n  const surveyId = useUnit(UserModel.$surveyId);\n  const {\n    routeParams: {\n      reportId\n    }\n  } = usePageContext();\n  return <Flex className={s.actions}>\n            {(reportId ?? surveyId) && <BuyNowButton showIcon survey={reportId ?? surveyId} />}\n            <TakeTestAgain />\n        </Flex>;\n};",
      "start": 1746125696248,
      "end": 1746125696253,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Flex",
          "useUnit",
          "usePageContext",
          "getPersonalityTypeQuery",
          "UserModel",
          "BuyNowButton",
          "NavigateToFullStructureTemplate",
          "RedirectToTestPage",
          "TakeTestAgain",
          "s",
          "BuyNowAndNavigateToFullStructureAction",
          "data",
          "actions",
          "mbti_type",
          "RedirectToTestPageAndNavigateToFullStructureAction",
          "BuyNowOrRedirectToTestPageAction",
          "routeParams",
          "type",
          "TakeTestAgainOrBuyReportAction",
          "surveyId",
          "$surveyId",
          "reportId"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/CTA/ui/index.tsx"],
        "sourcesContent": [
          "import { Flex } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { getPersonalityTypeQuery } from '@/entities/Report';\nimport { UserModel } from '@/entities/User';\n\nimport { BuyNowButton } from '@/features/BuyNowButton';\nimport { NavigateToFullStructureTemplate } from '@/features/NavigateToFullStructureTemplate';\nimport { RedirectToTestPage } from '@/features/RedirectToTestPage';\nimport { TakeTestAgain } from '@/features/TakeTestAgain';\n\nimport s from './CTA.module.css';\n\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n    const { data } = useUnit(getPersonalityTypeQuery);\n\n    return (\n        <Flex className={s.actions}>\n            <BuyNowButton mbti={data?.mbti_type} />\n            <NavigateToFullStructureTemplate />\n        </Flex>\n    );\n};\n\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => (\n    <Flex className={s.actions}>\n        <RedirectToTestPage />\n        <NavigateToFullStructureTemplate />\n    </Flex>\n);\n\nexport const BuyNowOrRedirectToTestPageAction = () => {\n    const { routeParams } = usePageContext();\n\n    return (\n        <Flex className={s.actions}>\n            <RedirectToTestPage />\n            <BuyNowButton mbti={routeParams?.type ?? ' '} variant='default' bg='transparent' />\n        </Flex>\n    );\n};\n\nexport const TakeTestAgainOrBuyReportAction = () => {\n    const surveyId = useUnit(UserModel.$surveyId);\n    const {\n        routeParams: { reportId },\n    } = usePageContext();\n\n    return (\n        <Flex className={s.actions}>\n            {(reportId ?? surveyId) && <BuyNowButton showIcon survey={reportId ?? surveyId} />}\n            <TakeTestAgain />\n        </Flex>\n    );\n};\n"
        ],
        "mappings": "AAAA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,uBAAuB,QAAQ,mBAAmB;AAC3D,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,+BAA+B,QAAQ,4CAA4C;AAC5F,SAASC,kBAAkB,QAAQ,+BAA+B;AAClE,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAOC,CAAC,MAAM,kBAAkB;AAEhC,OAAO,MAAMC,sCAAsC,GAAGA,CAAA,KAAM;EACxD,MAAM;IAAEC;EAAK,CAAC,GAAGV,OAAO,CAACE,uBAAuB,CAAC;EAEjD,OACI,CAAC,IAAI,CAAC,SAAS,CAAC,CAACM,CAAC,CAACG,OAAO,CAAC;AACnC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAACD,IAAI,EAAEE,SAAS,CAAC;AAChD,YAAY,CAAC,+BAA+B;AAC5C,QAAQ,EAAE,IAAI,CAAC;AAEf,CAAC;AAED,OAAO,MAAMC,kDAAkD,GAAGA,CAAA,KAC9D,CAAC,IAAI,CAAC,SAAS,CAAC,CAACL,CAAC,CAACG,OAAO,CAAC;AAC/B,QAAQ,CAAC,kBAAkB;AAC3B,QAAQ,CAAC,+BAA+B;AACxC,IAAI,EAAE,IAAI,CACT;AAED,OAAO,MAAMG,gCAAgC,GAAGA,CAAA,KAAM;EAClD,MAAM;IAAEC;EAAY,CAAC,GAAGd,cAAc,CAAC,CAAC;EAExC,OACI,CAAC,IAAI,CAAC,SAAS,CAAC,CAACO,CAAC,CAACG,OAAO,CAAC;AACnC,YAAY,CAAC,kBAAkB;AAC/B,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAACI,WAAW,EAAEC,IAAI,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa;AAC5F,QAAQ,EAAE,IAAI,CAAC;AAEf,CAAC;AAED,OAAO,MAAMC,8BAA8B,GAAGA,CAAA,KAAM;EAChD,MAAMC,QAAQ,GAAGlB,OAAO,CAACG,SAAS,CAACgB,SAAS,CAAC;EAC7C,MAAM;IACFJ,WAAW,EAAE;MAAEK;IAAS;EAC5B,CAAC,GAAGnB,cAAc,CAAC,CAAC;EAEpB,OACI,CAAC,IAAI,CAAC,SAAS,CAAC,CAACO,CAAC,CAACG,OAAO,CAAC;AACnC,YAAY,CAAC,CAACS,QAAQ,IAAIF,QAAQ,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAACE,QAAQ,IAAIF,QAAQ,CAAC,GAAG;AAC9F,YAAY,CAAC,aAAa;AAC1B,QAAQ,EAAE,IAAI,CAAC;AAEf,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Flex } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { getPersonalityTypeQuery } from \"@/entities/Report\";\nimport { UserModel } from \"@/entities/User\";\nimport { BuyNowButton } from \"@/features/BuyNowButton\";\nimport { NavigateToFullStructureTemplate } from \"@/features/NavigateToFullStructureTemplate\";\nimport { RedirectToTestPage } from \"@/features/RedirectToTestPage\";\nimport { TakeTestAgain } from \"@/features/TakeTestAgain\";\nimport s from \"./CTA.module.css\";\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n  const {\n    data\n  } = useUnit(getPersonalityTypeQuery);\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    /* @__PURE__ */ jsx(BuyNowButton, { mbti: data?.mbti_type }),\n    /* @__PURE__ */ jsx(NavigateToFullStructureTemplate, {})\n  ] });\n};\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n  /* @__PURE__ */ jsx(RedirectToTestPage, {}),\n  /* @__PURE__ */ jsx(NavigateToFullStructureTemplate, {})\n] });\nexport const BuyNowOrRedirectToTestPageAction = () => {\n  const {\n    routeParams\n  } = usePageContext();\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    /* @__PURE__ */ jsx(RedirectToTestPage, {}),\n    /* @__PURE__ */ jsx(BuyNowButton, { mbti: routeParams?.type ?? \" \", variant: \"default\", bg: \"transparent\" })\n  ] });\n};\nexport const TakeTestAgainOrBuyReportAction = () => {\n  const surveyId = useUnit(UserModel.$surveyId);\n  const {\n    routeParams: {\n      reportId\n    }\n  } = usePageContext();\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    (reportId ?? surveyId) && /* @__PURE__ */ jsx(BuyNowButton, { showIcon: true, survey: reportId ?? surveyId }),\n    /* @__PURE__ */ jsx(TakeTestAgain, {})\n  ] });\n};\n",
      "start": 1746125696253,
      "end": 1746125696383,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/CTA/ui/index.tsx"],
        "sourcesContent": [
          "import { Flex } from '@mantine/core';\nimport { useUnit } from 'effector-react';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { getPersonalityTypeQuery } from '@/entities/Report';\nimport { UserModel } from '@/entities/User';\nimport { BuyNowButton } from '@/features/BuyNowButton';\nimport { NavigateToFullStructureTemplate } from '@/features/NavigateToFullStructureTemplate';\nimport { RedirectToTestPage } from '@/features/RedirectToTestPage';\nimport { TakeTestAgain } from '@/features/TakeTestAgain';\nimport s from './CTA.module.css';\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n  const {\n    data\n  } = useUnit(getPersonalityTypeQuery);\n  return <Flex className={s.actions}>\n            <BuyNowButton mbti={data?.mbti_type} />\n            <NavigateToFullStructureTemplate />\n        </Flex>;\n};\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => <Flex className={s.actions}>\n        <RedirectToTestPage />\n        <NavigateToFullStructureTemplate />\n    </Flex>;\nexport const BuyNowOrRedirectToTestPageAction = () => {\n  const {\n    routeParams\n  } = usePageContext();\n  return <Flex className={s.actions}>\n            <RedirectToTestPage />\n            <BuyNowButton mbti={routeParams?.type ?? ' '} variant='default' bg='transparent' />\n        </Flex>;\n};\nexport const TakeTestAgainOrBuyReportAction = () => {\n  const surveyId = useUnit(UserModel.$surveyId);\n  const {\n    routeParams: {\n      reportId\n    }\n  } = usePageContext();\n  return <Flex className={s.actions}>\n            {(reportId ?? surveyId) && <BuyNowButton showIcon survey={reportId ?? surveyId} />}\n            <TakeTestAgain />\n        </Flex>;\n};"
        ],
        "mappings": "AAcS,SACG,KADH;AAdT,SAAS,YAAY;AACrB,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAC/B,SAAS,+BAA+B;AACxC,SAAS,iBAAiB;AAC1B,SAAS,oBAAoB;AAC7B,SAAS,uCAAuC;AAChD,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,OAAO,OAAO;AACP,aAAM,yCAAyC,MAAM;AAC1D,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,QAAQ,uBAAuB;AACnC,SAAO,qBAAC,QAAK,WAAW,EAAE,SAChB;AAAA,wBAAC,gBAAa,MAAM,MAAM,WAAW;AAAA,IACrC,oBAAC,mCAAgC;AAAA,KACrC;AACR;AACO,aAAM,qDAAqD,MAAM,qBAAC,QAAK,WAAW,EAAE,SACnF;AAAA,sBAAC,sBAAmB;AAAA,EACpB,oBAAC,mCAAgC;AAAA,GACrC;AACG,aAAM,mCAAmC,MAAM;AACpD,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,eAAe;AACnB,SAAO,qBAAC,QAAK,WAAW,EAAE,SAChB;AAAA,wBAAC,sBAAmB;AAAA,IACpB,oBAAC,gBAAa,MAAM,aAAa,QAAQ,KAAK,SAAQ,WAAU,IAAG,eAAc;AAAA,KACrF;AACR;AACO,aAAM,iCAAiC,MAAM;AAClD,QAAM,WAAW,QAAQ,UAAU,SAAS;AAC5C,QAAM;AAAA,IACJ,aAAa;AAAA,MACX;AAAA,IACF;AAAA,EACF,IAAI,eAAe;AACnB,SAAO,qBAAC,QAAK,WAAW,EAAE,SACd;AAAA,iBAAY,aAAa,oBAAC,gBAAa,UAAQ,MAAC,QAAQ,YAAY,UAAU;AAAA,IAChF,oBAAC,iBAAc;AAAA,KACnB;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125696383,
      "end": 1746125696383,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/CTA/ui/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Flex } from \"@mantine/core\";\nimport { useUnit } from \"effector-react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { getPersonalityTypeQuery } from \"@/entities/Report\";\nimport { UserModel } from \"@/entities/User\";\nimport { BuyNowButton } from \"@/features/BuyNowButton\";\nimport { NavigateToFullStructureTemplate } from \"@/features/NavigateToFullStructureTemplate\";\nimport { RedirectToTestPage } from \"@/features/RedirectToTestPage\";\nimport { TakeTestAgain } from \"@/features/TakeTestAgain\";\nimport s from \"./CTA.module.css\";\nexport const BuyNowAndNavigateToFullStructureAction = () => {\n  const {\n    data\n  } = useUnit(getPersonalityTypeQuery);\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    /* @__PURE__ */ jsx(BuyNowButton, { mbti: data?.mbti_type }),\n    /* @__PURE__ */ jsx(NavigateToFullStructureTemplate, {})\n  ] });\n};\nexport const RedirectToTestPageAndNavigateToFullStructureAction = () => /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n  /* @__PURE__ */ jsx(RedirectToTestPage, {}),\n  /* @__PURE__ */ jsx(NavigateToFullStructureTemplate, {})\n] });\nexport const BuyNowOrRedirectToTestPageAction = () => {\n  const {\n    routeParams\n  } = usePageContext();\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    /* @__PURE__ */ jsx(RedirectToTestPage, {}),\n    /* @__PURE__ */ jsx(BuyNowButton, { mbti: routeParams?.type ?? \" \", variant: \"default\", bg: \"transparent\" })\n  ] });\n};\nexport const TakeTestAgainOrBuyReportAction = () => {\n  const surveyId = useUnit(UserModel.$surveyId);\n  const {\n    routeParams: {\n      reportId\n    }\n  } = usePageContext();\n  return /* @__PURE__ */ jsxs(Flex, { className: s.actions, children: [\n    (reportId ?? surveyId) && /* @__PURE__ */ jsx(BuyNowButton, { showIcon: true, survey: reportId ?? surveyId }),\n    /* @__PURE__ */ jsx(TakeTestAgain, {})\n  ] });\n};\n",
      "start": 1746125696384,
      "end": 1746125696384,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/CTA/ui/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxtlE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrzD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/ui/PersonalityCategory/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Box, Grid, Text, Title } from '@mantine/core';\n\nimport { InnerContainer } from '@/shared/ui';\n\nimport { titleColorMap } from '../../config';\nimport type { Personality } from '../../types';\nimport { PersonalityCard } from '../PersonalityCard';\n\nimport s from './PersonalityCategory.module.css';\n\ninterface PersonalityCategoryProps {\n    title: string;\n    description: string;\n    types: Personality[];\n}\n\nexport const PersonalityCategory = ({ title, description, types }: PersonalityCategoryProps) => (\n    <Box>\n        <Title className={s.title} data-color={titleColorMap[title]} order={3}>\n            {title}\n        </Title>\n        <Text className={s.description} fw={500}>\n            {description}\n        </Text>\n        <InnerContainer maw={1386}>\n            <Grid gutter='5xl'>\n                {types.map((type) => (\n                    <Grid.Col\n                        key={type.code}\n                        span={{\n                            base: 12,\n                            sm: 6,\n                            lg: 4,\n                            xl: 3,\n                        }}\n                    >\n                        <PersonalityCard\n                            type={type.code}\n                            category={title}\n                            title={type.name}\n                            description={type.descriptions}\n                        />\n                    </Grid.Col>\n                ))}\n            </Grid>\n        </InnerContainer>\n    </Box>\n);\n",
      "start": 1750271784962,
      "end": 1750271784979,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Grid, Text, Title } from '@mantine/core';\nimport { InnerContainer } from '@/shared/ui';\nimport { titleColorMap } from '../../config';\nimport { PersonalityCard } from '../PersonalityCard';\nimport s from './PersonalityCategory.module.css';\nexport const PersonalityCategory = ({ title, description, types })=>/*#__PURE__*/ _jsxs(Box, {\n        children: [\n            /*#__PURE__*/ _jsx(Title, {\n                className: s.title,\n                \"data-color\": titleColorMap[title],\n                order: 3,\n                children: title\n            }),\n            /*#__PURE__*/ _jsx(Text, {\n                className: s.description,\n                fw: 500,\n                children: description\n            }),\n            /*#__PURE__*/ _jsx(InnerContainer, {\n                maw: 1386,\n                children: /*#__PURE__*/ _jsx(Grid, {\n                    gutter: \"5xl\",\n                    children: types.map((type)=>/*#__PURE__*/ _jsx(Grid.Col, {\n                            span: {\n                                base: 12,\n                                sm: 6,\n                                lg: 4,\n                                xl: 3\n                            },\n                            children: /*#__PURE__*/ _jsx(PersonalityCard, {\n                                type: type.code,\n                                category: title,\n                                title: type.name,\n                                description: type.descriptions\n                            })\n                        }, type.code))\n                })\n            })\n        ]\n    });\n",
      "start": 1750271784979,
      "end": 1750271784985,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/ui/PersonalityCategory/index.tsx\"],\"sourcesContent\":[\"import { Box, Grid, Text, Title } from '@mantine/core';\\n\\nimport { InnerContainer } from '@/shared/ui';\\n\\nimport { titleColorMap } from '../../config';\\nimport type { Personality } from '../../types';\\nimport { PersonalityCard } from '../PersonalityCard';\\n\\nimport s from './PersonalityCategory.module.css';\\n\\ninterface PersonalityCategoryProps {\\n    title: string;\\n    description: string;\\n    types: Personality[];\\n}\\n\\nexport const PersonalityCategory = ({ title, description, types }: PersonalityCategoryProps) => (\\n    <Box>\\n        <Title className={s.title} data-color={titleColorMap[title]} order={3}>\\n            {title}\\n        </Title>\\n        <Text className={s.description} fw={500}>\\n            {description}\\n        </Text>\\n        <InnerContainer maw={1386}>\\n            <Grid gutter='5xl'>\\n                {types.map((type) => (\\n                    <Grid.Col\\n                        key={type.code}\\n                        span={{\\n                            base: 12,\\n                            sm: 6,\\n                            lg: 4,\\n                            xl: 3,\\n                        }}\\n                    >\\n                        <PersonalityCard\\n                            type={type.code}\\n                            category={title}\\n                            title={type.name}\\n                            description={type.descriptions}\\n                        />\\n                    </Grid.Col>\\n                ))}\\n            </Grid>\\n        </InnerContainer>\\n    </Box>\\n);\\n\"],\"names\":[\"Box\",\"Grid\",\"Text\",\"Title\",\"InnerContainer\",\"titleColorMap\",\"PersonalityCard\",\"s\",\"PersonalityCategory\",\"title\",\"description\",\"types\",\"className\",\"data-color\",\"order\",\"fw\",\"maw\",\"gutter\",\"map\",\"type\",\"Col\",\"span\",\"base\",\"sm\",\"lg\",\"xl\",\"code\",\"category\",\"name\",\"descriptions\"],\"mappings\":\";AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,gBAAgB;AAEvD,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,aAAa,QAAQ,eAAe;AAE7C,SAASC,eAAe,QAAQ,qBAAqB;AAErD,OAAOC,OAAO,mCAAmC;AAQjD,OAAO,MAAMC,sBAAsB,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAA4B,iBACvF,MAACX;;0BACG,KAACG;gBAAMS,WAAWL,EAAEE,KAAK;gBAAEI,cAAYR,aAAa,CAACI,MAAM;gBAAEK,OAAO;0BAC/DL;;0BAEL,KAACP;gBAAKU,WAAWL,EAAEG,WAAW;gBAAEK,IAAI;0BAC/BL;;0BAEL,KAACN;gBAAeY,KAAK;0BACjB,cAAA,KAACf;oBAAKgB,QAAO;8BACRN,MAAMO,GAAG,CAAC,CAACC,qBACR,KAAClB,KAAKmB,GAAG;4BAELC,MAAM;gCACFC,MAAM;gCACNC,IAAI;gCACJC,IAAI;gCACJC,IAAI;4BACR;sCAEA,cAAA,KAACnB;gCACGa,MAAMA,KAAKO,IAAI;gCACfC,UAAUlB;gCACVA,OAAOU,KAAKS,IAAI;gCAChBlB,aAAaS,KAAKU,YAAY;;2BAZ7BV,KAAKO,IAAI;;;;OAmBpC\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Grid, Text, Title } from \"@mantine/core\";\nimport { InnerContainer } from \"@/shared/ui\";\nimport { titleColorMap } from \"../../config\";\nimport { PersonalityCard } from \"../PersonalityCard\";\nimport s from \"./PersonalityCategory.module.css\";\nexport const PersonalityCategory = ({ title, description, types }) => /* @__PURE__ */ _jsxs(Box, {\n  children: [\n    /* @__PURE__ */ _jsx(Title, {\n      className: s.title,\n      \"data-color\": titleColorMap[title],\n      order: 3,\n      children: title\n    }),\n    /* @__PURE__ */ _jsx(Text, {\n      className: s.description,\n      fw: 500,\n      children: description\n    }),\n    /* @__PURE__ */ _jsx(InnerContainer, {\n      maw: 1386,\n      children: /* @__PURE__ */ _jsx(Grid, {\n        gutter: \"5xl\",\n        children: types.map((type) => /* @__PURE__ */ _jsx(Grid.Col, {\n          span: {\n            base: 12,\n            sm: 6,\n            lg: 4,\n            xl: 3\n          },\n          children: /* @__PURE__ */ _jsx(PersonalityCard, {\n            type: type.code,\n            category: title,\n            title: type.name,\n            description: type.descriptions\n          })\n        }, type.code))\n      })\n    })\n  ]\n});\n",
      "start": 1750271784985,
      "end": 1750271785133,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/ui/PersonalityCategory/index.tsx"
        ],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Grid, Text, Title } from '@mantine/core';\nimport { InnerContainer } from '@/shared/ui';\nimport { titleColorMap } from '../../config';\nimport { PersonalityCard } from '../PersonalityCard';\nimport s from './PersonalityCategory.module.css';\nexport const PersonalityCategory = ({ title, description, types })=>/*#__PURE__*/ _jsxs(Box, {\n        children: [\n            /*#__PURE__*/ _jsx(Title, {\n                className: s.title,\n                \"data-color\": titleColorMap[title],\n                order: 3,\n                children: title\n            }),\n            /*#__PURE__*/ _jsx(Text, {\n                className: s.description,\n                fw: 500,\n                children: description\n            }),\n            /*#__PURE__*/ _jsx(InnerContainer, {\n                maw: 1386,\n                children: /*#__PURE__*/ _jsx(Grid, {\n                    gutter: \"5xl\",\n                    children: types.map((type)=>/*#__PURE__*/ _jsx(Grid.Col, {\n                            span: {\n                                base: 12,\n                                sm: 6,\n                                lg: 4,\n                                xl: 3\n                            },\n                            children: /*#__PURE__*/ _jsx(PersonalityCard, {\n                                type: type.code,\n                                category: title,\n                                title: type.name,\n                                description: type.descriptions\n                            })\n                        }, type.code))\n                })\n            })\n        ]\n    });\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,KAAK,MAAM,MAAM,aAAa;AACvC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAChC,OAAO,OAAO;AACP,aAAM,sBAAsB,CAAC,EAAE,OAAO,aAAa,MAAM,MAAkB,sBAAM,KAAK;AAAA,EACrF,UAAU;AAAA,IACQ,qBAAK,OAAO;AAAA,MACtB,WAAW,EAAE;AAAA,MACb,cAAc,cAAc,KAAK;AAAA,MACjC,OAAO;AAAA,MACP,UAAU;AAAA,IACd,CAAC;AAAA,IACa,qBAAK,MAAM;AAAA,MACrB,WAAW,EAAE;AAAA,MACb,IAAI;AAAA,MACJ,UAAU;AAAA,IACd,CAAC;AAAA,IACa,qBAAK,gBAAgB;AAAA,MAC/B,KAAK;AAAA,MACL,UAAwB,qBAAK,MAAM;AAAA,QAC/B,QAAQ;AAAA,QACR,UAAU,MAAM,IAAI,CAAC,SAAqB,qBAAK,KAAK,KAAK;AAAA,UACjD,MAAM;AAAA,YACF,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,IAAI;AAAA,UACR;AAAA,UACA,UAAwB,qBAAK,iBAAiB;AAAA,YAC1C,MAAM,KAAK;AAAA,YACX,UAAU;AAAA,YACV,OAAO,KAAK;AAAA,YACZ,aAAa,KAAK;AAAA,UACtB,CAAC;AAAA,QACL,GAAG,KAAK,IAAI,CAAC;AAAA,MACrB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Personality/ui/PersonalityCategory/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Grid, Text, Title } from \"@mantine/core\";\nimport { InnerContainer } from \"@/shared/ui\";\nimport { titleColorMap } from \"../../config\";\nimport { PersonalityCard } from \"../PersonalityCard\";\nimport s from \"./PersonalityCategory.module.css\";\nexport const PersonalityCategory = ({ title, description, types }) => /* @__PURE__ */ _jsxs(Box, {\n  children: [\n    /* @__PURE__ */ _jsx(Title, {\n      className: s.title,\n      \"data-color\": titleColorMap[title],\n      order: 3,\n      children: title\n    }),\n    /* @__PURE__ */ _jsx(Text, {\n      className: s.description,\n      fw: 500,\n      children: description\n    }),\n    /* @__PURE__ */ _jsx(InnerContainer, {\n      maw: 1386,\n      children: /* @__PURE__ */ _jsx(Grid, {\n        gutter: \"5xl\",\n        children: types.map((type) => /* @__PURE__ */ _jsx(Grid.Col, {\n          span: {\n            base: 12,\n            sm: 6,\n            lg: 4,\n            xl: 3\n          },\n          children: /* @__PURE__ */ _jsx(PersonalityCard, {\n            type: type.code,\n            category: title,\n            title: type.name,\n            description: type.descriptions\n          })\n        }, type.code))\n      })\n    })\n  ]\n});\n",
      "start": 1750271785133,
      "end": 1750271785133,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Personality/ui/PersonalityCategory/index.tsx"],
        "names": [],
        "mappingstpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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"
      }
    }
  ]
}

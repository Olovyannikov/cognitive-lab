{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Reports/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Box, Button, Collapse, Divider, Group, Pill } from '@mantine/core';\nimport { useClickOutside, useDisclosure } from '@mantine/hooks';\nimport { ArrowClockwise, CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useList, useUnit } from 'effector-react';\n\nimport { ROUTES } from '@/shared/config';\nimport { useIsLarge } from '@/shared/lib';\n\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { RootModel } from '@/entities/Root';\nimport { TestModel } from '@/entities/Test';\n\nimport { ReportGroupTemplate } from './ReportGroupTemplate';\nimport { ReportTemplate } from './ReportTemplate';\n\nimport s from './Reports.module.css';\n\nexport const Reports = () => {\n    const [opened, { toggle, close }] = useDisclosure(false);\n    const isLarge = useIsLarge();\n\n    const ref = useClickOutside(() => isLarge && close());\n\n    const { pending, stale } = useUnit(getSurveysInfoQuery);\n    const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\n        ReportModel.$allUserReports,\n        ReportModel.$freeUserReports,\n        ReportModel.$paidUserReports,\n        ReportModel.$expressUserReports,\n        RootModel.allMenusClosed,\n    ]);\n    const [setSplashScreenVisibility] = useUnit([TestModel.setSplashScreenVisibility]);\n\n    const isLoading = pending || stale;\n    const renderFreeReports = useList(ReportModel.$freeUserReports, (report) => (\n        <ReportTemplate onClose={close} {...report} />\n    ));\n    const renderPaidReports = useList(ReportModel.$paidUserReports, (report) => (\n        <ReportTemplate onClose={close} {...report} />\n    ));\n    const renderExpressReports = useList(ReportModel.$expressUserReports, (report) => (\n        <ReportTemplate onClose={close} {...report} />\n    ));\n\n    if (isLoading || allReports?.length < 1) return null;\n\n    return (\n        <Box ref={ref} className={s.root}>\n            <Button\n                size='md'\n                onClick={toggle}\n                variant='default'\n                loading={isLoading}\n                disabled={isLoading}\n                className={clsx(s.link, !isLoading && s.loaded)}\n                rightSection={<CaretDown className={clsx(opened && s.rotate)} weight='bold' size='16' />}\n            >\n                <Group className={s.buttonGroup}>\n                    <Pill hidden={isLoading} className={s.pill}>\n                        {allReports?.length}\n                    </Pill>\n                    Ваши отчеты\n                </Group>\n            </Button>\n            <Collapse className={s.collapse} in={opened} transitionTimingFunction='linear'>\n                <Box className={s.category}>\n                    <ReportGroupTemplate reports={freeReports} render={renderFreeReports} label='Бесплатные отчёты' />\n                    <ReportGroupTemplate reports={paidReports} render={renderPaidReports} label='Полные отчёты' />\n                    <ReportGroupTemplate\n                        reports={expressReports}\n                        render={renderExpressReports}\n                        label='Экспресс отчёты'\n                    />\n                    <Divider />\n                    <Button\n                        component='a'\n                        href={ROUTES.TEST}\n                        w='100%'\n                        my='sm'\n                        fz={14}\n                        size='md'\n                        variant='subtle'\n                        className={s.takeTestAgain}\n                        onClick={() => {\n                            setSplashScreenVisibility(true);\n                            closeAllModals(false);\n                            toggle();\n                        }}\n                        leftSection={<ArrowClockwise weight='bold' />}\n                    >\n                        Пройти тест заново\n                    </Button>\n                </Box>\n            </Collapse>\n        </Box>\n    );\n};\n",
      "start": 1750271785346,
      "end": 1750271785351,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Button, Collapse, Divider, Group, Pill } from '@mantine/core';\nimport { useClickOutside, useDisclosure } from '@mantine/hooks';\nimport { ArrowClockwise, CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useList, useUnit } from 'effector-react';\nimport { ROUTES } from '@/shared/config';\nimport { useIsLarge } from '@/shared/lib';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { RootModel } from '@/entities/Root';\nimport { TestModel } from '@/entities/Test';\nimport { ReportGroupTemplate } from './ReportGroupTemplate';\nimport { ReportTemplate } from './ReportTemplate';\nimport s from './Reports.module.css';\nexport const Reports = ()=>{\n    const [opened, { toggle, close }] = useDisclosure(false);\n    const isLarge = useIsLarge();\n    const ref = useClickOutside(()=>isLarge && close());\n    const { pending, stale } = useUnit(getSurveysInfoQuery);\n    const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\n        ReportModel.$allUserReports,\n        ReportModel.$freeUserReports,\n        ReportModel.$paidUserReports,\n        ReportModel.$expressUserReports,\n        RootModel.allMenusClosed\n    ]);\n    const [setSplashScreenVisibility] = useUnit([\n        TestModel.setSplashScreenVisibility\n    ]);\n    const isLoading = pending || stale;\n    const renderFreeReports = useList(ReportModel.$freeUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    const renderPaidReports = useList(ReportModel.$paidUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    const renderExpressReports = useList(ReportModel.$expressUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    if (isLoading || allReports?.length < 1) return null;\n    return /*#__PURE__*/ _jsxs(Box, {\n        ref: ref,\n        className: s.root,\n        children: [\n            /*#__PURE__*/ _jsx(Button, {\n                size: \"md\",\n                onClick: toggle,\n                variant: \"default\",\n                loading: isLoading,\n                disabled: isLoading,\n                className: clsx(s.link, !isLoading && s.loaded),\n                rightSection: /*#__PURE__*/ _jsx(CaretDown, {\n                    className: clsx(opened && s.rotate),\n                    weight: \"bold\",\n                    size: \"16\"\n                }),\n                children: /*#__PURE__*/ _jsxs(Group, {\n                    className: s.buttonGroup,\n                    children: [\n                        /*#__PURE__*/ _jsx(Pill, {\n                            hidden: isLoading,\n                            className: s.pill,\n                            children: allReports?.length\n                        }),\n                        \"Ваши отчеты\"\n                    ]\n                })\n            }),\n            /*#__PURE__*/ _jsx(Collapse, {\n                className: s.collapse,\n                in: opened,\n                transitionTimingFunction: \"linear\",\n                children: /*#__PURE__*/ _jsxs(Box, {\n                    className: s.category,\n                    children: [\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: freeReports,\n                            render: renderFreeReports,\n                            label: \"Бесплатные отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: paidReports,\n                            render: renderPaidReports,\n                            label: \"Полные отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: expressReports,\n                            render: renderExpressReports,\n                            label: \"Экспресс отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(Divider, {}),\n                        /*#__PURE__*/ _jsx(Button, {\n                            component: \"a\",\n                            href: ROUTES.TEST,\n                            w: \"100%\",\n                            my: \"sm\",\n                            fz: 14,\n                            size: \"md\",\n                            variant: \"subtle\",\n                            className: s.takeTestAgain,\n                            onClick: ()=>{\n                                setSplashScreenVisibility(true);\n                                closeAllModals(false);\n                                toggle();\n                            },\n                            leftSection: /*#__PURE__*/ _jsx(ArrowClockwise, {\n                                weight: \"bold\"\n                            }),\n                            children: \"Пройти тест заново\"\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\n",
      "start": 1750271785351,
      "end": 1750271785354,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Reports/index.tsx\"],\"sourcesContent\":[\"import { Box, Button, Collapse, Divider, Group, Pill } from '@mantine/core';\\nimport { useClickOutside, useDisclosure } from '@mantine/hooks';\\nimport { ArrowClockwise, CaretDown } from '@phosphor-icons/react/dist/ssr';\\nimport clsx from 'clsx';\\nimport { useList, useUnit } from 'effector-react';\\n\\nimport { ROUTES } from '@/shared/config';\\nimport { useIsLarge } from '@/shared/lib';\\n\\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\\nimport { RootModel } from '@/entities/Root';\\nimport { TestModel } from '@/entities/Test';\\n\\nimport { ReportGroupTemplate } from './ReportGroupTemplate';\\nimport { ReportTemplate } from './ReportTemplate';\\n\\nimport s from './Reports.module.css';\\n\\nexport const Reports = () => {\\n    const [opened, { toggle, close }] = useDisclosure(false);\\n    const isLarge = useIsLarge();\\n\\n    const ref = useClickOutside(() => isLarge && close());\\n\\n    const { pending, stale } = useUnit(getSurveysInfoQuery);\\n    const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\\n        ReportModel.$allUserReports,\\n        ReportModel.$freeUserReports,\\n        ReportModel.$paidUserReports,\\n        ReportModel.$expressUserReports,\\n        RootModel.allMenusClosed,\\n    ]);\\n    const [setSplashScreenVisibility] = useUnit([TestModel.setSplashScreenVisibility]);\\n\\n    const isLoading = pending || stale;\\n    const renderFreeReports = useList(ReportModel.$freeUserReports, (report) => (\\n        <ReportTemplate onClose={close} {...report} />\\n    ));\\n    const renderPaidReports = useList(ReportModel.$paidUserReports, (report) => (\\n        <ReportTemplate onClose={close} {...report} />\\n    ));\\n    const renderExpressReports = useList(ReportModel.$expressUserReports, (report) => (\\n        <ReportTemplate onClose={close} {...report} />\\n    ));\\n\\n    if (isLoading || allReports?.length < 1) return null;\\n\\n    return (\\n        <Box ref={ref} className={s.root}>\\n            <Button\\n                size='md'\\n                onClick={toggle}\\n                variant='default'\\n                loading={isLoading}\\n                disabled={isLoading}\\n                className={clsx(s.link, !isLoading && s.loaded)}\\n                rightSection={<CaretDown className={clsx(opened && s.rotate)} weight='bold' size='16' />}\\n            >\\n                <Group className={s.buttonGroup}>\\n                    <Pill hidden={isLoading} className={s.pill}>\\n                        {allReports?.length}\\n                    </Pill>\\n                    Ваши отчеты\\n                </Group>\\n            </Button>\\n            <Collapse className={s.collapse} in={opened} transitionTimingFunction='linear'>\\n                <Box className={s.category}>\\n                    <ReportGroupTemplate reports={freeReports} render={renderFreeReports} label='Бесплатные отчёты' />\\n                    <ReportGroupTemplate reports={paidReports} render={renderPaidReports} label='Полные отчёты' />\\n                    <ReportGroupTemplate\\n                        reports={expressReports}\\n                        render={renderExpressReports}\\n                        label='Экспресс отчёты'\\n                    />\\n                    <Divider />\\n                    <Button\\n                        component='a'\\n                        href={ROUTES.TEST}\\n                        w='100%'\\n                        my='sm'\\n                        fz={14}\\n                        size='md'\\n                        variant='subtle'\\n                        className={s.takeTestAgain}\\n                        onClick={() => {\\n                            setSplashScreenVisibility(true);\\n                            closeAllModals(false);\\n                            toggle();\\n                        }}\\n                        leftSection={<ArrowClockwise weight='bold' />}\\n                    >\\n                        Пройти тест заново\\n                    </Button>\\n                </Box>\\n            </Collapse>\\n        </Box>\\n    );\\n};\\n\"],\"names\":[\"Box\",\"Button\",\"Collapse\",\"Divider\",\"Group\",\"Pill\",\"useClickOutside\",\"useDisclosure\",\"ArrowClockwise\",\"CaretDown\",\"clsx\",\"useList\",\"useUnit\",\"ROUTES\",\"useIsLarge\",\"getSurveysInfoQuery\",\"ReportModel\",\"RootModel\",\"TestModel\",\"ReportGroupTemplate\",\"ReportTemplate\",\"s\",\"Reports\",\"opened\",\"toggle\",\"close\",\"isLarge\",\"ref\",\"pending\",\"stale\",\"allReports\",\"freeReports\",\"paidReports\",\"expressReports\",\"closeAllModals\",\"$allUserReports\",\"$freeUserReports\",\"$paidUserReports\",\"$expressUserReports\",\"allMenusClosed\",\"setSplashScreenVisibility\",\"isLoading\",\"renderFreeReports\",\"report\",\"onClose\",\"renderPaidReports\",\"renderExpressReports\",\"length\",\"className\",\"root\",\"size\",\"onClick\",\"variant\",\"loading\",\"disabled\",\"link\",\"loaded\",\"rightSection\",\"rotate\",\"weight\",\"buttonGroup\",\"hidden\",\"pill\",\"collapse\",\"in\",\"transitionTimingFunction\",\"category\",\"reports\",\"render\",\"label\",\"component\",\"href\",\"TEST\",\"w\",\"my\",\"fz\",\"takeTestAgain\",\"leftSection\"],\"mappings\":\"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\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Button, Collapse, Divider, Group, Pill } from \"@mantine/core\";\nimport { useClickOutside, useDisclosure } from \"@mantine/hooks\";\nimport { ArrowClockwise, CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useList, useUnit } from \"effector-react\";\nimport { ROUTES } from \"@/shared/config\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { RootModel } from \"@/entities/Root\";\nimport { TestModel } from \"@/entities/Test\";\nimport { ReportGroupTemplate } from \"./ReportGroupTemplate\";\nimport { ReportTemplate } from \"./ReportTemplate\";\nimport s from \"./Reports.module.css\";\nexport const Reports = () => {\n  const [opened, { toggle, close }] = useDisclosure(false);\n  const isLarge = useIsLarge();\n  const ref = useClickOutside(() => isLarge && close());\n  const { pending, stale } = useUnit(getSurveysInfoQuery);\n  const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\n    ReportModel.$allUserReports,\n    ReportModel.$freeUserReports,\n    ReportModel.$paidUserReports,\n    ReportModel.$expressUserReports,\n    RootModel.allMenusClosed\n  ]);\n  const [setSplashScreenVisibility] = useUnit([\n    TestModel.setSplashScreenVisibility\n  ]);\n  const isLoading = pending || stale;\n  const renderFreeReports = useList(ReportModel.$freeUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  const renderPaidReports = useList(ReportModel.$paidUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  const renderExpressReports = useList(ReportModel.$expressUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  if (isLoading || allReports?.length < 1) return null;\n  return /* @__PURE__ */ _jsxs(Box, {\n    ref,\n    className: s.root,\n    children: [\n      /* @__PURE__ */ _jsx(Button, {\n        size: \"md\",\n        onClick: toggle,\n        variant: \"default\",\n        loading: isLoading,\n        disabled: isLoading,\n        className: clsx(s.link, !isLoading && s.loaded),\n        rightSection: /* @__PURE__ */ _jsx(CaretDown, {\n          className: clsx(opened && s.rotate),\n          weight: \"bold\",\n          size: \"16\"\n        }),\n        children: /* @__PURE__ */ _jsxs(Group, {\n          className: s.buttonGroup,\n          children: [\n            /* @__PURE__ */ _jsx(Pill, {\n              hidden: isLoading,\n              className: s.pill,\n              children: allReports?.length\n            }),\n            \"Ваши отчеты\"\n          ]\n        })\n      }),\n      /* @__PURE__ */ _jsx(Collapse, {\n        className: s.collapse,\n        in: opened,\n        transitionTimingFunction: \"linear\",\n        children: /* @__PURE__ */ _jsxs(Box, {\n          className: s.category,\n          children: [\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: freeReports,\n              render: renderFreeReports,\n              label: \"Бесплатные отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: paidReports,\n              render: renderPaidReports,\n              label: \"Полные отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: expressReports,\n              render: renderExpressReports,\n              label: \"Экспресс отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(Divider, {}),\n            /* @__PURE__ */ _jsx(Button, {\n              component: \"a\",\n              href: ROUTES.TEST,\n              w: \"100%\",\n              my: \"sm\",\n              fz: 14,\n              size: \"md\",\n              variant: \"subtle\",\n              className: s.takeTestAgain,\n              onClick: () => {\n                setSplashScreenVisibility(true);\n                closeAllModals(false);\n                toggle();\n              },\n              leftSection: /* @__PURE__ */ _jsx(ArrowClockwise, {\n                weight: \"bold\"\n              }),\n              children: \"Пройти тест заново\"\n            })\n          ]\n        })\n      })\n    ]\n  });\n};\n",
      "start": 1750271785354,
      "end": 1750271785370,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Reports/index.tsx"
        ],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Button, Collapse, Divider, Group, Pill } from '@mantine/core';\nimport { useClickOutside, useDisclosure } from '@mantine/hooks';\nimport { ArrowClockwise, CaretDown } from '@phosphor-icons/react/dist/ssr';\nimport clsx from 'clsx';\nimport { useList, useUnit } from 'effector-react';\nimport { ROUTES } from '@/shared/config';\nimport { useIsLarge } from '@/shared/lib';\nimport { getSurveysInfoQuery, ReportModel } from '@/entities/Report';\nimport { RootModel } from '@/entities/Root';\nimport { TestModel } from '@/entities/Test';\nimport { ReportGroupTemplate } from './ReportGroupTemplate';\nimport { ReportTemplate } from './ReportTemplate';\nimport s from './Reports.module.css';\nexport const Reports = ()=>{\n    const [opened, { toggle, close }] = useDisclosure(false);\n    const isLarge = useIsLarge();\n    const ref = useClickOutside(()=>isLarge && close());\n    const { pending, stale } = useUnit(getSurveysInfoQuery);\n    const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\n        ReportModel.$allUserReports,\n        ReportModel.$freeUserReports,\n        ReportModel.$paidUserReports,\n        ReportModel.$expressUserReports,\n        RootModel.allMenusClosed\n    ]);\n    const [setSplashScreenVisibility] = useUnit([\n        TestModel.setSplashScreenVisibility\n    ]);\n    const isLoading = pending || stale;\n    const renderFreeReports = useList(ReportModel.$freeUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    const renderPaidReports = useList(ReportModel.$paidUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    const renderExpressReports = useList(ReportModel.$expressUserReports, (report)=>/*#__PURE__*/ _jsx(ReportTemplate, {\n            onClose: close,\n            ...report\n        }));\n    if (isLoading || allReports?.length < 1) return null;\n    return /*#__PURE__*/ _jsxs(Box, {\n        ref: ref,\n        className: s.root,\n        children: [\n            /*#__PURE__*/ _jsx(Button, {\n                size: \"md\",\n                onClick: toggle,\n                variant: \"default\",\n                loading: isLoading,\n                disabled: isLoading,\n                className: clsx(s.link, !isLoading && s.loaded),\n                rightSection: /*#__PURE__*/ _jsx(CaretDown, {\n                    className: clsx(opened && s.rotate),\n                    weight: \"bold\",\n                    size: \"16\"\n                }),\n                children: /*#__PURE__*/ _jsxs(Group, {\n                    className: s.buttonGroup,\n                    children: [\n                        /*#__PURE__*/ _jsx(Pill, {\n                            hidden: isLoading,\n                            className: s.pill,\n                            children: allReports?.length\n                        }),\n                        \"Ваши отчеты\"\n                    ]\n                })\n            }),\n            /*#__PURE__*/ _jsx(Collapse, {\n                className: s.collapse,\n                in: opened,\n                transitionTimingFunction: \"linear\",\n                children: /*#__PURE__*/ _jsxs(Box, {\n                    className: s.category,\n                    children: [\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: freeReports,\n                            render: renderFreeReports,\n                            label: \"Бесплатные отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: paidReports,\n                            render: renderPaidReports,\n                            label: \"Полные отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(ReportGroupTemplate, {\n                            reports: expressReports,\n                            render: renderExpressReports,\n                            label: \"Экспресс отчёты\"\n                        }),\n                        /*#__PURE__*/ _jsx(Divider, {}),\n                        /*#__PURE__*/ _jsx(Button, {\n                            component: \"a\",\n                            href: ROUTES.TEST,\n                            w: \"100%\",\n                            my: \"sm\",\n                            fz: 14,\n                            size: \"md\",\n                            variant: \"subtle\",\n                            className: s.takeTestAgain,\n                            onClick: ()=>{\n                                setSplashScreenVisibility(true);\n                                closeAllModals(false);\n                                toggle();\n                            },\n                            leftSection: /*#__PURE__*/ _jsx(ArrowClockwise, {\n                                weight: \"bold\"\n                            }),\n                            children: \"Пройти тест заново\"\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/RootLayout/ui/Navigation/Reports/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Box, Button, Collapse, Divider, Group, Pill } from \"@mantine/core\";\nimport { useClickOutside, useDisclosure } from \"@mantine/hooks\";\nimport { ArrowClockwise, CaretDown } from \"@phosphor-icons/react/dist/ssr\";\nimport clsx from \"clsx\";\nimport { useList, useUnit } from \"effector-react\";\nimport { ROUTES } from \"@/shared/config\";\nimport { useIsLarge } from \"@/shared/lib\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { RootModel } from \"@/entities/Root\";\nimport { TestModel } from \"@/entities/Test\";\nimport { ReportGroupTemplate } from \"./ReportGroupTemplate\";\nimport { ReportTemplate } from \"./ReportTemplate\";\nimport s from \"./Reports.module.css\";\nexport const Reports = () => {\n  const [opened, { toggle, close }] = useDisclosure(false);\n  const isLarge = useIsLarge();\n  const ref = useClickOutside(() => isLarge && close());\n  const { pending, stale } = useUnit(getSurveysInfoQuery);\n  const [allReports, freeReports, paidReports, expressReports, closeAllModals] = useUnit([\n    ReportModel.$allUserReports,\n    ReportModel.$freeUserReports,\n    ReportModel.$paidUserReports,\n    ReportModel.$expressUserReports,\n    RootModel.allMenusClosed\n  ]);\n  const [setSplashScreenVisibility] = useUnit([\n    TestModel.setSplashScreenVisibility\n  ]);\n  const isLoading = pending || stale;\n  const renderFreeReports = useList(ReportModel.$freeUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  const renderPaidReports = useList(ReportModel.$paidUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  const renderExpressReports = useList(ReportModel.$expressUserReports, (report) => /* @__PURE__ */ _jsx(ReportTemplate, {\n    onClose: close,\n    ...report\n  }));\n  if (isLoading || allReports?.length < 1) return null;\n  return /* @__PURE__ */ _jsxs(Box, {\n    ref,\n    className: s.root,\n    children: [\n      /* @__PURE__ */ _jsx(Button, {\n        size: \"md\",\n        onClick: toggle,\n        variant: \"default\",\n        loading: isLoading,\n        disabled: isLoading,\n        className: clsx(s.link, !isLoading && s.loaded),\n        rightSection: /* @__PURE__ */ _jsx(CaretDown, {\n          className: clsx(opened && s.rotate),\n          weight: \"bold\",\n          size: \"16\"\n        }),\n        children: /* @__PURE__ */ _jsxs(Group, {\n          className: s.buttonGroup,\n          children: [\n            /* @__PURE__ */ _jsx(Pill, {\n              hidden: isLoading,\n              className: s.pill,\n              children: allReports?.length\n            }),\n            \"Ваши отчеты\"\n          ]\n        })\n      }),\n      /* @__PURE__ */ _jsx(Collapse, {\n        className: s.collapse,\n        in: opened,\n        transitionTimingFunction: \"linear\",\n        children: /* @__PURE__ */ _jsxs(Box, {\n          className: s.category,\n          children: [\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: freeReports,\n              render: renderFreeReports,\n              label: \"Бесплатные отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: paidReports,\n              render: renderPaidReports,\n              label: \"Полные отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(ReportGroupTemplate, {\n              reports: expressReports,\n              render: renderExpressReports,\n              label: \"Экспресс отчёты\"\n            }),\n            /* @__PURE__ */ _jsx(Divider, {}),\n            /* @__PURE__ */ _jsx(Button, {\n              component: \"a\",\n              href: ROUTES.TEST,\n              w: \"100%\",\n              my: \"sm\",\n              fz: 14,\n              size: \"md\",\n              variant: \"subtle\",\n              className: s.takeTestAgain,\n              onClick: () => {\n                setSplashScreenVisibility(true);\n                closeAllModals(false);\n                toggle();\n              },\n              leftSection: /* @__PURE__ */ _jsx(ArrowClockwise, {\n                weight: \"bold\"\n              }),\n              children: \"Пройти тест заново\"\n            })\n          ]\n        })\n      })\n    ]\n  });\n};\n",
      "start": 1750271785370,
      "end": 1750271785370,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/RootLayout/ui/Navigation/Reports/index.tsx"],
        "names": [],
        "mappingsvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClnH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

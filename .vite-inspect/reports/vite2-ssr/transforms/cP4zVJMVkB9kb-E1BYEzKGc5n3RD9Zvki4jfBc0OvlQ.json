{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/BuyReportForm/view-model/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useEffect } from 'react';\nimport { useForm } from '@mantine/form';\nimport { Lock } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport { navigate } from 'vike/client/router';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { PersonalitiesModel } from '@/entities/Personality';\nimport { getSurveysInfoQuery, type PurchasedReportRequest, ReportModel } from '@/entities/Report';\n\nimport { $promocodeErrorMessage, reportPurchased } from '../model';\n\nexport const useReportBuyFormViewModel = () => {\n    const {\n        urlParsed: {\n            search: { type, reportId },\n        },\n        routeParams: { surveyId },\n    } = usePageContext();\n    const purchaseReportHandler = useUnit(reportPurchased);\n    const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n    const { types, promocodeError, currentUserMbti } = useUnit({\n        types: PersonalitiesModel.$personalitiesMap,\n        promocodeError: $promocodeErrorMessage,\n        currentUserMbti: ReportModel.$userMbtiTypes.map((el) => el.find((report) => report[reportId]) ?? null),\n    });\n\n    const form = useForm({\n        mode: 'controlled',\n        initialValues: {\n            email: user?.user?.email ?? '',\n            mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n            promo_code: '',\n            user_report: reportId ?? '',\n        },\n        validate: {\n            email: (value: string) => (/^\\S+@\\S+$/.test(value) ? null : 'Неправильный email'),\n            mbti_type: (value: string | undefined) =>\n                reportId || (value && value?.replaceAll('\"', '').length > 0) ? null : 'Выберите тип личности',\n        },\n    });\n\n    const dataValues = Object.keys(types).map((key) => ({\n        value: key,\n        label: `${types[key]} (${key})`,\n    }));\n\n    useEffect(() => {\n        if (!user) return;\n        form.setFieldValue('email', user?.user?.email ?? '');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user]);\n\n    const selectProps = {\n        size: 'md',\n        radius: 'xs',\n        disabled: Boolean(surveyId) || Boolean(reportId),\n        data: dataValues,\n        name: 'mbti_type',\n        withAsterisk: true,\n        key: form.key('mbti_type'),\n        rightSection: (Boolean(surveyId) || Boolean(reportId)) && <Lock />,\n        label: 'Тип личности для отчёта',\n        placeholder: 'Выберите из списка',\n        styles: { label: { fontWeight: 'bold', marginBottom: 4 } },\n        ...form.getInputProps('mbti_type'),\n        onChange: (value: string | null) => {\n            form.setFieldValue('mbti_type', value ?? '');\n            window.history.pushState(null, '', `?type=${value}`);\n        },\n    };\n\n    const emailProps = {\n        radius: 'xs',\n        name: 'email',\n        withAsterisk: true,\n        key: form.key('email'),\n        label: 'Электронная почта',\n        placeholder: 'name@mail.ru',\n        ...form.getInputProps('email'),\n    };\n\n    const promocodeProps = {\n        radius: 'xs',\n        name: 'promo_code',\n        key: form.key('promo_code'),\n        placeholder: 'Введите промокод',\n        ...form.getInputProps('promo_code'),\n    };\n\n    const onSubmit = form.onSubmit((data) => {\n        const preparedData: PurchasedReportRequest = { ...data };\n        if (!data.mbti_type) {\n            preparedData.mbti_type = type;\n        }\n\n        if (reportId) {\n            delete preparedData.mbti_type;\n        }\n\n        if (!reportId) {\n            delete preparedData.user_report;\n        }\n\n        if (!preparedData.promo_code || promocodeError) {\n            delete preparedData.promo_code;\n        }\n\n        purchaseReportHandler(preparedData);\n    });\n\n    useEffect(() => {\n        if (surveyId || type) return;\n        if (!type) return form.setFieldValue('mbti_type', Object.keys(types)[0]);\n        if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate('/');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n\n    return {\n        form,\n        onSubmit,\n        emailProps,\n        promocodeProps,\n        selectProps,\n    };\n};\n",
      "start": 1750275033947,
      "end": 1750275033985,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useEffect } from 'react';\nimport { useForm } from '@mantine/form';\nimport { Lock } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport { navigate } from 'vike/client/router';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { PersonalitiesModel } from '@/entities/Personality';\nimport { getSurveysInfoQuery, type PurchasedReportRequest, ReportModel } from '@/entities/Report';\nimport { $promocodeErrorMessage, reportPurchased } from '../model';\nexport const useReportBuyFormViewModel = () => {\n  const {\n    urlParsed: {\n      search: {\n        type,\n        reportId\n      }\n    },\n    routeParams: {\n      surveyId\n    }\n  } = usePageContext();\n  const purchaseReportHandler = useUnit(reportPurchased);\n  const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n  const {\n    types,\n    promocodeError,\n    currentUserMbti\n  } = useUnit({\n    types: PersonalitiesModel.$personalitiesMap,\n    promocodeError: $promocodeErrorMessage,\n    currentUserMbti: ReportModel.$userMbtiTypes.map(el => el.find(report => report[reportId]) ?? null)\n  });\n  const form = useForm({\n    mode: 'controlled',\n    initialValues: {\n      email: user?.user?.email ?? '',\n      mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n      promo_code: '',\n      user_report: reportId ?? ''\n    },\n    validate: {\n      email: (value: string) => /^\\S+@\\S+$/.test(value) ? null : 'Неправильный email',\n      mbti_type: (value: string | undefined) => reportId || value && value?.replaceAll('\"', '').length > 0 ? null : 'Выберите тип личности'\n    }\n  });\n  const dataValues = Object.keys(types).map(key => ({\n    value: key,\n    label: `${types[key]} (${key})`\n  }));\n  useEffect(() => {\n    if (!user) return;\n    form.setFieldValue('email', user?.user?.email ?? '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  const selectProps = {\n    size: 'md',\n    radius: 'xs',\n    disabled: Boolean(surveyId) || Boolean(reportId),\n    data: dataValues,\n    name: 'mbti_type',\n    withAsterisk: true,\n    key: form.key('mbti_type'),\n    rightSection: (Boolean(surveyId) || Boolean(reportId)) && <Lock />,\n    label: 'Тип личности для отчёта',\n    placeholder: 'Выберите из списка',\n    styles: {\n      label: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      }\n    },\n    ...form.getInputProps('mbti_type'),\n    onChange: (value: string | null) => {\n      form.setFieldValue('mbti_type', value ?? '');\n      window.history.pushState(null, '', `?type=${value}`);\n    }\n  };\n  const emailProps = {\n    radius: 'xs',\n    name: 'email',\n    withAsterisk: true,\n    key: form.key('email'),\n    label: 'Электронная почта',\n    placeholder: 'name@mail.ru',\n    ...form.getInputProps('email')\n  };\n  const promocodeProps = {\n    radius: 'xs',\n    name: 'promo_code',\n    key: form.key('promo_code'),\n    placeholder: 'Введите промокод',\n    ...form.getInputProps('promo_code')\n  };\n  const onSubmit = form.onSubmit(data => {\n    const preparedData: PurchasedReportRequest = {\n      ...data\n    };\n    if (!data.mbti_type) {\n      preparedData.mbti_type = type;\n    }\n    if (reportId) {\n      delete preparedData.mbti_type;\n    }\n    if (!reportId) {\n      delete preparedData.user_report;\n    }\n    if (!preparedData.promo_code || promocodeError) {\n      delete preparedData.promo_code;\n    }\n    purchaseReportHandler(preparedData);\n  });\n  useEffect(() => {\n    if (surveyId || type) return;\n    if (!type) return form.setFieldValue('mbti_type', Object.keys(types)[0]);\n    if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate('/');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n  return {\n    form,\n    onSubmit,\n    emailProps,\n    promocodeProps,\n    selectProps\n  };\n};",
      "start": 1750275033985,
      "end": 1750275033987,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useEffect",
          "useForm",
          "Lock",
          "useUnit",
          "navigate",
          "usePageContext",
          "PersonalitiesModel",
          "getSurveysInfoQuery",
          "PurchasedReportRequest",
          "ReportModel",
          "$promocodeErrorMessage",
          "reportPurchased",
          "useReportBuyFormViewModel",
          "urlParsed",
          "search",
          "type",
          "reportId",
          "routeParams",
          "surveyId",
          "purchaseReportHandler",
          "user",
          "isUserInfoLoading",
          "$data",
          "$pending",
          "types",
          "promocodeError",
          "currentUserMbti",
          "$personalitiesMap",
          "$userMbtiTypes",
          "map",
          "el",
          "find",
          "report",
          "form",
          "mode",
          "initialValues",
          "email",
          "mbti_type",
          "promo_code",
          "user_report",
          "validate",
          "value",
          "test",
          "replaceAll",
          "length",
          "dataValues",
          "Object",
          "keys",
          "key",
          "label",
          "setFieldValue",
          "selectProps",
          "size",
          "radius",
          "disabled",
          "Boolean",
          "data",
          "name",
          "withAsterisk",
          "rightSection",
          "placeholder",
          "styles",
          "fontWeight",
          "marginBottom",
          "getInputProps",
          "onChange",
          "window",
          "history",
          "pushState",
          "emailProps",
          "promocodeProps",
          "onSubmit",
          "preparedData"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/BuyReportForm/view-model/index.tsx"
        ],
        "sourcesContent": [
          "import { useEffect } from 'react';\nimport { useForm } from '@mantine/form';\nimport { Lock } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport { navigate } from 'vike/client/router';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { PersonalitiesModel } from '@/entities/Personality';\nimport { getSurveysInfoQuery, type PurchasedReportRequest, ReportModel } from '@/entities/Report';\n\nimport { $promocodeErrorMessage, reportPurchased } from '../model';\n\nexport const useReportBuyFormViewModel = () => {\n    const {\n        urlParsed: {\n            search: { type, reportId },\n        },\n        routeParams: { surveyId },\n    } = usePageContext();\n    const purchaseReportHandler = useUnit(reportPurchased);\n    const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n    const { types, promocodeError, currentUserMbti } = useUnit({\n        types: PersonalitiesModel.$personalitiesMap,\n        promocodeError: $promocodeErrorMessage,\n        currentUserMbti: ReportModel.$userMbtiTypes.map((el) => el.find((report) => report[reportId]) ?? null),\n    });\n\n    const form = useForm({\n        mode: 'controlled',\n        initialValues: {\n            email: user?.user?.email ?? '',\n            mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n            promo_code: '',\n            user_report: reportId ?? '',\n        },\n        validate: {\n            email: (value: string) => (/^\\S+@\\S+$/.test(value) ? null : 'Неправильный email'),\n            mbti_type: (value: string | undefined) =>\n                reportId || (value && value?.replaceAll('\"', '').length > 0) ? null : 'Выберите тип личности',\n        },\n    });\n\n    const dataValues = Object.keys(types).map((key) => ({\n        value: key,\n        label: `${types[key]} (${key})`,\n    }));\n\n    useEffect(() => {\n        if (!user) return;\n        form.setFieldValue('email', user?.user?.email ?? '');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user]);\n\n    const selectProps = {\n        size: 'md',\n        radius: 'xs',\n        disabled: Boolean(surveyId) || Boolean(reportId),\n        data: dataValues,\n        name: 'mbti_type',\n        withAsterisk: true,\n        key: form.key('mbti_type'),\n        rightSection: (Boolean(surveyId) || Boolean(reportId)) && <Lock />,\n        label: 'Тип личности для отчёта',\n        placeholder: 'Выберите из списка',\n        styles: { label: { fontWeight: 'bold', marginBottom: 4 } },\n        ...form.getInputProps('mbti_type'),\n        onChange: (value: string | null) => {\n            form.setFieldValue('mbti_type', value ?? '');\n            window.history.pushState(null, '', `?type=${value}`);\n        },\n    };\n\n    const emailProps = {\n        radius: 'xs',\n        name: 'email',\n        withAsterisk: true,\n        key: form.key('email'),\n        label: 'Электронная почта',\n        placeholder: 'name@mail.ru',\n        ...form.getInputProps('email'),\n    };\n\n    const promocodeProps = {\n        radius: 'xs',\n        name: 'promo_code',\n        key: form.key('promo_code'),\n        placeholder: 'Введите промокод',\n        ...form.getInputProps('promo_code'),\n    };\n\n    const onSubmit = form.onSubmit((data) => {\n        const preparedData: PurchasedReportRequest = { ...data };\n        if (!data.mbti_type) {\n            preparedData.mbti_type = type;\n        }\n\n        if (reportId) {\n            delete preparedData.mbti_type;\n        }\n\n        if (!reportId) {\n            delete preparedData.user_report;\n        }\n\n        if (!preparedData.promo_code || promocodeError) {\n            delete preparedData.promo_code;\n        }\n\n        purchaseReportHandler(preparedData);\n    });\n\n    useEffect(() => {\n        if (surveyId || type) return;\n        if (!type) return form.setFieldValue('mbti_type', Object.keys(types)[0]);\n        if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate('/');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n\n    return {\n        form,\n        onSubmit,\n        emailProps,\n        promocodeProps,\n        selectProps,\n    };\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"@mantine/form\";\nimport { Lock } from \"@phosphor-icons/react/dist/ssr\";\nimport { useUnit } from \"effector-react\";\nimport { navigate } from \"vike/client/router\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { PersonalitiesModel } from \"@/entities/Personality\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { $promocodeErrorMessage, reportPurchased } from \"../model\";\nexport const useReportBuyFormViewModel = () => {\n  const {\n    urlParsed: {\n      search: {\n        type,\n        reportId\n      }\n    },\n    routeParams: {\n      surveyId\n    }\n  } = usePageContext();\n  const purchaseReportHandler = useUnit(reportPurchased);\n  const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n  const {\n    types,\n    promocodeError,\n    currentUserMbti\n  } = useUnit({\n    types: PersonalitiesModel.$personalitiesMap,\n    promocodeError: $promocodeErrorMessage,\n    currentUserMbti: ReportModel.$userMbtiTypes.map((el) => el.find((report) => report[reportId]) ?? null)\n  });\n  const form = useForm({\n    mode: \"controlled\",\n    initialValues: {\n      email: user?.user?.email ?? \"\",\n      mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n      promo_code: \"\",\n      user_report: reportId ?? \"\"\n    },\n    validate: {\n      email: (value) => /^\\S+@\\S+$/.test(value) ? null : \"Неправильный email\",\n      mbti_type: (value) => reportId || value && value?.replaceAll('\"', \"\").length > 0 ? null : \"Выберите тип личности\"\n    }\n  });\n  const dataValues = Object.keys(types).map((key) => ({\n    value: key,\n    label: `${types[key]} (${key})`\n  }));\n  useEffect(() => {\n    if (!user) return;\n    form.setFieldValue(\"email\", user?.user?.email ?? \"\");\n  }, [user]);\n  const selectProps = {\n    size: \"md\",\n    radius: \"xs\",\n    disabled: Boolean(surveyId) || Boolean(reportId),\n    data: dataValues,\n    name: \"mbti_type\",\n    withAsterisk: true,\n    key: form.key(\"mbti_type\"),\n    rightSection: (Boolean(surveyId) || Boolean(reportId)) && /* @__PURE__ */ jsx(Lock, {}),\n    label: \"Тип личности для отчёта\",\n    placeholder: \"Выберите из списка\",\n    styles: {\n      label: {\n        fontWeight: \"bold\",\n        marginBottom: 4\n      }\n    },\n    ...form.getInputProps(\"mbti_type\"),\n    onChange: (value) => {\n      form.setFieldValue(\"mbti_type\", value ?? \"\");\n      window.history.pushState(null, \"\", `?type=${value}`);\n    }\n  };\n  const emailProps = {\n    radius: \"xs\",\n    name: \"email\",\n    withAsterisk: true,\n    key: form.key(\"email\"),\n    label: \"Электронная почта\",\n    placeholder: \"name@mail.ru\",\n    ...form.getInputProps(\"email\")\n  };\n  const promocodeProps = {\n    radius: \"xs\",\n    name: \"promo_code\",\n    key: form.key(\"promo_code\"),\n    placeholder: \"Введите промокод\",\n    ...form.getInputProps(\"promo_code\")\n  };\n  const onSubmit = form.onSubmit((data) => {\n    const preparedData = {\n      ...data\n    };\n    if (!data.mbti_type) {\n      preparedData.mbti_type = type;\n    }\n    if (reportId) {\n      delete preparedData.mbti_type;\n    }\n    if (!reportId) {\n      delete preparedData.user_report;\n    }\n    if (!preparedData.promo_code || promocodeError) {\n      delete preparedData.promo_code;\n    }\n    purchaseReportHandler(preparedData);\n  });\n  useEffect(() => {\n    if (surveyId || type) return;\n    if (!type) return form.setFieldValue(\"mbti_type\", Object.keys(types)[0]);\n    if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate(\"/\");\n  }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n  return {\n    form,\n    onSubmit,\n    emailProps,\n    promocodeProps,\n    selectProps\n  };\n};\n",
      "start": 1750275033987,
      "end": 1750275034227,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/BuyReportForm/view-model/index.tsx"
        ],
        "sourcesContent": [
          "import { useEffect } from 'react';\nimport { useForm } from '@mantine/form';\nimport { Lock } from '@phosphor-icons/react/dist/ssr';\nimport { useUnit } from 'effector-react';\nimport { navigate } from 'vike/client/router';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { PersonalitiesModel } from '@/entities/Personality';\nimport { getSurveysInfoQuery, type PurchasedReportRequest, ReportModel } from '@/entities/Report';\nimport { $promocodeErrorMessage, reportPurchased } from '../model';\nexport const useReportBuyFormViewModel = () => {\n  const {\n    urlParsed: {\n      search: {\n        type,\n        reportId\n      }\n    },\n    routeParams: {\n      surveyId\n    }\n  } = usePageContext();\n  const purchaseReportHandler = useUnit(reportPurchased);\n  const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n  const {\n    types,\n    promocodeError,\n    currentUserMbti\n  } = useUnit({\n    types: PersonalitiesModel.$personalitiesMap,\n    promocodeError: $promocodeErrorMessage,\n    currentUserMbti: ReportModel.$userMbtiTypes.map(el => el.find(report => report[reportId]) ?? null)\n  });\n  const form = useForm({\n    mode: 'controlled',\n    initialValues: {\n      email: user?.user?.email ?? '',\n      mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n      promo_code: '',\n      user_report: reportId ?? ''\n    },\n    validate: {\n      email: (value: string) => /^\\S+@\\S+$/.test(value) ? null : 'Неправильный email',\n      mbti_type: (value: string | undefined) => reportId || value && value?.replaceAll('\"', '').length > 0 ? null : 'Выберите тип личности'\n    }\n  });\n  const dataValues = Object.keys(types).map(key => ({\n    value: key,\n    label: `${types[key]} (${key})`\n  }));\n  useEffect(() => {\n    if (!user) return;\n    form.setFieldValue('email', user?.user?.email ?? '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  const selectProps = {\n    size: 'md',\n    radius: 'xs',\n    disabled: Boolean(surveyId) || Boolean(reportId),\n    data: dataValues,\n    name: 'mbti_type',\n    withAsterisk: true,\n    key: form.key('mbti_type'),\n    rightSection: (Boolean(surveyId) || Boolean(reportId)) && <Lock />,\n    label: 'Тип личности для отчёта',\n    placeholder: 'Выберите из списка',\n    styles: {\n      label: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      }\n    },\n    ...form.getInputProps('mbti_type'),\n    onChange: (value: string | null) => {\n      form.setFieldValue('mbti_type', value ?? '');\n      window.history.pushState(null, '', `?type=${value}`);\n    }\n  };\n  const emailProps = {\n    radius: 'xs',\n    name: 'email',\n    withAsterisk: true,\n    key: form.key('email'),\n    label: 'Электронная почта',\n    placeholder: 'name@mail.ru',\n    ...form.getInputProps('email')\n  };\n  const promocodeProps = {\n    radius: 'xs',\n    name: 'promo_code',\n    key: form.key('promo_code'),\n    placeholder: 'Введите промокод',\n    ...form.getInputProps('promo_code')\n  };\n  const onSubmit = form.onSubmit(data => {\n    const preparedData: PurchasedReportRequest = {\n      ...data\n    };\n    if (!data.mbti_type) {\n      preparedData.mbti_type = type;\n    }\n    if (reportId) {\n      delete preparedData.mbti_type;\n    }\n    if (!reportId) {\n      delete preparedData.user_report;\n    }\n    if (!preparedData.promo_code || promocodeError) {\n      delete preparedData.promo_code;\n    }\n    purchaseReportHandler(preparedData);\n  });\n  useEffect(() => {\n    if (surveyId || type) return;\n    if (!type) return form.setFieldValue('mbti_type', Object.keys(types)[0]);\n    if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate('/');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n  return {\n    form,\n    onSubmit,\n    emailProps,\n    promocodeProps,\n    selectProps\n  };\n};"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/BuyReportForm/view-model/index.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"@mantine/form\";\nimport { Lock } from \"@phosphor-icons/react/dist/ssr\";\nimport { useUnit } from \"effector-react\";\nimport { navigate } from \"vike/client/router\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { PersonalitiesModel } from \"@/entities/Personality\";\nimport { getSurveysInfoQuery, ReportModel } from \"@/entities/Report\";\nimport { $promocodeErrorMessage, reportPurchased } from \"../model\";\nexport const useReportBuyFormViewModel = () => {\n  const {\n    urlParsed: {\n      search: {\n        type,\n        reportId\n      }\n    },\n    routeParams: {\n      surveyId\n    }\n  } = usePageContext();\n  const purchaseReportHandler = useUnit(reportPurchased);\n  const [user, isUserInfoLoading] = useUnit([getSurveysInfoQuery.$data, getSurveysInfoQuery.$pending]);\n  const {\n    types,\n    promocodeError,\n    currentUserMbti\n  } = useUnit({\n    types: PersonalitiesModel.$personalitiesMap,\n    promocodeError: $promocodeErrorMessage,\n    currentUserMbti: ReportModel.$userMbtiTypes.map((el) => el.find((report) => report[reportId]) ?? null)\n  });\n  const form = useForm({\n    mode: \"controlled\",\n    initialValues: {\n      email: user?.user?.email ?? \"\",\n      mbti_type: reportId ? currentUserMbti?.[reportId] : type,\n      promo_code: \"\",\n      user_report: reportId ?? \"\"\n    },\n    validate: {\n      email: (value) => /^\\S+@\\S+$/.test(value) ? null : \"Неправильный email\",\n      mbti_type: (value) => reportId || value && value?.replaceAll('\"', \"\").length > 0 ? null : \"Выберите тип личности\"\n    }\n  });\n  const dataValues = Object.keys(types).map((key) => ({\n    value: key,\n    label: `${types[key]} (${key})`\n  }));\n  useEffect(() => {\n    if (!user) return;\n    form.setFieldValue(\"email\", user?.user?.email ?? \"\");\n  }, [user]);\n  const selectProps = {\n    size: \"md\",\n    radius: \"xs\",\n    disabled: Boolean(surveyId) || Boolean(reportId),\n    data: dataValues,\n    name: \"mbti_type\",\n    withAsterisk: true,\n    key: form.key(\"mbti_type\"),\n    rightSection: (Boolean(surveyId) || Boolean(reportId)) && /* @__PURE__ */ jsx(Lock, {}),\n    label: \"Тип личности для отчёта\",\n    placeholder: \"Выберите из списка\",\n    styles: {\n      label: {\n        fontWeight: \"bold\",\n        marginBottom: 4\n      }\n    },\n    ...form.getInputProps(\"mbti_type\"),\n    onChange: (value) => {\n      form.setFieldValue(\"mbti_type\", value ?? \"\");\n      window.history.pushState(null, \"\", `?type=${value}`);\n    }\n  };\n  const emailProps = {\n    radius: \"xs\",\n    name: \"email\",\n    withAsterisk: true,\n    key: form.key(\"email\"),\n    label: \"Электронная почта\",\n    placeholder: \"name@mail.ru\",\n    ...form.getInputProps(\"email\")\n  };\n  const promocodeProps = {\n    radius: \"xs\",\n    name: \"promo_code\",\n    key: form.key(\"promo_code\"),\n    placeholder: \"Введите промокод\",\n    ...form.getInputProps(\"promo_code\")\n  };\n  const onSubmit = form.onSubmit((data) => {\n    const preparedData = {\n      ...data\n    };\n    if (!data.mbti_type) {\n      preparedData.mbti_type = type;\n    }\n    if (reportId) {\n      delete preparedData.mbti_type;\n    }\n    if (!reportId) {\n      delete preparedData.user_report;\n    }\n    if (!preparedData.promo_code || promocodeError) {\n      delete preparedData.promo_code;\n    }\n    purchaseReportHandler(preparedData);\n  });\n  useEffect(() => {\n    if (surveyId || type) return;\n    if (!type) return form.setFieldValue(\"mbti_type\", Object.keys(types)[0]);\n    if (!isUserInfoLoading && !currentUserMbti?.[reportId]) navigate(\"/\");\n  }, [type, currentUserMbti, reportId, surveyId, isUserInfoLoading]);\n  return {\n    form,\n    onSubmit,\n    emailProps,\n    promocodeProps,\n    selectProps\n  };\n};\n",
      "start": 1750275034227,
      "end": 1750275034227,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/BuyReportForm/view-model/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdtH,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC;AACH,CAAC;"
      }
    }
  ]
}

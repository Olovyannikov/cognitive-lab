{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/FullReportNavigation/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useStoreMap, useUnit } from 'effector-react';\n\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from '@/entities/Report';\n\nexport const FullReportNavigation = () => {\n    const [page, onPageChange] = useUnit([\n        ReportModel.$currentContentPage,\n        ReportModel.currentPageChanged,\n        ReportModel.$currentPage,\n    ]);\n    const content = useStoreMap({\n        store: getFullReportQuery.$data,\n        keys: ['title', page],\n        fn: (content) => content?.content?.map(({ title }) => title),\n    });\n\n    const mbti = useUnit(getFullReportQuery.$data.map((el) => el?.mbti_type));\n    const color = TYPE_TO_COLOR_MAP[mbti];\n\n    const activeMenu = content?.[page];\n\n    if (!content) return null;\n\n    return (\n        <ReportNavigationTemplate\n            activeMenu={activeMenu}\n            color={color}\n            content={content}\n            title={content[page]}\n            onPageChange={onPageChange}\n        />\n    );\n};\n",
      "start": 1750278466968,
      "end": 1750278467005,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { useStoreMap, useUnit } from 'effector-react';\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from '@/entities/Report';\nexport const FullReportNavigation = () => {\n  const [page, onPageChange] = useUnit([ReportModel.$currentContentPage, ReportModel.currentPageChanged, ReportModel.$currentPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: ['title', page],\n    fn: content => content?.content?.map(({\n      title\n    }) => title)\n  });\n  const mbti = useUnit(getFullReportQuery.$data.map(el => el?.mbti_type));\n  const color = TYPE_TO_COLOR_MAP[mbti];\n  const activeMenu = content?.[page];\n  if (!content) return null;\n  return <ReportNavigationTemplate activeMenu={activeMenu} color={color} content={content} title={content[page]} onPageChange={onPageChange} />;\n};",
      "start": 1750278467005,
      "end": 1750278467007,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useStoreMap",
          "useUnit",
          "getFullReportQuery",
          "ReportModel",
          "ReportNavigationTemplate",
          "TYPE_TO_COLOR_MAP",
          "FullReportNavigation",
          "page",
          "onPageChange",
          "$currentContentPage",
          "currentPageChanged",
          "$currentPage",
          "content",
          "store",
          "$data",
          "keys",
          "fn",
          "map",
          "title",
          "mbti",
          "el",
          "mbti_type",
          "color",
          "activeMenu"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/FullReportNavigation/index.tsx"],
        "sourcesContent": [
          "import { useStoreMap, useUnit } from 'effector-react';\n\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from '@/entities/Report';\n\nexport const FullReportNavigation = () => {\n    const [page, onPageChange] = useUnit([\n        ReportModel.$currentContentPage,\n        ReportModel.currentPageChanged,\n        ReportModel.$currentPage,\n    ]);\n    const content = useStoreMap({\n        store: getFullReportQuery.$data,\n        keys: ['title', page],\n        fn: (content) => content?.content?.map(({ title }) => title),\n    });\n\n    const mbti = useUnit(getFullReportQuery.$data.map((el) => el?.mbti_type));\n    const color = TYPE_TO_COLOR_MAP[mbti];\n\n    const activeMenu = content?.[page];\n\n    if (!content) return null;\n\n    return (\n        <ReportNavigationTemplate\n            activeMenu={activeMenu}\n            color={color}\n            content={content}\n            title={content[page]}\n            onPageChange={onPageChange}\n        />\n    );\n};\n"
        ],
        "mappings": "AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,gBAAgB;AAErD,SAASC,kBAAkB,EAAEC,WAAW,EAAEC,wBAAwB,EAAEC,iBAAiB,QAAQ,mBAAmB;AAEhH,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACtC,MAAM,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGP,OAAO,CAAC,CACjCE,WAAW,CAACM,mBAAmB,EAC/BN,WAAW,CAACO,kBAAkB,EAC9BP,WAAW,CAACQ,YAAY,CAC3B,CAAC;EACF,MAAMC,OAAO,GAAGZ,WAAW,CAAC;IACxBa,KAAK,EAAEX,kBAAkB,CAACY,KAAK;IAC/BC,IAAI,EAAE,CAAC,OAAO,EAAER,IAAI,CAAC;IACrBS,EAAE,EAAGJ,OAAO,IAAKA,OAAO,EAAEA,OAAO,EAAEK,GAAG,CAAC,CAAC;MAAEC;IAAM,CAAC,KAAKA,KAAK;EAC/D,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGlB,OAAO,CAACC,kBAAkB,CAACY,KAAK,CAACG,GAAG,CAAEG,EAAE,IAAKA,EAAE,EAAEC,SAAS,CAAC,CAAC;EACzE,MAAMC,KAAK,GAAGjB,iBAAiB,CAACc,IAAI,CAAC;EAErC,MAAMI,UAAU,GAAGX,OAAO,GAAGL,IAAI,CAAC;EAElC,IAAI,CAACK,OAAO,EAAE,OAAO,IAAI;EAEzB,OACI,CAAC,wBAAwB,CACrB,UAAU,CAAC,CAACW,UAAU,CAAC,CACvB,KAAK,CAAC,CAACD,KAAK,CAAC,CACb,OAAO,CAAC,CAACV,OAAO,CAAC,CACjB,KAAK,CAAC,CAACA,OAAO,CAACL,IAAI,CAAC,CAAC,CACrB,YAAY,CAAC,CAACC,YAAY,CAAC,GAC7B;AAEV,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { useStoreMap, useUnit } from \"effector-react\";\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from \"@/entities/Report\";\nexport const FullReportNavigation = () => {\n  const [page, onPageChange] = useUnit([ReportModel.$currentContentPage, ReportModel.currentPageChanged, ReportModel.$currentPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: [\"title\", page],\n    fn: (content2) => content2?.content?.map(({\n      title\n    }) => title)\n  });\n  const mbti = useUnit(getFullReportQuery.$data.map((el) => el?.mbti_type));\n  const color = TYPE_TO_COLOR_MAP[mbti];\n  const activeMenu = content?.[page];\n  if (!content) return null;\n  return /* @__PURE__ */ jsx(ReportNavigationTemplate, { activeMenu, color, content, title: content[page], onPageChange });\n};\n",
      "start": 1750278467007,
      "end": 1750278467173,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/FullReportNavigation/index.tsx"],
        "sourcesContent": [
          "import { useStoreMap, useUnit } from 'effector-react';\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from '@/entities/Report';\nexport const FullReportNavigation = () => {\n  const [page, onPageChange] = useUnit([ReportModel.$currentContentPage, ReportModel.currentPageChanged, ReportModel.$currentPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: ['title', page],\n    fn: content => content?.content?.map(({\n      title\n    }) => title)\n  });\n  const mbti = useUnit(getFullReportQuery.$data.map(el => el?.mbti_type));\n  const color = TYPE_TO_COLOR_MAP[mbti];\n  const activeMenu = content?.[page];\n  if (!content) return null;\n  return <ReportNavigationTemplate activeMenu={activeMenu} color={color} content={content} title={content[page]} onPageChange={onPageChange} />;\n};"
        ],
        "mappings": "AAeS;AAfT,SAAS,aAAa,eAAe;AACrC,SAAS,oBAAoB,aAAa,0BAA0B,yBAAyB;AACtF,aAAM,uBAAuB,MAAM;AACxC,QAAM,CAAC,MAAM,YAAY,IAAI,QAAQ,CAAC,YAAY,qBAAqB,YAAY,oBAAoB,YAAY,YAAY,CAAC;AAChI,QAAM,UAAU,YAAY;AAAA,IAC1B,OAAO,mBAAmB;AAAA,IAC1B,MAAM,CAAC,SAAS,IAAI;AAAA,IACpB,IAAI,CAAAA,aAAWA,UAAS,SAAS,IAAI,CAAC;AAAA,MACpC;AAAA,IACF,MAAM,KAAK;AAAA,EACb,CAAC;AACD,QAAM,OAAO,QAAQ,mBAAmB,MAAM,IAAI,QAAM,IAAI,SAAS,CAAC;AACtE,QAAM,QAAQ,kBAAkB,IAAI;AACpC,QAAM,aAAa,UAAU,IAAI;AACjC,MAAI,CAAC,QAAS,QAAO;AACrB,SAAO,oBAAC,4BAAyB,YAAwB,OAAc,SAAkB,OAAO,QAAQ,IAAI,GAAG,cAA4B;AAC7I;",
        "names": ["content"]
      }
    },
    {
      "name": "vite:worker",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/FullReportNavigation/index.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { useStoreMap, useUnit } from \"effector-react\";\nimport { getFullReportQuery, ReportModel, ReportNavigationTemplate, TYPE_TO_COLOR_MAP } from \"@/entities/Report\";\nexport const FullReportNavigation = () => {\n  const [page, onPageChange] = useUnit([ReportModel.$currentContentPage, ReportModel.currentPageChanged, ReportModel.$currentPage]);\n  const content = useStoreMap({\n    store: getFullReportQuery.$data,\n    keys: [\"title\", page],\n    fn: (content2) => content2?.content?.map(({\n      title\n    }) => title)\n  });\n  const mbti = useUnit(getFullReportQuery.$data.map((el) => el?.mbti_type));\n  const color = TYPE_TO_COLOR_MAP[mbti];\n  const activeMenu = content?.[page];\n  if (!content) return null;\n  return /* @__PURE__ */ jsx(ReportNavigationTemplate, { activeMenu, color, content, title: content[page], onPageChange });\n};\n",
      "start": 1750278467173,
      "end": 1750278467173,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/FullReportNavigation/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrhnI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACp
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\n\nimport { ROUTES } from '@/shared/config';\nimport { useIsMedium } from '@/shared/lib';\n\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\n\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\n\nimport s from './Types.module.css';\n\nexport const Types = () => {\n    const isDesktop = useIsMedium();\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n        RootModel.$isSubmenuOpened,\n        RootModel.closeSubmenu,\n        RootModel.openSubmenu,\n        RootModel.allMenusClosed,\n    ]);\n\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => (\n        <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />\n    ));\n\n    return (\n        <Menu\n            classNames={s}\n            trapFocus={true}\n            closeOnEscape={true}\n            position='bottom-end'\n            opened={isSubmenuOpen}\n            closeOnItemClick={false}\n            closeOnClickOutside={false}\n            width={isDesktop ? 1084 : '100%'}\n            trigger={isDesktop ? 'hover' : 'click'}\n            onOpen={() => isDesktop && onOpenSubmenu(true)}\n            onClose={() => onCloseSubmenu(false)}\n            withinPortal={false}\n            openDelay={300}\n            disabled\n        >\n            <Menu.Target>\n                <Link href={ROUTES.TYPES} onClick={() => onCloseAllMenus(false)}>\n                    Типы личности\n                </Link>\n            </Menu.Target>\n            <Menu.Dropdown style={{ zIndex: 1200 }}>\n                <Button\n                    mb='lg'\n                    fz={20}\n                    size='md'\n                    fullWidth\n                    c='dark.7'\n                    justify='start'\n                    hiddenFrom='sm'\n                    variant='transparent'\n                    leftSection={<ArrowLeft size={24} />}\n                    onClick={() => onCloseSubmenu(false)}\n                >\n                    Назад\n                </Button>\n                <Stack pos='relative' gap={16}>\n                    {list}\n                </Stack>\n            </Menu.Dropdown>\n        </Menu>\n    );\n};\n",
      "start": 1750271785346,
      "end": 1750271785351,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\nimport { ROUTES } from '@/shared/config';\nimport { useIsMedium } from '@/shared/lib';\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\nimport s from './Types.module.css';\nexport const Types = ()=>{\n    const isDesktop = useIsMedium();\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n        RootModel.$isSubmenuOpened,\n        RootModel.closeSubmenu,\n        RootModel.openSubmenu,\n        RootModel.allMenusClosed\n    ]);\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item)=>/*#__PURE__*/ _jsx(MenuItem, {\n            ...item,\n            onClose: ()=>onCloseAllMenus(false)\n        }));\n    return /*#__PURE__*/ _jsxs(Menu, {\n        classNames: s,\n        trapFocus: true,\n        closeOnEscape: true,\n        position: \"bottom-end\",\n        opened: isSubmenuOpen,\n        closeOnItemClick: false,\n        closeOnClickOutside: false,\n        width: isDesktop ? 1084 : '100%',\n        trigger: isDesktop ? 'hover' : 'click',\n        onOpen: ()=>isDesktop && onOpenSubmenu(true),\n        onClose: ()=>onCloseSubmenu(false),\n        withinPortal: false,\n        openDelay: 300,\n        disabled: true,\n        children: [\n            /*#__PURE__*/ _jsx(Menu.Target, {\n                children: /*#__PURE__*/ _jsx(Link, {\n                    href: ROUTES.TYPES,\n                    onClick: ()=>onCloseAllMenus(false),\n                    children: \"Типы личности\"\n                })\n            }),\n            /*#__PURE__*/ _jsxs(Menu.Dropdown, {\n                style: {\n                    zIndex: 1200\n                },\n                children: [\n                    /*#__PURE__*/ _jsx(Button, {\n                        mb: \"lg\",\n                        fz: 20,\n                        size: \"md\",\n                        fullWidth: true,\n                        c: \"dark.7\",\n                        justify: \"start\",\n                        hiddenFrom: \"sm\",\n                        variant: \"transparent\",\n                        leftSection: /*#__PURE__*/ _jsx(ArrowLeft, {\n                            size: 24\n                        }),\n                        onClick: ()=>onCloseSubmenu(false),\n                        children: \"Назад\"\n                    }),\n                    /*#__PURE__*/ _jsx(Stack, {\n                        pos: \"relative\",\n                        gap: 16,\n                        children: list\n                    })\n                ]\n            })\n        ]\n    });\n};\n",
      "start": 1750271785351,
      "end": 1750271785354,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx\"],\"sourcesContent\":[\"import { Button, Menu, Stack } from '@mantine/core';\\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\\nimport { useList, useUnit } from 'effector-react';\\n\\nimport { ROUTES } from '@/shared/config';\\nimport { useIsMedium } from '@/shared/lib';\\n\\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\\nimport { RootModel } from '@/entities/Root';\\n\\nimport { Link } from '../../Link';\\nimport { MenuItem } from '../MenuItem';\\n\\nimport s from './Types.module.css';\\n\\nexport const Types = () => {\\n    const isDesktop = useIsMedium();\\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\\n        RootModel.$isSubmenuOpened,\\n        RootModel.closeSubmenu,\\n        RootModel.openSubmenu,\\n        RootModel.allMenusClosed,\\n    ]);\\n\\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => (\\n        <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />\\n    ));\\n\\n    return (\\n        <Menu\\n            classNames={s}\\n            trapFocus={true}\\n            closeOnEscape={true}\\n            position='bottom-end'\\n            opened={isSubmenuOpen}\\n            closeOnItemClick={false}\\n            closeOnClickOutside={false}\\n            width={isDesktop ? 1084 : '100%'}\\n            trigger={isDesktop ? 'hover' : 'click'}\\n            onOpen={() => isDesktop && onOpenSubmenu(true)}\\n            onClose={() => onCloseSubmenu(false)}\\n            withinPortal={false}\\n            openDelay={300}\\n            disabled\\n        >\\n            <Menu.Target>\\n                <Link href={ROUTES.TYPES} onClick={() => onCloseAllMenus(false)}>\\n                    Типы личности\\n                </Link>\\n            </Menu.Target>\\n            <Menu.Dropdown style={{ zIndex: 1200 }}>\\n                <Button\\n                    mb='lg'\\n                    fz={20}\\n                    size='md'\\n                    fullWidth\\n                    c='dark.7'\\n                    justify='start'\\n                    hiddenFrom='sm'\\n                    variant='transparent'\\n                    leftSection={<ArrowLeft size={24} />}\\n                    onClick={() => onCloseSubmenu(false)}\\n                >\\n                    Назад\\n                </Button>\\n                <Stack pos='relative' gap={16}>\\n                    {list}\\n                </Stack>\\n            </Menu.Dropdown>\\n        </Menu>\\n    );\\n};\\n\"],\"names\":[\"Button\",\"Menu\",\"Stack\",\"ArrowLeft\",\"useList\",\"useUnit\",\"ROUTES\",\"useIsMedium\",\"getPersonalityTypesWithCategoriesQuery\",\"RootModel\",\"Link\",\"MenuItem\",\"s\",\"Types\",\"isDesktop\",\"isSubmenuOpen\",\"onCloseSubmenu\",\"onOpenSubmenu\",\"onCloseAllMenus\",\"$isSubmenuOpened\",\"closeSubmenu\",\"openSubmenu\",\"allMenusClosed\",\"list\",\"$data\",\"item\",\"onClose\",\"classNames\",\"trapFocus\",\"closeOnEscape\",\"position\",\"opened\",\"closeOnItemClick\",\"closeOnClickOutside\",\"width\",\"trigger\",\"onOpen\",\"withinPortal\",\"openDelay\",\"disabled\",\"Target\",\"href\",\"TYPES\",\"onClick\",\"Dropdown\",\"style\",\"zIndex\",\"mb\",\"fz\",\"size\",\"fullWidth\",\"c\",\"justify\",\"hiddenFrom\",\"variant\",\"leftSection\",\"pos\",\"gap\"],\"mappings\":\";AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,gBAAgB;AACpD,SAASC,SAAS,QAAQ,iCAAiC;AAC3D,SAASC,OAAO,EAAEC,OAAO,QAAQ,iBAAiB;AAElD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,QAAQ,eAAe;AAE3C,SAASC,sCAAsC,QAAQ,yBAAyB;AAChF,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,QAAQ,QAAQ,cAAc;AAEvC,OAAOC,OAAO,qBAAqB;AAEnC,OAAO,MAAMC,QAAQ;IACjB,MAAMC,YAAYP;IAClB,MAAM,CAACQ,eAAeC,gBAAgBC,eAAeC,gBAAgB,GAAGb,QAAQ;QAC5EI,UAAUU,gBAAgB;QAC1BV,UAAUW,YAAY;QACtBX,UAAUY,WAAW;QACrBZ,UAAUa,cAAc;KAC3B;IAED,MAAMC,OAAOnB,QAAQI,uCAAuCgB,KAAK,EAAE,CAACC,qBAChE,KAACd;YAAU,GAAGc,IAAI;YAAEC,SAAS,IAAMR,gBAAgB;;IAGvD,qBACI,MAACjB;QACG0B,YAAYf;QACZgB,WAAW;QACXC,eAAe;QACfC,UAAS;QACTC,QAAQhB;QACRiB,kBAAkB;QAClBC,qBAAqB;QACrBC,OAAOpB,YAAY,OAAO;QAC1BqB,SAASrB,YAAY,UAAU;QAC/BsB,QAAQ,IAAMtB,aAAaG,cAAc;QACzCS,SAAS,IAAMV,eAAe;QAC9BqB,cAAc;QACdC,WAAW;QACXC,QAAQ;;0BAER,KAACtC,KAAKuC,MAAM;0BACR,cAAA,KAAC9B;oBAAK+B,MAAMnC,OAAOoC,KAAK;oBAAEC,SAAS,IAAMzB,gBAAgB;8BAAQ;;;0BAIrE,MAACjB,KAAK2C,QAAQ;gBAACC,OAAO;oBAAEC,QAAQ;gBAAK;;kCACjC,KAAC9C;wBACG+C,IAAG;wBACHC,IAAI;wBACJC,MAAK;wBACLC,SAAS;wBACTC,GAAE;wBACFC,SAAQ;wBACRC,YAAW;wBACXC,SAAQ;wBACRC,2BAAa,KAACpD;4BAAU8C,MAAM;;wBAC9BN,SAAS,IAAM3B,eAAe;kCACjC;;kCAGD,KAACd;wBAAMsD,KAAI;wBAAWC,KAAK;kCACtBlC;;;;;;AAKrB,EAAE\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from \"@mantine/core\";\nimport { ArrowLeft } from \"@phosphor-icons/react/dist/ssr\";\nimport { useList, useUnit } from \"effector-react\";\nimport { ROUTES } from \"@/shared/config\";\nimport { useIsMedium } from \"@/shared/lib\";\nimport { getPersonalityTypesWithCategoriesQuery } from \"@/entities/Personality\";\nimport { RootModel } from \"@/entities/Root\";\nimport { Link } from \"../../Link\";\nimport { MenuItem } from \"../MenuItem\";\nimport s from \"./Types.module.css\";\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n    RootModel.$isSubmenuOpened,\n    RootModel.closeSubmenu,\n    RootModel.openSubmenu,\n    RootModel.allMenusClosed\n  ]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => /* @__PURE__ */ _jsx(MenuItem, {\n    ...item,\n    onClose: () => onCloseAllMenus(false)\n  }));\n  return /* @__PURE__ */ _jsxs(Menu, {\n    classNames: s,\n    trapFocus: true,\n    closeOnEscape: true,\n    position: \"bottom-end\",\n    opened: isSubmenuOpen,\n    closeOnItemClick: false,\n    closeOnClickOutside: false,\n    width: isDesktop ? 1084 : \"100%\",\n    trigger: isDesktop ? \"hover\" : \"click\",\n    onOpen: () => isDesktop && onOpenSubmenu(true),\n    onClose: () => onCloseSubmenu(false),\n    withinPortal: false,\n    openDelay: 300,\n    disabled: true,\n    children: [\n      /* @__PURE__ */ _jsx(Menu.Target, {\n        children: /* @__PURE__ */ _jsx(Link, {\n          href: ROUTES.TYPES,\n          onClick: () => onCloseAllMenus(false),\n          children: \"Типы личности\"\n        })\n      }),\n      /* @__PURE__ */ _jsxs(Menu.Dropdown, {\n        style: {\n          zIndex: 1200\n        },\n        children: [\n          /* @__PURE__ */ _jsx(Button, {\n            mb: \"lg\",\n            fz: 20,\n            size: \"md\",\n            fullWidth: true,\n            c: \"dark.7\",\n            justify: \"start\",\n            hiddenFrom: \"sm\",\n            variant: \"transparent\",\n            leftSection: /* @__PURE__ */ _jsx(ArrowLeft, {\n              size: 24\n            }),\n            onClick: () => onCloseSubmenu(false),\n            children: \"Назад\"\n          }),\n          /* @__PURE__ */ _jsx(Stack, {\n            pos: \"relative\",\n            gap: 16,\n            children: list\n          })\n        ]\n      })\n    ]\n  });\n};\n",
      "start": 1750271785354,
      "end": 1750271785371,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx"
        ],
        "sourcesContent": [
          "import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\nimport { ROUTES } from '@/shared/config';\nimport { useIsMedium } from '@/shared/lib';\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\nimport s from './Types.module.css';\nexport const Types = ()=>{\n    const isDesktop = useIsMedium();\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n        RootModel.$isSubmenuOpened,\n        RootModel.closeSubmenu,\n        RootModel.openSubmenu,\n        RootModel.allMenusClosed\n    ]);\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item)=>/*#__PURE__*/ _jsx(MenuItem, {\n            ...item,\n            onClose: ()=>onCloseAllMenus(false)\n        }));\n    return /*#__PURE__*/ _jsxs(Menu, {\n        classNames: s,\n        trapFocus: true,\n        closeOnEscape: true,\n        position: \"bottom-end\",\n        opened: isSubmenuOpen,\n        closeOnItemClick: false,\n        closeOnClickOutside: false,\n        width: isDesktop ? 1084 : '100%',\n        trigger: isDesktop ? 'hover' : 'click',\n        onOpen: ()=>isDesktop && onOpenSubmenu(true),\n        onClose: ()=>onCloseSubmenu(false),\n        withinPortal: false,\n        openDelay: 300,\n        disabled: true,\n        children: [\n            /*#__PURE__*/ _jsx(Menu.Target, {\n                children: /*#__PURE__*/ _jsx(Link, {\n                    href: ROUTES.TYPES,\n                    onClick: ()=>onCloseAllMenus(false),\n                    children: \"Типы личности\"\n                })\n            }),\n            /*#__PURE__*/ _jsxs(Menu.Dropdown, {\n                style: {\n                    zIndex: 1200\n                },\n                children: [\n                    /*#__PURE__*/ _jsx(Button, {\n                        mb: \"lg\",\n                        fz: 20,\n                        size: \"md\",\n                        fullWidth: true,\n                        c: \"dark.7\",\n                        justify: \"start\",\n                        hiddenFrom: \"sm\",\n                        variant: \"transparent\",\n                        leftSection: /*#__PURE__*/ _jsx(ArrowLeft, {\n                            size: 24\n                        }),\n                        onClick: ()=>onCloseSubmenu(false),\n                        children: \"Назад\"\n                    }),\n                    /*#__PURE__*/ _jsx(Stack, {\n                        pos: \"relative\",\n                        gap: 16,\n                        children: list\n                    })\n                ]\n            })\n        ]\n    });\n};\n"
        ],
        "mappings": "AAAA,SAAS,OAAO,MAAM,QAAQ,aAAa;AAC3C,SAAS,QAAQ,MAAM,aAAa;AACpC,SAAS,iBAAiB;AAC1B,SAAS,SAAS,eAAe;AACjC,SAAS,cAAc;AACvB,SAAS,mBAAmB;AAC5B,SAAS,8CAA8C;AACvD,SAAS,iBAAiB;AAC1B,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,OAAO,OAAO;AACP,aAAM,QAAQ,MAAI;AACrB,QAAM,YAAY,YAAY;AAC9B,QAAM,CAAC,eAAe,gBAAgB,eAAe,eAAe,IAAI,QAAQ;AAAA,IAC5E,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,EACd,CAAC;AACD,QAAM,OAAO,QAAQ,uCAAuC,OAAO,CAAC,SAAqB,qBAAK,UAAU;AAAA,IAChG,GAAG;AAAA,IACH,SAAS,MAAI,gBAAgB,KAAK;AAAA,EACtC,CAAC,CAAC;AACN,SAAqB,sBAAM,MAAM;AAAA,IAC7B,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,eAAe;AAAA,IACf,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,IACrB,OAAO,YAAY,OAAO;AAAA,IAC1B,SAAS,YAAY,UAAU;AAAA,IAC/B,QAAQ,MAAI,aAAa,cAAc,IAAI;AAAA,IAC3C,SAAS,MAAI,eAAe,KAAK;AAAA,IACjC,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,MACQ,qBAAK,KAAK,QAAQ;AAAA,QAC5B,UAAwB,qBAAK,MAAM;AAAA,UAC/B,MAAM,OAAO;AAAA,UACb,SAAS,MAAI,gBAAgB,KAAK;AAAA,UAClC,UAAU;AAAA,QACd,CAAC;AAAA,MACL,CAAC;AAAA,MACa,sBAAM,KAAK,UAAU;AAAA,QAC/B,OAAO;AAAA,UACH,QAAQ;AAAA,QACZ;AAAA,QACA,UAAU;AAAA,UACQ,qBAAK,QAAQ;AAAA,YACvB,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,WAAW;AAAA,YACX,GAAG;AAAA,YACH,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,SAAS;AAAA,YACT,aAA2B,qBAAK,WAAW;AAAA,cACvC,MAAM;AAAA,YACV,CAAC;AAAA,YACD,SAAS,MAAI,eAAe,KAAK;AAAA,YACjC,UAAU;AAAA,UACd,CAAC;AAAA,UACa,qBAAK,OAAO;AAAA,YACtB,KAAK;AAAA,YACL,KAAK;AAAA,YACL,UAAU;AAAA,UACd,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACL;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/widgets/RootLayout/ui/Navigation/Types/index.tsx [vike:pluginModuleBanner] */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from \"@mantine/core\";\nimport { ArrowLeft } from \"@phosphor-icons/react/dist/ssr\";\nimport { useList, useUnit } from \"effector-react\";\nimport { ROUTES } from \"@/shared/config\";\nimport { useIsMedium } from \"@/shared/lib\";\nimport { getPersonalityTypesWithCategoriesQuery } from \"@/entities/Personality\";\nimport { RootModel } from \"@/entities/Root\";\nimport { Link } from \"../../Link\";\nimport { MenuItem } from \"../MenuItem\";\nimport s from \"./Types.module.css\";\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n    RootModel.$isSubmenuOpened,\n    RootModel.closeSubmenu,\n    RootModel.openSubmenu,\n    RootModel.allMenusClosed\n  ]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => /* @__PURE__ */ _jsx(MenuItem, {\n    ...item,\n    onClose: () => onCloseAllMenus(false)\n  }));\n  return /* @__PURE__ */ _jsxs(Menu, {\n    classNames: s,\n    trapFocus: true,\n    closeOnEscape: true,\n    position: \"bottom-end\",\n    opened: isSubmenuOpen,\n    closeOnItemClick: false,\n    closeOnClickOutside: false,\n    width: isDesktop ? 1084 : \"100%\",\n    trigger: isDesktop ? \"hover\" : \"click\",\n    onOpen: () => isDesktop && onOpenSubmenu(true),\n    onClose: () => onCloseSubmenu(false),\n    withinPortal: false,\n    openDelay: 300,\n    disabled: true,\n    children: [\n      /* @__PURE__ */ _jsx(Menu.Target, {\n        children: /* @__PURE__ */ _jsx(Link, {\n          href: ROUTES.TYPES,\n          onClick: () => onCloseAllMenus(false),\n          children: \"Типы личности\"\n        })\n      }),\n      /* @__PURE__ */ _jsxs(Menu.Dropdown, {\n        style: {\n          zIndex: 1200\n        },\n        children: [\n          /* @__PURE__ */ _jsx(Button, {\n            mb: \"lg\",\n            fz: 20,\n            size: \"md\",\n            fullWidth: true,\n            c: \"dark.7\",\n            justify: \"start\",\n            hiddenFrom: \"sm\",\n            variant: \"transparent\",\n            leftSection: /* @__PURE__ */ _jsx(ArrowLeft, {\n              size: 24\n            }),\n            onClick: () => onCloseSubmenu(false),\n            children: \"Назад\"\n          }),\n          /* @__PURE__ */ _jsx(Stack, {\n            pos: \"relative\",\n            gap: 16,\n            children: list\n          })\n        ]\n      })\n    ]\n  });\n};\n",
      "start": 1750271785371,
      "end": 1750271785371,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/RootLayout/ui/Navigation/Types/index.tsx"],
        "names": [],
        "mappingsnjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzxC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    }
  ]
}

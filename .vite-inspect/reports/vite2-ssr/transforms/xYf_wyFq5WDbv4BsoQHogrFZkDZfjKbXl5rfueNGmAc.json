{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\n\nimport { useIsMedium } from '@/shared/lib';\n\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\n\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\n\nimport s from './Types.module.css';\n\nexport const Types = () => {\n    const isDesktop = useIsMedium();\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n        RootModel.$isSubmenuOpened,\n        RootModel.closeSubmenu,\n        RootModel.openSubmenu,\n        RootModel.allMenusClosed,\n    ]);\n\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => (\n        <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />\n    ));\n\n    return (\n        <Menu\n            classNames={s}\n            trapFocus={true}\n            closeOnEscape={true}\n            position='bottom-end'\n            opened={isSubmenuOpen}\n            closeOnItemClick={false}\n            closeOnClickOutside={false}\n            width={isDesktop ? 1084 : '100%'}\n            trigger={isDesktop ? 'hover' : 'click'}\n            onOpen={() => isDesktop && onOpenSubmenu(true)}\n            onClose={() => onCloseSubmenu(false)}\n            withinPortal={false}\n            openDelay={300}\n            disabled\n        >\n            <Menu.Target>\n                <Link href='/types' onClick={() => onCloseAllMenus(false)}>\n                    Типы личности\n                </Link>\n            </Menu.Target>\n            <Menu.Dropdown style={{ zIndex: 1200 }}>\n                <Button\n                    mb='lg'\n                    fz={20}\n                    size='md'\n                    fullWidth\n                    c='dark.7'\n                    justify='start'\n                    hiddenFrom='sm'\n                    variant='transparent'\n                    leftSection={<ArrowLeft size={24} />}\n                    onClick={() => onCloseSubmenu(false)}\n                >\n                    Назад\n                </Button>\n                <Stack pos='relative' gap={16}>\n                    {list}\n                </Stack>\n            </Menu.Dropdown>\n        </Menu>\n    );\n};\n",
      "start": 1746125696956,
      "end": 1746125696971,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\nimport { useIsMedium } from '@/shared/lib';\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\nimport s from './Types.module.css';\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([RootModel.$isSubmenuOpened, RootModel.closeSubmenu, RootModel.openSubmenu, RootModel.allMenusClosed]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, item => <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />);\n  return <Menu classNames={s} trapFocus={true} closeOnEscape={true} position='bottom-end' opened={isSubmenuOpen} closeOnItemClick={false} closeOnClickOutside={false} width={isDesktop ? 1084 : '100%'} trigger={isDesktop ? 'hover' : 'click'} onOpen={() => isDesktop && onOpenSubmenu(true)} onClose={() => onCloseSubmenu(false)} withinPortal={false} openDelay={300} disabled>\n            <Menu.Target>\n                <Link href='/types' onClick={() => onCloseAllMenus(false)}>\n                    Типы личности\n                </Link>\n            </Menu.Target>\n            <Menu.Dropdown style={{\n      zIndex: 1200\n    }}>\n                <Button mb='lg' fz={20} size='md' fullWidth c='dark.7' justify='start' hiddenFrom='sm' variant='transparent' leftSection={<ArrowLeft size={24} />} onClick={() => onCloseSubmenu(false)}>\n                    Назад\n                </Button>\n                <Stack pos='relative' gap={16}>\n                    {list}\n                </Stack>\n            </Menu.Dropdown>\n        </Menu>;\n};",
      "start": 1746125696971,
      "end": 1746125696972,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Button",
          "Menu",
          "Stack",
          "ArrowLeft",
          "useList",
          "useUnit",
          "useIsMedium",
          "getPersonalityTypesWithCategoriesQuery",
          "RootModel",
          "Link",
          "MenuItem",
          "s",
          "Types",
          "isDesktop",
          "isSubmenuOpen",
          "onCloseSubmenu",
          "onOpenSubmenu",
          "onCloseAllMenus",
          "$isSubmenuOpened",
          "closeSubmenu",
          "openSubmenu",
          "allMenusClosed",
          "list",
          "$data",
          "item",
          "zIndex"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx"
        ],
        "sourcesContent": [
          "import { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\n\nimport { useIsMedium } from '@/shared/lib';\n\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\n\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\n\nimport s from './Types.module.css';\n\nexport const Types = () => {\n    const isDesktop = useIsMedium();\n    const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([\n        RootModel.$isSubmenuOpened,\n        RootModel.closeSubmenu,\n        RootModel.openSubmenu,\n        RootModel.allMenusClosed,\n    ]);\n\n    const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => (\n        <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />\n    ));\n\n    return (\n        <Menu\n            classNames={s}\n            trapFocus={true}\n            closeOnEscape={true}\n            position='bottom-end'\n            opened={isSubmenuOpen}\n            closeOnItemClick={false}\n            closeOnClickOutside={false}\n            width={isDesktop ? 1084 : '100%'}\n            trigger={isDesktop ? 'hover' : 'click'}\n            onOpen={() => isDesktop && onOpenSubmenu(true)}\n            onClose={() => onCloseSubmenu(false)}\n            withinPortal={false}\n            openDelay={300}\n            disabled\n        >\n            <Menu.Target>\n                <Link href='/types' onClick={() => onCloseAllMenus(false)}>\n                    Типы личности\n                </Link>\n            </Menu.Target>\n            <Menu.Dropdown style={{ zIndex: 1200 }}>\n                <Button\n                    mb='lg'\n                    fz={20}\n                    size='md'\n                    fullWidth\n                    c='dark.7'\n                    justify='start'\n                    hiddenFrom='sm'\n                    variant='transparent'\n                    leftSection={<ArrowLeft size={24} />}\n                    onClick={() => onCloseSubmenu(false)}\n                >\n                    Назад\n                </Button>\n                <Stack pos='relative' gap={16}>\n                    {list}\n                </Stack>\n            </Menu.Dropdown>\n        </Menu>\n    );\n};\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from \"@mantine/core\";\nimport { ArrowLeft } from \"@phosphor-icons/react/dist/ssr\";\nimport { useList, useUnit } from \"effector-react\";\nimport { useIsMedium } from \"@/shared/lib\";\nimport { getPersonalityTypesWithCategoriesQuery } from \"@/entities/Personality\";\nimport { RootModel } from \"@/entities/Root\";\nimport { Link } from \"../../Link\";\nimport { MenuItem } from \"../MenuItem\";\nimport s from \"./Types.module.css\";\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([RootModel.$isSubmenuOpened, RootModel.closeSubmenu, RootModel.openSubmenu, RootModel.allMenusClosed]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => /* @__PURE__ */ jsx(MenuItem, { ...item, onClose: () => onCloseAllMenus(false) }));\n  return /* @__PURE__ */ jsxs(Menu, { classNames: s, trapFocus: true, closeOnEscape: true, position: \"bottom-end\", opened: isSubmenuOpen, closeOnItemClick: false, closeOnClickOutside: false, width: isDesktop ? 1084 : \"100%\", trigger: isDesktop ? \"hover\" : \"click\", onOpen: () => isDesktop && onOpenSubmenu(true), onClose: () => onCloseSubmenu(false), withinPortal: false, openDelay: 300, disabled: true, children: [\n    /* @__PURE__ */ jsx(Menu.Target, { children: /* @__PURE__ */ jsx(Link, { href: \"/types\", onClick: () => onCloseAllMenus(false), children: \"Типы личности\" }) }),\n    /* @__PURE__ */ jsxs(Menu.Dropdown, { style: {\n      zIndex: 1200\n    }, children: [\n      /* @__PURE__ */ jsx(Button, { mb: \"lg\", fz: 20, size: \"md\", fullWidth: true, c: \"dark.7\", justify: \"start\", hiddenFrom: \"sm\", variant: \"transparent\", leftSection: /* @__PURE__ */ jsx(ArrowLeft, { size: 24 }), onClick: () => onCloseSubmenu(false), children: \"Назад\" }),\n      /* @__PURE__ */ jsx(Stack, { pos: \"relative\", gap: 16, children: list })\n    ] })\n  ] });\n};\n",
      "start": 1746125696972,
      "end": 1746125696994,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/widgets/RootLayout/ui/Navigation/Types/index.tsx"
        ],
        "sourcesContent": [
          "import { Button, Menu, Stack } from '@mantine/core';\nimport { ArrowLeft } from '@phosphor-icons/react/dist/ssr';\nimport { useList, useUnit } from 'effector-react';\nimport { useIsMedium } from '@/shared/lib';\nimport { getPersonalityTypesWithCategoriesQuery } from '@/entities/Personality';\nimport { RootModel } from '@/entities/Root';\nimport { Link } from '../../Link';\nimport { MenuItem } from '../MenuItem';\nimport s from './Types.module.css';\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([RootModel.$isSubmenuOpened, RootModel.closeSubmenu, RootModel.openSubmenu, RootModel.allMenusClosed]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, item => <MenuItem {...item} onClose={() => onCloseAllMenus(false)} />);\n  return <Menu classNames={s} trapFocus={true} closeOnEscape={true} position='bottom-end' opened={isSubmenuOpen} closeOnItemClick={false} closeOnClickOutside={false} width={isDesktop ? 1084 : '100%'} trigger={isDesktop ? 'hover' : 'click'} onOpen={() => isDesktop && onOpenSubmenu(true)} onClose={() => onCloseSubmenu(false)} withinPortal={false} openDelay={300} disabled>\n            <Menu.Target>\n                <Link href='/types' onClick={() => onCloseAllMenus(false)}>\n                    Типы личности\n                </Link>\n            </Menu.Target>\n            <Menu.Dropdown style={{\n      zIndex: 1200\n    }}>\n                <Button mb='lg' fz={20} size='md' fullWidth c='dark.7' justify='start' hiddenFrom='sm' variant='transparent' leftSection={<ArrowLeft size={24} />} onClick={() => onCloseSubmenu(false)}>\n                    Назад\n                </Button>\n                <Stack pos='relative' gap={16}>\n                    {list}\n                </Stack>\n            </Menu.Dropdown>\n        </Menu>;\n};"
        ],
        "mappings": "AAY6E,cAOjE,YAPiE;AAZ7E,SAAS,QAAQ,MAAM,aAAa;AACpC,SAAS,iBAAiB;AAC1B,SAAS,SAAS,eAAe;AACjC,SAAS,mBAAmB;AAC5B,SAAS,8CAA8C;AACvD,SAAS,iBAAiB;AAC1B,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,OAAO,OAAO;AACP,aAAM,QAAQ,MAAM;AACzB,QAAM,YAAY,YAAY;AAC9B,QAAM,CAAC,eAAe,gBAAgB,eAAe,eAAe,IAAI,QAAQ,CAAC,UAAU,kBAAkB,UAAU,cAAc,UAAU,aAAa,UAAU,cAAc,CAAC;AACrL,QAAM,OAAO,QAAQ,uCAAuC,OAAO,UAAQ,oBAAC,YAAU,GAAG,MAAM,SAAS,MAAM,gBAAgB,KAAK,GAAG,CAAE;AACxI,SAAO,qBAAC,QAAK,YAAY,GAAG,WAAW,MAAM,eAAe,MAAM,UAAS,cAAa,QAAQ,eAAe,kBAAkB,OAAO,qBAAqB,OAAO,OAAO,YAAY,OAAO,QAAQ,SAAS,YAAY,UAAU,SAAS,QAAQ,MAAM,aAAa,cAAc,IAAI,GAAG,SAAS,MAAM,eAAe,KAAK,GAAG,cAAc,OAAO,WAAW,KAAK,UAAQ,MACvW;AAAA,wBAAC,KAAK,QAAL,EACG,8BAAC,QAAK,MAAK,UAAS,SAAS,MAAM,gBAAgB,KAAK,GAAG,2BAE3D,GACJ;AAAA,IACA,qBAAC,KAAK,UAAL,EAAc,OAAO;AAAA,MAC5B,QAAQ;AAAA,IACV,GACY;AAAA,0BAAC,UAAO,IAAG,MAAK,IAAI,IAAI,MAAK,MAAK,WAAS,MAAC,GAAE,UAAS,SAAQ,SAAQ,YAAW,MAAK,SAAQ,eAAc,aAAa,oBAAC,aAAU,MAAM,IAAI,GAAI,SAAS,MAAM,eAAe,KAAK,GAAG,mBAEzL;AAAA,MACA,oBAAC,SAAM,KAAI,YAAW,KAAK,IACtB,gBACL;AAAA,OACJ;AAAA,KACJ;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125696994,
      "end": 1746125696994,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/widgets/RootLayout/ui/Navigation/Types/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, Stack } from \"@mantine/core\";\nimport { ArrowLeft } from \"@phosphor-icons/react/dist/ssr\";\nimport { useList, useUnit } from \"effector-react\";\nimport { useIsMedium } from \"@/shared/lib\";\nimport { getPersonalityTypesWithCategoriesQuery } from \"@/entities/Personality\";\nimport { RootModel } from \"@/entities/Root\";\nimport { Link } from \"../../Link\";\nimport { MenuItem } from \"../MenuItem\";\nimport s from \"./Types.module.css\";\nexport const Types = () => {\n  const isDesktop = useIsMedium();\n  const [isSubmenuOpen, onCloseSubmenu, onOpenSubmenu, onCloseAllMenus] = useUnit([RootModel.$isSubmenuOpened, RootModel.closeSubmenu, RootModel.openSubmenu, RootModel.allMenusClosed]);\n  const list = useList(getPersonalityTypesWithCategoriesQuery.$data, (item) => /* @__PURE__ */ jsx(MenuItem, { ...item, onClose: () => onCloseAllMenus(false) }));\n  return /* @__PURE__ */ jsxs(Menu, { classNames: s, trapFocus: true, closeOnEscape: true, position: \"bottom-end\", opened: isSubmenuOpen, closeOnItemClick: false, closeOnClickOutside: false, width: isDesktop ? 1084 : \"100%\", trigger: isDesktop ? \"hover\" : \"click\", onOpen: () => isDesktop && onOpenSubmenu(true), onClose: () => onCloseSubmenu(false), withinPortal: false, openDelay: 300, disabled: true, children: [\n    /* @__PURE__ */ jsx(Menu.Target, { children: /* @__PURE__ */ jsx(Link, { href: \"/types\", onClick: () => onCloseAllMenus(false), children: \"Типы личности\" }) }),\n    /* @__PURE__ */ jsxs(Menu.Dropdown, { style: {\n      zIndex: 1200\n    }, children: [\n      /* @__PURE__ */ jsx(Button, { mb: \"lg\", fz: 20, size: \"md\", fullWidth: true, c: \"dark.7\", justify: \"start\", hiddenFrom: \"sm\", variant: \"transparent\", leftSection: /* @__PURE__ */ jsx(ArrowLeft, { size: 24 }), onClick: () => onCloseSubmenu(false), children: \"Назад\" }),\n      /* @__PURE__ */ jsx(Stack, { pos: \"relative\", gap: 16, children: list })\n    ] })\n  ] });\n};\n",
      "start": 1746125696994,
      "end": 1746125696995,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/widgets/RootLayout/ui/Navigation/Types/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjxjnK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjjR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/api/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createQuery } from '@farfetched/core';\n\nimport { API, createCommonRequestFx } from '@/shared/api';\n\nimport type { PersonalityTypesResponse } from './dto';\n\nexport const getPersonalityTypesWithCategoriesQuery = createQuery({\n    effect: createCommonRequestFx<void, PersonalityTypesResponse[]>(() => ({\n        url: API.surveys.personalityTypes,\n    })),\n    initialData: [],\n});\n",
      "start": 1750239308266,
      "end": 1750239308276,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createQuery } from '@farfetched/core';\nimport { API, createCommonRequestFx } from '@/shared/api';\nexport const getPersonalityTypesWithCategoriesQuery = _effector$factory({\n    sid: \"8q644amd\",\n    fn: ()=>createQuery({\n            effect: createCommonRequestFx(()=>({\n                    url: API.surveys.personalityTypes\n                })),\n            initialData: []\n        })\n});\n",
      "start": 1750239308276,
      "end": 1750239308282,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/api/index.ts\"],\"sourcesContent\":[\"import { createQuery } from '@farfetched/core';\\n\\nimport { API, createCommonRequestFx } from '@/shared/api';\\n\\nimport type { PersonalityTypesResponse } from './dto';\\n\\nexport const getPersonalityTypesWithCategoriesQuery = createQuery({\\n    effect: createCommonRequestFx<void, PersonalityTypesResponse[]>(() => ({\\n        url: API.surveys.personalityTypes,\\n    })),\\n    initialData: [],\\n});\\n\"],\"names\":[\"createQuery\",\"API\",\"createCommonRequestFx\",\"getPersonalityTypesWithCategoriesQuery\",\"effect\",\"url\",\"surveys\",\"personalityTypes\",\"initialData\"],\"mappings\":\";AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAE/C,SAASC,GAAG,EAAEC,qBAAqB,QAAQ,eAAe;AAI1D,OAAO,MAAMC;;YAAyCH,YAAY;YAC9DI,QAAQF,sBAAwD,IAAO,CAAA;oBACnEG,KAAKJ,IAAIK,OAAO,CAACC,gBAAgB;gBACrC,CAAA;YACAC,aAAa,EAAE;QACnB;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createQuery } from \"@farfetched/core\";\nimport { API, createCommonRequestFx } from \"@/shared/api\";\nexport const getPersonalityTypesWithCategoriesQuery = _effector$factory({\n  sid: \"8q644amd\",\n  fn: () => createQuery({\n    effect: createCommonRequestFx(() => ({\n      url: API.surveys.personalityTypes\n    })),\n    initialData: []\n  })\n});\n",
      "start": 1750239308282,
      "end": 1750239308316,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Personality/api/index.ts"],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createQuery } from '@farfetched/core';\nimport { API, createCommonRequestFx } from '@/shared/api';\nexport const getPersonalityTypesWithCategoriesQuery = _effector$factory({\n    sid: \"8q644amd\",\n    fn: ()=>createQuery({\n            effect: createCommonRequestFx(()=>({\n                    url: API.surveys.personalityTypes\n                })),\n            initialData: []\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,mBAAmB;AAC5B,SAAS,KAAK,6BAA6B;AACpC,aAAM,yCAAyC,kBAAkB;AAAA,EACpE,KAAK;AAAA,EACL,IAAI,MAAI,YAAY;AAAA,IACZ,QAAQ,sBAAsB,OAAK;AAAA,MAC3B,KAAK,IAAI,QAAQ;AAAA,IACrB,EAAE;AAAA,IACN,aAAa,CAAC;AAAA,EAClB,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308316,
      "end": 1750239308316,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308316,
      "end": 1750239308316,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308316,
      "end": 1750239308316,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Personality/api/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createQuery } from \"@farfetched/core\";\nimport { API, createCommonRequestFx } from \"@/shared/api\";\nexport const getPersonalityTypesWithCategoriesQuery = _effector$factory({\n  sid: \"8q644amd\",\n  fn: () => createQuery({\n    effect: createCommonRequestFx(() => ({\n      url: API.surveys.personalityTypes\n    })),\n    initialData: []\n  })\n});\n",
      "start": 1750239308317,
      "end": 1750239308317,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Personality/api/index.ts"],
        "names": [],
        "mappingszD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

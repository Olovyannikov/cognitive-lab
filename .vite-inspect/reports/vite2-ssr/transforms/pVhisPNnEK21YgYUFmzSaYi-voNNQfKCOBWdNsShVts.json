{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/blog/+pageInitiated.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { sample } from 'effector';\n\nimport { createPageInit } from '@/shared/lib';\n\nimport { BlogModel, getBlogPostsQuery } from '@/entities/Blog';\n\nexport const pageInitiated = createPageInit();\n\nsample({\n    clock: pageInitiated,\n    fn: ({ isMobile, urlParsed: { search } }) => {\n        let page = 1;\n        let page_size = isMobile ? 5 : 10;\n\n        if (search.page_size) page_size = Number(search.page_size);\n        if (search.page) page = Number(search.page);\n\n        return {\n            page,\n            page_size,\n        };\n    },\n    target: getBlogPostsQuery.start,\n});\n\nsample({\n    clock: pageInitiated,\n    fn: ({ isMobile }) => (isMobile ? 5 : 10),\n    target: BlogModel.$pageSize,\n});\n\nsample({\n    clock: getBlogPostsQuery.finished.failure,\n    target: BlogModel.redirectToMainBlogPostPageFx,\n});\n",
      "start": 1750239308153,
      "end": 1750239308174,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { sample } from 'effector';\nimport { createPageInit } from '@/shared/lib';\nimport { BlogModel, getBlogPostsQuery } from '@/entities/Blog';\nexport const pageInitiated = createPageInit();\nsample({\n    and: [\n        {\n            clock: pageInitiated,\n            fn: ({ isMobile, urlParsed: { search } })=>{\n                let page = 1;\n                let page_size = isMobile ? 5 : 10;\n                if (search.page_size) page_size = Number(search.page_size);\n                if (search.page) page = Number(search.page);\n                return {\n                    page,\n                    page_size\n                };\n            },\n            target: getBlogPostsQuery.start\n        }\n    ],\n    or: {\n        sid: \"ccsgthep\"\n    }\n});\nsample({\n    and: [\n        {\n            clock: pageInitiated,\n            fn: ({ isMobile })=>isMobile ? 5 : 10,\n            target: BlogModel.$pageSize\n        }\n    ],\n    or: {\n        sid: \"atibpv1z\"\n    }\n});\nsample({\n    and: [\n        {\n            clock: getBlogPostsQuery.finished.failure,\n            target: BlogModel.redirectToMainBlogPostPageFx\n        }\n    ],\n    or: {\n        sid: \"dzpaktn1\"\n    }\n});\n",
      "start": 1750239308174,
      "end": 1750239308183,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/blog/+pageInitiated.ts\"],\"sourcesContent\":[\"import { sample } from 'effector';\\n\\nimport { createPageInit } from '@/shared/lib';\\n\\nimport { BlogModel, getBlogPostsQuery } from '@/entities/Blog';\\n\\nexport const pageInitiated = createPageInit();\\n\\nsample({\\n    clock: pageInitiated,\\n    fn: ({ isMobile, urlParsed: { search } }) => {\\n        let page = 1;\\n        let page_size = isMobile ? 5 : 10;\\n\\n        if (search.page_size) page_size = Number(search.page_size);\\n        if (search.page) page = Number(search.page);\\n\\n        return {\\n            page,\\n            page_size,\\n        };\\n    },\\n    target: getBlogPostsQuery.start,\\n});\\n\\nsample({\\n    clock: pageInitiated,\\n    fn: ({ isMobile }) => (isMobile ? 5 : 10),\\n    target: BlogModel.$pageSize,\\n});\\n\\nsample({\\n    clock: getBlogPostsQuery.finished.failure,\\n    target: BlogModel.redirectToMainBlogPostPageFx,\\n});\\n\"],\"names\":[\"sample\",\"createPageInit\",\"BlogModel\",\"getBlogPostsQuery\",\"pageInitiated\",\"clock\",\"fn\",\"isMobile\",\"urlParsed\",\"search\",\"page\",\"page_size\",\"Number\",\"target\",\"start\",\"$pageSize\",\"finished\",\"failure\",\"redirectToMainBlogPostPageFx\"],\"mappings\":\"AAAA,SAASA,MAAM,QAAQ,WAAW;AAElC,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,SAAS,EAAEC,iBAAiB,QAAQ,kBAAkB;AAE/D,OAAO,MAAMC,gBAAgBH,iBAAiB;AAE9CD;;QAAO;YACHK,OAAOD;YACPE,IAAI,CAAC,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAE,EAAE;gBACpC,IAAIC,OAAO;gBACX,IAAIC,YAAYJ,WAAW,IAAI;gBAE/B,IAAIE,OAAOE,SAAS,EAAEA,YAAYC,OAAOH,OAAOE,SAAS;gBACzD,IAAIF,OAAOC,IAAI,EAAEA,OAAOE,OAAOH,OAAOC,IAAI;gBAE1C,OAAO;oBACHA;oBACAC;gBACJ;YACJ;YACAE,QAAQV,kBAAkBW,KAAK;QACnC;;;;;;AAEAd;;QAAO;YACHK,OAAOD;YACPE,IAAI,CAAC,EAAEC,QAAQ,EAAE,GAAMA,WAAW,IAAI;YACtCM,QAAQX,UAAUa,SAAS;QAC/B;;;;;;AAEAf;;QAAO;YACHK,OAAOF,kBAAkBa,QAAQ,CAACC,OAAO;YACzCJ,QAAQX,UAAUgB,4BAA4B;QAClD\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { sample } from \"effector\";\nimport { createPageInit } from \"@/shared/lib\";\nimport { BlogModel, getBlogPostsQuery } from \"@/entities/Blog\";\nexport const pageInitiated = createPageInit();\nsample({\n  and: [\n    {\n      clock: pageInitiated,\n      fn: ({ isMobile, urlParsed: { search } }) => {\n        let page = 1;\n        let page_size = isMobile ? 5 : 10;\n        if (search.page_size) page_size = Number(search.page_size);\n        if (search.page) page = Number(search.page);\n        return {\n          page,\n          page_size\n        };\n      },\n      target: getBlogPostsQuery.start\n    }\n  ],\n  or: {\n    sid: \"ccsgthep\"\n  }\n});\nsample({\n  and: [\n    {\n      clock: pageInitiated,\n      fn: ({ isMobile }) => isMobile ? 5 : 10,\n      target: BlogModel.$pageSize\n    }\n  ],\n  or: {\n    sid: \"atibpv1z\"\n  }\n});\nsample({\n  and: [\n    {\n      clock: getBlogPostsQuery.finished.failure,\n      target: BlogModel.redirectToMainBlogPostPageFx\n    }\n  ],\n  or: {\n    sid: \"dzpaktn1\"\n  }\n});\n",
      "start": 1750239308183,
      "end": 1750239308207,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/blog/+pageInitiated.ts"],
        "sourcesContent": [
          "import { sample } from 'effector';\nimport { createPageInit } from '@/shared/lib';\nimport { BlogModel, getBlogPostsQuery } from '@/entities/Blog';\nexport const pageInitiated = createPageInit();\nsample({\n    and: [\n        {\n            clock: pageInitiated,\n            fn: ({ isMobile, urlParsed: { search } })=>{\n                let page = 1;\n                let page_size = isMobile ? 5 : 10;\n                if (search.page_size) page_size = Number(search.page_size);\n                if (search.page) page = Number(search.page);\n                return {\n                    page,\n                    page_size\n                };\n            },\n            target: getBlogPostsQuery.start\n        }\n    ],\n    or: {\n        sid: \"ccsgthep\"\n    }\n});\nsample({\n    and: [\n        {\n            clock: pageInitiated,\n            fn: ({ isMobile })=>isMobile ? 5 : 10,\n            target: BlogModel.$pageSize\n        }\n    ],\n    or: {\n        sid: \"atibpv1z\"\n    }\n});\nsample({\n    and: [\n        {\n            clock: getBlogPostsQuery.finished.failure,\n            target: BlogModel.redirectToMainBlogPostPageFx\n        }\n    ],\n    or: {\n        sid: \"dzpaktn1\"\n    }\n});\n"
        ],
        "mappings": "AAAA,SAAS,cAAc;AACvB,SAAS,sBAAsB;AAC/B,SAAS,WAAW,yBAAyB;AACtC,aAAM,gBAAgB,eAAe;AAC5C,OAAO;AAAA,EACH,KAAK;AAAA,IACD;AAAA,MACI,OAAO;AAAA,MACP,IAAI,CAAC,EAAE,UAAU,WAAW,EAAE,OAAO,EAAE,MAAI;AACvC,YAAI,OAAO;AACX,YAAI,YAAY,WAAW,IAAI;AAC/B,YAAI,OAAO,UAAW,aAAY,OAAO,OAAO,SAAS;AACzD,YAAI,OAAO,KAAM,QAAO,OAAO,OAAO,IAAI;AAC1C,eAAO;AAAA,UACH;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,QAAQ,kBAAkB;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,IAAI;AAAA,IACA,KAAK;AAAA,EACT;AACJ,CAAC;AACD,OAAO;AAAA,EACH,KAAK;AAAA,IACD;AAAA,MACI,OAAO;AAAA,MACP,IAAI,CAAC,EAAE,SAAS,MAAI,WAAW,IAAI;AAAA,MACnC,QAAQ,UAAU;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,IAAI;AAAA,IACA,KAAK;AAAA,EACT;AACJ,CAAC;AACD,OAAO;AAAA,EACH,KAAK;AAAA,IACD;AAAA,MACI,OAAO,kBAAkB,SAAS;AAAA,MAClC,QAAQ,UAAU;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,IAAI;AAAA,IACA,KAAK;AAAA,EACT;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! pages/blog/+pageInitiated.ts [vike:pluginModuleBanner] */\nimport { sample } from \"effector\";\nimport { createPageInit } from \"@/shared/lib\";\nimport { BlogModel, getBlogPostsQuery } from \"@/entities/Blog\";\nexport const pageInitiated = createPageInit();\nsample({\n  and: [\n    {\n      clock: pageInitiated,\n      fn: ({ isMobile, urlParsed: { search } }) => {\n        let page = 1;\n        let page_size = isMobile ? 5 : 10;\n        if (search.page_size) page_size = Number(search.page_size);\n        if (search.page) page = Number(search.page);\n        return {\n          page,\n          page_size\n        };\n      },\n      target: getBlogPostsQuery.start\n    }\n  ],\n  or: {\n    sid: \"ccsgthep\"\n  }\n});\nsample({\n  and: [\n    {\n      clock: pageInitiated,\n      fn: ({ isMobile }) => isMobile ? 5 : 10,\n      target: BlogModel.$pageSize\n    }\n  ],\n  or: {\n    sid: \"atibpv1z\"\n  }\n});\nsample({\n  and: [\n    {\n      clock: getBlogPostsQuery.finished.failure,\n      target: BlogModel.redirectToMainBlogPostPageFx\n    }\n  ],\n  or: {\n    sid: \"dzpaktn1\"\n  }\n});\n",
      "start": 1750239308207,
      "end": 1750239308207,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["pages/blog/+pageInitiated.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AACF,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClnD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AACF,CAAC,CAAC;"
      }
    }
  ]
}

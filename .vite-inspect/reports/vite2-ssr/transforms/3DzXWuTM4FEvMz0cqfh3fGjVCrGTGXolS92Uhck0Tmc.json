{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/index/+pageInitiated.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { sample } from 'effector';\n\nimport { createPageInit } from '@/shared/lib';\n\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport { getFAQQuery } from '@/entities/FAQ';\nimport { getMainPageInfoQuery } from '@/entities/Landing';\nimport { getReviewsQuery, ReviewModel } from '@/entities/Review';\n\nexport const pageInitiated = createPageInit();\n\nsample({\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh],\n});\n\nsample({\n    clock: pageInitiated,\n    fn: () => ({\n        page_size: 100,\n    }),\n    target: getAllBlogPostsQuery.refresh,\n});\n\nsample({\n    clock: pageInitiated,\n    fn: () => ({\n        show_on_main: true,\n    }),\n    target: getFAQQuery.refresh,\n});\n\nsample({\n    clock: getReviewsQuery.finished.success,\n    fn: ({ result }) => ({\n        page_size: result.total_count,\n    }),\n    target: getReviewsQuery.refresh,\n});\n\nsample({\n    clock: getReviewsQuery.finished.success,\n    fn: ({ result }) =>\n        result.payload.map((data) => ({\n            ...data,\n            created_at: new Date(data.created_at).toLocaleDateString('ru-RU'),\n        })),\n    target: ReviewModel.$allReviews,\n});\n",
      "start": 1746125695911,
      "end": 1746125695951,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { sample } from 'effector';\nimport { createPageInit } from '@/shared/lib';\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport { getFAQQuery } from '@/entities/FAQ';\nimport { getMainPageInfoQuery } from '@/entities/Landing';\nimport { getReviewsQuery, ReviewModel } from '@/entities/Review';\nexport const pageInitiated = createPageInit();\nsample({\n  and: [{\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh]\n  }],\n  or: {\n    sid: \"oja7sy\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      page_size: 100\n    }),\n    target: getAllBlogPostsQuery.refresh\n  }],\n  or: {\n    sid: \"om16rr\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      show_on_main: true\n    }),\n    target: getFAQQuery.refresh\n  }],\n  or: {\n    sid: \"p1z7z8\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => ({\n      page_size: result.total_count\n    }),\n    target: getReviewsQuery.refresh\n  }],\n  or: {\n    sid: \"phx96p\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => result.payload.map(data => ({\n      ...data,\n      created_at: new Date(data.created_at).toLocaleDateString('ru-RU')\n    })),\n    target: ReviewModel.$allReviews\n  }],\n  or: {\n    sid: \"pxvae6\"\n  }\n});",
      "start": 1746125695951,
      "end": 1746125695953,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "sample",
          "createPageInit",
          "getAllBlogPostsQuery",
          "getFAQQuery",
          "getMainPageInfoQuery",
          "getReviewsQuery",
          "ReviewModel",
          "pageInitiated",
          "and",
          "clock",
          "target",
          "refresh",
          "or",
          "sid",
          "fn",
          "page_size",
          "show_on_main",
          "finished",
          "success",
          "result",
          "total_count",
          "payload",
          "map",
          "data",
          "created_at",
          "Date",
          "toLocaleDateString",
          "$allReviews"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/index/+pageInitiated.ts"],
        "sourcesContent": [
          "import { sample } from 'effector';\n\nimport { createPageInit } from '@/shared/lib';\n\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport { getFAQQuery } from '@/entities/FAQ';\nimport { getMainPageInfoQuery } from '@/entities/Landing';\nimport { getReviewsQuery, ReviewModel } from '@/entities/Review';\n\nexport const pageInitiated = createPageInit();\n\nsample({\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh],\n});\n\nsample({\n    clock: pageInitiated,\n    fn: () => ({\n        page_size: 100,\n    }),\n    target: getAllBlogPostsQuery.refresh,\n});\n\nsample({\n    clock: pageInitiated,\n    fn: () => ({\n        show_on_main: true,\n    }),\n    target: getFAQQuery.refresh,\n});\n\nsample({\n    clock: getReviewsQuery.finished.success,\n    fn: ({ result }) => ({\n        page_size: result.total_count,\n    }),\n    target: getReviewsQuery.refresh,\n});\n\nsample({\n    clock: getReviewsQuery.finished.success,\n    fn: ({ result }) =>\n        result.payload.map((data) => ({\n            ...data,\n            created_at: new Date(data.created_at).toLocaleDateString('ru-RU'),\n        })),\n    target: ReviewModel.$allReviews,\n});\n"
        ],
        "mappings": "AAAA,SAASA,MAAM,QAAQ,UAAU;AAEjC,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,eAAe,EAAEC,WAAW,QAAQ,mBAAmB;AAEhE,OAAO,MAAMC,aAAa,GAAGN,cAAc,CAAC,CAAC;AAE7CD,MAAM;EAAAQ,GAAA,GAAC;IACHC,KAAK,EAAEF,aAAa;IACpBG,MAAM,EAAE,CAACN,oBAAoB,CAACO,OAAO,EAAEN,eAAe,CAACM,OAAO;EAClE,CAAC;EAAAC,EAAA;IAAAC,GAAA;EAAA;AAAA,EAAC;AAEFb,MAAM;EAAAQ,GAAA,GAAC;IACHC,KAAK,EAAEF,aAAa;IACpBO,EAAE,EAAEA,CAAA,MAAO;MACPC,SAAS,EAAE;IACf,CAAC,CAAC;IACFL,MAAM,EAAER,oBAAoB,CAACS;EACjC,CAAC;EAAAC,EAAA;IAAAC,GAAA;EAAA;AAAA,EAAC;AAEFb,MAAM;EAAAQ,GAAA,GAAC;IACHC,KAAK,EAAEF,aAAa;IACpBO,EAAE,EAAEA,CAAA,MAAO;MACPE,YAAY,EAAE;IAClB,CAAC,CAAC;IACFN,MAAM,EAAEP,WAAW,CAACQ;EACxB,CAAC;EAAAC,EAAA;IAAAC,GAAA;EAAA;AAAA,EAAC;AAEFb,MAAM;EAAAQ,GAAA,GAAC;IACHC,KAAK,EAAEJ,eAAe,CAACY,QAAQ,CAACC,OAAO;IACvCJ,EAAE,EAAEA,CAAC;MAAEK;IAAO,CAAC,MAAM;MACjBJ,SAAS,EAAEI,MAAM,CAACC;IACtB,CAAC,CAAC;IACFV,MAAM,EAAEL,eAAe,CAACM;EAC5B,CAAC;EAAAC,EAAA;IAAAC,GAAA;EAAA;AAAA,EAAC;AAEFb,MAAM;EAAAQ,GAAA,GAAC;IACHC,KAAK,EAAEJ,eAAe,CAACY,QAAQ,CAACC,OAAO;IACvCJ,EAAE,EAAEA,CAAC;MAAEK;IAAO,CAAC,KACXA,MAAM,CAACE,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;MAC1B,GAAGA,IAAI;MACPC,UAAU,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO;IACpE,CAAC,CAAC,CAAC;IACPhB,MAAM,EAAEJ,WAAW,CAACqB;EACxB,CAAC;EAAAf,EAAA;IAAAC,GAAA;EAAA;AAAA,EAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { sample } from \"effector\";\nimport { createPageInit } from \"@/shared/lib\";\nimport { getAllBlogPostsQuery } from \"@/entities/Blog\";\nimport { getFAQQuery } from \"@/entities/FAQ\";\nimport { getMainPageInfoQuery } from \"@/entities/Landing\";\nimport { getReviewsQuery, ReviewModel } from \"@/entities/Review\";\nexport const pageInitiated = createPageInit();\nsample({\n  and: [{\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh]\n  }],\n  or: {\n    sid: \"oja7sy\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      page_size: 100\n    }),\n    target: getAllBlogPostsQuery.refresh\n  }],\n  or: {\n    sid: \"om16rr\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      show_on_main: true\n    }),\n    target: getFAQQuery.refresh\n  }],\n  or: {\n    sid: \"p1z7z8\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => ({\n      page_size: result.total_count\n    }),\n    target: getReviewsQuery.refresh\n  }],\n  or: {\n    sid: \"phx96p\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => result.payload.map((data) => ({\n      ...data,\n      created_at: new Date(data.created_at).toLocaleDateString(\"ru-RU\")\n    })),\n    target: ReviewModel.$allReviews\n  }],\n  or: {\n    sid: \"pxvae6\"\n  }\n});\n",
      "start": 1746125695953,
      "end": 1746125696012,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/pages/index/+pageInitiated.ts"],
        "sourcesContent": [
          "import { sample } from 'effector';\nimport { createPageInit } from '@/shared/lib';\nimport { getAllBlogPostsQuery } from '@/entities/Blog';\nimport { getFAQQuery } from '@/entities/FAQ';\nimport { getMainPageInfoQuery } from '@/entities/Landing';\nimport { getReviewsQuery, ReviewModel } from '@/entities/Review';\nexport const pageInitiated = createPageInit();\nsample({\n  and: [{\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh]\n  }],\n  or: {\n    sid: \"oja7sy\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      page_size: 100\n    }),\n    target: getAllBlogPostsQuery.refresh\n  }],\n  or: {\n    sid: \"om16rr\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      show_on_main: true\n    }),\n    target: getFAQQuery.refresh\n  }],\n  or: {\n    sid: \"p1z7z8\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => ({\n      page_size: result.total_count\n    }),\n    target: getReviewsQuery.refresh\n  }],\n  or: {\n    sid: \"phx96p\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => result.payload.map(data => ({\n      ...data,\n      created_at: new Date(data.created_at).toLocaleDateString('ru-RU')\n    })),\n    target: ReviewModel.$allReviews\n  }],\n  or: {\n    sid: \"pxvae6\"\n  }\n});"
        ],
        "mappings": "AAAA,SAAS,cAAc;AACvB,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B;AACrC,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC,SAAS,iBAAiB,mBAAmB;AACtC,aAAM,gBAAgB,eAAe;AAC5C,OAAO;AAAA,EACL,KAAK,CAAC;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ,CAAC,qBAAqB,SAAS,gBAAgB,OAAO;AAAA,EAChE,CAAC;AAAA,EACD,IAAI;AAAA,IACF,KAAK;AAAA,EACP;AACF,CAAC;AACD,OAAO;AAAA,EACL,KAAK,CAAC;AAAA,IACJ,OAAO;AAAA,IACP,IAAI,OAAO;AAAA,MACT,WAAW;AAAA,IACb;AAAA,IACA,QAAQ,qBAAqB;AAAA,EAC/B,CAAC;AAAA,EACD,IAAI;AAAA,IACF,KAAK;AAAA,EACP;AACF,CAAC;AACD,OAAO;AAAA,EACL,KAAK,CAAC;AAAA,IACJ,OAAO;AAAA,IACP,IAAI,OAAO;AAAA,MACT,cAAc;AAAA,IAChB;AAAA,IACA,QAAQ,YAAY;AAAA,EACtB,CAAC;AAAA,EACD,IAAI;AAAA,IACF,KAAK;AAAA,EACP;AACF,CAAC;AACD,OAAO;AAAA,EACL,KAAK,CAAC;AAAA,IACJ,OAAO,gBAAgB,SAAS;AAAA,IAChC,IAAI,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AAAA,MACL,WAAW,OAAO;AAAA,IACpB;AAAA,IACA,QAAQ,gBAAgB;AAAA,EAC1B,CAAC;AAAA,EACD,IAAI;AAAA,IACF,KAAK;AAAA,EACP;AACF,CAAC;AACD,OAAO;AAAA,EACL,KAAK,CAAC;AAAA,IACJ,OAAO,gBAAgB,SAAS;AAAA,IAChC,IAAI,CAAC;AAAA,MACH;AAAA,IACF,MAAM,OAAO,QAAQ,IAAI,WAAS;AAAA,MAChC,GAAG;AAAA,MACH,YAAY,IAAI,KAAK,KAAK,UAAU,EAAE,mBAAmB,OAAO;AAAA,IAClE,EAAE;AAAA,IACF,QAAQ,YAAY;AAAA,EACtB,CAAC;AAAA,EACD,IAAI;AAAA,IACF,KAAK;AAAA,EACP;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1746125696012,
      "end": 1746125696012,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1746125696013,
      "end": 1746125696013,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1746125696013,
      "end": 1746125696013,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! pages/index/+pageInitiated.ts [vike:pluginModuleBanner] */\nimport { sample } from \"effector\";\nimport { createPageInit } from \"@/shared/lib\";\nimport { getAllBlogPostsQuery } from \"@/entities/Blog\";\nimport { getFAQQuery } from \"@/entities/FAQ\";\nimport { getMainPageInfoQuery } from \"@/entities/Landing\";\nimport { getReviewsQuery, ReviewModel } from \"@/entities/Review\";\nexport const pageInitiated = createPageInit();\nsample({\n  and: [{\n    clock: pageInitiated,\n    target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh]\n  }],\n  or: {\n    sid: \"oja7sy\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      page_size: 100\n    }),\n    target: getAllBlogPostsQuery.refresh\n  }],\n  or: {\n    sid: \"om16rr\"\n  }\n});\nsample({\n  and: [{\n    clock: pageInitiated,\n    fn: () => ({\n      show_on_main: true\n    }),\n    target: getFAQQuery.refresh\n  }],\n  or: {\n    sid: \"p1z7z8\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => ({\n      page_size: result.total_count\n    }),\n    target: getReviewsQuery.refresh\n  }],\n  or: {\n    sid: \"phx96p\"\n  }\n});\nsample({\n  and: [{\n    clock: getReviewsQuery.finished.success,\n    fn: ({\n      result\n    }) => result.payload.map((data) => ({\n      ...data,\n      created_at: new Date(data.created_at).toLocaleDateString(\"ru-RU\")\n    })),\n    target: ReviewModel.$allReviews\n  }],\n  or: {\n    sid: \"pxvae6\"\n  }\n});\n",
      "start": 1746125696013,
      "end": 1746125696013,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["pages/index/+pageInitiated.ts"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjtzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;AACF,CAAC,CAAC;"
      }
    }
  ]
}

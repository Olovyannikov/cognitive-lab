{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Review/model/index.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createGate } from 'effector-react';\nimport { delay } from 'patronum';\n\nimport { atom } from '@/shared/factories';\nimport { isErrorWithMessage } from '@/shared/lib';\n\nimport { createReviewMutation } from '../api';\nimport type { CreateReviewRequest } from '../api/dto';\n\nexport interface Review {\n    id: string;\n    mbti_type: string;\n    name: string;\n    text: string;\n    informativeness_rate: number;\n    convenience_rate: number;\n    accuracy_rate: number;\n    recommendability_rate: number;\n    satisfaction_rate: number;\n    overall_rate: number;\n    created_at: string;\n}\n\nexport const ReviewModel = atom(() => {\n    const ReviewGate = createGate();\n\n    const $allReviews = createStore<Review[]>([]);\n    const $currentReviewId = createStore<string | null>(null);\n    const $isFormSubmittedSuccessfully = createStore(false);\n    const $hasError = createStore<string | false>(false);\n\n    const reviewCreated = createEvent<CreateReviewRequest>();\n\n    const showMessageFx = createEffect(({ message, isError }: { message: string; isError?: boolean }) => {\n        notifications.show({\n            title: isError ? 'Произошла ошибка' : 'Успешно!',\n            message,\n            color: isError ? 'red' : 'blue',\n        });\n    });\n\n    sample({\n        clock: reviewCreated,\n        target: createReviewMutation.start,\n    });\n\n    sample({\n        clock: createReviewMutation.finished.success,\n        fn: () => true,\n        target: $isFormSubmittedSuccessfully,\n    });\n\n    sample({\n        clock: ReviewGate.close,\n        fn: () => false,\n        target: $isFormSubmittedSuccessfully,\n    });\n\n    sample({\n        clock: createReviewMutation.finished.failure,\n        fn: ({ error }) => (isErrorWithMessage(error) ? error.data.message : 'Произошла ошибка'),\n        target: $hasError,\n    });\n\n    sample({\n        clock: $isFormSubmittedSuccessfully,\n        filter: (success) => success === true,\n        fn: () => ({\n            message: 'Отзыв успешно отправлен!',\n            isError: false,\n        }),\n        target: showMessageFx,\n    });\n\n    sample({\n        clock: $hasError,\n        filter: (hasError) => hasError !== false,\n        fn: (error) => ({\n            message: error === false ? 'Произошла ошибка' : error,\n            isError: true,\n        }),\n        target: showMessageFx,\n    });\n\n    sample({\n        clock: delay($hasError, 300),\n        target: $hasError.reinit,\n    });\n\n    return {\n        $allReviews,\n        $currentReviewId,\n        $isFormSubmittedSuccessfully,\n        reviewCreated,\n        $hasError,\n        ReviewGate,\n    };\n});\n",
      "start": 1750105187558,
      "end": 1750105187604,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { withFactory as _withFactory } from \"effector\";\nimport { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createGate } from 'effector-react';\nimport { delay } from 'patronum';\nimport { atom } from '@/shared/factories';\nimport { isErrorWithMessage } from '@/shared/lib';\nimport { createReviewMutation } from '../api';\nimport type { CreateReviewRequest } from '../api/dto';\nexport interface Review {\n  id: string;\n  mbti_type: string;\n  name: string;\n  text: string;\n  informativeness_rate: number;\n  convenience_rate: number;\n  accuracy_rate: number;\n  recommendability_rate: number;\n  satisfaction_rate: number;\n  overall_rate: number;\n  created_at: string;\n}\nexport const ReviewModel = atom(() => {\n  const ReviewGate = createGate({\n    and: [],\n    or: {\n      name: \"ReviewGate\",\n      sid: \"-ieiw5b\"\n    }\n  });\n  const $allReviews = createStore<Review[]>([], {\n    name: \"$allReviews\",\n    sid: \"-b9etj1\"\n  });\n  const $currentReviewId = createStore<string | null>(null, {\n    name: \"$currentReviewId\",\n    sid: \"huyue6\"\n  });\n  const $isFormSubmittedSuccessfully = createStore(false, {\n    name: \"$isFormSubmittedSuccessfully\",\n    sid: \"4bdvj3\"\n  });\n  const $hasError = createStore<string | false>(false, {\n    name: \"$hasError\",\n    sid: \"j366zd\"\n  });\n  const reviewCreated = createEvent<CreateReviewRequest>({\n    name: \"reviewCreated\",\n    sid: \"-sea2qz\"\n  });\n  const showMessageFx = createEffect(({\n    message,\n    isError\n  }: {\n    message: string;\n    isError?: boolean;\n  }) => {\n    notifications.show({\n      title: isError ? 'Произошла ошибка' : 'Успешно!',\n      message,\n      color: isError ? 'red' : 'blue'\n    });\n  }, {\n    name: \"showMessageFx\",\n    sid: \"sqf3lz\"\n  });\n  sample({\n    and: [{\n      clock: reviewCreated,\n      target: createReviewMutation.start\n    }],\n    or: {\n      sid: \"-3cpdb8\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.success,\n      fn: () => true,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-39yecf\"\n    }\n  });\n  sample({\n    and: [{\n      clock: ReviewGate.close,\n      fn: () => false,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-2v3ybo\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.failure,\n      fn: ({\n        error\n      }) => isErrorWithMessage(error) ? error.data.message : 'Произошла ошибка',\n      target: $hasError\n    }],\n    or: {\n      sid: \"-2g9iax\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $isFormSubmittedSuccessfully,\n      filter: success => success === true,\n      fn: () => ({\n        message: 'Отзыв успешно отправлен!',\n        isError: false\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-2cyqqr\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $hasError,\n      filter: hasError => hasError !== false,\n      fn: error => ({\n        message: error === false ? 'Произошла ошибка' : error,\n        isError: true\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-1vx4ck\"\n    }\n  });\n  sample({\n    and: [{\n      clock: _withFactory({\n        sid: \"-o9m4q0\",\n        fn: () => delay($hasError, 300),\n        name: \"clock\",\n        method: \"delay\"\n      }),\n      target: $hasError.reinit\n    }],\n    or: {\n      sid: \"-1evhyd\"\n    }\n  });\n  return {\n    $allReviews,\n    $currentReviewId,\n    $isFormSubmittedSuccessfully,\n    reviewCreated,\n    $hasError,\n    ReviewGate\n  };\n});",
      "start": 1750105187604,
      "end": 1750105187607,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "notifications",
          "createEffect",
          "createEvent",
          "createStore",
          "sample",
          "createGate",
          "delay",
          "atom",
          "isErrorWithMessage",
          "createReviewMutation",
          "CreateReviewRequest",
          "Review",
          "id",
          "mbti_type",
          "name",
          "text",
          "informativeness_rate",
          "convenience_rate",
          "accuracy_rate",
          "recommendability_rate",
          "satisfaction_rate",
          "overall_rate",
          "created_at",
          "ReviewModel",
          "ReviewGate",
          "and",
          "or",
          "sid",
          "$allReviews",
          "$currentReviewId",
          "$isFormSubmittedSuccessfully",
          "$hasError",
          "reviewCreated",
          "showMessageFx",
          "message",
          "isError",
          "show",
          "title",
          "color",
          "clock",
          "target",
          "start",
          "finished",
          "success",
          "fn",
          "close",
          "failure",
          "error",
          "data",
          "filter",
          "hasError",
          "_withFactory",
          "\"-o9m4q0\"",
          "\"clock\"",
          "method",
          "\"delay\"",
          "reinit"
        ],
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Review/model/index.ts"
        ],
        "sourcesContent": [
          "import { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createGate } from 'effector-react';\nimport { delay } from 'patronum';\n\nimport { atom } from '@/shared/factories';\nimport { isErrorWithMessage } from '@/shared/lib';\n\nimport { createReviewMutation } from '../api';\nimport type { CreateReviewRequest } from '../api/dto';\n\nexport interface Review {\n    id: string;\n    mbti_type: string;\n    name: string;\n    text: string;\n    informativeness_rate: number;\n    convenience_rate: number;\n    accuracy_rate: number;\n    recommendability_rate: number;\n    satisfaction_rate: number;\n    overall_rate: number;\n    created_at: string;\n}\n\nexport const ReviewModel = atom(() => {\n    const ReviewGate = createGate();\n\n    const $allReviews = createStore<Review[]>([]);\n    const $currentReviewId = createStore<string | null>(null);\n    const $isFormSubmittedSuccessfully = createStore(false);\n    const $hasError = createStore<string | false>(false);\n\n    const reviewCreated = createEvent<CreateReviewRequest>();\n\n    const showMessageFx = createEffect(({ message, isError }: { message: string; isError?: boolean }) => {\n        notifications.show({\n            title: isError ? 'Произошла ошибка' : 'Успешно!',\n            message,\n            color: isError ? 'red' : 'blue',\n        });\n    });\n\n    sample({\n        clock: reviewCreated,\n        target: createReviewMutation.start,\n    });\n\n    sample({\n        clock: createReviewMutation.finished.success,\n        fn: () => true,\n        target: $isFormSubmittedSuccessfully,\n    });\n\n    sample({\n        clock: ReviewGate.close,\n        fn: () => false,\n        target: $isFormSubmittedSuccessfully,\n    });\n\n    sample({\n        clock: createReviewMutation.finished.failure,\n        fn: ({ error }) => (isErrorWithMessage(error) ? error.data.message : 'Произошла ошибка'),\n        target: $hasError,\n    });\n\n    sample({\n        clock: $isFormSubmittedSuccessfully,\n        filter: (success) => success === true,\n        fn: () => ({\n            message: 'Отзыв успешно отправлен!',\n            isError: false,\n        }),\n        target: showMessageFx,\n    });\n\n    sample({\n        clock: $hasError,\n        filter: (hasError) => hasError !== false,\n        fn: (error) => ({\n            message: error === false ? 'Произошла ошибка' : error,\n            isError: true,\n        }),\n        target: showMessageFx,\n    });\n\n    sample({\n        clock: delay($hasError, 300),\n        target: $hasError.reinit,\n    });\n\n    return {\n        $allReviews,\n        $currentReviewId,\n        $isFormSubmittedSuccessfully,\n        reviewCreated,\n        $hasError,\n        ReviewGate,\n    };\n});\n"
        ],
        "mappings": "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",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _withFactory } from \"effector\";\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { createGate } from \"effector-react\";\nimport { delay } from \"patronum\";\nimport { atom } from \"@/shared/factories\";\nimport { isErrorWithMessage } from \"@/shared/lib\";\nimport { createReviewMutation } from \"../api\";\nexport const ReviewModel = atom(() => {\n  const ReviewGate = createGate({\n    and: [],\n    or: {\n      name: \"ReviewGate\",\n      sid: \"-ieiw5b\"\n    }\n  });\n  const $allReviews = createStore([], {\n    name: \"$allReviews\",\n    sid: \"-b9etj1\"\n  });\n  const $currentReviewId = createStore(null, {\n    name: \"$currentReviewId\",\n    sid: \"huyue6\"\n  });\n  const $isFormSubmittedSuccessfully = createStore(false, {\n    name: \"$isFormSubmittedSuccessfully\",\n    sid: \"4bdvj3\"\n  });\n  const $hasError = createStore(false, {\n    name: \"$hasError\",\n    sid: \"j366zd\"\n  });\n  const reviewCreated = createEvent({\n    name: \"reviewCreated\",\n    sid: \"-sea2qz\"\n  });\n  const showMessageFx = createEffect(({\n    message,\n    isError\n  }) => {\n    notifications.show({\n      title: isError ? \"Произошла ошибка\" : \"Успешно!\",\n      message,\n      color: isError ? \"red\" : \"blue\"\n    });\n  }, {\n    name: \"showMessageFx\",\n    sid: \"sqf3lz\"\n  });\n  sample({\n    and: [{\n      clock: reviewCreated,\n      target: createReviewMutation.start\n    }],\n    or: {\n      sid: \"-3cpdb8\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.success,\n      fn: () => true,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-39yecf\"\n    }\n  });\n  sample({\n    and: [{\n      clock: ReviewGate.close,\n      fn: () => false,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-2v3ybo\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.failure,\n      fn: ({\n        error\n      }) => isErrorWithMessage(error) ? error.data.message : \"Произошла ошибка\",\n      target: $hasError\n    }],\n    or: {\n      sid: \"-2g9iax\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $isFormSubmittedSuccessfully,\n      filter: (success) => success === true,\n      fn: () => ({\n        message: \"Отзыв успешно отправлен!\",\n        isError: false\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-2cyqqr\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $hasError,\n      filter: (hasError) => hasError !== false,\n      fn: (error) => ({\n        message: error === false ? \"Произошла ошибка\" : error,\n        isError: true\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-1vx4ck\"\n    }\n  });\n  sample({\n    and: [{\n      clock: _withFactory({\n        sid: \"-o9m4q0\",\n        fn: () => delay($hasError, 300),\n        name: \"clock\",\n        method: \"delay\"\n      }),\n      target: $hasError.reinit\n    }],\n    or: {\n      sid: \"-1evhyd\"\n    }\n  });\n  return {\n    $allReviews,\n    $currentReviewId,\n    $isFormSubmittedSuccessfully,\n    reviewCreated,\n    $hasError,\n    ReviewGate\n  };\n});\n",
      "start": 1750105187607,
      "end": 1750105187734,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Review/model/index.ts"
        ],
        "sourcesContent": [
          "import { withFactory as _withFactory } from \"effector\";\nimport { notifications } from '@mantine/notifications';\nimport { createEffect, createEvent, createStore, sample } from 'effector';\nimport { createGate } from 'effector-react';\nimport { delay } from 'patronum';\nimport { atom } from '@/shared/factories';\nimport { isErrorWithMessage } from '@/shared/lib';\nimport { createReviewMutation } from '../api';\nimport type { CreateReviewRequest } from '../api/dto';\nexport interface Review {\n  id: string;\n  mbti_type: string;\n  name: string;\n  text: string;\n  informativeness_rate: number;\n  convenience_rate: number;\n  accuracy_rate: number;\n  recommendability_rate: number;\n  satisfaction_rate: number;\n  overall_rate: number;\n  created_at: string;\n}\nexport const ReviewModel = atom(() => {\n  const ReviewGate = createGate({\n    and: [],\n    or: {\n      name: \"ReviewGate\",\n      sid: \"-ieiw5b\"\n    }\n  });\n  const $allReviews = createStore<Review[]>([], {\n    name: \"$allReviews\",\n    sid: \"-b9etj1\"\n  });\n  const $currentReviewId = createStore<string | null>(null, {\n    name: \"$currentReviewId\",\n    sid: \"huyue6\"\n  });\n  const $isFormSubmittedSuccessfully = createStore(false, {\n    name: \"$isFormSubmittedSuccessfully\",\n    sid: \"4bdvj3\"\n  });\n  const $hasError = createStore<string | false>(false, {\n    name: \"$hasError\",\n    sid: \"j366zd\"\n  });\n  const reviewCreated = createEvent<CreateReviewRequest>({\n    name: \"reviewCreated\",\n    sid: \"-sea2qz\"\n  });\n  const showMessageFx = createEffect(({\n    message,\n    isError\n  }: {\n    message: string;\n    isError?: boolean;\n  }) => {\n    notifications.show({\n      title: isError ? 'Произошла ошибка' : 'Успешно!',\n      message,\n      color: isError ? 'red' : 'blue'\n    });\n  }, {\n    name: \"showMessageFx\",\n    sid: \"sqf3lz\"\n  });\n  sample({\n    and: [{\n      clock: reviewCreated,\n      target: createReviewMutation.start\n    }],\n    or: {\n      sid: \"-3cpdb8\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.success,\n      fn: () => true,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-39yecf\"\n    }\n  });\n  sample({\n    and: [{\n      clock: ReviewGate.close,\n      fn: () => false,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-2v3ybo\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.failure,\n      fn: ({\n        error\n      }) => isErrorWithMessage(error) ? error.data.message : 'Произошла ошибка',\n      target: $hasError\n    }],\n    or: {\n      sid: \"-2g9iax\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $isFormSubmittedSuccessfully,\n      filter: success => success === true,\n      fn: () => ({\n        message: 'Отзыв успешно отправлен!',\n        isError: false\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-2cyqqr\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $hasError,\n      filter: hasError => hasError !== false,\n      fn: error => ({\n        message: error === false ? 'Произошла ошибка' : error,\n        isError: true\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-1vx4ck\"\n    }\n  });\n  sample({\n    and: [{\n      clock: _withFactory({\n        sid: \"-o9m4q0\",\n        fn: () => delay($hasError, 300),\n        name: \"clock\",\n        method: \"delay\"\n      }),\n      target: $hasError.reinit\n    }],\n    or: {\n      sid: \"-1evhyd\"\n    }\n  });\n  return {\n    $allReviews,\n    $currentReviewId,\n    $isFormSubmittedSuccessfully,\n    reviewCreated,\n    $hasError,\n    ReviewGate\n  };\n});"
        ],
        "mappings": "AAAA,SAAS,eAAe,oBAAoB;AAC5C,SAAS,qBAAqB;AAC9B,SAAS,cAAc,aAAa,aAAa,cAAc;AAC/D,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AACtB,SAAS,YAAY;AACrB,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AAe9B,aAAM,cAAc,KAAK,MAAM;AACpC,QAAM,aAAa,WAAW;AAAA,IAC5B,KAAK,CAAC;AAAA,IACN,IAAI;AAAA,MACF,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,QAAM,cAAc,YAAsB,CAAC,GAAG;AAAA,IAC5C,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,mBAAmB,YAA2B,MAAM;AAAA,IACxD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,+BAA+B,YAAY,OAAO;AAAA,IACtD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,YAAY,YAA4B,OAAO;AAAA,IACnD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,gBAAgB,YAAiC;AAAA,IACrD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,QAAM,gBAAgB,aAAa,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,EACF,MAGM;AACJ,kBAAc,KAAK;AAAA,MACjB,OAAO,UAAU,qBAAqB;AAAA,MACtC;AAAA,MACA,OAAO,UAAU,QAAQ;AAAA,IAC3B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ,qBAAqB;AAAA,IAC/B,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO,qBAAqB,SAAS;AAAA,MACrC,IAAI,MAAM;AAAA,MACV,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO,WAAW;AAAA,MAClB,IAAI,MAAM;AAAA,MACV,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO,qBAAqB,SAAS;AAAA,MACrC,IAAI,CAAC;AAAA,QACH;AAAA,MACF,MAAM,mBAAmB,KAAK,IAAI,MAAM,KAAK,UAAU;AAAA,MACvD,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ,aAAW,YAAY;AAAA,MAC/B,IAAI,OAAO;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ,cAAY,aAAa;AAAA,MACjC,IAAI,YAAU;AAAA,QACZ,SAAS,UAAU,QAAQ,qBAAqB;AAAA,QAChD,SAAS;AAAA,MACX;AAAA,MACA,QAAQ;AAAA,IACV,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,KAAK,CAAC;AAAA,MACJ,OAAO,aAAa;AAAA,QAClB,KAAK;AAAA,QACL,IAAI,MAAM,MAAM,WAAW,GAAG;AAAA,QAC9B,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,CAAC;AAAA,MACD,QAAQ,UAAU;AAAA,IACpB,CAAC;AAAA,IACD,IAAI;AAAA,MACF,KAAK;AAAA,IACP;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/entities/Review/model/index.ts [vike:pluginModuleBanner] */\nimport { withFactory as _withFactory } from \"effector\";\nimport { notifications } from \"@mantine/notifications\";\nimport { createEffect, createEvent, createStore, sample } from \"effector\";\nimport { createGate } from \"effector-react\";\nimport { delay } from \"patronum\";\nimport { atom } from \"@/shared/factories\";\nimport { isErrorWithMessage } from \"@/shared/lib\";\nimport { createReviewMutation } from \"../api\";\nexport const ReviewModel = atom(() => {\n  const ReviewGate = createGate({\n    and: [],\n    or: {\n      name: \"ReviewGate\",\n      sid: \"-ieiw5b\"\n    }\n  });\n  const $allReviews = createStore([], {\n    name: \"$allReviews\",\n    sid: \"-b9etj1\"\n  });\n  const $currentReviewId = createStore(null, {\n    name: \"$currentReviewId\",\n    sid: \"huyue6\"\n  });\n  const $isFormSubmittedSuccessfully = createStore(false, {\n    name: \"$isFormSubmittedSuccessfully\",\n    sid: \"4bdvj3\"\n  });\n  const $hasError = createStore(false, {\n    name: \"$hasError\",\n    sid: \"j366zd\"\n  });\n  const reviewCreated = createEvent({\n    name: \"reviewCreated\",\n    sid: \"-sea2qz\"\n  });\n  const showMessageFx = createEffect(({\n    message,\n    isError\n  }) => {\n    notifications.show({\n      title: isError ? \"Произошла ошибка\" : \"Успешно!\",\n      message,\n      color: isError ? \"red\" : \"blue\"\n    });\n  }, {\n    name: \"showMessageFx\",\n    sid: \"sqf3lz\"\n  });\n  sample({\n    and: [{\n      clock: reviewCreated,\n      target: createReviewMutation.start\n    }],\n    or: {\n      sid: \"-3cpdb8\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.success,\n      fn: () => true,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-39yecf\"\n    }\n  });\n  sample({\n    and: [{\n      clock: ReviewGate.close,\n      fn: () => false,\n      target: $isFormSubmittedSuccessfully\n    }],\n    or: {\n      sid: \"-2v3ybo\"\n    }\n  });\n  sample({\n    and: [{\n      clock: createReviewMutation.finished.failure,\n      fn: ({\n        error\n      }) => isErrorWithMessage(error) ? error.data.message : \"Произошла ошибка\",\n      target: $hasError\n    }],\n    or: {\n      sid: \"-2g9iax\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $isFormSubmittedSuccessfully,\n      filter: (success) => success === true,\n      fn: () => ({\n        message: \"Отзыв успешно отправлен!\",\n        isError: false\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-2cyqqr\"\n    }\n  });\n  sample({\n    and: [{\n      clock: $hasError,\n      filter: (hasError) => hasError !== false,\n      fn: (error) => ({\n        message: error === false ? \"Произошла ошибка\" : error,\n        isError: true\n      }),\n      target: showMessageFx\n    }],\n    or: {\n      sid: \"-1vx4ck\"\n    }\n  });\n  sample({\n    and: [{\n      clock: _withFactory({\n        sid: \"-o9m4q0\",\n        fn: () => delay($hasError, 300),\n        name: \"clock\",\n        method: \"delay\"\n      }),\n      target: $hasError.reinit\n    }],\n    or: {\n      sid: \"-1evhyd\"\n    }\n  });\n  return {\n    $allReviews,\n    $currentReviewId,\n    $isFormSubmittedSuccessfully,\n    reviewCreated,\n    $hasError,\n    ReviewGate\n  };\n});\n",
      "start": 1750105187735,
      "end": 1750105187735,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "src/entities/Review/model/index.ts"
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACltB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/BlogPage/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Grid, isNumberLike, Pagination } from '@mantine/core';\nimport { useList, useUnit } from 'effector-react';\n\nimport { PageLoader } from '@/shared/ui';\n\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from '@/entities/Blog';\n\nimport { PageLayout } from '@/widgets/PageLayout';\n\nexport const BlogPage = () => {\n    const { data, pending } = useUnit(getBlogPostsQuery);\n    const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n    const totalPages = useUnit(BlogModel.$totalPages);\n    const blogPosts = useList(BlogModel.$blogPosts, (post) => post.id && <BlogPostCard post={post} />);\n\n    if (!data || pending) return <PageLoader />;\n\n    return (\n        <PageLayout title='Блог'>\n            {!pending && <Grid>{blogPosts}</Grid>}\n            <Pagination\n                mt='sm'\n                value={page}\n                hideWithOnePage\n                onChange={onPageChange}\n                total={isNumberLike(totalPages) ? totalPages : 1}\n            />\n        </PageLayout>\n    );\n};\n",
      "start": 1750184198770,
      "end": 1750184198795,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { Grid, isNumberLike, Pagination } from '@mantine/core';\nimport { useList, useUnit } from 'effector-react';\nimport { PageLoader } from '@/shared/ui';\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from '@/entities/Blog';\nimport { PageLayout } from '@/widgets/PageLayout';\nexport const BlogPage = () => {\n  const {\n    data,\n    pending\n  } = useUnit(getBlogPostsQuery);\n  const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n  const totalPages = useUnit(BlogModel.$totalPages);\n  const blogPosts = useList(BlogModel.$blogPosts, post => post.id && <BlogPostCard post={post} />);\n  if (!data || pending) return <PageLoader />;\n  return <PageLayout title='Блог'>\n            {!pending && <Grid>{blogPosts}</Grid>}\n            <Pagination mt='sm' value={page} hideWithOnePage onChange={onPageChange} total={isNumberLike(totalPages) ? totalPages : 1} />\n        </PageLayout>;\n};",
      "start": 1750184198795,
      "end": 1750184198797,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "Grid",
          "isNumberLike",
          "Pagination",
          "useList",
          "useUnit",
          "PageLoader",
          "BlogModel",
          "BlogPostCard",
          "getBlogPostsQuery",
          "PageLayout",
          "BlogPage",
          "data",
          "pending",
          "page",
          "onPageChange",
          "$currentPage",
          "pageChanged",
          "totalPages",
          "$totalPages",
          "blogPosts",
          "$blogPosts",
          "post",
          "id"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/BlogPage/index.tsx"],
        "sourcesContent": [
          "import { Grid, isNumberLike, Pagination } from '@mantine/core';\nimport { useList, useUnit } from 'effector-react';\n\nimport { PageLoader } from '@/shared/ui';\n\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from '@/entities/Blog';\n\nimport { PageLayout } from '@/widgets/PageLayout';\n\nexport const BlogPage = () => {\n    const { data, pending } = useUnit(getBlogPostsQuery);\n    const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n    const totalPages = useUnit(BlogModel.$totalPages);\n    const blogPosts = useList(BlogModel.$blogPosts, (post) => post.id && <BlogPostCard post={post} />);\n\n    if (!data || pending) return <PageLoader />;\n\n    return (\n        <PageLayout title='Блог'>\n            {!pending && <Grid>{blogPosts}</Grid>}\n            <Pagination\n                mt='sm'\n                value={page}\n                hideWithOnePage\n                onChange={onPageChange}\n                total={isNumberLike(totalPages) ? totalPages : 1}\n            />\n        </PageLayout>\n    );\n};\n"
        ],
        "mappings": "AAAA,SAASA,IAAI,EAAEC,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAC9D,SAASC,OAAO,EAAEC,OAAO,QAAQ,gBAAgB;AAEjD,SAASC,UAAU,QAAQ,aAAa;AAExC,SAASC,SAAS,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,iBAAiB;AAE5E,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC1B,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAACI,iBAAiB,CAAC;EACpD,MAAM,CAACK,IAAI,EAAEC,YAAY,CAAC,GAAGV,OAAO,CAAC,CAACE,SAAS,CAACS,YAAY,EAAET,SAAS,CAACU,WAAW,CAAC,CAAC;EACrF,MAAMC,UAAU,GAAGb,OAAO,CAACE,SAAS,CAACY,WAAW,CAAC;EACjD,MAAMC,SAAS,GAAGhB,OAAO,CAACG,SAAS,CAACc,UAAU,EAAGC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAACD,IAAI,CAAC,GAAG,CAAC;EAElG,IAAI,CAACV,IAAI,IAAIC,OAAO,EAAE,OAAO,CAAC,UAAU,GAAG;EAE3C,OACI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;AAChC,YAAY,CAAC,CAACA,OAAO,IAAI,CAAC,IAAI,CAAC,CAACO,SAAS,CAAC,EAAE,IAAI,CAAC;AACjD,YAAY,CAAC,UAAU,CACP,EAAE,CAAC,IAAI,CACP,KAAK,CAAC,CAACN,IAAI,CAAC,CACZ,eAAe,CACf,QAAQ,CAAC,CAACC,YAAY,CAAC,CACvB,KAAK,CAAC,CAACb,YAAY,CAACgB,UAAU,CAAC,GAAGA,UAAU,GAAG,CAAC,CAAC;AAEjE,QAAQ,EAAE,UAAU,CAAC;AAErB,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Grid, isNumberLike, Pagination } from \"@mantine/core\";\nimport { useList, useUnit } from \"effector-react\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from \"@/entities/Blog\";\nimport { PageLayout } from \"@/widgets/PageLayout\";\nexport const BlogPage = () => {\n  const {\n    data,\n    pending\n  } = useUnit(getBlogPostsQuery);\n  const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n  const totalPages = useUnit(BlogModel.$totalPages);\n  const blogPosts = useList(BlogModel.$blogPosts, (post) => post.id && /* @__PURE__ */ jsx(BlogPostCard, { post }));\n  if (!data || pending) return /* @__PURE__ */ jsx(PageLoader, {});\n  return /* @__PURE__ */ jsxs(PageLayout, { title: \"Блог\", children: [\n    !pending && /* @__PURE__ */ jsx(Grid, { children: blogPosts }),\n    /* @__PURE__ */ jsx(Pagination, { mt: \"sm\", value: page, hideWithOnePage: true, onChange: onPageChange, total: isNumberLike(totalPages) ? totalPages : 1 })\n  ] });\n};\n",
      "start": 1750184198797,
      "end": 1750184198841,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/pages/BlogPage/index.tsx"],
        "sourcesContent": [
          "import { Grid, isNumberLike, Pagination } from '@mantine/core';\nimport { useList, useUnit } from 'effector-react';\nimport { PageLoader } from '@/shared/ui';\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from '@/entities/Blog';\nimport { PageLayout } from '@/widgets/PageLayout';\nexport const BlogPage = () => {\n  const {\n    data,\n    pending\n  } = useUnit(getBlogPostsQuery);\n  const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n  const totalPages = useUnit(BlogModel.$totalPages);\n  const blogPosts = useList(BlogModel.$blogPosts, post => post.id && <BlogPostCard post={post} />);\n  if (!data || pending) return <PageLoader />;\n  return <PageLayout title='Блог'>\n            {!pending && <Grid>{blogPosts}</Grid>}\n            <Pagination mt='sm' value={page} hideWithOnePage onChange={onPageChange} total={isNumberLike(totalPages) ? totalPages : 1} />\n        </PageLayout>;\n};"
        ],
        "mappings": "AAYqE,cAE5D,YAF4D;AAZrE,SAAS,MAAM,cAAc,kBAAkB;AAC/C,SAAS,SAAS,eAAe;AACjC,SAAS,kBAAkB;AAC3B,SAAS,WAAW,cAAc,yBAAyB;AAC3D,SAAS,kBAAkB;AACpB,aAAM,WAAW,MAAM;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,QAAQ,iBAAiB;AAC7B,QAAM,CAAC,MAAM,YAAY,IAAI,QAAQ,CAAC,UAAU,cAAc,UAAU,WAAW,CAAC;AACpF,QAAM,aAAa,QAAQ,UAAU,WAAW;AAChD,QAAM,YAAY,QAAQ,UAAU,YAAY,UAAQ,KAAK,MAAM,oBAAC,gBAAa,MAAY,CAAE;AAC/F,MAAI,CAAC,QAAQ,QAAS,QAAO,oBAAC,cAAW;AACzC,SAAO,qBAAC,cAAW,OAAM,QACd;AAAA,KAAC,WAAW,oBAAC,QAAM,qBAAU;AAAA,IAC9B,oBAAC,cAAW,IAAG,MAAK,OAAO,MAAM,iBAAe,MAAC,UAAU,cAAc,OAAO,aAAa,UAAU,IAAI,aAAa,GAAG;AAAA,KAC/H;AACR;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "normal-normal"
    },
    {
      "name": "vike:fileEnv",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "normal-normal"
    },
    {
      "name": "vike:extractAssets:remove-javaScript",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "post"
    },
    {
      "name": "vike:extractExportNames",
      "start": 1750184198841,
      "end": 1750184198841,
      "order": "post"
    },
    {
      "name": "vike:envVars",
      "start": 1750184198842,
      "end": 1750184198842,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750184198842,
      "end": 1750184198842,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750184198842,
      "end": 1750184198842,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750184198842,
      "end": 1750184198842,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginModuleBanner",
      "result": "/*! src/pages/BlogPage/index.tsx [vike:pluginModuleBanner] */\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Grid, isNumberLike, Pagination } from \"@mantine/core\";\nimport { useList, useUnit } from \"effector-react\";\nimport { PageLoader } from \"@/shared/ui\";\nimport { BlogModel, BlogPostCard, getBlogPostsQuery } from \"@/entities/Blog\";\nimport { PageLayout } from \"@/widgets/PageLayout\";\nexport const BlogPage = () => {\n  const {\n    data,\n    pending\n  } = useUnit(getBlogPostsQuery);\n  const [page, onPageChange] = useUnit([BlogModel.$currentPage, BlogModel.pageChanged]);\n  const totalPages = useUnit(BlogModel.$totalPages);\n  const blogPosts = useList(BlogModel.$blogPosts, (post) => post.id && /* @__PURE__ */ jsx(BlogPostCard, { post }));\n  if (!data || pending) return /* @__PURE__ */ jsx(PageLoader, {});\n  return /* @__PURE__ */ jsxs(PageLayout, { title: \"Блог\", children: [\n    !pending && /* @__PURE__ */ jsx(Grid, { children: blogPosts }),\n    /* @__PURE__ */ jsx(Pagination, { mt: \"sm\", value: page, hideWithOnePage: true, onChange: onPageChange, total: isNumberLike(totalPages) ? totalPages : 1 })\n  ] });\n};\n",
      "start": 1750184198842,
      "end": 1750184198842,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/pages/BlogPage/index.tsx"],
        "names": [],
        "mappingsjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnnH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9J,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;"
      }
    }
  ]
}

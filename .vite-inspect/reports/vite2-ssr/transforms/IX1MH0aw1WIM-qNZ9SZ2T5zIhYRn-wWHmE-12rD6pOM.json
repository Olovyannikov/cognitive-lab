{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/IconCheck/index.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { memo } from 'react';\n\nexport const IconCheck = memo(() => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='currentColor' viewBox='0 0 256 256'>\n        <path d='m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z' />\n    </svg>\n));\n\nIconCheck.displayName = 'IconCheck';\n",
      "start": 1750278467031,
      "end": 1750278467084,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { memo } from 'react';\nexport const IconCheck = memo(() => <svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='currentColor' viewBox='0 0 256 256'>\n        <path d='m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z' />\n    </svg>);\nIconCheck.displayName = 'IconCheck';",
      "start": 1750278467084,
      "end": 1750278467085,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": ["memo", "IconCheck", "displayName"],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/IconCheck/index.tsx"],
        "sourcesContent": [
          "import { memo } from 'react';\n\nexport const IconCheck = memo(() => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='currentColor' viewBox='0 0 256 256'>\n        <path d='m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z' />\n    </svg>\n));\n\nIconCheck.displayName = 'IconCheck';\n"
        ],
        "mappings": "AAAA,SAASA,IAAI,QAAQ,OAAO;AAE5B,OAAO,MAAMC,SAAS,GAAGD,IAAI,CAAC,MAC1B,CAAC,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa;AAC9G,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,wGAAwG;AACxH,IAAI,EAAE,GAAG,CACR,CAAC;AAEFC,SAAS,CAACC,WAAW,GAAG,WAAW",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { memo } from \"react\";\nexport const IconCheck = memo(() => /* @__PURE__ */ jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"1em\", height: \"1em\", fill: \"currentColor\", viewBox: \"0 0 256 256\", children: /* @__PURE__ */ jsx(\"path\", { d: \"m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z\" }) }));\nIconCheck.displayName = \"IconCheck\";\n",
      "start": 1750278467085,
      "end": 1750278467292,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/ui/IconCheck/index.tsx"],
        "sourcesContent": [
          "import { memo } from 'react';\nexport const IconCheck = memo(() => <svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' fill='currentColor' viewBox='0 0 256 256'>\n        <path d='m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z' />\n    </svg>);\nIconCheck.displayName = 'IconCheck';"
        ],
        "mappings": "AAEQ;AAFR,SAAS,YAAY;AACd,aAAM,YAAY,KAAK,MAAM,oBAAC,SAAI,OAAM,8BAA6B,OAAM,OAAM,QAAO,OAAM,MAAK,gBAAe,SAAQ,eACzH,8BAAC,UAAK,GAAE,0GAAyG,GACrH,CAAM;AACV,UAAU,cAAc;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750278467292,
      "end": 1750278467292,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/ui/IconCheck/index.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { memo } from \"react\";\nexport const IconCheck = memo(() => /* @__PURE__ */ jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"1em\", height: \"1em\", fill: \"currentColor\", viewBox: \"0 0 256 256\", children: /* @__PURE__ */ jsx(\"path\", { d: \"m232.49 80.49-128 128a12 12 0 0 1-17 0l-56-56a12 12 0 1 1 17-17L96 183 215.51 63.51a12 12 0 0 1 17 17Z\" }) }));\nIconCheck.displayName = \"IconCheck\";\n",
      "start": 1750278467293,
      "end": 1750278467293,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/ui/IconCheck/index.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACv
      }
    }
  ]
}

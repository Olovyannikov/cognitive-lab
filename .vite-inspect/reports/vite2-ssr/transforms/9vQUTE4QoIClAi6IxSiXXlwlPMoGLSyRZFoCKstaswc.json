{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/testEmailFormModel.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createForm } from '@effector-reform/core';\nimport { zodAdapter } from '@effector-reform/zod';\nimport { z } from 'zod';\n\nimport { atom } from '@/shared/factories';\n\nexport const TestEmailFormModel = atom(() => {\n    const form = createForm({\n        schema: {\n            email: '',\n            approve_subscription: Boolean(false),\n        },\n        validation: zodAdapter(\n            z.object({\n                email: z.string().email(),\n                approve_subscription: z.boolean(),\n            })\n        ),\n    });\n\n    return {\n        form,\n    };\n});\n",
      "start": 1750271784858,
      "end": 1750271784876,
      "sourcemaps": null
    },
    {
      "name": "vite:react-swc",
      "result": "import { withFactory as _effector$factory } from 'effector';\nimport { createForm } from '@effector-reform/core';\nimport { zodAdapter } from '@effector-reform/zod';\nimport { z } from 'zod';\nimport { atom } from '@/shared/factories';\nexport const TestEmailFormModel = _effector$factory({\n    sid: \"dvikc9ew\",\n    fn: ()=>atom(()=>{\n            const form = createForm({\n                schema: {\n                    email: '',\n                    approve_subscription: Boolean(false)\n                },\n                validation: zodAdapter(z.object({\n                    email: z.string().email(),\n                    approve_subscription: z.boolean()\n                }))\n            });\n            return {\n                form\n            };\n        })\n});\n",
      "start": 1750271784876,
      "end": 1750271784880,
      "order": "pre",
      "sourcemaps": "{\"version\":3,\"sources\":[\"/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/testEmailFormModel.ts\"],\"sourcesContent\":[\"import { createForm } from '@effector-reform/core';\\nimport { zodAdapter } from '@effector-reform/zod';\\nimport { z } from 'zod';\\n\\nimport { atom } from '@/shared/factories';\\n\\nexport const TestEmailFormModel = atom(() => {\\n    const form = createForm({\\n        schema: {\\n            email: '',\\n            approve_subscription: Boolean(false),\\n        },\\n        validation: zodAdapter(\\n            z.object({\\n                email: z.string().email(),\\n                approve_subscription: z.boolean(),\\n            })\\n        ),\\n    });\\n\\n    return {\\n        form,\\n    };\\n});\\n\"],\"names\":[\"createForm\",\"zodAdapter\",\"z\",\"atom\",\"TestEmailFormModel\",\"form\",\"schema\",\"email\",\"approve_subscription\",\"Boolean\",\"validation\",\"object\",\"string\",\"boolean\"],\"mappings\":\";AAAA,SAASA,UAAU,QAAQ,wBAAwB;AACnD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,CAAC,QAAQ,MAAM;AAExB,SAASC,IAAI,QAAQ,qBAAqB;AAE1C,OAAO,MAAMC;;YAAqBD,KAAK;YACnC,MAAME,OAAOL,WAAW;gBACpBM,QAAQ;oBACJC,OAAO;oBACPC,sBAAsBC,QAAQ;gBAClC;gBACAC,YAAYT,WACRC,EAAES,MAAM,CAAC;oBACLJ,OAAOL,EAAEU,MAAM,GAAGL,KAAK;oBACvBC,sBAAsBN,EAAEW,OAAO;gBACnC;YAER;YAEA,OAAO;gBACHR;YACJ;QACJ;GAAG\"}"
    },
    {
      "name": "vite:esbuild",
      "result": "import { withFactory as _effector$factory } from \"effector\";\nimport { createForm } from \"@effector-reform/core\";\nimport { zodAdapter } from \"@effector-reform/zod\";\nimport { z } from \"zod\";\nimport { atom } from \"@/shared/factories\";\nexport const TestEmailFormModel = _effector$factory({\n  sid: \"dvikc9ew\",\n  fn: () => atom(() => {\n    const form = createForm({\n      schema: {\n        email: \"\",\n        approve_subscription: Boolean(false)\n      },\n      validation: zodAdapter(z.object({\n        email: z.string().email(),\n        approve_subscription: z.boolean()\n      }))\n    });\n    return {\n      form\n    };\n  })\n});\n",
      "start": 1750271784880,
      "end": 1750271784972,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/entities/Test/model/testEmailFormModel.ts"
        ],
        "sourcesContent": [
          "import { withFactory as _effector$factory } from 'effector';\nimport { createForm } from '@effector-reform/core';\nimport { zodAdapter } from '@effector-reform/zod';\nimport { z } from 'zod';\nimport { atom } from '@/shared/factories';\nexport const TestEmailFormModel = _effector$factory({\n    sid: \"dvikc9ew\",\n    fn: ()=>atom(()=>{\n            const form = createForm({\n                schema: {\n                    email: '',\n                    approve_subscription: Boolean(false)\n                },\n                validation: zodAdapter(z.object({\n                    email: z.string().email(),\n                    approve_subscription: z.boolean()\n                }))\n            });\n            return {\n                form\n            };\n        })\n});\n"
        ],
        "mappings": "AAAA,SAAS,eAAe,yBAAyB;AACjD,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB;AAC3B,SAAS,SAAS;AAClB,SAAS,YAAY;AACd,aAAM,qBAAqB,kBAAkB;AAAA,EAChD,KAAK;AAAA,EACL,IAAI,MAAI,KAAK,MAAI;AACT,UAAM,OAAO,WAAW;AAAA,MACpB,QAAQ;AAAA,QACJ,OAAO;AAAA,QACP,sBAAsB,QAAQ,KAAK;AAAA,MACvC;AAAA,MACA,YAAY,WAAW,EAAE,OAAO;AAAA,QAC5B,OAAO,EAAE,OAAO,EAAE,MAAM;AAAA,QACxB,sBAAsB,EAAE,QAAQ;AAAA,MACpC,CAAC,CAAC;AAAA,IACN,CAAC;AACD,WAAO;AAAA,MACH;AAAA,IACJ;AAAA,EACJ,CAAC;AACT,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750271784972,
      "end": 1750271784972,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/entities/Test/model/testEmailFormModel.ts [vike:pluginModuleBanner] */\nimport { withFactory as _effector$factory } from \"effector\";\nimport { createForm } from \"@effector-reform/core\";\nimport { zodAdapter } from \"@effector-reform/zod\";\nimport { z } from \"zod\";\nimport { atom } from \"@/shared/factories\";\nexport const TestEmailFormModel = _effector$factory({\n  sid: \"dvikc9ew\",\n  fn: () => atom(() => {\n    const form = createForm({\n      schema: {\n        email: \"\",\n        approve_subscription: Boolean(false)\n      },\n      validation: zodAdapter(z.object({\n        email: z.string().email(),\n        approve_subscription: z.boolean()\n      }))\n    });\n    return {\n      form\n    };\n  })\n});\n",
      "start": 1750271784973,
      "end": 1750271784973,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/entities/Test/model/testEmailFormModel.ts"],
        "names": [],
        "mappingslD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    }
  ]
}

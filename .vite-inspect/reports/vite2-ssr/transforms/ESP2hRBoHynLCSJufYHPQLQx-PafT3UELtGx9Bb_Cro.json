{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/lib/effector/ScopeProvider.tsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createContext, type PropsWithChildren, useCallback, useContext, useEffect, useState } from 'react';\nimport type { Scope, SerializedState } from 'effector';\nimport type { PageContextClient } from 'vike/types';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { getScope } from './getScope';\n\nconst ScopeContext = createContext<Scope | undefined>(undefined);\nconst ScopeUpdateContext = createContext<(values: SerializedState) => void>(() => {});\n\nexport const ScopeProvider = ({ children }: PropsWithChildren) => {\n    const pageContext = usePageContext() as PageContextClient;\n    const [scope, setScope] = useState<Scope | undefined>('scope' in pageContext ? pageContext.scope : getScope());\n\n    const update = useCallback((values: SerializedState) => {\n        setScope(getScope(values));\n    }, []);\n\n    useEffect(() => {\n        if (!pageContext.isHydration) {\n            setScope(getScope());\n        }\n    }, [pageContext]);\n\n    return (\n        <ScopeContext.Provider value={scope}>\n            <ScopeUpdateContext.Provider value={update}>{children}</ScopeUpdateContext.Provider>\n        </ScopeContext.Provider>\n    );\n};\n\nexport const useScope = () => useContext(ScopeContext);\n",
      "start": 1750275033476,
      "end": 1750275033499,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "result": "import { createContext, type PropsWithChildren, useCallback, useContext, useEffect, useState } from 'react';\nimport type { Scope, SerializedState } from 'effector';\nimport type { PageContextClient } from 'vike/types';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { getScope } from './getScope';\nconst ScopeContext = createContext<Scope | undefined>(undefined);\nconst ScopeUpdateContext = createContext<(values: SerializedState) => void>(() => {});\nexport const ScopeProvider = ({\n  children\n}: PropsWithChildren) => {\n  const pageContext = usePageContext() as PageContextClient;\n  const [scope, setScope] = useState<Scope | undefined>('scope' in pageContext ? pageContext.scope : getScope());\n  const update = useCallback((values: SerializedState) => {\n    setScope(getScope(values));\n  }, []);\n  useEffect(() => {\n    if (!pageContext.isHydration) {\n      setScope(getScope());\n    }\n  }, [pageContext]);\n  return <ScopeContext.Provider value={scope}>\n            <ScopeUpdateContext.Provider value={update}>{children}</ScopeUpdateContext.Provider>\n        </ScopeContext.Provider>;\n};\nexport const useScope = () => useContext(ScopeContext);",
      "start": 1750275033499,
      "end": 1750275033505,
      "order": "pre-normal",
      "sourcemaps": {
        "version": 3,
        "names": [
          "createContext",
          "PropsWithChildren",
          "useCallback",
          "useContext",
          "useEffect",
          "useState",
          "Scope",
          "SerializedState",
          "PageContextClient",
          "usePageContext",
          "getScope",
          "ScopeContext",
          "undefined",
          "ScopeUpdateContext",
          "values",
          "ScopeProvider",
          "children",
          "pageContext",
          "scope",
          "setScope",
          "update",
          "isHydration",
          "useScope"
        ],
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/lib/effector/ScopeProvider.tsx"],
        "sourcesContent": [
          "import { createContext, type PropsWithChildren, useCallback, useContext, useEffect, useState } from 'react';\nimport type { Scope, SerializedState } from 'effector';\nimport type { PageContextClient } from 'vike/types';\nimport { usePageContext } from 'vike-react/usePageContext';\n\nimport { getScope } from './getScope';\n\nconst ScopeContext = createContext<Scope | undefined>(undefined);\nconst ScopeUpdateContext = createContext<(values: SerializedState) => void>(() => {});\n\nexport const ScopeProvider = ({ children }: PropsWithChildren) => {\n    const pageContext = usePageContext() as PageContextClient;\n    const [scope, setScope] = useState<Scope | undefined>('scope' in pageContext ? pageContext.scope : getScope());\n\n    const update = useCallback((values: SerializedState) => {\n        setScope(getScope(values));\n    }, []);\n\n    useEffect(() => {\n        if (!pageContext.isHydration) {\n            setScope(getScope());\n        }\n    }, [pageContext]);\n\n    return (\n        <ScopeContext.Provider value={scope}>\n            <ScopeUpdateContext.Provider value={update}>{children}</ScopeUpdateContext.Provider>\n        </ScopeContext.Provider>\n    );\n};\n\nexport const useScope = () => useContext(ScopeContext);\n"
        ],
        "mappings": "AAAA,SAASA,aAAa,EAAE,KAAKC,iBAAiB,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3G,cAAcC,KAAK,EAAEC,eAAe,QAAQ,UAAU;AACtD,cAAcC,iBAAiB,QAAQ,YAAY;AACnD,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,QAAQ,QAAQ,YAAY;AAErC,MAAMC,YAAY,GAAGX,aAAa,CAACM,KAAK,GAAG,SAAS,CAAC,CAACM,SAAS,CAAC;AAChE,MAAMC,kBAAkB,GAAGb,aAAa,CAAC,CAACc,MAAM,EAAEP,eAAe,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAErF,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAA4B,CAAlB,EAAEf,iBAAiB,KAAK;EAC9D,MAAMgB,WAAW,GAAGR,cAAc,CAAC,CAAC,IAAID,iBAAiB;EACzD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACC,KAAK,GAAG,SAAS,CAAC,CAAC,OAAO,IAAIW,WAAW,GAAGA,WAAW,CAACC,KAAK,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE9G,MAAMU,MAAM,GAAGlB,WAAW,CAAC,CAACY,MAAM,EAAEP,eAAe,KAAK;IACpDY,QAAQ,CAACT,QAAQ,CAACI,MAAM,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,WAAW,CAACI,WAAW,EAAE;MAC1BF,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAACO,WAAW,CAAC,CAAC;EAEjB,OACI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC;AAC5C,YAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAACE,MAAM,CAAC,CAAC,CAACJ,QAAQ,CAAC,EAAE,kBAAkB,CAAC,QAAQ;AAC/F,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;AAEhC,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAGA,CAAA,KAAMnB,UAAU,CAACQ,YAAY,CAAC",
        "ignoreList": []
      }
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { getScope } from \"./getScope\";\nconst ScopeContext = createContext(void 0);\nconst ScopeUpdateContext = createContext(() => {\n});\nexport const ScopeProvider = ({\n  children\n}) => {\n  const pageContext = usePageContext();\n  const [scope, setScope] = useState(\"scope\" in pageContext ? pageContext.scope : getScope());\n  const update = useCallback((values) => {\n    setScope(getScope(values));\n  }, []);\n  useEffect(() => {\n    if (!pageContext.isHydration) {\n      setScope(getScope());\n    }\n  }, [pageContext]);\n  return /* @__PURE__ */ jsx(ScopeContext.Provider, { value: scope, children: /* @__PURE__ */ jsx(ScopeUpdateContext.Provider, { value: update, children }) });\n};\nexport const useScope = () => useContext(ScopeContext);\n",
      "start": 1750275033505,
      "end": 1750275033591,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": ["/Users/ilaolovannikov/WebstormProjects/cognitive-lab/src/shared/lib/effector/ScopeProvider.tsx"],
        "sourcesContent": [
          "import { createContext, type PropsWithChildren, useCallback, useContext, useEffect, useState } from 'react';\nimport type { Scope, SerializedState } from 'effector';\nimport type { PageContextClient } from 'vike/types';\nimport { usePageContext } from 'vike-react/usePageContext';\nimport { getScope } from './getScope';\nconst ScopeContext = createContext<Scope | undefined>(undefined);\nconst ScopeUpdateContext = createContext<(values: SerializedState) => void>(() => {});\nexport const ScopeProvider = ({\n  children\n}: PropsWithChildren) => {\n  const pageContext = usePageContext() as PageContextClient;\n  const [scope, setScope] = useState<Scope | undefined>('scope' in pageContext ? pageContext.scope : getScope());\n  const update = useCallback((values: SerializedState) => {\n    setScope(getScope(values));\n  }, []);\n  useEffect(() => {\n    if (!pageContext.isHydration) {\n      setScope(getScope());\n    }\n  }, [pageContext]);\n  return <ScopeContext.Provider value={scope}>\n            <ScopeUpdateContext.Provider value={update}>{children}</ScopeUpdateContext.Provider>\n        </ScopeContext.Provider>;\n};\nexport const useScope = () => useContext(ScopeContext);"
        ],
        "mappings": "AAqBY;AArBZ,SAAS,eAAuC,aAAa,YAAY,WAAW,gBAAgB;AAGpG,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB;AACzB,MAAM,eAAe,cAAiC,MAAS;AAC/D,MAAM,qBAAqB,cAAiD,MAAM;AAAC,CAAC;AAC7E,aAAM,gBAAgB,CAAC;AAAA,EAC5B;AACF,MAAyB;AACvB,QAAM,cAAc,eAAe;AACnC,QAAM,CAAC,OAAO,QAAQ,IAAI,SAA4B,WAAW,cAAc,YAAY,QAAQ,SAAS,CAAC;AAC7G,QAAM,SAAS,YAAY,CAAC,WAA4B;AACtD,aAAS,SAAS,MAAM,CAAC;AAAA,EAC3B,GAAG,CAAC,CAAC;AACL,YAAU,MAAM;AACd,QAAI,CAAC,YAAY,aAAa;AAC5B,eAAS,SAAS,CAAC;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,WAAW,CAAC;AAChB,SAAO,oBAAC,aAAa,UAAb,EAAsB,OAAO,OAC3B,8BAAC,mBAAmB,UAAnB,EAA4B,OAAO,QAAS,UAAS,GAC1D;AACR;AACO,aAAM,WAAW,MAAM,WAAW,YAAY;",
        "names": []
      }
    },
    {
      "name": "vite:worker",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginFileEnv",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal-normal"
    },
    {
      "name": "vike:pluginExtractAssets:remove-javaScript",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "post"
    },
    {
      "name": "vike:pluginExtractExportNames",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "post"
    },
    {
      "name": "vike:pluginEnvVars",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "post"
    },
    {
      "name": "vike:pluginReplaceConstants",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750275033591,
      "end": 1750275033591,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750275033592,
      "end": 1750275033592,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750275033592,
      "end": 1750275033592,
      "order": "normal-normal"
    },
    {
      "name": "vike:build:pluginModuleBanner",
      "result": "/*! src/shared/lib/effector/ScopeProvider.tsx [vike:pluginModuleBanner] */\nimport { jsx } from \"react/jsx-runtime\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { usePageContext } from \"vike-react/usePageContext\";\nimport { getScope } from \"./getScope\";\nconst ScopeContext = createContext(void 0);\nconst ScopeUpdateContext = createContext(() => {\n});\nexport const ScopeProvider = ({\n  children\n}) => {\n  const pageContext = usePageContext();\n  const [scope, setScope] = useState(\"scope\" in pageContext ? pageContext.scope : getScope());\n  const update = useCallback((values) => {\n    setScope(getScope(values));\n  }, []);\n  useEffect(() => {\n    if (!pageContext.isHydration) {\n      setScope(getScope());\n    }\n  }, [pageContext]);\n  return /* @__PURE__ */ jsx(ScopeContext.Provider, { value: scope, children: /* @__PURE__ */ jsx(ScopeUpdateContext.Provider, { value: update, children }) });\n};\nexport const useScope = () => useContext(ScopeContext);\n",
      "start": 1750275033592,
      "end": 1750275033592,
      "order": "post-post",
      "sourcemaps": {
        "version": 3,
        "sources": ["src/shared/lib/effector/ScopeProvider.tsx"],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACn
      }
    }
  ]
}

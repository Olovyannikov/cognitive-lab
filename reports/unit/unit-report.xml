<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="81" failures="0" errors="0" time="1.042425083">
    <testsuite name="src/shared/api/__tests__/create-request-fx.spec.ts" timestamp="2025-07-25T15:12:03.330Z" hostname="192.168.1.12" tests="5" failures="0" errors="0" skipped="0" time="0.02245625">
        <testcase classname="src/shared/api/__tests__/create-request-fx.spec.ts" name="createRequestFx &gt; calls ofetch with correct params (simple payload)" time="0.01864675">
        </testcase>
        <testcase classname="src/shared/api/__tests__/create-request-fx.spec.ts" name="createRequestFx &gt; calls ofetch with correct params (payload as function)" time="0.001102708">
        </testcase>
        <testcase classname="src/shared/api/__tests__/create-request-fx.spec.ts" name="createRequestFx &gt; adds Authorization header if withTokenInHeaders is true" time="0.000731083">
        </testcase>
        <testcase classname="src/shared/api/__tests__/create-request-fx.spec.ts" name="createRequestFx &gt; does not add Authorization header if withTokenInHeaders is false" time="0.00066725">
        </testcase>
        <testcase classname="src/shared/api/__tests__/create-request-fx.spec.ts" name="createRequestFx &gt; merges headers correctly" time="0.000644042">
        </testcase>
    </testsuite>
    <testsuite name="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" timestamp="2025-07-25T15:12:03.333Z" hostname="192.168.1.12" tests="11" failures="0" errors="0" skipped="0" time="0.00493175">
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return true for a non-empty string" time="0.000735666">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for an empty string" time="0.000160583">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return true for a non-empty array" time="0.000069458">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for an empty array" time="0.00012325">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for a value that is not a string or array" time="0.000110791">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for null" time="0.000053417">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for undefined" time="0.000041792">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return true for a string longer than a specified length" time="0.000040208">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for a string not longer than a specified length" time="0.000114917">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return true for an array longer than a specified length" time="0.000114333">
        </testcase>
        <testcase classname="src/shared/lib/utils/isExists/__tests__/isExists.spec.ts" name="isExists &gt; should return false for an array not longer than a specified length" time="0.000045958">
        </testcase>
    </testsuite>
    <testsuite name="src/shared/lib/utils/navigate/__tests__/navigate.spec.ts" timestamp="2025-07-25T15:12:03.337Z" hostname="192.168.1.12" tests="2" failures="0" errors="0" skipped="0" time="0.002038125">
        <testcase classname="src/shared/lib/utils/navigate/__tests__/navigate.spec.ts" name="navigate.back &gt; should call window.history.back() when navigate.back() is invoked" time="0.000756375">
        </testcase>
        <testcase classname="src/shared/lib/utils/navigate/__tests__/navigate.spec.ts" name="navigate.back &gt; should not call window.history.back() if method is mocked" time="0.000158833">
        </testcase>
    </testsuite>
    <testsuite name="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" timestamp="2025-07-25T15:12:03.338Z" hostname="192.168.1.12" tests="5" failures="0" errors="0" skipped="0" time="0.010073125">
        <testcase classname="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" name="toInputUppercase &gt; should convert input value to uppercase" time="0.007412125">
        </testcase>
        <testcase classname="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" name="toInputUppercase &gt; should handle empty input" time="0.000101">
        </testcase>
        <testcase classname="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" name="toInputUppercase &gt; should handle input already in uppercase" time="0.000129791">
        </testcase>
        <testcase classname="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" name="toInputUppercase &gt; should handle mixed case input" time="0.000130042">
        </testcase>
        <testcase classname="src/shared/lib/utils/toInputUpperCase/__tests__/toInputUpperCase.spec.ts" name="toInputUppercase &gt; should handle special characters" time="0.000117916">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Blog/model/__tests__/BlogModel.spec.ts" timestamp="2025-07-25T15:12:03.339Z" hostname="192.168.1.12" tests="5" failures="0" errors="0" skipped="0" time="0.411674834">
        <testcase classname="src/entities/Blog/model/__tests__/BlogModel.spec.ts" name="Blog Model &gt; initial state" time="0.015116792">
        </testcase>
        <testcase classname="src/entities/Blog/model/__tests__/BlogModel.spec.ts" name="Blog Model &gt; pageChanged updates currentPage and triggers scroll" time="0.387912417">
        </testcase>
        <testcase classname="src/entities/Blog/model/__tests__/BlogModel.spec.ts" name="Blog Model &gt; successful query updates blogPosts with full structure" time="0.002708166">
        </testcase>
        <testcase classname="src/entities/Blog/model/__tests__/BlogModel.spec.ts" name="Blog Model &gt; handles null additional_info correctly" time="0.001610417">
        </testcase>
        <testcase classname="src/entities/Blog/model/__tests__/BlogModel.spec.ts" name="Blog Model &gt; handles API error with blog structure" time="0.002977167">
            <system-err>
Error: [vike][Warning] Calling navigate() on the server-side has no effect
    at warnNoEffect [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vike@0.4.232_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._c17dae4c39a4996b203b91ba86e266d4/node_modules/[4mvike[24m/dist/esm/node/client/router.js:12:5[90m)[39m
    at navigate [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vike@0.4.232_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._c17dae4c39a4996b203b91ba86e266d4/node_modules/[4mvike[24m/dist/esm/node/client/router.js:7:25[90m)[39m
    at fn [90m(/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Blog/model/index.ts:47:15[90m)[39m
    at runFn [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/effector@23.3.0/node_modules/[4meffector[24m/effector/createEffect.ts:224:19[90m)[39m
    at fn [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/effector@23.3.0/node_modules/[4meffector[24m/effector/createEffect.ts:134:32[90m)[39m
    at launch [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/effector@23.3.0/node_modules/[4meffector[24m/effector/kernel.ts:388:33[90m)[39m
    at [90mfile:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/effector@23.3.0/node_modules/[4meffector[24m/effector/createEffect.ts:243:5

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/entities/FAQ/model/__tests__/FAQModel.spec.ts" timestamp="2025-07-25T15:12:03.340Z" hostname="192.168.1.12" tests="3" failures="0" errors="0" skipped="0" time="0.007352291">
        <testcase classname="src/entities/FAQ/model/__tests__/FAQModel.spec.ts" name="FaqModel &gt; should initialize with empty faqItems" time="0.001169958">
        </testcase>
        <testcase classname="src/entities/FAQ/model/__tests__/FAQModel.spec.ts" name="FaqModel &gt; should handle successful data fetch" time="0.003312084">
        </testcase>
        <testcase classname="src/entities/FAQ/model/__tests__/FAQModel.spec.ts" name="FaqModel &gt; should handle nullable image fields correctly" time="0.001141458">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Personality/lib/__tests__/normalizePersonalities.spec.ts" timestamp="2025-07-25T15:12:03.341Z" hostname="192.168.1.12" tests="2" failures="0" errors="0" skipped="0" time="0.015120125">
        <testcase classname="src/entities/Personality/lib/__tests__/normalizePersonalities.spec.ts" name="normalizePersonalities &gt; Should return a correct record" time="0.008827875">
        </testcase>
        <testcase classname="src/entities/Personality/lib/__tests__/normalizePersonalities.spec.ts" name="normalizePersonalities &gt; Should return a not correct record" time="0.000184625">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" timestamp="2025-07-25T15:12:03.341Z" hostname="192.168.1.12" tests="7" failures="0" errors="0" skipped="0" time="0.012019458">
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should start query when gate is opened" time="0.004044458">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should normalize and store data on successful response" time="0.001156833">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should handle empty response correctly" time="0.000686084">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should handle response with empty types arrays" time="0.000592375">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should not ignore personality types with invalid codes" time="0.001733833">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should not update store on query failure" time="0.001901209">
        </testcase>
        <testcase classname="src/entities/Personality/model/__tests__/PersonalityModel.spec.ts" name="PersonalitiesModel &gt; should handle partial data in categories" time="0.000861916">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" timestamp="2025-07-25T15:12:03.343Z" hostname="192.168.1.12" tests="6" failures="0" errors="0" skipped="0" time="0.002701958">
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен возвращать пустой массив для пустого объекта" time="0.001109583">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен возвращать пустой массив для undefined" time="0.000114125">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен возвращать пустой массив при отсутствии mbti_percentages" time="0.000161542">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен корректно преобразовывать полные данные" time="0.000325959">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен обрабатывать отсутствие mbti_data" time="0.000162792">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/barChartPreparedData.spec.ts" name="barChartPrepareData &gt; должен обрабатывать частичное отсутствие данных в mbti_data" time="0.000091917">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" timestamp="2025-07-25T15:12:03.345Z" hostname="192.168.1.12" tests="10" failures="0" errors="0" skipped="0" time="0.002600125">
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertToUrlId &gt; should replace spaces with dashes and commas with underscores" time="0.000706625">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertToUrlId &gt; should handle multiple consecutive replacements" time="0.000085041">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertToUrlId &gt; should return empty string for empty input" time="0.000160208">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertToUrlId &gt; should not change already converted strings" time="0.000132208">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertFromUrlId &gt; should replace dashes with spaces and underscores with commas" time="0.000076625">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertFromUrlId &gt; should handle multiple consecutive replacements" time="0.000050375">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertFromUrlId &gt; should return empty string for empty input" time="0.000044541">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; convertFromUrlId &gt; should not change readable strings" time="0.000040542">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; Round-trip Conversion &gt; should recover original text after toUrl and fromUrl" time="0.0001795">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/parseNavigationRules.spec.ts" name="URL ID Conversion Functions &gt; Round-trip Conversion &gt; should maintain url format after fromUrl and toUrl" time="0.000064875">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Report/lib/__tests__/statusInfo.spec.ts" timestamp="2025-07-25T15:12:03.351Z" hostname="192.168.1.12" tests="6" failures="0" errors="0" skipped="0" time="0.002124042">
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен возвращать информацию об ошибке для статуса: undefined" time="0.000931917">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен возвращать информацию об ошибке для статуса: pending" time="0.000135667">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен возвращать информацию об ошибке для статуса: canceled_by_user" time="0.00007325">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен возвращать информацию об ошибке для статуса: cancelled" time="0.000128417">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен возвращать информацию об успехе для статуса &quot;paid&quot;" time="0.000146584">
        </testcase>
        <testcase classname="src/entities/Report/lib/__tests__/statusInfo.spec.ts" name="getStatusInfo &gt; должен корректно обрабатывать неизвестный статус" time="0.000124208">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Test/model/__tests__/TestModel.spec.ts" timestamp="2025-07-25T15:12:03.354Z" hostname="192.168.1.12" tests="7" failures="0" errors="0" skipped="0" time="0.511770583">
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; initial state" time="0.0014405">
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; setSplashScreenVisibility updates splash screen state" time="0.001145291">
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; formReset resets all stores" time="0.000374583">
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; formPageChanged updates currentPage and triggers scroll" time="0.0025245">
            <system-err>
Error: 
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/index.ts:51:30
    at atom [90m(/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/shared/factories/atom.ts:1:46[90m)[39m
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/index.ts:21:26
[90m    at processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
    at VitestExecutor.runModule [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:397:4[90m)[39m
    at VitestExecutor.directRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:375:3[90m)[39m
    at VitestExecutor.cachedRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:189:11[90m)[39m
    at VitestExecutor.dependencyRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:239:10[90m)[39m
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/__tests__/TestModel.spec.ts:5:1
    at VitestExecutor.runModule [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:397:4[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; scaleFormFieldChanged updates $scaleForm" time="0.251969959">
            <system-err>
Error: 
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/index.ts:51:30
    at atom [90m(/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/shared/factories/atom.ts:1:46[90m)[39m
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/index.ts:21:26
[90m    at processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
    at VitestExecutor.runModule [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:397:4[90m)[39m
    at VitestExecutor.directRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:375:3[90m)[39m
    at VitestExecutor.cachedRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:189:11[90m)[39m
    at VitestExecutor.dependencyRequest [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:239:10[90m)[39m
    at [90m/Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39msrc/entities/Test/model/__tests__/TestModel.spec.ts:5:1
    at VitestExecutor.runModule [90m(file:///Users/ilaolovannikov/WebstormProjects/cognitive-lab/[39mnode_modules/[4m.pnpm[24m/vite-node@3.2.4_@types+node@24.0.3_jiti@2.4.2_sugarss@4.0.1_postcss@8.5.6__tsx@4.20.3/node_modules/[4mvite-node[24m/dist/client.mjs:397:4[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; progress updates when answers change" time="0.253156917">
        </testcase>
        <testcase classname="src/entities/Test/model/__tests__/TestModel.spec.ts" name="TestModel &gt; currentQuestion updates when page or questions change" time="0.000255334">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Landing/model/__tests__/LandingModel.spec.ts" timestamp="2025-07-25T15:12:03.359Z" hostname="192.168.1.12" tests="3" failures="0" errors="0" skipped="0" time="0.005092667">
        <testcase classname="src/entities/Landing/model/__tests__/LandingModel.spec.ts" name="LandingModel &gt; should populate store correctly" time="0.003186208">
        </testcase>
        <testcase classname="src/entities/Landing/model/__tests__/LandingModel.spec.ts" name="LandingModel &gt; should handle empty response" time="0.000698708">
        </testcase>
        <testcase classname="src/entities/Landing/model/__tests__/LandingModel.spec.ts" name="LandingModel &gt; should extract first valid item" time="0.000644458">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Root/model/__tests__/RootModel.spec.ts" timestamp="2025-07-25T15:12:03.360Z" hostname="192.168.1.12" tests="1" failures="0" errors="0" skipped="0" time="0.001500208">
        <testcase classname="src/entities/Root/model/__tests__/RootModel.spec.ts" name="Root Model &gt; Initially Menu should be closed" time="0.000909833">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/User/model/__tests__/UserModel.spec.ts" timestamp="2025-07-25T15:12:03.360Z" hostname="192.168.1.12" tests="5" failures="0" errors="0" skipped="0" time="0.019573917">
        <testcase classname="src/entities/User/model/__tests__/UserModel.spec.ts" name="UserModel &gt; should generate new userId when empty" time="0.005570666">
        </testcase>
        <testcase classname="src/entities/User/model/__tests__/UserModel.spec.ts" name="UserModel &gt; should keep existing userId" time="0.002270958">
        </testcase>
        <testcase classname="src/entities/User/model/__tests__/UserModel.spec.ts" name="UserModel &gt; should initialize surveyId as empty string when null" time="0.003657792">
        </testcase>
        <testcase classname="src/entities/User/model/__tests__/UserModel.spec.ts" name="UserModel &gt; should preserve existing surveyId" time="0.006299709">
        </testcase>
        <testcase classname="src/entities/User/model/__tests__/UserModel.spec.ts" name="UserModel &gt; should navigate to test page" time="0.001074667">
        </testcase>
    </testsuite>
    <testsuite name="src/entities/Test/lib/__tests__/clearLocalStorage.spec.ts" timestamp="2025-07-25T15:12:03.361Z" hostname="192.168.1.12" tests="3" failures="0" errors="0" skipped="0" time="0.011395625">
        <testcase classname="src/entities/Test/lib/__tests__/clearLocalStorage.spec.ts" name="clearLocalStorageTestUnits &gt; should preserve existing userId" time="0.010214292">
        </testcase>
        <testcase classname="src/entities/Test/lib/__tests__/clearLocalStorage.spec.ts" name="clearLocalStorageTestUnits &gt; should set empty string if userId not exists" time="0.000214375">
        </testcase>
        <testcase classname="src/entities/Test/lib/__tests__/clearLocalStorage.spec.ts" name="clearLocalStorageTestUnits &gt; should remove all keys except restored userId" time="0.000337459">
        </testcase>
    </testsuite>
</testsuites>

import { createRequire as VPV_createRequire } from "node:module";
import { fileURLToPath as VPV_fileURLToPath } from "node:url";
import { dirname as VPV_dirname } from "node:path";
const require = VPV_createRequire(import.meta.url);
const __filename = VPV_fileURLToPath(import.meta.url);
const __dirname = VPV_dirname(__filename);

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x3) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x3, {
  get: (a12, b4) => (typeof require !== "undefined" ? require : a12)[b4]
}) : x3)(function(x3) {
  if (typeof require !== "undefined") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x3 + '" is not supported');
});
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name2 in all)
    __defProp(target, name2, { get: all[name2], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isBrowser.js
function isBrowser() {
  return typeof window !== "undefined" && typeof window.scrollY === "number";
}
var init_isBrowser = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isBrowser.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/unique.js
function unique(arr) {
  return Array.from(new Set(arr));
}
var init_unique = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/unique.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getGlobalObject.js
function getGlobalObject(key, defaultValue2) {
  const globalObjects = getGlobalObjects();
  const globalObject11 = globalObjects[key] = globalObjects[key] || defaultValue2;
  return globalObject11;
}
function getGlobalObjects() {
  const projectKey2 = "_vike";
  const globalObjects = globalThis[projectKey2] = globalThis[projectKey2] || {};
  return globalObjects;
}
var init_getGlobalObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getGlobalObject.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/@brillout+picocolors@1.0.26/node_modules/@brillout/picocolors/dist/esm/picocolors.js
function isBrowser2() {
  return Object.getOwnPropertyDescriptor(globalThis, "window")?.get?.toString().includes("[native code]") ?? false;
}
function getAnsiRegex() {
  const pattern = [
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
  ].join("|");
  return new RegExp(pattern, "g");
}
var p, argv, env, isColorSupported, formatter, replaceClose, createColors, pc, picocolors_default, ansiRegex;
var init_picocolors = __esm({
  "node_modules/.pnpm/@brillout+picocolors@1.0.26/node_modules/@brillout/picocolors/dist/esm/picocolors.js"() {
    if (isBrowser2())
      throw new Error("This file should never be included in the browser.");
    p = typeof process === "undefined" ? {} : process;
    argv = p.argv || [];
    env = p.env || {};
    isColorSupported = !(!!env.NO_COLOR || argv.includes("--no-color")) && (!!env.FORCE_COLOR || argv.includes("--color") || p.platform === "win32" || (p.stdout || {}).isTTY && env.TERM !== "dumb" || !!env.CI);
    formatter = (open, close, replace = open) => (input) => {
      let string = "" + input;
      let index = string.indexOf(close, open.length);
      return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;
    };
    replaceClose = (string, close, replace, index) => {
      let start = string.substring(0, index) + replace;
      let end = string.substring(index + close.length);
      let nextIndex = end.indexOf(close);
      return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;
    };
    createColors = (enabled = isColorSupported) => {
      const cyan = formatter("\x1B[36m", "\x1B[39m");
      return {
        isColorSupported: enabled,
        code: enabled ? cyan : (s37) => `\`${s37}\``,
        string: enabled ? cyan : (s37) => `'${s37}'`,
        reset: enabled ? (s37) => `\x1B[0m${s37}\x1B[0m` : String,
        bold: enabled ? formatter("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m") : String,
        dim: enabled ? formatter("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m") : String,
        italic: enabled ? formatter("\x1B[3m", "\x1B[23m") : String,
        underline: enabled ? formatter("\x1B[4m", "\x1B[24m") : String,
        inverse: enabled ? formatter("\x1B[7m", "\x1B[27m") : String,
        hidden: enabled ? formatter("\x1B[8m", "\x1B[28m") : String,
        strikethrough: enabled ? formatter("\x1B[9m", "\x1B[29m") : String,
        black: enabled ? formatter("\x1B[30m", "\x1B[39m") : String,
        red: enabled ? formatter("\x1B[31m", "\x1B[39m") : String,
        green: enabled ? formatter("\x1B[32m", "\x1B[39m") : String,
        yellow: enabled ? formatter("\x1B[33m", "\x1B[39m") : String,
        blue: enabled ? formatter("\x1B[34m", "\x1B[39m") : String,
        magenta: enabled ? formatter("\x1B[35m", "\x1B[39m") : String,
        cyan: enabled ? cyan : String,
        white: enabled ? formatter("\x1B[37m", "\x1B[39m") : String,
        gray: enabled ? formatter("\x1B[90m", "\x1B[39m") : String,
        bgBlack: enabled ? formatter("\x1B[40m", "\x1B[49m") : String,
        bgRed: enabled ? formatter("\x1B[41m", "\x1B[49m") : String,
        bgGreen: enabled ? formatter("\x1B[42m", "\x1B[49m") : String,
        bgYellow: enabled ? formatter("\x1B[43m", "\x1B[49m") : String,
        bgBlue: enabled ? formatter("\x1B[44m", "\x1B[49m") : String,
        bgMagenta: enabled ? formatter("\x1B[45m", "\x1B[49m") : String,
        bgCyan: enabled ? formatter("\x1B[46m", "\x1B[49m") : String,
        bgWhite: enabled ? formatter("\x1B[47m", "\x1B[49m") : String
      };
    };
    pc = createColors();
    picocolors_default = pc;
    ansiRegex = getAnsiRegex();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/PROJECT_VERSION.js
var PROJECT_VERSION;
var init_PROJECT_VERSION = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/PROJECT_VERSION.js"() {
    PROJECT_VERSION = "0.4.228";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertSingleInstance.js
function genGlobalConfig() {
  return getGlobalObject("utils/assertSingleInstance.ts", {
    instances: [],
    alreadyLogged: /* @__PURE__ */ new Set()
  });
}
function getGlobalObjectSafe() {
  globalObject ?? (globalObject = genGlobalConfig());
  return globalObject;
}
function assertSingleInstance() {
  const globalObject11 = getGlobalObjectSafe();
  {
    const versions = unique(globalObject11.instances);
    assertWarning(
      versions.length <= 1,
      // Do *NOT* patch Vike to remove this warning: you *will* eventually encounter the issues listed at https://vike.dev/warning/version-mismatch
      // - This happened before: https://github.com/vikejs/vike/issues/1108#issuecomment-1719061509
      `vike@${picocolors_default.bold(versions[0])} and vike@${picocolors_default.bold(versions[1])} loaded which is highly discouraged, see ${picocolors_default.underline("https://vike.dev/warning/version-mismatch")}`,
      { onlyOnce: true, showStackTrace: false }
    );
  }
  if (globalObject11.checkSingleInstance && globalObject11.instances.length > 1) {
    assertWarning(false, clientNotSingleInstance, { onlyOnce: true, showStackTrace: true });
  }
}
function assertSingleInstance_onAssertModuleLoad() {
  const globalObject11 = getGlobalObjectSafe();
  globalObject11.instances.push(PROJECT_VERSION);
  assertSingleInstance();
}
function assertWarning(condition, errorMessage, { onlyOnce, showStackTrace }) {
  const globalObject11 = getGlobalObjectSafe();
  if (condition) {
    return;
  }
  const msg = `[Vike][Warning] ${errorMessage}`;
  if (onlyOnce) {
    const { alreadyLogged } = globalObject11;
    const key = onlyOnce === true ? msg : onlyOnce;
    if (alreadyLogged.has(key)) {
      return;
    } else {
      alreadyLogged.add(key);
    }
  }
  if (showStackTrace) {
    console.warn(new Error(msg));
  } else {
    console.warn(msg);
  }
}
var globalObject, clientNotSingleInstance;
var init_assertSingleInstance = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertSingleInstance.js"() {
    init_unique();
    init_getGlobalObject();
    init_picocolors();
    init_PROJECT_VERSION();
    globalObject ?? (globalObject = genGlobalConfig());
    clientNotSingleInstance = "Client runtime loaded twice https://vike.dev/client-runtime-duplicated";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNodeJS.js
function isNodeJS() {
  if (typeof process === "undefined")
    return false;
  if (!process.cwd)
    return false;
  if (!process.versions || typeof process.versions.node === "undefined")
    return false;
  if (!process.release || process.release.name !== "node")
    return false;
  return true;
}
var init_isNodeJS = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNodeJS.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/createErrorWithCleanStackTrace.js
function createErrorWithCleanStackTrace(errorMessage, numberOfStackTraceLinesToRemove3) {
  const err = new Error(errorMessage);
  if (isNodeJS()) {
    err.stack = clean(err.stack, numberOfStackTraceLinesToRemove3);
  }
  return err;
}
function clean(errStack, numberOfStackTraceLinesToRemove3) {
  if (!errStack) {
    return errStack;
  }
  const stackLines = splitByLine(errStack);
  let linesRemoved = 0;
  const stackLine__cleaned = stackLines.filter((line) => {
    if (line.includes(" (internal/") || line.includes(" (node:internal")) {
      return false;
    }
    if (linesRemoved < numberOfStackTraceLinesToRemove3 && isStackTraceLine(line)) {
      linesRemoved++;
      return false;
    }
    return true;
  }).join("\n");
  return stackLine__cleaned;
}
function isStackTraceLine(line) {
  return line.startsWith("    at ");
}
function splitByLine(str) {
  return str.split(/\r?\n/);
}
var init_createErrorWithCleanStackTrace = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/createErrorWithCleanStackTrace.js"() {
    init_isNodeJS();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObject.js
function isObject(value) {
  return typeof value === "object" && value !== null;
}
var init_isObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObject.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assert.js
function assert(condition, debugInfo) {
  if (condition)
    return;
  const debugStr = (() => {
    if (!debugInfo) {
      return null;
    }
    const debugInfoSerialized = typeof debugInfo === "string" ? debugInfo : JSON.stringify(debugInfo);
    return picocolors_default.dim(`Debug info (for Vike maintainers; you can ignore this): ${debugInfoSerialized}`);
  })();
  const link = picocolors_default.underline("https://github.com/vikejs/vike/issues/new?template=bug.yml");
  let errMsg = [
    `You stumbled upon a Vike bug. Go to ${link} and copy-paste this error. A maintainer will fix the bug (usually within 24 hours).`,
    debugStr
  ].filter(Boolean).join(" ");
  errMsg = addWhitespace(errMsg);
  errMsg = addPrefixAssertType(errMsg, bugTag);
  errMsg = addPrefixProjctName(errMsg, true);
  const internalError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);
  globalObject2.onBeforeLog?.();
  throw internalError;
}
function assertUsage(condition, errMsg, { showStackTrace, exitOnError } = {}) {
  if (condition)
    return;
  showStackTrace = showStackTrace || globalObject2.alwaysShowStackTrace;
  errMsg = addWhitespace(errMsg);
  errMsg = addPrefixAssertType(errMsg, "Wrong Usage");
  errMsg = addPrefixProjctName(errMsg);
  const usageError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);
  if (showStackTrace) {
    globalObject2.showStackTraceList.add(usageError);
  }
  globalObject2.onBeforeLog?.();
  if (!exitOnError) {
    throw usageError;
  } else {
    console.error(showStackTrace ? usageError : errMsg);
    process.exit(1);
  }
}
function getProjectError(errMsg) {
  errMsg = addWhitespace(errMsg);
  errMsg = addPrefixAssertType(errMsg, "Error");
  errMsg = addPrefixProjctName(errMsg);
  const projectError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);
  return projectError;
}
function assertWarning2(condition, msg, { onlyOnce, showStackTrace }) {
  if (condition)
    return;
  showStackTrace = showStackTrace || globalObject2.alwaysShowStackTrace;
  msg = addWhitespace(msg);
  msg = addPrefixAssertType(msg, "Warning");
  msg = addPrefixProjctName(msg);
  if (onlyOnce) {
    const { alreadyLogged } = globalObject2;
    const key = onlyOnce === true ? msg : onlyOnce;
    if (alreadyLogged.has(key))
      return;
    alreadyLogged.add(key);
  }
  globalObject2.onBeforeLog?.();
  if (showStackTrace) {
    const err = createErrorWithCleanStackTrace(msg, numberOfStackTraceLinesToRemove);
    globalObject2.showStackTraceList.add(err);
    globalObject2.logger(err, "warn");
  } else {
    globalObject2.logger(msg, "warn");
  }
}
function assertInfo(condition, msg, { onlyOnce }) {
  if (condition) {
    return;
  }
  msg = addWhitespace(msg);
  msg = addPrefixProjctName(msg);
  if (onlyOnce) {
    const { alreadyLogged } = globalObject2;
    const key = msg;
    if (alreadyLogged.has(key)) {
      return;
    } else {
      alreadyLogged.add(key);
    }
  }
  globalObject2.onBeforeLog?.();
  globalObject2.logger(msg, "info");
}
function addPrefixAssertType(msg, tag) {
  let prefix2 = `[${tag}]`;
  const color3 = tag === "Warning" ? "yellow" : "red";
  prefix2 = picocolors_default.bold(picocolors_default[color3](prefix2));
  return `${prefix2}${msg}`;
}
function addWhitespace(msg) {
  if (msg.startsWith("[")) {
    return msg;
  } else {
    return ` ${msg}`;
  }
}
function addPrefixProjctName(msg, showProjectVersion = false) {
  const prefix2 = showProjectVersion ? projectTagWithVersion : projectTag;
  return `${prefix2}${msg}`;
}
function isBug(err) {
  return String(err).includes(`[${bugTag}]`);
}
function setAlwaysShowStackTrace() {
  globalObject2.alwaysShowStackTrace = true;
}
var globalObject2, projectTag, projectTagWithVersion, bugTag, numberOfStackTraceLinesToRemove;
var init_assert = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assert.js"() {
    init_assertSingleInstance();
    init_createErrorWithCleanStackTrace();
    init_getGlobalObject();
    init_isObject();
    init_PROJECT_VERSION();
    init_picocolors();
    globalObject2 = getGlobalObject("utils/assert.ts", {
      alreadyLogged: /* @__PURE__ */ new Set(),
      // Production logger. Overwritten by loggerNotProd.ts in non-production environments.
      logger(msg, logType) {
        if (logType === "info") {
          console.log(msg);
        } else {
          console.warn(msg);
        }
      },
      showStackTraceList: /* @__PURE__ */ new WeakSet()
    });
    assertSingleInstance_onAssertModuleLoad();
    projectTag = `[vike]`;
    projectTagWithVersion = `[vike@${PROJECT_VERSION}]`;
    bugTag = "Bug";
    numberOfStackTraceLinesToRemove = 2;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/slice.js
function slice(thing, from, to) {
  if (typeof thing === "string") {
    return sliceArray(thing.split(""), from, to).join("");
  } else {
    return sliceArray(thing, from, to);
  }
}
function sliceArray(list3, from, to) {
  const listSlice = [];
  let start = from >= 0 ? from : list3.length + from;
  assert(start >= 0 && start <= list3.length);
  let end = to >= 0 ? to : list3.length + to;
  assert(end >= 0 && end <= list3.length);
  while (true) {
    if (start === end) {
      break;
    }
    if (start === list3.length) {
      start = 0;
    }
    if (start === end) {
      break;
    }
    const el = list3[start];
    assert(el !== void 0);
    listSlice.push(el);
    start++;
  }
  return listSlice;
}
var init_slice = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/slice.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/parseUrl.js
function parseUrl(url, baseServer2) {
  assert(isUrl(url), url);
  assert(baseServer2.startsWith("/"));
  const { hashString: hashOriginal, withoutHash: urlWithoutHash } = extractHash(url);
  assert(hashOriginal === null || hashOriginal.startsWith("#"));
  const hash = hashOriginal === null ? "" : decodeSafe(hashOriginal.slice(1));
  const { searchString: searchOriginal, withoutSearch: urlWithoutHashNorSearch } = extractSearch(urlWithoutHash);
  assert(searchOriginal === null || searchOriginal.startsWith("?"));
  let searchString = "";
  if (searchOriginal !== null) {
    searchString = searchOriginal;
  } else if (url.startsWith("#")) {
    const baseURI = getBaseURI();
    searchString = baseURI && extractSearch(baseURI).searchString || "";
  }
  const search = {};
  const searchAll = {};
  Array.from(new URLSearchParams(searchString)).forEach(([key, val]) => {
    search[key] = val;
    searchAll[key] = [...searchAll.hasOwnProperty(key) ? searchAll[key] : [], val];
  });
  let { protocol, origin, pathnameAbsoluteWithBase } = getPathnameAbsoluteWithBase(urlWithoutHashNorSearch, baseServer2);
  const pathnameOriginal = urlWithoutHashNorSearch.slice((origin || "").length);
  assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal);
  let { pathname, isBaseMissing } = removeBaseServer(pathnameAbsoluteWithBase, baseServer2);
  const href = createUrlFromComponents(origin, pathname, searchOriginal, hashOriginal);
  const host = !origin ? null : origin.slice(protocol.length);
  const { hostname, port } = parseHost(host, url);
  pathname = decodePathname(pathname);
  assert(pathname.startsWith("/"));
  return {
    href,
    protocol,
    hostname,
    port,
    origin,
    pathname,
    pathnameOriginal,
    isBaseMissing,
    search,
    searchAll,
    searchOriginal,
    hash,
    hashOriginal
  };
}
function extractHash(url) {
  const [withoutHash, ...parts] = url.split("#");
  const hashString = ["", ...parts].join("#") || null;
  return { hashString, withoutHash };
}
function extractSearch(url) {
  const [withoutSearch, ...parts] = url.split("?");
  const searchString = ["", ...parts].join("?") || null;
  return { searchString, withoutSearch };
}
function decodeSafe(urlComponent) {
  try {
    return decodeURIComponent(urlComponent);
  } catch {
  }
  try {
    return decodeURI(urlComponent);
  } catch {
  }
  return urlComponent;
}
function decodePathname(urlPathname) {
  urlPathname = urlPathname.replace(/\s+$/, "");
  urlPathname = urlPathname.split("/").map((dir) => decodeSafe(dir).split("/").join("%2F")).join("/");
  return urlPathname;
}
function getPathnameAbsoluteWithBase(url, baseServer2) {
  assert(!url.includes("?") && !url.includes("#"));
  {
    const { protocol, origin, pathname } = parseOrigin(url);
    if (origin) {
      return { protocol, origin, pathnameAbsoluteWithBase: pathname };
    }
    assert(pathname === url);
  }
  if (url.startsWith("/")) {
    return { protocol: null, origin: null, pathnameAbsoluteWithBase: url };
  } else {
    const baseURI = getBaseURI();
    let base;
    if (baseURI) {
      base = parseOrigin(baseURI.split("?")[0].split("#")[0]).pathname;
    } else {
      base = baseServer2;
    }
    const pathnameAbsoluteWithBase = resolveUrlPathnameRelative(url, base);
    return { protocol: null, origin: null, pathnameAbsoluteWithBase };
  }
}
function getBaseURI() {
  const baseURI = typeof window !== "undefined" ? window?.document?.baseURI : void 0;
  return baseURI;
}
function parseOrigin(url) {
  if (!isUrlWithProtocol(url)) {
    return { pathname: url, origin: null, protocol: null };
  } else {
    const { protocol, uriWithoutProtocol } = parseProtocol(url);
    assert(protocol);
    const [host, ...rest] = uriWithoutProtocol.split("/");
    const origin = protocol + host;
    const pathname = "/" + rest.join("/");
    return { pathname, origin, protocol };
  }
}
function parseHost(host, url) {
  const ret = { hostname: null, port: null };
  if (!host)
    return ret;
  const parts = host.split(":");
  if (parts.length > 1) {
    const port = parseInt(parts.pop(), 10);
    assert(port || port === 0, url);
    ret.port = port;
  }
  ret.hostname = parts.join(":");
  return ret;
}
function parseProtocol(uri) {
  const SEP = ":";
  const [before, ...after] = uri.split(SEP);
  if (after.length === 0 || // https://github.com/vikejs/vike/commit/886a99ff21e86a8ca699a25cee7edc184aa058e4#r143308934
  // https://en.wikipedia.org/wiki/List_of_URI_schemes
  // https://www.rfc-editor.org/rfc/rfc7595
  !/^[a-z][a-z0-9\+\-]*$/i.test(before)) {
    return { protocol: null, uriWithoutProtocol: uri };
  }
  let protocol = before + SEP;
  let uriWithoutProtocol = after.join(SEP);
  const SEP2 = "//";
  if (uriWithoutProtocol.startsWith(SEP2)) {
    protocol = protocol + SEP2;
    uriWithoutProtocol = uriWithoutProtocol.slice(SEP2.length);
  }
  return { protocol, uriWithoutProtocol };
}
function isUrlProtocol(protocol) {
  const blocklist = [
    // https://docs.ipfs.tech/how-to/address-ipfs-on-web
    "ipfs://",
    "ipns://"
  ];
  if (blocklist.includes(protocol))
    return false;
  return protocol.endsWith("://");
}
function resolveUrlPathnameRelative(pathnameRelative, base) {
  const stack2 = base.split("/");
  const parts = pathnameRelative.split("/");
  let baseRestoreTrailingSlash = base.endsWith("/");
  if (pathnameRelative.startsWith(".")) {
    stack2.pop();
  }
  for (const i11 in parts) {
    const p13 = parts[i11];
    if (p13 == "" && i11 === "0")
      continue;
    if (p13 == ".")
      continue;
    if (p13 == "..")
      stack2.pop();
    else {
      baseRestoreTrailingSlash = false;
      stack2.push(p13);
    }
  }
  let pathnameAbsolute = stack2.join("/");
  if (baseRestoreTrailingSlash && !pathnameAbsolute.endsWith("/"))
    pathnameAbsolute += "/";
  if (!pathnameAbsolute.startsWith("/"))
    pathnameAbsolute = "/" + pathnameAbsolute;
  return pathnameAbsolute;
}
function removeBaseServer(pathnameAbsoluteWithBase, baseServer2) {
  assert(pathnameAbsoluteWithBase.startsWith("/"));
  assert(isBaseServer(baseServer2));
  let urlPathname = pathnameAbsoluteWithBase;
  assert(urlPathname.startsWith("/"));
  assert(baseServer2.startsWith("/"));
  if (baseServer2 === "/") {
    const pathname = pathnameAbsoluteWithBase;
    return { pathname, isBaseMissing: false };
  }
  let baseServerNormalized = baseServer2;
  if (baseServer2.endsWith("/") && urlPathname === slice(baseServer2, 0, -1)) {
    baseServerNormalized = slice(baseServer2, 0, -1);
    assert(urlPathname === baseServerNormalized);
  }
  if (!urlPathname.startsWith(baseServerNormalized)) {
    const pathname = pathnameAbsoluteWithBase;
    return { pathname, isBaseMissing: true };
  }
  assert(urlPathname.startsWith("/") || urlPathname.startsWith("http"));
  assert(urlPathname.startsWith(baseServerNormalized));
  urlPathname = urlPathname.slice(baseServerNormalized.length);
  if (!urlPathname.startsWith("/"))
    urlPathname = "/" + urlPathname;
  assert(urlPathname.startsWith("/"));
  return { pathname: urlPathname, isBaseMissing: false };
}
function isBaseServer(baseServer2) {
  return baseServer2.startsWith("/");
}
function assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal) {
  const urlRecreated = createUrlFromComponents(origin, pathnameOriginal, searchOriginal, hashOriginal);
  assert(url === urlRecreated);
}
function createUrlFromComponents(origin, pathname, search, hash) {
  const urlRecreated = `${origin || ""}${pathname}${search || ""}${hash || ""}`;
  return urlRecreated;
}
function isUrl(url) {
  return isUrlWithProtocol(url) || url.startsWith("/") || isUrlRelative(url);
}
function isUrlRedirectTarget(url) {
  return url.startsWith("/") || isUri(url) || isUrlWithProtocol(url);
}
function isUrlRelative(url) {
  return [".", "?", "#"].some((c13) => url.startsWith(c13)) || url === "";
}
function isUrlWithProtocol(url) {
  const { protocol } = parseProtocol(url);
  return !!protocol && isUrlProtocol(protocol);
}
function isUri(uri) {
  const { protocol } = parseProtocol(uri);
  return !!protocol && !isUrlProtocol(uri);
}
function assertUsageUrlPathnameAbsolute(url, errPrefix) {
  assertUsageUrl(url, errPrefix);
}
function assertUsageUrlRedirectTarget(url, errPrefix, isUnresolved) {
  assertUsageUrl(url, errPrefix, { isRedirectTarget: isUnresolved ? "unresolved" : true });
}
function assertUsageUrl(url, errPrefix, { isRedirectTarget } = {}) {
  if (url.startsWith("/"))
    return;
  let errMsg = `${errPrefix} is ${picocolors_default.string(url)} but it should start with ${picocolors_default.string("/")}`;
  if (isRedirectTarget) {
    if (isUrlRedirectTarget(url))
      return;
    errMsg += ` or a protocol (${picocolors_default.string("http://")}, ${picocolors_default.string("mailto:")}, ...)`;
    if (isRedirectTarget === "unresolved") {
      if (url === "*")
        return;
      errMsg += `, or be ${picocolors_default.string("*")}`;
    }
  }
  assertUsage(false, errMsg);
}
var init_parseUrl = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/parseUrl.js"() {
    init_slice();
    init_assert();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectAssign.js
function objectAssign(obj, objAddendum, objAddendumCanBePageContextObject) {
  if (objAddendum) {
    if (!objAddendumCanBePageContextObject) {
      assert(!("_isPageContextObject" in objAddendum));
    }
    Object.defineProperties(obj, Object.getOwnPropertyDescriptors(objAddendum));
  }
}
var init_objectAssign = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectAssign.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isCallable.js
function isCallable(thing) {
  return thing instanceof Function || typeof thing === "function";
}
var init_isCallable = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isCallable.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/sorter.js
function higherFirst(getValue) {
  return (element1, element2) => {
    const val1 = getValue(element1);
    const val2 = getValue(element2);
    if (val1 === val2) {
      return 0;
    }
    return val1 > val2 ? -1 : 1;
  };
}
function lowerFirst(getValue) {
  return (element1, element2) => {
    const val1 = getValue(element1);
    const val2 = getValue(element2);
    if (val1 === val2) {
      return 0;
    }
    return val1 < val2 ? -1 : 1;
  };
}
function makeFirst(getValue) {
  return (element1, element2) => {
    const val1 = getValue(element1);
    const val2 = getValue(element2);
    assert([true, false, null].includes(val1));
    assert([true, false, null].includes(val2));
    if (val1 === val2) {
      return 0;
    }
    if (val1 === true || val2 === false) {
      return -1;
    }
    if (val2 === true || val1 === false) {
      return 1;
    }
    assert(false);
  };
}
function makeLast(getValue) {
  return makeFirst((element) => {
    const val = getValue(element);
    if (val === null) {
      return null;
    } else {
      return !val;
    }
  });
}
var init_sorter = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/sorter.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isArray.js
function isArray(value) {
  return Array.isArray(value);
}
var init_isArray = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isArray.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isArrayOfStrings.js
function isArrayOfStrings(val) {
  return isArray(val) && val.every((v5) => typeof v5 === "string");
}
var init_isArrayOfStrings = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isArrayOfStrings.js"() {
    init_isArray();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObjectOfStrings.js
function isObjectOfStrings(val) {
  return isObject(val) && Object.values(val).every((v5) => typeof v5 === "string");
}
var init_isObjectOfStrings = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObjectOfStrings.js"() {
    init_isObject();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/hasProp.js
function hasProp(obj, prop, type) {
  if (!isObject(obj))
    return false;
  if (!(prop in obj)) {
    return type === "undefined";
  }
  if (type === void 0) {
    return true;
  }
  const propValue = obj[prop];
  if (type === "undefined") {
    return propValue === void 0;
  }
  if (type === "array") {
    return isArray(propValue);
  }
  if (type === "object") {
    return isObject(propValue);
  }
  if (type === "string[]") {
    return isArrayOfStrings(propValue);
  }
  if (type === "string{}") {
    return isObjectOfStrings(propValue);
  }
  if (type === "function") {
    return isCallable(propValue);
  }
  if (isArray(type)) {
    return typeof propValue === "string" && type.includes(propValue);
  }
  if (type === "null") {
    return propValue === null;
  }
  if (type === "true") {
    return propValue === true;
  }
  if (type === "false") {
    return propValue === false;
  }
  return typeof propValue === type;
}
var init_hasProp = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/hasProp.js"() {
    init_isCallable();
    init_isObject();
    init_isArrayOfStrings();
    init_isObjectOfStrings();
    init_isArray();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPlainObject.js
function isPlainObject(value) {
  if (typeof value !== "object" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  return (
    /* Doesn't work in Cloudflare Pages workers
    value.constructor === Object
    */
    value.constructor.name === "Object"
  );
}
var init_isPlainObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPlainObject.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/compareString.js
function compareString(str1, str2) {
  if (str1.toLowerCase() < str2.toLowerCase())
    return -1;
  if (str1.toLowerCase() > str2.toLowerCase())
    return 1;
  return 0;
}
var init_compareString = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/compareString.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNullish.js
function isNullish(val) {
  return val === null || val === void 0;
}
function isNotNullish(p13) {
  return !isNullish(p13);
}
var init_isNullish = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNullish.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/stringifyStringArray.js
function stringifyStringArray(stringList) {
  return "[" + stringList.map((str) => "'" + str + "'").join(", ") + "]";
}
var init_stringifyStringArray = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/stringifyStringArray.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/cast.js
function cast(_thing) {
}
var init_cast = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/cast.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPropertyGetter.js
function isPropertyGetter(obj, prop) {
  const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
  return !!descriptor && !("value" in descriptor) && !!descriptor.get;
}
var init_isPropertyGetter = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPropertyGetter.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPromise.js
function isPromise(val) {
  return typeof val === "object" && val !== null && "then" in val && isCallable(val.then);
}
var init_isPromise = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isPromise.js"() {
    init_isCallable();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/checkType.js
function checkType(_3) {
}
var init_checkType = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/checkType.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getValuePrintable.js
function getValuePrintable(value) {
  if ([null, void 0].includes(value))
    return String(value);
  if (["boolean", "number", "string"].includes(typeof value))
    return JSON.stringify(value);
  return null;
}
var init_getValuePrintable = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getValuePrintable.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/escapeRegex.js
function escapeRegex(str) {
  return str.replace(/[/\-\\^$*+?.()|[\]{}]/g, "\\$&");
}
var init_escapeRegex = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/escapeRegex.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/changeEnumerable.js
function changeEnumerable(obj, prop, enumerable) {
  const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
  Object.defineProperty(obj, prop, { ...descriptor, enumerable });
}
var init_changeEnumerable = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/changeEnumerable.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectDefineProperty.js
function objectDefineProperty(obj, prop, { get, ...args }) {
  Object.defineProperty(obj, prop, { ...args, get });
}
var init_objectDefineProperty = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectDefineProperty.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isScriptFile.js
function isScriptFile(filePath) {
  const yes = scriptFileExtensionList.some((ext) => filePath.endsWith("." + ext));
  if (isPlainJavaScriptFile(filePath))
    assert(yes);
  return yes;
}
function isPlainJavaScriptFile(filePath) {
  const yes1 = /\.(c|m)?(j|t)s$/.test(filePath);
  const yes2 = extJavaScript.some((ext) => filePath.endsWith("." + ext));
  assert(yes1 === yes2);
  return yes1;
}
function isTemplateFile(filePath) {
  return extTemplates.some((ext) => filePath.endsWith("." + ext));
}
var extJavaScript, extJsx, extTemplates, scriptFileExtensionList, scriptFileExtensions;
var init_isScriptFile = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isScriptFile.js"() {
    init_assert();
    extJavaScript = [
      "js",
      "ts",
      "cjs",
      "cts",
      "mjs",
      "mts"
    ];
    extJsx = [
      "jsx",
      "tsx",
      "cjsx",
      "ctsx",
      "mjsx",
      "mtsx"
    ];
    extTemplates = [
      "vue",
      "svelte",
      "marko",
      "md",
      "mdx"
    ];
    scriptFileExtensionList = [...extJavaScript, ...extJsx, ...extTemplates];
    scriptFileExtensions = "(" + scriptFileExtensionList.join("|") + ")";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectFilter.js
var init_objectFilter = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectFilter.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/utils.js
var init_utils = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/utils.js"() {
    init_assert();
    init_parseUrl();
    init_objectAssign();
    init_isCallable();
    init_isObject();
    init_unique();
    init_slice();
    init_sorter();
    init_isBrowser();
    init_hasProp();
    init_isPlainObject();
    init_compareString();
    init_isNullish();
    init_stringifyStringArray();
    init_cast();
    init_isPropertyGetter();
    init_isPromise();
    init_checkType();
    init_getValuePrintable();
    init_escapeRegex();
    init_isArray();
    init_changeEnumerable();
    init_objectDefineProperty();
    init_isScriptFile();
    init_objectFilter();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/error-page.js
function getErrorPageId(pageFilesAll, pageConfigs) {
  if (pageConfigs.length > 0) {
    const errorPageConfigs = pageConfigs.filter((p13) => p13.isErrorPage);
    if (errorPageConfigs.length === 0)
      return null;
    assertUsage(errorPageConfigs.length === 1, "Only one error page can be defined");
    return errorPageConfigs[0].pageId;
  }
  const errorPageIds = unique(pageFilesAll.map(({ pageId }) => pageId).filter((pageId) => isErrorPageId(pageId, false)));
  assertUsage(errorPageIds.length <= 1, `Only one _error.page.js is allowed, but found several: ${errorPageIds.join(" ")}`);
  if (errorPageIds.length > 0) {
    const errorPageId = errorPageIds[0];
    assert(errorPageId);
    return errorPageId;
  }
  return null;
}
function isErrorPageId(pageId, _isV1Design) {
  assert(!pageId.includes("\\"));
  return pageId.includes("/_error");
}
function isErrorPage(pageId, pageConfigs) {
  if (pageConfigs.length > 0) {
    const pageConfig = pageConfigs.find((p13) => p13.pageId === pageId);
    assert(pageConfig);
    return !!pageConfig.isErrorPage;
  } else {
    return isErrorPageId(pageId, false);
  }
}
var init_error_page = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/error-page.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getTerminWidth.js
function getTerminalWidth() {
  return typeof process !== "undefined" && typeof process.stdout !== "undefined" && process.stdout.columns || void 0;
}
var init_getTerminWidth = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getTerminWidth.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/debug.js
function createDebugger(flag, optionsGlobal) {
  checkType(flag);
  assert(flags.includes(flag));
  const debugWithOptions = (optionsLocal) => {
    return (...msgs) => {
      const options = { ...optionsGlobal, ...optionsLocal };
      debug_(flag, options, ...msgs);
    };
  };
  const debug5 = (...msgs) => debugWithOptions({})(...msgs);
  objectAssign(debug5, { options: debugWithOptions, isActivated: isDebugActivated(flag) });
  return debug5;
}
function debug_(flag, options, ...msgs) {
  if (!isDebugActivated(flag))
    return;
  let [msgFirst, ...msgsRest] = msgs;
  const padding = " ".repeat(flag.length + 1);
  msgFirst = formatMsg(msgFirst, options, padding, "FIRST");
  msgsRest = msgsRest.map((msg, i11) => {
    const position = i11 === msgsRest.length - 1 ? "LAST" : "MIDDLE";
    return formatMsg(msg, options, padding, position);
  });
  let logFirst;
  let logsRest;
  const noNewLine = msgsRest.length <= 1 && [msgFirst, ...msgsRest].every((m11) => typeof m11 === "string" && !m11.includes("\n"));
  if (noNewLine) {
    logFirst = [msgFirst, ...msgsRest].map((m11) => String(m11).trim());
    logsRest = [];
  } else {
    logFirst = [msgFirst];
    logsRest = msgsRest;
  }
  console.log("\x1B[1m%s\x1B[0m", flag, ...logFirst);
  logsRest.forEach((msg) => {
    console.log(msg);
  });
}
function isDebugActivated(flag) {
  checkType(flag);
  assert(flags.includes(flag));
  const { flagsActivated, all } = getFlagsActivated();
  const isActivated = flagsActivated.includes(flag) || all && !flagsSkipWildcard.includes(flag);
  return isActivated;
}
function formatMsg(info, options, padding, position) {
  if (info === void 0) {
    return void 0;
  }
  let str = position === "FIRST" ? "" : padding;
  if (typeof info === "string") {
    str += info;
  } else if (isArray(info)) {
    if (info.length === 0) {
      str += options.serialization?.emptyArray ?? "[]";
    } else {
      str += info.map(strUnknown).join("\n");
    }
  } else {
    str += strUnknown(info);
  }
  str = pad(str, padding);
  if (position !== "LAST" && position !== "FIRST") {
    str += "\n";
  }
  return str;
}
function pad(str, padding) {
  const terminalWidth = getTerminalWidth();
  const lines = [];
  str.split("\n").forEach((line) => {
    if (!terminalWidth) {
      lines.push(line);
    } else {
      chunk(line, terminalWidth - padding.length).forEach((chunk2) => {
        lines.push(chunk2);
      });
    }
  });
  return lines.join("\n" + padding);
}
function chunk(str, size) {
  if (str.length <= size) {
    return [str];
  }
  const chunks = str.match(new RegExp(".{1," + size + "}", "g"));
  assert(chunks);
  return chunks;
}
function strUnknown(thing) {
  return typeof thing === "string" ? thing : strObj(thing);
}
function strObj(obj, newLines = true) {
  return JSON.stringify(obj, replaceFunctionSerializer, newLines ? 2 : void 0);
}
function replaceFunctionSerializer(_key, value) {
  if (isCallable(value)) {
    return value.toString().split(/\s+/).join(" ");
  }
  return value;
}
function assertFlagsActivated() {
  const { flagsActivated } = getFlagsActivated();
  flagsActivated.forEach((flag) => {
    assertUsage(flags.includes(flag), `Unknown DEBUG flag ${picocolors_default.cyan(flag)}. Valid flags:
${flags.map((f11) => `  ${picocolors_default.cyan(f11)}`).join("\n")}`);
  });
}
function getFlagsActivated() {
  const flagsActivated = DEBUG.match(flagRegex) ?? [];
  const all = DEBUG.includes("vike:*");
  return { flagsActivated, all };
}
function getDEBUG() {
  let DEBUG3;
  try {
    DEBUG3 = process.env.DEBUG;
  } catch {
  }
  return DEBUG3;
}
var DEBUG, flags, flagsSkipWildcard, flagRegex;
var init_debug = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/debug.js"() {
    init_isBrowser();
    init_isCallable();
    init_objectAssign();
    init_assert();
    init_checkType();
    init_getTerminWidth();
    init_picocolors();
    init_isArray();
    assert(!isBrowser());
    globalThis.__brillout_debug_createDebugger = createDebugger;
    DEBUG = getDEBUG() ?? "";
    flags = [
      "vike:crawl",
      "vike:error",
      "vike:esbuild-resolve",
      "vike:extractAssets",
      "vike:extractExportNames",
      "vike:glob",
      "vike:globalContext",
      "vike:log",
      "vike:optimizeDeps",
      "vike:outDir",
      "vike:pageFiles",
      "vike:pointer-imports",
      "vike:routing",
      "vike:setup",
      "vike:stream",
      "vike:virtual-files"
    ];
    flagsSkipWildcard = ["vike:log"];
    flagRegex = /\bvike:[a-zA-Z-]+/g;
    assertFlagsActivated();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertIsNotBrowser.js
function assertIsNotBrowser() {
  assert(!isBrowser());
}
var init_assertIsNotBrowser = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertIsNotBrowser.js"() {
    init_isBrowser();
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/trackLogs.js
function trackLogs() {
  const logOriginal = process.stdout.write;
  const log = (msg) => logOriginal.call(process.stdout, msg + "\n");
  ["stdout", "stderr"].forEach((stdName) => {
    var methodOriginal = process[stdName].write;
    process[stdName].write = function(...args) {
      log(picocolors_default.bold(picocolors_default.blue("*** LOG ***")));
      methodOriginal.apply(process[stdName], args);
      log(new Error().stack.replace(/^Error(\:|)/, picocolors_default.magenta("*** LOG ORIGIN ***")));
    };
  });
  Error.stackTraceLimit = Infinity;
}
var init_trackLogs = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/trackLogs.js"() {
    init_debug();
    init_picocolors();
    init_assertIsNotBrowser();
    assertIsNotBrowser();
    if (isDebugActivated("vike:log")) {
      trackLogs();
    }
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertVersion.js
function assertVersion(dependencyName, versionActual, versionExpected) {
  assert(versionActual);
  assert(versionExpected);
  assertUsage(isVersionOrAbove(versionActual, versionExpected), `${dependencyName} ${versionActual} isn't supported, use ${dependencyName} >= ${versionExpected} instead.`);
}
function isVersionOrAbove(versionActual, versionExpected) {
  const p1 = parseVersion(versionActual);
  const p22 = parseVersion(versionExpected);
  if (p1[0] !== p22[0])
    return p1[0] > p22[0];
  if (p1[1] !== p22[1])
    return p1[1] > p22[1];
  if (p1[2] !== p22[2])
    return p1[2] > p22[2];
  return true;
}
function parseVersion(version) {
  version = version.split("-")[0];
  let partsStr = version.split(".");
  partsStr = partsStr.slice(0, 3);
  assert(partsStr.length === 3);
  assert(partsStr.every((s37) => s37.length > 0));
  const parts = partsStr.map((s37) => parseInt(s37, 10));
  return parts;
}
var init_assertVersion = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertVersion.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertNodeVersion.js
function assertNodeVersion() {
  if (!isNodeJS())
    return;
  const version = process.versions.node;
  assertVersion("Node.js", version, "18.0.0");
}
var init_assertNodeVersion = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertNodeVersion.js"() {
    init_isNodeJS();
    init_assertVersion();
  }
});

// node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/utils.cjs
var require_utils = __commonJS({
  "node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/utils.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getGlobalObject = exports.isVitest = exports.pathJoin = exports.assertIsNotBrowser = exports.assert = exports.assertPosixPath = exports.toPosixPath = void 0;
    function toPosixPath3(path) {
      const pathPosix = path.split("\\").join("/");
      assertPosixPath3(pathPosix);
      return pathPosix;
    }
    exports.toPosixPath = toPosixPath3;
    function assertPosixPath3(path) {
      const errMsg = (msg) => `Not a posix path: ${msg}`;
      assert4(path !== null, errMsg("null"));
      assert4(typeof path === "string", errMsg(`typeof path === '${typeof path}'`));
      assert4(path !== "", errMsg("(empty string)"));
      assert4(path);
      assert4(!path.includes("\\"), errMsg(path));
    }
    exports.assertPosixPath = assertPosixPath3;
    function assert4(condition, debugInfo) {
      if (condition)
        return;
      const githubRepository = "https://github.com/brillout/require-shim";
      let errMsg = [
        "[@brillout/require-shim]",
        "You stumbled upon a bug.",
        `Go to ${githubRepository}/issues/new and copy-paste this error.`,
        "A maintainer will fix the bug.",
        debugInfo
      ].filter(Boolean).join(" ");
      throw new Error(errMsg);
    }
    exports.assert = assert4;
    function assertIsNotBrowser2() {
      assert4(!isBrowser5());
    }
    exports.assertIsNotBrowser = assertIsNotBrowser2;
    function isBrowser5() {
      return typeof window !== "undefined" && typeof window.scrollY === "number";
    }
    function pathJoin(path1, path2) {
      assert4(!path1.includes("\\"));
      assert4(!path2.includes("\\"));
      let joined = [...path1.split("/"), ...path2.split("/")].filter(Boolean).join("/");
      if (path1.startsWith("/"))
        joined = "/" + joined;
      return joined;
    }
    exports.pathJoin = pathJoin;
    function isVitest2() {
      return typeof process !== "undefined" && typeof process.env !== "undefined" && "VITEST" in process.env;
    }
    exports.isVitest = isVitest2;
    function getGlobalObject3(key, defaultValue2) {
      const allGlobalObjects = globalThis.__brillout_require_shim = globalThis.__brillout_require_shim || {};
      const globalObject11 = allGlobalObjects[key] = allGlobalObjects[key] || defaultValue2;
      return globalObject11;
    }
    exports.getGlobalObject = getGlobalObject3;
  }
});

// node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/runtime-test.cjs
var require_runtime_test = __commonJS({
  "node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/runtime-test.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_cjs_1 = require_utils();
    testRequireShim();
    function testRequireShim() {
      let req;
      try {
        req = __require;
      } catch (_a) {
      }
      if (!req)
        return;
      (0, utils_cjs_1.assert)(!("_is_brillout_require_shim" in __require));
    }
  }
});

// node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/index.cjs
var require_dist = __commonJS({
  "node_modules/.pnpm/@brillout+require-shim@0.1.2/node_modules/@brillout/require-shim/dist/index.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.installRequireShim_setUserRootDir = exports.installRequireShim = void 0;
    var utils_cjs_1 = require_utils();
    var globalObject11 = (0, utils_cjs_1.getGlobalObject)("utils/require-shim.ts", {});
    (0, utils_cjs_1.assertIsNotBrowser)();
    function installRequireShim2() {
      if (globalObject11.alreadyCalled)
        return;
      globalObject11.alreadyCalled = true;
      let requireLocal;
      try {
        requireLocal = __require;
      } catch (_a) {
      }
      if (!requireLocal)
        return;
      let module2;
      try {
        module2 = requireLocal("module");
      } catch (_b) {
        return;
      }
      if (globalThis.require === void 0) {
        install();
      }
      testShim();
      return;
      function install() {
        Object.defineProperty(globalThis, "require", {
          get() {
            let callsites;
            {
              const prepareStackTraceOrg = Error.prepareStackTrace;
              Error.prepareStackTrace = (_3, stack2) => stack2;
              const err = new Error();
              callsites = err.stack;
              Error.prepareStackTrace = prepareStackTraceOrg;
            }
            const callerFile = getCallerFile(callsites);
            const callerFileFallback = __filename;
            const requireContextFile = callerFile || callerFileFallback;
            (0, utils_cjs_1.assert)(requireContextFile);
            const requireUserLand = module2.createRequire(requireContextFile);
            requireUserLand._is_brillout_require_shim = true;
            return requireUserLand;
          }
        });
      }
      function getCallerFile(callsites) {
        const caller = callsites[1];
        (0, utils_cjs_1.assert)(caller);
        if (!caller.getFileName)
          return null;
        {
          const filePath = caller.getFileName();
          (0, utils_cjs_1.assert)(typeof filePath === "string" && filePath || filePath === void 0);
          if (filePath)
            return filePath;
        }
        {
          const filePath = deriveFilePath(caller);
          if (filePath) {
            return filePath;
          }
        }
        return null;
      }
      function deriveFilePath(caller) {
        let filePath = caller.getEvalOrigin();
        if (!filePath)
          return null;
        if (doesPathExist(filePath)) {
          return filePath;
        }
        const { userRootDir } = globalObject11;
        if (!userRootDir)
          return null;
        let filePathAbsolute = (0, utils_cjs_1.toPosixPath)(filePath);
        (0, utils_cjs_1.assertPosixPath)(userRootDir);
        filePathAbsolute = (0, utils_cjs_1.pathJoin)(userRootDir, filePathAbsolute);
        if (doesPathExist(filePathAbsolute)) {
          return filePathAbsolute;
        }
        return null;
      }
      function doesPathExist(filePath) {
        (0, utils_cjs_1.assert)(requireLocal);
        try {
          requireLocal.resolve(filePath);
          return true;
        } catch (_a) {
          return false;
        }
      }
    }
    exports.installRequireShim = installRequireShim2;
    function testShim() {
      if ((0, utils_cjs_1.isVitest)())
        return;
      (0, utils_cjs_1.assert)(__require !== globalThis.require);
      (0, utils_cjs_1.assert)(!("_is_brillout_require_shim" in __require));
      Promise.resolve().then(() => __toESM(require_runtime_test()));
    }
    function installRequireShim_setUserRootDir(userRootDir) {
      globalObject11.userRootDir = userRootDir;
    }
    exports.installRequireShim_setUserRootDir = installRequireShim_setUserRootDir;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getFileExtension.js
function getFileExtension(id5) {
  id5 = id5.split("?")[0];
  const fileName = slice(id5.split("/"), -1, 0)[0];
  if (!fileName) {
    return null;
  }
  const fileExtension = slice(fileName.split("."), -1, 0)[0];
  if (!fileExtension) {
    return null;
  }
  return fileExtension;
}
var init_getFileExtension = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getFileExtension.js"() {
    init_slice();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/parseUrl-extras.js
function prependBase(url, baseServer2) {
  if (baseServer2.startsWith("http")) {
    const baseAssets = baseServer2;
    const baseAssetsNormalized = normalizeBaseAssets(baseAssets);
    assert(!baseAssetsNormalized.endsWith("/"));
    assert(url.startsWith("/"));
    return `${baseAssetsNormalized}${url}`;
  }
  assert(isBaseServer(baseServer2));
  const baseServerNormalized = normalizeBaseServer(baseServer2);
  if (baseServerNormalized === "/")
    return url;
  assert(!baseServerNormalized.endsWith("/"));
  assert(url.startsWith("/"));
  return `${baseServerNormalized}${url}`;
}
function removeBaseServer2(url, baseServer2) {
  const { isBaseMissing, origin, pathname, pathnameOriginal, searchOriginal, hashOriginal } = parseUrl(url, baseServer2);
  assert(!isBaseMissing);
  assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal);
  const urlWithoutBase = createUrlFromComponents(origin, pathname, searchOriginal, hashOriginal);
  return urlWithoutBase;
}
function normalizeBaseAssets(baseAssets) {
  let baseAssetsNormalized = baseAssets;
  if (baseAssetsNormalized.endsWith("/")) {
    baseAssetsNormalized = slice(baseAssetsNormalized, 0, -1);
  }
  assert(!baseAssetsNormalized.endsWith("/"));
  return baseAssetsNormalized;
}
function normalizeBaseServer(baseServer2) {
  let baseServerNormalized = baseServer2;
  if (baseServerNormalized.endsWith("/") && baseServerNormalized !== "/") {
    baseServerNormalized = slice(baseServerNormalized, 0, -1);
  }
  assert(!baseServerNormalized.endsWith("/") || baseServerNormalized === "/");
  return baseServerNormalized;
}
function isBaseAssets(base) {
  return base.startsWith("/") || base.startsWith("http://") || base.startsWith("https://");
}
function normalizeUrlPathname(urlOriginal, trailingSlash, baseServer2) {
  const urlNormalized = modifyUrlPathname(urlOriginal, (urlPathname) => {
    assert(urlPathname.startsWith("/"));
    let urlPathnameNormalized = normalize(urlPathname);
    if (urlPathnameNormalized === "/") {
      return urlPathnameNormalized;
    }
    if (baseServer2.endsWith("/") && baseServer2 !== "/" && normalize(baseServer2) === urlPathnameNormalized) {
      trailingSlash = true;
    }
    assert(!urlPathnameNormalized.endsWith("/"));
    if (trailingSlash) {
      urlPathnameNormalized = urlPathnameNormalized + "/";
    }
    return urlPathnameNormalized;
  });
  if (urlNormalized === urlOriginal)
    return null;
  return urlNormalized;
}
function normalize(urlPathname) {
  assert(urlPathname.startsWith("/"));
  return "/" + urlPathname.split("/").filter(Boolean).join("/");
}
function modifyUrlPathname(url, modifier) {
  const { origin, pathnameOriginal, searchOriginal, hashOriginal } = parseUrl(url, "/");
  const pathnameModified = modifier(pathnameOriginal);
  if (pathnameModified === null)
    return url;
  assertUrlComponents(url, origin, pathnameOriginal, searchOriginal, hashOriginal);
  const urlModified = createUrlFromComponents(origin, pathnameModified, searchOriginal, hashOriginal);
  assert(pathnameOriginal === pathnameModified === (url === urlModified));
  return urlModified;
}
function removeUrlOrigin(url) {
  const { origin, pathnameOriginal, searchOriginal, hashOriginal } = parseUrl(url, "/");
  const urlModified = createUrlFromComponents(null, pathnameOriginal, searchOriginal, hashOriginal);
  assert(urlModified.startsWith("/"));
  return { urlModified, origin };
}
function setUrlOrigin(url, origin) {
  const { origin: originCurrent, pathnameOriginal, searchOriginal, hashOriginal } = parseUrl(url, "/");
  if (origin === originCurrent)
    return false;
  assert(origin === null || origin.startsWith("http"));
  const urlModified = createUrlFromComponents(origin, pathnameOriginal, searchOriginal, hashOriginal);
  return urlModified;
}
function getUrlPretty(url) {
  const { urlModified } = removeUrlOrigin(url);
  return urlModified;
}
var init_parseUrl_extras = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/parseUrl-extras.js"() {
    init_parseUrl();
    init_assert();
    init_slice();
    init_assertIsNotBrowser();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/utils.js
var init_utils2 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/utils.js"() {
    init_assertIsNotBrowser();
    init_assert();
    init_getFileExtension();
    init_isPlainObject();
    init_checkType();
    init_hasProp();
    init_objectAssign();
    init_checkType();
    init_hasProp();
    init_parseUrl();
    init_parseUrl_extras();
    init_isObject();
    init_assertIsNotBrowser();
    init_isNullish();
    init_unique();
    init_debug();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/isErrorDebug.js
function isErrorDebug() {
  return isDebugActivated("vike:error");
}
var init_isErrorDebug = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/isErrorDebug.js"() {
    init_utils2();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/onLoad.js
function onLoad() {
  assertIsNotBrowser();
  assertNodeVersion();
  if (isErrorDebug())
    setAlwaysShowStackTrace();
  addEcosystemStamp();
  (0, import_require_shim.installRequireShim)();
}
function addEcosystemStamp() {
  const g9 = globalThis;
  g9._isVikeApp = /* Don't set to true so that consumers do `!!globalThis._isVikeApp` instead of `globalThis._isVikeApp === true`.
  true
  */
  // We use an object so that we can eventually, in the future, add helpful information as needed. (E.g. the Vike version, or global settings.)
  {};
  g9._isVitePluginSsr = true;
}
var import_require_shim;
var init_onLoad = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/onLoad.js"() {
    init_assertIsNotBrowser();
    init_assertNodeVersion();
    init_assert();
    import_require_shim = __toESM(require_dist(), 1);
    init_isErrorDebug();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectAssignSafe.js
var init_objectAssignSafe = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectAssignSafe.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectReplace.js
var init_objectReplace = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectReplace.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/PromiseType.js
var init_PromiseType = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/PromiseType.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObjectWithKeys.js
function isObjectWithKeys(obj, keys3) {
  if (!isPlainObject(obj)) {
    return false;
  }
  for (const key of Object.keys(obj)) {
    if (!keys3.includes(key)) {
      return false;
    }
  }
  return true;
}
var init_isObjectWithKeys = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isObjectWithKeys.js"() {
    init_isPlainObject();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/capitalizeFirstLetter.js
function capitalizeFirstLetter(word) {
  if (!word[0]) {
    return word;
  }
  return word[0].toUpperCase() + word.slice(1);
}
var init_capitalizeFirstLetter = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/capitalizeFirstLetter.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/debugGlob.js
var debugGlob;
var init_debugGlob = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/debugGlob.js"() {
    init_debug();
    debugGlob = createDebugger("vike:glob");
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isSameErrorMessage.js
function isSameErrorMessage(err1, err2) {
  if (!isObject(err1) || !isObject(err2))
    return false;
  return err1.message === err2.message;
}
var init_isSameErrorMessage = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isSameErrorMessage.js"() {
    init_isObject();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/styleFileRE.js
var styleFileRE;
var init_styleFileRE = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/styleFileRE.js"() {
    styleFileRE = /\.(css|less|sass|scss|styl|stylus|pcss|postcss)($|\?)/;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/urlToFile.js
var baseServer;
var init_urlToFile = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/urlToFile.js"() {
    init_assert();
    init_parseUrl();
    init_slice();
    baseServer = "/";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/freezePartial.js
function freezePartial(obj, allowList) {
  Object.entries(obj).forEach(([key, val]) => {
    Object.defineProperty(obj, key, {
      get() {
        return val;
      },
      set(newVal) {
        if (key in allowList) {
          const isAllowed = allowList[key](newVal);
          if (isAllowed) {
            val = newVal;
            return;
          } else {
            throw new Error(`Setting wrong value ${picocolors_default.cyan(JSON.stringify(newVal))} for property ${picocolors_default.cyan(key)}`);
          }
        }
        throw new Error(`You aren't allowed to mutate property ${picocolors_default.cyan(key)}`);
      },
      configurable: false,
      enumerable: true
    });
  });
  Object.preventExtensions(obj);
}
var init_freezePartial = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/freezePartial.js"() {
    init_picocolors();
    init_assertIsNotBrowser();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNpmPackage.js
function isNpmPackageImport(str, { cannotBePathAlias }) {
  assert(cannotBePathAlias);
  return isNpmPackageImport_unreliable(str);
}
function isNpmPackageImport_unreliable(str) {
  const res = parse(str);
  return res !== null;
}
function assertIsNpmPackageImport(str) {
  assert(isNpmPackageImport(str, {
    // If `str` is a path alias that looks like an npm package => assertIsNpmPackageImport() is erroneous but that's okay because the assertion will eventually fail for some other user using a disambiguated path alias.
    cannotBePathAlias: true
  }), str);
}
function parse(str) {
  if (!str)
    return null;
  let scope = null;
  if (str.startsWith("@")) {
    if (!str.includes("/"))
      return null;
    const [scope_, ...rest] = str.split("/");
    scope = scope_;
    str = rest.join("/");
    if (!str)
      return null;
    if (scope === "@" || invalid(scope.slice(1)))
      return null;
  }
  const [name2, ...importPathParts] = str.split("/");
  if (!name2 || invalid(name2))
    return null;
  const importPath = importPathParts.length === 0 ? null : importPathParts.join("/");
  return {
    pkgName: scope ? `${scope}/${name2}` : name2,
    importPath
  };
}
function invalid(s37) {
  const firstLetter = s37[0];
  if (!firstLetter || !/[a-z0-9]/.test(firstLetter))
    return true;
  if (/[^a-z0-9_\-\.]/.test(s37))
    return true;
  return false;
}
var init_isNpmPackage = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isNpmPackage.js"() {
    init_assert();
    init_assertIsNotBrowser();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/removeFileExtention.js
var init_removeFileExtention = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/removeFileExtention.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectKeys.js
function objectKeys(obj) {
  return Object.keys(obj);
}
var init_objectKeys = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectKeys.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectEntries.js
var init_objectEntries = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectEntries.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectFromEntries.js
var init_objectFromEntries = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/objectFromEntries.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isVitest.js
function isVitest() {
  return typeof process !== "undefined" && typeof process.env !== "undefined" && "VITEST" in process.env;
}
var init_isVitest = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isVitest.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertSetup.js
function onSetupRuntime() {
  if (debug.isActivated)
    debug("assertSetup()", new Error().stack);
  if (isTest())
    return;
  assertNodeEnvIsNotUndefinedString();
  if (!setup.viteDevServer && setup.isViteDev === void 0) {
    assertWarning2(!isNodeEnvDev(), `The ${getEnvDescription()}, which is contradictory because the environment seems to be a production environment (Vite isn't loaded), see https://vike.dev/NODE_ENV`, { onlyOnce: true });
    assertUsage(!setup.vikeVitePlugin, `Loading Vike's Vite plugin (the ${picocolors_default.cyan("vike/plugin")} module) is prohibited in production.`);
    assert(!setup.shouldNotBeProduction);
  } else {
    if (!setup.isPreview && !setup.vitePreviewServer && !setup.isPrerendering) {
      assertWarning2(isNodeEnvDev(), `The ${getEnvDescription()}, but Vite is loaded which is prohibited in production, see https://vike.dev/NODE_ENV`, { onlyOnce: true });
    }
    assert(setup.vikeVitePlugin);
    assert(setup.shouldNotBeProduction);
  }
}
function isTest() {
  return isVitest() || isNodeEnv("test");
}
function getEnvDescription() {
  const envType = `${isNodeEnvDev() ? "development" : "production"} environment`;
  const nodeEnvDesc = `environment is set to be a ${picocolors_default.bold(envType)} by ${picocolors_default.cyan(`process.env.NODE_ENV===${JSON.stringify(getNodeEnv())}`)}`;
  return nodeEnvDesc;
}
function assertNodeEnvIsNotUndefinedString() {
  const nodeEnv = getNodeEnv();
  assertWarning2(nodeEnv !== "undefined", `${picocolors_default.cyan('process.env.NODE_ENV==="undefined"')} which is unexpected: ${picocolors_default.cyan("process.env.NODE_ENV")} is allowed to be the *value* ${picocolors_default.cyan("undefined")} (i.e. ${picocolors_default.cyan("process.env.NODE_ENV===undefined")}) but it shouldn't be the *string* ${picocolors_default.cyan('"undefined"')} ${picocolors_default.underline("https://vike.dev/NODE_ENV")}`, { onlyOnce: true });
}
function isNodeEnvDev() {
  const nodeEnv = getNodeEnv();
  return nodeEnv === void 0 || isNodeEnv(["development", "dev", ""]);
}
function isNodeEnv(value) {
  const values2 = Array.isArray(value) ? value : [value];
  const nodeEnv = getNodeEnv();
  return nodeEnv !== void 0 && values2.includes(nodeEnv.toLowerCase());
}
function getNodeEnv() {
  let val;
  try {
    val = "production";
  } catch {
    return void 0;
  }
  return val;
}
var debug, setup;
var init_assertSetup = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertSetup.js"() {
    init_assert();
    init_assertIsNotBrowser();
    init_debug();
    init_getGlobalObject();
    init_isVitest();
    init_picocolors();
    assertIsNotBrowser();
    debug = createDebugger("vike:setup");
    setup = getGlobalObject("utils/assertSetup.ts", {});
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/path.js
function toPosixPath(path) {
  const pathPosix = path.split("\\").join("/");
  assertPosixPath(pathPosix);
  return pathPosix;
}
function assertPosixPath(path) {
  const errMsg = (msg) => `Not a posix path: ${msg}`;
  assert(path !== null, errMsg("null"));
  assert(typeof path === "string", errMsg(`typeof path === ${JSON.stringify(typeof path)}`));
  assert(path !== "", errMsg("(empty string)"));
  assert(path);
  assert(!path.includes("\\"), errMsg(path));
}
var init_path = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/path.js"() {
    init_assert();
    init_assertIsNotBrowser();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isHtml.js
function isHtml(str) {
  const re5 = /(<\/[^<]+>)|(<[^<]+\/>)/;
  return re5.test(str);
}
var init_isHtml = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isHtml.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/warnIfErrorIsNotObject.js
function warnIfErrorIsNotObject(err) {
  if (!isObject(err)) {
    console.warn("[vike] The thrown value is:");
    console.warn(err);
    assertWarning2(false, `One of your hooks threw an error ${picocolors_default.cyan("throw someValue")} but ${picocolors_default.cyan("someValue")} isn't an object (it's ${picocolors_default.cyan(`typeof someValue === ${typeof err}`)} instead). Make sure thrown values are always wrapped with ${picocolors_default.cyan("new Error()")}, in other words: ${picocolors_default.cyan("throw someValue")} should be replaced with ${picocolors_default.cyan("throw new Error(someValue)")}. The thrown value is printed above.`, { onlyOnce: false });
  }
}
var init_warnIfErrorIsNotObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/warnIfErrorIsNotObject.js"() {
    init_assert();
    init_assertIsNotBrowser();
    init_isObject();
    init_picocolors();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/stripAnsi.js
function stripAnsi(string) {
  return string.replace(ansiRegex2, "");
}
function getAnsiRegex2() {
  const pattern = [
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
  ].join("|");
  return new RegExp(pattern, "g");
}
var ansiRegex2;
var init_stripAnsi = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/stripAnsi.js"() {
    init_assertIsNotBrowser();
    assertIsNotBrowser();
    ansiRegex2 = getAnsiRegex2();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/truncateString.js
function truncateString(str, lenMax) {
  const lenMaxReal = lenMax - 3;
  assert(lenMaxReal >= 1);
  if (str.length < lenMax) {
    return str;
  } else {
    str = str.substring(0, lenMaxReal);
    const ellipsis = picocolors_default.dim("...");
    str = str + ellipsis;
    return str;
  }
}
var init_truncateString = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/truncateString.js"() {
    init_picocolors();
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/formatHintLog.js
function formatHintLog(msg) {
  assert(msg.length > 0);
  const msgLength = stripAnsi(msg).length;
  const sep = "\u2500".repeat(msgLength);
  return [
    // prettier-ignore
    // biome-ignore format:
    `\u250C\u2500${sep}\u2500\u2510`,
    `\u2502 ${msg} \u2502`,
    `\u2514\u2500${sep}\u2500\u2518`
  ].join("\n");
}
var init_formatHintLog = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/formatHintLog.js"() {
    init_assert();
    init_stripAnsi();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/joinEnglish.js
function joinEnglish(arr, conjunction, colorizer = (s37) => s37) {
  assert(arr.length > 0);
  if (arr.length === 1)
    return colorizer(arr[0]);
  const firsts = arr.slice(0, arr.length - 1);
  const last = arr[arr.length - 1];
  return firsts.map(colorizer).join(", ") + `, ${conjunction} ` + colorizer(last);
}
var init_joinEnglish = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/joinEnglish.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/escapeHtml.js
function escapeHtml(unsafeString) {
  const safe = unsafeString.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
  return safe;
}
var init_escapeHtml = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/escapeHtml.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/normalizeHeaders.js
function normalizeHeaders(headersOriginal) {
  let headersCleaned = headersOriginal;
  if (isObject(headersCleaned) && headersCleaned[":method"])
    headersCleaned = Object.fromEntries(Object.entries(headersCleaned).filter(([key]) => !key.startsWith(":")));
  const headersStandard = new Headers(headersCleaned);
  const headers = Object.fromEntries(headersStandard.entries());
  return headers;
}
var init_normalizeHeaders = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/normalizeHeaders.js"() {
    init_isObject();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isVikeReactApp.js
function isVikeReactApp() {
  const g9 = globalThis;
  return !!g9._isVikeReactApp;
}
var init_isVikeReactApp = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/isVikeReactApp.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getPropAccessNotation.js
function getPropAccessNotation(key) {
  return typeof key === "string" && isKeyDotNotationCompatible(key) ? `.${key}` : `[${JSON.stringify(key)}]`;
}
function isKeyDotNotationCompatible(key) {
  return /^[a-z0-9\$_]+$/i.test(key);
}
var init_getPropAccessNotation = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/getPropAccessNotation.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/genPromise.js
function genPromise() {
  let resolve;
  const promise = new Promise((r8) => resolve = r8);
  return { promise, resolve };
}
var init_genPromise = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/genPromise.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/makePublicCopy.js
function makePublicCopy(obj, objName, propsPublic, propsInternalNoWarning) {
  const objPublic = {};
  objectKeys(obj).forEach((key) => {
    const val = obj[key];
    if (propsPublic.includes(key)) {
      objPublic[key] = val;
    } else {
      const keyPublic = key.startsWith("_") ? key : `_${key}`;
      if (propsInternalNoWarning?.includes(key)) {
        objPublic[keyPublic] = val;
      } else {
        Object.defineProperty(objPublic, keyPublic, {
          enumerable: true,
          get() {
            assertWarning2(false, `Using internal ${objName}.${keyPublic} which may break in any minor version update. Reach out on GitHub and elaborate your use case so that the Vike team can add official support for your use case.`, { onlyOnce: true });
            return val;
          }
        });
      }
    }
  });
  return objPublic;
}
var init_makePublicCopy = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/makePublicCopy.js"() {
    init_assert();
    init_objectKeys();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/utils.js
var init_utils3 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/utils.js"() {
    init_trackLogs();
    init_onLoad();
    init_assert();
    init_cast();
    init_checkType();
    init_isCallable();
    init_isBrowser();
    init_isPlainObject();
    init_isPromise();
    init_hasProp();
    init_parseUrl();
    init_parseUrl_extras();
    init_slice();
    init_sorter();
    init_isArray();
    init_isObject();
    init_objectAssign();
    init_objectAssignSafe();
    init_objectReplace();
    init_PromiseType();
    init_compareString();
    init_isObjectWithKeys();
    init_stringifyStringArray();
    init_unique();
    init_capitalizeFirstLetter();
    init_debugGlob();
    init_isSameErrorMessage();
    init_styleFileRE();
    init_isPropertyGetter();
    init_debug();
    init_urlToFile();
    init_getGlobalObject();
    init_freezePartial();
    init_isNpmPackage();
    init_isNullish();
    init_isScriptFile();
    init_removeFileExtention();
    init_objectKeys();
    init_objectEntries();
    init_objectFromEntries();
    init_getFileExtension();
    init_assertSetup();
    init_path();
    init_isHtml();
    init_warnIfErrorIsNotObject();
    init_stripAnsi();
    init_getTerminWidth();
    init_truncateString();
    init_formatHintLog();
    init_joinEnglish();
    init_isArrayOfStrings();
    init_escapeHtml();
    init_normalizeHeaders();
    init_isVikeReactApp();
    init_getPropAccessNotation();
    init_PROJECT_VERSION();
    init_genPromise();
    init_makePublicCopy();
    onLoad();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertPageContextProvidedByUser.js
function assertPageContextProvidedByUser(pageContextProvidedByUser, { hookName, hookFilePath }) {
  if (pageContextProvidedByUser === void 0 || pageContextProvidedByUser === null)
    return;
  assert(!hookName.endsWith(")"));
  const errPrefix = `The ${picocolors_default.cyan("pageContext")} object provided by the ${hookName}() hook defined by ${hookFilePath}`;
  assertUsage(isObject(pageContextProvidedByUser), `${errPrefix} should be an object (but it's ${picocolors_default.cyan(`typeof pageContext === ${JSON.stringify(typeof pageContextProvidedByUser)}`)} instead)`);
  assertUsage(!("_objectCreatedByVike" in pageContextProvidedByUser), `${errPrefix} shouldn't be the whole ${picocolors_default.cyan("pageContext")} object, see https://vike.dev/pageContext-manipulation#do-not-return-entire-pagecontext`);
  assertWarning2(!("pageId" in pageContextProvidedByUser), `${errPrefix} sets ${picocolors_default.cyan("pageContext.pageId")} which means that Vike's routing is overriden. This is an experimental feature: make sure to contact a vike maintainer before using this.`, { onlyOnce: true });
  assertUsage(!("is404" in pageContextProvidedByUser), `${errPrefix} sets ${picocolors_default.cyan("pageContext.is404")} which is forbidden, use ${picocolors_default.cyan("throw render()")} instead, see https://vike.dev/render`);
}
var init_assertPageContextProvidedByUser = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertPageContextProvidedByUser.js"() {
    init_utils();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/injectHtmlTags.js
function injectHtmlTags(htmlString, htmlTags, position) {
  const htmlFragment = joinHtmlTags(htmlTags.filter((h8) => h8.position === position));
  if (htmlFragment) {
    htmlString = injectHtmlFragment(position, htmlFragment, htmlString);
  }
  return htmlString;
}
function injectHtmlTagsUsingStream(htmlTags, streamFromReactStreamingPackage) {
  const htmlFragment = joinHtmlTags(htmlTags.filter((h8) => h8.position === "HTML_STREAM"));
  if (htmlFragment) {
    assert(!streamFromReactStreamingPackage.hasStreamEnded());
    streamFromReactStreamingPackage.injectToStream(htmlFragment, { flush: true });
  }
}
function joinHtmlTags(htmlTags) {
  const htmlFragment = htmlTags.map((h8) => resolveHtmlTag(h8.htmlTag)).join("");
  return htmlFragment;
}
function injectHtmlFragment(position, htmlFragment, htmlString) {
  if (position === "HTML_BEGIN") {
    {
      const res = injectAtPaceholder(htmlFragment, htmlString, true);
      if (res)
        return res;
    }
    assert(tagOpeningExists("head", htmlString));
    htmlString = injectAtOpeningTag("head", htmlString, htmlFragment);
    return htmlString;
  }
  if (position === "HTML_END") {
    {
      const res = injectAtPaceholder(htmlFragment, htmlString, false);
      if (res)
        return res;
    }
    if (tagClosingExists("body", htmlString)) {
      return injectAtClosingTag("body", htmlString, htmlFragment);
    }
    if (tagClosingExists("html", htmlString)) {
      return injectAtClosingTag("html", htmlString, htmlFragment);
    }
    return htmlString + "\n" + htmlFragment;
  }
  assert(false);
}
function resolveHtmlTag(htmlTag) {
  return typeof htmlTag !== "string" ? htmlTag() : htmlTag;
}
function injectAtOpeningTag(tag, htmlString, htmlFragment) {
  const openingTag = getTagOpening(tag);
  const matches = htmlString.match(openingTag);
  assert(matches && matches.length >= 1);
  const tagInstance = matches[0];
  assert(tagInstance);
  const htmlParts = htmlString.split(tagInstance);
  assert(htmlParts.length >= 2);
  const before = slice(htmlParts, 0, 1)[0] + tagInstance;
  const after = slice(htmlParts, 1, 0).join(tagInstance);
  htmlFragment = injectBreakLines(htmlFragment, before, after);
  return before + htmlFragment + after;
}
function injectAtClosingTag(tag, htmlString, htmlFragment) {
  const tagClosing = getTagClosing(tag);
  const matches = htmlString.match(tagClosing);
  assert(matches && matches.length >= 1);
  const tagInstance = matches[0];
  assert(tagInstance);
  const htmlParts = htmlString.split(tagInstance);
  assert(htmlParts.length >= 2);
  const before = slice(htmlParts, 0, -1).join(tagInstance);
  const after = tagInstance + slice(htmlParts, -1, 0);
  htmlFragment = injectBreakLines(htmlFragment, before, after);
  return before + htmlFragment + after;
}
function injectBreakLines(htmlFragment, before, after) {
  assert(htmlFragment.trim() === htmlFragment);
  const currentLineBefore = before.split("\n").slice(-1)[0];
  let paddingParent = currentLineBefore.match(/\s*$/)[0];
  let isBlankLine = !!paddingParent;
  if (!paddingParent) {
    paddingParent = currentLineBefore.match(/^\s*/)[0];
  }
  if (!paddingParent)
    return htmlFragment;
  const whitespaceExtra = paddingParent ? "  " : "";
  const whitespace = `${paddingParent}${whitespaceExtra}`;
  const padding = `
${whitespace}`;
  htmlFragment = htmlFragment.replace(/<[^\/]/g, (match) => `${padding}${match}`);
  if (isBlankLine) {
    assert(htmlFragment.startsWith(padding), { htmlFragment });
    htmlFragment = whitespaceExtra + htmlFragment.slice(padding.length);
  }
  const currentLineAfter = after.split("\n")[0];
  if (currentLineAfter.trim().length > 0) {
    htmlFragment += "\n" + paddingParent;
  }
  return htmlFragment;
}
function createHtmlHeadIfMissing(htmlString) {
  const assertion = () => assert(tagOpeningExists("head", htmlString) && tagClosingExists("head", htmlString));
  if (tagOpeningExists("head", htmlString) && tagClosingExists("head", htmlString)) {
    assertion();
    return htmlString;
  }
  const htmlFragment = "<head></head>";
  if (tagOpeningExists("html", htmlString)) {
    htmlString = injectAtOpeningTag("html", htmlString, htmlFragment);
    assertion();
    return htmlString;
  }
  if (tagOpeningExists("!doctype", htmlString)) {
    htmlString = injectAtOpeningTag("!doctype", htmlString, htmlFragment);
    assertion();
    return htmlString;
  }
  htmlString = htmlFragment + "\n" + htmlString;
  assertion();
  return htmlString;
}
function tagOpeningExists(tag, htmlString) {
  const tagOpeningRE = getTagOpening(tag);
  return tagOpeningRE.test(htmlString);
}
function tagClosingExists(tag, htmlString) {
  const tagClosingRE = getTagClosing(tag);
  return tagClosingRE.test(htmlString);
}
function getTagOpening(tag) {
  const tagOpening = new RegExp(`<${tag}(>| [^>]*>)`, "i");
  return tagOpening;
}
function getTagClosing(tag) {
  const tagClosing = new RegExp(`</${tag}>`, "i");
  return tagClosing;
}
function injectAtPaceholder(htmlFragment, htmlString, isFirst) {
  const placeholder = isFirst ? "__VITE_PLUGIN_SSR__ASSETS_FIRST__" : "__VITE_PLUGIN__SSR_ASSETS_LAST__";
  const parts = htmlString.split(placeholder);
  if (parts.length === 1)
    return null;
  assertUsage(parts.length === 2, "You're inserting assets twice into your HTML", { showStackTrace: true });
  return [parts[0], htmlFragment, parts[1]].join("");
}
var init_injectHtmlTags = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/injectHtmlTags.js"() {
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isFontFallback.js
function isFontFallback(asset, pageAssets) {
  if (asset.assetType !== "font") {
    return false;
  }
  const fontUrlBase = removeFileExtentionAndHash(asset.src);
  return pageAssets.some((assetOther) => {
    return assetOther.assetType === "font" && removeFileExtentionAndHash(assetOther.src) === fontUrlBase;
  });
}
function removeFileExtentionAndHash(assetUrl) {
  assert(!assetUrl.includes("\\"));
  assert(!assetUrl.endsWith(".js"));
  const paths2 = assetUrl.split("/");
  {
    const filename = paths2[paths2.length - 1];
    const filenameParts = filename.split(".");
    assert(filenameParts.length >= 2);
    const filenameBase = filenameParts.slice(0, filenameParts.length === 2 ? -1 : -2);
    assert(filenameBase.length >= 1);
    paths2[paths2.length - 1] = filenameBase.join(".");
  }
  return paths2.join("/");
}
var init_isFontFallback = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isFontFallback.js"() {
    init_assert();
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/types.js
var require_types = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.types = void 0;
    var types = [
      ts2({
        is: (val) => val === void 0,
        match: (str) => str === "!undefined",
        serialize: () => "!undefined",
        deserialize: () => void 0
      }),
      ts2({
        is: (val) => val === Infinity,
        match: (str) => str === "!Infinity",
        serialize: () => "!Infinity",
        deserialize: () => Infinity
      }),
      ts2({
        is: (val) => val === -Infinity,
        match: (str) => str === "!-Infinity",
        serialize: () => "!-Infinity",
        deserialize: () => -Infinity
      }),
      ts2({
        is: (val) => typeof val === "number" && isNaN(val),
        match: (str) => str === "!NaN",
        serialize: () => "!NaN",
        deserialize: () => NaN
      }),
      ts2({
        is: (val) => val instanceof Date,
        match: (str) => str.startsWith("!Date:"),
        serialize: (val) => "!Date:" + val.toISOString(),
        deserialize: (str) => new Date(str.slice("!Date:".length))
      }),
      ts2({
        is: (val) => typeof val === "bigint",
        match: (str) => str.startsWith("!BigInt:"),
        serialize: (val) => "!BigInt:" + val.toString(),
        deserialize: (str) => {
          if (typeof BigInt === "undefined") {
            throw new Error("Your JavaScript environement does not support BigInt. Consider adding a polyfill.");
          }
          return BigInt(str.slice("!BigInt:".length));
        }
      }),
      ts2({
        is: (val) => val instanceof RegExp,
        match: (str) => str.startsWith("!RegExp:"),
        serialize: (val) => "!RegExp:" + val.toString(),
        deserialize: (str) => {
          str = str.slice("!RegExp:".length);
          const args = str.match(/\/(.*)\/(.*)?/);
          const pattern = args[1];
          const flags2 = args[2];
          return new RegExp(pattern, flags2);
        }
      }),
      ts2({
        is: (val) => val instanceof Map,
        match: (str) => str.startsWith("!Map:"),
        serialize: (val, serializer) => "!Map:" + serializer(Array.from(val.entries())),
        deserialize: (str, deserializer) => new Map(deserializer(str.slice("!Map:".length)))
      }),
      ts2({
        is: (val) => val instanceof Set,
        match: (str) => str.startsWith("!Set:"),
        serialize: (val, serializer) => "!Set:" + serializer(Array.from(val.values())),
        deserialize: (str, deserializer) => new Set(deserializer(str.slice("!Set:".length)))
      }),
      // Avoid collisions with the special strings defined above
      ts2({
        is: (val) => typeof val === "string" && val.startsWith("!"),
        match: (str) => str.startsWith("!"),
        serialize: (val) => "!" + val,
        deserialize: (str) => str.slice(1)
      })
    ];
    exports.types = types;
    function ts2(t13) {
      return t13;
    }
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isReactElement.js
var require_isReactElement = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isReactElement.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isReactElement = void 0;
    function isReactElement2(value) {
      return typeof value === "object" && value !== null && String(value["$$typeof"]) === "Symbol(react.element)";
    }
    exports.isReactElement = isReactElement2;
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isCallable.js
var require_isCallable = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isCallable.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isCallable = void 0;
    function isCallable3(thing) {
      return thing instanceof Function || typeof thing === "function";
    }
    exports.isCallable = isCallable3;
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isObject.js
var require_isObject = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/isObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isObject = void 0;
    function isObject5(value) {
      if (typeof value !== "object" || value === null) {
        return false;
      }
      if (Array.isArray(value)) {
        return false;
      }
      return true;
    }
    exports.isObject = isObject5;
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/replacerWithPath.js
var require_replacerWithPath = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/utils/replacerWithPath.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.replacerWithPath = void 0;
    function replacerWithPath(replacer) {
      const pathMap = /* @__PURE__ */ new WeakMap();
      return function(key, value) {
        var _a;
        const pathPrevious = (_a = pathMap.get(this)) !== null && _a !== void 0 ? _a : [];
        const path = [...pathPrevious];
        if (key !== "") {
          const pathEntry = !Array.isArray(this) ? key : parseInt(key, 10);
          path.push(pathEntry);
        }
        if (isIterable(value))
          pathMap.set(value, path);
        return replacer.call(this, key, value, path);
      };
    }
    exports.replacerWithPath = replacerWithPath;
    function isIterable(value) {
      return value === Object(value);
    }
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/stringify.js
var require_stringify = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/stringify.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isJsonSerializerError = exports.stringify = void 0;
    var types_1 = require_types();
    var isReactElement_1 = require_isReactElement();
    var isCallable_1 = require_isCallable();
    var isObject_1 = require_isObject();
    var replacerWithPath_1 = require_replacerWithPath();
    function stringify3(value, {
      forbidReactElements,
      space,
      valueName,
      sortObjectKeys,
      // Used by Vike: https://github.com/vikejs/vike/blob/b4ba6b70e6bdc2e1f460c0d2e4c3faae5d0a733c/vike/node/plugin/plugins/importUserCode/v1-design/getConfigValuesSerialized.ts#L78
      replacer: replacerUserProvided
    } = {}) {
      const serializer = (val) => JSON.stringify(val, (0, replacerWithPath_1.replacerWithPath)(replacer), space);
      return serializer(value);
      function replacer(key, value2, path) {
        {
          const ret = replacerUserProvided === null || replacerUserProvided === void 0 ? void 0 : replacerUserProvided.call(this, key, value2);
          if (ret)
            return ret.replacement;
        }
        if (forbidReactElements && (0, isReactElement_1.isReactElement)(value2)) {
          throw genErr({
            value: value2,
            valueType: "React element",
            path,
            rootValueName: valueName
          });
        }
        if ((0, isCallable_1.isCallable)(value2)) {
          const functionName = value2.name;
          throw genErr({
            value: value2,
            valueType: "function",
            path,
            rootValueName: valueName,
            problematicValueName: path.length === 0 ? functionName : void 0
          });
        }
        const valueOriginal = this[key];
        for (const { is: is2, serialize: serialize2 } of types_1.types.slice().reverse()) {
          if (is2(valueOriginal)) {
            return serialize2(valueOriginal, serializer);
          }
        }
        if (sortObjectKeys && (0, isObject_1.isObject)(value2)) {
          const copy2 = {};
          Object.keys(value2).sort().forEach((key2) => {
            copy2[key2] = value2[key2];
          });
          value2 = copy2;
        }
        return value2;
      }
    }
    exports.stringify = stringify3;
    function genErr({ value, valueType, path, rootValueName, problematicValueName }) {
      const subjectName = getSubjectName({ path, rootValueName, problematicValueName });
      const messageCore = `cannot serialize ${subjectName} because it's a ${valueType}`;
      const err = new Error(`[@brillout/json-serializer](https://github.com/brillout/json-serializer) ${messageCore}.`);
      const pathString = getPathString(path, true);
      const errAddendum = {
        [stamp3]: true,
        messageCore,
        value,
        path,
        pathString,
        subjectName
      };
      Object.assign(err, errAddendum);
      return err;
    }
    var stamp3 = "_isJsonSerializerError";
    function isJsonSerializerError2(thing) {
      return (0, isObject_1.isObject)(thing) && thing[stamp3] === true;
    }
    exports.isJsonSerializerError = isJsonSerializerError2;
    function getSubjectName({ path, rootValueName, problematicValueName }) {
      const pathString = getPathString(path, !rootValueName);
      let subjectName;
      if (!pathString) {
        subjectName = rootValueName || problematicValueName || "value";
      } else {
        if (problematicValueName) {
          subjectName = problematicValueName + " at ";
        } else {
          subjectName = "";
        }
        subjectName = subjectName + (rootValueName || "") + pathString;
      }
      return subjectName;
    }
    function getPathString(path, canBeFirstKey) {
      const pathString = path.map((key, i11) => {
        if (typeof key === "number") {
          return `[${key}]`;
        }
        if (i11 === 0 && canBeFirstKey && isKeyDotNotationCompatible2(key)) {
          return key;
        }
        return getPropAccessNotation2(key);
      }).join("");
      return pathString;
    }
    function getPropAccessNotation2(key) {
      return typeof key === "string" && isKeyDotNotationCompatible2(key) ? `.${key}` : `[${JSON.stringify(key)}]`;
    }
    function isKeyDotNotationCompatible2(key) {
      return /^[a-z0-9\$_]+$/i.test(key);
    }
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/addIs404ToPageProps.js
function addIs404ToPageProps(pageContext) {
  assertIs404(pageContext);
  addIs404(pageContext);
}
function assertIs404(pageContext) {
  if (isErrorPage(pageContext.pageId, pageContext._pageConfigs)) {
    assert(hasProp(pageContext, "is404", "boolean"));
  }
}
function addIs404(pageContext) {
  if (pageContext.is404 === void 0 || pageContext.is404 === null)
    return;
  const pageProps = pageContext.pageProps || {};
  if (!isObject(pageProps)) {
    assertWarning2(false, "pageContext.pageProps should be an object", { showStackTrace: true, onlyOnce: true });
    return;
  }
  pageProps.is404 = pageProps.is404 || pageContext.is404;
  pageContext.pageProps = pageProps;
}
var init_addIs404ToPageProps = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/addIs404ToPageProps.js"() {
    init_utils();
    init_error_page();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/NOT_SERIALIZABLE.js
var NOT_SERIALIZABLE;
var init_NOT_SERIALIZABLE = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/NOT_SERIALIZABLE.js"() {
    NOT_SERIALIZABLE = "__VIKE__NOT_SERIALIZABLE__";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/misc/pageContextInitIsPassedToClient.js
var pageContextInitIsPassedToClient;
var init_pageContextInitIsPassedToClient = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/misc/pageContextInitIsPassedToClient.js"() {
    pageContextInitIsPassedToClient = "_pageContextInitIsPassedToClient";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/misc/isServerSideError.js
var isServerSideError;
var init_isServerSideError = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/misc/isServerSideError.js"() {
    isServerSideError = "_isServerSideError";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/serializePageContextClientSide.js
function serializePageContextClientSide(pageContext) {
  const passToClient = getPassToClient(pageContext);
  const pageContextClient = applyPassToClient(passToClient, pageContext);
  if (passToClient.some((prop) => getPropVal(pageContext._pageContextInit, prop))) {
    pageContextClient[pageContextInitIsPassedToClient] = true;
  }
  let pageContextSerialized;
  try {
    pageContextSerialized = serialize(pageContextClient);
  } catch (err) {
    const h8 = (s37) => picocolors_default.cyan(s37);
    let hasWarned = false;
    const propsNonSerializable = [];
    passToClient.forEach((prop) => {
      const res = getPropVal(pageContext, prop);
      if (!res)
        return;
      const { value } = res;
      const varName = `pageContext${getPropKeys(prop).map(getPropAccessNotation).join("")}`;
      try {
        serialize(value, varName);
      } catch (err2) {
        propsNonSerializable.push(prop);
        if (prop === "_configFromHook") {
          let pathString = "";
          if ((0, import_stringify.isJsonSerializerError)(err2)) {
            pathString = err2.pathString;
          }
          assertUsage(false, `Cannot serialize config ${h8(pathString)} set by useConfig(), see https://vike.dev/useConfig#serialization-error`);
        }
        let msg = [
          `${h8(varName)} can't be serialized and, therefore, can't be passed to the client side.`,
          `Make sure ${h8(varName)} is serializable, or remove ${h8(JSON.stringify(prop))} from ${h8("passToClient")}.`
        ].join(" ");
        if ((0, import_stringify.isJsonSerializerError)(err2)) {
          msg = `${msg} Serialization error: ${err2.messageCore}.`;
        } else {
          console.warn("Serialization error:");
          console.warn(err2);
          msg = `${msg} The serialization failed because of the error printed above.`;
        }
        assertWarning2(false, msg, { onlyOnce: false });
        hasWarned = true;
      }
    });
    assert(hasWarned);
    propsNonSerializable.forEach((prop) => {
      pageContextClient[getPropKeys(prop)[0]] = NOT_SERIALIZABLE;
    });
    try {
      pageContextSerialized = serialize(pageContextClient);
    } catch (err2) {
      assert(false);
    }
  }
  return pageContextSerialized;
}
function serialize(value, varName) {
  return (0, import_stringify.stringify)(value, { forbidReactElements: true, valueName: varName });
}
function getPassToClient(pageContext) {
  let passToClient = [...pageContext._passToClient, ...PASS_TO_CLIENT];
  if (isErrorPage(pageContext.pageId, pageContext._pageConfigs)) {
    assert(hasProp(pageContext, "is404", "boolean"));
    addIs404ToPageProps(pageContext);
    passToClient.push(...PASS_TO_CLIENT_ERROR_PAGE);
  }
  passToClient = unique(passToClient);
  return passToClient;
}
function serializePageContextAbort(pageContext) {
  assert(pageContext._urlRedirect || pageContext._urlRewrite || pageContext.abortStatusCode);
  assert(pageContext._abortCall);
  assert(pageContext._abortCaller);
  delete pageContext._abortCaller;
  const unknownProps = Object.keys(pageContext).filter((prop) => ![
    // prettier-ignore
    // biome-ignore format:
    "_abortCall",
    /* Not needed on the client-side
    '_abortCaller',
    */
    "_urlRedirect",
    "_urlRewrite",
    "abortStatusCode",
    "abortReason",
    "is404",
    "pageProps"
  ].includes(prop));
  if (!pageContext._isLegacyRenderErrorPage) {
    assert(unknownProps.length === 0);
  } else {
    assertWarning2(unknownProps.length === 0, [
      "The following pageContext values won't be available on the client-side:",
      unknownProps.map((p13) => `  pageContext[${JSON.stringify(p13)}]`),
      "Use `throw render()` instead of `throw RenderErrorPage()`"
    ].join("\n"), {
      onlyOnce: false
    });
  }
  return serialize(pageContext);
}
function applyPassToClient(passToClient, pageContext) {
  const pageContextClient = {};
  passToClient.forEach((prop) => {
    const res = getPropVal(pageContext, prop);
    if (!res)
      return;
    const { value } = res;
    setPropVal(pageContextClient, prop, value);
  });
  return pageContextClient;
}
function getPropVal(obj, prop) {
  const keys3 = getPropKeys(prop);
  let value = obj;
  for (const key of keys3) {
    if (isObject(value) && key in value) {
      value = value[key];
    } else {
      return null;
    }
  }
  return { value };
}
function setPropVal(obj, prop, val) {
  const keys3 = getPropKeys(prop);
  let currentObj = obj;
  for (let i11 = 0; i11 <= keys3.length - 2; i11++) {
    const key = keys3[i11];
    if (!(key in currentObj)) {
      currentObj[key] = {};
    }
    if (!isObject(currentObj[key])) {
      return;
    }
    currentObj = currentObj[key];
  }
  const finalKey = keys3[keys3.length - 1];
  currentObj[finalKey] = val;
}
function getPropKeys(prop) {
  return prop.split(/(?<!\\)\./).map((key) => key.replace(/\\\./g, "."));
}
var import_stringify, PASS_TO_CLIENT, PASS_TO_CLIENT_ERROR_PAGE;
var init_serializePageContextClientSide = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/serializePageContextClientSide.js"() {
    import_stringify = __toESM(require_stringify(), 1);
    init_utils3();
    init_error_page();
    init_addIs404ToPageProps();
    init_picocolors();
    init_NOT_SERIALIZABLE();
    init_pageContextInitIsPassedToClient();
    init_isServerSideError();
    PASS_TO_CLIENT = [
      "abortReason",
      "_urlRewrite",
      "_urlRedirect",
      "abortStatusCode",
      "_abortCall",
      /* Not needed on the client-side
      '_abortCaller',
      */
      pageContextInitIsPassedToClient,
      "pageId",
      "routeParams",
      "data"
      // for data() hook
    ];
    PASS_TO_CLIENT_ERROR_PAGE = ["pageProps", "is404", isServerSideError];
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/sanitizeJson.js
function sanitizeJson(unsafe) {
  const safe = unsafe.replace(/</g, "\\u003c");
  return safe;
}
var init_sanitizeJson = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/sanitizeJson.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/inferHtmlTags.js
function inferPreloadTag(pageAsset) {
  const { src, assetType, mediaType } = pageAsset;
  const rel = getRel(pageAsset);
  const attributes = [
    `rel="${rel}"`,
    `href="${src}"`,
    !assetType ? null : `as="${assetType}"`,
    !mediaType ? null : `type="${mediaType}"`,
    // `crossorigin` is needed for fonts, see https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload#cors-enabled_fetches
    !isCrossOrigin(pageAsset) ? null : "crossorigin"
  ].filter(Boolean).join(" ");
  return `<link ${attributes}>`;
}
function inferAssetTag(pageAsset) {
  const { src, assetType, mediaType } = pageAsset;
  if (assetType === "script") {
    assert(mediaType === "text/javascript");
    return `<script src="${src}" ${scriptAttrs}></script>`;
  }
  if (assetType === "style") {
    return `<link rel="stylesheet" type="text/css" href="${src}">`;
  }
  assert(false, { pageAsset });
}
function inferEarlyHintLink(pageAsset) {
  const { src, assetType } = pageAsset;
  const rel = getRel(pageAsset);
  return [`<${src}>`, `rel=${rel}`, !assetType ? null : `as=${assetType}`].filter(Boolean).join("; ");
}
function getRel({ assetType }) {
  if (assetType === "script") {
    return "modulepreload";
  }
  return "preload";
}
function isCrossOrigin({ src, assetType }) {
  return assetType === "font" || src.startsWith("http://") || src.startsWith("https://");
}
var scriptAttrs;
var init_inferHtmlTags = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/inferHtmlTags.js"() {
    init_utils3();
    scriptAttrs = 'type="module" async';
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/mergeScriptTags.js
function mergeScriptTags(scriptTagsHtml) {
  let scriptTag = "";
  const scripts = parseScripts(scriptTagsHtml);
  {
    const scriptsModule = scripts.filter(({ isModule }) => isModule);
    if (scriptsModule.length === 1) {
      scriptTag += scriptsModule[0].outerHtml;
    } else {
      const contents = [];
      scriptsModule.forEach(({ src, innerHtml }) => {
        const hasInnerHtml = !!innerHtml.trim();
        if (src) {
          assert(!hasInnerHtml);
          contents.push(`import ${JSON.stringify(src)};`);
        } else if (hasInnerHtml) {
          innerHtml = innerHtml.split("\n").filter(Boolean).join("\n");
          contents.push(innerHtml);
        }
      });
      if (contents.length > 0) {
        scriptTag += `<script ${scriptAttrs}>
${contents.join("\n")}
</script>`;
      }
    }
  }
  {
    const scriptsES5 = scripts.filter(({ isModule }) => !isModule);
    scriptsES5.forEach(({ outerHtml }) => {
      scriptTag += outerHtml;
    });
  }
  return scriptTag;
}
function parseScripts(htmlString) {
  const scripts = [];
  let match;
  while (match = scriptRE.exec(htmlString)) {
    const [outerHtml, openTag, innerHtml] = match;
    assert(outerHtml && openTag && innerHtml !== void 0);
    let isModule = false;
    {
      const typeMatch = openTag.match(typeRE);
      const type = typeMatch && (typeMatch[1] || typeMatch[2] || typeMatch[3]);
      isModule = type === "module";
    }
    let src = null;
    {
      const srcMatch = openTag.match(srcRE);
      src = srcMatch && (srcMatch[1] || srcMatch[2] || srcMatch[3]) || "";
    }
    scripts.push({ isModule, src, innerHtml, outerHtml });
  }
  return scripts;
}
var scriptRE, srcRE, typeRE;
var init_mergeScriptTags = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/mergeScriptTags.js"() {
    init_utils3();
    init_inferHtmlTags();
    scriptRE = /(<script\b(?:\s[^>]*>|>))(.*?)<\/script>/gims;
    srcRE = /\bsrc\s*=\s*(?:"([^"]+)"|'([^']+)'|([^\s'">]+))/im;
    typeRE = /\btype\s*=\s*(?:"([^"]+)"|'([^']+)'|([^\s'">]+))/im;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/helpers.js
function getPageConfig(pageId, pageConfigs) {
  const pageConfig = pageConfigs.find((p13) => p13.pageId === pageId);
  assert(pageConfigs.length > 0);
  assert(pageConfig);
  return pageConfig;
}
function getConfigValueFilePathToShowToUser(definedAtData) {
  if (!definedAtData || isArray(definedAtData) || definedAtData.definedBy)
    return null;
  const { filePathToShowToUser } = definedAtData;
  assert(filePathToShowToUser);
  return filePathToShowToUser;
}
function getHookFilePathToShowToUser(definedAtData) {
  const filePathToShowToUser = getConfigValueFilePathToShowToUser(definedAtData);
  assert(filePathToShowToUser);
  return filePathToShowToUser;
}
var init_helpers = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/helpers.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getExportPath.js
function getExportPath(fileExportPathToShowToUser, configName) {
  if (!fileExportPathToShowToUser)
    return null;
  let [exportName, ...exportObjectPath] = fileExportPathToShowToUser;
  if (!exportName)
    return null;
  if (exportObjectPath.length === 0 && ["*", "default", configName].includes(exportName))
    return null;
  assert(exportName !== "*");
  let prefix2 = "";
  let suffix = "";
  if (exportName === "default") {
    prefix2 = "export default";
  } else {
    prefix2 = "export";
    exportObjectPath = [exportName, ...exportObjectPath];
  }
  exportObjectPath.forEach((prop) => {
    prefix2 = `${prefix2} { ${prop}`;
    suffix = ` }${suffix}`;
  });
  const exportPath = prefix2 + suffix;
  return exportPath;
}
var init_getExportPath = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getExportPath.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigDefinedAt.js
function getConfigDefinedAt(sentenceBegin, configName, definedAtData) {
  return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;
}
function getConfigDefinedAtOptional(sentenceBegin, configName, definedAtData) {
  if (!definedAtData) {
    return `${begin(sentenceBegin, configName)} internally`;
  } else {
    return `${begin(sentenceBegin, configName)} at ${getDefinedAtString(definedAtData, configName)}`;
  }
}
function begin(sentenceBegin, configName) {
  return `${sentenceBegin} ${picocolors_default.cyan(configName)} defined`;
}
function getDefinedAtString(definedAtData, configName) {
  let files;
  if (isArray(definedAtData)) {
    files = definedAtData;
  } else {
    files = [definedAtData];
  }
  assert(files.length >= 1);
  const definedAtString = files.map((definedAt) => {
    if (definedAt.definedBy)
      return getDefinedByString(definedAt, configName);
    const { filePathToShowToUser, fileExportPathToShowToUser } = definedAt;
    let s37 = filePathToShowToUser;
    const exportPath = getExportPath(fileExportPathToShowToUser, configName);
    if (exportPath) {
      s37 = `${s37} > ${picocolors_default.cyan(exportPath)}`;
    }
    return s37;
  }).join(" / ");
  return definedAtString;
}
function getDefinedByString(definedAt, configName) {
  if (definedAt.definedBy === "api") {
    return `API call ${picocolors_default.cyan(`${definedAt.operation}({ vikeConfig: { ${configName} } })`)}`;
  }
  const { definedBy } = definedAt;
  if (definedBy === "cli") {
    return `CLI option ${picocolors_default.cyan(`--${configName}`)}`;
  }
  if (definedBy === "env") {
    return `environment variable ${picocolors_default.cyan(`VIKE_CONFIG="{${configName}}"`)}`;
  }
  checkType(definedBy);
  assert(false);
}
var init_getConfigDefinedAt = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigDefinedAt.js"() {
    init_utils();
    init_picocolors();
    init_getExportPath();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigValueTyped.js
function getConfigValueTyped(configValue, configName, type) {
  const { value, definedAtData } = configValue;
  if (type)
    assertConfigValueType(value, type, configName, definedAtData);
  return configValue;
}
function assertConfigValueType(value, type, configName, definedAtData) {
  assert(value !== null);
  const typeActual = typeof value;
  if (typeActual === type)
    return;
  const valuePrintable = getValuePrintable(value);
  const problem = valuePrintable !== null ? `value ${picocolors_default.cyan(valuePrintable)}` : `type ${picocolors_default.cyan(typeActual)}`;
  const configDefinedAt = getConfigDefinedAtOptional("Config", configName, definedAtData);
  const errMsg = `${configDefinedAt} has an invalid ${problem}: it should be a ${picocolors_default.cyan(type)} instead`;
  assertUsage(false, errMsg);
}
var init_getConfigValueTyped = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigValueTyped.js"() {
    init_utils();
    init_picocolors();
    init_getConfigDefinedAt();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigValueRuntime.js
function getConfigValueRuntime(pageConfig, configName, type) {
  const configValue = pageConfig.configValues[configName];
  if (!configValue)
    return null;
  return getConfigValueTyped(configValue, configName, type);
}
var init_getConfigValueRuntime = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getConfigValueRuntime.js"() {
    init_getConfigValueTyped();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/getHtmlTags.js
async function getHtmlTags(pageContext, streamFromReactStreamingPackage, injectFilter, pageAssets, viteDevScript, isStream2) {
  assert([true, false].includes(pageContext._isHtmlOnly));
  const isHtmlOnly = pageContext._isHtmlOnly;
  const { isProduction } = pageContext._globalContext;
  const injectScriptsAt = getInjectScriptsAt(pageContext.pageId, pageContext._pageConfigs);
  const injectFilterEntries = [];
  pageAssets.filter((asset) => {
    if (asset.isEntry && asset.assetType === "script") {
      return false;
    }
    return true;
  }).forEach((asset) => {
    const inject = (() => {
      if (!isProduction) {
        return "HTML_BEGIN";
      }
      if (asset.assetType === "style") {
        return "HTML_BEGIN";
      }
      if (asset.assetType === "font") {
        return !isFontFallback(asset, injectFilterEntries) ? "HTML_BEGIN" : false;
      }
      if (asset.assetType === "script") {
        if (isHtmlOnly)
          return false;
        return "HTML_END";
      }
      return false;
    })();
    const entry = {
      ...asset,
      inject,
      // @ts-ignore
      [stamp]: true
    };
    injectFilterEntries.push(entry);
  });
  assertInjectFilterEntries(injectFilterEntries);
  if (injectFilter && isProduction) {
    Object.seal(injectFilterEntries);
    Object.values(injectFilterEntries).forEach((entry) => freezePartial(entry, { inject: (val) => val === false || val === "HTML_BEGIN" || val === "HTML_END" }));
    const res = injectFilter(injectFilterEntries);
    assertUsage(res === void 0, `injectFilter() should return ${picocolors_default.cyan("undefined")}, see https://vike.dev/injectFilter`);
    assertInjectFilterUsage(injectFilterEntries);
  }
  const htmlTags = [];
  injectFilterEntries.filter((asset) => asset.assetType !== "script" && asset.inject).forEach((asset) => {
    if (!asset.inject)
      return;
    const htmlTag = asset.isEntry ? inferAssetTag(asset) : inferPreloadTag(asset);
    htmlTags.push({ htmlTag, position: asset.inject });
  });
  const positionJavaScriptDefault = "HTML_END";
  const positionJavaScriptEntry = (() => {
    if (injectScriptsAt !== null) {
      if (pageContext._pageContextPromise) {
        assertWarning2(injectScriptsAt === "HTML_END" || !isStream2, `You're setting injectScriptsAt to ${picocolors_default.code(JSON.stringify(injectScriptsAt))} while using HTML streaming with a pageContext promise (https://vike.dev/streaming#initial-data-after-stream-end) which is contradictory: the pageContext promise is skipped.`, { onlyOnce: true });
      }
      if (injectScriptsAt === "HTML_STREAM" && !isStream2) {
        return positionJavaScriptDefault;
      }
      return injectScriptsAt;
    }
    if (pageContext._pageContextPromise) {
      return positionJavaScriptDefault;
    }
    if (streamFromReactStreamingPackage && !streamFromReactStreamingPackage.hasStreamEnded()) {
      return "HTML_STREAM";
    }
    return positionJavaScriptDefault;
  })();
  if (pageContext._pageContextPromise && streamFromReactStreamingPackage) {
    assertWarning2(false, "We recommend against using HTML streaming and a pageContext promise (https://vike.dev/streaming#initial-data-after-stream-end) at the same time, because progressive hydration (https://vike.dev/streaming#progressive-rendering) won't work.", { onlyOnce: true });
  }
  if (!isHtmlOnly) {
    htmlTags.push({
      htmlTag: () => (
        // Needs to be called after resolvePageContextPromise()
        getPageContextJsonScriptTag(pageContext)
      ),
      position: positionJavaScriptEntry
    });
  }
  const scriptEntry = mergeScriptEntries(pageAssets, viteDevScript);
  if (scriptEntry) {
    htmlTags.push({
      htmlTag: scriptEntry,
      position: positionJavaScriptEntry
    });
  }
  injectFilterEntries.filter((asset) => asset.assetType === "script").forEach((asset) => {
    assert(!asset.isEntry);
    const htmlTag = inferPreloadTag(asset);
    if (!asset.inject)
      return;
    const position = asset.inject === "HTML_END" ? positionJavaScriptEntry : asset.inject;
    htmlTags.push({ htmlTag, position });
  });
  return htmlTags;
}
function mergeScriptEntries(pageAssets, viteDevScript) {
  const scriptEntries = pageAssets.filter((pageAsset) => pageAsset.isEntry && pageAsset.assetType === "script");
  const scriptTagsHtml = `${viteDevScript}${scriptEntries.map((asset) => inferAssetTag(asset)).join("")}`;
  const scriptTag = mergeScriptTags(scriptTagsHtml);
  return scriptTag;
}
function getPageContextJsonScriptTag(pageContext) {
  const pageContextSerialized = sanitizeJson(serializePageContextClientSide(pageContext));
  const htmlTag = `<script id="vike_pageContext" type="application/json">${pageContextSerialized}</script>`;
  pageContext._pageContextHtmlTag = htmlTag;
  return htmlTag;
}
function assertInjectFilterEntries(injectFilterEntries) {
  try {
    checkForWrongUsage(injectFilterEntries);
  } catch (err) {
    if (err?.message.includes("[Wrong Usage]")) {
      assert(false);
    }
    throw err;
  }
}
function assertInjectFilterUsage(injectFilterEntries) {
  checkForWrongUsage(injectFilterEntries);
  checkForWarnings(injectFilterEntries);
}
function checkForWrongUsage(injectFilterEntries) {
  injectFilterEntries.forEach((entry, i11) => {
    assertUsage(isObject(entry), `[injectFilter()] Entry ${i11} isn't an object`);
    assertUsage(typeof entry.src === "string", `[injectFilter()] Entry ${i11} is missing property ${picocolors_default.cyan("src")}`);
    assertUsage(entry[stamp] === true, `[injectFilter()] Entry ${i11} (${entry.src}) isn't the original object, see https://vike.dev/injectFilter`);
    assert([false, "HTML_BEGIN", "HTML_END"].includes(entry.inject));
    assert(entry.assetType === null || typeof entry.assetType === "string");
    assert(entry.mediaType === null || typeof entry.mediaType === "string");
    assert(typeof entry.isEntry === "boolean");
    assert(Object.keys(entry).length === 6);
  });
}
function checkForWarnings(injectFilterEntries) {
  injectFilterEntries.forEach((a12) => {
    if (a12.assetType === "style" && a12.isEntry) {
      assertWarning2(a12.inject, `[injectFilter()] We recommend against not injecting ${a12.src}`, {
        onlyOnce: true
      });
    }
    if (a12.assetType === "script") {
      assertWarning2(a12.inject, `[injectFilter()] We recommend against not preloading JavaScript (${a12.src})`, {
        onlyOnce: true
      });
    }
  });
}
function getInjectScriptsAt(pageId, pageConfigs) {
  if (pageConfigs.length === 0)
    return null;
  const pageConfig = getPageConfig(pageId, pageConfigs);
  const configValue = getConfigValueRuntime(pageConfig, "injectScriptsAt");
  if (!configValue)
    return null;
  const injectScriptsAt = configValue.value;
  assert(configValue.definedAtData);
  const configDefinedAt = getConfigDefinedAt("Config", "injectScriptsAt", configValue.definedAtData);
  assertUsage(injectScriptsAt === null || injectScriptsAt === "HTML_BEGIN" || injectScriptsAt === "HTML_END" || injectScriptsAt === "HTML_STREAM", `${configDefinedAt} has an invalid value`);
  return injectScriptsAt;
}
var stamp;
var init_getHtmlTags = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/getHtmlTags.js"() {
    init_isFontFallback();
    init_utils3();
    init_serializePageContextClientSide();
    init_sanitizeJson();
    init_inferHtmlTags();
    init_mergeScriptTags();
    init_helpers();
    init_getConfigValueRuntime();
    init_picocolors();
    init_getConfigDefinedAt();
    stamp = "__injectFilterEntry";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/getViteDevScript.js
async function getViteDevScript(pageContext) {
  const globalContext = pageContext._globalContext;
  if (globalContext.isProduction) {
    return "";
  }
  const { viteDevServer } = globalContext;
  const fakeHtmlBegin = "<html> <head>";
  const fakeHtmlEnd = "</head><body></body></html>";
  let fakeHtml = fakeHtmlBegin + fakeHtmlEnd;
  fakeHtml = await viteDevServer.transformIndexHtml("/", fakeHtml);
  assertUsage(!fakeHtml.includes("vite-plugin-pwa"), `The HTML transformer of ${picocolors_default.cyan("vite-plugin-pwa")} cannot be applied, see workaround at https://github.com/vikejs/vike/issues/388#issuecomment-1199280084`);
  assertUsage(!fakeHtml.startsWith(fakeHtmlBegin.replace(" ", "")), `Vite plugins that minify the HTML cannot be applied, see https://github.com/vikejs/vike/issues/224`);
  assertUsage(fakeHtml.startsWith(fakeHtmlBegin) && fakeHtml.endsWith(fakeHtmlEnd), `You are using a Vite Plugin that transforms the HTML in a way that conflicts with Vike. ${reachOutCTA}`);
  const viteInjection = fakeHtml.slice(fakeHtmlBegin.length, -1 * fakeHtmlEnd.length);
  assert(viteInjection.includes("script"));
  assertWarning2(!viteInjection.includes("import("), `Unexpected Vite injected HMR code. ${reachOutCTA}`, {
    onlyOnce: true
  });
  const viteDevScript = viteInjection;
  return viteDevScript;
}
var reachOutCTA;
var init_getViteDevScript = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/getViteDevScript.js"() {
    init_utils3();
    init_picocolors();
    reachOutCTA = "Create a new GitHub issue to discuss a solution.";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets.js
async function injectHtmlTagsToString(htmlParts, pageContext, injectFilter) {
  const pageAssets = await pageContext.__getPageAssets();
  const viteDevScript = await getViteDevScript(pageContext);
  const htmlTags = await getHtmlTags(pageContext, null, injectFilter, pageAssets, viteDevScript, false);
  let htmlString = htmlPartsToString(htmlParts, pageAssets);
  htmlString = injectToHtmlBegin(htmlString, htmlTags);
  htmlString = injectToHtmlEnd(htmlString, htmlTags);
  assert(htmlTags.filter((snippet) => snippet.position === "HTML_STREAM").length === 0);
  return htmlString;
}
function injectHtmlTagsToStream(pageContext, streamFromReactStreamingPackage, injectFilter) {
  let htmlTags;
  return {
    injectAtStreamBegin,
    injectAtStreamAfterFirstChunk,
    injectAtStreamEnd
  };
  async function injectAtStreamBegin(htmlPartsBegin) {
    const pageAssets = await pageContext.__getPageAssets();
    const viteDevScript = await getViteDevScript(pageContext);
    htmlTags = await getHtmlTags(pageContext, streamFromReactStreamingPackage, injectFilter, pageAssets, viteDevScript, true);
    let htmlBegin = htmlPartsToString(htmlPartsBegin, pageAssets);
    htmlBegin = injectToHtmlBegin(htmlBegin, htmlTags);
    if (streamFromReactStreamingPackage) {
      injectHtmlTagsUsingStream(htmlTags, streamFromReactStreamingPackage);
    }
    return htmlBegin;
  }
  function injectAtStreamAfterFirstChunk() {
    if (streamFromReactStreamingPackage)
      return null;
    assert(htmlTags);
    const tags = htmlTags.filter((h8) => h8.position === "HTML_STREAM");
    if (tags.length === 0)
      return null;
    const htmlFragment = joinHtmlTags(tags);
    return htmlFragment;
  }
  async function injectAtStreamEnd(htmlPartsEnd) {
    assert(htmlTags);
    await resolvePageContextPromise(pageContext);
    const pageAssets = await pageContext.__getPageAssets();
    let htmlEnd = htmlPartsToString(htmlPartsEnd, pageAssets);
    htmlEnd = injectToHtmlEnd(htmlEnd, htmlTags);
    return htmlEnd;
  }
}
function injectToHtmlBegin(htmlBegin, htmlTags) {
  htmlBegin = createHtmlHeadIfMissing(htmlBegin);
  htmlBegin = injectHtmlTags(htmlBegin, htmlTags, "HTML_BEGIN");
  return htmlBegin;
}
function injectToHtmlEnd(htmlEnd, htmlTags) {
  htmlEnd = injectHtmlTags(htmlEnd, htmlTags, "HTML_END");
  return htmlEnd;
}
async function resolvePageContextPromise(pageContext) {
  const pageContextPromise = pageContext._pageContextPromise;
  if (!pageContextPromise) {
    return;
  }
  let pageContextProvidedByUser;
  if (isCallable(pageContextPromise)) {
    pageContextProvidedByUser = await pageContextPromise();
  } else if (isPromise(pageContextPromise)) {
    pageContextProvidedByUser = await pageContextPromise;
  } else {
    assert(false);
  }
  assertPageContextProvidedByUser(pageContextProvidedByUser, pageContext._renderHook);
  Object.assign(pageContext, pageContextProvidedByUser);
}
function htmlPartsToString(htmlParts, pageAssets) {
  let htmlString = "";
  htmlParts.forEach((p13) => {
    htmlString += typeof p13 === "string" ? p13 : p13(pageAssets);
  });
  return htmlString;
}
var init_injectAssets = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets.js"() {
    init_utils3();
    init_assertPageContextProvidedByUser();
    init_injectHtmlTags();
    init_getHtmlTags();
    init_getViteDevScript();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/stream/react-streaming.js
function streamFromReactStreamingPackageToString(stream) {
  if (stream.pipe) {
    return streamPipeNodeToString(stream.pipe);
  }
  if (stream.readable) {
    return streamReadableWebToString(stream.readable);
  }
  assert(false);
}
function isStreamFromReactStreamingPackage(thing) {
  if (hasProp(thing, "injectToStream", "function")) {
    assertUsage(hasProp(thing, "hasStreamEnded", "function"), isVikeReactApp() ? (
      //
      "Update vike-react to its latest version"
    ) : "Update react-streaming to its latest version");
    return true;
  }
  return false;
}
function getStreamOfReactStreamingPackage(stream) {
  if (stream.pipe) {
    return { __streamPipeNode: stream.pipe };
  }
  if (stream.readable) {
    return stream.readable;
  }
  assert(false);
}
var init_react_streaming = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/stream/react-streaming.js"() {
    init_utils3();
    init_stream();
  }
});

// node_modules/.pnpm/@brillout+import@0.2.6/node_modules/@brillout/import/dist/esm/index.js
function import_(id5) {
  id5 = fixWindowsBug(id5);
  return import(
    /*webpackIgnore: true*/
    id5
  );
}
function fixWindowsBug(id5) {
  if (process.platform === "win32" && isAbsolute(id5) && !id5.startsWith(prefix)) {
    return prefix + id5;
  } else {
    return id5;
  }
}
function isAbsolute(path) {
  return /^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/.test(path);
}
var prefix;
var init_esm = __esm({
  "node_modules/.pnpm/@brillout+import@0.2.6/node_modules/@brillout/import/dist/esm/index.js"() {
    prefix = "file://";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/stream.js
function isStreamReadableWeb(thing) {
  return typeof ReadableStream !== "undefined" && thing instanceof ReadableStream;
}
function isStreamWritableWeb(thing) {
  return typeof WritableStream !== "undefined" && thing instanceof WritableStream;
}
function isStreamReadableNode(thing) {
  if (isStreamReadableWeb(thing)) {
    return false;
  }
  return hasProp(thing, "read", "function");
}
function isStreamWritableNode(thing) {
  if (isStreamWritableWeb(thing)) {
    return false;
  }
  return hasProp(thing, "write", "function");
}
async function streamReadableNodeToString(readableNode) {
  const chunks = [];
  return new Promise((resolve, reject) => {
    readableNode.on("data", (chunk2) => chunks.push(Buffer.from(chunk2)));
    readableNode.on("error", (err) => reject(err));
    readableNode.on("end", () => resolve(Buffer.concat(chunks).toString("utf8")));
  });
}
async function streamReadableWebToString(readableWeb) {
  const reader = readableWeb.getReader();
  const { decode: decode2, getClosingChunk } = decodeChunks();
  let str = "";
  while (true) {
    const { done, value } = await reader.read();
    if (done)
      break;
    str += decode2(value);
  }
  str += getClosingChunk();
  return str;
}
async function stringToStreamReadableNode(str) {
  const { Readable } = await loadStreamNodeModule();
  return Readable.from(str);
}
function stringToStreamReadableWeb(str) {
  assertReadableStreamConstructor();
  const readableStream = new ReadableStream({
    start(controller) {
      controller.enqueue(encodeForWebStream(str));
      controller.close();
    }
  });
  return readableStream;
}
function stringToStreamPipeNode(str) {
  return (writable) => {
    writable.write(str);
    writable.end();
  };
}
function stringToStreamPipeWeb(str) {
  return (writable) => {
    const writer = writable.getWriter();
    writer.write(encodeForWebStream(str));
    writer.close();
  };
}
async function streamPipeNodeToString(streamPipeNode) {
  let str = "";
  let resolve;
  let reject;
  const promise = new Promise((resolve_, reject_) => {
    resolve = () => resolve_(str);
    reject = reject_;
  });
  const { Writable } = await loadStreamNodeModule();
  const writable = new Writable({
    write(chunk2, _encoding, callback) {
      const s37 = chunk2.toString();
      assert(typeof s37 === "string");
      str += s37;
      callback();
    },
    final(callback) {
      resolve();
      callback();
    },
    destroy(err) {
      if (err) {
        reject(err);
      } else {
        resolve();
      }
    }
  });
  streamPipeNode(writable);
  return promise;
}
function streamPipeWebToString(streamPipeWeb) {
  const { decode: decode2, getClosingChunk } = decodeChunks();
  let str = "";
  let resolve;
  const promise = new Promise((r8) => resolve = r8);
  const writable = new WritableStream({
    write(chunk2) {
      str += decode2(chunk2);
    },
    close() {
      str += getClosingChunk();
      resolve(str);
    }
  });
  streamPipeWeb(writable);
  return promise;
}
async function getStreamReadableNode(htmlRender) {
  if (typeof htmlRender === "string") {
    return stringToStreamReadableNode(htmlRender);
  }
  if (isStreamReadableNode(htmlRender)) {
    return htmlRender;
  }
  return null;
}
function getStreamReadableWeb(htmlRender) {
  if (typeof htmlRender === "string") {
    return stringToStreamReadableWeb(htmlRender);
  }
  if (isStreamReadableWeb(htmlRender)) {
    return htmlRender;
  }
  if (isStreamPipeWeb(htmlRender)) {
    const streamPipeWeb = getStreamPipeWeb(htmlRender);
    assert(streamPipeWeb);
    const { readable, writable } = new TransformStream();
    streamPipeWeb(writable);
    return readable;
  }
  return null;
}
function pipeToStreamWritableWeb(htmlRender, writable) {
  if (typeof htmlRender === "string") {
    const streamPipeWeb = stringToStreamPipeWeb(htmlRender);
    streamPipeWeb(writable);
    return true;
  }
  if (isStreamReadableWeb(htmlRender)) {
    htmlRender.pipeTo(writable);
    return true;
  }
  if (isStreamPipeWeb(htmlRender)) {
    const streamPipeWeb = getStreamPipeWeb(htmlRender);
    assert(streamPipeWeb);
    streamPipeWeb(writable);
    return true;
  }
  if (isStreamReadableNode(htmlRender) || isStreamPipeNode(htmlRender)) {
    return false;
  }
  checkType(htmlRender);
  assert(false);
}
function pipeToStreamWritableNode(htmlRender, writable) {
  if (typeof htmlRender === "string") {
    const streamPipeNode = stringToStreamPipeNode(htmlRender);
    streamPipeNode(writable);
    return true;
  }
  if (isStreamReadableNode(htmlRender)) {
    htmlRender.pipe(writable);
    return true;
  }
  if (isStreamPipeNode(htmlRender)) {
    const streamPipeNode = getStreamPipeNode(htmlRender);
    assert(streamPipeNode);
    streamPipeNode(writable);
    return true;
  }
  if (isStreamReadableWeb(htmlRender) || isStreamPipeWeb(htmlRender)) {
    return false;
  }
  checkType(htmlRender);
  assert(false);
}
async function processStream(streamOriginal, { injectStringAtBegin, injectStringAfterFirstChunk, injectStringAtEnd, onErrorWhileStreaming, enableEagerStreaming }) {
  const buffer = [];
  let streamOriginalHasStartedEmitting = false;
  let streamOriginalEnded = false;
  let streamClosed = false;
  let onEndWasCalled = false;
  let isReadyToWrite = false;
  let wrapperCreated = false;
  let shouldFlushStream = false;
  let resolve;
  let reject;
  let promiseHasResolved = false;
  let injectStringAfterFirstChunk_done = false;
  const streamWrapperPromise = new Promise((resolve_, reject_) => {
    resolve = (streamWrapper2) => {
      promiseHasResolved = true;
      resolve_(streamWrapper2);
    };
    reject = (err) => {
      promiseHasResolved = true;
      reject_(err);
    };
  });
  let resolveReadyToWrite;
  const promiseReadyToWrite = new Promise((r8) => resolveReadyToWrite = r8);
  if (injectStringAtBegin) {
    const injectedChunk = await injectStringAtBegin();
    writeStream(injectedChunk);
    flushStream();
  }
  const onStreamDataOrEnd = (cb) => {
    assert(streamOriginalEnded === false);
    streamOriginalHasStartedEmitting = true;
    cb();
    if (wrapperCreated)
      resolvePromise();
  };
  const { streamWrapper, streamWrapperOperations } = await createStreamWrapper({
    streamOriginal,
    onReadyToWrite() {
      debug2("stream begin");
      isReadyToWrite = true;
      flushBuffer();
      resolveReadyToWrite();
    },
    onError(err) {
      if (!promiseHasResolved) {
        reject(err);
      } else {
        onErrorWhileStreaming(err);
      }
    },
    onData(chunk2) {
      onStreamDataOrEnd(() => {
        writeStream(chunk2);
        if (injectStringAfterFirstChunk && !injectStringAfterFirstChunk_done) {
          const injectedChunk = injectStringAfterFirstChunk();
          if (injectedChunk !== null)
            writeStream(injectedChunk);
          injectStringAfterFirstChunk_done = true;
        }
      });
    },
    async onEnd(isCancel) {
      try {
        assert(!onEndWasCalled);
        onEndWasCalled = true;
        debug2("stream end");
        onStreamDataOrEnd(() => {
          streamOriginalEnded = true;
        });
        if (injectStringAtEnd) {
          const injectedChunk = await injectStringAtEnd();
          writeStream(injectedChunk);
        }
        await promiseReadyToWrite;
        assert(isReady());
        flushBuffer();
        streamClosed = true;
        debug2("stream ended");
      } catch (err) {
        if (!isBug(err)) {
          console.error(err);
          assert(false);
        }
        throw err;
      }
    },
    onFlush() {
      flushStream();
    }
  });
  wrapperCreated = true;
  flushBuffer();
  if (!delayStreamStart())
    resolvePromise();
  return streamWrapperPromise;
  function writeStream(chunk2) {
    buffer.push(chunk2);
    flushBuffer();
  }
  function flushBuffer() {
    if (!isReady())
      return;
    assert(!streamClosed);
    buffer.forEach((chunk2) => {
      streamWrapperOperations.writeChunk(chunk2);
    });
    buffer.length = 0;
    if (shouldFlushStream)
      flushStream();
  }
  function resolvePromise() {
    assert(!delayStreamStart());
    assert(wrapperCreated);
    debug2("stream promise resolved");
    resolve(streamWrapper);
  }
  function flushStream() {
    if (!isReady()) {
      shouldFlushStream = true;
      return;
    }
    if (streamWrapperOperations.flushStream === null)
      return;
    streamWrapperOperations.flushStream();
    shouldFlushStream = false;
    debug2("stream flushed");
  }
  function isReady() {
    return isReadyToWrite && // We can't use streamWrapperOperations.writeChunk() if it isn't defined yet
    wrapperCreated && // See comment below
    !delayStreamStart();
  }
  function delayStreamStart() {
    return !enableEagerStreaming && !streamOriginalHasStartedEmitting;
  }
}
async function createStreamWrapper({ streamOriginal, onError, onData, onEnd, onFlush, onReadyToWrite }) {
  if (isStreamFromReactStreamingPackage(streamOriginal)) {
    debug2(`onRenderHtml() hook returned ${picocolors_default.cyan("react-streaming")} result`);
    const stream = getStreamOfReactStreamingPackage(streamOriginal);
    streamOriginal = stream;
  }
  if (isStreamPipeNode(streamOriginal)) {
    debug2("onRenderHtml() hook returned Node.js Stream Pipe");
    let writableOriginal = null;
    const pipeProxy = (writable_) => {
      writableOriginal = writable_;
      debug2("original Node.js Writable received");
      onReadyToWrite();
      if (hasEnded) {
        writableOriginal.end();
      }
    };
    stampPipe(pipeProxy, "node-stream");
    const writeChunk = (chunk2) => {
      assert(writableOriginal);
      writableOriginal.write(chunk2);
      debugWithChunk("data written (Node.js Writable)", chunk2);
    };
    const flushStream = () => {
      assert(writableOriginal);
      if (typeof writableOriginal.flush === "function") {
        writableOriginal.flush();
        debug2("stream flush() performed (Node.js Writable)");
      }
    };
    let hasEnded = false;
    const endStream = () => {
      hasEnded = true;
      if (writableOriginal) {
        writableOriginal.end();
      }
    };
    const { Writable } = await loadStreamNodeModule();
    const writableProxy = new Writable({
      async write(chunk2, _encoding, callback) {
        onData(chunk2);
        callback();
      },
      async destroy(err, callback) {
        if (err) {
          onError(err);
        } else {
          await onEnd();
        }
        callback(err);
        endStream();
      }
    });
    objectAssign(writableProxy, {
      flush: () => {
        onFlush();
      }
    });
    assert(typeof writableProxy.flush === "function");
    const pipeOriginal = getStreamPipeNode(streamOriginal);
    pipeOriginal(writableProxy);
    return { streamWrapper: pipeProxy, streamWrapperOperations: { writeChunk, flushStream } };
  }
  if (isStreamPipeWeb(streamOriginal)) {
    debug2("onRenderHtml() hook returned Web Stream Pipe");
    let writerOriginal = null;
    const pipeProxy = (writableOriginal) => {
      writerOriginal = writableOriginal.getWriter();
      debug2("original Web Writable received");
      (async () => {
        try {
          await writerOriginal.ready;
        } catch (e12) {
        }
        onReadyToWrite();
        if (hasEnded) {
          writerOriginal.close();
        }
      })();
    };
    stampPipe(pipeProxy, "web-stream");
    const writeChunk = (chunk2) => {
      assert(writerOriginal);
      writerOriginal.write(encodeForWebStream(chunk2));
      debugWithChunk("data written (Web Writable)", chunk2);
    };
    const flushStream = null;
    let hasEnded = false;
    const endStream = () => {
      hasEnded = true;
      if (writerOriginal) {
        writerOriginal.close();
      }
    };
    let writableProxy;
    if (typeof ReadableStream !== "function") {
      writableProxy = new WritableStream({
        write(chunk2) {
          onData(chunk2);
        },
        async close() {
          await onEnd();
          endStream();
        },
        abort(err) {
          onError(err);
          endStream();
        }
      });
    } else {
      const { readable, writable } = new TransformStream();
      writableProxy = writable;
      handleReadableWeb(readable, {
        onData,
        onError(err) {
          onError(err);
          endStream();
        },
        async onEnd() {
          await onEnd();
          endStream();
        }
      });
    }
    const pipeOriginal = getStreamPipeWeb(streamOriginal);
    pipeOriginal(writableProxy);
    return { streamWrapper: pipeProxy, streamWrapperOperations: { writeChunk, flushStream } };
  }
  if (isStreamReadableWeb(streamOriginal)) {
    debug2("onRenderHtml() hook returned Web Readable");
    const readableOriginal = streamOriginal;
    let isClosed = false;
    let isCancel = false;
    const closeStream = async () => {
      if (isClosed)
        return;
      isClosed = true;
      await onEnd(isCancel);
      controllerProxy.close();
    };
    let controllerProxy;
    assertReadableStreamConstructor();
    const readableProxy = new ReadableStream({
      start(controller) {
        controllerProxy = controller;
        onReadyToWrite();
        handleReadableWeb(readableOriginal, {
          onData,
          onError(err) {
            onError(err);
            controllerProxy.close();
          },
          async onEnd() {
            await closeStream();
          }
        });
      },
      async cancel(...args) {
        isCancel = true;
        await readableOriginal.cancel(...args);
        await closeStream();
      }
    });
    const writeChunk = (chunk2) => {
      if (
        // If readableOriginal doesn't implement readableOriginal.cancel() then it may still emit data after we close the stream. We therefore need to check whether the steam is closed.
        !isClosed
      ) {
        controllerProxy.enqueue(encodeForWebStream(chunk2));
        debugWithChunk("data written (Web Readable)", chunk2);
      } else {
        debugWithChunk("data emitted but not written (Web Readable)", chunk2);
      }
    };
    const flushStream = null;
    return {
      streamWrapper: readableProxy,
      streamWrapperOperations: { writeChunk, flushStream }
    };
  }
  if (isStreamReadableNode(streamOriginal)) {
    debug2("onRenderHtml() hook returned Node.js Readable");
    const readableOriginal = streamOriginal;
    const { Readable } = await loadStreamNodeModule();
    if (readableOriginal._read === Readable.prototype._read) {
      readableOriginal._read = function() {
      };
    }
    const writeChunk = (chunk2) => {
      readableProxy.push(chunk2);
      debugWithChunk("data written (Node.js Readable)", chunk2);
    };
    const flushStream = null;
    const closeProxy = () => {
      readableProxy.push(null);
    };
    const readableProxy = new Readable({ read() {
    } });
    onReadyToWrite();
    readableOriginal.on("data", (chunk2) => {
      onData(chunk2);
    });
    readableOriginal.on("error", (err) => {
      onError(err);
      closeProxy();
    });
    readableOriginal.on("end", async () => {
      await onEnd();
      closeProxy();
    });
    return {
      streamWrapper: readableProxy,
      streamWrapperOperations: { writeChunk, flushStream }
    };
  }
  assert(false);
}
async function handleReadableWeb(readable, { onData, onError, onEnd }) {
  const reader = readable.getReader();
  while (true) {
    let result;
    try {
      result = await reader.read();
    } catch (err) {
      onError(err);
      return;
    }
    const { value, done } = result;
    if (done) {
      break;
    }
    onData(value);
  }
  await onEnd();
}
function isStream(something) {
  if (isStreamReadableWeb(something) || isStreamReadableNode(something) || isStreamPipeNode(something) || isStreamPipeWeb(something) || isStreamFromReactStreamingPackage(something)) {
    checkType(something);
    return true;
  }
  return false;
}
function getStreamPipeWeb(thing) {
  if (!isStreamPipeWeb(thing)) {
    return null;
  }
  if (isObject(thing)) {
    assert(__streamPipeWeb && thing);
    return thing[__streamPipeWeb];
  } else {
    assert(isCallable(thing) && "isWebStreamPipe" in thing);
    return thing;
  }
}
function isStreamPipeWeb(thing) {
  if (isObject(thing) && __streamPipeWeb in thing) {
    return true;
  }
  if (isCallable(thing) && "isWebStreamPipe" in thing) {
    return true;
  }
  return false;
}
function getStreamPipeNode(thing) {
  if (!isStreamPipeNode(thing)) {
    return null;
  }
  if (isObject(thing)) {
    assert(__streamPipeNode in thing);
    return thing[__streamPipeNode];
  } else {
    assert(isCallable(thing) && "isNodeStreamPipe" in thing);
    return thing;
  }
}
function isStreamPipeNode(thing) {
  if (isObject(thing) && __streamPipeNode in thing) {
    return true;
  }
  if (isCallable(thing) && "isNodeStreamPipe" in thing) {
    return true;
  }
  return false;
}
function stampPipe(pipe3, pipeType) {
  assertUsage(pipeType, `stampPipe(pipe, pipeType): argument ${picocolors_default.cyan("pipeType")} is missing.)`, {
    showStackTrace: true
  });
  assertUsage(["web-stream", "node-stream"].includes(pipeType), `stampPipe(pipe, pipeType): argument ${picocolors_default.cyan("pipeType")} should be either ${picocolors_default.cyan("'web-stream'")} or ${picocolors_default.cyan("'node-stream'")}.`, { showStackTrace: true });
  if (pipeType === "node-stream") {
    Object.assign(pipe3, { isNodeStreamPipe: true });
  } else {
    Object.assign(pipe3, { isWebStreamPipe: true });
  }
}
async function streamToString(stream) {
  if (isStreamReadableWeb(stream)) {
    return await streamReadableWebToString(stream);
  }
  if (isStreamReadableNode(stream)) {
    return await streamReadableNodeToString(stream);
  }
  if (isStreamPipeNode(stream)) {
    return await streamPipeNodeToString(getStreamPipeNode(stream));
  }
  if (isStreamPipeWeb(stream)) {
    return await streamPipeWebToString(getStreamPipeWeb(stream));
  }
  if (isStreamFromReactStreamingPackage(stream)) {
    return await streamFromReactStreamingPackageToString(stream);
  }
  assert(false);
}
function assertReadableStreamConstructor() {
  assertUsage(
    typeof ReadableStream === "function",
    // Error message copied from vue's renderToWebStream() implementation
    "ReadableStream constructor isn't available in the global scope. If the target environment does support web streams, consider using pipeToWebWritable() with an existing WritableStream instance instead."
  );
}
function encodeForWebStream(thing) {
  if (!encoder) {
    encoder = new TextEncoder();
  }
  if (typeof thing === "string") {
    return encoder.encode(thing);
  }
  return thing;
}
async function loadStreamNodeModule() {
  const streamModule = (await import_("stream")).default;
  const { Readable, Writable } = streamModule;
  return { Readable, Writable };
}
function getStreamName(kind, type) {
  let typeName = capitalizeFirstLetter(type);
  if (typeName === "Node") {
    typeName = "Node.js";
  }
  const kindName = capitalizeFirstLetter(kind);
  if (kind !== "pipe") {
    return `a ${kindName} ${typeName} Stream`;
  }
  if (kind === "pipe") {
    return `a ${typeName} Stream Pipe`;
  }
  assert(false);
}
function inferStreamName(stream) {
  if (isStreamReadableWeb(stream)) {
    return getStreamName("readable", "web");
  }
  if (isStreamReadableNode(stream)) {
    return getStreamName("readable", "node");
  }
  if (isStreamPipeNode(stream)) {
    return getStreamName("pipe", "node");
  }
  if (isStreamPipeWeb(stream)) {
    return getStreamName("pipe", "web");
  }
  assert(false);
}
function decodeChunks() {
  const decoder = new TextDecoder();
  const decode2 = (chunk2) => {
    if (typeof chunk2 === "string") {
      return chunk2;
    } else if (chunk2 instanceof Uint8Array) {
      return decoder.decode(chunk2, { stream: true });
    } else {
      assert(false);
    }
  };
  const getClosingChunk = () => {
    return decoder.decode();
  };
  return { decode: decode2, getClosingChunk };
}
function debugWithChunk(msg, chunk2) {
  if (!debug2.isActivated)
    return;
  let chunkStr;
  try {
    chunkStr = new TextDecoder().decode(chunk2);
  } catch (err) {
    chunkStr = String(chunk2);
  }
  debug2(msg, chunkStr);
}
var debug2, __streamPipeWeb, __streamPipeNode, encoder;
var init_stream = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/stream.js"() {
    init_utils3();
    init_react_streaming();
    init_esm();
    init_picocolors();
    debug2 = createDebugger("vike:stream");
    __streamPipeWeb = "__streamPipeWeb";
    __streamPipeNode = "__streamPipeNode";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/renderHtml.js
function isDocumentHtml(something) {
  if (isTemplateWrapped(something) || isEscapedString(something) || isStream(something)) {
    checkType(something);
    return true;
  }
  return false;
}
async function renderDocumentHtml(documentHtml, pageContext, onErrorWhileStreaming, injectFilter) {
  if (isEscapedString(documentHtml)) {
    objectAssign(pageContext, { _isStream: false });
    let htmlString = getEscapedString(documentHtml);
    htmlString = await injectHtmlTagsToString([htmlString], pageContext, injectFilter);
    return htmlString;
  }
  if (isStream(documentHtml)) {
    objectAssign(pageContext, { _isStream: true });
    const stream = documentHtml;
    const streamWrapper = await renderHtmlStream(stream, null, pageContext, onErrorWhileStreaming, injectFilter);
    return streamWrapper;
  }
  if (isTemplateWrapped(documentHtml)) {
    const templateContent = documentHtml._template;
    const render = renderTemplate(templateContent, pageContext);
    if (!("htmlStream" in render)) {
      objectAssign(pageContext, { _isStream: false });
      const { htmlPartsAll } = render;
      const htmlString = await injectHtmlTagsToString(htmlPartsAll, pageContext, injectFilter);
      return htmlString;
    } else {
      objectAssign(pageContext, { _isStream: true });
      const { htmlStream } = render;
      const streamWrapper = await renderHtmlStream(htmlStream, {
        htmlPartsBegin: render.htmlPartsBegin,
        htmlPartsEnd: render.htmlPartsEnd
      }, pageContext, onErrorWhileStreaming, injectFilter);
      return streamWrapper;
    }
  }
  checkType(documentHtml);
  assert(false);
}
async function renderHtmlStream(streamOriginal, injectString, pageContext, onErrorWhileStreaming, injectFilter) {
  const processStreamOptions = {
    onErrorWhileStreaming,
    enableEagerStreaming: pageContext.enableEagerStreaming
  };
  if (injectString) {
    let streamFromReactStreamingPackage = null;
    if (isStreamFromReactStreamingPackage(streamOriginal) && !streamOriginal.disabled) {
      streamFromReactStreamingPackage = streamOriginal;
    }
    const { injectAtStreamBegin, injectAtStreamAfterFirstChunk, injectAtStreamEnd } = injectHtmlTagsToStream(pageContext, streamFromReactStreamingPackage, injectFilter);
    processStreamOptions.injectStringAtBegin = async () => {
      return await injectAtStreamBegin(injectString.htmlPartsBegin);
    };
    processStreamOptions.injectStringAtEnd = async () => {
      return await injectAtStreamEnd(injectString.htmlPartsEnd);
    };
    processStreamOptions.injectStringAfterFirstChunk = () => {
      return injectAtStreamAfterFirstChunk();
    };
  }
  const streamWrapper = await processStream(streamOriginal, processStreamOptions);
  return streamWrapper;
}
function isTemplateWrapped(something) {
  return hasProp(something, "_template");
}
function isEscapedString(something) {
  const result = hasProp(something, "_escaped");
  if (result) {
    assert(hasProp(something, "_escaped", "string"));
    checkType(something);
  }
  return result;
}
function getEscapedString(escapedString) {
  let htmlString;
  assert(hasProp(escapedString, "_escaped"));
  htmlString = escapedString._escaped;
  assert(typeof htmlString === "string");
  return htmlString;
}
function escapeInject(templateStrings, ...templateVariables) {
  assertUsage(templateStrings.length === templateVariables.length + 1 && templateStrings.every((str) => typeof str === "string"), `You're using ${picocolors_default.cyan("escapeInject")} as a function, but ${picocolors_default.cyan("escapeInject")} is a string template tag, see https://vike.dev/escapeInject`, { showStackTrace: true });
  return {
    _template: {
      templateStrings,
      templateVariables
    }
  };
}
function dangerouslySkipEscape(alreadyEscapedString) {
  return _dangerouslySkipEscape(alreadyEscapedString);
}
function _dangerouslySkipEscape(arg) {
  if (hasProp(arg, "_escaped")) {
    assert(isEscapedString(arg));
    return arg;
  }
  assertUsage(!isPromise(arg), `[dangerouslySkipEscape(${picocolors_default.cyan("str")})] Argument ${picocolors_default.cyan("str")} is a promise. It should be a string instead (or a stream). Make sure to ${picocolors_default.cyan("await str")}.`, { showStackTrace: true });
  if (typeof arg === "string") {
    return { _escaped: arg };
  }
  assertWarning2(false, `[dangerouslySkipEscape(${picocolors_default.cyan("str")})] Argument ${picocolors_default.cyan("str")} should be a string but we got ${picocolors_default.cyan(`typeof str === "${typeof arg}"`)}.`, {
    onlyOnce: false,
    showStackTrace: true
  });
  return { _escaped: String(arg) };
}
function renderTemplate(templateContent, pageContext) {
  const htmlPartsBegin = [];
  const htmlPartsEnd = [];
  let htmlStream = null;
  const addHtmlPart = (htmlPart) => {
    if (htmlStream === null) {
      htmlPartsBegin.push(htmlPart);
    } else {
      htmlPartsEnd.push(htmlPart);
    }
  };
  const setStream = (stream) => {
    const { hookName, hookFilePath } = pageContext._renderHook;
    assertUsage(!htmlStream, `Injecting two streams in ${picocolors_default.cyan("escapeInject")} template tag of ${hookName}() hook defined by ${hookFilePath}. Inject only one stream instead.`);
    htmlStream = stream;
  };
  const { templateStrings, templateVariables } = templateContent;
  for (let i11 = 0; i11 < templateVariables.length; i11++) {
    addHtmlPart(templateStrings[i11]);
    let templateVar = templateVariables[i11];
    if (isEscapedString(templateVar)) {
      const htmlString = getEscapedString(templateVar);
      addHtmlPart(htmlString);
      continue;
    }
    if (isTemplateWrapped(templateVar)) {
      const templateContentInner = templateVar._template;
      const result = renderTemplate(templateContentInner, pageContext);
      if (!("htmlStream" in result)) {
        result.htmlPartsAll.forEach(addHtmlPart);
      } else {
        result.htmlPartsBegin.forEach(addHtmlPart);
        setStream(result.htmlStream);
        result.htmlPartsEnd.forEach(addHtmlPart);
      }
      continue;
    }
    if (isStream(templateVar)) {
      setStream(templateVar);
      continue;
    }
    const getErrMsg2 = (msg) => {
      const { hookName, hookFilePath } = pageContext._renderHook;
      const nth = i11 === 0 && "1st" || i11 === 1 && "2nd" || i11 === 2 && "3rd" || `${i11}-th`;
      return [
        `The ${nth} HTML variable is ${msg}`,
        `The HTML was provided by the ${hookName}() hook at ${hookFilePath}.`
      ].filter(Boolean).join(" ");
    };
    assertUsage(!isPromise(templateVar), getErrMsg2(`a promise, did you forget to ${picocolors_default.cyan("await")} the promise?`));
    if (templateVar === void 0 || templateVar === null) {
      const msgVal = picocolors_default.cyan(String(templateVar));
      const msgEmptyString = picocolors_default.cyan("''");
      const msg = `${msgVal} which will be converted to an empty string. Pass the empty string ${msgEmptyString} instead of ${msgVal} to remove this warning.`;
      assertWarning2(false, getErrMsg2(msg), { onlyOnce: false });
      templateVar = "";
    }
    {
      const varType = typeof templateVar;
      if (varType !== "string") {
        const msgType = picocolors_default.cyan(`typeof htmlVariable === "${varType}"`);
        const msg = `${msgType} but a string or stream (https://vike.dev/streaming) is expected instead.`;
        assertUsage(false, getErrMsg2(msg));
      }
    }
    {
      const { isProduction } = pageContext._globalContext;
      if (isHtml(templateVar) && // We don't show this warning in production because it's expected that some users may (un)willingly do some XSS injection: we avoid flooding the production logs.
      !isProduction) {
        const msgVal = picocolors_default.cyan(String(templateVar));
        const msg = `${msgVal} which seems to be HTML code. Did you forget to wrap the value with dangerouslySkipEscape()?`;
        assertWarning2(false, getErrMsg2(msg), { onlyOnce: false });
      }
    }
    addHtmlPart(escapeHtml(templateVar));
  }
  assert(templateStrings.length === templateVariables.length + 1);
  addHtmlPart(templateStrings[templateStrings.length - 1]);
  if (htmlStream === null) {
    assert(htmlPartsEnd.length === 0);
    return {
      htmlPartsAll: htmlPartsBegin
    };
  }
  return {
    htmlStream,
    htmlPartsBegin,
    htmlPartsEnd
  };
}
async function getHtmlString(htmlRender) {
  if (typeof htmlRender === "string") {
    return htmlRender;
  }
  if (isStream(htmlRender)) {
    return streamToString(htmlRender);
  }
  checkType(htmlRender);
  assert(false);
}
var init_renderHtml = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/renderHtml.js"() {
    init_utils3();
    init_injectAssets();
    init_stream();
    init_react_streaming();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContextUrlComputed.js
function getPageContextUrlComputed(pageContext) {
  assert(typeof pageContext.urlOriginal === "string");
  assertPageContextUrlComputed(pageContext);
  const pageContextUrlComputed = {};
  objectDefineProperty(pageContextUrlComputed, "urlPathname", {
    get: urlPathnameGetter,
    enumerable: true,
    configurable: true
  });
  objectDefineProperty(pageContextUrlComputed, "url", {
    get: urlGetter,
    enumerable: false,
    configurable: true
  });
  objectDefineProperty(pageContextUrlComputed, "urlParsed", {
    get: urlParsedGetter,
    enumerable: true,
    configurable: true
  });
  return pageContextUrlComputed;
}
function getUrlParsed(pageContext) {
  const assertUrlResolved = (src) => assert(
    typeof urlResolved === "string",
    // TODO/eventually: remove debug logs, see:
    // - https://github.com/vikejs/vike/issues/2138#issuecomment-2631713411
    // - https://github.com/vikejs/vike/commit/5c7810f3080ab62536950f26e019bb2a3a517082
    { src, urlResolved }
  );
  let urlResolved;
  let isBaseToBeRemoved;
  if (pageContext.urlLogical) {
    urlResolved = pageContext.urlLogical;
    isBaseToBeRemoved = false;
    assertUrlResolved(1);
  } else if (pageContext._urlRewrite) {
    urlResolved = pageContext._urlRewrite;
    isBaseToBeRemoved = false;
    assertUrlResolved(2);
  } else {
    urlResolved = pageContext.urlOriginal;
    isBaseToBeRemoved = true;
    assertUrlResolved(3);
  }
  assertUrlResolved(4);
  let urlHandler = pageContext._urlHandler;
  if (!urlHandler)
    urlHandler = (url) => url;
  urlResolved = urlHandler(urlResolved);
  const baseServer2 = !isBaseToBeRemoved ? "/" : pageContext._baseServer;
  return parseUrl(urlResolved, baseServer2);
}
function urlPathnameGetter() {
  const { pathname } = getUrlParsed(this);
  const urlPathname = pathname;
  assert(urlPathname.startsWith("/"));
  return urlPathname;
}
function urlGetter() {
  assertWarning2(false, "`pageContext.url` is outdated. Use `pageContext.urlPathname`, `pageContext.urlParsed`, or `pageContext.urlOriginal` instead. (See https://vike.dev/migration/0.4.23 for more information.)", { onlyOnce: true, showStackTrace: true });
  return urlPathnameGetter.call(this);
}
function urlParsedGetter() {
  const {
    // remove isBaseMissing as it isn't part of UrlPublic
    isBaseMissing: _3,
    ...urlParsed
  } = getUrlParsed(this);
  const hashIsAvailable = isBrowser();
  const warnHashNotAvailable = (prop) => {
    assertWarning2(hashIsAvailable, `pageContext.urlParsed.${prop} isn't available on the server-side (HTTP requests don't include the URL hash)`, { onlyOnce: true, showStackTrace: true });
  };
  const urlParsedEnhanced = {
    ...urlParsed,
    get hash() {
      warnHashNotAvailable("hash");
      return urlParsed.hash;
    },
    get hashOriginal() {
      warnHashNotAvailable("hashOriginal");
      return urlParsed.hashOriginal;
    },
    // TODO/next-major-release: remove
    get hashString() {
      assertWarning2(false, "pageContext.urlParsed.hashString has been renamed to pageContext.urlParsed.hashOriginal", {
        onlyOnce: true,
        showStackTrace: true
      });
      warnHashNotAvailable("hashString");
      return urlParsed.hashOriginal;
    },
    // TODO/next-major-release: remove
    get searchString() {
      assertWarning2(false, "pageContext.urlParsed.searchString has been renamed to pageContext.urlParsed.searchOriginal", { onlyOnce: true, showStackTrace: true });
      return urlParsed.searchOriginal;
    }
  };
  changeEnumerable(urlParsedEnhanced, "hashString", false);
  changeEnumerable(urlParsedEnhanced, "searchString", false);
  if (!hashIsAvailable) {
    changeEnumerable(urlParsedEnhanced, "hash", false);
    changeEnumerable(urlParsedEnhanced, "hashOriginal", false);
  }
  return urlParsedEnhanced;
}
function assertPageContextUrl(pageContext) {
  assert(typeof pageContext.urlOriginal === "string");
  assert(typeof pageContext.urlPathname === "string");
  assert(isPlainObject(pageContext.urlParsed));
  assert(pageContext.urlPathname === pageContext.urlParsed.pathname);
  assertPageContextUrlComputed(pageContext);
}
function assertPageContextUrlComputed(pageContext) {
  if ("urlPathname" in pageContext) {
    assert(typeof pageContext.urlPathname === "string");
    assert(isPropertyGetter(pageContext, "urlPathname"));
    assert(isPropertyGetter(pageContext, "urlParsed"));
    assert(isPropertyGetter(pageContext, "url"));
  } else {
    assert(!("urlParsed" in pageContext));
    assert(!("url" in pageContext));
  }
}
var init_getPageContextUrlComputed = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContextUrlComputed.js"() {
    init_objectDefineProperty();
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getHttpResponseBody.js
function getHttpResponseBody(htmlRender, renderHook) {
  if (typeof htmlRender !== "string") {
    assertUsage(false, getErrMsg(htmlRender, renderHook, "body", `Use ${picocolors_default.cyan("pageContext.httpResponse.pipe()")} instead`));
  }
  const body = htmlRender;
  return body;
}
function getHttpResponseBodyStreamHandlers(htmlRender, renderHook) {
  return {
    pipe(writable) {
      const getErrMsgMixingStreamTypes = (writableType) => `The ${getErrMsgBody(htmlRender, renderHook)} while a ${writableType} was passed to pageContext.httpResponse.pipe() which is contradictory. You cannot mix a Web Stream with a Node.js Stream.`;
      if (isStreamWritableWeb(writable)) {
        const success = pipeToStreamWritableWeb(htmlRender, writable);
        if (success) {
          return;
        } else {
          assert(isStreamReadableNode(htmlRender) || isStreamPipeNode(htmlRender));
          assertUsage(false, getErrMsgMixingStreamTypes("Web Writable"));
        }
      }
      if (isStreamWritableNode(writable)) {
        const success = pipeToStreamWritableNode(htmlRender, writable);
        if (success) {
          return;
        } else {
          assert(isStreamReadableWeb(htmlRender) || isStreamPipeWeb(htmlRender));
          assertUsage(false, getErrMsgMixingStreamTypes("Node.js Writable"));
        }
      }
      assertUsage(false, `The argument ${picocolors_default.cyan("writable")} passed to ${picocolors_default.cyan("pageContext.httpResponse.pipe(writable)")} doesn't seem to be ${getStreamName("writable", "web")} nor ${getStreamName("writable", "node")}.`);
    },
    getReadableWebStream() {
      const webStream = getStreamReadableWeb(htmlRender);
      if (webStream === null) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "getReadableWebStream()", getFixMsg("readable", "web")));
      }
      return webStream;
    },
    async getReadableNodeStream() {
      const nodeStream = await getStreamReadableNode(htmlRender);
      if (nodeStream === null) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "getReadableNodeStream()", getFixMsg("readable", "node")));
      }
      return nodeStream;
    },
    async getBody() {
      const body = await getHtmlString(htmlRender);
      return body;
    },
    // TODO/v1-release: remove
    async getNodeStream() {
      assertWarning2(false, "`pageContext.httpResponse.getNodeStream()` is outdated, use `pageContext.httpResponse.getReadableNodeStream()` instead. " + streamDocs, { onlyOnce: true, showStackTrace: true });
      const nodeStream = await getStreamReadableNode(htmlRender);
      if (nodeStream === null) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "getNodeStream()", getFixMsg("readable", "node")));
      }
      return nodeStream;
    },
    // TODO/v1-release: remove
    getWebStream() {
      assertWarning2(false, "`pageContext.httpResponse.getWebStream(res)` is outdated, use `pageContext.httpResponse.getReadableWebStream(res)` instead. " + streamDocs, { onlyOnce: true, showStackTrace: true });
      const webStream = getStreamReadableWeb(htmlRender);
      if (webStream === null) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "getWebStream()", getFixMsg("readable", "web")));
      }
      return webStream;
    },
    // TODO/v1-release: remove
    pipeToWebWritable(writable) {
      assertWarning2(false, "`pageContext.httpResponse.pipeToWebWritable(res)` is outdated, use `pageContext.httpResponse.pipe(res)` instead. " + streamDocs, { onlyOnce: true, showStackTrace: true });
      const success = pipeToStreamWritableWeb(htmlRender, writable);
      if (!success) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "pipeToWebWritable()"));
      }
    },
    // TODO/v1-release: remove
    pipeToNodeWritable(writable) {
      assertWarning2(false, "`pageContext.httpResponse.pipeToNodeWritable(res)` is outdated, use `pageContext.httpResponse.pipe(res)` instead. " + streamDocs, { onlyOnce: true, showStackTrace: true });
      const success = pipeToStreamWritableNode(htmlRender, writable);
      if (!success) {
        assertUsage(false, getErrMsg(htmlRender, renderHook, "pipeToNodeWritable()"));
      }
    }
  };
  function getFixMsg(kind, type) {
    const streamName = getStreamName(kind, type);
    assert(["a ", "an ", "the "].some((s37) => streamName.startsWith(s37)));
    assert(renderHook);
    const { hookFilePath, hookName } = renderHook;
    return `Make sure the ${hookName}() defined by ${hookFilePath} hook provides ${streamName} instead`;
  }
}
function getErrMsg(htmlRender, renderHook, method, msgAddendum) {
  assert(!msgAddendum || !msgAddendum.endsWith("."));
  const errMsgBody = getErrMsgBody(htmlRender, renderHook);
  return [`pageContext.httpResponse.${method} can't be used because the ${errMsgBody}`, msgAddendum, streamDocs].filter(Boolean).join(". ");
}
function getErrMsgBody(htmlRender, renderHook) {
  assert(renderHook);
  const { hookFilePath, hookName } = renderHook;
  const hookReturnType = getHookReturnType(htmlRender);
  assert(["a ", "an ", "the "].some((s37) => hookReturnType.startsWith(s37)));
  const errMsgBody = `${hookName}() hook defined by ${hookFilePath} provides ${hookReturnType}`;
  assert(!errMsgBody.endsWith(" "));
  return errMsgBody;
}
function getHookReturnType(htmlRender) {
  if (typeof htmlRender === "string") {
    return "an HTML string";
  } else if (isStream(htmlRender)) {
    return inferStreamName(htmlRender);
  } else {
    assert(false);
  }
}
var streamDocs;
var init_getHttpResponseBody = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getHttpResponseBody.js"() {
    init_stream();
    init_utils3();
    init_renderHtml();
    init_picocolors();
    streamDocs = "See https://vike.dev/streaming for more information.";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getEarlyHints.js
function getEarlyHints(assets) {
  const earlyHints = [];
  {
    assets.forEach((asset) => {
      if (isFontFallback(asset, earlyHints))
        return;
      earlyHints.push({
        ...asset,
        earlyHintLink: inferEarlyHintLink(asset)
      });
    });
  }
  return earlyHints;
}
var init_getEarlyHints = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getEarlyHints.js"() {
    init_isFontFallback();
    init_inferHtmlTags();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse/getCacheControl.js
function getCacheControl(pageId, pageConfigs, statusCode) {
  if (pageConfigs.length === 0)
    return defaultValue;
  if (statusCode > 499)
    return defaultValue;
  const pageConfig = getPageConfig(pageId, pageConfigs);
  const configValue = getConfigValueRuntime(pageConfig, "cacheControl", "string");
  const value = configValue?.value;
  if (value)
    return value;
  return defaultValue;
}
var defaultValue;
var init_getCacheControl = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse/getCacheControl.js"() {
    init_helpers();
    init_getConfigValueRuntime();
    defaultValue = "no-store, max-age=0";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse/assertNoInfiniteHttpRedirect.js
function assertNoInfiniteHttpRedirect(urlRedirectTarget, pageContextInit) {
  if (true)
    return "DISABLED";
  if (!urlRedirectTarget.startsWith("/")) {
    return;
  }
  const urlOriginalNormalized = removeUrlOrigin(pageContextInit.urlOriginal).urlModified;
  assert(urlOriginalNormalized.startsWith("/"));
  const graph = copy(globalObject3.redirectGraph);
  graph[urlRedirectTarget] ?? (graph[urlRedirectTarget] = /* @__PURE__ */ new Set());
  graph[urlRedirectTarget].add(urlOriginalNormalized);
  validate(graph);
  globalObject3.redirectGraph = graph;
}
function copy(G3) {
  return Object.fromEntries(Object.entries(G3).map(([key, val]) => [key, new Set(val)]));
}
function validate(G3) {
  Object.keys(G3).forEach((n12) => check(G3, n12, []));
}
function check(G3, n12, path) {
  if (path.includes(n12)) {
    const cycle = path.slice(path.indexOf(n12)).concat(n12);
    assertUsage(false, `Infinite loop of HTTP URL redirects: ${cycle.map(picocolors_default.cyan).join(" -> ")}`);
  }
  G3[n12]?.forEach((node) => check(G3, node, [...path, n12]));
}
var globalObject3;
var init_assertNoInfiniteHttpRedirect = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse/assertNoInfiniteHttpRedirect.js"() {
    init_utils3();
    init_picocolors();
    globalObject3 = getGlobalObject("createHttpResponse/assertNoInfiniteHttpRedirect.ts", {
      redirectGraph: {}
    });
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse.js
async function createHttpResponsePage(htmlRender, renderHook, pageContext) {
  let statusCode = pageContext.abortStatusCode;
  if (!statusCode) {
    const isError = !pageContext.pageId || isErrorPage(pageContext.pageId, pageContext._pageConfigs);
    if (pageContext.errorWhileRendering) {
      assert(isError);
    }
    if (!isError) {
      assert(pageContext.is404 === null);
      statusCode = 200;
    } else {
      assert(pageContext.is404 === true || pageContext.is404 === false);
      statusCode = pageContext.is404 ? 404 : 500;
    }
  }
  const earlyHints = getEarlyHints(await pageContext.__getPageAssets());
  const headers = [];
  assert(pageContext.pageId);
  const cacheControl = getCacheControl(pageContext.pageId, pageContext._pageConfigs, statusCode);
  if (cacheControl) {
    headers.push(["Cache-Control", cacheControl]);
  }
  return createHttpResponse(statusCode, "text/html;charset=utf-8", headers, htmlRender, earlyHints, renderHook);
}
function createHttpResponseFavicon404() {
  const httpResponse = createHttpResponse(404, "text/html;charset=utf-8", [], "<p>No favicon.ico found.</p><script>console.log('This HTTP response was generated by Vike.')</script>");
  return httpResponse;
}
function createHttpResponseBaseIsMissing(urlOriginal, baseServer2) {
  const httpResponse = createHttpResponse(
    // We use the error code `500` to signal a failing state because this HTTP response should never be used, see https://vike.dev/base-url#setup
    // In other words: this HTTP response is expected to be generated but isn't expected to be actually used.
    500,
    "text/html;charset=utf-8",
    [],
    `
<h1>Error: Base URL is missing</h1>
<p>
  <a href="https://vike.dev/renderPage"><code>renderPage(pageContextInit)</code></a> called with <code>pageContextInit.urlOriginal===${JSON.stringify(urlOriginal)}</code> which doesn't start with the Base URL <code>${baseServer2}</code>.
</p>
<p>
  See <a href="https://vike.dev/base-url#setup">vike.dev/base-url#setup</a> for how to properly setup your server while using a Base URL.
</p>
<style>
  code {
    font-family: monospace;
    background-color: #eaeaea;
    padding: 3px 5px;
    border-radius: 4px;
  }
</style>
`
  );
  return httpResponse;
}
function createHttpResponseError(pageContext) {
  const reason = (() => {
    if (!pageContext) {
      return "no error page (https://vike.dev/error-page) could be rendered";
    }
    const errorPageId = getErrorPageId(pageContext._pageFilesAll, pageContext._pageConfigs);
    if (errorPageId) {
      return "the error page (https://vike.dev/error-page) couldn't be rendered (for example if an error occurred while rendering the error page)";
    } else {
      return "no error page (https://vike.dev/error-page) is defined, make sure to create one";
    }
  })();
  const httpResponse = createHttpResponse(500, "text/html;charset=utf-8", [], `<p>An error occurred.</p><script>console.log(${JSON.stringify(`This HTTP response was generated by Vike. Vike returned this response because ${reason}.`)})</script>`);
  return httpResponse;
}
async function createHttpResponsePageContextJson(pageContextSerialized) {
  const httpResponse = createHttpResponse(200, "application/json", [], pageContextSerialized, [], null);
  return httpResponse;
}
function createHttpResponseRedirect({ url, statusCode }, pageContextInit) {
  assertNoInfiniteHttpRedirect(url, pageContextInit);
  assert(url);
  assert(statusCode);
  assert(300 <= statusCode && statusCode <= 399);
  const headers = [["Location", url]];
  return createHttpResponse(
    statusCode,
    "text/html;charset=utf-8",
    headers,
    // For bots / programmatic crawlig: show what's going on.
    // For users: showing a blank page is probably better than a flickering text.
    `<p style="display: none">Redirecting to ${escapeHtml(url)}</p><script>console.log('This HTTP response was generated by Vike.')</script>`
  );
}
function createHttpResponse(statusCode, contentType, headers, htmlRender, earlyHints = [], renderHook = null) {
  headers.push(["Content-Type", contentType]);
  assert(renderHook || typeof htmlRender === "string");
  return {
    statusCode,
    headers,
    // TODO/v1-release: remove
    get contentType() {
      assertWarning2(false, "pageContext.httpResponse.contentType is deprecated and will be removed in the next major release. Use pageContext.httpResponse.headers instead, see https://vike.dev/migration/0.4.134", { onlyOnce: true });
      return contentType;
    },
    earlyHints,
    get body() {
      return getHttpResponseBody(htmlRender, renderHook);
    },
    ...getHttpResponseBodyStreamHandlers(htmlRender, renderHook)
  };
}
var init_createHttpResponse = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/createHttpResponse.js"() {
    init_utils3();
    init_error_page();
    init_getHttpResponseBody();
    init_getEarlyHints();
    init_getCacheControl();
    init_assertNoInfiniteHttpRedirect();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/getAllPageIdFiles.js
function getPageFilesClientSide(pageFilesAll, pageId) {
  return determine(pageFilesAll, pageId, true);
}
function getPageFilesServerSide(pageFilesAll, pageId) {
  return determine(pageFilesAll, pageId, false);
}
function determine(pageFilesAll, pageId, envIsClient) {
  const env2 = envIsClient ? "CLIENT_ONLY" : "SERVER_ONLY";
  const pageFilesRelevant = pageFilesAll.filter((p13) => p13.isRelevant(pageId) && p13.fileType !== ".page.route").sort(getPageFilesSorter(envIsClient, pageId));
  const getPageIdFile = (iso) => {
    const files = pageFilesRelevant.filter((p13) => p13.pageId === pageId && p13.isEnv(iso ? "CLIENT_AND_SERVER" : env2));
    assertUsage(files.length <= 1, `Merge the following files into a single file: ${files.map((p13) => p13.filePath).join(" ")}`);
    const pageIdFile = files[0];
    assert(pageIdFile === void 0 || !pageIdFile.isDefaultPageFile);
    return pageIdFile;
  };
  const pageIdFileEnv = getPageIdFile(false);
  const pageIdFileIso = getPageIdFile(true);
  const getRendererFile = (iso) => pageFilesRelevant.filter((p13) => p13.isRendererPageFile && p13.isEnv(iso ? "CLIENT_AND_SERVER" : env2))[0];
  const rendererFileEnv = getRendererFile(false);
  const rendererFileIso = getRendererFile(true);
  const defaultFilesNonRenderer = pageFilesRelevant.filter((p13) => p13.isDefaultPageFile && !p13.isRendererPageFile && (p13.isEnv(env2) || p13.isEnv("CLIENT_AND_SERVER")));
  const pageFiles = [pageIdFileEnv, pageIdFileIso, ...defaultFilesNonRenderer, rendererFileEnv, rendererFileIso].filter(isNotNullish);
  return pageFiles;
}
function getPageFilesSorter(envIsClient, pageId) {
  const env2 = envIsClient ? "CLIENT_ONLY" : "SERVER_ONLY";
  const e1First = -1;
  const e2First = 1;
  const noOrder = 0;
  return (e1, e22) => {
    if (!e1.isDefaultPageFile && e22.isDefaultPageFile) {
      return e1First;
    }
    if (!e22.isDefaultPageFile && e1.isDefaultPageFile) {
      return e2First;
    }
    {
      const e1_isRenderer = e1.isRendererPageFile;
      const e2_isRenderer = e22.isRendererPageFile;
      if (!e1_isRenderer && e2_isRenderer) {
        return e1First;
      }
      if (!e2_isRenderer && e1_isRenderer) {
        return e2First;
      }
      assert(e1_isRenderer === e2_isRenderer);
    }
    {
      const e1_distance = getPathDistance(pageId, e1.filePath);
      const e2_distance = getPathDistance(pageId, e22.filePath);
      if (e1_distance < e2_distance) {
        return e1First;
      }
      if (e2_distance < e1_distance) {
        return e2First;
      }
      assert(e1_distance === e2_distance);
    }
    {
      if (e1.isEnv(env2) && e22.isEnv("CLIENT_AND_SERVER")) {
        return e1First;
      }
      if (e22.isEnv(env2) && e1.isEnv("CLIENT_AND_SERVER")) {
        return e2First;
      }
    }
    return noOrder;
  };
}
function getPathDistance(pathA, pathB) {
  let idx = 0;
  for (; idx < pathA.length && idx < pathB.length; idx++) {
    if (pathA[idx] !== pathB[idx])
      break;
  }
  const pathAWithoutCommon = pathA.slice(idx);
  const pathBWithoutCommon = pathB.slice(idx);
  const distanceA = pathAWithoutCommon.split("/").length;
  const distanceB = pathBWithoutCommon.split("/").length;
  const distance3 = distanceA + distanceB;
  return distance3;
}
var init_getAllPageIdFiles = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/getAllPageIdFiles.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles.js
var init_getPageFiles = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles.js"() {
    init_getAllPageIdFiles();
    init_getAllPageIdFiles();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/assert_exports_old_design.js
function assertExportValues(pageFile) {
  enforceTrue.forEach((exportName) => {
    assert(pageFile.fileExports);
    if (!(exportName in pageFile.fileExports))
      return;
    const explainer = `The value of \`${exportName}\` is only allowed to be \`true\`.`;
    assertUsage(pageFile.fileExports[exportName] !== false, `${pageFile.filePath} has \`export { ${exportName} }\` with the value \`false\` which is prohibited: remove \`export { ${exportName} }\` instead. (${explainer})`);
    assertUsage(pageFile.fileExports[exportName] === true, `${pageFile.filePath} has \`export { ${exportName} }\` with a forbidden value. ${explainer}`);
  });
}
function assertDefaultExports(defaultExportName, filePath) {
  assertUsage(!forbiddenDefaultExports.includes(defaultExportName), `${filePath} has \`export default { ${defaultExportName} }\` which is prohibited, use \`export { ${defaultExportName} }\` instead.`);
}
var enforceTrue, forbiddenDefaultExports;
var init_assert_exports_old_design = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/assert_exports_old_design.js"() {
    init_utils();
    enforceTrue = ["clientRouting"];
    forbiddenDefaultExports = ["render", "clientRouting", "prerender", "doNotPrerender"];
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getPageConfigUserFriendly.js
function getPageConfigUserFriendly(pageConfigGlobalValues, pageConfig, pageConfigValues) {
  const pageConfigUserFriendly = getPageConfigUserFriendly_public({ pageConfigGlobalValues, pageConfigValues });
  let page;
  if (!pageConfig.isErrorPage) {
    const route2 = pageConfigUserFriendly.config.route ?? pageConfig.routeFilesystem.routeString;
    page = {
      ...pageConfigUserFriendly,
      route: route2
    };
  } else {
    page = {
      ...pageConfigUserFriendly,
      isErrorPage: true
    };
  }
  return [pageConfig.pageId, page];
}
function getPageConfigUserFriendly_public({ pageConfigGlobalValues, pageConfigValues }) {
  const pageConfigUserFriendly = getPageConfigUserFriendly_base({ pageConfigGlobalValues, pageConfigValues });
  return getPublicCopy(pageConfigUserFriendly);
}
function getPublicCopy(pageConfigUserFriendly) {
  const p13 = pageConfigUserFriendly;
  return {
    config: p13.config,
    _source: p13.source,
    _sources: p13.sources,
    _from: p13.from
  };
}
function getPageConfigUserFriendly_base({ pageConfigGlobalValues, pageConfigValues }) {
  const configValues = { ...pageConfigGlobalValues, ...pageConfigValues };
  return getPageConfigUserFriendly_V1Design({ configValues });
}
function getPageConfigGlobalUserFriendly({ pageConfigGlobalValues }) {
  const pageConfigGlobalUserFriendly = getPageConfigUserFriendly_V1Design({ configValues: pageConfigGlobalValues });
  return getPublicCopy(pageConfigGlobalUserFriendly);
}
function getPageConfigUserFriendly_oldDesign(pageFiles, pageConfig, pageConfigGlobal) {
  const config = {};
  const configEntries = {};
  const exportsAll = {};
  pageFiles.forEach((pageFile) => {
    const exportValues = getExportValues(pageFile);
    exportValues.forEach(({ exportName, exportValue, isFromDefaultExport }) => {
      assert(exportName !== "default");
      exportsAll[exportName] = exportsAll[exportName] ?? [];
      exportsAll[exportName].push({
        exportValue,
        exportSource: `${pageFile.filePath} > ${isFromDefaultExport ? `\`export default { ${exportName} }\`` : `\`export { ${exportName} }\``}`,
        filePath: pageFile.filePath,
        _filePath: pageFile.filePath,
        // TODO/next-major-release: remove
        _fileType: pageFile.fileType,
        _isFromDefaultExport: isFromDefaultExport
      });
    });
  });
  let source;
  let sources;
  let from;
  if (pageConfig) {
    const res = getPageConfigUserFriendly_base({
      pageConfigGlobalValues: pageConfigGlobal.configValues,
      pageConfigValues: pageConfig.configValues
    });
    source = res.source;
    sources = res.sources;
    from = res.from;
    Object.assign(config, res.config);
    Object.assign(configEntries, res.configEntries);
    Object.assign(exportsAll, res.exportsAll);
  } else {
    source = {};
    sources = {};
    from = {
      configsStandard: {},
      configsCumulative: {},
      configsComputed: {}
    };
  }
  const pageExports = createObjectWithDeprecationWarning();
  const exports = {};
  Object.entries(exportsAll).forEach(([exportName, values2]) => {
    values2.forEach(({ exportValue, _fileType, _isFromDefaultExport }) => {
      exports[exportName] = exports[exportName] ?? exportValue;
      if (_fileType === ".page" && !_isFromDefaultExport) {
        if (!(exportName in pageExports)) {
          pageExports[exportName] = exportValue;
        }
      }
    });
  });
  assert(!("default" in exports));
  assert(!("default" in exportsAll));
  const pageContextExports = {
    config,
    from,
    source,
    sources,
    // TODO/eventually: deprecate/remove every prop below
    configEntries,
    exports,
    exportsAll,
    pageExports
  };
  return pageContextExports;
}
function getPageConfigUserFriendly_V1Design(pageConfig) {
  const config = {};
  const configEntries = {};
  const exportsAll = {};
  const source = {};
  const sources = {};
  const from = {
    configsStandard: {},
    configsCumulative: {},
    configsComputed: {}
  };
  const addSrc = (src, configName) => {
    source[configName] = src;
    sources[configName] ?? (sources[configName] = []);
    sources[configName].push(src);
  };
  Object.entries(pageConfig.configValues).forEach(([configName, configValue]) => {
    const { value } = configValue;
    const configValueFilePathToShowToUser = getConfigValueFilePathToShowToUser(configValue.definedAtData);
    const configDefinedAt = getConfigDefinedAtOptional("Config", configName, configValue.definedAtData);
    config[configName] = config[configName] ?? value;
    configEntries[configName] = configEntries[configName] ?? [];
    assert(configEntries[configName].length === 0);
    configEntries[configName].push({
      configValue: value,
      configDefinedAt,
      configDefinedByFile: configValueFilePathToShowToUser
    });
    if (configValue.type === "standard") {
      const src = {
        type: "configsStandard",
        value: configValue.value,
        definedAt: getDefinedAtString(configValue.definedAtData, configName)
      };
      addSrc(src, configName);
      from.configsStandard[configName] = src;
    }
    if (configValue.type === "cumulative") {
      const src = {
        type: "configsCumulative",
        values: configValue.value.map((value2, i11) => {
          const definedAtFile = configValue.definedAtData[i11];
          assert(definedAtFile);
          const definedAt = getDefinedAtString(definedAtFile, configName);
          return {
            value: value2,
            definedAt
          };
        })
      };
      addSrc(src, configName);
      from.configsCumulative[configName] = src;
    }
    if (configValue.type === "computed") {
      const src = {
        type: "configsComputed",
        value: configValue.value
      };
      addSrc(src, configName);
      from.configsComputed[configName] = src;
    }
    const exportName = configName;
    exportsAll[exportName] = exportsAll[exportName] ?? [];
    exportsAll[exportName].push({
      exportValue: value,
      exportSource: configDefinedAt,
      filePath: configValueFilePathToShowToUser,
      _filePath: configValueFilePathToShowToUser,
      _fileType: null,
      _isFromDefaultExport: null
    });
  });
  return {
    config,
    configEntries,
    exportsAll,
    source,
    sources,
    from
  };
}
function getExportValues(pageFile) {
  const { filePath, fileExports } = pageFile;
  assert(fileExports);
  assert(isScriptFile(filePath));
  const exportValues = [];
  Object.entries(fileExports).sort(makeLast(([exportName]) => exportName === "default")).forEach(([exportName, exportValue]) => {
    let isFromDefaultExport = exportName === "default";
    if (isFromDefaultExport) {
      if (isTemplateFile(filePath)) {
        exportName = "Page";
      } else {
        assertUsage(isObject(exportValue), `The ${picocolors_default.cyan("export default")} of ${filePath} should be an object.`);
        Object.entries(exportValue).forEach(([defaultExportName, defaultExportValue]) => {
          assertDefaultExports(defaultExportName, filePath);
          exportValues.push({
            exportName: defaultExportName,
            exportValue: defaultExportValue,
            isFromDefaultExport
          });
        });
        return;
      }
    }
    exportValues.push({
      exportName,
      exportValue,
      isFromDefaultExport
    });
  });
  exportValues.forEach(({ exportName, isFromDefaultExport }) => {
    assert(!(isFromDefaultExport && forbiddenDefaultExports.includes(exportName)));
  });
  return exportValues;
}
function createObjectWithDeprecationWarning() {
  return new Proxy({}, {
    get(...args) {
      if (!isBrowser()) {
        assertWarning2(false, "`pageContext.pageExports` is outdated. Use `pageContext.exports` instead, see https://vike.dev/exports", { onlyOnce: true, showStackTrace: true });
      }
      return Reflect.get(...args);
    }
  });
}
var init_getPageConfigUserFriendly = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/getPageConfigUserFriendly.js"() {
    init_assert_exports_old_design();
    init_getConfigDefinedAt();
    init_helpers();
    init_utils();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/getExportNames.js
function getExportNames(p13) {
  if (p13.fileType === ".css") {
    return [];
  }
  if (p13.exportNames) {
    return p13.exportNames;
  }
  assert(p13.fileExports, p13.filePath);
  const exportNames = Object.keys(p13.fileExports);
  return exportNames;
}
var init_getExportNames = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/getExportNames.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/analyzeExports.js
function analyzeExports({ pageFilesClientSide, pageFilesServerSide, pageId }) {
  return { isHtmlOnly: isHtmlOnly(), isClientRouting: isClientRouting() };
  function isHtmlOnly() {
    {
      const hasPageIdIsmrphFile = pageFilesServerSide.some((p13) => p13.pageId === pageId && p13.fileType === ".page");
      if (hasPageIdIsmrphFile) {
        assertClientSideRenderHook();
        return false;
      }
    }
    {
      const hasPageIdServerFile = pageFilesServerSide.some((p13) => p13.pageId === pageId && p13.fileType === ".page.server");
      if (!hasPageIdServerFile) {
        return false;
      }
    }
    {
      const definesClientRenderer = pageFilesClientSide.some((p13) => p13.pageId === pageId && p13.fileType === ".page.client" && getExportNames(p13).includes("render"));
      if (definesClientRenderer) {
        return false;
      }
    }
    return true;
  }
  function assertClientSideRenderHook() {
    const hasClientSideRenderHook = pageFilesClientSide.some((p13) => {
      return getExportNames(p13).includes("render");
    });
    assertUsage(hasClientSideRenderHook, [
      "No client-side `render()` hook found.",
      "See https://vike.dev/render-modes for more information.",
      [
        "Loaded client-side page files (none of them `export { render }`):",
        ...pageFilesClientSide.map((p13, i11) => ` (${i11 + 1}): ${p13.filePath}`)
      ].join("\n")
    ].join(" "));
  }
  function isClientRouting() {
    const hasClientRoutingExport = pageFilesClientSide.some((p13) => {
      return getExportNames(p13).includes("clientRouting");
    });
    return hasClientRoutingExport;
  }
}
var init_analyzeExports = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/analyzeExports.js"() {
    init_getExportNames();
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/determineClientEntry.js
function determineClientEntry({ pageFilesClientSide, pageFilesServerSide, isHtmlOnly, isClientRouting }) {
  let clientEntries = [];
  const pageFilesServerSideOnly = pageFilesServerSide.filter((p13) => !pageFilesClientSide.includes(p13));
  const clientDependencies = [];
  clientDependencies.push(...pageFilesClientSide.map((p13) => ({ id: p13.filePath, onlyAssets: false, eagerlyImported: false })));
  clientDependencies.push(...pageFilesServerSideOnly.map((p13) => ({ id: p13.filePath, onlyAssets: true, eagerlyImported: false })));
  if (isHtmlOnly) {
    clientEntries = pageFilesClientSide.map((p13) => p13.filePath);
  } else {
    const clientEntry = getVikeClientEntry(isClientRouting);
    clientDependencies.push({ id: clientEntry, onlyAssets: false, eagerlyImported: false });
    clientEntries = [clientEntry];
  }
  return { clientEntries, clientDependencies };
}
function getVikeClientEntry(isClientRouting) {
  return isClientRouting ? "@@vike/dist/esm/client/client-routing-runtime/entry.js" : "@@vike/dist/esm/client/server-routing-runtime/entry.js";
}
var init_determineClientEntry = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide/determineClientEntry.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide.js
function analyzePageClientSide(pageFilesAll, pageId) {
  let pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);
  const pageFilesServerSide = getPageFilesServerSide(pageFilesAll, pageId);
  const { isHtmlOnly, isClientRouting } = analyzeExports({ pageFilesClientSide, pageFilesServerSide, pageId });
  if (isHtmlOnly) {
    pageFilesClientSide = pageFilesClientSide.filter((p13) => p13.isEnv("CLIENT_ONLY") && !getExportNames(p13).includes("render"));
    pageFilesClientSide = removeOverridenPageFiles(pageFilesClientSide);
  }
  const { clientEntries, clientDependencies } = determineClientEntry({
    pageFilesClientSide,
    pageFilesServerSide,
    isHtmlOnly,
    isClientRouting
  });
  return { isHtmlOnly, isClientRouting, clientEntries, clientDependencies, pageFilesClientSide, pageFilesServerSide };
}
async function analyzePageClientSideInit(pageFilesAll, pageId, { sharedPageFilesAlreadyLoaded }) {
  const pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);
  await Promise.all(pageFilesClientSide.map(async (p13) => {
    assert(p13.isEnv("CLIENT_ONLY") || p13.isEnv("CLIENT_AND_SERVER"));
    if (sharedPageFilesAlreadyLoaded && p13.isEnv("CLIENT_AND_SERVER")) {
      return;
    }
    await p13.loadExportNames?.();
  }));
}
function removeOverridenPageFiles(pageFilesClientSide) {
  const pageFilesClientSide_ = [];
  for (const p13 of pageFilesClientSide) {
    pageFilesClientSide_.push(p13);
    if (getExportNames(p13).includes("overrideDefaultPages")) {
      break;
    }
  }
  return pageFilesClientSide_;
}
var init_analyzePageClientSide = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzePageClientSide.js"() {
    init_analyzeExports();
    init_determineClientEntry();
    init_getAllPageIdFiles();
    init_getAllPageIdFiles();
    init_utils();
    init_getExportNames();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/retrieveAssetsDev.js
async function retrieveAssetsDev(clientDependencies, viteDevServer) {
  const visitedModules = /* @__PURE__ */ new Set();
  const assetUrls = /* @__PURE__ */ new Set();
  await Promise.all(clientDependencies.map(async ({ id: id5 }) => {
    if (id5.startsWith("@@vike"))
      return;
    assert(id5);
    const { moduleGraph } = viteDevServer;
    const [_3, graphId] = await moduleGraph.resolveUrl(id5);
    assert(graphId, { id: id5 });
    const mod = moduleGraph.getModuleById(graphId);
    if (!mod) {
      return;
    }
    assert(mod, { id: id5 });
    collectCss(mod, assetUrls, visitedModules);
  }));
  return Array.from(assetUrls);
}
function collectCss(mod, styleUrls, visitedModules, importer) {
  assert(mod);
  if (!mod.url)
    return;
  if (visitedModules.has(mod.url))
    return;
  visitedModules.add(mod.url);
  if (isStyle(mod) && (!importer || !isStyle(importer))) {
    if (mod.url.startsWith("/")) {
      styleUrls.add(mod.url);
    } else if (mod.url.startsWith("\0")) {
      styleUrls.add(`/@id/__x00__${mod.url.substring(1)}`);
    } else {
      styleUrls.add(`/@id/${mod.url}`);
    }
  }
  mod.importedModules.forEach((dep) => {
    collectCss(dep, styleUrls, visitedModules, mod);
  });
}
function isStyle(mod) {
  return (
    // CSS-in-JS libraries such as [wyw-in-js](https://github.com/vikejs/vike/issues/2039)
    mod.type === "css" || // .css, .less, ...
    styleFileRE.test(mod.url) || // CSS of .vue files
    mod.id && /\?vue&type=style/.test(mod.id)
  );
}
var init_retrieveAssetsDev = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/retrieveAssetsDev.js"() {
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/extractAssetsQuery.js
function extractAssetsAddQuery(id5) {
  const fileExtension = getFileExtension(id5);
  if (!fileExtension || id5.includes("virtual:vike:")) {
    return `${id5}?${query}`;
  } else {
    if (!id5.includes("?")) {
      return `${id5}?${query}&lang.${fileExtension}`;
    } else {
      return id5.replace("?", `?${query}&`);
    }
  }
}
function extractAssetsRemoveQuery(id5) {
  if (!id5.includes("?"))
    return id5;
  const suffix = `?${query}`;
  assert(id5.endsWith(query));
  return id5.slice(0, -1 * suffix.length);
}
var query;
var init_extractAssetsQuery = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/extractAssetsQuery.js"() {
    init_utils2();
    query = "extractAssets";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files.js
function getVirtualFileId(id5) {
  return removeVirtualIdTag(id5);
}
function removeVirtualIdTag(id5) {
  if (id5.startsWith(virtualIdTag)) {
    id5 = id5.slice(virtualIdTag.length);
  }
  assert(!id5.startsWith(virtualIdTag));
  return id5;
}
var virtualIdTag;
var init_virtual_files = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files.js"() {
    init_picocolors();
    init_utils2();
    virtualIdTag = "\0";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files/virtualFilePageConfigValuesAll.js
function getVirtualFileIdPageConfigValuesAll(pageId, isForClientSide) {
  const id5 = `${isForClientSide ? idBaseClient : idBaseServer}${pageId}`;
  return id5;
}
function isVirtualFileIdPageConfigValuesAll(id5) {
  id5 = getVirtualFileId(id5);
  if (!id5.includes(idBase))
    return false;
  assert(id5.startsWith(idBase));
  const idOriginal = id5;
  id5 = extractAssetsRemoveQuery(id5);
  const isExtractAssets = idOriginal !== id5;
  if (id5.startsWith(idBaseClient)) {
    assert(isExtractAssets === false);
    return {
      pageId: id5.slice(idBaseClient.length),
      isForClientSide: true,
      isExtractAssets
    };
  }
  if (id5.startsWith(idBaseServer)) {
    return {
      pageId: id5.slice(idBaseServer.length),
      isForClientSide: false,
      isExtractAssets
    };
  }
  assert(false);
}
var idBase, idBaseClient, idBaseServer;
var init_virtualFilePageConfigValuesAll = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files/virtualFilePageConfigValuesAll.js"() {
    init_extractAssetsQuery();
    init_utils2();
    init_virtual_files();
    idBase = "virtual:vike:pageConfigValuesAll:";
    idBaseClient = `${idBase}client:`;
    idBaseServer = `${idBase}server:`;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/prependEntriesDir.js
function prependEntriesDir(entryName) {
  if (entryName.startsWith("/")) {
    entryName = entryName.slice(1);
  }
  assert(!entryName.startsWith("/"));
  assert(entryName);
  entryName = `entries/${entryName}`;
  return entryName;
}
var init_prependEntriesDir = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/prependEntriesDir.js"() {
    init_utils2();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/getManifestEntry.js
function getManifestEntry(id5, assetsManifest) {
  const debugInfo = getDebugInfo(id5, assetsManifest);
  if (id5.startsWith("@@vike/")) {
    const manifestKeyEnd = slice(id5, "@@vike".length, 0);
    const { manifestKey: manifestKey2, manifestEntry: manifestEntry2 } = findEntryWithKeyEnd(manifestKeyEnd, assetsManifest, id5);
    assert(manifestEntry2 && manifestKey2, debugInfo);
    return { manifestEntry: manifestEntry2, manifestKey: manifestKey2 };
  }
  if (isVirtualFileIdPageConfigValuesAll(id5)) {
    {
      const manifestKey3 = id5;
      const manifestEntry3 = assetsManifest[manifestKey3];
      if (manifestEntry3) {
        return { manifestEntry: manifestEntry3, manifestKey: manifestKey3 };
      }
    }
    const manifestKeyEnd = id5;
    const { manifestKey: manifestKey2, manifestEntry: manifestEntry2 } = getEntryWithKeyEnd(manifestKeyEnd, assetsManifest, id5);
    assert(manifestEntry2, debugInfo);
    return { manifestEntry: manifestEntry2, manifestKey: manifestKey2 };
  }
  if (id5.startsWith("/")) {
    const manifestKey2 = id5.slice(1);
    let manifestEntry2 = assetsManifest[manifestKey2];
    assert(manifestEntry2, debugInfo);
    return { manifestEntry: manifestEntry2, manifestKey: manifestKey2 };
  }
  assertIsNpmPackageImport(id5);
  const found = Object.entries(assetsManifest).find(([, e12]) => e12.name === prependEntriesDir(id5));
  assert(found);
  const [manifestKey, manifestEntry] = found;
  return { manifestEntry, manifestKey };
}
function findEntryWithKeyEnd(manifestKeyEnd, assetsManifest, id5) {
  const debugInfo = getDebugInfo(id5, assetsManifest, manifestKeyEnd);
  assert(manifestKeyEnd.startsWith("/"), debugInfo);
  const manifestKeys = [];
  for (const manifestKey2 in assetsManifest) {
    if (manifestKey2.endsWith(manifestKeyEnd)) {
      manifestKeys.push(manifestKey2);
    }
  }
  const manifestKeysRelative = manifestKeys.filter((k4) => k4.startsWith("../"));
  assert(manifestKeysRelative.length <= 1, debugInfo);
  const manifestKey = manifestKeysRelative[0] ?? manifestKeys[0] ?? null;
  if (!manifestKey) {
    return { manifestEntry: null, manifestKey: null };
  }
  const manifestEntry = assetsManifest[manifestKey];
  return { manifestEntry, manifestKey };
}
function getEntryWithKeyEnd(manifestKeyEnd, assetsManifest, id5) {
  const debugInfo = getDebugInfo(id5, assetsManifest, manifestKeyEnd);
  const manifestKeys = [];
  for (const manifestKey2 in assetsManifest) {
    if (manifestKey2.endsWith(manifestKeyEnd)) {
      manifestKeys.push(manifestKey2);
    }
  }
  assert(manifestKeys.length <= 1, debugInfo);
  const manifestKey = manifestKeys[0];
  if (!manifestKey) {
    return { manifestEntry: null, manifestKey: null };
  }
  const manifestEntry = assetsManifest[manifestKey];
  return { manifestEntry, manifestKey };
}
function getDebugInfo(id5, assetsManifest, manifestKeyEnd) {
  const manifestKeys = Object.keys(assetsManifest);
  if (manifestKeyEnd === void 0) {
    return { manifestKeys, id: id5 };
  } else {
    return { manifestKeys, manifestKeyEnd, id: id5 };
  }
}
var init_getManifestEntry = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/getManifestEntry.js"() {
    init_utils3();
    init_virtualFilePageConfigValuesAll();
    init_prependEntriesDir();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/retrieveAssetsProd.js
function retrieveAssetsProd(clientDependencies, assetsManifest, includeAssetsImportedByServer) {
  let assetUrls = /* @__PURE__ */ new Set();
  assert(assetsManifest);
  const visistedAssets = /* @__PURE__ */ new Set();
  clientDependencies.forEach(({ id: id5, onlyAssets, eagerlyImported }) => {
    if (eagerlyImported)
      return;
    if (includeAssetsImportedByServer && onlyAssets && id5.includes(".page.server.") && // We assume that all npm packages have already built their files: bundlers (Rollup, esbuild, tsup, ...) extract the CSS out of JavaScript => we can assume JavaScript to not import any CSS/assets.
    !isNpmPackageImport(id5, {
      // I presume Vite already resolves path aliases when Vite sets the module's id
      cannotBePathAlias: true
    })) {
      id5 = extractAssetsAddQuery(id5);
    }
    const { manifestKey } = getManifestEntry(id5, assetsManifest);
    collectAssets(manifestKey, assetUrls, visistedAssets, assetsManifest, onlyAssets);
  });
  collectSingleStyle(assetUrls, assetsManifest);
  return Array.from(assetUrls);
}
function collectAssets(manifestKey, assetUrls, visistedAssets, assetsManifest, onlyCollectStaticAssets) {
  if (visistedAssets.has(manifestKey))
    return;
  visistedAssets.add(manifestKey);
  const manifestEntry = assetsManifest[manifestKey];
  assert(manifestEntry, { manifestKey });
  const { file } = manifestEntry;
  if (!onlyCollectStaticAssets) {
    assetUrls.add(`/${file}`);
  }
  const { imports = [], assets = [], css = [] } = manifestEntry;
  for (const manifestKey2 of imports) {
    const importManifestEntry = assetsManifest[manifestKey2];
    assert(importManifestEntry);
    collectAssets(manifestKey2, assetUrls, visistedAssets, assetsManifest, onlyCollectStaticAssets);
  }
  for (const cssAsset of css) {
    assetUrls.add(`/${cssAsset}`);
  }
  for (const asset of assets) {
    assetUrls.add(`/${asset}`);
  }
}
function collectSingleStyle(assetUrls, assetsManifest) {
  const style = assetsManifest["style.css"];
  if (style && Object.values(assetsManifest).filter((asset) => asset.file.endsWith(".css")).length === 1) {
    assetUrls.add(`/${style.file}`);
  }
}
var init_retrieveAssetsProd = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/retrieveAssetsProd.js"() {
    init_utils3();
    init_getManifestEntry();
    init_extractAssetsQuery();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/inferMediaType.js
function inferMediaType(href) {
  if (styleFileRE.test(href)) {
    return { mediaType: "text/css", assetType: "style" };
  }
  if (isScriptFile(href)) {
    return { mediaType: "text/javascript", assetType: "script" };
  }
  if (href.endsWith(".png")) {
    return { assetType: "image", mediaType: "image/png" };
  }
  if (href.endsWith(".webp")) {
    return { assetType: "image", mediaType: "image/webp" };
  }
  if (href.endsWith(".jpg") || href.endsWith(".jpeg")) {
    return { assetType: "image", mediaType: "image/jpeg" };
  }
  if (href.endsWith(".gif")) {
    return { assetType: "image", mediaType: "image/gif" };
  }
  if (href.endsWith(".svg")) {
    return { assetType: "image", mediaType: "image/svg+xml" };
  }
  if (href.endsWith(".avif")) {
    return { assetType: "image", mediaType: "image/avif" };
  }
  if (href.endsWith(".ttf")) {
    return { assetType: "font", mediaType: "font/ttf" };
  }
  if (href.endsWith(".woff")) {
    return { assetType: "font", mediaType: "font/woff" };
  }
  if (href.endsWith(".woff2")) {
    return { assetType: "font", mediaType: "font/woff2" };
  }
  if (href.endsWith(".mp4")) {
    return { assetType: "video", mediaType: "video/mp4" };
  }
  if (href.endsWith(".webm")) {
    return { assetType: "video", mediaType: "video/webm" };
  }
  if (href.endsWith(".ogv")) {
    return { assetType: "video", mediaType: "video/ogg" };
  }
  if (href.endsWith(".mpeg") || href.endsWith(".mpg")) {
    return { assetType: "video", mediaType: "video/mpeg" };
  }
  if (href.endsWith(".avi")) {
    return { assetType: "video", mediaType: "video/x-msvideo" };
  }
  if (href.endsWith(".mov") || href.endsWith(".qt")) {
    return { assetType: "video", mediaType: "video/quicktime" };
  }
  if (href.endsWith(".mp3")) {
    return { assetType: "audio", mediaType: "audio/mpeg" };
  }
  if (href.endsWith(".wav")) {
    return { assetType: "audio", mediaType: "audio/wav" };
  }
  if (href.endsWith(".ogg")) {
    return { assetType: "audio", mediaType: "audio/ogg" };
  }
  if (href.endsWith(".m4a")) {
    return { assetType: "audio", mediaType: "audio/aac" };
  }
  if (href.endsWith("midi") || href.endsWith(".mid")) {
    return { assetType: "audio", mediaType: "audio/midi" };
  }
  if (href.endsWith(".flac")) {
    return { assetType: "audio", mediaType: "audio/flac" };
  }
  return null;
}
var init_inferMediaType = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/inferMediaType.js"() {
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/sortPageAssetsForEarlyHintsHeader.js
async function sortPageAssetsForEarlyHintsHeader(pageAssets, isProduction) {
  pageAssets.sort(higherFirst(({ assetType }) => {
    if (!isProduction && assetType === "script") {
      return 1;
    }
    let priority = 0;
    if (assetType === "style")
      return priority;
    priority--;
    if (assetType === "font")
      return priority;
    priority--;
    if (assetType === "image")
      return priority;
    priority--;
    if (assetType === "video")
      return priority;
    priority--;
    if (assetType === "audio")
      return priority;
    priority--;
    if (assetType !== "script")
      return priority;
    priority--;
    return priority;
  }));
}
var init_sortPageAssetsForEarlyHintsHeader = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets/sortPageAssetsForEarlyHintsHeader.js"() {
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets.js
async function getPageAssets(pageContext, clientDependencies, clientEntries) {
  const globalContext = pageContext._globalContext;
  const { isProduction } = globalContext;
  const isDev = !isProduction;
  let assetUrls;
  let clientEntriesSrc;
  if (isDev) {
    const { viteDevServer } = globalContext;
    clientEntriesSrc = await Promise.all(clientEntries.map((clientEntry) => globalObject4.resolveClientEntriesDev(clientEntry, viteDevServer)));
    assetUrls = await retrieveAssetsDev(clientDependencies, viteDevServer);
  } else {
    const { assetsManifest } = globalContext;
    clientEntriesSrc = clientEntries.map((clientEntry) => resolveClientEntriesProd(clientEntry, assetsManifest));
    assetUrls = retrieveAssetsProd(clientDependencies, assetsManifest, pageContext._includeAssetsImportedByServer);
  }
  let pageAssets = [];
  unique([...clientEntriesSrc, ...assetUrls]).forEach((src) => {
    const { mediaType = null, assetType = null } = inferMediaType(src) || {};
    if (isDev && assetType === "style") {
      if (src.endsWith("?inline")) {
        return;
      }
      src = src + "?direct";
    }
    const isEntry = clientEntriesSrc.includes(src) || // Vite automatically injects CSS, not only in development, but also in production (albeit with a FOUC). Therefore, strictly speaking, CSS aren't entries. We still, however, set `isEntry: true` for CSS, in order to denote page assets that should absolutely be injected in the HTML, regardless of preload strategy (not injecting CSS leads to FOUC).
    assetType === "style";
    pageAssets.push({
      src,
      assetType,
      mediaType,
      isEntry
    });
  });
  pageAssets.forEach(({ src }) => {
    assert(1 === pageAssets.filter((p13) => p13.src === src).length);
  });
  pageAssets = pageAssets.map((pageAsset) => {
    const baseServerAssets = pageContext._baseAssets || pageContext._baseServer;
    pageAsset.src = prependBase(toPosixPath(pageAsset.src), baseServerAssets);
    return pageAsset;
  });
  await sortPageAssetsForEarlyHintsHeader(pageAssets, isProduction);
  return pageAssets;
}
function resolveClientEntriesProd(clientEntry, assetsManifest) {
  const { manifestEntry } = getManifestEntry(clientEntry, assetsManifest);
  assert(manifestEntry.isEntry || manifestEntry.isDynamicEntry || clientEntry.endsWith(".css"), { clientEntry });
  let { file } = manifestEntry;
  assert(!file.startsWith("/"));
  return "/" + file;
}
var globalObject4;
var init_getPageAssets = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/getPageAssets.js"() {
    init_utils3();
    init_retrieveAssetsDev();
    init_retrieveAssetsProd();
    init_inferMediaType();
    init_getManifestEntry();
    init_sortPageAssetsForEarlyHintsHeader();
    globalObject4 = getGlobalObject("renderPage/getPageAssets.ts", {
      resolveClientEntriesDev: null
    });
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/debugPageFiles.js
function debugPageFiles({ pageContext, isHtmlOnly, isClientRouting, pageFilesLoaded, pageFilesServerSide, pageFilesClientSide, clientEntries, clientDependencies }) {
  const debug5 = createDebugger("vike:pageFiles", { serialization: { emptyArray: "None" } });
  const padding = "   - ";
  debug5("All page files:", printPageFiles(pageContext._pageFilesAll, true));
  debug5(`URL:`, pageContext.urlOriginal);
  debug5.options({ serialization: { emptyArray: "No match" } })(`Routing:`, printRouteMatches(pageContext._debugRouteMatches));
  debug5(`pageId:`, pageContext.pageId);
  debug5("Page type:", isHtmlOnly ? "HTML-only" : "SSR/SPA");
  debug5(`Routing type:`, !isHtmlOnly && isClientRouting ? "Client Routing" : "Server Routing");
  debug5("Server-side page files:", printPageFiles(pageFilesLoaded));
  assert(samePageFiles(pageFilesLoaded, pageFilesServerSide));
  debug5("Client-side page files:", printPageFiles(pageFilesClientSide));
  debug5("Client-side entries:", clientEntries);
  debug5("Client-side dependencies:", clientDependencies);
  return;
  function printRouteMatches(debugRouteMatches) {
    if (debugRouteMatches === "ROUTING_ERROR") {
      return "Routing Failed";
    }
    if (debugRouteMatches === "CUSTOM_ROUTING") {
      return "Custom Routing";
    }
    return debugRouteMatches;
  }
  function printPageFiles(pageFiles, genericPageFilesLast = false) {
    if (pageFiles.length === 0) {
      return "None";
    }
    return "\n" + pageFiles.sort((p1, p22) => p1.filePath.localeCompare(p22.filePath)).sort(makeFirst((p13) => p13.isRendererPageFile ? !genericPageFilesLast : null)).sort(makeFirst((p13) => p13.isDefaultPageFile ? !genericPageFilesLast : null)).map((p13) => p13.filePath).map((s37) => s37.split("_default.page.").join(`${picocolors_default.blue("_default")}.page.`)).map((s37) => s37.split("/renderer/").join(`/${picocolors_default.red("renderer")}/`)).map((s37) => padding + s37).join("\n");
  }
}
function samePageFiles(pageFiles1, pageFiles2) {
  return pageFiles1.every((p1) => pageFiles2.some((p22) => p22.filePath === p1.filePath)) && pageFiles2.every((p22) => pageFiles1.some((p1) => p1.filePath === p22.filePath));
}
var init_debugPageFiles = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/debugPageFiles.js"() {
    init_picocolors();
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/findPageConfig.js
function findPageConfig(pageConfigs, pageId) {
  const result = pageConfigs.filter((p13) => p13.pageId === pageId);
  assert(result.length <= 1);
  const pageConfig = result[0] ?? null;
  return pageConfig;
}
var init_findPageConfig = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/findPageConfig.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzeClientSide.js
function analyzeClientSide(pageConfig, pageFilesAll, pageId) {
  if (pageConfig) {
    const isClientRouting = getConfigValueRuntime(pageConfig, "clientRouting", "boolean")?.value ?? false;
    const isClientRuntimeLoaded = getConfigValueRuntime(pageConfig, "isClientRuntimeLoaded", "boolean")?.value ?? false;
    return { isClientRuntimeLoaded, isClientRouting };
  } else {
    const { isHtmlOnly, isClientRouting } = analyzePageClientSide(pageFilesAll, pageId);
    return { isClientRuntimeLoaded: !isHtmlOnly, isClientRouting };
  }
}
var init_analyzeClientSide = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/analyzeClientSide.js"() {
    init_getConfigValueRuntime();
    init_analyzePageClientSide();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/analyzePage.js
async function analyzePage(pageFilesAll, pageConfig, pageId, globalContext) {
  if (pageConfig) {
    const { isClientRuntimeLoaded, isClientRouting } = analyzeClientSide(pageConfig, pageFilesAll, pageId);
    const clientEntries = [];
    const clientFilePath = getConfigValueRuntime(pageConfig, "client", "string")?.value ?? null;
    if (clientFilePath)
      clientEntries.push(clientFilePath);
    if (isClientRuntimeLoaded)
      clientEntries.push(getVikeClientEntry(isClientRouting));
    const clientDependencies = [];
    clientDependencies.push({
      id: getVirtualFileIdPageConfigValuesAll(pageConfig.pageId, true),
      onlyAssets: isClientRuntimeLoaded ? false : true,
      eagerlyImported: false
    });
    if (!globalContext.isProduction) {
      clientDependencies.push({
        id: getVirtualFileIdPageConfigValuesAll(pageConfig.pageId, false),
        onlyAssets: true,
        eagerlyImported: false
      });
    }
    clientEntries.forEach((clientEntry) => {
      clientDependencies.push({
        id: clientEntry,
        onlyAssets: false,
        eagerlyImported: false
      });
    });
    return {
      isHtmlOnly: !isClientRuntimeLoaded,
      isClientRouting,
      clientEntries,
      clientDependencies,
      // pageFilesClientSide and pageFilesServerSide are only used for debugging
      pageFilesClientSide: [],
      pageFilesServerSide: []
    };
  } else {
    return analyzePageClientSide(pageFilesAll, pageId);
  }
}
var init_analyzePage = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/analyzePage.js"() {
    init_determineClientEntry();
    init_analyzePageClientSide();
    init_virtualFilePageConfigValuesAll();
    init_analyzeClientSide();
    init_getConfigValueRuntime();
  }
});

// node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/parse.js
var require_parse = __commonJS({
  "node_modules/.pnpm/@brillout+json-serializer@0.5.15/node_modules/@brillout/json-serializer/dist/cjs/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseTransform = exports.parse = void 0;
    var types_1 = require_types();
    function parse3(str) {
      const value = JSON.parse(str);
      return parseTransform2(value);
    }
    exports.parse = parse3;
    function parseTransform2(value) {
      if (typeof value === "string") {
        return reviver(value);
      }
      if (
        // Also matches arrays
        typeof value === "object" && value !== null
      ) {
        Object.entries(value).forEach(([key, val]) => {
          ;
          value[key] = parseTransform2(val);
        });
      }
      return value;
    }
    exports.parseTransform = parseTransform2;
    function reviver(value) {
      for (const { match, deserialize } of types_1.types) {
        if (match(value)) {
          return deserialize(value, parse3);
        }
      }
      return value;
    }
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/assertPlusFileExport.js
function assertPlusFileExport(fileExports, filePathToShowToUser, configName) {
  const exportNames = Object.keys(fileExports);
  const isValid2 = (exportName) => exportName === "default" || exportName === configName;
  const exportNamesValid = exportNames.filter(isValid2);
  const exportDefault = picocolors_default.code("export default");
  const exportNamed = picocolors_default.code(`export { ${configName} }`);
  if (exportNamesValid.length === 0) {
    assertUsage(false, `${filePathToShowToUser} should have ${exportNamed} or ${exportDefault}`);
  }
  if (exportNamesValid.length === 2) {
    assertUsage(false, `${filePathToShowToUser} is ambiguous: remove ${exportDefault} or ${exportNamed}`);
  }
  assert(exportNamesValid.length === 1);
  const exportNamesInvalid = exportNames.filter((e12) => !isValid2(e12)).filter((exportName) => !SIDE_EXPORTS_TOLERATE.includes(exportName));
  if (!SIDE_EXPORTS_DO_NOT_CHECK.some((ext) => filePathToShowToUser.endsWith(ext))) {
    exportNamesInvalid.forEach((exportInvalid) => {
      assertWarning2(false, `${filePathToShowToUser} unexpected ${picocolors_default.cyan(`export { ${exportInvalid} }`)}, see https://vike.dev/no-side-exports`, {
        onlyOnce: true
      });
    });
  }
}
var SIDE_EXPORTS_TOLERATE, SIDE_EXPORTS_DO_NOT_CHECK;
var init_assertPlusFileExport = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/assertPlusFileExport.js"() {
    init_utils();
    init_picocolors();
    SIDE_EXPORTS_TOLERATE = [
      // vite-plugin-solid adds `export { $$registrations }`
      "$$registrations",
      // @vitejs/plugin-vue adds `export { _rerender_only }`
      "_rerender_only"
    ];
    SIDE_EXPORTS_DO_NOT_CHECK = [".md", ".mdx"];
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/serialize/parsePageConfigs.js
function parsePageConfigs(pageConfigsSerialized2, pageConfigGlobalSerialized2) {
  const pageConfigs = pageConfigsSerialized2.map((pageConfigSerialized) => {
    const configValues = parseConfigValuesSerialized(pageConfigSerialized.configValuesSerialized);
    assertRouteConfigValue(configValues);
    const pageConfig = { ...pageConfigSerialized, configValues };
    return pageConfig;
  });
  const pageConfigGlobal = { configValues: {} };
  {
    const configValues = parseConfigValuesSerialized(pageConfigGlobalSerialized2.configValuesSerialized);
    Object.assign(pageConfigGlobal.configValues, configValues);
  }
  return { pageConfigs, pageConfigGlobal };
}
function assertRouteConfigValue(configValues) {
  const configName = "route";
  const configValue = configValues[configName];
  if (!configValue)
    return;
  const { value, definedAtData } = configValue;
  const configValueType = typeof value;
  assert(definedAtData);
  const configDefinedAt = getConfigDefinedAt("Config", configName, definedAtData);
  assertUsage(configValueType === "string" || isCallable(value), `${configDefinedAt} has an invalid type '${configValueType}': it should be a string or a function instead, see https://vike.dev/route`);
}
function parseConfigValuesSerialized(configValuesSerialized3) {
  const configValues = {};
  Object.entries(configValuesSerialized3).forEach(([configName, configValueSeriliazed]) => {
    let configValue;
    if (configValueSeriliazed.type === "cumulative") {
      const { valueSerialized, ...common } = configValueSeriliazed;
      const value = valueSerialized.map((valueSerializedElement, i11) => {
        const { value: value2, sideExports } = parseValueSerialized(valueSerializedElement, configName, () => {
          const definedAtFile = configValueSeriliazed.definedAtData[i11];
          assert(definedAtFile);
          return definedAtFile;
        });
        addSideExports(sideExports);
        return value2;
      });
      configValue = { value, ...common };
    } else {
      const { valueSerialized, ...common } = configValueSeriliazed;
      const { value, sideExports } = parseValueSerialized(valueSerialized, configName, () => {
        assert(configValueSeriliazed.type !== "computed");
        const { definedAtData } = configValueSeriliazed;
        const definedAtFile = Array.isArray(definedAtData) ? definedAtData[0] : definedAtData;
        return definedAtFile;
      });
      addSideExports(sideExports);
      configValue = { value, ...common };
    }
    configValues[configName] = configValue;
  });
  return configValues;
  function addSideExports(sideExports) {
    sideExports.forEach((sideExport) => {
      const { configName, configValue } = sideExport;
      if (!configValues[configName]) {
        configValues[configName] = configValue;
      } else {
      }
    });
  }
}
function parseValueSerialized(valueSerialized, configName, getDefinedAtFile) {
  if (valueSerialized.type === "js-serialized") {
    let { value } = valueSerialized;
    value = (0, import_parse.parseTransform)(value);
    return { value, sideExports: [] };
  }
  if (valueSerialized.type === "pointer-import") {
    const { value } = valueSerialized;
    return { value, sideExports: [] };
  }
  if (valueSerialized.type === "plus-file") {
    const definedAtFile = getDefinedAtFile();
    const { exportValues } = valueSerialized;
    assert(!definedAtFile.definedBy);
    assertPlusFileExport(exportValues, definedAtFile.filePathToShowToUser, configName);
    let value;
    let valueWasFound = false;
    const sideExports = [];
    Object.entries(exportValues).forEach(([exportName, exportValue]) => {
      const isSideExport = exportName !== "default" && exportName !== configName;
      if (!isSideExport) {
        value = exportValue;
        assert(!valueWasFound);
        valueWasFound = true;
      } else {
        sideExports.push({
          configName: exportName,
          configValue: {
            type: "standard",
            // We don't support side exports for cumulative values. We could support it but it isn't trivial.
            value: exportValue,
            definedAtData: {
              filePathToShowToUser: definedAtFile.filePathToShowToUser,
              fileExportPathToShowToUser: [exportName]
            }
          }
        });
      }
    });
    assert(valueWasFound);
    return { value, sideExports };
  }
  assert(false);
}
var import_parse;
var init_parsePageConfigs = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/serialize/parsePageConfigs.js"() {
    init_utils();
    init_getConfigDefinedAt();
    import_parse = __toESM(require_parse(), 1);
    init_assertPlusFileExport();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/loadConfigValues.js
async function loadConfigValues(pageConfig, isDev) {
  if ("isAllLoaded" in pageConfig && // We don't need to cache in dev, since Vite already caches the virtual module
  !isDev) {
    return pageConfig;
  }
  const { moduleId, moduleExports } = pageConfig.loadConfigValuesAll();
  const configValuesLoaded = await moduleExports;
  if (!configValuesLoaded)
    assert(false, { moduleExports, configValuesLoaded, moduleId });
  const configValues = parseConfigValuesSerialized(configValuesLoaded.configValuesSerialized);
  Object.assign(pageConfig.configValues, configValues);
  objectAssign(pageConfig, { isAllLoaded: true });
  return pageConfig;
}
var init_loadConfigValues = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/page-configs/loadConfigValues.js"() {
    init_utils();
    init_parsePageConfigs();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loadUserFilesServerSide.js
async function loadUserFilesServerSide(pageContext) {
  const pageConfig = findPageConfig(pageContext._pageConfigs, pageContext.pageId);
  const globalContext = pageContext._globalContext;
  const [{ pageFilesLoaded, pageContextExports }] = await Promise.all([
    loadPageUserFiles(pageContext._pageFilesAll, pageConfig, globalContext.pageConfigGlobal, pageContext.pageId, !globalContext.isProduction),
    analyzePageClientSideInit(pageContext._pageFilesAll, pageContext.pageId, { sharedPageFilesAlreadyLoaded: true })
  ]);
  const { isHtmlOnly, isClientRouting, clientEntries, clientDependencies, pageFilesClientSide, pageFilesServerSide } = await analyzePage(pageContext._pageFilesAll, pageConfig, pageContext.pageId, globalContext);
  const isV1Design = !!pageConfig;
  const passToClient = [];
  const errMsg = " should be an array of strings.";
  if (!isV1Design) {
    pageContextExports.exportsAll.passToClient?.forEach((e12) => {
      assertUsage(hasProp(e12, "exportValue", "string[]"), `${e12.exportSource}${errMsg}`);
      passToClient.push(...e12.exportValue);
    });
  } else {
    pageContextExports.configEntries.passToClient?.forEach((e12) => {
      const { configValue } = e12;
      assert(isArray(configValue));
      const vals = configValue.flat(1);
      assertUsage(isArrayOfStrings(vals), `${e12.configDefinedAt}${errMsg}`);
      passToClient.push(...vals);
    });
  }
  const pageContextAddendum = {};
  objectAssign(pageContextAddendum, pageContextExports);
  objectAssign(pageContextAddendum, {
    Page: pageContextExports.exports.Page,
    _isHtmlOnly: isHtmlOnly,
    _passToClient: passToClient,
    _pageFilePathsLoaded: pageFilesLoaded.map((p13) => p13.filePath)
  });
  objectAssign(pageContextAddendum, {
    __getPageAssets: async () => {
      if ("_pageAssets" in pageContext) {
        return pageContext._pageAssets;
      } else {
        const pageAssets = await getPageAssets(pageContext, clientDependencies, clientEntries);
        objectAssign(pageContext, { _pageAssets: pageAssets });
        return pageContext._pageAssets;
      }
    }
  });
  Object.assign(pageContextAddendum, {
    _getPageAssets: async () => {
      assertWarning2(false, "pageContext._getPageAssets() deprecated, see https://vike.dev/preloading", {
        onlyOnce: true,
        showStackTrace: true
      });
      const pageAssetsOldFormat = [];
      (await pageContextAddendum.__getPageAssets()).forEach((p13) => {
        if (p13.assetType === "script" && p13.isEntry) {
          pageAssetsOldFormat.push({
            src: p13.src,
            preloadType: null,
            assetType: "script",
            mediaType: p13.mediaType
          });
        }
        pageAssetsOldFormat.push({
          src: p13.src,
          preloadType: p13.assetType,
          assetType: p13.assetType === "style" ? "style" : "preload",
          mediaType: p13.mediaType
        });
      });
      return pageAssetsOldFormat;
    }
  });
  {
    debugPageFiles({
      pageContext,
      isHtmlOnly,
      isClientRouting,
      pageFilesLoaded,
      pageFilesClientSide,
      pageFilesServerSide,
      clientEntries,
      clientDependencies
    });
  }
  return pageContextAddendum;
}
async function loadPageUserFiles(pageFilesAll, pageConfig, pageConfigGlobal, pageId, isDev) {
  const pageFilesServerSide = getPageFilesServerSide(pageFilesAll, pageId);
  const pageConfigLoaded = !pageConfig ? null : await loadConfigValues(pageConfig, isDev);
  await Promise.all(pageFilesServerSide.map((p13) => p13.loadFile?.()));
  const pageContextExports = getPageConfigUserFriendly_oldDesign(pageFilesServerSide, pageConfigLoaded, pageConfigGlobal);
  return {
    pageContextExports,
    pageFilesLoaded: pageFilesServerSide
  };
}
var init_loadUserFilesServerSide = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loadUserFilesServerSide.js"() {
    init_getPageFiles();
    init_getPageConfigUserFriendly();
    init_analyzePageClientSide();
    init_utils3();
    init_getPageAssets();
    init_debugPageFiles();
    init_findPageConfig();
    init_analyzePage();
    init_loadConfigValues();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/hooks/getHook.js
function getHook(pageContext, hookName) {
  if (!(hookName in pageContext.exports)) {
    return null;
  }
  const { hooksTimeout } = pageContext.config;
  const hookTimeout = getHookTimeout(hooksTimeout, hookName);
  const hookFn = pageContext.exports[hookName];
  const file = pageContext.exportsAll[hookName][0];
  assert(file.exportValue === hookFn);
  if (hookFn === null)
    return null;
  const hookFilePath = file.filePath;
  assert(hookFilePath);
  assert(!hookFilePath.endsWith(" "));
  assertHookFn(hookFn, { hookName, hookFilePath });
  return { hookFn, hookName, hookFilePath, hookTimeout };
}
function getHookFromPageConfigGlobal(pageConfigGlobal, hookName) {
  const configValue = pageConfigGlobal.configValues[hookName];
  if (!configValue)
    return null;
  const hookFn = configValue.value;
  if (!hookFn)
    return null;
  const hookFilePath = getHookFilePathToShowToUser(configValue.definedAtData);
  assert(hookFilePath);
  assertHookFn(hookFn, { hookName, hookFilePath });
  const hookTimeout = getHookTimeoutDefault(hookName);
  return { hookFn, hookName, hookFilePath, hookTimeout };
}
function assertHookFn(hookFn, { hookName, hookFilePath }) {
  assert(hookName && hookFilePath);
  assert(!hookName.endsWith(")"));
  assertUsage(isCallable(hookFn), `Hook ${hookName}() defined by ${hookFilePath} should be a function`);
  checkType(hookFn);
}
function getHookTimeout(hooksTimeoutProvidedByUser, hookName) {
  const hooksTimeoutProvidedbyUserNormalized = getHooksTimeoutProvidedByUserNormalized(hooksTimeoutProvidedByUser);
  if (hooksTimeoutProvidedbyUserNormalized === false)
    return { error: false, warning: false };
  const providedbyUser = hooksTimeoutProvidedbyUserNormalized[hookName];
  const hookTimeout = getHookTimeoutDefault(hookName);
  if (providedbyUser?.error !== void 0)
    hookTimeout.error = providedbyUser.error;
  if (providedbyUser?.warning !== void 0)
    hookTimeout.warning = providedbyUser.warning;
  return hookTimeout;
}
function getHooksTimeoutProvidedByUserNormalized(hooksTimeoutProvidedByUser) {
  if (hooksTimeoutProvidedByUser === void 0)
    return {};
  if (hooksTimeoutProvidedByUser === false)
    return false;
  assertUsage(isObject(hooksTimeoutProvidedByUser), `Setting ${picocolors_default.cyan("hooksTimeout")} should be ${picocolors_default.cyan("false")} or an object`);
  const hooksTimeoutProvidedByUserNormalized = {};
  Object.entries(hooksTimeoutProvidedByUser).forEach(([hookName, hookTimeoutProvidedbyUser]) => {
    if (hookTimeoutProvidedbyUser === false) {
      hooksTimeoutProvidedByUserNormalized[hookName] = { error: false, warning: false };
      return;
    }
    assertUsage(isObject(hookTimeoutProvidedbyUser), `Setting ${picocolors_default.cyan(`hooksTimeout.${hookName}`)} should be ${picocolors_default.cyan("false")} or an object`);
    const [error, warning3] = ["error", "warning"].map((timeoutName) => {
      const timeoutVal = hookTimeoutProvidedbyUser[timeoutName];
      if (timeoutVal === void 0 || timeoutVal === false)
        return timeoutVal;
      const errPrefix = `Setting ${picocolors_default.cyan(`hooksTimeout.${hookName}.${timeoutName}`)} should be`;
      assertUsage(typeof timeoutVal === "number", `${errPrefix} ${picocolors_default.cyan("false")} or a number`);
      assertUsage(timeoutVal > 0, `${errPrefix} a positive number`);
      return timeoutVal;
    });
    hooksTimeoutProvidedByUserNormalized[hookName] = { error, warning: warning3 };
  });
  return hooksTimeoutProvidedByUserNormalized;
}
function getHookTimeoutDefault(hookName) {
  if (hookName === "onBeforeRoute") {
    return {
      error: 5 * 1e3,
      warning: 1 * 1e3
    };
  }
  if (globalObject5.isPrerendering) {
    return {
      error: 2 * 60 * 1e3,
      warning: 30 * 1e3
    };
  } else {
    assert(!hookName.toLowerCase().includes("prerender"));
  }
  return {
    error: 30 * 1e3,
    warning: 4 * 1e3
  };
}
var globalObject5;
var init_getHook = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/hooks/getHook.js"() {
    init_getGlobalObject();
    init_helpers();
    init_getConfigValueRuntime();
    init_utils();
    init_picocolors();
    globalObject5 = getGlobalObject("hooks/getHook.ts", {});
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/preparePageContextForUserConsumption.js
function preparePageContextForUserConsumption(pageContext) {
  assert(pageContext.pageId);
  assert("config" in pageContext);
  assert("configEntries" in pageContext);
  addIs404ToPageProps(pageContext);
  if (!("_pageId" in pageContext)) {
    Object.defineProperty(pageContext, "_pageId", {
      get() {
        assertWarning2(false, "pageContext._pageId has been renamed to pageContext.pageId", {
          showStackTrace: true,
          onlyOnce: true
        });
        return pageContext.pageId;
      },
      enumerable: false
    });
  }
  sortPageContext(pageContext);
}
function sortPageContext(pageContext) {
  let descriptors = Object.getOwnPropertyDescriptors(pageContext);
  for (const key of Object.keys(pageContext))
    delete pageContext[key];
  descriptors = Object.fromEntries(Object.entries(descriptors).sort(([key1], [key2]) => compareString(key1, key2)));
  Object.defineProperties(pageContext, descriptors);
}
var init_preparePageContextForUserConsumption = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/preparePageContextForUserConsumption.js"() {
    init_utils();
    init_addIs404ToPageProps();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/preparePageContextForUserConsumptionServerSide.js
function preparePageContextForUserConsumptionServerSide(pageContext) {
  assertPageContextUrl(pageContext);
  assert(isPlainObject(pageContext.routeParams));
  assert("Page" in pageContext);
  assert(typeof pageContext.isClientSideNavigation === "boolean");
  assert(pageContext._isPageContextObject);
  assert(pageContext.isClientSide === false);
  assert(typeof pageContext.isPrerendering === "boolean");
  preparePageContextForUserConsumption(pageContext);
}
var init_preparePageContextForUserConsumptionServerSide = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/preparePageContextForUserConsumptionServerSide.js"() {
    init_utils3();
    init_getPageContextUrlComputed();
    init_preparePageContextForUserConsumption();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertHookReturnedObject.js
function assertHookReturnedObject(obj, keysExpected, errPrefix) {
  assert(!errPrefix.endsWith(" "));
  const keysUnknown = [];
  const keys3 = Object.keys(obj);
  for (const key of keys3) {
    if (!keysExpected.includes(key)) {
      keysUnknown.push(key);
    }
  }
  assertUsage(keysUnknown.length === 0, [
    errPrefix,
    "returned an object with following unknown keys:",
    stringifyStringArray(keysUnknown) + ".",
    "Only following keys are allowed:",
    stringifyStringArray(keysExpected) + "."
  ].join(" "));
}
var init_assertHookReturnedObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertHookReturnedObject.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/humanizeTime.js
function humanizeTime(milliseconds) {
  const seconds = milliseconds / 1e3;
  if (seconds < 120) {
    const n12 = round(seconds);
    return `${n12} second${plural(n12)}`;
  }
  {
    const minutes = seconds / 60;
    const n12 = round(minutes);
    return `${n12} minute${plural(n12)}`;
  }
}
function round(n12) {
  let rounded = n12.toFixed(1);
  if (rounded.endsWith(".0"))
    rounded = rounded.slice(0, -2);
  return rounded;
}
function plural(n12) {
  return n12 === "1" ? "" : "s";
}
var init_humanizeTime = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/humanizeTime.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/hooks/executeHook.js
function isUserHookError(err) {
  if (!isObject(err))
    return false;
  return globalObject6.userHookErrors.get(err) ?? false;
}
function executeHook(hookFnCaller, hook, pageContext) {
  const { hookName, hookFilePath, hookTimeout: { error: timeoutErr, warning: timeoutWarn } } = hook;
  let resolve;
  let reject;
  const promise = new Promise((resolve_, reject_) => {
    resolve = (ret) => {
      clearTimeouts();
      resolve_(ret);
    };
    reject = (err) => {
      clearTimeouts();
      reject_(err);
    };
  });
  const clearTimeouts = () => {
    if (currentTimeoutWarn)
      clearTimeout(currentTimeoutWarn);
    if (currentTimeoutErr)
      clearTimeout(currentTimeoutErr);
  };
  const currentTimeoutWarn = isNotDisabled(timeoutWarn) && setTimeout(() => {
    assertWarning2(false, `The ${hookName}() hook defined by ${hookFilePath} is slow: it's taking more than ${humanizeTime(timeoutWarn)} (https://vike.dev/hooksTimeout)`, { onlyOnce: false });
  }, timeoutWarn);
  const currentTimeoutErr = isNotDisabled(timeoutErr) && setTimeout(() => {
    const err = getProjectError(`The ${hookName}() hook defined by ${hookFilePath} timed out: it didn't finish after ${humanizeTime(timeoutErr)} (https://vike.dev/hooksTimeout)`);
    reject(err);
  }, timeoutErr);
  (async () => {
    try {
      providePageContext(pageContext);
      const ret = await hookFnCaller();
      resolve(ret);
    } catch (err) {
      if (isObject(err)) {
        globalObject6.userHookErrors.set(err, { hookName, hookFilePath });
      }
      reject(err);
    }
  })();
  return promise;
}
function isNotDisabled(timeout) {
  return !!timeout && timeout !== Infinity;
}
function providePageContext(pageContext) {
  globalObject6.pageContext = pageContext;
  Promise.resolve().then(() => {
    globalObject6.pageContext = null;
  });
}
var globalObject6;
var init_executeHook = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/hooks/executeHook.js"() {
    init_assert();
    init_getGlobalObject();
    init_humanizeTime();
    init_isObject();
    globalObject6 = getGlobalObject("utils/executeHook.ts", {
      userHookErrors: /* @__PURE__ */ new WeakMap(),
      pageContext: null
    });
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertRoutingType.js
function assertClientRouting() {
  assertNoContradiction(checkIfClientRouting());
  state.isClientRouting = true;
}
function checkIfClientRouting() {
  return state.isClientRouting !== false;
}
function assertNoContradiction(noContradiction) {
  assertUsage(isBrowser(), `${picocolors_default.cyan("import { something } from 'vike/client/router'")} is forbidden on the server-side`, { showStackTrace: true });
  assertWarning2(noContradiction, "You shouldn't `import { something } from 'vike/client/router'` when using Server Routing. The 'vike/client/router' utilities work only with Client Routing. In particular, don't `import { navigate }` nor `import { prefetch }` as they unnecessarily bloat your client-side bundle sizes.", { showStackTrace: true, onlyOnce: true });
}
var state;
var init_assertRoutingType = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/utils/assertRoutingType.js"() {
    init_assert();
    init_getGlobalObject();
    init_isBrowser();
    init_picocolors();
    state = getGlobalObject("utils/assertRouterType.ts", {});
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/utils.js
var init_utils4 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/utils.js"() {
    init_assertRoutingType();
    init_isBrowser();
    init_assert();
    init_hasProp();
    init_isObjectWithKeys();
    init_sorter();
    init_isPromise();
    init_isPlainObject();
    init_objectAssign();
    init_slice();
    init_unique();
    init_isBrowser();
    init_parseUrl();
    init_checkType();
    init_joinEnglish();
    init_truncateString();
    init_isCallable();
    if (isBrowser()) {
      assertClientRouting();
    }
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/abort.js
function isAbortError(thing) {
  return typeof thing === "object" && thing !== null && stamp2 in thing;
}
function logAbortErrorHandled(err, isProduction, pageContext) {
  if (isProduction)
    return;
  const urlCurrent = pageContext._urlRewrite ?? pageContext.urlOriginal;
  assert(urlCurrent);
  const abortCall = err._pageContextAbort._abortCall;
  assert(abortCall);
  const hookLoc = isUserHookError(err);
  let thrownBy = "";
  if (hookLoc) {
    thrownBy = ` by ${picocolors_default.cyan(`${hookLoc.hookName}()`)} hook defined at ${hookLoc.hookFilePath}`;
  } else {
  }
  assertInfo(false, `${picocolors_default.cyan(abortCall)} thrown${thrownBy} while rendering ${picocolors_default.cyan(urlCurrent)}`, {
    onlyOnce: false
  });
}
function getPageContextFromAllRewrites(pageContextsFromRewrite) {
  assertNoInfiniteLoop(pageContextsFromRewrite);
  const pageContextFromAllRewrites = { _urlRewrite: null };
  pageContextsFromRewrite.forEach((pageContextFromRewrite) => {
    Object.assign(pageContextFromAllRewrites, pageContextFromRewrite);
  });
  return pageContextFromAllRewrites;
}
function assertNoInfiniteLoop(pageContextsFromRewrite) {
  const urlRewrites = [];
  pageContextsFromRewrite.forEach((pageContext) => {
    const urlRewrite = pageContext._urlRewrite;
    {
      const idx = urlRewrites.indexOf(urlRewrite);
      if (idx !== -1) {
        const loop = [...urlRewrites.slice(idx), urlRewrite].map((url) => `render('${url}')`).join(" => ");
        assertUsage(false, `Infinite loop of render() calls: ${loop}`);
      }
    }
    urlRewrites.push(urlRewrite);
  });
}
function assertNoInfiniteAbortLoop(rewriteCount, redirectCount) {
  const abortCalls = [
    // prettier-ignore
    // biome-ignore format:
    rewriteCount > 0 && picocolors_default.cyan("throw render('/some-url')"),
    redirectCount > 0 && picocolors_default.cyan("throw redirect('/some-url')")
  ].filter(Boolean).join(" and ");
  assertUsage(rewriteCount + redirectCount <= 7, `Maximum chain length of 7 ${abortCalls} exceeded. Did you define an infinite loop of ${abortCalls}?`);
}
var stamp2;
var init_abort = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/abort.js"() {
    init_executeHook();
    init_utils4();
    init_picocolors();
    stamp2 = "_isAbortError";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isNewError.js
function isNewError(errErrorPage, errNominalPage) {
  warnIfErrorIsNotObject(errErrorPage);
  return !isSameErrorMessage(errNominalPage, errErrorPage) || // Isn't this redudant/superfluous? I think we can remove this entire file and only use isSameErrorMessage() instead.
  !hasAlreadyLogged(errNominalPage);
}
function hasAlreadyLogged(err) {
  if (!isObject(err))
    return false;
  return globalObject7.wasAlreadyLogged.has(err);
}
function setAlreadyLogged(err) {
  if (!isObject(err))
    return;
  globalObject7.wasAlreadyLogged.add(err);
}
var globalObject7;
var init_isNewError = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isNewError.js"() {
    init_utils3();
    globalObject7 = getGlobalObject("renderPage/isNewError.ts", {
      wasAlreadyLogged: /* @__PURE__ */ new WeakSet()
    });
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/logErrorHint.js
function logErrorHint(error) {
  const hint = getErrorHint(error);
  if (hint)
    logHint(hint);
}
function getErrorHint(error) {
  {
    const knownErr = isKnownError(error);
    if (knownErr) {
      if (knownErr.link) {
        return hintLinkPrefix + knownErr.link;
      } else {
        return hintDefault;
      }
    }
  }
  return null;
}
function logHint(hint) {
  hint = formatHintLog(hint);
  hint = picocolors_default.bold(hint);
  console.error(hint);
}
function isKnownError(error) {
  const anywhere = getAnywhere(error);
  const knownErr = [
    //
    ...errorsMisc,
    ...errorsReact,
    ...errorsCjsEsm_withPreciseLink,
    ...errorsCjsEsm
  ].find((knownErorr) => {
    if (!includesLowercase(anywhere, knownErorr.errMsg))
      return false;
    if (knownErorr.mustMentionNodeModules !== false && !includesLowercase(anywhere, "node_modules"))
      return false;
    return true;
  });
  if (!knownErr)
    return false;
  return knownErr;
}
function includesLowercase(str, substr) {
  if (substr instanceof RegExp) {
    let { flags: flags2 } = substr;
    if (!flags2.includes("i"))
      flags2 += "i";
    const regex = new RegExp(substr.source, flags2);
    return regex.test(str);
  }
  if (typeof substr === "string") {
    return str.toLowerCase().includes(substr.toLowerCase());
  }
  assert(false);
}
function getAnywhere(error) {
  const code = getErrCode(error);
  const message = getErrMessage(error);
  const stack2 = getErrStack(error);
  const anywhere = [code, message, stack2].filter(Boolean).join("\n");
  return anywhere;
}
function getErrMessage(err) {
  if (!isObject(err))
    return null;
  if (!err.message)
    return null;
  if (typeof err.message !== "string")
    return null;
  return err.message;
}
function getErrCode(err) {
  if (!isObject(err))
    return null;
  if (!err.code)
    return null;
  if (typeof err.code !== "string")
    return null;
  return err.code;
}
function getErrStack(err) {
  if (!isObject(err))
    return null;
  if (!err.stack)
    return null;
  if (typeof err.stack !== "string")
    return null;
  return err.stack;
}
var hintDefault, hintLinkPrefix, errorsMisc, reactInvalidEelement, errorsReact, errorsCjsEsm_withPreciseLink, errorsCjsEsm;
var init_logErrorHint = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/logErrorHint.js"() {
    init_utils3();
    init_picocolors();
    hintDefault = "The error could be a CJS/ESM issue, see https://vike.dev/broken-npm-package";
    hintLinkPrefix = "To fix this error, see ";
    errorsMisc = [
      {
        errMsg: "window is not defined",
        link: "https://vike.dev/hints#window-is-not-defined",
        mustMentionNodeModules: false
      },
      {
        errMsg: "jsxDEV is not a function",
        link: "https://github.com/vikejs/vike/issues/1469#issuecomment-1919518096",
        mustMentionNodeModules: false
      },
      {
        // ```
        // Error [RollupError]: Could not resolve "../dist/client/assets.json" from "renderer/+onRenderHtml.tsx"
        // ```
        errMsg: "assets.json",
        link: "https://vike.dev/getGlobalContext",
        mustMentionNodeModules: false
      },
      {
        errMsg: "ERR_UNKNOWN_FILE_EXTENSION",
        link: "https://vike.dev/broken-npm-package#err-unknown-file-extension"
      }
    ];
    reactInvalidEelement = "https://vike.dev/broken-npm-package#react-invalid-component";
    errorsReact = [
      {
        errMsg: "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components)",
        link: reactInvalidEelement,
        // The stack trace can be user-land while the import is coming from node_modules
        mustMentionNodeModules: false
      },
      {
        errMsg: "Objects are not valid as a React child",
        link: reactInvalidEelement,
        mustMentionNodeModules: false
      },
      {
        // React's "Invalid hook call.", see https://github.com/vikejs/vike/discussions/1637#discussioncomment-9424712
        errMsg: "Cannot read properties of null (reading 'useContext')"
      }
    ];
    errorsCjsEsm_withPreciseLink = [
      {
        // `SyntaxError: Named export '${exportName}' not found. The requested module '${packageName}' is a CommonJS module, which may not support all module.exports as named exports.`
        errMsg: /Named export.*not found/i,
        link: "https://vike.dev/broken-npm-package#named-export-not-found",
        // It seems that this always points to an npm package import.
        mustMentionNodeModules: false
      }
    ];
    errorsCjsEsm = [
      { errMsg: "ERR_UNSUPPORTED_DIR_IMPORT" },
      { errMsg: "ERR_REQUIRE_ESM" },
      { errMsg: "Must use import" },
      { errMsg: /Cannot find \S+ '(\S+)' imported from (\S+)/ },
      { errMsg: "ERR_UNKNOWN_FILE_EXTENSION" },
      { errMsg: /Unknown file extension "\S+" for (\S+)/ },
      // `SyntaxError: Cannot use import statement outside a module`.
      {
        errMsg: "Cannot use import statement",
        // Since user code is always ESM, this error must always originate from an npm package.
        mustMentionNodeModules: false
      },
      { errMsg: "is not exported" },
      { errMsg: "Cannot read properties of undefined" },
      { errMsg: ".default is not" },
      // Using CJS inside ESM modules.
      { errMsg: "require is not a function" },
      { errMsg: "exports is not defined" },
      { errMsg: "module is not defined" },
      { errMsg: "not defined in ES" },
      { errMsg: "Unexpected token 'export'" },
      { errMsg: "Failed to resolve entry for package" }
    ];
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loggerProd.js
function logErrorProd(err, _httpRquestId) {
  warnIfErrorIsNotObject(err);
  setAlreadyLogged(err);
  if (isAbortError(err)) {
    return;
  }
  const errStr = isObject(err) && "stack" in err ? String(err.stack) : String(err);
  console.error(picocolors_default.red(errStr));
  onRuntimeError(err);
}
function onRuntimeError(err) {
  logErrorHint(err);
}
var init_loggerProd = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loggerProd.js"() {
    init_abort();
    init_isNewError();
    init_utils3();
    init_picocolors();
    init_logErrorHint();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loggerRuntime.js
var logRuntimeError, logRuntimeInfo;
var init_loggerRuntime = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/loggerRuntime.js"() {
    init_loggerProd();
    logRuntimeInfo = null;
    logRuntimeError = // @ts-expect-error
    logRuntimeError ?? // Default
    logErrorProd;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/executeOnRenderHtmlHook.js
async function executeOnRenderHtmlHook(pageContext) {
  const { renderHook, hookFn } = getRenderHook(pageContext);
  objectAssign(pageContext, { _renderHook: renderHook });
  preparePageContextForUserConsumptionServerSide(pageContext);
  const hookReturnValue = await executeHook(() => hookFn(pageContext), renderHook, pageContext);
  const { documentHtml, pageContextProvidedByRenderHook, pageContextPromise, injectFilter } = processHookReturnValue(hookReturnValue, renderHook);
  Object.assign(pageContext, pageContextProvidedByRenderHook);
  objectAssign(pageContext, { _pageContextPromise: pageContextPromise });
  const onErrorWhileStreaming = (err) => {
    logRuntimeError(err, pageContext._httpRequestId);
    if (!pageContext.errorWhileRendering) {
      pageContext.errorWhileRendering = err;
    }
  };
  const htmlRender = await renderDocumentHtml(documentHtml, pageContext, onErrorWhileStreaming, injectFilter);
  assert(typeof htmlRender === "string" || isStream(htmlRender));
  return { htmlRender, renderHook };
}
function getRenderHook(pageContext) {
  let hookFound;
  {
    let hook;
    let hookName = void 0;
    hook = getHook(pageContext, "onRenderHtml");
    if (hook) {
      hookName = "onRenderHtml";
    } else {
      hook = getHook(pageContext, "render");
      if (hook) {
        hookName = "render";
      }
    }
    if (hook) {
      assert(hookName);
      const { hookFilePath, hookFn, hookTimeout } = hook;
      hookFound = {
        hookFn,
        renderHook: { hookFn, hookFilePath, hookName, hookTimeout }
      };
    }
  }
  if (!hookFound) {
    const hookName = pageContext._pageConfigs.length > 0 ? "onRenderHtml" : "render";
    assertUsage(false, [
      `No ${hookName}() hook found, see https://vike.dev/${hookName}`
      /*
      'See https://vike.dev/render-modes for more information.',
      [
        // 'Loaded config files (none of them define the onRenderHtml() hook):',
        'Loaded server-side page files (none of them `export { render }`):',
        ...pageContext._pageFilePathsLoaded.map((f, i) => ` (${i + 1}): ${f}`)
      ].join('\n')
      */
    ].join(" "));
  }
  return hookFound;
}
function processHookReturnValue(hookReturnValue, renderHook) {
  let documentHtml;
  let pageContextPromise = null;
  let pageContextProvidedByRenderHook = null;
  let injectFilter = null;
  if (isDocumentHtml(hookReturnValue)) {
    documentHtml = hookReturnValue;
    return { documentHtml, pageContextProvidedByRenderHook, pageContextPromise, injectFilter };
  }
  const errPrefix = `The ${renderHook.hookName}() hook defined at ${renderHook.hookFilePath}`;
  const errSuffix = `a string generated with ${picocolors_default.cyan("escapeInject`<html>...</html>`")} or the value returned by ${picocolors_default.cyan("dangerouslySkipEscape()")}, see https://vike.dev/escapeInject`;
  if (typeof hookReturnValue === "string") {
    assertWarning2(false, [
      errPrefix,
      `returned a plain JavaScript string which is ${picocolors_default.red(picocolors_default.bold("dangerous"))}: it should instead return`,
      errSuffix
    ].join(" "), { onlyOnce: true });
    hookReturnValue = dangerouslySkipEscape(hookReturnValue);
  }
  const wrongReturnValue = `should return the value ${picocolors_default.cyan("documentHtml")} or an object ${picocolors_default.cyan("{ documentHtml }")} where ${picocolors_default.cyan("documentHtml")} is ${errSuffix}`;
  assertUsage(isObject(hookReturnValue), `${errPrefix} ${wrongReturnValue}`);
  assertHookReturnedObject(hookReturnValue, ["documentHtml", "pageContext", "injectFilter"], errPrefix);
  assertUsage(hookReturnValue.documentHtml, `${errPrefix} returned an object that is missing the ${picocolors_default.code("documentHtml")} property: it ${wrongReturnValue}`);
  if (hookReturnValue.injectFilter) {
    assertUsage(isCallable(hookReturnValue.injectFilter), "injectFilter should be a function");
    injectFilter = hookReturnValue.injectFilter;
  }
  {
    let val = hookReturnValue.documentHtml;
    const errBegin = `${errPrefix} returned ${picocolors_default.cyan("{ documentHtml }")}, but ${picocolors_default.cyan("documentHtml")}`;
    if (typeof val === "string") {
      assertWarning2(false, [
        errBegin,
        `is a plain JavaScript string which is ${picocolors_default.bold(picocolors_default.red("dangerous"))}: ${picocolors_default.cyan("documentHtml")} should be`,
        errSuffix
      ].join(" "), { onlyOnce: true });
      val = dangerouslySkipEscape(val);
    }
    assertUsage(isDocumentHtml(val), [errBegin, "should be", errSuffix].join(" "));
    documentHtml = val;
  }
  if (hookReturnValue.pageContext) {
    const val = hookReturnValue.pageContext;
    const errBegin = `${errPrefix} returned ${picocolors_default.cyan("{ pageContext }")}, but ${picocolors_default.cyan("pageContext")}`;
    if (isPromise(val) || isCallable(val)) {
      assertWarning2(!isPromise(val), `${errBegin} is a promise which is deprecated in favor of async functions, see https://vike.dev/streaming#initial-data-after-stream-end`, { onlyOnce: true });
      pageContextPromise = val;
    } else {
      assertUsage(isObject(val), `${errBegin} should be an object or an async function, see https://vike.dev/streaming#initial-data-after-stream-end`);
      assertPageContextProvidedByUser(val, renderHook);
      pageContextProvidedByRenderHook = val;
    }
  }
  return { documentHtml, pageContextProvidedByRenderHook, pageContextPromise, injectFilter };
}
var init_executeOnRenderHtmlHook = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/executeOnRenderHtmlHook.js"() {
    init_renderHtml();
    init_getHook();
    init_utils3();
    init_stream();
    init_assertPageContextProvidedByUser();
    init_preparePageContextForUserConsumptionServerSide();
    init_assertHookReturnedObject();
    init_loggerRuntime();
    init_picocolors();
    init_executeHook();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertOnBeforeRenderHookReturn.js
function assertOnBeforeRenderHookReturn(hookReturnValue, hookFilePath) {
  if (hookReturnValue === void 0 || hookReturnValue === null) {
    return;
  }
  const errPrefix = `The onBeforeRender() hook defined by ${hookFilePath}`;
  assertUsage(isPlainObject(hookReturnValue), `${errPrefix} should return a plain JavaScript object, ${picocolors_default.cyan("undefined")}, or ${picocolors_default.cyan("null")}`);
  assertHookReturnedObject(hookReturnValue, ["pageContext"], errPrefix);
  if (hookReturnValue.pageContext) {
    assertPageContextProvidedByUser(hookReturnValue["pageContext"], { hookName: "onBeforeRender", hookFilePath });
  }
}
var init_assertOnBeforeRenderHookReturn = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/assertOnBeforeRenderHookReturn.js"() {
    init_utils();
    init_assertPageContextProvidedByUser();
    init_assertHookReturnedObject();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/executeOnBeforeRenderAndDataHooks.js
async function executeOnBeforeRenderAndDataHooks(pageContext) {
  if (pageContext._pageContextAlreadyProvidedByOnPrerenderHook) {
    return;
  }
  const dataHook = getHook(pageContext, "data");
  const onBeforeRenderHook = getHook(pageContext, "onBeforeRender");
  if (!dataHook && !onBeforeRenderHook) {
    return;
  }
  preparePageContextForUserConsumptionServerSide(pageContext);
  if (dataHook) {
    const hookResult = await executeHook(() => dataHook.hookFn(pageContext), dataHook, pageContext);
    const pageContextFromHook = {
      data: hookResult
    };
    Object.assign(pageContext, pageContextFromHook);
  }
  if (onBeforeRenderHook) {
    const hookResult = await executeHook(() => onBeforeRenderHook.hookFn(pageContext), onBeforeRenderHook, pageContext);
    assertOnBeforeRenderHookReturn(hookResult, onBeforeRenderHook.hookFilePath);
    const pageContextFromHook = hookResult?.pageContext;
    Object.assign(pageContext, pageContextFromHook);
  }
}
var init_executeOnBeforeRenderAndDataHooks = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/executeOnBeforeRenderAndDataHooks.js"() {
    init_getHook();
    init_preparePageContextForUserConsumptionServerSide();
    init_assertOnBeforeRenderHookReturn();
    init_executeHook();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/executeGuardHook.js
async function executeGuardHook(pageContext, prepareForUserConsumption) {
  let hook;
  if (pageContext._pageFilesAll.length > 0) {
    assert(pageContext._pageConfigs.length === 0);
    hook = findPageGuard(pageContext.pageId, pageContext._pageFilesAll);
  } else {
    hook = getHook(pageContext, "guard");
  }
  if (!hook)
    return;
  const guard = hook.hookFn;
  let pageContextForUserConsumption = pageContext;
  const res = prepareForUserConsumption(pageContext);
  if (res)
    pageContextForUserConsumption = res;
  const hookResult = await executeHook(() => guard(pageContextForUserConsumption), hook, pageContext);
  assertUsage(hookResult === void 0, `${errIntro} ${hook.hookFilePath} returns a value, but guard() shouldn't return any value`);
}
function findPageGuard(pageId, pageFilesAll) {
  const pageRouteFile = pageFilesAll.find((p13) => p13.pageId === pageId && p13.fileType === ".page.route");
  if (!pageRouteFile)
    return null;
  const { filePath, fileExports } = pageRouteFile;
  assert(fileExports);
  const hookFn = fileExports.guard;
  if (!hookFn)
    return null;
  const hookFilePath = filePath;
  const hookTimeout = getHookTimeoutDefault("guard");
  assertUsage(isCallable(hookFn), `${errIntro} ${hookFilePath} should be a function`);
  return { hookFn, hookName: "guard", hookFilePath, hookTimeout };
}
var errIntro;
var init_executeGuardHook = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/executeGuardHook.js"() {
    init_getHook();
    init_utils4();
    init_executeHook();
    errIntro = "The guard() hook defined by";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/renderPageAlreadyRouted.js
async function renderPageAlreadyRouted(pageContext) {
  assert(hasProp(pageContext, "pageId", "string"));
  const isError = pageContext.is404 || !!pageContext.errorWhileRendering;
  assert(isError === (pageContext.pageId === getErrorPageId(pageContext._pageFilesAll, pageContext._pageConfigs)));
  objectAssign(pageContext, await loadUserFilesServerSide(pageContext));
  if (!isError) {
    await executeGuardHook(pageContext, (pageContext2) => preparePageContextForUserConsumptionServerSide(pageContext2));
  }
  if (!isError) {
    await executeOnBeforeRenderAndDataHooks(pageContext);
  } else {
    try {
      await executeOnBeforeRenderAndDataHooks(pageContext);
    } catch (err) {
      if (isNewError(err, pageContext.errorWhileRendering)) {
        logRuntimeError(err, pageContext._httpRequestId);
      }
    }
  }
  if (pageContext.isClientSideNavigation) {
    if (isError) {
      objectAssign(pageContext, { [isServerSideError]: true });
    }
    const pageContextSerialized = serializePageContextClientSide(pageContext);
    const httpResponse2 = await createHttpResponsePageContextJson(pageContextSerialized);
    objectAssign(pageContext, { httpResponse: httpResponse2 });
    return pageContext;
  }
  const renderHookResult = await executeOnRenderHtmlHook(pageContext);
  const { htmlRender, renderHook } = renderHookResult;
  const httpResponse = await createHttpResponsePage(htmlRender, renderHook, pageContext);
  objectAssign(pageContext, { httpResponse });
  return pageContext;
}
async function getPageContextInitEnhanced(pageContextInit, globalContext, isPrerendering, { ssr: { urlRewrite, urlHandler, isClientSideNavigation } = {
  urlRewrite: null,
  urlHandler: null,
  isClientSideNavigation: false
} } = {}) {
  assert(pageContextInit.urlOriginal);
  const pageContextInitEnhanced = createPageContext(pageContextInit, isPrerendering);
  objectAssign(pageContextInitEnhanced, pageContextInit);
  objectAssign(pageContextInitEnhanced, {
    _objectCreatedByVike: true,
    // The following is defined on `pageContext` because we can eventually make these non-global
    _baseServer: globalContext.baseServer,
    _baseAssets: globalContext.baseAssets,
    // TODO/now: add meta.default
    _includeAssetsImportedByServer: globalContext.config.includeAssetsImportedByServer ?? true,
    // TODO/soon: use GloablContext instead
    _pageFilesAll: globalContext.pageFilesAll,
    _pageConfigs: globalContext.pageConfigs,
    _pageConfigGlobal: globalContext.pageConfigGlobal,
    _allPageIds: globalContext.allPageIds,
    _pageRoutes: globalContext.pageRoutes,
    _onBeforeRouteHook: globalContext.onBeforeRouteHook,
    _globalContext: globalContext,
    // TODO/now: add PageContext['globalContext']
    /** @experimental This is a beta feature https://vike.dev/getGlobalContext */
    globalContext: globalContext.globalContext_public,
    _pageContextInit: pageContextInit,
    _urlRewrite: urlRewrite,
    _urlHandler: urlHandler,
    isClientSideNavigation
  });
  const pageContextUrlComputed = getPageContextUrlComputed(pageContextInitEnhanced);
  objectAssign(pageContextInitEnhanced, pageContextUrlComputed);
  {
    let headers;
    if (pageContextInit.headersOriginal) {
      headers = normalizeHeaders(pageContextInit.headersOriginal);
      assertUsage(!("headers" in pageContextInit), "You're defining pageContextInit.headersOriginal as well as pageContextInit.headers but you should only define pageContextInit.headersOriginal instead, see https://vike.dev/headers");
    } else if (pageContextInit.headers) {
      headers = pageContextInit.headers;
      assertWarning2(false, "Setting pageContextInit.headers is deprecated: set pageContextInit.headersOriginal instead, see https://vike.dev/headers", { onlyOnce: true });
    } else {
      headers = null;
    }
    objectAssign(pageContextInitEnhanced, { headers });
  }
  return pageContextInitEnhanced;
}
function createPageContext(pageContextInit, isPrerendering) {
  const pageContext = {
    _isPageContextObject: true,
    isClientSide: false,
    isPrerendering
  };
  objectAssign(pageContext, pageContextInit);
  return pageContext;
}
var init_renderPageAlreadyRouted = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/renderPageAlreadyRouted.js"() {
    init_error_page();
    init_renderHtml();
    init_utils3();
    init_serializePageContextClientSide();
    init_getPageContextUrlComputed();
    init_createHttpResponse();
    init_loadUserFilesServerSide();
    init_executeOnRenderHtmlHook();
    init_executeOnBeforeRenderAndDataHooks();
    init_loggerRuntime();
    init_isNewError();
    init_preparePageContextForUserConsumptionServerSide();
    init_executeGuardHook();
    init_picocolors();
    init_isServerSideError();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveRouteString.js
function assertRouteString(routeString, errPrefix = "Invalid") {
  let errPrefix2 = `${errPrefix} Route String ${highlight(routeString)}`;
  assertUsage(routeString !== "", `${errPrefix2} (empty string): set it to ${highlight("/")} instead`);
  assertUsage(["/", "*"].includes(routeString[0]), `${errPrefix2}: it should start with ${highlight("/")} or ${highlight("*")}`);
  assertUsage(!routeString.includes("**"), `${errPrefix2}: set it to ${highlight(routeString.split("**").join("*"))} instead`);
}
function resolveRouteString(routeString, urlPathname) {
  assertRouteString(routeString);
  const segments = parseRouteString(routeString);
  const routeRegexStrInner = segments.map((segment) => {
    if (segment.param) {
      return "[^/]+";
    }
    if (segment.glob) {
      return ".*";
    }
    return escapeRegex(segment.static);
  }).map((s37) => `(${s37})`).join("");
  const routeRegex = new RegExp(`^${routeRegexStrInner}/?$`);
  const routeRegexMatch = urlPathname.match(routeRegex);
  if (!routeRegexMatch)
    return null;
  const routeParams = {};
  const [_3, ...segmentsValue] = routeRegexMatch;
  let globIdx = 0;
  const hasMultipleGlobs = segments.filter((segment) => segment.glob).length > 1;
  segments.forEach((segment, i11) => {
    let val = segmentsValue[i11];
    if (segment.param) {
      routeParams[segment.param] = val;
    }
    if (segment.glob) {
      const param = `*${hasMultipleGlobs ? ++globIdx : ""}`;
      routeParams[param] = val;
    }
  });
  return { routeParams };
}
function parseRouteString(routeString) {
  const segments = [];
  const pushStatic = (s37) => {
    const segmentLast = segments[segments.length - 1];
    if (segmentLast?.static) {
      segmentLast.static += s37;
    } else {
      segments.push({ static: s37 });
    }
  };
  const parts = routeString.split("/");
  parts.forEach((s37, i11) => {
    if (i11 !== 0)
      pushStatic("/");
    if (isParam(s37)) {
      assertWarning2(!s37.startsWith(PARAM_TOKEN_OLD), `Outdated Route String ${highlight(routeString)}, use ${highlight(routeString.split(PARAM_TOKEN_OLD).join(PARAM_TOKEN_NEW))} instead`, { onlyOnce: true });
      segments.push({ param: s37.slice(1) });
    } else {
      if (s37 === "*" && i11 === parts.length - 1 && routeString !== "*" && routeString !== "/*") {
        segments.push({ glob: true });
      } else {
        s37.split("*").forEach((s38, i12) => {
          if (i12 !== 0)
            segments.push({ glob: true });
          if (s38 !== "") {
            pushStatic(s38);
          }
        });
      }
    }
  });
  return segments;
}
function analyzeRouteString(routeString) {
  const segments = parseRouteString(routeString);
  const countStaticParts = (s37) => s37?.split("/").filter(Boolean).length || 0;
  let numberOfStaticPartsBeginning = 0;
  for (const segment of segments) {
    if (!segment.static)
      break;
    numberOfStaticPartsBeginning += countStaticParts(segment.static);
  }
  const numberOfStaticParts = segments.map((s37) => countStaticParts(s37.static)).reduce((sum, a12) => sum + a12, 0);
  const numberOfParams = segments.filter((s37) => s37.param).length;
  const numberOfGlobs = segments.filter((s37) => s37.glob).length;
  return { numberOfStaticPartsBeginning, numberOfStaticParts, numberOfParams, numberOfGlobs };
}
function isParam(routeSegment) {
  return routeSegment.startsWith(PARAM_TOKEN_NEW) || routeSegment.startsWith(PARAM_TOKEN_OLD);
}
function isStaticRouteString(routeString) {
  const url = routeString;
  const match = resolveRouteString(routeString, url);
  assert(match);
  return Object.keys(match.routeParams).length === 0;
}
function highlight(routeString) {
  if (isBrowser()) {
    return `'${routeString}'`;
  } else {
    if (routeString === "") {
      routeString = "''";
    }
    return picocolors_default.cyan(routeString);
  }
}
var PARAM_TOKEN_NEW, PARAM_TOKEN_OLD;
var init_resolveRouteString = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveRouteString.js"() {
    init_utils();
    init_utils4();
    init_picocolors();
    PARAM_TOKEN_NEW = "@";
    PARAM_TOKEN_OLD = ":";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolvePrecedence.js
function resolvePrecendence(routeMatches) {
  routeMatches.sort(sortMatches).sort(makeFirst((routeMatch) => routeMatch.routeType === "FUNCTION" && !!routeMatch.precedence && routeMatch.precedence < 0)).sort(makeFirst((routeMatch) => routeMatch.routeType === "STRING" && isStaticRouteString(routeMatch.routeString) === false)).sort(makeFirst((routeMatch) => routeMatch.routeType === "FUNCTION" && !routeMatch.precedence)).sort(makeFirst((routeMatch) => routeMatch.routeType === "STRING" && isStaticRouteString(routeMatch.routeString) === true)).sort(makeFirst((routeMatch) => routeMatch.routeType === "FILESYSTEM")).sort(makeFirst((routeMatch) => routeMatch.routeType === "FUNCTION" && !!routeMatch.precedence && routeMatch.precedence > 0));
}
function sortMatches(routeMatch1, routeMatch2) {
  {
    const precedence1 = routeMatch1.precedence ?? 0;
    const precedence2 = routeMatch2.precedence ?? 0;
    if (precedence1 !== precedence2) {
      return precedence1 > precedence2 ? -1 : 1;
    }
  }
  if (!routeMatch2.routeString) {
    return 0;
  }
  if (!routeMatch1.routeString) {
    return 0;
  }
  {
    const getValue = (routeString) => analyzeRouteString(routeString).numberOfStaticPartsBeginning;
    const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);
    if (result !== 0) {
      return result;
    }
  }
  {
    const getValue = (routeString) => analyzeRouteString(routeString).numberOfStaticParts;
    const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);
    if (result !== 0) {
      return result;
    }
  }
  {
    const getValue = (routeString) => analyzeRouteString(routeString).numberOfGlobs;
    const result = lowerFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);
    if (result !== 0) {
      return result;
    }
  }
  {
    const getValue = (routeString) => analyzeRouteString(routeString).numberOfParams;
    const result = higherFirst(getValue)(routeMatch1.routeString, routeMatch2.routeString);
    if (result !== 0) {
      return result;
    }
  }
  return 0;
}
var init_resolvePrecedence = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolvePrecedence.js"() {
    init_resolveRouteString();
    init_utils4();
    init_utils4();
    init_resolveRouteString();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveRouteFunction.js
async function resolveRouteFunction(routeFunction, pageContext, routeDefinedAtString) {
  assertPageContextUrl(pageContext);
  let result = routeFunction(pageContext);
  assertSyncRouting(result, `The Route Function ${routeDefinedAtString}`);
  result = await result;
  if (result === false) {
    return null;
  }
  if (result === true) {
    result = {};
  }
  assertUsage(isPlainObject(result), `The Route Function ${routeDefinedAtString} should return a boolean or a plain JavaScript object (but it's ${picocolors_default.cyan(`typeof result === ${JSON.stringify(typeof result)}`)} instead)`);
  if ("match" in result) {
    const { match } = result;
    assertUsage(typeof match === "boolean", `The ${picocolors_default.cyan("match")} value returned by the Route Function ${routeDefinedAtString} should be a boolean.`);
    if (!match) {
      return null;
    }
  }
  let precedence = null;
  if ("precedence" in result) {
    precedence = result.precedence;
    assertUsage(typeof precedence === "number", `The ${picocolors_default.cyan("precedence")} value returned by the Route Function ${routeDefinedAtString} should be a number.`);
  }
  assertRouteParams(result, `The ${picocolors_default.cyan("routeParams")} object returned by the Route Function ${routeDefinedAtString} should`);
  const routeParams = result.routeParams || {};
  assertUsage(!("pageContext" in result), `Providing ${picocolors_default.cyan("pageContext")} in Route Functions is prohibited, see https://vike.dev/route-function#cannot-provide-pagecontext`);
  assert(isPlainObject(routeParams));
  Object.keys(result).forEach((key) => {
    assertUsage(key === "match" || key === "routeParams" || key === "precedence", `The Route Function ${routeDefinedAtString} returned an object with an unknown property ${picocolors_default.cyan(key)} (the known properties are ${picocolors_default.cyan("match")}, ${picocolors_default.cyan("routeParams")}, and ${picocolors_default.cyan("precedence")})`);
  });
  return {
    precedence,
    routeParams
  };
}
function assertSyncRouting(res, errPrefix) {
  assertWarning2(!isPromise(res), `${errPrefix} returned a promise, but asynchronous routing is deprecated and will be removed in the next major release, see https://vike.dev/route-function#async`, { onlyOnce: true });
}
function warnDeprecatedAllowKey() {
  const allowKey = picocolors_default.cyan("iKnowThePerformanceRisksOfAsyncRouteFunctions");
  assertWarning2(false, `${allowKey} is deprecated and will be removed in the next major release`, { onlyOnce: true });
}
function assertRouteParams(result, errPrefix) {
  assert(errPrefix.endsWith(" should"));
  if (!hasProp(result, "routeParams")) {
    return;
  }
  assert(errPrefix.endsWith(" should"));
  assertUsage(hasProp(result, "routeParams", "string{}"), `${errPrefix} be an object holding string values.`);
}
var init_resolveRouteFunction = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveRouteFunction.js"() {
    init_getPageContextUrlComputed();
    init_utils4();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/executeOnBeforeRouteHook.js
async function executeOnBeforeRouteHook(pageContext) {
  const pageContextFromOnBeforeRouteHook = {};
  if (!pageContext._onBeforeRouteHook)
    return null;
  const pageContextFromHook = await getPageContextFromHook(pageContext._onBeforeRouteHook, pageContext);
  if (pageContextFromHook) {
    objectAssign(pageContextFromOnBeforeRouteHook, pageContextFromHook);
    if (hasProp(pageContextFromOnBeforeRouteHook, "pageId", "string") || hasProp(pageContextFromOnBeforeRouteHook, "pageId", "null")) {
      if (!hasProp(pageContextFromOnBeforeRouteHook, "routeParams")) {
        objectAssign(pageContextFromOnBeforeRouteHook, { routeParams: {} });
      } else {
        assert(hasProp(pageContextFromOnBeforeRouteHook, "routeParams", "object"));
      }
      objectAssign(pageContextFromOnBeforeRouteHook, {
        _routingProvidedByOnBeforeRouteHook: true,
        _debugRouteMatches: "CUSTOM_ROUTING"
      });
      return pageContextFromOnBeforeRouteHook;
    }
  }
  objectAssign(pageContextFromOnBeforeRouteHook, {
    _routingProvidedByOnBeforeRouteHook: false
  });
  return pageContextFromOnBeforeRouteHook;
}
async function getPageContextFromHook(onBeforeRouteHook, pageContext) {
  let hookReturn = onBeforeRouteHook.hookFn(pageContext);
  assertSyncRouting(hookReturn, `The onBeforeRoute() hook ${onBeforeRouteHook.hookFilePath}`);
  hookReturn = await executeHook(() => hookReturn, onBeforeRouteHook, pageContext);
  const errPrefix = `The onBeforeRoute() hook defined by ${onBeforeRouteHook.hookFilePath}`;
  assertUsage(hookReturn === null || hookReturn === void 0 || isObjectWithKeys(hookReturn, ["pageContext"]) && hasProp(hookReturn, "pageContext"), `${errPrefix} should return ${picocolors_default.cyan("null")}, ${picocolors_default.cyan("undefined")}, or a plain JavaScript object ${picocolors_default.cyan("{ pageContext: { /* ... */ } }")}`);
  if (hookReturn === null || hookReturn === void 0) {
    return null;
  }
  assertUsage(hasProp(hookReturn, "pageContext", "object"), `${errPrefix} returned ${picocolors_default.cyan("{ pageContext }")} but pageContext should be a plain JavaScript object.`);
  if (hasProp(hookReturn.pageContext, "pageId") && !hasProp(hookReturn.pageContext, "pageId", "null")) {
    const errPrefix2 = `${errPrefix} returned ${picocolors_default.cyan("{ pageContext: { pageId } }")} but ${picocolors_default.cyan("pageId")} should be`;
    assertUsage(hasProp(hookReturn.pageContext, "pageId", "string"), `${errPrefix2} a string or null`);
    assertUsage(pageContext._allPageIds.includes(hookReturn.pageContext.pageId), `${errPrefix2} ${joinEnglish(pageContext._allPageIds.map((s37) => picocolors_default.cyan(s37)), "or")}`);
  }
  if (hasProp(hookReturn.pageContext, "routeParams")) {
    assertRouteParams(hookReturn.pageContext, `${errPrefix} returned ${picocolors_default.cyan("{ pageContext: { routeParams } }")} but routeParams should`);
  }
  const deprecatedReturn = (prop) => `${errPrefix} returned ${picocolors_default.cyan(`{ pageContext: { ${prop} } }`)} which is deprecated. Return ${picocolors_default.cyan("{ pageContext: { urlLogical } }")} instead.`;
  if (hasProp(hookReturn.pageContext, "url")) {
    assertWarning2(false, deprecatedReturn("url"), { onlyOnce: true });
    hookReturn.pageContext.urlLogical = hookReturn.pageContext.url;
    delete hookReturn.pageContext.url;
  }
  if (hasProp(hookReturn.pageContext, "urlOriginal")) {
    assertWarning2(false, deprecatedReturn("urlOriginal"), { onlyOnce: true });
    hookReturn.pageContext.urlLogical = hookReturn.pageContext.urlOriginal;
    delete hookReturn.pageContext.urlOriginal;
  }
  if (hasProp(hookReturn.pageContext, "urlLogical")) {
    assertUsageUrlPathnameAbsolute(
      // We skip validation and type-cast instead of assertUsage() in order to save client-side KBs
      hookReturn.pageContext.urlLogical,
      `${errPrefix} returned ${picocolors_default.cyan("{ pageContext: { urlLogical } }")} and ${picocolors_default.cyan("urlLogical")}`
    );
  }
  assertPageContextProvidedByUser(hookReturn.pageContext, {
    hookFilePath: onBeforeRouteHook.hookFilePath,
    hookName: "onBeforeRoute"
  });
  const pageContextAddendumHook = {};
  objectAssign(pageContextAddendumHook, hookReturn.pageContext);
  return pageContextAddendumHook;
}
var init_executeOnBeforeRouteHook = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/executeOnBeforeRouteHook.js"() {
    init_assertPageContextProvidedByUser();
    init_utils4();
    init_resolveRouteFunction();
    init_picocolors();
    init_executeHook();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/debug.js
function debug3(...args) {
  if (!_debug) {
    _debug = globalThis.__brillout_debug_createDebugger?.("vike:routing");
  }
  if (_debug) {
    _debug(...args);
  }
}
var _debug;
var init_debug2 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/debug.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/index.js
async function route(pageContext, skipOnBeforeRouteHook) {
  debug3("Pages routes:", pageContext._pageRoutes);
  assertPageContextUrl(pageContext);
  const pageContextFromRoute = {};
  if (!skipOnBeforeRouteHook) {
    const pageContextFromOnBeforeRouteHook = await executeOnBeforeRouteHook(pageContext);
    if (pageContextFromOnBeforeRouteHook) {
      if (pageContextFromOnBeforeRouteHook._routingProvidedByOnBeforeRouteHook) {
        assert(pageContextFromOnBeforeRouteHook.pageId);
        return pageContextFromOnBeforeRouteHook;
      } else {
        objectAssign(pageContextFromRoute, pageContextFromOnBeforeRouteHook);
      }
    }
    objectAssign(pageContext, pageContextFromOnBeforeRouteHook);
  }
  const allPageIds = pageContext._allPageIds;
  assertUsage(allPageIds.length > 0, "No page found. You must create at least one page.");
  assert(pageContext._pageFilesAll.length > 0 || pageContext._pageConfigs.length > 0);
  const { urlPathname } = pageContext;
  assert(urlPathname.startsWith("/"));
  const routeMatches = [];
  await Promise.all(pageContext._pageRoutes.map(async (pageRoute) => {
    const { pageId, routeType } = pageRoute;
    if (pageRoute.routeType === "FILESYSTEM") {
      const { routeString } = pageRoute;
      const match = resolveRouteString(routeString, urlPathname);
      if (match) {
        const { routeParams } = match;
        routeMatches.push({ pageId, routeParams, routeString, routeType });
      }
      return;
    }
    if (pageRoute.routeType === "STRING") {
      const { routeString } = pageRoute;
      const match = resolveRouteString(routeString, urlPathname);
      if (match) {
        const { routeParams } = match;
        assert(routeType === "STRING");
        routeMatches.push({
          pageId,
          routeString,
          routeParams,
          routeType
        });
      }
      return;
    }
    if (pageRoute.routeType === "FUNCTION") {
      const { routeFunction, routeDefinedAtString } = pageRoute;
      const match = await resolveRouteFunction(routeFunction, pageContext, routeDefinedAtString);
      if (match) {
        const { routeParams, precedence } = match;
        routeMatches.push({ pageId, precedence, routeParams, routeType });
      }
      return;
    }
    assert(false);
  }));
  resolvePrecendence(routeMatches);
  const winner = routeMatches[0] ?? null;
  debug3(`Route matches for URL ${picocolors_default.cyan(urlPathname)} (in precedence order):`, routeMatches);
  objectAssign(pageContextFromRoute, { _debugRouteMatches: routeMatches });
  objectAssign(pageContextFromRoute, { _routeMatch: winner });
  if (!winner) {
    objectAssign(pageContextFromRoute, {
      pageId: null,
      routeParams: {}
    });
    return pageContextFromRoute;
  }
  {
    const { routeParams } = winner;
    assert(isPlainObject(routeParams));
    objectAssign(pageContextFromRoute, {
      pageId: winner.pageId,
      routeParams: winner.routeParams
    });
  }
  return pageContextFromRoute;
}
var init_route = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/index.js"() {
    init_assertRoutingType();
    init_isBrowser();
    init_utils4();
    init_getPageContextUrlComputed();
    init_resolvePrecedence();
    init_resolveRouteString();
    init_resolveRouteFunction();
    init_executeOnBeforeRouteHook();
    init_debug2();
    init_picocolors();
    if (isBrowser()) {
      assertClientRouting();
    }
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/createErrorWithCleanStackTrace.js
function createErrorWithCleanStackTrace2(errorMessage, numberOfStackTraceLinesToRemove3) {
  const err = new Error(errorMessage);
  err.stack = clean2(err.stack, numberOfStackTraceLinesToRemove3);
  return err;
}
function clean2(errStack, numberOfStackTraceLinesToRemove3) {
  if (!errStack) {
    return errStack;
  }
  const stackLines = splitByLine2(errStack);
  let linesRemoved = 0;
  const stackLine__cleaned = stackLines.filter((line) => {
    if (line.includes(" (internal/") || line.includes(" (node:internal")) {
      return false;
    }
    if (linesRemoved < numberOfStackTraceLinesToRemove3 && isStackTraceLine2(line)) {
      linesRemoved++;
      return false;
    }
    return true;
  }).join("\n");
  return stackLine__cleaned;
}
function isStackTraceLine2(line) {
  return line.startsWith("    at ");
}
function splitByLine2(str) {
  return str.split(/\r?\n/);
}
var init_createErrorWithCleanStackTrace2 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/createErrorWithCleanStackTrace.js"() {
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/PROJECT_VERSION.js
var PROJECT_VERSION2;
var init_PROJECT_VERSION2 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/PROJECT_VERSION.js"() {
    PROJECT_VERSION2 = "0.7.5";
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/projectInfo.js
var projectInfo;
var init_projectInfo = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/projectInfo.js"() {
    init_PROJECT_VERSION2();
    projectInfo = {
      projectName: "@brillout/vite-plugin-server-entry",
      npmPackageName: "@brillout/vite-plugin-server-entry",
      projectVersion: PROJECT_VERSION2,
      githubRepository: "https://github.com/brillout/vite-plugin-server-entry"
    };
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/assert.js
function assert2(condition, debugInfo) {
  if (condition) {
    return;
  }
  const debugStr = (() => {
    if (!debugInfo) {
      return null;
    }
    const debugInfoSerialized = typeof debugInfo === "string" ? debugInfo : "`" + JSON.stringify(debugInfo) + "`";
    return `Debug info (this is for the ${projectInfo.projectName} maintainers; you can ignore this): ${debugInfoSerialized}`;
  })();
  const internalError = createErrorWithCleanStackTrace2([
    `${internalErrorPrefix} You stumbled upon a bug in the source code of ${projectInfo.projectName}.`,
    `Reach out at ${projectInfo.githubRepository}/issues/new and include this error stack (the error stack is usually enough to fix the problem).`,
    "A maintainer will fix the bug (usually under 24 hours).",
    `Don't hesitate to reach out as it makes ${projectInfo.projectName} more robust.`,
    debugStr
  ].filter(Boolean).join(" "), numberOfStackTraceLinesToRemove2);
  throw internalError;
}
function assertUsage2(condition, errorMessage) {
  if (condition) {
    return;
  }
  const errMsg = `${usageErrorPrefix} ${errorMessage}`;
  const usageError = createErrorWithCleanStackTrace2(errMsg, numberOfStackTraceLinesToRemove2);
  throw usageError;
}
var logLabel, internalErrorPrefix, usageErrorPrefix, numberOfStackTraceLinesToRemove2;
var init_assert2 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/assert.js"() {
    init_createErrorWithCleanStackTrace2();
    init_projectInfo();
    logLabel = `[${projectInfo.npmPackageName}@${projectInfo.projectVersion}]`;
    internalErrorPrefix = `${logLabel}[Bug]`;
    usageErrorPrefix = `${logLabel}[Wrong Usage]`;
    numberOfStackTraceLinesToRemove2 = 2;
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/filesystemPathHandling.js
function toPosixPath2(path) {
  if (isPosix()) {
    assertPosixPath2(path);
    return path;
  }
  if (isWin32()) {
    const pathPosix = path.split(sepWin32).join(sepPosix);
    assertPosixPath2(pathPosix);
    return pathPosix;
  }
  assert2(false);
}
function assertPosixPath2(path) {
  assert2(path && !path.includes(sepWin32), `Wrongly formatted path: ${path}`);
}
function isWin32() {
  return process.platform === "win32";
}
function isPosix() {
  return !isWin32();
}
var sepPosix, sepWin32;
var init_filesystemPathHandling = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/filesystemPathHandling.js"() {
    init_assert2();
    sepPosix = "/";
    sepWin32 = "\\";
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/getCwdSafe.js
function getCwdSafe() {
  if (typeof process == "undefined" || !("cwd" in process))
    return null;
  return toPosixPath2(process.cwd());
}
var init_getCwdSafe = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/getCwdSafe.js"() {
    init_filesystemPathHandling();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/requireResolve.js
async function requireResolve(id5, currentFilePath) {
  const req = await getRequire(currentFilePath);
  return req.resolve(id5);
}
async function getRequire(currentFilePath) {
  const { createRequire } = await import_("module");
  const req = createRequire(currentFilePath);
  return req;
}
var init_requireResolve = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/requireResolve.js"() {
    init_esm();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/isWebpackResolve.js
function isWebpackResolve(moduleResolve, cwd) {
  assert2(process);
  return (
    // Upon `require.resolve()` webpack returns a number
    typeof moduleResolve === "number" || // Upon `import.meta.resolve()` webpack returns a path such as /test/webpack/dist/server/entry.mjs which seems to be relative to the monorepo root
    getFirstDir(moduleResolve) !== getFirstDir(cwd) || // `import.meta.resolve()` + windows => webpack returns file:///D:/test/webpack/dist/server/entry.mjs
    process.platform === "win32" && getSecondDir(moduleResolve) !== getSecondDir(cwd)
  );
}
function getFirstDir(path) {
  return getDirs(path)[0];
}
function getSecondDir(path) {
  return getDirs(path)[1];
}
function getDirs(path) {
  assert2(!path.startsWith("file:"));
  return toPosixPath2(path).split("/").filter(Boolean);
}
var init_isWebpackResolve = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/utils/isWebpackResolve.js"() {
    init_assert2();
    init_filesystemPathHandling();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/utils.js
var init_utils5 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/utils.js"() {
    init_assert2();
    init_getCwdSafe();
    init_filesystemPathHandling();
    init_requireResolve();
    init_isWebpackResolve();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/utils.js
var init_utils6 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/utils.js"() {
    init_assert2();
    init_getCwdSafe();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/debug.js
function logDebug(...msgs) {
  console.log(`${logLabel}[DEBUG]`, ...msgs);
}
var DEBUG2;
var init_debug3 = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/debug.js"() {
    init_utils6();
    DEBUG2 = false;
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/debugLogsRuntime.js
function debugLogsRuntimePre(autoImporter) {
  if (!DEBUG2)
    return;
  logDebug("DEBUG_LOGS_RUNTIME [begin]");
  try {
    logDebug("process.platform", JSON.stringify(process.platform));
  } catch {
    logDebug("process.platform", "undefined");
  }
  try {
    logDebug("process.release", JSON.stringify(process.release));
  } catch {
    logDebug("process.release", "undefined");
  }
  try {
    logDebug("navigator", JSON.stringify(navigator));
  } catch {
    logDebug("navigator", "undefined");
  }
  logDebug("cwd", getCwdSafe());
  logDebug("importer.status", autoImporter.status);
  if (autoImporter.status === "SET") {
    logDebug("importer.pluginVersion", autoImporter.pluginVersion);
    logDebug("importer.paths.autoImporterFilePathOriginal", autoImporter.paths.autoImporterFilePathOriginal);
    logDebug("importer.paths.autoImporterFilePathActual", autoImporter.paths.autoImporterFilePathActual);
    logDebug("importer.paths.serverEntryFilePathRelative", autoImporter.paths.serverEntryFilePathRelative);
    logDebug("importer.paths.serverEntryFilePathOriginal", autoImporter.paths.serverEntryFilePathOriginal);
    try {
      logDebug("importer.paths.serverEntryFilePathResolved()", autoImporter.paths.serverEntryFilePathResolved());
    } catch (err) {
      logDebug("importer.paths.serverEntryFilePathResolved() error:", err);
      logDebug("importer.paths.serverEntryFilePathResolved()", "ERRORED");
    }
  }
}
function debugLogsRuntimePost(info) {
  if (!DEBUG2)
    return;
  for (var key in info)
    logDebug(key, info[key]);
  logDebug("DEBUG_LOGS_RUNTIME [end]");
}
var init_debugLogsRuntime = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/debugLogsRuntime.js"() {
    init_utils6();
    init_debug3();
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/serverEntryFileNameBase.js
var serverEntryFileNameBase, serverEntryFileNameBaseAlternative;
var init_serverEntryFileNameBase = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/shared/serverEntryFileNameBase.js"() {
    serverEntryFileNameBase = "entry";
    serverEntryFileNameBaseAlternative = "entryOthers";
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/crawlOutDir.js
async function crawlOutDir({ outDir, tolerateDoesNotExist, outFileSearch }) {
  let path;
  let fs2;
  try {
    path = await import_("path");
    fs2 = await import_("fs");
  } catch {
    return false;
  }
  const cwd = process.cwd();
  const isPathAbsolute = (p13) => {
    if (process.platform === "win32") {
      return path.win32.isAbsolute(p13);
    } else {
      return p13.startsWith("/");
    }
  };
  if (outDir) {
    assertPosixPath2(outDir);
    assert2(isPathAbsolute(outDir), outDir);
  } else {
    if (!cwd)
      return false;
    outDir = path.posix.join(cwd, "dist");
  }
  const outDirServer = path.posix.join(outDir, "server");
  const outDirServerExists = fs2.existsSync(outDirServer);
  if (!outDirServerExists)
    return false;
  const outFileNameList = [];
  outFileSearch.forEach((outFileNameBase) => {
    outFileNameList.push(...[
      //
      `${outFileNameBase}.mjs`,
      `${outFileNameBase}.js`,
      `${outFileNameBase}.cjs`
    ]);
  });
  let outFileFound;
  const getOutFilePath = (outFileName) => path.posix.join(outDirServer, outFileName);
  for (const outFileName of outFileNameList) {
    const outFilePath = getOutFilePath(outFileName);
    assert2(isPathAbsolute(outFilePath));
    let outFilePathResolved;
    try {
      outFilePathResolved = await requireResolve(
        outFilePath,
        // Since `outFilePath` is absolute, we can pass a wrong `currentFilePath` argument value.
        // - We avoid using `__filename` because it isn't defined when this file is included in an ESM bundle.
        // - We cannot use `import.meta.filename` (nor `import.meta.url`) because there doesn't seem to be a way to safely/conditionally access `import.meta`.
        cwd
      );
    } catch {
      continue;
    }
    assert2(outFilePathResolved);
    outFileFound = {
      outFilePath: outFilePathResolved,
      outFileName
    };
  }
  if (!outFileFound) {
    if (tolerateDoesNotExist) {
      return false;
    } else {
      assert2(outDirServerExists);
      assertUsage2(false, `The server production entry is missing. If you are using rollupOptions.output.entryFileNames then make sure you don't change the file name of the production server entry. One of the following is expected to exist: 
${outFileNameList.map((outFileName) => `  ${getOutFilePath(outFileName)}`).join("\n")}`);
    }
  }
  assert2(outFileSearch.some((outFileNameBase) => outFileFound.outFileName.startsWith(outFileNameBase)));
  if (isWebpackResolve(outFileFound.outFilePath, cwd)) {
    return false;
  }
  return outFileFound.outFilePath;
}
var init_crawlOutDir = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/crawlOutDir.js"() {
    init_utils5();
    init_esm();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/__internal/index.js
var init_internal = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/__internal/index.js"() {
    init_globalContext();
    init_route();
    init_globalContext();
    init_assertSetup();
  }
});

// node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js
var require_react_production = __commonJS({
  "node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js"(exports) {
    "use strict";
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    function getIteratorFn(maybeIterable) {
      if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
      maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
      return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    var ReactNoopUpdateQueue = {
      isMounted: function() {
        return false;
      },
      enqueueForceUpdate: function() {
      },
      enqueueReplaceState: function() {
      },
      enqueueSetState: function() {
      }
    };
    var assign = Object.assign;
    var emptyObject = {};
    function Component3(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    Component3.prototype.isReactComponent = {};
    Component3.prototype.setState = function(partialState, callback) {
      if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState)
        throw Error(
          "takes an object of state variables to update or a function which returns an object of state variables."
        );
      this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component3.prototype.forceUpdate = function(callback) {
      this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    function ComponentDummy() {
    }
    ComponentDummy.prototype = Component3.prototype;
    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent;
    assign(pureComponentPrototype, Component3.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    var isArrayImpl = Array.isArray;
    var ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null };
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    function ReactElement(type, key, self2, source, owner2, props) {
      self2 = props.ref;
      return {
        $$typeof: REACT_ELEMENT_TYPE,
        type,
        key,
        ref: void 0 !== self2 ? self2 : null,
        props
      };
    }
    function cloneAndReplaceKey(oldElement, newKey) {
      return ReactElement(
        oldElement.type,
        newKey,
        void 0,
        void 0,
        void 0,
        oldElement.props
      );
    }
    function isValidElement2(object) {
      return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function escape2(key) {
      var escaperLookup = { "=": "=0", ":": "=2" };
      return "$" + key.replace(/[=:]/g, function(match) {
        return escaperLookup[match];
      });
    }
    var userProvidedKeyEscapeRegex = /\/+/g;
    function getElementKey(element, index) {
      return "object" === typeof element && null !== element && null != element.key ? escape2("" + element.key) : index.toString(36);
    }
    function noop$1() {
    }
    function resolveThenable(thenable) {
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          switch ("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(
            function(fulfilledValue) {
              "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
            },
            function(error) {
              "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
            }
          )), thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
      }
      throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
      var type = typeof children;
      if ("undefined" === type || "boolean" === type) children = null;
      var invokeCallback = false;
      if (null === children) invokeCallback = true;
      else
        switch (type) {
          case "bigint":
          case "string":
          case "number":
            invokeCallback = true;
            break;
          case "object":
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
                break;
              case REACT_LAZY_TYPE:
                return invokeCallback = children._init, mapIntoArray(
                  invokeCallback(children._payload),
                  array,
                  escapedPrefix,
                  nameSoFar,
                  callback
                );
            }
        }
      if (invokeCallback)
        return callback = callback(children), invokeCallback = "" === nameSoFar ? "." + getElementKey(children, 0) : nameSoFar, isArrayImpl(callback) ? (escapedPrefix = "", null != invokeCallback && (escapedPrefix = invokeCallback.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function(c13) {
          return c13;
        })) : null != callback && (isValidElement2(callback) && (callback = cloneAndReplaceKey(
          callback,
          escapedPrefix + (null == callback.key || children && children.key === callback.key ? "" : ("" + callback.key).replace(
            userProvidedKeyEscapeRegex,
            "$&/"
          ) + "/") + invokeCallback
        )), array.push(callback)), 1;
      invokeCallback = 0;
      var nextNamePrefix = "" === nameSoFar ? "." : nameSoFar + ":";
      if (isArrayImpl(children))
        for (var i11 = 0; i11 < children.length; i11++)
          nameSoFar = children[i11], type = nextNamePrefix + getElementKey(nameSoFar, i11), invokeCallback += mapIntoArray(
            nameSoFar,
            array,
            escapedPrefix,
            type,
            callback
          );
      else if (i11 = getIteratorFn(children), "function" === typeof i11)
        for (children = i11.call(children), i11 = 0; !(nameSoFar = children.next()).done; )
          nameSoFar = nameSoFar.value, type = nextNamePrefix + getElementKey(nameSoFar, i11++), invokeCallback += mapIntoArray(
            nameSoFar,
            array,
            escapedPrefix,
            type,
            callback
          );
      else if ("object" === type) {
        if ("function" === typeof children.then)
          return mapIntoArray(
            resolveThenable(children),
            array,
            escapedPrefix,
            nameSoFar,
            callback
          );
        array = String(children);
        throw Error(
          "Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead."
        );
      }
      return invokeCallback;
    }
    function mapChildren(children, func, context) {
      if (null == children) return children;
      var result = [], count = 0;
      mapIntoArray(children, result, "", "", function(child) {
        return func.call(context, child, count++);
      });
      return result;
    }
    function lazyInitializer(payload) {
      if (-1 === payload._status) {
        var ctor = payload._result;
        ctor = ctor();
        ctor.then(
          function(moduleObject) {
            if (0 === payload._status || -1 === payload._status)
              payload._status = 1, payload._result = moduleObject;
          },
          function(error) {
            if (0 === payload._status || -1 === payload._status)
              payload._status = 2, payload._result = error;
          }
        );
        -1 === payload._status && (payload._status = 0, payload._result = ctor);
      }
      if (1 === payload._status) return payload._result.default;
      throw payload._result;
    }
    var reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
      if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
        var event = new window.ErrorEvent("error", {
          bubbles: true,
          cancelable: true,
          message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
          error
        });
        if (!window.dispatchEvent(event)) return;
      } else if ("object" === typeof process && "function" === typeof process.emit) {
        process.emit("uncaughtException", error);
        return;
      }
      console.error(error);
    };
    function noop3() {
    }
    exports.Children = {
      map: mapChildren,
      forEach: function(children, forEachFunc, forEachContext) {
        mapChildren(
          children,
          function() {
            forEachFunc.apply(this, arguments);
          },
          forEachContext
        );
      },
      count: function(children) {
        var n12 = 0;
        mapChildren(children, function() {
          n12++;
        });
        return n12;
      },
      toArray: function(children) {
        return mapChildren(children, function(child) {
          return child;
        }) || [];
      },
      only: function(children) {
        if (!isValidElement2(children))
          throw Error(
            "React.Children.only expected to receive a single React element child."
          );
        return children;
      }
    };
    exports.Component = Component3;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
    exports.__COMPILER_RUNTIME = {
      __proto__: null,
      c: function(size) {
        return ReactSharedInternals.H.useMemoCache(size);
      }
    };
    exports.cache = function(fn) {
      return function() {
        return fn.apply(null, arguments);
      };
    };
    exports.cloneElement = function(element, config, children) {
      if (null === element || void 0 === element)
        throw Error(
          "The argument must be a React element, but you passed " + element + "."
        );
      var props = assign({}, element.props), key = element.key, owner2 = void 0;
      if (null != config)
        for (propName in void 0 !== config.ref && (owner2 = void 0), void 0 !== config.key && (key = "" + config.key), config)
          !hasOwnProperty2.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && void 0 === config.ref || (props[propName] = config[propName]);
      var propName = arguments.length - 2;
      if (1 === propName) props.children = children;
      else if (1 < propName) {
        for (var childArray = Array(propName), i11 = 0; i11 < propName; i11++)
          childArray[i11] = arguments[i11 + 2];
        props.children = childArray;
      }
      return ReactElement(element.type, key, void 0, void 0, owner2, props);
    };
    exports.createContext = function(defaultValue2) {
      defaultValue2 = {
        $$typeof: REACT_CONTEXT_TYPE,
        _currentValue: defaultValue2,
        _currentValue2: defaultValue2,
        _threadCount: 0,
        Provider: null,
        Consumer: null
      };
      defaultValue2.Provider = defaultValue2;
      defaultValue2.Consumer = {
        $$typeof: REACT_CONSUMER_TYPE,
        _context: defaultValue2
      };
      return defaultValue2;
    };
    exports.createElement = function(type, config, children) {
      var propName, props = {}, key = null;
      if (null != config)
        for (propName in void 0 !== config.key && (key = "" + config.key), config)
          hasOwnProperty2.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (props[propName] = config[propName]);
      var childrenLength = arguments.length - 2;
      if (1 === childrenLength) props.children = children;
      else if (1 < childrenLength) {
        for (var childArray = Array(childrenLength), i11 = 0; i11 < childrenLength; i11++)
          childArray[i11] = arguments[i11 + 2];
        props.children = childArray;
      }
      if (type && type.defaultProps)
        for (propName in childrenLength = type.defaultProps, childrenLength)
          void 0 === props[propName] && (props[propName] = childrenLength[propName]);
      return ReactElement(type, key, void 0, void 0, null, props);
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(render) {
      return { $$typeof: REACT_FORWARD_REF_TYPE, render };
    };
    exports.isValidElement = isValidElement2;
    exports.lazy = function(ctor) {
      return {
        $$typeof: REACT_LAZY_TYPE,
        _payload: { _status: -1, _result: ctor },
        _init: lazyInitializer
      };
    };
    exports.memo = function(type, compare) {
      return {
        $$typeof: REACT_MEMO_TYPE,
        type,
        compare: void 0 === compare ? null : compare
      };
    };
    exports.startTransition = function(scope) {
      var prevTransition = ReactSharedInternals.T, currentTransition = {};
      ReactSharedInternals.T = currentTransition;
      try {
        var returnValue = scope(), onStartTransitionFinish = ReactSharedInternals.S;
        null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
        "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop3, reportGlobalError);
      } catch (error) {
        reportGlobalError(error);
      } finally {
        ReactSharedInternals.T = prevTransition;
      }
    };
    exports.unstable_useCacheRefresh = function() {
      return ReactSharedInternals.H.useCacheRefresh();
    };
    exports.use = function(usable) {
      return ReactSharedInternals.H.use(usable);
    };
    exports.useActionState = function(action, initialState, permalink) {
      return ReactSharedInternals.H.useActionState(action, initialState, permalink);
    };
    exports.useCallback = function(callback, deps) {
      return ReactSharedInternals.H.useCallback(callback, deps);
    };
    exports.useContext = function(Context) {
      return ReactSharedInternals.H.useContext(Context);
    };
    exports.useDebugValue = function() {
    };
    exports.useDeferredValue = function(value, initialValue) {
      return ReactSharedInternals.H.useDeferredValue(value, initialValue);
    };
    exports.useEffect = function(create, createDeps, update) {
      var dispatcher = ReactSharedInternals.H;
      if ("function" === typeof update)
        throw Error(
          "useEffect CRUD overload is not enabled in this build of React."
        );
      return dispatcher.useEffect(create, createDeps);
    };
    exports.useId = function() {
      return ReactSharedInternals.H.useId();
    };
    exports.useImperativeHandle = function(ref, create, deps) {
      return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function(create, deps) {
      return ReactSharedInternals.H.useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function(create, deps) {
      return ReactSharedInternals.H.useLayoutEffect(create, deps);
    };
    exports.useMemo = function(create, deps) {
      return ReactSharedInternals.H.useMemo(create, deps);
    };
    exports.useOptimistic = function(passthrough, reducer2) {
      return ReactSharedInternals.H.useOptimistic(passthrough, reducer2);
    };
    exports.useReducer = function(reducer2, initialArg, init) {
      return ReactSharedInternals.H.useReducer(reducer2, initialArg, init);
    };
    exports.useRef = function(initialValue) {
      return ReactSharedInternals.H.useRef(initialValue);
    };
    exports.useState = function(initialState) {
      return ReactSharedInternals.H.useState(initialState);
    };
    exports.useSyncExternalStore = function(subscribe, getSnapshot, getServerSnapshot) {
      return ReactSharedInternals.H.useSyncExternalStore(
        subscribe,
        getSnapshot,
        getServerSnapshot
      );
    };
    exports.useTransition = function() {
      return ReactSharedInternals.H.useTransition();
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react@19.1.0/node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/.pnpm/react@19.1.0/node_modules/react/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_react_production();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom.production.js
var require_react_dom_production = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    function formatProdErrorMessage(code) {
      var url = "https://react.dev/errors/" + code;
      if (1 < arguments.length) {
        url += "?args[]=" + encodeURIComponent(arguments[1]);
        for (var i11 = 2; i11 < arguments.length; i11++)
          url += "&args[]=" + encodeURIComponent(arguments[i11]);
      }
      return "Minified React error #" + code + "; visit " + url + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    function noop3() {
    }
    var Internals = {
      d: {
        f: noop3,
        r: function() {
          throw Error(formatProdErrorMessage(522));
        },
        D: noop3,
        C: noop3,
        L: noop3,
        m: noop3,
        X: noop3,
        S: noop3,
        M: noop3
      },
      p: 0,
      findDOMNode: null
    };
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    function createPortal$1(children, containerInfo, implementation) {
      var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
      return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children,
        containerInfo,
        implementation
      };
    }
    var ReactSharedInternals = React8.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    function getCrossOriginStringAs(as2, input) {
      if ("font" === as2) return "";
      if ("string" === typeof input)
        return "use-credentials" === input ? input : "";
    }
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;
    exports.createPortal = function(children, container5) {
      var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
      if (!container5 || 1 !== container5.nodeType && 9 !== container5.nodeType && 11 !== container5.nodeType)
        throw Error(formatProdErrorMessage(299));
      return createPortal$1(children, container5, null, key);
    };
    exports.flushSync = function(fn) {
      var previousTransition = ReactSharedInternals.T, previousUpdatePriority = Internals.p;
      try {
        if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();
      } finally {
        ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f();
      }
    };
    exports.preconnect = function(href, options) {
      "string" === typeof href && (options ? (options = options.crossOrigin, options = "string" === typeof options ? "use-credentials" === options ? options : "" : void 0) : options = null, Internals.d.C(href, options));
    };
    exports.prefetchDNS = function(href) {
      "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function(href, options) {
      if ("string" === typeof href && options && "string" === typeof options.as) {
        var as2 = options.as, crossOrigin = getCrossOriginStringAs(as2, options.crossOrigin), integrity = "string" === typeof options.integrity ? options.integrity : void 0, fetchPriority = "string" === typeof options.fetchPriority ? options.fetchPriority : void 0;
        "style" === as2 ? Internals.d.S(
          href,
          "string" === typeof options.precedence ? options.precedence : void 0,
          {
            crossOrigin,
            integrity,
            fetchPriority
          }
        ) : "script" === as2 && Internals.d.X(href, {
          crossOrigin,
          integrity,
          fetchPriority,
          nonce: "string" === typeof options.nonce ? options.nonce : void 0
        });
      }
    };
    exports.preinitModule = function(href, options) {
      if ("string" === typeof href)
        if ("object" === typeof options && null !== options) {
          if (null == options.as || "script" === options.as) {
            var crossOrigin = getCrossOriginStringAs(
              options.as,
              options.crossOrigin
            );
            Internals.d.M(href, {
              crossOrigin,
              integrity: "string" === typeof options.integrity ? options.integrity : void 0,
              nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
          }
        } else null == options && Internals.d.M(href);
    };
    exports.preload = function(href, options) {
      if ("string" === typeof href && "object" === typeof options && null !== options && "string" === typeof options.as) {
        var as2 = options.as, crossOrigin = getCrossOriginStringAs(as2, options.crossOrigin);
        Internals.d.L(href, as2, {
          crossOrigin,
          integrity: "string" === typeof options.integrity ? options.integrity : void 0,
          nonce: "string" === typeof options.nonce ? options.nonce : void 0,
          type: "string" === typeof options.type ? options.type : void 0,
          fetchPriority: "string" === typeof options.fetchPriority ? options.fetchPriority : void 0,
          referrerPolicy: "string" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,
          imageSrcSet: "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
          imageSizes: "string" === typeof options.imageSizes ? options.imageSizes : void 0,
          media: "string" === typeof options.media ? options.media : void 0
        });
      }
    };
    exports.preloadModule = function(href, options) {
      if ("string" === typeof href)
        if (options) {
          var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);
          Internals.d.m(href, {
            as: "string" === typeof options.as && "script" !== options.as ? options.as : void 0,
            crossOrigin,
            integrity: "string" === typeof options.integrity ? options.integrity : void 0
          });
        } else Internals.d.m(href);
    };
    exports.requestFormReset = function(form) {
      Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function(fn, a12) {
      return fn(a12);
    };
    exports.useFormState = function(action, initialState, permalink) {
      return ReactSharedInternals.H.useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function() {
      return ReactSharedInternals.H.useHostTransitionStatus();
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/index.js"(exports, module) {
    "use strict";
    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
        return;
      }
      if (false) {
        throw new Error("^_^");
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err) {
        console.error(err);
      }
    }
    if (true) {
      checkDCE();
      module.exports = require_react_dom_production();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
var require_react_dom_server_legacy_node_production = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    var ReactDOM2 = require_react_dom();
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    var REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var isArrayImpl = Array.isArray;
    function murmurhash3_32_gc(key, seed) {
      var remainder = key.length & 3;
      var bytes = key.length - remainder;
      var h1 = seed;
      for (seed = 0; seed < bytes; ) {
        var k1 = key.charCodeAt(seed) & 255 | (key.charCodeAt(++seed) & 255) << 8 | (key.charCodeAt(++seed) & 255) << 16 | (key.charCodeAt(++seed) & 255) << 24;
        ++seed;
        k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        k1 = k1 << 15 | k1 >>> 17;
        k1 = 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        h1 ^= k1;
        h1 = h1 << 13 | h1 >>> 19;
        h1 = 5 * (h1 & 65535) + ((5 * (h1 >>> 16) & 65535) << 16) & 4294967295;
        h1 = (h1 & 65535) + 27492 + (((h1 >>> 16) + 58964 & 65535) << 16);
      }
      k1 = 0;
      switch (remainder) {
        case 3:
          k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;
        case 2:
          k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;
        case 1:
          k1 ^= key.charCodeAt(seed) & 255, k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295, k1 = k1 << 15 | k1 >>> 17, h1 ^= 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
      }
      h1 ^= key.length;
      h1 ^= h1 >>> 16;
      h1 = 2246822507 * (h1 & 65535) + ((2246822507 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      h1 ^= h1 >>> 13;
      h1 = 3266489909 * (h1 & 65535) + ((3266489909 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      return (h1 ^ h1 >>> 16) >>> 0;
    }
    var assign = Object.assign;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var VALID_ATTRIBUTE_NAME_REGEX = RegExp(
      "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
    );
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty2.call(validatedAttributeNameCache, attributeName))
        return true;
      if (hasOwnProperty2.call(illegalAttributeNameCache, attributeName)) return false;
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
        return validatedAttributeNameCache[attributeName] = true;
      illegalAttributeNameCache[attributeName] = true;
      return false;
    }
    var unitlessNumbers = new Set(
      "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
        " "
      )
    );
    var aliases = /* @__PURE__ */ new Map([
      ["acceptCharset", "accept-charset"],
      ["htmlFor", "for"],
      ["httpEquiv", "http-equiv"],
      ["crossOrigin", "crossorigin"],
      ["accentHeight", "accent-height"],
      ["alignmentBaseline", "alignment-baseline"],
      ["arabicForm", "arabic-form"],
      ["baselineShift", "baseline-shift"],
      ["capHeight", "cap-height"],
      ["clipPath", "clip-path"],
      ["clipRule", "clip-rule"],
      ["colorInterpolation", "color-interpolation"],
      ["colorInterpolationFilters", "color-interpolation-filters"],
      ["colorProfile", "color-profile"],
      ["colorRendering", "color-rendering"],
      ["dominantBaseline", "dominant-baseline"],
      ["enableBackground", "enable-background"],
      ["fillOpacity", "fill-opacity"],
      ["fillRule", "fill-rule"],
      ["floodColor", "flood-color"],
      ["floodOpacity", "flood-opacity"],
      ["fontFamily", "font-family"],
      ["fontSize", "font-size"],
      ["fontSizeAdjust", "font-size-adjust"],
      ["fontStretch", "font-stretch"],
      ["fontStyle", "font-style"],
      ["fontVariant", "font-variant"],
      ["fontWeight", "font-weight"],
      ["glyphName", "glyph-name"],
      ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
      ["glyphOrientationVertical", "glyph-orientation-vertical"],
      ["horizAdvX", "horiz-adv-x"],
      ["horizOriginX", "horiz-origin-x"],
      ["imageRendering", "image-rendering"],
      ["letterSpacing", "letter-spacing"],
      ["lightingColor", "lighting-color"],
      ["markerEnd", "marker-end"],
      ["markerMid", "marker-mid"],
      ["markerStart", "marker-start"],
      ["overlinePosition", "overline-position"],
      ["overlineThickness", "overline-thickness"],
      ["paintOrder", "paint-order"],
      ["panose-1", "panose-1"],
      ["pointerEvents", "pointer-events"],
      ["renderingIntent", "rendering-intent"],
      ["shapeRendering", "shape-rendering"],
      ["stopColor", "stop-color"],
      ["stopOpacity", "stop-opacity"],
      ["strikethroughPosition", "strikethrough-position"],
      ["strikethroughThickness", "strikethrough-thickness"],
      ["strokeDasharray", "stroke-dasharray"],
      ["strokeDashoffset", "stroke-dashoffset"],
      ["strokeLinecap", "stroke-linecap"],
      ["strokeLinejoin", "stroke-linejoin"],
      ["strokeMiterlimit", "stroke-miterlimit"],
      ["strokeOpacity", "stroke-opacity"],
      ["strokeWidth", "stroke-width"],
      ["textAnchor", "text-anchor"],
      ["textDecoration", "text-decoration"],
      ["textRendering", "text-rendering"],
      ["transformOrigin", "transform-origin"],
      ["underlinePosition", "underline-position"],
      ["underlineThickness", "underline-thickness"],
      ["unicodeBidi", "unicode-bidi"],
      ["unicodeRange", "unicode-range"],
      ["unitsPerEm", "units-per-em"],
      ["vAlphabetic", "v-alphabetic"],
      ["vHanging", "v-hanging"],
      ["vIdeographic", "v-ideographic"],
      ["vMathematical", "v-mathematical"],
      ["vectorEffect", "vector-effect"],
      ["vertAdvY", "vert-adv-y"],
      ["vertOriginX", "vert-origin-x"],
      ["vertOriginY", "vert-origin-y"],
      ["wordSpacing", "word-spacing"],
      ["writingMode", "writing-mode"],
      ["xmlnsXlink", "xmlns:xlink"],
      ["xHeight", "x-height"]
    ]);
    var matchHtmlRegExp = /["'&<>]/;
    function escapeTextForBrowser(text3) {
      if ("boolean" === typeof text3 || "number" === typeof text3 || "bigint" === typeof text3)
        return "" + text3;
      text3 = "" + text3;
      var match = matchHtmlRegExp.exec(text3);
      if (match) {
        var html = "", index, lastIndex = 0;
        for (index = match.index; index < text3.length; index++) {
          switch (text3.charCodeAt(index)) {
            case 34:
              match = "&quot;";
              break;
            case 38:
              match = "&amp;";
              break;
            case 39:
              match = "&#x27;";
              break;
            case 60:
              match = "&lt;";
              break;
            case 62:
              match = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += text3.slice(lastIndex, index));
          lastIndex = index + 1;
          html += match;
        }
        text3 = lastIndex !== index ? html + text3.slice(lastIndex, index) : html;
      }
      return text3;
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
    function sanitizeURL(url) {
      return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    var ReactSharedInternals = React8.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var ReactDOMSharedInternals = ReactDOM2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var sharedNotPendingObject = {
      pending: false,
      data: null,
      method: null,
      action: null
    };
    var previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
      f: previousDispatcher.f,
      r: previousDispatcher.r,
      D: prefetchDNS,
      C: preconnect,
      L: preload,
      m: preloadModule,
      X: preinitScript,
      S: preinitStyle,
      M: preinitModuleScript
    };
    var PRELOAD_NO_CREDS = [];
    var scriptRegex = /(<\/|<)(s)(cript)/gi;
    function scriptReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\u0073" : "\\u0053") + suffix2;
    }
    function createResumableState(identifierPrefix, externalRuntimeConfig, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
      return {
        idPrefix: void 0 === identifierPrefix ? "" : identifierPrefix,
        nextFormID: 0,
        streamingFormat: 0,
        bootstrapScriptContent,
        bootstrapScripts,
        bootstrapModules,
        instructions: 0,
        hasBody: false,
        hasHtml: false,
        unknownResources: {},
        dnsResources: {},
        connectResources: { default: {}, anonymous: {}, credentials: {} },
        imageResources: {},
        styleResources: {},
        scriptResources: {},
        moduleUnknownResources: {},
        moduleScriptResources: {}
      };
    }
    function createPreambleState() {
      return {
        htmlChunks: null,
        headChunks: null,
        bodyChunks: null,
        contribution: 0
      };
    }
    function createFormatContext(insertionMode, selectedValue, tagScope) {
      return {
        insertionMode,
        selectedValue,
        tagScope
      };
    }
    function getChildFormatContext(parentContext, type, props) {
      switch (type) {
        case "noscript":
          return createFormatContext(2, null, parentContext.tagScope | 1);
        case "select":
          return createFormatContext(
            2,
            null != props.value ? props.value : props.defaultValue,
            parentContext.tagScope
          );
        case "svg":
          return createFormatContext(4, null, parentContext.tagScope);
        case "picture":
          return createFormatContext(2, null, parentContext.tagScope | 2);
        case "math":
          return createFormatContext(5, null, parentContext.tagScope);
        case "foreignObject":
          return createFormatContext(2, null, parentContext.tagScope);
        case "table":
          return createFormatContext(6, null, parentContext.tagScope);
        case "thead":
        case "tbody":
        case "tfoot":
          return createFormatContext(7, null, parentContext.tagScope);
        case "colgroup":
          return createFormatContext(9, null, parentContext.tagScope);
        case "tr":
          return createFormatContext(8, null, parentContext.tagScope);
        case "head":
          if (2 > parentContext.insertionMode)
            return createFormatContext(3, null, parentContext.tagScope);
          break;
        case "html":
          if (0 === parentContext.insertionMode)
            return createFormatContext(1, null, parentContext.tagScope);
      }
      return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode ? createFormatContext(2, null, parentContext.tagScope) : parentContext;
    }
    var styleNameCache = /* @__PURE__ */ new Map();
    function pushStyleAttribute(target, style) {
      if ("object" !== typeof style)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      var isFirst = true, styleName;
      for (styleName in style)
        if (hasOwnProperty2.call(style, styleName)) {
          var styleValue = style[styleName];
          if (null != styleValue && "boolean" !== typeof styleValue && "" !== styleValue) {
            if (0 === styleName.indexOf("--")) {
              var nameChunk = escapeTextForBrowser(styleName);
              styleValue = escapeTextForBrowser(("" + styleValue).trim());
            } else
              nameChunk = styleNameCache.get(styleName), void 0 === nameChunk && (nameChunk = escapeTextForBrowser(
                styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-")
              ), styleNameCache.set(styleName, nameChunk)), styleValue = "number" === typeof styleValue ? 0 === styleValue || unitlessNumbers.has(styleName) ? "" + styleValue : styleValue + "px" : escapeTextForBrowser(("" + styleValue).trim());
            isFirst ? (isFirst = false, target.push(' style="', nameChunk, ":", styleValue)) : target.push(";", nameChunk, ":", styleValue);
          }
        }
      isFirst || target.push('"');
    }
    function pushBooleanAttribute(target, name2, value) {
      value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '=""');
    }
    function pushStringAttribute(target, name2, value) {
      "function" !== typeof value && "symbol" !== typeof value && "boolean" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
    }
    var actionJavaScriptURL = escapeTextForBrowser(
      "javascript:throw new Error('React form unexpectedly submitted.')"
    );
    function pushAdditionalFormField(value, key) {
      this.push('<input type="hidden"');
      validateAdditionalFormField(value);
      pushStringAttribute(this, "name", key);
      pushStringAttribute(this, "value", value);
      this.push("/>");
    }
    function validateAdditionalFormField(value) {
      if ("string" !== typeof value)
        throw Error(
          "File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration."
        );
    }
    function getCustomFormFields(resumableState, formAction) {
      if ("function" === typeof formAction.$$FORM_ACTION) {
        var id5 = resumableState.nextFormID++;
        resumableState = resumableState.idPrefix + id5;
        try {
          var customFields = formAction.$$FORM_ACTION(resumableState);
          if (customFields) {
            var formData = customFields.data;
            null != formData && formData.forEach(validateAdditionalFormField);
          }
          return customFields;
        } catch (x3) {
          if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then)
            throw x3;
        }
      }
      return null;
    }
    function pushFormActionAttribute(target, resumableState, renderState, formAction, formEncType, formMethod, formTarget, name2) {
      var formData = null;
      if ("function" === typeof formAction) {
        var customFields = getCustomFormFields(resumableState, formAction);
        null !== customFields ? (name2 = customFields.name, formAction = customFields.action || "", formEncType = customFields.encType, formMethod = customFields.method, formTarget = customFields.target, formData = customFields.data) : (target.push(" ", "formAction", '="', actionJavaScriptURL, '"'), formTarget = formMethod = formEncType = formAction = name2 = null, injectFormReplayingRuntime(resumableState, renderState));
      }
      null != name2 && pushAttribute(target, "name", name2);
      null != formAction && pushAttribute(target, "formAction", formAction);
      null != formEncType && pushAttribute(target, "formEncType", formEncType);
      null != formMethod && pushAttribute(target, "formMethod", formMethod);
      null != formTarget && pushAttribute(target, "formTarget", formTarget);
      return formData;
    }
    function pushAttribute(target, name2, value) {
      switch (name2) {
        case "className":
          pushStringAttribute(target, "class", value);
          break;
        case "tabIndex":
          pushStringAttribute(target, "tabindex", value);
          break;
        case "dir":
        case "role":
        case "viewBox":
        case "width":
        case "height":
          pushStringAttribute(target, name2, value);
          break;
        case "style":
          pushStyleAttribute(target, value);
          break;
        case "src":
        case "href":
          if ("" === value) break;
        case "action":
        case "formAction":
          if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "ref":
          break;
        case "autoFocus":
        case "multiple":
        case "muted":
          pushBooleanAttribute(target, name2.toLowerCase(), value);
          break;
        case "xlinkHref":
          if ("function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(" ", "xlink:href", '="', escapeTextForBrowser(value), '"');
          break;
        case "contentEditable":
        case "spellCheck":
        case "draggable":
        case "value":
        case "autoReverse":
        case "externalResourcesRequired":
        case "focusable":
        case "preserveAlpha":
          "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "inert":
        case "allowFullScreen":
        case "async":
        case "autoPlay":
        case "controls":
        case "default":
        case "defer":
        case "disabled":
        case "disablePictureInPicture":
        case "disableRemotePlayback":
        case "formNoValidate":
        case "hidden":
        case "loop":
        case "noModule":
        case "noValidate":
        case "open":
        case "playsInline":
        case "readOnly":
        case "required":
        case "reversed":
        case "scoped":
        case "seamless":
        case "itemScope":
          value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '=""');
          break;
        case "capture":
        case "download":
          true === value ? target.push(" ", name2, '=""') : false !== value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "cols":
        case "rows":
        case "size":
        case "span":
          "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "rowSpan":
        case "start":
          "function" === typeof value || "symbol" === typeof value || isNaN(value) || target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "xlinkActuate":
          pushStringAttribute(target, "xlink:actuate", value);
          break;
        case "xlinkArcrole":
          pushStringAttribute(target, "xlink:arcrole", value);
          break;
        case "xlinkRole":
          pushStringAttribute(target, "xlink:role", value);
          break;
        case "xlinkShow":
          pushStringAttribute(target, "xlink:show", value);
          break;
        case "xlinkTitle":
          pushStringAttribute(target, "xlink:title", value);
          break;
        case "xlinkType":
          pushStringAttribute(target, "xlink:type", value);
          break;
        case "xmlBase":
          pushStringAttribute(target, "xml:base", value);
          break;
        case "xmlLang":
          pushStringAttribute(target, "xml:lang", value);
          break;
        case "xmlSpace":
          pushStringAttribute(target, "xml:space", value);
          break;
        default:
          if (!(2 < name2.length) || "o" !== name2[0] && "O" !== name2[0] || "n" !== name2[1] && "N" !== name2[1]) {
            if (name2 = aliases.get(name2) || name2, isAttributeNameSafe(name2)) {
              switch (typeof value) {
                case "function":
                case "symbol":
                  return;
                case "boolean":
                  var prefix$8 = name2.toLowerCase().slice(0, 5);
                  if ("data-" !== prefix$8 && "aria-" !== prefix$8) return;
              }
              target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
            }
          }
      }
    }
    function pushInnerHTML(target, innerHTML, children) {
      if (null != innerHTML) {
        if (null != children)
          throw Error(
            "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
          );
        if ("object" !== typeof innerHTML || !("__html" in innerHTML))
          throw Error(
            "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
          );
        innerHTML = innerHTML.__html;
        null !== innerHTML && void 0 !== innerHTML && target.push("" + innerHTML);
      }
    }
    function flattenOptionChildren(children) {
      var content4 = "";
      React8.Children.forEach(children, function(child) {
        null != child && (content4 += child);
      });
      return content4;
    }
    function injectFormReplayingRuntime(resumableState, renderState) {
      0 === (resumableState.instructions & 16) && (resumableState.instructions |= 16, renderState.bootstrapChunks.unshift(
        renderState.startInlineScript,
        `addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error('React form unexpectedly submitted.')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});`,
        "</script>"
      ));
    }
    function pushLinkImpl(target, props) {
      target.push(startChunkForTag("link"));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push("/>");
      return null;
    }
    var styleRegex = /(<\/|<)(s)(tyle)/gi;
    function styleReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\73 " : "\\53 ") + suffix2;
    }
    function pushSelfClosing(target, props, tag) {
      target.push(startChunkForTag(tag));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push("/>");
      return null;
    }
    function pushTitleImpl(target, props) {
      target.push(startChunkForTag("title"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      props = Array.isArray(children) ? 2 > children.length ? children[0] : null : children;
      "function" !== typeof props && "symbol" !== typeof props && null !== props && void 0 !== props && target.push(escapeTextForBrowser("" + props));
      pushInnerHTML(target, innerHTML, children);
      target.push(endChunkForTag("title"));
      return null;
    }
    function pushScriptImpl(target, props) {
      target.push(startChunkForTag("script"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, children);
      "string" === typeof children && target.push(("" + children).replace(scriptRegex, scriptReplacer));
      target.push(endChunkForTag("script"));
      return null;
    }
    function pushStartSingletonElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, tag);
      return tag;
    }
    function pushStartGenericElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, tag);
      return "string" === typeof tag ? (target.push(escapeTextForBrowser(tag)), null) : tag;
    }
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = /* @__PURE__ */ new Map();
    function startChunkForTag(tag) {
      var tagStartChunk = validatedTagCache.get(tag);
      if (void 0 === tagStartChunk) {
        if (!VALID_TAG_REGEX.test(tag)) throw Error("Invalid tag: " + tag);
        tagStartChunk = "<" + tag;
        validatedTagCache.set(tag, tagStartChunk);
      }
      return tagStartChunk;
    }
    function pushStartInstance(target$jscomp$0, type, props, resumableState, renderState, preambleState, hoistableState, formatContext, textEmbedded, isFallback) {
      switch (type) {
        case "div":
        case "span":
        case "svg":
        case "path":
          break;
        case "a":
          target$jscomp$0.push(startChunkForTag("a"));
          var children = null, innerHTML = null, propKey;
          for (propKey in props)
            if (hasOwnProperty2.call(props, propKey)) {
              var propValue = props[propKey];
              if (null != propValue)
                switch (propKey) {
                  case "children":
                    children = propValue;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML = propValue;
                    break;
                  case "href":
                    "" === propValue ? pushStringAttribute(target$jscomp$0, "href", "") : pushAttribute(target$jscomp$0, propKey, propValue);
                    break;
                  default:
                    pushAttribute(target$jscomp$0, propKey, propValue);
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML, children);
          if ("string" === typeof children) {
            target$jscomp$0.push(escapeTextForBrowser(children));
            var JSCompiler_inline_result = null;
          } else JSCompiler_inline_result = children;
          return JSCompiler_inline_result;
        case "g":
        case "p":
        case "li":
          break;
        case "select":
          target$jscomp$0.push(startChunkForTag("select"));
          var children$jscomp$0 = null, innerHTML$jscomp$0 = null, propKey$jscomp$0;
          for (propKey$jscomp$0 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$0)) {
              var propValue$jscomp$0 = props[propKey$jscomp$0];
              if (null != propValue$jscomp$0)
                switch (propKey$jscomp$0) {
                  case "children":
                    children$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$0,
                      propValue$jscomp$0
                    );
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
          return children$jscomp$0;
        case "option":
          var selectedValue = formatContext.selectedValue;
          target$jscomp$0.push(startChunkForTag("option"));
          var children$jscomp$1 = null, value = null, selected = null, innerHTML$jscomp$1 = null, propKey$jscomp$1;
          for (propKey$jscomp$1 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$1)) {
              var propValue$jscomp$1 = props[propKey$jscomp$1];
              if (null != propValue$jscomp$1)
                switch (propKey$jscomp$1) {
                  case "children":
                    children$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "selected":
                    selected = propValue$jscomp$1;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "value":
                    value = propValue$jscomp$1;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$1,
                      propValue$jscomp$1
                    );
                }
            }
          if (null != selectedValue) {
            var stringValue = null !== value ? "" + value : flattenOptionChildren(children$jscomp$1);
            if (isArrayImpl(selectedValue))
              for (var i11 = 0; i11 < selectedValue.length; i11++) {
                if ("" + selectedValue[i11] === stringValue) {
                  target$jscomp$0.push(' selected=""');
                  break;
                }
              }
            else
              "" + selectedValue === stringValue && target$jscomp$0.push(' selected=""');
          } else selected && target$jscomp$0.push(' selected=""');
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);
          return children$jscomp$1;
        case "textarea":
          target$jscomp$0.push(startChunkForTag("textarea"));
          var value$jscomp$0 = null, defaultValue2 = null, children$jscomp$2 = null, propKey$jscomp$2;
          for (propKey$jscomp$2 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$2)) {
              var propValue$jscomp$2 = props[propKey$jscomp$2];
              if (null != propValue$jscomp$2)
                switch (propKey$jscomp$2) {
                  case "children":
                    children$jscomp$2 = propValue$jscomp$2;
                    break;
                  case "value":
                    value$jscomp$0 = propValue$jscomp$2;
                    break;
                  case "defaultValue":
                    defaultValue2 = propValue$jscomp$2;
                    break;
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$2,
                      propValue$jscomp$2
                    );
                }
            }
          null === value$jscomp$0 && null !== defaultValue2 && (value$jscomp$0 = defaultValue2);
          target$jscomp$0.push(">");
          if (null != children$jscomp$2) {
            if (null != value$jscomp$0)
              throw Error(
                "If you supply `defaultValue` on a <textarea>, do not pass children."
              );
            if (isArrayImpl(children$jscomp$2)) {
              if (1 < children$jscomp$2.length)
                throw Error("<textarea> can only have at most one child.");
              value$jscomp$0 = "" + children$jscomp$2[0];
            }
            value$jscomp$0 = "" + children$jscomp$2;
          }
          "string" === typeof value$jscomp$0 && "\n" === value$jscomp$0[0] && target$jscomp$0.push("\n");
          null !== value$jscomp$0 && target$jscomp$0.push(escapeTextForBrowser("" + value$jscomp$0));
          return null;
        case "input":
          target$jscomp$0.push(startChunkForTag("input"));
          var name2 = null, formAction = null, formEncType = null, formMethod = null, formTarget = null, value$jscomp$1 = null, defaultValue$jscomp$0 = null, checked = null, defaultChecked = null, propKey$jscomp$3;
          for (propKey$jscomp$3 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$3)) {
              var propValue$jscomp$3 = props[propKey$jscomp$3];
              if (null != propValue$jscomp$3)
                switch (propKey$jscomp$3) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  case "name":
                    name2 = propValue$jscomp$3;
                    break;
                  case "formAction":
                    formAction = propValue$jscomp$3;
                    break;
                  case "formEncType":
                    formEncType = propValue$jscomp$3;
                    break;
                  case "formMethod":
                    formMethod = propValue$jscomp$3;
                    break;
                  case "formTarget":
                    formTarget = propValue$jscomp$3;
                    break;
                  case "defaultChecked":
                    defaultChecked = propValue$jscomp$3;
                    break;
                  case "defaultValue":
                    defaultValue$jscomp$0 = propValue$jscomp$3;
                    break;
                  case "checked":
                    checked = propValue$jscomp$3;
                    break;
                  case "value":
                    value$jscomp$1 = propValue$jscomp$3;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$3,
                      propValue$jscomp$3
                    );
                }
            }
          var formData = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction,
            formEncType,
            formMethod,
            formTarget,
            name2
          );
          null !== checked ? pushBooleanAttribute(target$jscomp$0, "checked", checked) : null !== defaultChecked && pushBooleanAttribute(target$jscomp$0, "checked", defaultChecked);
          null !== value$jscomp$1 ? pushAttribute(target$jscomp$0, "value", value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0, "value", defaultValue$jscomp$0);
          target$jscomp$0.push("/>");
          null != formData && formData.forEach(pushAdditionalFormField, target$jscomp$0);
          return null;
        case "button":
          target$jscomp$0.push(startChunkForTag("button"));
          var children$jscomp$3 = null, innerHTML$jscomp$2 = null, name$jscomp$0 = null, formAction$jscomp$0 = null, formEncType$jscomp$0 = null, formMethod$jscomp$0 = null, formTarget$jscomp$0 = null, propKey$jscomp$4;
          for (propKey$jscomp$4 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$4)) {
              var propValue$jscomp$4 = props[propKey$jscomp$4];
              if (null != propValue$jscomp$4)
                switch (propKey$jscomp$4) {
                  case "children":
                    children$jscomp$3 = propValue$jscomp$4;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$2 = propValue$jscomp$4;
                    break;
                  case "name":
                    name$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formAction":
                    formAction$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formEncType":
                    formEncType$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formMethod":
                    formMethod$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formTarget":
                    formTarget$jscomp$0 = propValue$jscomp$4;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$4,
                      propValue$jscomp$4
                    );
                }
            }
          var formData$jscomp$0 = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction$jscomp$0,
            formEncType$jscomp$0,
            formMethod$jscomp$0,
            formTarget$jscomp$0,
            name$jscomp$0
          );
          target$jscomp$0.push(">");
          null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);
          if ("string" === typeof children$jscomp$3) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$3));
            var JSCompiler_inline_result$jscomp$0 = null;
          } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;
          return JSCompiler_inline_result$jscomp$0;
        case "form":
          target$jscomp$0.push(startChunkForTag("form"));
          var children$jscomp$4 = null, innerHTML$jscomp$3 = null, formAction$jscomp$1 = null, formEncType$jscomp$1 = null, formMethod$jscomp$1 = null, formTarget$jscomp$1 = null, propKey$jscomp$5;
          for (propKey$jscomp$5 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$5)) {
              var propValue$jscomp$5 = props[propKey$jscomp$5];
              if (null != propValue$jscomp$5)
                switch (propKey$jscomp$5) {
                  case "children":
                    children$jscomp$4 = propValue$jscomp$5;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$3 = propValue$jscomp$5;
                    break;
                  case "action":
                    formAction$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "encType":
                    formEncType$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "method":
                    formMethod$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "target":
                    formTarget$jscomp$1 = propValue$jscomp$5;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$5,
                      propValue$jscomp$5
                    );
                }
            }
          var formData$jscomp$1 = null, formActionName = null;
          if ("function" === typeof formAction$jscomp$1) {
            var customFields = getCustomFormFields(
              resumableState,
              formAction$jscomp$1
            );
            null !== customFields ? (formAction$jscomp$1 = customFields.action || "", formEncType$jscomp$1 = customFields.encType, formMethod$jscomp$1 = customFields.method, formTarget$jscomp$1 = customFields.target, formData$jscomp$1 = customFields.data, formActionName = customFields.name) : (target$jscomp$0.push(
              " ",
              "action",
              '="',
              actionJavaScriptURL,
              '"'
            ), formTarget$jscomp$1 = formMethod$jscomp$1 = formEncType$jscomp$1 = formAction$jscomp$1 = null, injectFormReplayingRuntime(resumableState, renderState));
          }
          null != formAction$jscomp$1 && pushAttribute(target$jscomp$0, "action", formAction$jscomp$1);
          null != formEncType$jscomp$1 && pushAttribute(target$jscomp$0, "encType", formEncType$jscomp$1);
          null != formMethod$jscomp$1 && pushAttribute(target$jscomp$0, "method", formMethod$jscomp$1);
          null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0, "target", formTarget$jscomp$1);
          target$jscomp$0.push(">");
          null !== formActionName && (target$jscomp$0.push('<input type="hidden"'), pushStringAttribute(target$jscomp$0, "name", formActionName), target$jscomp$0.push("/>"), null != formData$jscomp$1 && formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);
          if ("string" === typeof children$jscomp$4) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$4));
            var JSCompiler_inline_result$jscomp$1 = null;
          } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;
          return JSCompiler_inline_result$jscomp$1;
        case "menuitem":
          target$jscomp$0.push(startChunkForTag("menuitem"));
          for (var propKey$jscomp$6 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$6)) {
              var propValue$jscomp$6 = props[propKey$jscomp$6];
              if (null != propValue$jscomp$6)
                switch (propKey$jscomp$6) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "menuitems cannot have `children` nor `dangerouslySetInnerHTML`."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$6,
                      propValue$jscomp$6
                    );
                }
            }
          target$jscomp$0.push(">");
          return null;
        case "object":
          target$jscomp$0.push(startChunkForTag("object"));
          var children$jscomp$5 = null, innerHTML$jscomp$4 = null, propKey$jscomp$7;
          for (propKey$jscomp$7 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$7)) {
              var propValue$jscomp$7 = props[propKey$jscomp$7];
              if (null != propValue$jscomp$7)
                switch (propKey$jscomp$7) {
                  case "children":
                    children$jscomp$5 = propValue$jscomp$7;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$4 = propValue$jscomp$7;
                    break;
                  case "data":
                    var sanitizedValue = sanitizeURL("" + propValue$jscomp$7);
                    if ("" === sanitizedValue) break;
                    target$jscomp$0.push(
                      " ",
                      "data",
                      '="',
                      escapeTextForBrowser(sanitizedValue),
                      '"'
                    );
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$7,
                      propValue$jscomp$7
                    );
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
          if ("string" === typeof children$jscomp$5) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$5));
            var JSCompiler_inline_result$jscomp$2 = null;
          } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;
          return JSCompiler_inline_result$jscomp$2;
        case "title":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(
              target$jscomp$0,
              props
            );
          else
            isFallback ? JSCompiler_inline_result$jscomp$3 = null : (pushTitleImpl(renderState.hoistableChunks, props), JSCompiler_inline_result$jscomp$3 = void 0);
          return JSCompiler_inline_result$jscomp$3;
        case "link":
          var rel = props.rel, href = props.href, precedence = props.precedence;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof rel || "string" !== typeof href || "" === href) {
            pushLinkImpl(target$jscomp$0, props);
            var JSCompiler_inline_result$jscomp$4 = null;
          } else if ("stylesheet" === props.rel)
            if ("string" !== typeof precedence || null != props.disabled || props.onLoad || props.onError)
              JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
                target$jscomp$0,
                props
              );
            else {
              var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
              if (null !== resourceState) {
                resumableState.styleResources[href] = null;
                styleQueue || (styleQueue = {
                  precedence: escapeTextForBrowser(precedence),
                  rules: [],
                  hrefs: [],
                  sheets: /* @__PURE__ */ new Map()
                }, renderState.styles.set(precedence, styleQueue));
                var resource = {
                  state: 0,
                  props: assign({}, props, {
                    "data-precedence": props.precedence,
                    precedence: null
                  })
                };
                if (resourceState) {
                  2 === resourceState.length && adoptPreloadCredentials(resource.props, resourceState);
                  var preloadResource = renderState.preloads.stylesheets.get(href);
                  preloadResource && 0 < preloadResource.length ? preloadResource.length = 0 : resource.state = 1;
                }
                styleQueue.sheets.set(href, resource);
                hoistableState && hoistableState.stylesheets.add(resource);
              } else if (styleQueue) {
                var resource$9 = styleQueue.sheets.get(href);
                resource$9 && hoistableState && hoistableState.stylesheets.add(resource$9);
              }
              textEmbedded && target$jscomp$0.push("<!-- -->");
              JSCompiler_inline_result$jscomp$4 = null;
            }
          else
            props.onLoad || props.onError ? JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
              target$jscomp$0,
              props
            ) : (textEmbedded && target$jscomp$0.push("<!-- -->"), JSCompiler_inline_result$jscomp$4 = isFallback ? null : pushLinkImpl(renderState.hoistableChunks, props));
          return JSCompiler_inline_result$jscomp$4;
        case "script":
          var asyncProp = props.async;
          if ("string" !== typeof props.src || !props.src || !asyncProp || "function" === typeof asyncProp || "symbol" === typeof asyncProp || props.onLoad || props.onError || 4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(
              target$jscomp$0,
              props
            );
          else {
            var key = props.src;
            if ("module" === props.type) {
              var resources = resumableState.moduleScriptResources;
              var preloads = renderState.preloads.moduleScripts;
            } else
              resources = resumableState.scriptResources, preloads = renderState.preloads.scripts;
            var resourceState$jscomp$0 = resources.hasOwnProperty(key) ? resources[key] : void 0;
            if (null !== resourceState$jscomp$0) {
              resources[key] = null;
              var scriptProps = props;
              if (resourceState$jscomp$0) {
                2 === resourceState$jscomp$0.length && (scriptProps = assign({}, props), adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));
                var preloadResource$jscomp$0 = preloads.get(key);
                preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);
              }
              var resource$jscomp$0 = [];
              renderState.scripts.add(resource$jscomp$0);
              pushScriptImpl(resource$jscomp$0, scriptProps);
            }
            textEmbedded && target$jscomp$0.push("<!-- -->");
            JSCompiler_inline_result$jscomp$5 = null;
          }
          return JSCompiler_inline_result$jscomp$5;
        case "style":
          var precedence$jscomp$0 = props.precedence, href$jscomp$0 = props.href;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof precedence$jscomp$0 || "string" !== typeof href$jscomp$0 || "" === href$jscomp$0) {
            target$jscomp$0.push(startChunkForTag("style"));
            var children$jscomp$6 = null, innerHTML$jscomp$5 = null, propKey$jscomp$8;
            for (propKey$jscomp$8 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$8)) {
                var propValue$jscomp$8 = props[propKey$jscomp$8];
                if (null != propValue$jscomp$8)
                  switch (propKey$jscomp$8) {
                    case "children":
                      children$jscomp$6 = propValue$jscomp$8;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$5 = propValue$jscomp$8;
                      break;
                    default:
                      pushAttribute(
                        target$jscomp$0,
                        propKey$jscomp$8,
                        propValue$jscomp$8
                      );
                  }
              }
            target$jscomp$0.push(">");
            var child = Array.isArray(children$jscomp$6) ? 2 > children$jscomp$6.length ? children$jscomp$6[0] : null : children$jscomp$6;
            "function" !== typeof child && "symbol" !== typeof child && null !== child && void 0 !== child && target$jscomp$0.push(("" + child).replace(styleRegex, styleReplacer));
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);
            target$jscomp$0.push(endChunkForTag("style"));
            var JSCompiler_inline_result$jscomp$6 = null;
          } else {
            var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);
            if (null !== (resumableState.styleResources.hasOwnProperty(href$jscomp$0) ? resumableState.styleResources[href$jscomp$0] : void 0)) {
              resumableState.styleResources[href$jscomp$0] = null;
              styleQueue$jscomp$0 ? styleQueue$jscomp$0.hrefs.push(
                escapeTextForBrowser(href$jscomp$0)
              ) : (styleQueue$jscomp$0 = {
                precedence: escapeTextForBrowser(precedence$jscomp$0),
                rules: [],
                hrefs: [escapeTextForBrowser(href$jscomp$0)],
                sheets: /* @__PURE__ */ new Map()
              }, renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));
              var target = styleQueue$jscomp$0.rules, children$jscomp$7 = null, innerHTML$jscomp$6 = null, propKey$jscomp$9;
              for (propKey$jscomp$9 in props)
                if (hasOwnProperty2.call(props, propKey$jscomp$9)) {
                  var propValue$jscomp$9 = props[propKey$jscomp$9];
                  if (null != propValue$jscomp$9)
                    switch (propKey$jscomp$9) {
                      case "children":
                        children$jscomp$7 = propValue$jscomp$9;
                        break;
                      case "dangerouslySetInnerHTML":
                        innerHTML$jscomp$6 = propValue$jscomp$9;
                    }
                }
              var child$jscomp$0 = Array.isArray(children$jscomp$7) ? 2 > children$jscomp$7.length ? children$jscomp$7[0] : null : children$jscomp$7;
              "function" !== typeof child$jscomp$0 && "symbol" !== typeof child$jscomp$0 && null !== child$jscomp$0 && void 0 !== child$jscomp$0 && target.push(
                ("" + child$jscomp$0).replace(styleRegex, styleReplacer)
              );
              pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);
            }
            styleQueue$jscomp$0 && hoistableState && hoistableState.styles.add(styleQueue$jscomp$0);
            textEmbedded && target$jscomp$0.push("<!-- -->");
            JSCompiler_inline_result$jscomp$6 = void 0;
          }
          return JSCompiler_inline_result$jscomp$6;
        case "meta":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
              target$jscomp$0,
              props,
              "meta"
            );
          else
            textEmbedded && target$jscomp$0.push("<!-- -->"), JSCompiler_inline_result$jscomp$7 = isFallback ? null : "string" === typeof props.charSet ? pushSelfClosing(renderState.charsetChunks, props, "meta") : "viewport" === props.name ? pushSelfClosing(renderState.viewportChunks, props, "meta") : pushSelfClosing(renderState.hoistableChunks, props, "meta");
          return JSCompiler_inline_result$jscomp$7;
        case "listing":
        case "pre":
          target$jscomp$0.push(startChunkForTag(type));
          var children$jscomp$8 = null, innerHTML$jscomp$7 = null, propKey$jscomp$10;
          for (propKey$jscomp$10 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$10)) {
              var propValue$jscomp$10 = props[propKey$jscomp$10];
              if (null != propValue$jscomp$10)
                switch (propKey$jscomp$10) {
                  case "children":
                    children$jscomp$8 = propValue$jscomp$10;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$7 = propValue$jscomp$10;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$10,
                      propValue$jscomp$10
                    );
                }
            }
          target$jscomp$0.push(">");
          if (null != innerHTML$jscomp$7) {
            if (null != children$jscomp$8)
              throw Error(
                "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
              );
            if ("object" !== typeof innerHTML$jscomp$7 || !("__html" in innerHTML$jscomp$7))
              throw Error(
                "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
              );
            var html = innerHTML$jscomp$7.__html;
            null !== html && void 0 !== html && ("string" === typeof html && 0 < html.length && "\n" === html[0] ? target$jscomp$0.push("\n", html) : target$jscomp$0.push("" + html));
          }
          "string" === typeof children$jscomp$8 && "\n" === children$jscomp$8[0] && target$jscomp$0.push("\n");
          return children$jscomp$8;
        case "img":
          var src = props.src, srcSet = props.srcSet;
          if (!("lazy" === props.loading || !src && !srcSet || "string" !== typeof src && null != src || "string" !== typeof srcSet && null != srcSet) && "low" !== props.fetchPriority && false === !!(formatContext.tagScope & 3) && ("string" !== typeof src || ":" !== src[4] || "d" !== src[0] && "D" !== src[0] || "a" !== src[1] && "A" !== src[1] || "t" !== src[2] && "T" !== src[2] || "a" !== src[3] && "A" !== src[3]) && ("string" !== typeof srcSet || ":" !== srcSet[4] || "d" !== srcSet[0] && "D" !== srcSet[0] || "a" !== srcSet[1] && "A" !== srcSet[1] || "t" !== srcSet[2] && "T" !== srcSet[2] || "a" !== srcSet[3] && "A" !== srcSet[3])) {
            var sizes2 = "string" === typeof props.sizes ? props.sizes : void 0, key$jscomp$0 = srcSet ? srcSet + "\n" + (sizes2 || "") : src, promotablePreloads = renderState.preloads.images, resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);
            if (resource$jscomp$1) {
              if ("high" === props.fetchPriority || 10 > renderState.highImagePreloads.size)
                promotablePreloads.delete(key$jscomp$0), renderState.highImagePreloads.add(resource$jscomp$1);
            } else if (!resumableState.imageResources.hasOwnProperty(key$jscomp$0)) {
              resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;
              var input = props.crossOrigin;
              var JSCompiler_inline_result$jscomp$8 = "string" === typeof input ? "use-credentials" === input ? input : "" : void 0;
              var headers = renderState.headers, header;
              headers && 0 < headers.remainingCapacity && "string" !== typeof props.srcSet && ("high" === props.fetchPriority || 500 > headers.highImagePreloads.length) && (header = getPreloadAsHeader(src, "image", {
                imageSrcSet: props.srcSet,
                imageSizes: props.sizes,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                nonce: props.nonce,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.refererPolicy
              }), 0 <= (headers.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS, headers.highImagePreloads && (headers.highImagePreloads += ", "), headers.highImagePreloads += header) : (resource$jscomp$1 = [], pushLinkImpl(resource$jscomp$1, {
                rel: "preload",
                as: "image",
                href: srcSet ? void 0 : src,
                imageSrcSet: srcSet,
                imageSizes: sizes2,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.referrerPolicy
              }), "high" === props.fetchPriority || 10 > renderState.highImagePreloads.size ? renderState.highImagePreloads.add(resource$jscomp$1) : (renderState.bulkPreloads.add(resource$jscomp$1), promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
            }
          }
          return pushSelfClosing(target$jscomp$0, props, "img");
        case "base":
        case "area":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "keygen":
        case "param":
        case "source":
        case "track":
        case "wbr":
          return pushSelfClosing(target$jscomp$0, props, type);
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          break;
        case "head":
          if (2 > formatContext.insertionMode) {
            var preamble = preambleState || renderState.preamble;
            if (preamble.headChunks)
              throw Error("The `<head>` tag may only be rendered once.");
            preamble.headChunks = [];
            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
              preamble.headChunks,
              props,
              "head"
            );
          } else
            JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "head"
            );
          return JSCompiler_inline_result$jscomp$9;
        case "body":
          if (2 > formatContext.insertionMode) {
            var preamble$jscomp$0 = preambleState || renderState.preamble;
            if (preamble$jscomp$0.bodyChunks)
              throw Error("The `<body>` tag may only be rendered once.");
            preamble$jscomp$0.bodyChunks = [];
            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
              preamble$jscomp$0.bodyChunks,
              props,
              "body"
            );
          } else
            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "body"
            );
          return JSCompiler_inline_result$jscomp$10;
        case "html":
          if (0 === formatContext.insertionMode) {
            var preamble$jscomp$1 = preambleState || renderState.preamble;
            if (preamble$jscomp$1.htmlChunks)
              throw Error("The `<html>` tag may only be rendered once.");
            preamble$jscomp$1.htmlChunks = [""];
            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
              preamble$jscomp$1.htmlChunks,
              props,
              "html"
            );
          } else
            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "html"
            );
          return JSCompiler_inline_result$jscomp$11;
        default:
          if (-1 !== type.indexOf("-")) {
            target$jscomp$0.push(startChunkForTag(type));
            var children$jscomp$9 = null, innerHTML$jscomp$8 = null, propKey$jscomp$11;
            for (propKey$jscomp$11 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$11)) {
                var propValue$jscomp$11 = props[propKey$jscomp$11];
                if (null != propValue$jscomp$11) {
                  var attributeName = propKey$jscomp$11;
                  switch (propKey$jscomp$11) {
                    case "children":
                      children$jscomp$9 = propValue$jscomp$11;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$8 = propValue$jscomp$11;
                      break;
                    case "style":
                      pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);
                      break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                    case "ref":
                      break;
                    case "className":
                      attributeName = "class";
                    default:
                      if (isAttributeNameSafe(propKey$jscomp$11) && "function" !== typeof propValue$jscomp$11 && "symbol" !== typeof propValue$jscomp$11 && false !== propValue$jscomp$11) {
                        if (true === propValue$jscomp$11) propValue$jscomp$11 = "";
                        else if ("object" === typeof propValue$jscomp$11) continue;
                        target$jscomp$0.push(
                          " ",
                          attributeName,
                          '="',
                          escapeTextForBrowser(propValue$jscomp$11),
                          '"'
                        );
                      }
                  }
                }
              }
            target$jscomp$0.push(">");
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
            return children$jscomp$9;
          }
      }
      return pushStartGenericElement(target$jscomp$0, props, type);
    }
    var endTagCache = /* @__PURE__ */ new Map();
    function endChunkForTag(tag) {
      var chunk2 = endTagCache.get(tag);
      void 0 === chunk2 && (chunk2 = "</" + tag + ">", endTagCache.set(tag, chunk2));
      return chunk2;
    }
    function hoistPreambleState(renderState, preambleState) {
      renderState = renderState.preamble;
      null === renderState.htmlChunks && preambleState.htmlChunks && (renderState.htmlChunks = preambleState.htmlChunks, preambleState.contribution |= 1);
      null === renderState.headChunks && preambleState.headChunks && (renderState.headChunks = preambleState.headChunks, preambleState.contribution |= 4);
      null === renderState.bodyChunks && preambleState.bodyChunks && (renderState.bodyChunks = preambleState.bodyChunks, preambleState.contribution |= 2);
    }
    function writeBootstrap(destination, renderState) {
      renderState = renderState.bootstrapChunks;
      for (var i11 = 0; i11 < renderState.length - 1; i11++)
        destination.push(renderState[i11]);
      return i11 < renderState.length ? (i11 = renderState[i11], renderState.length = 0, destination.push(i11)) : true;
    }
    function writeStartPendingSuspenseBoundary(destination, renderState, id5) {
      destination.push('<!--$?--><template id="');
      if (null === id5)
        throw Error(
          "An ID must have been assigned before we can complete the boundary."
        );
      destination.push(renderState.boundaryPrefix);
      renderState = id5.toString(16);
      destination.push(renderState);
      return destination.push('"></template>');
    }
    function writePreambleContribution(destination, preambleState) {
      preambleState = preambleState.contribution;
      0 !== preambleState && (destination.push("<!--"), destination.push("" + preambleState), destination.push("-->"));
    }
    function writeStartSegment(destination, renderState, formatContext, id5) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return destination.push('<div hidden id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 4:
          return destination.push('<svg aria-hidden="true" style="display:none" id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 5:
          return destination.push('<math aria-hidden="true" style="display:none" id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 6:
          return destination.push('<table hidden id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 7:
          return destination.push('<table hidden><tbody id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 8:
          return destination.push('<table hidden><tr id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 9:
          return destination.push('<table hidden><colgroup id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function writeEndSegment(destination, formatContext) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return destination.push("</div>");
        case 4:
          return destination.push("</svg>");
        case 5:
          return destination.push("</math>");
        case 6:
          return destination.push("</table>");
        case 7:
          return destination.push("</tbody></table>");
        case 8:
          return destination.push("</tr></table>");
        case 9:
          return destination.push("</colgroup></table>");
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var regexForJSStringsInInstructionScripts = /[<\u2028\u2029]/g;
    function escapeJSStringsForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInInstructionScripts,
        function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var regexForJSStringsInScripts = /[&><\u2028\u2029]/g;
    function escapeJSObjectForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInScripts,
        function(match) {
          switch (match) {
            case "&":
              return "\\u0026";
            case ">":
              return "\\u003e";
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var currentlyRenderingBoundaryHasStylesToHoist = false;
    var destinationHasCapacity = true;
    function flushStyleTagsLateForBoundary(styleQueue) {
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs, i11 = 0;
      if (hrefs.length) {
        this.push('<style media="not all" data-precedence="');
        this.push(styleQueue.precedence);
        for (this.push('" data-href="'); i11 < hrefs.length - 1; i11++)
          this.push(hrefs[i11]), this.push(" ");
        this.push(hrefs[i11]);
        this.push('">');
        for (i11 = 0; i11 < rules.length; i11++) this.push(rules[i11]);
        destinationHasCapacity = this.push("</style>");
        currentlyRenderingBoundaryHasStylesToHoist = true;
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function hasStylesToHoist(stylesheet) {
      return 2 !== stylesheet.state ? currentlyRenderingBoundaryHasStylesToHoist = true : false;
    }
    function writeHoistablesForBoundary(destination, hoistableState, renderState) {
      currentlyRenderingBoundaryHasStylesToHoist = false;
      destinationHasCapacity = true;
      hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);
      hoistableState.stylesheets.forEach(hasStylesToHoist);
      currentlyRenderingBoundaryHasStylesToHoist && (renderState.stylesToHoist = true);
      return destinationHasCapacity;
    }
    function flushResource(resource) {
      for (var i11 = 0; i11 < resource.length; i11++) this.push(resource[i11]);
      resource.length = 0;
    }
    var stylesheetFlushingQueue = [];
    function flushStyleInPreamble(stylesheet) {
      pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);
      for (var i11 = 0; i11 < stylesheetFlushingQueue.length; i11++)
        this.push(stylesheetFlushingQueue[i11]);
      stylesheetFlushingQueue.length = 0;
      stylesheet.state = 2;
    }
    function flushStylesInPreamble(styleQueue) {
      var hasStylesheets = 0 < styleQueue.sheets.size;
      styleQueue.sheets.forEach(flushStyleInPreamble, this);
      styleQueue.sheets.clear();
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs;
      if (!hasStylesheets || hrefs.length) {
        this.push('<style data-precedence="');
        this.push(styleQueue.precedence);
        styleQueue = 0;
        if (hrefs.length) {
          for (this.push('" data-href="'); styleQueue < hrefs.length - 1; styleQueue++)
            this.push(hrefs[styleQueue]), this.push(" ");
          this.push(hrefs[styleQueue]);
        }
        this.push('">');
        for (styleQueue = 0; styleQueue < rules.length; styleQueue++)
          this.push(rules[styleQueue]);
        this.push("</style>");
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function preloadLateStyle(stylesheet) {
      if (0 === stylesheet.state) {
        stylesheet.state = 1;
        var props = stylesheet.props;
        pushLinkImpl(stylesheetFlushingQueue, {
          rel: "preload",
          as: "style",
          href: stylesheet.props.href,
          crossOrigin: props.crossOrigin,
          fetchPriority: props.fetchPriority,
          integrity: props.integrity,
          media: props.media,
          hrefLang: props.hrefLang,
          referrerPolicy: props.referrerPolicy
        });
        for (stylesheet = 0; stylesheet < stylesheetFlushingQueue.length; stylesheet++)
          this.push(stylesheetFlushingQueue[stylesheet]);
        stylesheetFlushingQueue.length = 0;
      }
    }
    function preloadLateStyles(styleQueue) {
      styleQueue.sheets.forEach(preloadLateStyle, this);
      styleQueue.sheets.clear();
    }
    function writeStyleResourceDependenciesInJS(destination, hoistableState) {
      destination.push("[");
      var nextArrayOpenBrackChunk = "[";
      hoistableState.stylesheets.forEach(function(resource) {
        if (2 !== resource.state)
          if (3 === resource.state)
            destination.push(nextArrayOpenBrackChunk), resource = escapeJSObjectForInstructionScripts(
              "" + resource.props.href
            ), destination.push(resource), destination.push("]"), nextArrayOpenBrackChunk = ",[";
          else {
            destination.push(nextArrayOpenBrackChunk);
            var precedence = resource.props["data-precedence"], props = resource.props, coercedHref = sanitizeURL("" + resource.props.href);
            coercedHref = escapeJSObjectForInstructionScripts(coercedHref);
            destination.push(coercedHref);
            precedence = "" + precedence;
            destination.push(",");
            precedence = escapeJSObjectForInstructionScripts(precedence);
            destination.push(precedence);
            for (var propKey in props)
              if (hasOwnProperty2.call(props, propKey) && (precedence = props[propKey], null != precedence))
                switch (propKey) {
                  case "href":
                  case "rel":
                  case "precedence":
                  case "data-precedence":
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  default:
                    writeStyleResourceAttributeInJS(
                      destination,
                      propKey,
                      precedence
                    );
                }
            destination.push("]");
            nextArrayOpenBrackChunk = ",[";
            resource.state = 3;
          }
      });
      destination.push("]");
    }
    function writeStyleResourceAttributeInJS(destination, name2, value) {
      var attributeName = name2.toLowerCase();
      switch (typeof value) {
        case "function":
        case "symbol":
          return;
      }
      switch (name2) {
        case "innerHTML":
        case "dangerouslySetInnerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "style":
        case "ref":
          return;
        case "className":
          attributeName = "class";
          name2 = "" + value;
          break;
        case "hidden":
          if (false === value) return;
          name2 = "";
          break;
        case "src":
        case "href":
          value = sanitizeURL(value);
          name2 = "" + value;
          break;
        default:
          if (2 < name2.length && ("o" === name2[0] || "O" === name2[0]) && ("n" === name2[1] || "N" === name2[1]) || !isAttributeNameSafe(name2))
            return;
          name2 = "" + value;
      }
      destination.push(",");
      attributeName = escapeJSObjectForInstructionScripts(attributeName);
      destination.push(attributeName);
      destination.push(",");
      attributeName = escapeJSObjectForInstructionScripts(name2);
      destination.push(attributeName);
    }
    function createHoistableState() {
      return { styles: /* @__PURE__ */ new Set(), stylesheets: /* @__PURE__ */ new Set() };
    }
    function prefetchDNS(href) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          if (!resumableState.dnsResources.hasOwnProperty(href)) {
            resumableState.dnsResources[href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity)
              JSCompiler_temp = (header = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=dns-prefetch", 0 <= (resumableState.remainingCapacity -= header.length + 2));
            JSCompiler_temp ? (renderState.resets.dns[href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (header = [], pushLinkImpl(header, { href, rel: "dns-prefetch" }), renderState.preconnects.add(header));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.D(href);
    }
    function preconnect(href, crossOrigin) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          var bucket = "use-credentials" === crossOrigin ? "credentials" : "string" === typeof crossOrigin ? "anonymous" : "default";
          if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {
            resumableState.connectResources[bucket][href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity) {
              JSCompiler_temp = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=preconnect";
              if ("string" === typeof crossOrigin) {
                var escapedCrossOrigin = ("" + crossOrigin).replace(
                  regexForLinkHeaderQuotedParamValueContext,
                  escapeStringForLinkHeaderQuotedParamValueContextReplacer
                );
                JSCompiler_temp += '; crossorigin="' + escapedCrossOrigin + '"';
              }
              JSCompiler_temp = (header = JSCompiler_temp, 0 <= (resumableState.remainingCapacity -= header.length + 2));
            }
            JSCompiler_temp ? (renderState.resets.connect[bucket][href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (bucket = [], pushLinkImpl(bucket, {
              rel: "preconnect",
              href,
              crossOrigin
            }), renderState.preconnects.add(bucket));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.C(href, crossOrigin);
    }
    function preload(href, as2, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (as2 && href) {
          switch (as2) {
            case "image":
              if (options) {
                var imageSrcSet = options.imageSrcSet;
                var imageSizes = options.imageSizes;
                var fetchPriority = options.fetchPriority;
              }
              var key = imageSrcSet ? imageSrcSet + "\n" + (imageSizes || "") : href;
              if (resumableState.imageResources.hasOwnProperty(key)) return;
              resumableState.imageResources[key] = PRELOAD_NO_CREDS;
              resumableState = renderState.headers;
              var header;
              resumableState && 0 < resumableState.remainingCapacity && "string" !== typeof imageSrcSet && "high" === fetchPriority && (header = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key] = PRELOAD_NO_CREDS, resumableState.highImagePreloads && (resumableState.highImagePreloads += ", "), resumableState.highImagePreloads += header) : (resumableState = [], pushLinkImpl(
                resumableState,
                assign(
                  { rel: "preload", href: imageSrcSet ? void 0 : href, as: as2 },
                  options
                )
              ), "high" === fetchPriority ? renderState.highImagePreloads.add(resumableState) : (renderState.bulkPreloads.add(resumableState), renderState.preloads.images.set(key, resumableState)));
              break;
            case "style":
              if (resumableState.styleResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.styleResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.stylesheets.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              break;
            case "script":
              if (resumableState.scriptResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              renderState.preloads.scripts.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.scriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              break;
            default:
              if (resumableState.unknownResources.hasOwnProperty(as2)) {
                if (imageSrcSet = resumableState.unknownResources[as2], imageSrcSet.hasOwnProperty(href))
                  return;
              } else
                imageSrcSet = {}, resumableState.unknownResources[as2] = imageSrcSet;
              imageSrcSet[href] = PRELOAD_NO_CREDS;
              if ((resumableState = renderState.headers) && 0 < resumableState.remainingCapacity && "font" === as2 && (key = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= key.length + 2)))
                renderState.resets.font[href] = PRELOAD_NO_CREDS, resumableState.fontPreloads && (resumableState.fontPreloads += ", "), resumableState.fontPreloads += key;
              else
                switch (resumableState = [], href = assign({ rel: "preload", href, as: as2 }, options), pushLinkImpl(resumableState, href), as2) {
                  case "font":
                    renderState.fontPreloads.add(resumableState);
                    break;
                  default:
                    renderState.bulkPreloads.add(resumableState);
                }
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.L(href, as2, options);
    }
    function preloadModule(href, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          var as2 = options && "string" === typeof options.as ? options.as : "script";
          switch (as2) {
            case "script":
              if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;
              as2 = [];
              resumableState.moduleScriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.moduleScripts.set(href, as2);
              break;
            default:
              if (resumableState.moduleUnknownResources.hasOwnProperty(as2)) {
                var resources = resumableState.unknownResources[as2];
                if (resources.hasOwnProperty(href)) return;
              } else
                resources = {}, resumableState.moduleUnknownResources[as2] = resources;
              as2 = [];
              resources[href] = PRELOAD_NO_CREDS;
          }
          pushLinkImpl(as2, assign({ rel: "modulepreload", href }, options));
          renderState.bulkPreloads.add(as2);
          enqueueFlush(request);
        }
      } else previousDispatcher.m(href, options);
    }
    function preinitStyle(href, precedence, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          precedence = precedence || "default";
          var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
          null !== resourceState && (resumableState.styleResources[href] = null, styleQueue || (styleQueue = {
            precedence: escapeTextForBrowser(precedence),
            rules: [],
            hrefs: [],
            sheets: /* @__PURE__ */ new Map()
          }, renderState.styles.set(precedence, styleQueue)), precedence = {
            state: 0,
            props: assign(
              { rel: "stylesheet", href, "data-precedence": precedence },
              options
            )
          }, resourceState && (2 === resourceState.length && adoptPreloadCredentials(precedence.props, resourceState), (renderState = renderState.preloads.stylesheets.get(href)) && 0 < renderState.length ? renderState.length = 0 : precedence.state = 1), styleQueue.sheets.set(href, precedence), enqueueFlush(request));
        }
      } else previousDispatcher.S(href, precedence, options);
    }
    function preinitScript(src, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.scriptResources.hasOwnProperty(src) ? resumableState.scriptResources[src] : void 0;
          null !== resourceState && (resumableState.scriptResources[src] = null, options = assign({ src, async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.scripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.X(src, options);
    }
    function preinitModuleScript(src, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.moduleScriptResources.hasOwnProperty(
            src
          ) ? resumableState.moduleScriptResources[src] : void 0;
          null !== resourceState && (resumableState.moduleScriptResources[src] = null, options = assign({ src, type: "module", async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.moduleScripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.M(src, options);
    }
    function adoptPreloadCredentials(target, preloadState) {
      null == target.crossOrigin && (target.crossOrigin = preloadState[0]);
      null == target.integrity && (target.integrity = preloadState[1]);
    }
    function getPreloadAsHeader(href, as2, params) {
      href = ("" + href).replace(
        regexForHrefInLinkHeaderURLContext,
        escapeHrefForLinkHeaderURLContextReplacer
      );
      as2 = ("" + as2).replace(
        regexForLinkHeaderQuotedParamValueContext,
        escapeStringForLinkHeaderQuotedParamValueContextReplacer
      );
      as2 = "<" + href + '>; rel=preload; as="' + as2 + '"';
      for (var paramName in params)
        hasOwnProperty2.call(params, paramName) && (href = params[paramName], "string" === typeof href && (as2 += "; " + paramName.toLowerCase() + '="' + ("" + href).replace(
          regexForLinkHeaderQuotedParamValueContext,
          escapeStringForLinkHeaderQuotedParamValueContextReplacer
        ) + '"'));
      return as2;
    }
    var regexForHrefInLinkHeaderURLContext = /[<>\r\n]/g;
    function escapeHrefForLinkHeaderURLContextReplacer(match) {
      switch (match) {
        case "<":
          return "%3C";
        case ">":
          return "%3E";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    var regexForLinkHeaderQuotedParamValueContext = /["';,\r\n]/g;
    function escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {
      switch (match) {
        case '"':
          return "%22";
        case "'":
          return "%27";
        case ";":
          return "%3B";
        case ",":
          return "%2C";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    function hoistStyleQueueDependency(styleQueue) {
      this.styles.add(styleQueue);
    }
    function hoistStylesheetDependency(stylesheet) {
      this.stylesheets.add(stylesheet);
    }
    function createRenderState(resumableState, generateStaticMarkup) {
      var idPrefix = resumableState.idPrefix, bootstrapChunks = [], bootstrapScriptContent = resumableState.bootstrapScriptContent, bootstrapScripts = resumableState.bootstrapScripts, bootstrapModules = resumableState.bootstrapModules;
      void 0 !== bootstrapScriptContent && bootstrapChunks.push(
        "<script>",
        ("" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer),
        "</script>"
      );
      bootstrapScriptContent = idPrefix + "P:";
      var JSCompiler_object_inline_segmentPrefix_1542 = idPrefix + "S:";
      idPrefix += "B:";
      var JSCompiler_object_inline_preamble_1545 = createPreambleState(), JSCompiler_object_inline_preconnects_1555 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_fontPreloads_1556 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_highImagePreloads_1557 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_styles_1558 = /* @__PURE__ */ new Map(), JSCompiler_object_inline_bootstrapScripts_1559 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_scripts_1560 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_bulkPreloads_1561 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_preloads_1562 = {
        images: /* @__PURE__ */ new Map(),
        stylesheets: /* @__PURE__ */ new Map(),
        scripts: /* @__PURE__ */ new Map(),
        moduleScripts: /* @__PURE__ */ new Map()
      };
      if (void 0 !== bootstrapScripts)
        for (var i11 = 0; i11 < bootstrapScripts.length; i11++) {
          var scriptConfig = bootstrapScripts[i11], src, crossOrigin = void 0, integrity = void 0, props = {
            rel: "preload",
            as: "script",
            fetchPriority: "low",
            nonce: void 0
          };
          "string" === typeof scriptConfig ? props.href = src = scriptConfig : (props.href = src = scriptConfig.src, props.integrity = integrity = "string" === typeof scriptConfig.integrity ? scriptConfig.integrity : void 0, props.crossOrigin = crossOrigin = "string" === typeof scriptConfig || null == scriptConfig.crossOrigin ? void 0 : "use-credentials" === scriptConfig.crossOrigin ? "use-credentials" : "");
          scriptConfig = resumableState;
          var href = src;
          scriptConfig.scriptResources[href] = null;
          scriptConfig.moduleScriptResources[href] = null;
          scriptConfig = [];
          pushLinkImpl(scriptConfig, props);
          JSCompiler_object_inline_bootstrapScripts_1559.add(scriptConfig);
          bootstrapChunks.push('<script src="', escapeTextForBrowser(src));
          "string" === typeof integrity && bootstrapChunks.push('" integrity="', escapeTextForBrowser(integrity));
          "string" === typeof crossOrigin && bootstrapChunks.push(
            '" crossorigin="',
            escapeTextForBrowser(crossOrigin)
          );
          bootstrapChunks.push('" async=""></script>');
        }
      if (void 0 !== bootstrapModules)
        for (bootstrapScripts = 0; bootstrapScripts < bootstrapModules.length; bootstrapScripts++)
          props = bootstrapModules[bootstrapScripts], crossOrigin = src = void 0, integrity = {
            rel: "modulepreload",
            fetchPriority: "low",
            nonce: void 0
          }, "string" === typeof props ? integrity.href = i11 = props : (integrity.href = i11 = props.src, integrity.integrity = crossOrigin = "string" === typeof props.integrity ? props.integrity : void 0, integrity.crossOrigin = src = "string" === typeof props || null == props.crossOrigin ? void 0 : "use-credentials" === props.crossOrigin ? "use-credentials" : ""), props = resumableState, scriptConfig = i11, props.scriptResources[scriptConfig] = null, props.moduleScriptResources[scriptConfig] = null, props = [], pushLinkImpl(props, integrity), JSCompiler_object_inline_bootstrapScripts_1559.add(props), bootstrapChunks.push(
            '<script type="module" src="',
            escapeTextForBrowser(i11)
          ), "string" === typeof crossOrigin && bootstrapChunks.push(
            '" integrity="',
            escapeTextForBrowser(crossOrigin)
          ), "string" === typeof src && bootstrapChunks.push('" crossorigin="', escapeTextForBrowser(src)), bootstrapChunks.push('" async=""></script>');
      return {
        placeholderPrefix: bootstrapScriptContent,
        segmentPrefix: JSCompiler_object_inline_segmentPrefix_1542,
        boundaryPrefix: idPrefix,
        startInlineScript: "<script>",
        preamble: JSCompiler_object_inline_preamble_1545,
        externalRuntimeScript: null,
        bootstrapChunks,
        importMapChunks: [],
        onHeaders: void 0,
        headers: null,
        resets: {
          font: {},
          dns: {},
          connect: { default: {}, anonymous: {}, credentials: {} },
          image: {},
          style: {}
        },
        charsetChunks: [],
        viewportChunks: [],
        hoistableChunks: [],
        preconnects: JSCompiler_object_inline_preconnects_1555,
        fontPreloads: JSCompiler_object_inline_fontPreloads_1556,
        highImagePreloads: JSCompiler_object_inline_highImagePreloads_1557,
        styles: JSCompiler_object_inline_styles_1558,
        bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1559,
        scripts: JSCompiler_object_inline_scripts_1560,
        bulkPreloads: JSCompiler_object_inline_bulkPreloads_1561,
        preloads: JSCompiler_object_inline_preloads_1562,
        stylesToHoist: false,
        generateStaticMarkup
      };
    }
    function pushTextInstance(target, text3, renderState, textEmbedded) {
      if (renderState.generateStaticMarkup)
        return target.push(escapeTextForBrowser(text3)), false;
      "" === text3 ? target = textEmbedded : (textEmbedded && target.push("<!-- -->"), target.push(escapeTextForBrowser(text3)), target = true);
      return target;
    }
    function pushSegmentFinale(target, renderState, lastPushedText, textEmbedded) {
      renderState.generateStaticMarkup || lastPushedText && textEmbedded && target.push("<!-- -->");
    }
    var bind = Function.prototype.bind;
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (type.$$typeof) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return (type.displayName || "Context") + ".Provider";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
            return type;
          case REACT_MEMO_TYPE:
            return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x3) {
            }
        }
      return null;
    }
    var emptyContextObject = {};
    var currentActiveSnapshot = null;
    function popToNearestCommonAncestor(prev, next) {
      if (prev !== next) {
        prev.context._currentValue2 = prev.parentValue;
        prev = prev.parent;
        var parentNext = next.parent;
        if (null === prev) {
          if (null !== parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
        } else {
          if (null === parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
          popToNearestCommonAncestor(prev, parentNext);
        }
        next.context._currentValue2 = next.value;
      }
    }
    function popAllPrevious(prev) {
      prev.context._currentValue2 = prev.parentValue;
      prev = prev.parent;
      null !== prev && popAllPrevious(prev);
    }
    function pushAllNext(next) {
      var parentNext = next.parent;
      null !== parentNext && pushAllNext(parentNext);
      next.context._currentValue2 = next.value;
    }
    function popPreviousToCommonLevel(prev, next) {
      prev.context._currentValue2 = prev.parentValue;
      prev = prev.parent;
      if (null === prev)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : popPreviousToCommonLevel(prev, next);
    }
    function popNextToCommonLevel(prev, next) {
      var parentNext = next.parent;
      if (null === parentNext)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext);
      next.context._currentValue2 = next.value;
    }
    function switchContext(newSnapshot) {
      var prev = currentActiveSnapshot;
      prev !== newSnapshot && (null === prev ? pushAllNext(newSnapshot) : null === newSnapshot ? popAllPrevious(prev) : prev.depth === newSnapshot.depth ? popToNearestCommonAncestor(prev, newSnapshot) : prev.depth > newSnapshot.depth ? popPreviousToCommonLevel(prev, newSnapshot) : popNextToCommonLevel(prev, newSnapshot), currentActiveSnapshot = newSnapshot);
    }
    var classComponentUpdater = {
      enqueueSetState: function(inst, payload) {
        inst = inst._reactInternals;
        null !== inst.queue && inst.queue.push(payload);
      },
      enqueueReplaceState: function(inst, payload) {
        inst = inst._reactInternals;
        inst.replace = true;
        inst.queue = [payload];
      },
      enqueueForceUpdate: function() {
      }
    };
    var emptyTreeContext = { id: 1, overflow: "" };
    function pushTreeContext(baseContext, totalChildren, index) {
      var baseIdWithLeadingBit = baseContext.id;
      baseContext = baseContext.overflow;
      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
      baseIdWithLeadingBit &= ~(1 << baseLength);
      index += 1;
      var length = 32 - clz32(totalChildren) + baseLength;
      if (30 < length) {
        var numberOfOverflowBits = baseLength - baseLength % 5;
        length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
        baseIdWithLeadingBit >>= numberOfOverflowBits;
        baseLength -= numberOfOverflowBits;
        return {
          id: 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit,
          overflow: length + baseContext
        };
      }
      return {
        id: 1 << length | index << baseLength | baseIdWithLeadingBit,
        overflow: baseContext
      };
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x3) {
      x3 >>>= 0;
      return 0 === x3 ? 32 : 31 - (log(x3) / LN2 | 0) | 0;
    }
    var SuspenseException = Error(
      "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."
    );
    function noop$2() {
    }
    function trackUsedThenable(thenableState2, thenable, index) {
      index = thenableState2[index];
      void 0 === index ? thenableState2.push(thenable) : index !== thenable && (thenable.then(noop$2, noop$2), thenable = index);
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          "string" === typeof thenable.status ? thenable.then(noop$2, noop$2) : (thenableState2 = thenable, thenableState2.status = "pending", thenableState2.then(
            function(fulfilledValue) {
              if ("pending" === thenable.status) {
                var fulfilledThenable = thenable;
                fulfilledThenable.status = "fulfilled";
                fulfilledThenable.value = fulfilledValue;
              }
            },
            function(error) {
              if ("pending" === thenable.status) {
                var rejectedThenable = thenable;
                rejectedThenable.status = "rejected";
                rejectedThenable.reason = error;
              }
            }
          ));
          switch (thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
          suspendedThenable = thenable;
          throw SuspenseException;
      }
    }
    var suspendedThenable = null;
    function getSuspendedThenable() {
      if (null === suspendedThenable)
        throw Error(
          "Expected a suspended thenable. This is a bug in React. Please file an issue."
        );
      var thenable = suspendedThenable;
      suspendedThenable = null;
      return thenable;
    }
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var currentlyRenderingComponent = null;
    var currentlyRenderingTask = null;
    var currentlyRenderingRequest = null;
    var currentlyRenderingKeyPath = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var isReRender = false;
    var didScheduleRenderPhaseUpdate = false;
    var localIdCounter = 0;
    var actionStateCounter = 0;
    var actionStateMatchingIndex = -1;
    var thenableIndexCounter = 0;
    var thenableState = null;
    var renderPhaseUpdates = null;
    var numberOfReRenders = 0;
    function resolveCurrentlyRenderingComponent() {
      if (null === currentlyRenderingComponent)
        throw Error(
          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
        );
      return currentlyRenderingComponent;
    }
    function createHook() {
      if (0 < numberOfReRenders)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function createWorkInProgressHook() {
      null === workInProgressHook ? null === firstWorkInProgressHook ? (isReRender = false, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = true, workInProgressHook = firstWorkInProgressHook) : null === workInProgressHook.next ? (isReRender = false, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = true, workInProgressHook = workInProgressHook.next);
      return workInProgressHook;
    }
    function getThenableStateAfterSuspending() {
      var state2 = thenableState;
      thenableState = null;
      return state2;
    }
    function resetHooksState() {
      currentlyRenderingKeyPath = currentlyRenderingRequest = currentlyRenderingTask = currentlyRenderingComponent = null;
      didScheduleRenderPhaseUpdate = false;
      firstWorkInProgressHook = null;
      numberOfReRenders = 0;
      workInProgressHook = renderPhaseUpdates = null;
    }
    function basicStateReducer(state2, action) {
      return "function" === typeof action ? action(state2) : action;
    }
    function useReducer2(reducer2, initialArg, init) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      if (isReRender) {
        var queue = workInProgressHook.queue;
        initialArg = queue.dispatch;
        if (null !== renderPhaseUpdates && (init = renderPhaseUpdates.get(queue), void 0 !== init)) {
          renderPhaseUpdates.delete(queue);
          queue = workInProgressHook.memoizedState;
          do
            queue = reducer2(queue, init.action), init = init.next;
          while (null !== init);
          workInProgressHook.memoizedState = queue;
          return [queue, initialArg];
        }
        return [workInProgressHook.memoizedState, initialArg];
      }
      reducer2 = reducer2 === basicStateReducer ? "function" === typeof initialArg ? initialArg() : initialArg : void 0 !== init ? init(initialArg) : initialArg;
      workInProgressHook.memoizedState = reducer2;
      reducer2 = workInProgressHook.queue = { last: null, dispatch: null };
      reducer2 = reducer2.dispatch = dispatchAction.bind(
        null,
        currentlyRenderingComponent,
        reducer2
      );
      return [workInProgressHook.memoizedState, reducer2];
    }
    function useMemo10(nextCreate, deps) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      if (null !== workInProgressHook) {
        var prevState = workInProgressHook.memoizedState;
        if (null !== prevState && null !== deps) {
          var prevDeps = prevState[1];
          a: if (null === prevDeps) prevDeps = false;
          else {
            for (var i11 = 0; i11 < prevDeps.length && i11 < deps.length; i11++)
              if (!objectIs(deps[i11], prevDeps[i11])) {
                prevDeps = false;
                break a;
              }
            prevDeps = true;
          }
          if (prevDeps) return prevState[0];
        }
      }
      nextCreate = nextCreate();
      workInProgressHook.memoizedState = [nextCreate, deps];
      return nextCreate;
    }
    function dispatchAction(componentIdentity, queue, action) {
      if (25 <= numberOfReRenders)
        throw Error(
          "Too many re-renders. React limits the number of renders to prevent an infinite loop."
        );
      if (componentIdentity === currentlyRenderingComponent)
        if (didScheduleRenderPhaseUpdate = true, componentIdentity = { action, next: null }, null === renderPhaseUpdates && (renderPhaseUpdates = /* @__PURE__ */ new Map()), action = renderPhaseUpdates.get(queue), void 0 === action)
          renderPhaseUpdates.set(queue, componentIdentity);
        else {
          for (queue = action; null !== queue.next; ) queue = queue.next;
          queue.next = componentIdentity;
        }
    }
    function unsupportedStartTransition() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function unsupportedSetOptimisticState() {
      throw Error("Cannot update optimistic state while rendering.");
    }
    function useActionState(action, initialState, permalink) {
      resolveCurrentlyRenderingComponent();
      var actionStateHookIndex = actionStateCounter++, request = currentlyRenderingRequest;
      if ("function" === typeof action.$$FORM_ACTION) {
        var nextPostbackStateKey = null, componentKeyPath = currentlyRenderingKeyPath;
        request = request.formState;
        var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;
        if (null !== request && "function" === typeof isSignatureEqual) {
          var postbackKey = request[1];
          isSignatureEqual.call(action, request[2], request[3]) && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([componentKeyPath, null, actionStateHookIndex]),
            0
          ), postbackKey === nextPostbackStateKey && (actionStateMatchingIndex = actionStateHookIndex, initialState = request[0]));
        }
        var boundAction = action.bind(null, initialState);
        action = function(payload) {
          boundAction(payload);
        };
        "function" === typeof boundAction.$$FORM_ACTION && (action.$$FORM_ACTION = function(prefix3) {
          prefix3 = boundAction.$$FORM_ACTION(prefix3);
          void 0 !== permalink && (permalink += "", prefix3.action = permalink);
          var formData = prefix3.data;
          formData && (null === nextPostbackStateKey && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([
              componentKeyPath,
              null,
              actionStateHookIndex
            ]),
            0
          )), formData.append("$ACTION_KEY", nextPostbackStateKey));
          return prefix3;
        });
        return [initialState, action, false];
      }
      var boundAction$22 = action.bind(null, initialState);
      return [
        initialState,
        function(payload) {
          boundAction$22(payload);
        },
        false
      ];
    }
    function unwrapThenable(thenable) {
      var index = thenableIndexCounter;
      thenableIndexCounter += 1;
      null === thenableState && (thenableState = []);
      return trackUsedThenable(thenableState, thenable, index);
    }
    function unsupportedRefresh() {
      throw Error("Cache cannot be refreshed during server rendering.");
    }
    function noop$1() {
    }
    var HooksDispatcher = {
      readContext: function(context) {
        return context._currentValue2;
      },
      use: function(usable) {
        if (null !== usable && "object" === typeof usable) {
          if ("function" === typeof usable.then) return unwrapThenable(usable);
          if (usable.$$typeof === REACT_CONTEXT_TYPE)
            return usable._currentValue2;
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
      },
      useContext: function(context) {
        resolveCurrentlyRenderingComponent();
        return context._currentValue2;
      },
      useMemo: useMemo10,
      useReducer: useReducer2,
      useRef: function(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
        workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        return null === previousRef ? (initialValue = { current: initialValue }, workInProgressHook.memoizedState = initialValue) : previousRef;
      },
      useState: function(initialState) {
        return useReducer2(basicStateReducer, initialState);
      },
      useInsertionEffect: noop$1,
      useLayoutEffect: noop$1,
      useCallback: function(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      },
      useImperativeHandle: noop$1,
      useEffect: noop$1,
      useDebugValue: noop$1,
      useDeferredValue: function(value, initialValue) {
        resolveCurrentlyRenderingComponent();
        return void 0 !== initialValue ? initialValue : value;
      },
      useTransition: function() {
        resolveCurrentlyRenderingComponent();
        return [false, unsupportedStartTransition];
      },
      useId: function() {
        var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
        var overflow = JSCompiler_inline_result.overflow;
        JSCompiler_inline_result = JSCompiler_inline_result.id;
        JSCompiler_inline_result = (JSCompiler_inline_result & ~(1 << 32 - clz32(JSCompiler_inline_result) - 1)).toString(32) + overflow;
        var resumableState = currentResumableState;
        if (null === resumableState)
          throw Error(
            "Invalid hook call. Hooks can only be called inside of the body of a function component."
          );
        overflow = localIdCounter++;
        JSCompiler_inline_result = "\xAB" + resumableState.idPrefix + "R" + JSCompiler_inline_result;
        0 < overflow && (JSCompiler_inline_result += "H" + overflow.toString(32));
        return JSCompiler_inline_result + "\xBB";
      },
      useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
        if (void 0 === getServerSnapshot)
          throw Error(
            "Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering."
          );
        return getServerSnapshot();
      },
      useOptimistic: function(passthrough) {
        resolveCurrentlyRenderingComponent();
        return [passthrough, unsupportedSetOptimisticState];
      },
      useActionState,
      useFormState: useActionState,
      useHostTransitionStatus: function() {
        resolveCurrentlyRenderingComponent();
        return sharedNotPendingObject;
      },
      useMemoCache: function(size) {
        for (var data = Array(size), i11 = 0; i11 < size; i11++)
          data[i11] = REACT_MEMO_CACHE_SENTINEL;
        return data;
      },
      useCacheRefresh: function() {
        return unsupportedRefresh;
      }
    };
    var currentResumableState = null;
    var DefaultAsyncDispatcher = {
      getCacheForType: function() {
        throw Error("Not implemented.");
      }
    };
    var prefix2;
    var suffix;
    function describeBuiltInComponentFrame(name2) {
      if (void 0 === prefix2)
        try {
          throw Error();
        } catch (x3) {
          var match = x3.stack.trim().match(/\n( *(at )?)/);
          prefix2 = match && match[1] || "";
          suffix = -1 < x3.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x3.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
      return "\n" + prefix2 + name2 + suffix;
    }
    var reentry = false;
    function describeNativeComponentFrame(fn, construct) {
      if (!fn || reentry) return "";
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        var RunInRootFrame = {
          DetermineComponentFrameRoot: function() {
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if ("object" === typeof Reflect && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x3) {
                    var control = x3;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x$24) {
                    control = x$24;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x$25) {
                  control = x$25;
                }
                (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {
                });
              }
            } catch (sample) {
              if (sample && control && "string" === typeof sample.stack)
                return [sample.stack, control.stack];
            }
            return [null, null];
          }
        };
        RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
        var namePropDescriptor = Object.getOwnPropertyDescriptor(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name"
        );
        namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name",
          { value: "DetermineComponentFrameRoot" }
        );
        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
        if (sampleStack && controlStack) {
          var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
          for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot"); )
            RunInRootFrame++;
          for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes(
            "DetermineComponentFrameRoot"
          ); )
            namePropDescriptor++;
          if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length)
            for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]; )
              namePropDescriptor--;
          for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--)
            if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
                do
                  if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
                    var frame3 = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
                    fn.displayName && frame3.includes("<anonymous>") && (frame3 = frame3.replace("<anonymous>", fn.displayName));
                    return frame3;
                  }
                while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
              }
              break;
            }
        }
      } finally {
        reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
      }
      return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
    }
    function describeComponentStackByType(type) {
      if ("string" === typeof type) return describeBuiltInComponentFrame(type);
      if ("function" === typeof type)
        return type.prototype && type.prototype.isReactComponent ? describeNativeComponentFrame(type, true) : describeNativeComponentFrame(type, false);
      if ("object" === typeof type && null !== type) {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeNativeComponentFrame(type.render, false);
          case REACT_MEMO_TYPE:
            return describeNativeComponentFrame(type.type, false);
          case REACT_LAZY_TYPE:
            var lazyComponent = type, payload = lazyComponent._payload;
            lazyComponent = lazyComponent._init;
            try {
              type = lazyComponent(payload);
            } catch (x3) {
              return describeBuiltInComponentFrame("Lazy");
            }
            return describeComponentStackByType(type);
        }
        if ("string" === typeof type.name)
          return payload = type.env, describeBuiltInComponentFrame(
            type.name + (payload ? " [" + payload + "]" : "")
          );
      }
      switch (type) {
        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame("SuspenseList");
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame("Suspense");
      }
      return "";
    }
    function defaultErrorHandler(error) {
      if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
        var JSCompiler_inline_result = error.environmentName;
        error = [error].slice(0);
        "string" === typeof error[0] ? error.splice(
          0,
          1,
          "[%s] " + error[0],
          " " + JSCompiler_inline_result + " "
        ) : error.splice(0, 0, "[%s] ", " " + JSCompiler_inline_result + " ");
        error.unshift(console);
        JSCompiler_inline_result = bind.apply(console.error, error);
        JSCompiler_inline_result();
      } else console.error(error);
      return null;
    }
    function noop3() {
    }
    function RequestInstance(resumableState, renderState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      var abortSet = /* @__PURE__ */ new Set();
      this.destination = null;
      this.flushScheduled = false;
      this.resumableState = resumableState;
      this.renderState = renderState;
      this.rootFormatContext = rootFormatContext;
      this.progressiveChunkSize = void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;
      this.status = 10;
      this.fatalError = null;
      this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
      this.completedPreambleSegments = this.completedRootSegment = null;
      this.abortableTasks = abortSet;
      this.pingedTasks = [];
      this.clientRenderedBoundaries = [];
      this.completedBoundaries = [];
      this.partialBoundaries = [];
      this.trackedPostpones = null;
      this.onError = void 0 === onError2 ? defaultErrorHandler : onError2;
      this.onPostpone = void 0 === onPostpone ? noop3 : onPostpone;
      this.onAllReady = void 0 === onAllReady ? noop3 : onAllReady;
      this.onShellReady = void 0 === onShellReady ? noop3 : onShellReady;
      this.onShellError = void 0 === onShellError ? noop3 : onShellError;
      this.onFatalError = void 0 === onFatalError ? noop3 : onFatalError;
      this.formState = void 0 === formState ? null : formState;
    }
    function createRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      resumableState = new RequestInstance(
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError2,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        formState
      );
      renderState = createPendingSegment(
        resumableState,
        0,
        null,
        rootFormatContext,
        false,
        false
      );
      renderState.parentFlushed = true;
      children = createRenderTask(
        resumableState,
        null,
        children,
        -1,
        null,
        renderState,
        null,
        null,
        resumableState.abortableTasks,
        null,
        rootFormatContext,
        null,
        emptyTreeContext,
        null,
        false
      );
      pushComponentStack(children);
      resumableState.pingedTasks.push(children);
      return resumableState;
    }
    var currentRequest = null;
    function pingTask(request, task) {
      request.pingedTasks.push(task);
      1 === request.pingedTasks.length && (request.flushScheduled = null !== request.destination, performWork(request));
    }
    function createSuspenseBoundary(request, fallbackAbortableTasks, contentPreamble, fallbackPreamble) {
      return {
        status: 0,
        rootSegmentID: -1,
        parentFlushed: false,
        pendingTasks: 0,
        completedSegments: [],
        byteSize: 0,
        fallbackAbortableTasks,
        errorDigest: null,
        contentState: createHoistableState(),
        fallbackState: createHoistableState(),
        contentPreamble,
        fallbackPreamble,
        trackedContentKeyPath: null,
        trackedFallbackNode: null
      };
    }
    function createRenderTask(request, thenableState2, node, childIndex, blockedBoundary, blockedSegment, blockedPreamble, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      var task = {
        replay: null,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment,
        blockedPreamble,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createReplayTask(request, thenableState2, replay, node, childIndex, blockedBoundary, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      replay.pendingTasks++;
      var task = {
        replay,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment: null,
        blockedPreamble: null,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createPendingSegment(request, index, boundary, parentFormatContext, lastPushedText, textEmbedded) {
      return {
        status: 0,
        parentFlushed: false,
        id: -1,
        index,
        chunks: [],
        children: [],
        preambleChildren: [],
        parentFormatContext,
        boundary,
        lastPushedText,
        textEmbedded
      };
    }
    function pushComponentStack(task) {
      var node = task.node;
      if ("object" === typeof node && null !== node)
        switch (node.$$typeof) {
          case REACT_ELEMENT_TYPE:
            task.componentStack = { parent: task.componentStack, type: node.type };
        }
    }
    function getThrownInfo(node$jscomp$0) {
      var errorInfo = {};
      node$jscomp$0 && Object.defineProperty(errorInfo, "componentStack", {
        configurable: true,
        enumerable: true,
        get: function() {
          try {
            var info = "", node = node$jscomp$0;
            do
              info += describeComponentStackByType(node.type), node = node.parent;
            while (node);
            var JSCompiler_inline_result = info;
          } catch (x3) {
            JSCompiler_inline_result = "\nError generating stack: " + x3.message + "\n" + x3.stack;
          }
          Object.defineProperty(errorInfo, "componentStack", {
            value: JSCompiler_inline_result
          });
          return JSCompiler_inline_result;
        }
      });
      return errorInfo;
    }
    function logRecoverableError(request, error, errorInfo) {
      request = request.onError;
      error = request(error, errorInfo);
      if (null == error || "string" === typeof error) return error;
    }
    function fatalError(request, error) {
      var onShellError = request.onShellError, onFatalError = request.onFatalError;
      onShellError(error);
      onFatalError(error);
      null !== request.destination ? (request.status = 14, request.destination.destroy(error)) : (request.status = 13, request.fatalError = error);
    }
    function renderWithHooks(request, task, keyPath, Component3, props, secondArg) {
      var prevThenableState = task.thenableState;
      task.thenableState = null;
      currentlyRenderingComponent = {};
      currentlyRenderingTask = task;
      currentlyRenderingRequest = request;
      currentlyRenderingKeyPath = keyPath;
      actionStateCounter = localIdCounter = 0;
      actionStateMatchingIndex = -1;
      thenableIndexCounter = 0;
      thenableState = prevThenableState;
      for (request = Component3(props, secondArg); didScheduleRenderPhaseUpdate; )
        didScheduleRenderPhaseUpdate = false, actionStateCounter = localIdCounter = 0, actionStateMatchingIndex = -1, thenableIndexCounter = 0, numberOfReRenders += 1, workInProgressHook = null, request = Component3(props, secondArg);
      resetHooksState();
      return request;
    }
    function finishFunctionComponent(request, task, keyPath, children, hasId, actionStateCount, actionStateMatchingIndex2) {
      var didEmitActionStateMarkers = false;
      if (0 !== actionStateCount && null !== request.formState) {
        var segment = task.blockedSegment;
        if (null !== segment) {
          didEmitActionStateMarkers = true;
          segment = segment.chunks;
          for (var i11 = 0; i11 < actionStateCount; i11++)
            i11 === actionStateMatchingIndex2 ? segment.push("<!--F!-->") : segment.push("<!--F-->");
        }
      }
      actionStateCount = task.keyPath;
      task.keyPath = keyPath;
      hasId ? (keyPath = task.treeContext, task.treeContext = pushTreeContext(keyPath, 1, 0), renderNode(request, task, children, -1), task.treeContext = keyPath) : didEmitActionStateMarkers ? renderNode(request, task, children, -1) : renderNodeDestructive(request, task, children, -1);
      task.keyPath = actionStateCount;
    }
    function renderElement(request, task, keyPath, type, props, ref) {
      if ("function" === typeof type)
        if (type.prototype && type.prototype.isReactComponent) {
          var newProps = props;
          if ("ref" in props) {
            newProps = {};
            for (var propName in props)
              "ref" !== propName && (newProps[propName] = props[propName]);
          }
          var defaultProps62 = type.defaultProps;
          if (defaultProps62) {
            newProps === props && (newProps = assign({}, newProps, props));
            for (var propName$33 in defaultProps62)
              void 0 === newProps[propName$33] && (newProps[propName$33] = defaultProps62[propName$33]);
          }
          props = newProps;
          newProps = emptyContextObject;
          defaultProps62 = type.contextType;
          "object" === typeof defaultProps62 && null !== defaultProps62 && (newProps = defaultProps62._currentValue2);
          newProps = new type(props, newProps);
          var initialState = void 0 !== newProps.state ? newProps.state : null;
          newProps.updater = classComponentUpdater;
          newProps.props = props;
          newProps.state = initialState;
          defaultProps62 = { queue: [], replace: false };
          newProps._reactInternals = defaultProps62;
          ref = type.contextType;
          newProps.context = "object" === typeof ref && null !== ref ? ref._currentValue2 : emptyContextObject;
          ref = type.getDerivedStateFromProps;
          "function" === typeof ref && (ref = ref(props, initialState), initialState = null === ref || void 0 === ref ? initialState : assign({}, initialState, ref), newProps.state = initialState);
          if ("function" !== typeof type.getDerivedStateFromProps && "function" !== typeof newProps.getSnapshotBeforeUpdate && ("function" === typeof newProps.UNSAFE_componentWillMount || "function" === typeof newProps.componentWillMount))
            if (type = newProps.state, "function" === typeof newProps.componentWillMount && newProps.componentWillMount(), "function" === typeof newProps.UNSAFE_componentWillMount && newProps.UNSAFE_componentWillMount(), type !== newProps.state && classComponentUpdater.enqueueReplaceState(
              newProps,
              newProps.state,
              null
            ), null !== defaultProps62.queue && 0 < defaultProps62.queue.length)
              if (type = defaultProps62.queue, ref = defaultProps62.replace, defaultProps62.queue = null, defaultProps62.replace = false, ref && 1 === type.length)
                newProps.state = type[0];
              else {
                defaultProps62 = ref ? type[0] : newProps.state;
                initialState = true;
                for (ref = ref ? 1 : 0; ref < type.length; ref++)
                  propName$33 = type[ref], propName$33 = "function" === typeof propName$33 ? propName$33.call(newProps, defaultProps62, props, void 0) : propName$33, null != propName$33 && (initialState ? (initialState = false, defaultProps62 = assign({}, defaultProps62, propName$33)) : assign(defaultProps62, propName$33));
                newProps.state = defaultProps62;
              }
            else defaultProps62.queue = null;
          type = newProps.render();
          if (12 === request.status) throw null;
          props = task.keyPath;
          task.keyPath = keyPath;
          renderNodeDestructive(request, task, type, -1);
          task.keyPath = props;
        } else {
          type = renderWithHooks(request, task, keyPath, type, props, void 0);
          if (12 === request.status) throw null;
          finishFunctionComponent(
            request,
            task,
            keyPath,
            type,
            0 !== localIdCounter,
            actionStateCounter,
            actionStateMatchingIndex
          );
        }
      else if ("string" === typeof type)
        if (newProps = task.blockedSegment, null === newProps)
          newProps = props.children, defaultProps62 = task.formatContext, initialState = task.keyPath, task.formatContext = getChildFormatContext(defaultProps62, type, props), task.keyPath = keyPath, renderNode(request, task, newProps, -1), task.formatContext = defaultProps62, task.keyPath = initialState;
        else {
          ref = pushStartInstance(
            newProps.chunks,
            type,
            props,
            request.resumableState,
            request.renderState,
            task.blockedPreamble,
            task.hoistableState,
            task.formatContext,
            newProps.lastPushedText,
            task.isFallback
          );
          newProps.lastPushedText = false;
          defaultProps62 = task.formatContext;
          initialState = task.keyPath;
          task.keyPath = keyPath;
          3 === (task.formatContext = getChildFormatContext(defaultProps62, type, props)).insertionMode ? (keyPath = createPendingSegment(
            request,
            0,
            null,
            task.formatContext,
            false,
            false
          ), newProps.preambleChildren.push(keyPath), keyPath = createRenderTask(
            request,
            null,
            ref,
            -1,
            task.blockedBoundary,
            keyPath,
            task.blockedPreamble,
            task.hoistableState,
            request.abortableTasks,
            task.keyPath,
            task.formatContext,
            task.context,
            task.treeContext,
            task.componentStack,
            task.isFallback
          ), pushComponentStack(keyPath), request.pingedTasks.push(keyPath)) : renderNode(request, task, ref, -1);
          task.formatContext = defaultProps62;
          task.keyPath = initialState;
          a: {
            task = newProps.chunks;
            request = request.resumableState;
            switch (type) {
              case "title":
              case "style":
              case "script":
              case "area":
              case "base":
              case "br":
              case "col":
              case "embed":
              case "hr":
              case "img":
              case "input":
              case "keygen":
              case "link":
              case "meta":
              case "param":
              case "source":
              case "track":
              case "wbr":
                break a;
              case "body":
                if (1 >= defaultProps62.insertionMode) {
                  request.hasBody = true;
                  break a;
                }
                break;
              case "html":
                if (0 === defaultProps62.insertionMode) {
                  request.hasHtml = true;
                  break a;
                }
                break;
              case "head":
                if (1 >= defaultProps62.insertionMode) break a;
            }
            task.push(endChunkForTag(type));
          }
          newProps.lastPushedText = false;
        }
      else {
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_ACTIVITY_TYPE:
            "hidden" !== props.mode && (type = task.keyPath, task.keyPath = keyPath, renderNodeDestructive(request, task, props.children, -1), task.keyPath = type);
            return;
          case REACT_SUSPENSE_LIST_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_VIEW_TRANSITION_TYPE:
          case REACT_SCOPE_TYPE:
            throw Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE:
            a: if (null !== task.replay) {
              type = task.keyPath;
              task.keyPath = keyPath;
              keyPath = props.children;
              try {
                renderNode(request, task, keyPath, -1);
              } finally {
                task.keyPath = type;
              }
            } else {
              type = task.keyPath;
              var parentBoundary = task.blockedBoundary;
              ref = task.blockedPreamble;
              var parentHoistableState = task.hoistableState;
              propName$33 = task.blockedSegment;
              propName = props.fallback;
              props = props.children;
              var fallbackAbortSet = /* @__PURE__ */ new Set();
              var newBoundary = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                request,
                fallbackAbortSet,
                createPreambleState(),
                createPreambleState()
              ) : createSuspenseBoundary(request, fallbackAbortSet, null, null);
              null !== request.trackedPostpones && (newBoundary.trackedContentKeyPath = keyPath);
              var boundarySegment = createPendingSegment(
                request,
                propName$33.chunks.length,
                newBoundary,
                task.formatContext,
                false,
                false
              );
              propName$33.children.push(boundarySegment);
              propName$33.lastPushedText = false;
              var contentRootSegment = createPendingSegment(
                request,
                0,
                null,
                task.formatContext,
                false,
                false
              );
              contentRootSegment.parentFlushed = true;
              if (null !== request.trackedPostpones) {
                newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
                defaultProps62 = [newProps[1], newProps[2], [], null];
                request.trackedPostpones.workingMap.set(newProps, defaultProps62);
                newBoundary.trackedFallbackNode = defaultProps62;
                task.blockedSegment = boundarySegment;
                task.blockedPreamble = newBoundary.fallbackPreamble;
                task.keyPath = newProps;
                boundarySegment.status = 6;
                try {
                  renderNode(request, task, propName, -1), pushSegmentFinale(
                    boundarySegment.chunks,
                    request.renderState,
                    boundarySegment.lastPushedText,
                    boundarySegment.textEmbedded
                  ), boundarySegment.status = 1;
                } catch (thrownValue) {
                  throw boundarySegment.status = 12 === request.status ? 3 : 4, thrownValue;
                } finally {
                  task.blockedSegment = propName$33, task.blockedPreamble = ref, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  props,
                  -1,
                  newBoundary,
                  contentRootSegment,
                  newBoundary.contentPreamble,
                  newBoundary.contentState,
                  task.abortSet,
                  keyPath,
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  task.isFallback
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              } else {
                task.blockedBoundary = newBoundary;
                task.blockedPreamble = newBoundary.contentPreamble;
                task.hoistableState = newBoundary.contentState;
                task.blockedSegment = contentRootSegment;
                task.keyPath = keyPath;
                contentRootSegment.status = 6;
                try {
                  if (renderNode(request, task, props, -1), pushSegmentFinale(
                    contentRootSegment.chunks,
                    request.renderState,
                    contentRootSegment.lastPushedText,
                    contentRootSegment.textEmbedded
                  ), contentRootSegment.status = 1, queueCompletedSegment(newBoundary, contentRootSegment), 0 === newBoundary.pendingTasks && 0 === newBoundary.status) {
                    newBoundary.status = 1;
                    0 === request.pendingRootTasks && task.blockedPreamble && preparePreamble(request);
                    break a;
                  }
                } catch (thrownValue$28) {
                  newBoundary.status = 4, 12 === request.status ? (contentRootSegment.status = 3, newProps = request.fatalError) : (contentRootSegment.status = 4, newProps = thrownValue$28), defaultProps62 = getThrownInfo(task.componentStack), initialState = logRecoverableError(
                    request,
                    newProps,
                    defaultProps62
                  ), newBoundary.errorDigest = initialState, untrackBoundary(request, newBoundary);
                } finally {
                  task.blockedBoundary = parentBoundary, task.blockedPreamble = ref, task.hoistableState = parentHoistableState, task.blockedSegment = propName$33, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  propName,
                  -1,
                  parentBoundary,
                  boundarySegment,
                  newBoundary.fallbackPreamble,
                  newBoundary.fallbackState,
                  fallbackAbortSet,
                  [keyPath[0], "Suspense Fallback", keyPath[2]],
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  true
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              }
            }
            return;
        }
        if ("object" === typeof type && null !== type)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              if ("ref" in props)
                for (newBoundary in newProps = {}, props)
                  "ref" !== newBoundary && (newProps[newBoundary] = props[newBoundary]);
              else newProps = props;
              type = renderWithHooks(
                request,
                task,
                keyPath,
                type.render,
                newProps,
                ref
              );
              finishFunctionComponent(
                request,
                task,
                keyPath,
                type,
                0 !== localIdCounter,
                actionStateCounter,
                actionStateMatchingIndex
              );
              return;
            case REACT_MEMO_TYPE:
              renderElement(request, task, keyPath, type.type, props, ref);
              return;
            case REACT_PROVIDER_TYPE:
            case REACT_CONTEXT_TYPE:
              defaultProps62 = props.children;
              newProps = task.keyPath;
              props = props.value;
              initialState = type._currentValue2;
              type._currentValue2 = props;
              ref = currentActiveSnapshot;
              currentActiveSnapshot = type = {
                parent: ref,
                depth: null === ref ? 0 : ref.depth + 1,
                context: type,
                parentValue: initialState,
                value: props
              };
              task.context = type;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, defaultProps62, -1);
              request = currentActiveSnapshot;
              if (null === request)
                throw Error(
                  "Tried to pop a Context at the root of the app. This is a bug in React."
                );
              request.context._currentValue2 = request.parentValue;
              request = currentActiveSnapshot = request.parent;
              task.context = request;
              task.keyPath = newProps;
              return;
            case REACT_CONSUMER_TYPE:
              props = props.children;
              type = props(type._context._currentValue2);
              props = task.keyPath;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, type, -1);
              task.keyPath = props;
              return;
            case REACT_LAZY_TYPE:
              newProps = type._init;
              type = newProps(type._payload);
              if (12 === request.status) throw null;
              renderElement(request, task, keyPath, type, props, ref);
              return;
          }
        throw Error(
          "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((null == type ? type : typeof type) + ".")
        );
      }
    }
    function resumeNode(request, task, segmentId, node, childIndex) {
      var prevReplay = task.replay, blockedBoundary = task.blockedBoundary, resumedSegment = createPendingSegment(
        request,
        0,
        null,
        task.formatContext,
        false,
        false
      );
      resumedSegment.id = segmentId;
      resumedSegment.parentFlushed = true;
      try {
        task.replay = null, task.blockedSegment = resumedSegment, renderNode(request, task, node, childIndex), resumedSegment.status = 1, null === blockedBoundary ? request.completedRootSegment = resumedSegment : (queueCompletedSegment(blockedBoundary, resumedSegment), blockedBoundary.parentFlushed && request.partialBoundaries.push(blockedBoundary));
      } finally {
        task.replay = prevReplay, task.blockedSegment = null;
      }
    }
    function renderNodeDestructive(request, task, node, childIndex) {
      null !== task.replay && "number" === typeof task.replay.slots ? resumeNode(request, task, task.replay.slots, node, childIndex) : (task.node = node, task.childIndex = childIndex, node = task.componentStack, pushComponentStack(task), retryNode(request, task), task.componentStack = node);
    }
    function retryNode(request, task) {
      var node = task.node, childIndex = task.childIndex;
      if (null !== node) {
        if ("object" === typeof node) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = node.type, key = node.key, props = node.props;
              node = props.ref;
              var ref = void 0 !== node ? node : null, name2 = getComponentNameFromType(type), keyOrIndex = null == key ? -1 === childIndex ? 0 : childIndex : key;
              key = [task.keyPath, name2, keyOrIndex];
              if (null !== task.replay)
                a: {
                  var replay = task.replay;
                  childIndex = replay.nodes;
                  for (node = 0; node < childIndex.length; node++) {
                    var node$jscomp$0 = childIndex[node];
                    if (keyOrIndex === node$jscomp$0[1]) {
                      if (4 === node$jscomp$0.length) {
                        if (null !== name2 && name2 !== node$jscomp$0[0])
                          throw Error(
                            "Expected the resume to render <" + node$jscomp$0[0] + "> in this slot but instead it rendered <" + name2 + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        var childNodes = node$jscomp$0[2];
                        name2 = node$jscomp$0[3];
                        keyOrIndex = task.node;
                        task.replay = {
                          nodes: childNodes,
                          slots: name2,
                          pendingTasks: 1
                        };
                        try {
                          renderElement(request, task, key, type, props, ref);
                          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                            throw Error(
                              "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                            );
                          task.replay.pendingTasks--;
                        } catch (x3) {
                          if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                            throw task.node === keyOrIndex && (task.replay = replay), x3;
                          task.replay.pendingTasks--;
                          props = getThrownInfo(task.componentStack);
                          key = task.blockedBoundary;
                          type = x3;
                          props = logRecoverableError(request, type, props);
                          abortRemainingReplayNodes(
                            request,
                            key,
                            childNodes,
                            name2,
                            type,
                            props
                          );
                        }
                        task.replay = replay;
                      } else {
                        if (type !== REACT_SUSPENSE_TYPE)
                          throw Error(
                            "Expected the resume to render <Suspense> in this slot but instead it rendered <" + (getComponentNameFromType(type) || "Unknown") + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        b: {
                          replay = void 0;
                          type = node$jscomp$0[5];
                          ref = node$jscomp$0[2];
                          name2 = node$jscomp$0[3];
                          keyOrIndex = null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];
                          node$jscomp$0 = null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];
                          var prevKeyPath = task.keyPath, previousReplaySet = task.replay, parentBoundary = task.blockedBoundary, parentHoistableState = task.hoistableState, content4 = props.children, fallback = props.fallback, fallbackAbortSet = /* @__PURE__ */ new Set();
                          props = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            createPreambleState(),
                            createPreambleState()
                          ) : createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            null,
                            null
                          );
                          props.parentFlushed = true;
                          props.rootSegmentID = type;
                          task.blockedBoundary = props;
                          task.hoistableState = props.contentState;
                          task.keyPath = key;
                          task.replay = {
                            nodes: ref,
                            slots: name2,
                            pendingTasks: 1
                          };
                          try {
                            renderNode(request, task, content4, -1);
                            if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                              throw Error(
                                "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                              );
                            task.replay.pendingTasks--;
                            if (0 === props.pendingTasks && 0 === props.status) {
                              props.status = 1;
                              request.completedBoundaries.push(props);
                              break b;
                            }
                          } catch (error) {
                            props.status = 4, childNodes = getThrownInfo(task.componentStack), replay = logRecoverableError(
                              request,
                              error,
                              childNodes
                            ), props.errorDigest = replay, task.replay.pendingTasks--, request.clientRenderedBoundaries.push(props);
                          } finally {
                            task.blockedBoundary = parentBoundary, task.hoistableState = parentHoistableState, task.replay = previousReplaySet, task.keyPath = prevKeyPath;
                          }
                          task = createReplayTask(
                            request,
                            null,
                            {
                              nodes: keyOrIndex,
                              slots: node$jscomp$0,
                              pendingTasks: 0
                            },
                            fallback,
                            -1,
                            parentBoundary,
                            props.fallbackState,
                            fallbackAbortSet,
                            [key[0], "Suspense Fallback", key[2]],
                            task.formatContext,
                            task.context,
                            task.treeContext,
                            task.componentStack,
                            true
                          );
                          pushComponentStack(task);
                          request.pingedTasks.push(task);
                        }
                      }
                      childIndex.splice(node, 1);
                      break a;
                    }
                  }
                }
              else renderElement(request, task, key, type, props, ref);
              return;
            case REACT_PORTAL_TYPE:
              throw Error(
                "Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render."
              );
            case REACT_LAZY_TYPE:
              childNodes = node._init;
              node = childNodes(node._payload);
              if (12 === request.status) throw null;
              renderNodeDestructive(request, task, node, childIndex);
              return;
          }
          if (isArrayImpl(node)) {
            renderChildrenArray(request, task, node, childIndex);
            return;
          }
          null === node || "object" !== typeof node ? childNodes = null : (childNodes = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], childNodes = "function" === typeof childNodes ? childNodes : null);
          if (childNodes && (childNodes = childNodes.call(node))) {
            node = childNodes.next();
            if (!node.done) {
              props = [];
              do
                props.push(node.value), node = childNodes.next();
              while (!node.done);
              renderChildrenArray(request, task, props, childIndex);
            }
            return;
          }
          if ("function" === typeof node.then)
            return task.thenableState = null, renderNodeDestructive(request, task, unwrapThenable(node), childIndex);
          if (node.$$typeof === REACT_CONTEXT_TYPE)
            return renderNodeDestructive(
              request,
              task,
              node._currentValue2,
              childIndex
            );
          childIndex = Object.prototype.toString.call(node);
          throw Error(
            "Objects are not valid as a React child (found: " + ("[object Object]" === childIndex ? "object with keys {" + Object.keys(node).join(", ") + "}" : childIndex) + "). If you meant to render a collection of children, use an array instead."
          );
        }
        if ("string" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            node,
            request.renderState,
            childIndex.lastPushedText
          ));
        else if ("number" === typeof node || "bigint" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            "" + node,
            request.renderState,
            childIndex.lastPushedText
          ));
      }
    }
    function renderChildrenArray(request, task, children, childIndex) {
      var prevKeyPath = task.keyPath;
      if (-1 !== childIndex && (task.keyPath = [task.keyPath, "Fragment", childIndex], null !== task.replay)) {
        for (var replay = task.replay, replayNodes = replay.nodes, j4 = 0; j4 < replayNodes.length; j4++) {
          var node = replayNodes[j4];
          if (node[1] === childIndex) {
            childIndex = node[2];
            node = node[3];
            task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };
            try {
              renderChildrenArray(request, task, children, -1);
              if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                throw Error(
                  "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                );
              task.replay.pendingTasks--;
            } catch (x3) {
              if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                throw x3;
              task.replay.pendingTasks--;
              children = getThrownInfo(task.componentStack);
              var boundary = task.blockedBoundary, error = x3;
              children = logRecoverableError(request, error, children);
              abortRemainingReplayNodes(
                request,
                boundary,
                childIndex,
                node,
                error,
                children
              );
            }
            task.replay = replay;
            replayNodes.splice(j4, 1);
            break;
          }
        }
        task.keyPath = prevKeyPath;
        return;
      }
      replay = task.treeContext;
      replayNodes = children.length;
      if (null !== task.replay && (j4 = task.replay.slots, null !== j4 && "object" === typeof j4)) {
        for (childIndex = 0; childIndex < replayNodes; childIndex++)
          node = children[childIndex], task.treeContext = pushTreeContext(replay, replayNodes, childIndex), boundary = j4[childIndex], "number" === typeof boundary ? (resumeNode(request, task, boundary, node, childIndex), delete j4[childIndex]) : renderNode(request, task, node, childIndex);
        task.treeContext = replay;
        task.keyPath = prevKeyPath;
        return;
      }
      for (j4 = 0; j4 < replayNodes; j4++)
        childIndex = children[j4], task.treeContext = pushTreeContext(replay, replayNodes, j4), renderNode(request, task, childIndex, j4);
      task.treeContext = replay;
      task.keyPath = prevKeyPath;
    }
    function untrackBoundary(request, boundary) {
      request = request.trackedPostpones;
      null !== request && (boundary = boundary.trackedContentKeyPath, null !== boundary && (boundary = request.workingMap.get(boundary), void 0 !== boundary && (boundary.length = 4, boundary[2] = [], boundary[3] = null)));
    }
    function spawnNewSuspendedReplayTask(request, task, thenableState2) {
      return createReplayTask(
        request,
        thenableState2,
        task.replay,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function spawnNewSuspendedRenderTask(request, task, thenableState2) {
      var segment = task.blockedSegment, newSegment = createPendingSegment(
        request,
        segment.chunks.length,
        null,
        task.formatContext,
        segment.lastPushedText,
        true
      );
      segment.children.push(newSegment);
      segment.lastPushedText = false;
      return createRenderTask(
        request,
        thenableState2,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        newSegment,
        task.blockedPreamble,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function renderNode(request, task, node, childIndex) {
      var previousFormatContext = task.formatContext, previousContext = task.context, previousKeyPath = task.keyPath, previousTreeContext = task.treeContext, previousComponentStack = task.componentStack, segment = task.blockedSegment;
      if (null === segment)
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue) {
          if (resetHooksState(), node = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedReplayTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      else {
        var childrenLength = segment.children.length, chunkLength = segment.chunks.length;
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue$48) {
          if (resetHooksState(), segment.children.length = childrenLength, segment.chunks.length = chunkLength, node = thrownValue$48 === SuspenseException ? getSuspendedThenable() : thrownValue$48, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedRenderTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      }
      task.formatContext = previousFormatContext;
      task.context = previousContext;
      task.keyPath = previousKeyPath;
      task.treeContext = previousTreeContext;
      switchContext(previousContext);
      throw node;
    }
    function abortTaskSoft(task) {
      var boundary = task.blockedBoundary;
      task = task.blockedSegment;
      null !== task && (task.status = 3, finishedTask(this, boundary, task));
    }
    function abortRemainingReplayNodes(request$jscomp$0, boundary, nodes, slots, error, errorDigest$jscomp$0) {
      for (var i11 = 0; i11 < nodes.length; i11++) {
        var node = nodes[i11];
        if (4 === node.length)
          abortRemainingReplayNodes(
            request$jscomp$0,
            boundary,
            node[2],
            node[3],
            error,
            errorDigest$jscomp$0
          );
        else {
          node = node[5];
          var request = request$jscomp$0, errorDigest = errorDigest$jscomp$0, resumedBoundary = createSuspenseBoundary(
            request,
            /* @__PURE__ */ new Set(),
            null,
            null
          );
          resumedBoundary.parentFlushed = true;
          resumedBoundary.rootSegmentID = node;
          resumedBoundary.status = 4;
          resumedBoundary.errorDigest = errorDigest;
          resumedBoundary.parentFlushed && request.clientRenderedBoundaries.push(resumedBoundary);
        }
      }
      nodes.length = 0;
      if (null !== slots) {
        if (null === boundary)
          throw Error(
            "We should not have any resumable nodes in the shell. This is a bug in React."
          );
        4 !== boundary.status && (boundary.status = 4, boundary.errorDigest = errorDigest$jscomp$0, boundary.parentFlushed && request$jscomp$0.clientRenderedBoundaries.push(boundary));
        if ("object" === typeof slots) for (var index in slots) delete slots[index];
      }
    }
    function abortTask(task, request, error) {
      var boundary = task.blockedBoundary, segment = task.blockedSegment;
      if (null !== segment) {
        if (6 === segment.status) return;
        segment.status = 3;
      }
      segment = getThrownInfo(task.componentStack);
      if (null === boundary) {
        if (13 !== request.status && 14 !== request.status) {
          boundary = task.replay;
          if (null === boundary) {
            logRecoverableError(request, error, segment);
            fatalError(request, error);
            return;
          }
          boundary.pendingTasks--;
          0 === boundary.pendingTasks && 0 < boundary.nodes.length && (task = logRecoverableError(request, error, segment), abortRemainingReplayNodes(
            request,
            null,
            boundary.nodes,
            boundary.slots,
            error,
            task
          ));
          request.pendingRootTasks--;
          0 === request.pendingRootTasks && completeShell(request);
        }
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (boundary.status = 4, task = logRecoverableError(request, error, segment), boundary.status = 4, boundary.errorDigest = task, untrackBoundary(request, boundary), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary)), boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
          return abortTask(fallbackTask, request, error);
        }), boundary.fallbackAbortableTasks.clear();
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function safelyEmitEarlyPreloads(request, shellComplete) {
      try {
        var renderState = request.renderState, onHeaders = renderState.onHeaders;
        if (onHeaders) {
          var headers = renderState.headers;
          if (headers) {
            renderState.headers = null;
            var linkHeader = headers.preconnects;
            headers.fontPreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.fontPreloads);
            headers.highImagePreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.highImagePreloads);
            if (!shellComplete) {
              var queueIter = renderState.styles.values(), queueStep = queueIter.next();
              b: for (; 0 < headers.remainingCapacity && !queueStep.done; queueStep = queueIter.next())
                for (var sheetIter = queueStep.value.sheets.values(), sheetStep = sheetIter.next(); 0 < headers.remainingCapacity && !sheetStep.done; sheetStep = sheetIter.next()) {
                  var sheet = sheetStep.value, props = sheet.props, key = props.href, props$jscomp$0 = sheet.props, header = getPreloadAsHeader(props$jscomp$0.href, "style", {
                    crossOrigin: props$jscomp$0.crossOrigin,
                    integrity: props$jscomp$0.integrity,
                    nonce: props$jscomp$0.nonce,
                    type: props$jscomp$0.type,
                    fetchPriority: props$jscomp$0.fetchPriority,
                    referrerPolicy: props$jscomp$0.referrerPolicy,
                    media: props$jscomp$0.media
                  });
                  if (0 <= (headers.remainingCapacity -= header.length + 2))
                    renderState.resets.style[key] = PRELOAD_NO_CREDS, linkHeader && (linkHeader += ", "), linkHeader += header, renderState.resets.style[key] = "string" === typeof props.crossOrigin || "string" === typeof props.integrity ? [props.crossOrigin, props.integrity] : PRELOAD_NO_CREDS;
                  else break b;
                }
            }
            linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});
          }
        }
      } catch (error) {
        logRecoverableError(request, error, {});
      }
    }
    function completeShell(request) {
      null === request.trackedPostpones && safelyEmitEarlyPreloads(request, true);
      null === request.trackedPostpones && preparePreamble(request);
      request.onShellError = noop3;
      request = request.onShellReady;
      request();
    }
    function completeAll(request) {
      safelyEmitEarlyPreloads(
        request,
        null === request.trackedPostpones ? true : null === request.completedRootSegment || 5 !== request.completedRootSegment.status
      );
      preparePreamble(request);
      request = request.onAllReady;
      request();
    }
    function queueCompletedSegment(boundary, segment) {
      if (0 === segment.chunks.length && 1 === segment.children.length && null === segment.children[0].boundary && -1 === segment.children[0].id) {
        var childSegment = segment.children[0];
        childSegment.id = segment.id;
        childSegment.parentFlushed = true;
        1 === childSegment.status && queueCompletedSegment(boundary, childSegment);
      } else boundary.completedSegments.push(segment);
    }
    function finishedTask(request, boundary, segment) {
      if (null === boundary) {
        if (null !== segment && segment.parentFlushed) {
          if (null !== request.completedRootSegment)
            throw Error(
              "There can only be one root segment. This is a bug in React."
            );
          request.completedRootSegment = segment;
        }
        request.pendingRootTasks--;
        0 === request.pendingRootTasks && completeShell(request);
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (0 === boundary.pendingTasks ? (0 === boundary.status && (boundary.status = 1), null !== segment && segment.parentFlushed && 1 === segment.status && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), 1 === boundary.status && (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear(), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary.contentPreamble && preparePreamble(request))) : null !== segment && segment.parentFlushed && 1 === segment.status && (queueCompletedSegment(boundary, segment), 1 === boundary.completedSegments.length && boundary.parentFlushed && request.partialBoundaries.push(boundary)));
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function performWork(request$jscomp$2) {
      if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {
        var prevContext = currentActiveSnapshot, prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = HooksDispatcher;
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        var prevRequest = currentRequest;
        currentRequest = request$jscomp$2;
        var prevResumableState = currentResumableState;
        currentResumableState = request$jscomp$2.resumableState;
        try {
          var pingedTasks = request$jscomp$2.pingedTasks, i11;
          for (i11 = 0; i11 < pingedTasks.length; i11++) {
            var task = pingedTasks[i11], request = request$jscomp$2, segment = task.blockedSegment;
            if (null === segment) {
              var request$jscomp$0 = request;
              if (0 !== task.replay.pendingTasks) {
                switchContext(task.context);
                try {
                  "number" === typeof task.replay.slots ? resumeNode(
                    request$jscomp$0,
                    task,
                    task.replay.slots,
                    task.node,
                    task.childIndex
                  ) : retryNode(request$jscomp$0, task);
                  if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                    throw Error(
                      "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                    );
                  task.replay.pendingTasks--;
                  task.abortSet.delete(task);
                  finishedTask(request$jscomp$0, task.blockedBoundary, null);
                } catch (thrownValue) {
                  resetHooksState();
                  var x3 = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue;
                  if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then) {
                    var ping = task.ping;
                    x3.then(ping, ping);
                    task.thenableState = getThenableStateAfterSuspending();
                  } else {
                    task.replay.pendingTasks--;
                    task.abortSet.delete(task);
                    var errorInfo = getThrownInfo(task.componentStack);
                    request = void 0;
                    var request$jscomp$1 = request$jscomp$0, boundary = task.blockedBoundary, error$jscomp$0 = 12 === request$jscomp$0.status ? request$jscomp$0.fatalError : x3, replayNodes = task.replay.nodes, resumeSlots = task.replay.slots;
                    request = logRecoverableError(
                      request$jscomp$1,
                      error$jscomp$0,
                      errorInfo
                    );
                    abortRemainingReplayNodes(
                      request$jscomp$1,
                      boundary,
                      replayNodes,
                      resumeSlots,
                      error$jscomp$0,
                      request
                    );
                    request$jscomp$0.pendingRootTasks--;
                    0 === request$jscomp$0.pendingRootTasks && completeShell(request$jscomp$0);
                    request$jscomp$0.allPendingTasks--;
                    0 === request$jscomp$0.allPendingTasks && completeAll(request$jscomp$0);
                  }
                } finally {
                }
              }
            } else if (request$jscomp$0 = void 0, request$jscomp$1 = segment, 0 === request$jscomp$1.status) {
              request$jscomp$1.status = 6;
              switchContext(task.context);
              var childrenLength = request$jscomp$1.children.length, chunkLength = request$jscomp$1.chunks.length;
              try {
                retryNode(request, task), pushSegmentFinale(
                  request$jscomp$1.chunks,
                  request.renderState,
                  request$jscomp$1.lastPushedText,
                  request$jscomp$1.textEmbedded
                ), task.abortSet.delete(task), request$jscomp$1.status = 1, finishedTask(request, task.blockedBoundary, request$jscomp$1);
              } catch (thrownValue) {
                resetHooksState();
                request$jscomp$1.children.length = childrenLength;
                request$jscomp$1.chunks.length = chunkLength;
                var x$jscomp$0 = thrownValue === SuspenseException ? getSuspendedThenable() : 12 === request.status ? request.fatalError : thrownValue;
                if ("object" === typeof x$jscomp$0 && null !== x$jscomp$0 && "function" === typeof x$jscomp$0.then) {
                  request$jscomp$1.status = 0;
                  task.thenableState = getThenableStateAfterSuspending();
                  var ping$jscomp$0 = task.ping;
                  x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);
                } else {
                  var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);
                  task.abortSet.delete(task);
                  request$jscomp$1.status = 4;
                  var boundary$jscomp$0 = task.blockedBoundary;
                  request$jscomp$0 = logRecoverableError(
                    request,
                    x$jscomp$0,
                    errorInfo$jscomp$0
                  );
                  null === boundary$jscomp$0 ? fatalError(request, x$jscomp$0) : (boundary$jscomp$0.pendingTasks--, 4 !== boundary$jscomp$0.status && (boundary$jscomp$0.status = 4, boundary$jscomp$0.errorDigest = request$jscomp$0, untrackBoundary(request, boundary$jscomp$0), boundary$jscomp$0.parentFlushed && request.clientRenderedBoundaries.push(boundary$jscomp$0), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary$jscomp$0.contentPreamble && preparePreamble(request)));
                  request.allPendingTasks--;
                  0 === request.allPendingTasks && completeAll(request);
                }
              } finally {
              }
            }
          }
          pingedTasks.splice(0, i11);
          null !== request$jscomp$2.destination && flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);
        } catch (error) {
          logRecoverableError(request$jscomp$2, error, {}), fatalError(request$jscomp$2, error);
        } finally {
          currentResumableState = prevResumableState, ReactSharedInternals.H = prevDispatcher, ReactSharedInternals.A = prevAsyncDispatcher, prevDispatcher === HooksDispatcher && switchContext(prevContext), currentRequest = prevRequest;
        }
      }
    }
    function preparePreambleFromSubtree(request, segment, collectedPreambleSegments) {
      segment.preambleChildren.length && collectedPreambleSegments.push(segment.preambleChildren);
      for (var pendingPreambles = false, i11 = 0; i11 < segment.children.length; i11++)
        pendingPreambles = preparePreambleFromSegment(
          request,
          segment.children[i11],
          collectedPreambleSegments
        ) || pendingPreambles;
      return pendingPreambles;
    }
    function preparePreambleFromSegment(request, segment, collectedPreambleSegments) {
      var boundary = segment.boundary;
      if (null === boundary)
        return preparePreambleFromSubtree(
          request,
          segment,
          collectedPreambleSegments
        );
      var preamble = boundary.contentPreamble, fallbackPreamble = boundary.fallbackPreamble;
      if (null === preamble || null === fallbackPreamble) return false;
      switch (boundary.status) {
        case 1:
          hoistPreambleState(request.renderState, preamble);
          segment = boundary.completedSegments[0];
          if (!segment)
            throw Error(
              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
            );
          return preparePreambleFromSubtree(
            request,
            segment,
            collectedPreambleSegments
          );
        case 5:
          if (null !== request.trackedPostpones) return true;
        case 4:
          if (1 === segment.status)
            return hoistPreambleState(request.renderState, fallbackPreamble), preparePreambleFromSubtree(
              request,
              segment,
              collectedPreambleSegments
            );
        default:
          return true;
      }
    }
    function preparePreamble(request) {
      if (request.completedRootSegment && null === request.completedPreambleSegments) {
        var collectedPreambleSegments = [], hasPendingPreambles = preparePreambleFromSegment(
          request,
          request.completedRootSegment,
          collectedPreambleSegments
        ), preamble = request.renderState.preamble;
        if (false === hasPendingPreambles || preamble.headChunks && preamble.bodyChunks)
          request.completedPreambleSegments = collectedPreambleSegments;
      }
    }
    function flushSubtree(request, destination, segment, hoistableState) {
      segment.parentFlushed = true;
      switch (segment.status) {
        case 0:
          segment.id = request.nextSegmentId++;
        case 5:
          return hoistableState = segment.id, segment.lastPushedText = false, segment.textEmbedded = false, request = request.renderState, destination.push('<template id="'), destination.push(request.placeholderPrefix), request = hoistableState.toString(16), destination.push(request), destination.push('"></template>');
        case 1:
          segment.status = 2;
          var r8 = true, chunks = segment.chunks, chunkIdx = 0;
          segment = segment.children;
          for (var childIdx = 0; childIdx < segment.length; childIdx++) {
            for (r8 = segment[childIdx]; chunkIdx < r8.index; chunkIdx++)
              destination.push(chunks[chunkIdx]);
            r8 = flushSegment(request, destination, r8, hoistableState);
          }
          for (; chunkIdx < chunks.length - 1; chunkIdx++)
            destination.push(chunks[chunkIdx]);
          chunkIdx < chunks.length && (r8 = destination.push(chunks[chunkIdx]));
          return r8;
        default:
          throw Error(
            "Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React."
          );
      }
    }
    function flushSegment(request, destination, segment, hoistableState) {
      var boundary = segment.boundary;
      if (null === boundary)
        return flushSubtree(request, destination, segment, hoistableState);
      boundary.parentFlushed = true;
      if (4 === boundary.status) {
        if (!request.renderState.generateStaticMarkup) {
          var errorDigest = boundary.errorDigest;
          destination.push("<!--$!-->");
          destination.push("<template");
          errorDigest && (destination.push(' data-dgst="'), errorDigest = escapeTextForBrowser(errorDigest), destination.push(errorDigest), destination.push('"'));
          destination.push("></template>");
        }
        flushSubtree(request, destination, segment, hoistableState);
        request.renderState.generateStaticMarkup ? destination = true : ((request = boundary.fallbackPreamble) && writePreambleContribution(destination, request), destination = destination.push("<!--/$-->"));
        return destination;
      }
      if (1 !== boundary.status)
        return 0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++), 0 < boundary.completedSegments.length && request.partialBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), hoistableState && (boundary = boundary.fallbackState, boundary.styles.forEach(hoistStyleQueueDependency, hoistableState), boundary.stylesheets.forEach(
          hoistStylesheetDependency,
          hoistableState
        )), flushSubtree(request, destination, segment, hoistableState), destination.push("<!--/$-->");
      if (boundary.byteSize > request.progressiveChunkSize)
        return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), flushSubtree(request, destination, segment, hoistableState), destination.push("<!--/$-->");
      hoistableState && (segment = boundary.contentState, segment.styles.forEach(hoistStyleQueueDependency, hoistableState), segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
      request.renderState.generateStaticMarkup || destination.push("<!--$-->");
      segment = boundary.completedSegments;
      if (1 !== segment.length)
        throw Error(
          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
        );
      flushSegment(request, destination, segment[0], hoistableState);
      request.renderState.generateStaticMarkup ? destination = true : ((request = boundary.contentPreamble) && writePreambleContribution(destination, request), destination = destination.push("<!--/$-->"));
      return destination;
    }
    function flushSegmentContainer(request, destination, segment, hoistableState) {
      writeStartSegment(
        destination,
        request.renderState,
        segment.parentFormatContext,
        segment.id
      );
      flushSegment(request, destination, segment, hoistableState);
      return writeEndSegment(destination, segment.parentFormatContext);
    }
    function flushCompletedBoundary(request, destination, boundary) {
      for (var completedSegments = boundary.completedSegments, i11 = 0; i11 < completedSegments.length; i11++)
        flushPartiallyCompletedSegment(
          request,
          destination,
          boundary,
          completedSegments[i11]
        );
      completedSegments.length = 0;
      writeHoistablesForBoundary(
        destination,
        boundary.contentState,
        request.renderState
      );
      completedSegments = request.resumableState;
      request = request.renderState;
      i11 = boundary.rootSegmentID;
      boundary = boundary.contentState;
      var requiresStyleInsertion = request.stylesToHoist;
      request.stylesToHoist = false;
      destination.push(request.startInlineScript);
      requiresStyleInsertion ? 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 10, destination.push(
        '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
      )) : 0 === (completedSegments.instructions & 8) ? (completedSegments.instructions |= 8, destination.push(
        '$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
      )) : destination.push('$RR("') : 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 2, destination.push(
        '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("'
      )) : destination.push('$RC("');
      completedSegments = i11.toString(16);
      destination.push(request.boundaryPrefix);
      destination.push(completedSegments);
      destination.push('","');
      destination.push(request.segmentPrefix);
      destination.push(completedSegments);
      requiresStyleInsertion ? (destination.push('",'), writeStyleResourceDependenciesInJS(destination, boundary)) : destination.push('"');
      boundary = destination.push(")</script>");
      return writeBootstrap(destination, request) && boundary;
    }
    function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
      if (2 === segment.status) return true;
      var hoistableState = boundary.contentState, segmentID = segment.id;
      if (-1 === segmentID) {
        if (-1 === (segment.id = boundary.rootSegmentID))
          throw Error(
            "A root segment ID must have been assigned by now. This is a bug in React."
          );
        return flushSegmentContainer(request, destination, segment, hoistableState);
      }
      if (segmentID === boundary.rootSegmentID)
        return flushSegmentContainer(request, destination, segment, hoistableState);
      flushSegmentContainer(request, destination, segment, hoistableState);
      boundary = request.resumableState;
      request = request.renderState;
      destination.push(request.startInlineScript);
      0 === (boundary.instructions & 1) ? (boundary.instructions |= 1, destination.push(
        '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
      )) : destination.push('$RS("');
      destination.push(request.segmentPrefix);
      segmentID = segmentID.toString(16);
      destination.push(segmentID);
      destination.push('","');
      destination.push(request.placeholderPrefix);
      destination.push(segmentID);
      destination = destination.push('")</script>');
      return destination;
    }
    function flushCompletedQueues(request, destination) {
      try {
        if (!(0 < request.pendingRootTasks)) {
          var i11, completedRootSegment = request.completedRootSegment;
          if (null !== completedRootSegment) {
            if (5 === completedRootSegment.status) return;
            var completedPreambleSegments = request.completedPreambleSegments;
            if (null === completedPreambleSegments) return;
            var renderState = request.renderState, preamble = renderState.preamble, htmlChunks = preamble.htmlChunks, headChunks = preamble.headChunks, i$jscomp$0;
            if (htmlChunks) {
              for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
                destination.push(htmlChunks[i$jscomp$0]);
              if (headChunks)
                for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                  destination.push(headChunks[i$jscomp$0]);
              else {
                var chunk2 = startChunkForTag("head");
                destination.push(chunk2);
                destination.push(">");
              }
            } else if (headChunks)
              for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                destination.push(headChunks[i$jscomp$0]);
            var charsetChunks = renderState.charsetChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)
              destination.push(charsetChunks[i$jscomp$0]);
            charsetChunks.length = 0;
            renderState.preconnects.forEach(flushResource, destination);
            renderState.preconnects.clear();
            var viewportChunks = renderState.viewportChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)
              destination.push(viewportChunks[i$jscomp$0]);
            viewportChunks.length = 0;
            renderState.fontPreloads.forEach(flushResource, destination);
            renderState.fontPreloads.clear();
            renderState.highImagePreloads.forEach(flushResource, destination);
            renderState.highImagePreloads.clear();
            renderState.styles.forEach(flushStylesInPreamble, destination);
            var importMapChunks = renderState.importMapChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)
              destination.push(importMapChunks[i$jscomp$0]);
            importMapChunks.length = 0;
            renderState.bootstrapScripts.forEach(flushResource, destination);
            renderState.scripts.forEach(flushResource, destination);
            renderState.scripts.clear();
            renderState.bulkPreloads.forEach(flushResource, destination);
            renderState.bulkPreloads.clear();
            var hoistableChunks = renderState.hoistableChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
              destination.push(hoistableChunks[i$jscomp$0]);
            for (renderState = hoistableChunks.length = 0; renderState < completedPreambleSegments.length; renderState++) {
              var segments = completedPreambleSegments[renderState];
              for (preamble = 0; preamble < segments.length; preamble++)
                flushSegment(request, destination, segments[preamble], null);
            }
            var preamble$jscomp$0 = request.renderState.preamble, headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
            if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
              var chunk$jscomp$0 = endChunkForTag("head");
              destination.push(chunk$jscomp$0);
            }
            var bodyChunks = preamble$jscomp$0.bodyChunks;
            if (bodyChunks)
              for (completedPreambleSegments = 0; completedPreambleSegments < bodyChunks.length; completedPreambleSegments++)
                destination.push(bodyChunks[completedPreambleSegments]);
            flushSegment(request, destination, completedRootSegment, null);
            request.completedRootSegment = null;
            writeBootstrap(destination, request.renderState);
          }
          var renderState$jscomp$0 = request.renderState;
          completedRootSegment = 0;
          var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;
          for (completedRootSegment = 0; completedRootSegment < viewportChunks$jscomp$0.length; completedRootSegment++)
            destination.push(viewportChunks$jscomp$0[completedRootSegment]);
          viewportChunks$jscomp$0.length = 0;
          renderState$jscomp$0.preconnects.forEach(flushResource, destination);
          renderState$jscomp$0.preconnects.clear();
          renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.fontPreloads.clear();
          renderState$jscomp$0.highImagePreloads.forEach(
            flushResource,
            destination
          );
          renderState$jscomp$0.highImagePreloads.clear();
          renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);
          renderState$jscomp$0.scripts.forEach(flushResource, destination);
          renderState$jscomp$0.scripts.clear();
          renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.bulkPreloads.clear();
          var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;
          for (completedRootSegment = 0; completedRootSegment < hoistableChunks$jscomp$0.length; completedRootSegment++)
            destination.push(hoistableChunks$jscomp$0[completedRootSegment]);
          hoistableChunks$jscomp$0.length = 0;
          var clientRenderedBoundaries = request.clientRenderedBoundaries;
          for (i11 = 0; i11 < clientRenderedBoundaries.length; i11++) {
            var boundary = clientRenderedBoundaries[i11];
            renderState$jscomp$0 = destination;
            var resumableState = request.resumableState, renderState$jscomp$1 = request.renderState, id5 = boundary.rootSegmentID, errorDigest = boundary.errorDigest;
            renderState$jscomp$0.push(renderState$jscomp$1.startInlineScript);
            0 === (resumableState.instructions & 4) ? (resumableState.instructions |= 4, renderState$jscomp$0.push(
              '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX("'
            )) : renderState$jscomp$0.push('$RX("');
            renderState$jscomp$0.push(renderState$jscomp$1.boundaryPrefix);
            var chunk$jscomp$1 = id5.toString(16);
            renderState$jscomp$0.push(chunk$jscomp$1);
            renderState$jscomp$0.push('"');
            if (errorDigest) {
              renderState$jscomp$0.push(",");
              var chunk$jscomp$2 = escapeJSStringsForInstructionScripts(
                errorDigest || ""
              );
              renderState$jscomp$0.push(chunk$jscomp$2);
            }
            var JSCompiler_inline_result = renderState$jscomp$0.push(")</script>");
            if (!JSCompiler_inline_result) {
              request.destination = null;
              i11++;
              clientRenderedBoundaries.splice(0, i11);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i11);
          var completedBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < completedBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, completedBoundaries[i11])) {
              request.destination = null;
              i11++;
              completedBoundaries.splice(0, i11);
              return;
            }
          completedBoundaries.splice(0, i11);
          var partialBoundaries = request.partialBoundaries;
          for (i11 = 0; i11 < partialBoundaries.length; i11++) {
            var boundary$51 = partialBoundaries[i11];
            a: {
              clientRenderedBoundaries = request;
              boundary = destination;
              var completedSegments = boundary$51.completedSegments;
              for (JSCompiler_inline_result = 0; JSCompiler_inline_result < completedSegments.length; JSCompiler_inline_result++)
                if (!flushPartiallyCompletedSegment(
                  clientRenderedBoundaries,
                  boundary,
                  boundary$51,
                  completedSegments[JSCompiler_inline_result]
                )) {
                  JSCompiler_inline_result++;
                  completedSegments.splice(0, JSCompiler_inline_result);
                  var JSCompiler_inline_result$jscomp$0 = false;
                  break a;
                }
              completedSegments.splice(0, JSCompiler_inline_result);
              JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(
                boundary,
                boundary$51.contentState,
                clientRenderedBoundaries.renderState
              );
            }
            if (!JSCompiler_inline_result$jscomp$0) {
              request.destination = null;
              i11++;
              partialBoundaries.splice(0, i11);
              return;
            }
          }
          partialBoundaries.splice(0, i11);
          var largeBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < largeBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, largeBoundaries[i11])) {
              request.destination = null;
              i11++;
              largeBoundaries.splice(0, i11);
              return;
            }
          largeBoundaries.splice(0, i11);
        }
      } finally {
        0 === request.allPendingTasks && 0 === request.pingedTasks.length && 0 === request.clientRenderedBoundaries.length && 0 === request.completedBoundaries.length && (request.flushScheduled = false, i11 = request.resumableState, i11.hasBody && (partialBoundaries = endChunkForTag("body"), destination.push(partialBoundaries)), i11.hasHtml && (i11 = endChunkForTag("html"), destination.push(i11)), request.status = 14, destination.push(null), request.destination = null);
      }
    }
    function enqueueFlush(request) {
      if (false === request.flushScheduled && 0 === request.pingedTasks.length && null !== request.destination) {
        request.flushScheduled = true;
        var destination = request.destination;
        destination ? flushCompletedQueues(request, destination) : request.flushScheduled = false;
      }
    }
    function startFlowing(request, destination) {
      if (13 === request.status)
        request.status = 14, destination.destroy(request.fatalError);
      else if (14 !== request.status && null === request.destination) {
        request.destination = destination;
        try {
          flushCompletedQueues(request, destination);
        } catch (error) {
          logRecoverableError(request, error, {}), fatalError(request, error);
        }
      }
    }
    function abort(request, reason) {
      if (11 === request.status || 10 === request.status) request.status = 12;
      try {
        var abortableTasks = request.abortableTasks;
        if (0 < abortableTasks.size) {
          var error = void 0 === reason ? Error("The render was aborted by the server without a reason.") : "object" === typeof reason && null !== reason && "function" === typeof reason.then ? Error("The render was aborted by the server with a promise.") : reason;
          request.fatalError = error;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, error);
          });
          abortableTasks.clear();
        }
        null !== request.destination && flushCompletedQueues(request, request.destination);
      } catch (error$53) {
        logRecoverableError(request, error$53, {}), fatalError(request, error$53);
      }
    }
    function onError() {
    }
    function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
      var didFatal = false, fatalError2 = null, result = "", readyToStream = false;
      options = createResumableState(options ? options.identifierPrefix : void 0);
      children = createRequest(
        children,
        options,
        createRenderState(options, generateStaticMarkup),
        createFormatContext(0, null, 0),
        Infinity,
        onError,
        void 0,
        function() {
          readyToStream = true;
        },
        void 0,
        void 0,
        void 0
      );
      children.flushScheduled = null !== children.destination;
      performWork(children);
      10 === children.status && (children.status = 11);
      null === children.trackedPostpones && safelyEmitEarlyPreloads(children, 0 === children.pendingRootTasks);
      abort(children, abortReason);
      startFlowing(children, {
        push: function(chunk2) {
          null !== chunk2 && (result += chunk2);
          return true;
        },
        destroy: function(error) {
          didFatal = true;
          fatalError2 = error;
        }
      });
      if (didFatal && fatalError2 !== abortReason) throw fatalError2;
      if (!readyToStream)
        throw Error(
          "A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."
        );
      return result;
    }
    exports.renderToStaticMarkup = function(children, options) {
      return renderToStringImpl(
        children,
        options,
        true,
        'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
      );
    };
    exports.renderToString = function(children, options) {
      return renderToStringImpl(
        children,
        options,
        false,
        'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
      );
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server.node.production.js
var require_react_dom_server_node_production = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server.node.production.js"(exports) {
    "use strict";
    var util2 = __require("util");
    var crypto = __require("crypto");
    var async_hooks = __require("async_hooks");
    var React8 = require_react();
    var ReactDOM2 = require_react_dom();
    var stream = __require("stream");
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    var REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var isArrayImpl = Array.isArray;
    var scheduleMicrotask = queueMicrotask;
    function flushBuffered(destination) {
      "function" === typeof destination.flush && destination.flush();
    }
    var currentView = null;
    var writtenBytes = 0;
    var destinationHasCapacity$1 = true;
    function writeChunk(destination, chunk2) {
      if ("string" === typeof chunk2) {
        if (0 !== chunk2.length)
          if (2048 < 3 * chunk2.length)
            0 < writtenBytes && (writeToDestination(
              destination,
              currentView.subarray(0, writtenBytes)
            ), currentView = new Uint8Array(2048), writtenBytes = 0), writeToDestination(destination, chunk2);
          else {
            var target = currentView;
            0 < writtenBytes && (target = currentView.subarray(writtenBytes));
            target = textEncoder.encodeInto(chunk2, target);
            var read = target.read;
            writtenBytes += target.written;
            read < chunk2.length && (writeToDestination(
              destination,
              currentView.subarray(0, writtenBytes)
            ), currentView = new Uint8Array(2048), writtenBytes = textEncoder.encodeInto(
              chunk2.slice(read),
              currentView
            ).written);
            2048 === writtenBytes && (writeToDestination(destination, currentView), currentView = new Uint8Array(2048), writtenBytes = 0);
          }
      } else
        0 !== chunk2.byteLength && (2048 < chunk2.byteLength ? (0 < writtenBytes && (writeToDestination(
          destination,
          currentView.subarray(0, writtenBytes)
        ), currentView = new Uint8Array(2048), writtenBytes = 0), writeToDestination(destination, chunk2)) : (target = currentView.length - writtenBytes, target < chunk2.byteLength && (0 === target ? writeToDestination(destination, currentView) : (currentView.set(chunk2.subarray(0, target), writtenBytes), writtenBytes += target, writeToDestination(destination, currentView), chunk2 = chunk2.subarray(target)), currentView = new Uint8Array(2048), writtenBytes = 0), currentView.set(chunk2, writtenBytes), writtenBytes += chunk2.byteLength, 2048 === writtenBytes && (writeToDestination(destination, currentView), currentView = new Uint8Array(2048), writtenBytes = 0)));
    }
    function writeToDestination(destination, view) {
      destination = destination.write(view);
      destinationHasCapacity$1 = destinationHasCapacity$1 && destination;
    }
    function writeChunkAndReturn(destination, chunk2) {
      writeChunk(destination, chunk2);
      return destinationHasCapacity$1;
    }
    function completeWriting(destination) {
      currentView && 0 < writtenBytes && destination.write(currentView.subarray(0, writtenBytes));
      currentView = null;
      writtenBytes = 0;
      destinationHasCapacity$1 = true;
    }
    var textEncoder = new util2.TextEncoder();
    function stringToPrecomputedChunk(content4) {
      return textEncoder.encode(content4);
    }
    var assign = Object.assign;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var VALID_ATTRIBUTE_NAME_REGEX = RegExp(
      "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
    );
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty2.call(validatedAttributeNameCache, attributeName))
        return true;
      if (hasOwnProperty2.call(illegalAttributeNameCache, attributeName)) return false;
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
        return validatedAttributeNameCache[attributeName] = true;
      illegalAttributeNameCache[attributeName] = true;
      return false;
    }
    var unitlessNumbers = new Set(
      "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
        " "
      )
    );
    var aliases = /* @__PURE__ */ new Map([
      ["acceptCharset", "accept-charset"],
      ["htmlFor", "for"],
      ["httpEquiv", "http-equiv"],
      ["crossOrigin", "crossorigin"],
      ["accentHeight", "accent-height"],
      ["alignmentBaseline", "alignment-baseline"],
      ["arabicForm", "arabic-form"],
      ["baselineShift", "baseline-shift"],
      ["capHeight", "cap-height"],
      ["clipPath", "clip-path"],
      ["clipRule", "clip-rule"],
      ["colorInterpolation", "color-interpolation"],
      ["colorInterpolationFilters", "color-interpolation-filters"],
      ["colorProfile", "color-profile"],
      ["colorRendering", "color-rendering"],
      ["dominantBaseline", "dominant-baseline"],
      ["enableBackground", "enable-background"],
      ["fillOpacity", "fill-opacity"],
      ["fillRule", "fill-rule"],
      ["floodColor", "flood-color"],
      ["floodOpacity", "flood-opacity"],
      ["fontFamily", "font-family"],
      ["fontSize", "font-size"],
      ["fontSizeAdjust", "font-size-adjust"],
      ["fontStretch", "font-stretch"],
      ["fontStyle", "font-style"],
      ["fontVariant", "font-variant"],
      ["fontWeight", "font-weight"],
      ["glyphName", "glyph-name"],
      ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
      ["glyphOrientationVertical", "glyph-orientation-vertical"],
      ["horizAdvX", "horiz-adv-x"],
      ["horizOriginX", "horiz-origin-x"],
      ["imageRendering", "image-rendering"],
      ["letterSpacing", "letter-spacing"],
      ["lightingColor", "lighting-color"],
      ["markerEnd", "marker-end"],
      ["markerMid", "marker-mid"],
      ["markerStart", "marker-start"],
      ["overlinePosition", "overline-position"],
      ["overlineThickness", "overline-thickness"],
      ["paintOrder", "paint-order"],
      ["panose-1", "panose-1"],
      ["pointerEvents", "pointer-events"],
      ["renderingIntent", "rendering-intent"],
      ["shapeRendering", "shape-rendering"],
      ["stopColor", "stop-color"],
      ["stopOpacity", "stop-opacity"],
      ["strikethroughPosition", "strikethrough-position"],
      ["strikethroughThickness", "strikethrough-thickness"],
      ["strokeDasharray", "stroke-dasharray"],
      ["strokeDashoffset", "stroke-dashoffset"],
      ["strokeLinecap", "stroke-linecap"],
      ["strokeLinejoin", "stroke-linejoin"],
      ["strokeMiterlimit", "stroke-miterlimit"],
      ["strokeOpacity", "stroke-opacity"],
      ["strokeWidth", "stroke-width"],
      ["textAnchor", "text-anchor"],
      ["textDecoration", "text-decoration"],
      ["textRendering", "text-rendering"],
      ["transformOrigin", "transform-origin"],
      ["underlinePosition", "underline-position"],
      ["underlineThickness", "underline-thickness"],
      ["unicodeBidi", "unicode-bidi"],
      ["unicodeRange", "unicode-range"],
      ["unitsPerEm", "units-per-em"],
      ["vAlphabetic", "v-alphabetic"],
      ["vHanging", "v-hanging"],
      ["vIdeographic", "v-ideographic"],
      ["vMathematical", "v-mathematical"],
      ["vectorEffect", "vector-effect"],
      ["vertAdvY", "vert-adv-y"],
      ["vertOriginX", "vert-origin-x"],
      ["vertOriginY", "vert-origin-y"],
      ["wordSpacing", "word-spacing"],
      ["writingMode", "writing-mode"],
      ["xmlnsXlink", "xmlns:xlink"],
      ["xHeight", "x-height"]
    ]);
    var matchHtmlRegExp = /["'&<>]/;
    function escapeTextForBrowser(text3) {
      if ("boolean" === typeof text3 || "number" === typeof text3 || "bigint" === typeof text3)
        return "" + text3;
      text3 = "" + text3;
      var match = matchHtmlRegExp.exec(text3);
      if (match) {
        var html = "", index, lastIndex = 0;
        for (index = match.index; index < text3.length; index++) {
          switch (text3.charCodeAt(index)) {
            case 34:
              match = "&quot;";
              break;
            case 38:
              match = "&amp;";
              break;
            case 39:
              match = "&#x27;";
              break;
            case 60:
              match = "&lt;";
              break;
            case 62:
              match = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += text3.slice(lastIndex, index));
          lastIndex = index + 1;
          html += match;
        }
        text3 = lastIndex !== index ? html + text3.slice(lastIndex, index) : html;
      }
      return text3;
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
    function sanitizeURL(url) {
      return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    var ReactSharedInternals = React8.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var ReactDOMSharedInternals = ReactDOM2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var sharedNotPendingObject = {
      pending: false,
      data: null,
      method: null,
      action: null
    };
    var previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
      f: previousDispatcher.f,
      r: previousDispatcher.r,
      D: prefetchDNS,
      C: preconnect,
      L: preload,
      m: preloadModule,
      X: preinitScript,
      S: preinitStyle,
      M: preinitModuleScript
    };
    var PRELOAD_NO_CREDS = [];
    stringToPrecomputedChunk('"></template>');
    var startInlineScript = stringToPrecomputedChunk("<script>");
    var endInlineScript = stringToPrecomputedChunk("</script>");
    var startScriptSrc = stringToPrecomputedChunk('<script src="');
    var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
    var scriptNonce = stringToPrecomputedChunk('" nonce="');
    var scriptIntegirty = stringToPrecomputedChunk('" integrity="');
    var scriptCrossOrigin = stringToPrecomputedChunk('" crossorigin="');
    var endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
    var scriptRegex = /(<\/|<)(s)(cript)/gi;
    function scriptReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\u0073" : "\\u0053") + suffix2;
    }
    var importMapScriptStart = stringToPrecomputedChunk(
      '<script type="importmap">'
    );
    var importMapScriptEnd = stringToPrecomputedChunk("</script>");
    function createRenderState(resumableState, nonce, externalRuntimeConfig, importMap, onHeaders, maxHeadersLength) {
      var inlineScriptWithNonce = void 0 === nonce ? startInlineScript : stringToPrecomputedChunk(
        '<script nonce="' + escapeTextForBrowser(nonce) + '">'
      ), idPrefix = resumableState.idPrefix;
      externalRuntimeConfig = [];
      var bootstrapScriptContent = resumableState.bootstrapScriptContent, bootstrapScripts = resumableState.bootstrapScripts, bootstrapModules = resumableState.bootstrapModules;
      void 0 !== bootstrapScriptContent && externalRuntimeConfig.push(
        inlineScriptWithNonce,
        ("" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer),
        endInlineScript
      );
      bootstrapScriptContent = [];
      void 0 !== importMap && (bootstrapScriptContent.push(importMapScriptStart), bootstrapScriptContent.push(
        ("" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)
      ), bootstrapScriptContent.push(importMapScriptEnd));
      importMap = onHeaders ? {
        preconnects: "",
        fontPreloads: "",
        highImagePreloads: "",
        remainingCapacity: 2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
      } : null;
      onHeaders = {
        placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
        segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
        boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
        startInlineScript: inlineScriptWithNonce,
        preamble: createPreambleState(),
        externalRuntimeScript: null,
        bootstrapChunks: externalRuntimeConfig,
        importMapChunks: bootstrapScriptContent,
        onHeaders,
        headers: importMap,
        resets: {
          font: {},
          dns: {},
          connect: { default: {}, anonymous: {}, credentials: {} },
          image: {},
          style: {}
        },
        charsetChunks: [],
        viewportChunks: [],
        hoistableChunks: [],
        preconnects: /* @__PURE__ */ new Set(),
        fontPreloads: /* @__PURE__ */ new Set(),
        highImagePreloads: /* @__PURE__ */ new Set(),
        styles: /* @__PURE__ */ new Map(),
        bootstrapScripts: /* @__PURE__ */ new Set(),
        scripts: /* @__PURE__ */ new Set(),
        bulkPreloads: /* @__PURE__ */ new Set(),
        preloads: {
          images: /* @__PURE__ */ new Map(),
          stylesheets: /* @__PURE__ */ new Map(),
          scripts: /* @__PURE__ */ new Map(),
          moduleScripts: /* @__PURE__ */ new Map()
        },
        nonce,
        hoistableState: null,
        stylesToHoist: false
      };
      if (void 0 !== bootstrapScripts)
        for (importMap = 0; importMap < bootstrapScripts.length; importMap++) {
          var scriptConfig = bootstrapScripts[importMap];
          idPrefix = inlineScriptWithNonce = void 0;
          bootstrapScriptContent = {
            rel: "preload",
            as: "script",
            fetchPriority: "low",
            nonce
          };
          "string" === typeof scriptConfig ? bootstrapScriptContent.href = maxHeadersLength = scriptConfig : (bootstrapScriptContent.href = maxHeadersLength = scriptConfig.src, bootstrapScriptContent.integrity = idPrefix = "string" === typeof scriptConfig.integrity ? scriptConfig.integrity : void 0, bootstrapScriptContent.crossOrigin = inlineScriptWithNonce = "string" === typeof scriptConfig || null == scriptConfig.crossOrigin ? void 0 : "use-credentials" === scriptConfig.crossOrigin ? "use-credentials" : "");
          scriptConfig = resumableState;
          var href = maxHeadersLength;
          scriptConfig.scriptResources[href] = null;
          scriptConfig.moduleScriptResources[href] = null;
          scriptConfig = [];
          pushLinkImpl(scriptConfig, bootstrapScriptContent);
          onHeaders.bootstrapScripts.add(scriptConfig);
          externalRuntimeConfig.push(
            startScriptSrc,
            escapeTextForBrowser(maxHeadersLength)
          );
          nonce && externalRuntimeConfig.push(scriptNonce, escapeTextForBrowser(nonce));
          "string" === typeof idPrefix && externalRuntimeConfig.push(
            scriptIntegirty,
            escapeTextForBrowser(idPrefix)
          );
          "string" === typeof inlineScriptWithNonce && externalRuntimeConfig.push(
            scriptCrossOrigin,
            escapeTextForBrowser(inlineScriptWithNonce)
          );
          externalRuntimeConfig.push(endAsyncScript);
        }
      if (void 0 !== bootstrapModules)
        for (bootstrapScripts = 0; bootstrapScripts < bootstrapModules.length; bootstrapScripts++)
          bootstrapScriptContent = bootstrapModules[bootstrapScripts], inlineScriptWithNonce = maxHeadersLength = void 0, idPrefix = {
            rel: "modulepreload",
            fetchPriority: "low",
            nonce
          }, "string" === typeof bootstrapScriptContent ? idPrefix.href = importMap = bootstrapScriptContent : (idPrefix.href = importMap = bootstrapScriptContent.src, idPrefix.integrity = inlineScriptWithNonce = "string" === typeof bootstrapScriptContent.integrity ? bootstrapScriptContent.integrity : void 0, idPrefix.crossOrigin = maxHeadersLength = "string" === typeof bootstrapScriptContent || null == bootstrapScriptContent.crossOrigin ? void 0 : "use-credentials" === bootstrapScriptContent.crossOrigin ? "use-credentials" : ""), bootstrapScriptContent = resumableState, scriptConfig = importMap, bootstrapScriptContent.scriptResources[scriptConfig] = null, bootstrapScriptContent.moduleScriptResources[scriptConfig] = null, bootstrapScriptContent = [], pushLinkImpl(bootstrapScriptContent, idPrefix), onHeaders.bootstrapScripts.add(bootstrapScriptContent), externalRuntimeConfig.push(
            startModuleSrc,
            escapeTextForBrowser(importMap)
          ), nonce && externalRuntimeConfig.push(scriptNonce, escapeTextForBrowser(nonce)), "string" === typeof inlineScriptWithNonce && externalRuntimeConfig.push(
            scriptIntegirty,
            escapeTextForBrowser(inlineScriptWithNonce)
          ), "string" === typeof maxHeadersLength && externalRuntimeConfig.push(
            scriptCrossOrigin,
            escapeTextForBrowser(maxHeadersLength)
          ), externalRuntimeConfig.push(endAsyncScript);
      return onHeaders;
    }
    function createResumableState(identifierPrefix, externalRuntimeConfig, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
      return {
        idPrefix: void 0 === identifierPrefix ? "" : identifierPrefix,
        nextFormID: 0,
        streamingFormat: 0,
        bootstrapScriptContent,
        bootstrapScripts,
        bootstrapModules,
        instructions: 0,
        hasBody: false,
        hasHtml: false,
        unknownResources: {},
        dnsResources: {},
        connectResources: { default: {}, anonymous: {}, credentials: {} },
        imageResources: {},
        styleResources: {},
        scriptResources: {},
        moduleUnknownResources: {},
        moduleScriptResources: {}
      };
    }
    function createPreambleState() {
      return {
        htmlChunks: null,
        headChunks: null,
        bodyChunks: null,
        contribution: 0
      };
    }
    function createFormatContext(insertionMode, selectedValue, tagScope) {
      return {
        insertionMode,
        selectedValue,
        tagScope
      };
    }
    function createRootFormatContext(namespaceURI) {
      return createFormatContext(
        "http://www.w3.org/2000/svg" === namespaceURI ? 4 : "http://www.w3.org/1998/Math/MathML" === namespaceURI ? 5 : 0,
        null,
        0
      );
    }
    function getChildFormatContext(parentContext, type, props) {
      switch (type) {
        case "noscript":
          return createFormatContext(2, null, parentContext.tagScope | 1);
        case "select":
          return createFormatContext(
            2,
            null != props.value ? props.value : props.defaultValue,
            parentContext.tagScope
          );
        case "svg":
          return createFormatContext(4, null, parentContext.tagScope);
        case "picture":
          return createFormatContext(2, null, parentContext.tagScope | 2);
        case "math":
          return createFormatContext(5, null, parentContext.tagScope);
        case "foreignObject":
          return createFormatContext(2, null, parentContext.tagScope);
        case "table":
          return createFormatContext(6, null, parentContext.tagScope);
        case "thead":
        case "tbody":
        case "tfoot":
          return createFormatContext(7, null, parentContext.tagScope);
        case "colgroup":
          return createFormatContext(9, null, parentContext.tagScope);
        case "tr":
          return createFormatContext(8, null, parentContext.tagScope);
        case "head":
          if (2 > parentContext.insertionMode)
            return createFormatContext(3, null, parentContext.tagScope);
          break;
        case "html":
          if (0 === parentContext.insertionMode)
            return createFormatContext(1, null, parentContext.tagScope);
      }
      return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode ? createFormatContext(2, null, parentContext.tagScope) : parentContext;
    }
    var textSeparator = stringToPrecomputedChunk("<!-- -->");
    function pushTextInstance(target, text3, renderState, textEmbedded) {
      if ("" === text3) return textEmbedded;
      textEmbedded && target.push(textSeparator);
      target.push(escapeTextForBrowser(text3));
      return true;
    }
    var styleNameCache = /* @__PURE__ */ new Map();
    var styleAttributeStart = stringToPrecomputedChunk(' style="');
    var styleAssign = stringToPrecomputedChunk(":");
    var styleSeparator = stringToPrecomputedChunk(";");
    function pushStyleAttribute(target, style) {
      if ("object" !== typeof style)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      var isFirst = true, styleName;
      for (styleName in style)
        if (hasOwnProperty2.call(style, styleName)) {
          var styleValue = style[styleName];
          if (null != styleValue && "boolean" !== typeof styleValue && "" !== styleValue) {
            if (0 === styleName.indexOf("--")) {
              var nameChunk = escapeTextForBrowser(styleName);
              styleValue = escapeTextForBrowser(("" + styleValue).trim());
            } else
              nameChunk = styleNameCache.get(styleName), void 0 === nameChunk && (nameChunk = stringToPrecomputedChunk(
                escapeTextForBrowser(
                  styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-")
                )
              ), styleNameCache.set(styleName, nameChunk)), styleValue = "number" === typeof styleValue ? 0 === styleValue || unitlessNumbers.has(styleName) ? "" + styleValue : styleValue + "px" : escapeTextForBrowser(("" + styleValue).trim());
            isFirst ? (isFirst = false, target.push(
              styleAttributeStart,
              nameChunk,
              styleAssign,
              styleValue
            )) : target.push(styleSeparator, nameChunk, styleAssign, styleValue);
          }
        }
      isFirst || target.push(attributeEnd);
    }
    var attributeSeparator = stringToPrecomputedChunk(" ");
    var attributeAssign = stringToPrecomputedChunk('="');
    var attributeEnd = stringToPrecomputedChunk('"');
    var attributeEmptyString = stringToPrecomputedChunk('=""');
    function pushBooleanAttribute(target, name2, value) {
      value && "function" !== typeof value && "symbol" !== typeof value && target.push(attributeSeparator, name2, attributeEmptyString);
    }
    function pushStringAttribute(target, name2, value) {
      "function" !== typeof value && "symbol" !== typeof value && "boolean" !== typeof value && target.push(
        attributeSeparator,
        name2,
        attributeAssign,
        escapeTextForBrowser(value),
        attributeEnd
      );
    }
    var actionJavaScriptURL = stringToPrecomputedChunk(
      escapeTextForBrowser(
        "javascript:throw new Error('React form unexpectedly submitted.')"
      )
    );
    var startHiddenInputChunk = stringToPrecomputedChunk('<input type="hidden"');
    function pushAdditionalFormField(value, key) {
      this.push(startHiddenInputChunk);
      validateAdditionalFormField(value);
      pushStringAttribute(this, "name", key);
      pushStringAttribute(this, "value", value);
      this.push(endOfStartTagSelfClosing);
    }
    function validateAdditionalFormField(value) {
      if ("string" !== typeof value)
        throw Error(
          "File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration."
        );
    }
    function getCustomFormFields(resumableState, formAction) {
      if ("function" === typeof formAction.$$FORM_ACTION) {
        var id5 = resumableState.nextFormID++;
        resumableState = resumableState.idPrefix + id5;
        try {
          var customFields = formAction.$$FORM_ACTION(resumableState);
          if (customFields) {
            var formData = customFields.data;
            null != formData && formData.forEach(validateAdditionalFormField);
          }
          return customFields;
        } catch (x3) {
          if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then)
            throw x3;
        }
      }
      return null;
    }
    function pushFormActionAttribute(target, resumableState, renderState, formAction, formEncType, formMethod, formTarget, name2) {
      var formData = null;
      if ("function" === typeof formAction) {
        var customFields = getCustomFormFields(resumableState, formAction);
        null !== customFields ? (name2 = customFields.name, formAction = customFields.action || "", formEncType = customFields.encType, formMethod = customFields.method, formTarget = customFields.target, formData = customFields.data) : (target.push(
          attributeSeparator,
          "formAction",
          attributeAssign,
          actionJavaScriptURL,
          attributeEnd
        ), formTarget = formMethod = formEncType = formAction = name2 = null, injectFormReplayingRuntime(resumableState, renderState));
      }
      null != name2 && pushAttribute(target, "name", name2);
      null != formAction && pushAttribute(target, "formAction", formAction);
      null != formEncType && pushAttribute(target, "formEncType", formEncType);
      null != formMethod && pushAttribute(target, "formMethod", formMethod);
      null != formTarget && pushAttribute(target, "formTarget", formTarget);
      return formData;
    }
    function pushAttribute(target, name2, value) {
      switch (name2) {
        case "className":
          pushStringAttribute(target, "class", value);
          break;
        case "tabIndex":
          pushStringAttribute(target, "tabindex", value);
          break;
        case "dir":
        case "role":
        case "viewBox":
        case "width":
        case "height":
          pushStringAttribute(target, name2, value);
          break;
        case "style":
          pushStyleAttribute(target, value);
          break;
        case "src":
        case "href":
          if ("" === value) break;
        case "action":
        case "formAction":
          if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(
            attributeSeparator,
            name2,
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "ref":
          break;
        case "autoFocus":
        case "multiple":
        case "muted":
          pushBooleanAttribute(target, name2.toLowerCase(), value);
          break;
        case "xlinkHref":
          if ("function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(
            attributeSeparator,
            "xlink:href",
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "contentEditable":
        case "spellCheck":
        case "draggable":
        case "value":
        case "autoReverse":
        case "externalResourcesRequired":
        case "focusable":
        case "preserveAlpha":
          "function" !== typeof value && "symbol" !== typeof value && target.push(
            attributeSeparator,
            name2,
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "inert":
        case "allowFullScreen":
        case "async":
        case "autoPlay":
        case "controls":
        case "default":
        case "defer":
        case "disabled":
        case "disablePictureInPicture":
        case "disableRemotePlayback":
        case "formNoValidate":
        case "hidden":
        case "loop":
        case "noModule":
        case "noValidate":
        case "open":
        case "playsInline":
        case "readOnly":
        case "required":
        case "reversed":
        case "scoped":
        case "seamless":
        case "itemScope":
          value && "function" !== typeof value && "symbol" !== typeof value && target.push(attributeSeparator, name2, attributeEmptyString);
          break;
        case "capture":
        case "download":
          true === value ? target.push(attributeSeparator, name2, attributeEmptyString) : false !== value && "function" !== typeof value && "symbol" !== typeof value && target.push(
            attributeSeparator,
            name2,
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "cols":
        case "rows":
        case "size":
        case "span":
          "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value && target.push(
            attributeSeparator,
            name2,
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "rowSpan":
        case "start":
          "function" === typeof value || "symbol" === typeof value || isNaN(value) || target.push(
            attributeSeparator,
            name2,
            attributeAssign,
            escapeTextForBrowser(value),
            attributeEnd
          );
          break;
        case "xlinkActuate":
          pushStringAttribute(target, "xlink:actuate", value);
          break;
        case "xlinkArcrole":
          pushStringAttribute(target, "xlink:arcrole", value);
          break;
        case "xlinkRole":
          pushStringAttribute(target, "xlink:role", value);
          break;
        case "xlinkShow":
          pushStringAttribute(target, "xlink:show", value);
          break;
        case "xlinkTitle":
          pushStringAttribute(target, "xlink:title", value);
          break;
        case "xlinkType":
          pushStringAttribute(target, "xlink:type", value);
          break;
        case "xmlBase":
          pushStringAttribute(target, "xml:base", value);
          break;
        case "xmlLang":
          pushStringAttribute(target, "xml:lang", value);
          break;
        case "xmlSpace":
          pushStringAttribute(target, "xml:space", value);
          break;
        default:
          if (!(2 < name2.length) || "o" !== name2[0] && "O" !== name2[0] || "n" !== name2[1] && "N" !== name2[1]) {
            if (name2 = aliases.get(name2) || name2, isAttributeNameSafe(name2)) {
              switch (typeof value) {
                case "function":
                case "symbol":
                  return;
                case "boolean":
                  var prefix$8 = name2.toLowerCase().slice(0, 5);
                  if ("data-" !== prefix$8 && "aria-" !== prefix$8) return;
              }
              target.push(
                attributeSeparator,
                name2,
                attributeAssign,
                escapeTextForBrowser(value),
                attributeEnd
              );
            }
          }
      }
    }
    var endOfStartTag = stringToPrecomputedChunk(">");
    var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
    function pushInnerHTML(target, innerHTML, children) {
      if (null != innerHTML) {
        if (null != children)
          throw Error(
            "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
          );
        if ("object" !== typeof innerHTML || !("__html" in innerHTML))
          throw Error(
            "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
          );
        innerHTML = innerHTML.__html;
        null !== innerHTML && void 0 !== innerHTML && target.push("" + innerHTML);
      }
    }
    function flattenOptionChildren(children) {
      var content4 = "";
      React8.Children.forEach(children, function(child) {
        null != child && (content4 += child);
      });
      return content4;
    }
    var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
    var formReplayingRuntimeScript = stringToPrecomputedChunk(
      `addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error('React form unexpectedly submitted.')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});`
    );
    function injectFormReplayingRuntime(resumableState, renderState) {
      0 === (resumableState.instructions & 16) && (resumableState.instructions |= 16, renderState.bootstrapChunks.unshift(
        renderState.startInlineScript,
        formReplayingRuntimeScript,
        endInlineScript
      ));
    }
    var formStateMarkerIsMatching = stringToPrecomputedChunk("<!--F!-->");
    var formStateMarkerIsNotMatching = stringToPrecomputedChunk("<!--F-->");
    function pushLinkImpl(target, props) {
      target.push(startChunkForTag("link"));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTagSelfClosing);
      return null;
    }
    var styleRegex = /(<\/|<)(s)(tyle)/gi;
    function styleReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\73 " : "\\53 ") + suffix2;
    }
    function pushSelfClosing(target, props, tag) {
      target.push(startChunkForTag(tag));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTagSelfClosing);
      return null;
    }
    function pushTitleImpl(target, props) {
      target.push(startChunkForTag("title"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      props = Array.isArray(children) ? 2 > children.length ? children[0] : null : children;
      "function" !== typeof props && "symbol" !== typeof props && null !== props && void 0 !== props && target.push(escapeTextForBrowser("" + props));
      pushInnerHTML(target, innerHTML, children);
      target.push(endChunkForTag("title"));
      return null;
    }
    function pushScriptImpl(target, props) {
      target.push(startChunkForTag("script"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, children);
      "string" === typeof children && target.push(("" + children).replace(scriptRegex, scriptReplacer));
      target.push(endChunkForTag("script"));
      return null;
    }
    function pushStartSingletonElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, tag);
      return tag;
    }
    function pushStartGenericElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, tag);
      return "string" === typeof tag ? (target.push(escapeTextForBrowser(tag)), null) : tag;
    }
    var leadingNewline = stringToPrecomputedChunk("\n");
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = /* @__PURE__ */ new Map();
    function startChunkForTag(tag) {
      var tagStartChunk = validatedTagCache.get(tag);
      if (void 0 === tagStartChunk) {
        if (!VALID_TAG_REGEX.test(tag)) throw Error("Invalid tag: " + tag);
        tagStartChunk = stringToPrecomputedChunk("<" + tag);
        validatedTagCache.set(tag, tagStartChunk);
      }
      return tagStartChunk;
    }
    var doctypeChunk = stringToPrecomputedChunk("<!DOCTYPE html>");
    function pushStartInstance(target$jscomp$0, type, props, resumableState, renderState, preambleState, hoistableState, formatContext, textEmbedded, isFallback) {
      switch (type) {
        case "div":
        case "span":
        case "svg":
        case "path":
          break;
        case "a":
          target$jscomp$0.push(startChunkForTag("a"));
          var children = null, innerHTML = null, propKey;
          for (propKey in props)
            if (hasOwnProperty2.call(props, propKey)) {
              var propValue = props[propKey];
              if (null != propValue)
                switch (propKey) {
                  case "children":
                    children = propValue;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML = propValue;
                    break;
                  case "href":
                    "" === propValue ? pushStringAttribute(target$jscomp$0, "href", "") : pushAttribute(target$jscomp$0, propKey, propValue);
                    break;
                  default:
                    pushAttribute(target$jscomp$0, propKey, propValue);
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML, children);
          if ("string" === typeof children) {
            target$jscomp$0.push(escapeTextForBrowser(children));
            var JSCompiler_inline_result = null;
          } else JSCompiler_inline_result = children;
          return JSCompiler_inline_result;
        case "g":
        case "p":
        case "li":
          break;
        case "select":
          target$jscomp$0.push(startChunkForTag("select"));
          var children$jscomp$0 = null, innerHTML$jscomp$0 = null, propKey$jscomp$0;
          for (propKey$jscomp$0 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$0)) {
              var propValue$jscomp$0 = props[propKey$jscomp$0];
              if (null != propValue$jscomp$0)
                switch (propKey$jscomp$0) {
                  case "children":
                    children$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$0,
                      propValue$jscomp$0
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
          return children$jscomp$0;
        case "option":
          var selectedValue = formatContext.selectedValue;
          target$jscomp$0.push(startChunkForTag("option"));
          var children$jscomp$1 = null, value = null, selected = null, innerHTML$jscomp$1 = null, propKey$jscomp$1;
          for (propKey$jscomp$1 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$1)) {
              var propValue$jscomp$1 = props[propKey$jscomp$1];
              if (null != propValue$jscomp$1)
                switch (propKey$jscomp$1) {
                  case "children":
                    children$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "selected":
                    selected = propValue$jscomp$1;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "value":
                    value = propValue$jscomp$1;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$1,
                      propValue$jscomp$1
                    );
                }
            }
          if (null != selectedValue) {
            var stringValue = null !== value ? "" + value : flattenOptionChildren(children$jscomp$1);
            if (isArrayImpl(selectedValue))
              for (var i11 = 0; i11 < selectedValue.length; i11++) {
                if ("" + selectedValue[i11] === stringValue) {
                  target$jscomp$0.push(selectedMarkerAttribute);
                  break;
                }
              }
            else
              "" + selectedValue === stringValue && target$jscomp$0.push(selectedMarkerAttribute);
          } else selected && target$jscomp$0.push(selectedMarkerAttribute);
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);
          return children$jscomp$1;
        case "textarea":
          target$jscomp$0.push(startChunkForTag("textarea"));
          var value$jscomp$0 = null, defaultValue2 = null, children$jscomp$2 = null, propKey$jscomp$2;
          for (propKey$jscomp$2 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$2)) {
              var propValue$jscomp$2 = props[propKey$jscomp$2];
              if (null != propValue$jscomp$2)
                switch (propKey$jscomp$2) {
                  case "children":
                    children$jscomp$2 = propValue$jscomp$2;
                    break;
                  case "value":
                    value$jscomp$0 = propValue$jscomp$2;
                    break;
                  case "defaultValue":
                    defaultValue2 = propValue$jscomp$2;
                    break;
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$2,
                      propValue$jscomp$2
                    );
                }
            }
          null === value$jscomp$0 && null !== defaultValue2 && (value$jscomp$0 = defaultValue2);
          target$jscomp$0.push(endOfStartTag);
          if (null != children$jscomp$2) {
            if (null != value$jscomp$0)
              throw Error(
                "If you supply `defaultValue` on a <textarea>, do not pass children."
              );
            if (isArrayImpl(children$jscomp$2)) {
              if (1 < children$jscomp$2.length)
                throw Error("<textarea> can only have at most one child.");
              value$jscomp$0 = "" + children$jscomp$2[0];
            }
            value$jscomp$0 = "" + children$jscomp$2;
          }
          "string" === typeof value$jscomp$0 && "\n" === value$jscomp$0[0] && target$jscomp$0.push(leadingNewline);
          null !== value$jscomp$0 && target$jscomp$0.push(escapeTextForBrowser("" + value$jscomp$0));
          return null;
        case "input":
          target$jscomp$0.push(startChunkForTag("input"));
          var name2 = null, formAction = null, formEncType = null, formMethod = null, formTarget = null, value$jscomp$1 = null, defaultValue$jscomp$0 = null, checked = null, defaultChecked = null, propKey$jscomp$3;
          for (propKey$jscomp$3 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$3)) {
              var propValue$jscomp$3 = props[propKey$jscomp$3];
              if (null != propValue$jscomp$3)
                switch (propKey$jscomp$3) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  case "name":
                    name2 = propValue$jscomp$3;
                    break;
                  case "formAction":
                    formAction = propValue$jscomp$3;
                    break;
                  case "formEncType":
                    formEncType = propValue$jscomp$3;
                    break;
                  case "formMethod":
                    formMethod = propValue$jscomp$3;
                    break;
                  case "formTarget":
                    formTarget = propValue$jscomp$3;
                    break;
                  case "defaultChecked":
                    defaultChecked = propValue$jscomp$3;
                    break;
                  case "defaultValue":
                    defaultValue$jscomp$0 = propValue$jscomp$3;
                    break;
                  case "checked":
                    checked = propValue$jscomp$3;
                    break;
                  case "value":
                    value$jscomp$1 = propValue$jscomp$3;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$3,
                      propValue$jscomp$3
                    );
                }
            }
          var formData = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction,
            formEncType,
            formMethod,
            formTarget,
            name2
          );
          null !== checked ? pushBooleanAttribute(target$jscomp$0, "checked", checked) : null !== defaultChecked && pushBooleanAttribute(target$jscomp$0, "checked", defaultChecked);
          null !== value$jscomp$1 ? pushAttribute(target$jscomp$0, "value", value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0, "value", defaultValue$jscomp$0);
          target$jscomp$0.push(endOfStartTagSelfClosing);
          null != formData && formData.forEach(pushAdditionalFormField, target$jscomp$0);
          return null;
        case "button":
          target$jscomp$0.push(startChunkForTag("button"));
          var children$jscomp$3 = null, innerHTML$jscomp$2 = null, name$jscomp$0 = null, formAction$jscomp$0 = null, formEncType$jscomp$0 = null, formMethod$jscomp$0 = null, formTarget$jscomp$0 = null, propKey$jscomp$4;
          for (propKey$jscomp$4 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$4)) {
              var propValue$jscomp$4 = props[propKey$jscomp$4];
              if (null != propValue$jscomp$4)
                switch (propKey$jscomp$4) {
                  case "children":
                    children$jscomp$3 = propValue$jscomp$4;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$2 = propValue$jscomp$4;
                    break;
                  case "name":
                    name$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formAction":
                    formAction$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formEncType":
                    formEncType$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formMethod":
                    formMethod$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formTarget":
                    formTarget$jscomp$0 = propValue$jscomp$4;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$4,
                      propValue$jscomp$4
                    );
                }
            }
          var formData$jscomp$0 = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction$jscomp$0,
            formEncType$jscomp$0,
            formMethod$jscomp$0,
            formTarget$jscomp$0,
            name$jscomp$0
          );
          target$jscomp$0.push(endOfStartTag);
          null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);
          if ("string" === typeof children$jscomp$3) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$3));
            var JSCompiler_inline_result$jscomp$0 = null;
          } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;
          return JSCompiler_inline_result$jscomp$0;
        case "form":
          target$jscomp$0.push(startChunkForTag("form"));
          var children$jscomp$4 = null, innerHTML$jscomp$3 = null, formAction$jscomp$1 = null, formEncType$jscomp$1 = null, formMethod$jscomp$1 = null, formTarget$jscomp$1 = null, propKey$jscomp$5;
          for (propKey$jscomp$5 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$5)) {
              var propValue$jscomp$5 = props[propKey$jscomp$5];
              if (null != propValue$jscomp$5)
                switch (propKey$jscomp$5) {
                  case "children":
                    children$jscomp$4 = propValue$jscomp$5;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$3 = propValue$jscomp$5;
                    break;
                  case "action":
                    formAction$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "encType":
                    formEncType$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "method":
                    formMethod$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "target":
                    formTarget$jscomp$1 = propValue$jscomp$5;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$5,
                      propValue$jscomp$5
                    );
                }
            }
          var formData$jscomp$1 = null, formActionName = null;
          if ("function" === typeof formAction$jscomp$1) {
            var customFields = getCustomFormFields(
              resumableState,
              formAction$jscomp$1
            );
            null !== customFields ? (formAction$jscomp$1 = customFields.action || "", formEncType$jscomp$1 = customFields.encType, formMethod$jscomp$1 = customFields.method, formTarget$jscomp$1 = customFields.target, formData$jscomp$1 = customFields.data, formActionName = customFields.name) : (target$jscomp$0.push(
              attributeSeparator,
              "action",
              attributeAssign,
              actionJavaScriptURL,
              attributeEnd
            ), formTarget$jscomp$1 = formMethod$jscomp$1 = formEncType$jscomp$1 = formAction$jscomp$1 = null, injectFormReplayingRuntime(resumableState, renderState));
          }
          null != formAction$jscomp$1 && pushAttribute(target$jscomp$0, "action", formAction$jscomp$1);
          null != formEncType$jscomp$1 && pushAttribute(target$jscomp$0, "encType", formEncType$jscomp$1);
          null != formMethod$jscomp$1 && pushAttribute(target$jscomp$0, "method", formMethod$jscomp$1);
          null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0, "target", formTarget$jscomp$1);
          target$jscomp$0.push(endOfStartTag);
          null !== formActionName && (target$jscomp$0.push(startHiddenInputChunk), pushStringAttribute(target$jscomp$0, "name", formActionName), target$jscomp$0.push(endOfStartTagSelfClosing), null != formData$jscomp$1 && formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);
          if ("string" === typeof children$jscomp$4) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$4));
            var JSCompiler_inline_result$jscomp$1 = null;
          } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;
          return JSCompiler_inline_result$jscomp$1;
        case "menuitem":
          target$jscomp$0.push(startChunkForTag("menuitem"));
          for (var propKey$jscomp$6 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$6)) {
              var propValue$jscomp$6 = props[propKey$jscomp$6];
              if (null != propValue$jscomp$6)
                switch (propKey$jscomp$6) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "menuitems cannot have `children` nor `dangerouslySetInnerHTML`."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$6,
                      propValue$jscomp$6
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          return null;
        case "object":
          target$jscomp$0.push(startChunkForTag("object"));
          var children$jscomp$5 = null, innerHTML$jscomp$4 = null, propKey$jscomp$7;
          for (propKey$jscomp$7 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$7)) {
              var propValue$jscomp$7 = props[propKey$jscomp$7];
              if (null != propValue$jscomp$7)
                switch (propKey$jscomp$7) {
                  case "children":
                    children$jscomp$5 = propValue$jscomp$7;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$4 = propValue$jscomp$7;
                    break;
                  case "data":
                    var sanitizedValue = sanitizeURL("" + propValue$jscomp$7);
                    if ("" === sanitizedValue) break;
                    target$jscomp$0.push(
                      attributeSeparator,
                      "data",
                      attributeAssign,
                      escapeTextForBrowser(sanitizedValue),
                      attributeEnd
                    );
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$7,
                      propValue$jscomp$7
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
          if ("string" === typeof children$jscomp$5) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$5));
            var JSCompiler_inline_result$jscomp$2 = null;
          } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;
          return JSCompiler_inline_result$jscomp$2;
        case "title":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(
              target$jscomp$0,
              props
            );
          else
            isFallback ? JSCompiler_inline_result$jscomp$3 = null : (pushTitleImpl(renderState.hoistableChunks, props), JSCompiler_inline_result$jscomp$3 = void 0);
          return JSCompiler_inline_result$jscomp$3;
        case "link":
          var rel = props.rel, href = props.href, precedence = props.precedence;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof rel || "string" !== typeof href || "" === href) {
            pushLinkImpl(target$jscomp$0, props);
            var JSCompiler_inline_result$jscomp$4 = null;
          } else if ("stylesheet" === props.rel)
            if ("string" !== typeof precedence || null != props.disabled || props.onLoad || props.onError)
              JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
                target$jscomp$0,
                props
              );
            else {
              var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
              if (null !== resourceState) {
                resumableState.styleResources[href] = null;
                styleQueue || (styleQueue = {
                  precedence: escapeTextForBrowser(precedence),
                  rules: [],
                  hrefs: [],
                  sheets: /* @__PURE__ */ new Map()
                }, renderState.styles.set(precedence, styleQueue));
                var resource = {
                  state: 0,
                  props: assign({}, props, {
                    "data-precedence": props.precedence,
                    precedence: null
                  })
                };
                if (resourceState) {
                  2 === resourceState.length && adoptPreloadCredentials(resource.props, resourceState);
                  var preloadResource = renderState.preloads.stylesheets.get(href);
                  preloadResource && 0 < preloadResource.length ? preloadResource.length = 0 : resource.state = 1;
                }
                styleQueue.sheets.set(href, resource);
                hoistableState && hoistableState.stylesheets.add(resource);
              } else if (styleQueue) {
                var resource$9 = styleQueue.sheets.get(href);
                resource$9 && hoistableState && hoistableState.stylesheets.add(resource$9);
              }
              textEmbedded && target$jscomp$0.push(textSeparator);
              JSCompiler_inline_result$jscomp$4 = null;
            }
          else
            props.onLoad || props.onError ? JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
              target$jscomp$0,
              props
            ) : (textEmbedded && target$jscomp$0.push(textSeparator), JSCompiler_inline_result$jscomp$4 = isFallback ? null : pushLinkImpl(renderState.hoistableChunks, props));
          return JSCompiler_inline_result$jscomp$4;
        case "script":
          var asyncProp = props.async;
          if ("string" !== typeof props.src || !props.src || !asyncProp || "function" === typeof asyncProp || "symbol" === typeof asyncProp || props.onLoad || props.onError || 4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(
              target$jscomp$0,
              props
            );
          else {
            var key = props.src;
            if ("module" === props.type) {
              var resources = resumableState.moduleScriptResources;
              var preloads = renderState.preloads.moduleScripts;
            } else
              resources = resumableState.scriptResources, preloads = renderState.preloads.scripts;
            var resourceState$jscomp$0 = resources.hasOwnProperty(key) ? resources[key] : void 0;
            if (null !== resourceState$jscomp$0) {
              resources[key] = null;
              var scriptProps = props;
              if (resourceState$jscomp$0) {
                2 === resourceState$jscomp$0.length && (scriptProps = assign({}, props), adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));
                var preloadResource$jscomp$0 = preloads.get(key);
                preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);
              }
              var resource$jscomp$0 = [];
              renderState.scripts.add(resource$jscomp$0);
              pushScriptImpl(resource$jscomp$0, scriptProps);
            }
            textEmbedded && target$jscomp$0.push(textSeparator);
            JSCompiler_inline_result$jscomp$5 = null;
          }
          return JSCompiler_inline_result$jscomp$5;
        case "style":
          var precedence$jscomp$0 = props.precedence, href$jscomp$0 = props.href;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof precedence$jscomp$0 || "string" !== typeof href$jscomp$0 || "" === href$jscomp$0) {
            target$jscomp$0.push(startChunkForTag("style"));
            var children$jscomp$6 = null, innerHTML$jscomp$5 = null, propKey$jscomp$8;
            for (propKey$jscomp$8 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$8)) {
                var propValue$jscomp$8 = props[propKey$jscomp$8];
                if (null != propValue$jscomp$8)
                  switch (propKey$jscomp$8) {
                    case "children":
                      children$jscomp$6 = propValue$jscomp$8;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$5 = propValue$jscomp$8;
                      break;
                    default:
                      pushAttribute(
                        target$jscomp$0,
                        propKey$jscomp$8,
                        propValue$jscomp$8
                      );
                  }
              }
            target$jscomp$0.push(endOfStartTag);
            var child = Array.isArray(children$jscomp$6) ? 2 > children$jscomp$6.length ? children$jscomp$6[0] : null : children$jscomp$6;
            "function" !== typeof child && "symbol" !== typeof child && null !== child && void 0 !== child && target$jscomp$0.push(("" + child).replace(styleRegex, styleReplacer));
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);
            target$jscomp$0.push(endChunkForTag("style"));
            var JSCompiler_inline_result$jscomp$6 = null;
          } else {
            var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);
            if (null !== (resumableState.styleResources.hasOwnProperty(href$jscomp$0) ? resumableState.styleResources[href$jscomp$0] : void 0)) {
              resumableState.styleResources[href$jscomp$0] = null;
              styleQueue$jscomp$0 ? styleQueue$jscomp$0.hrefs.push(
                escapeTextForBrowser(href$jscomp$0)
              ) : (styleQueue$jscomp$0 = {
                precedence: escapeTextForBrowser(precedence$jscomp$0),
                rules: [],
                hrefs: [escapeTextForBrowser(href$jscomp$0)],
                sheets: /* @__PURE__ */ new Map()
              }, renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));
              var target = styleQueue$jscomp$0.rules, children$jscomp$7 = null, innerHTML$jscomp$6 = null, propKey$jscomp$9;
              for (propKey$jscomp$9 in props)
                if (hasOwnProperty2.call(props, propKey$jscomp$9)) {
                  var propValue$jscomp$9 = props[propKey$jscomp$9];
                  if (null != propValue$jscomp$9)
                    switch (propKey$jscomp$9) {
                      case "children":
                        children$jscomp$7 = propValue$jscomp$9;
                        break;
                      case "dangerouslySetInnerHTML":
                        innerHTML$jscomp$6 = propValue$jscomp$9;
                    }
                }
              var child$jscomp$0 = Array.isArray(children$jscomp$7) ? 2 > children$jscomp$7.length ? children$jscomp$7[0] : null : children$jscomp$7;
              "function" !== typeof child$jscomp$0 && "symbol" !== typeof child$jscomp$0 && null !== child$jscomp$0 && void 0 !== child$jscomp$0 && target.push(
                ("" + child$jscomp$0).replace(styleRegex, styleReplacer)
              );
              pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);
            }
            styleQueue$jscomp$0 && hoistableState && hoistableState.styles.add(styleQueue$jscomp$0);
            textEmbedded && target$jscomp$0.push(textSeparator);
            JSCompiler_inline_result$jscomp$6 = void 0;
          }
          return JSCompiler_inline_result$jscomp$6;
        case "meta":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
              target$jscomp$0,
              props,
              "meta"
            );
          else
            textEmbedded && target$jscomp$0.push(textSeparator), JSCompiler_inline_result$jscomp$7 = isFallback ? null : "string" === typeof props.charSet ? pushSelfClosing(renderState.charsetChunks, props, "meta") : "viewport" === props.name ? pushSelfClosing(renderState.viewportChunks, props, "meta") : pushSelfClosing(renderState.hoistableChunks, props, "meta");
          return JSCompiler_inline_result$jscomp$7;
        case "listing":
        case "pre":
          target$jscomp$0.push(startChunkForTag(type));
          var children$jscomp$8 = null, innerHTML$jscomp$7 = null, propKey$jscomp$10;
          for (propKey$jscomp$10 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$10)) {
              var propValue$jscomp$10 = props[propKey$jscomp$10];
              if (null != propValue$jscomp$10)
                switch (propKey$jscomp$10) {
                  case "children":
                    children$jscomp$8 = propValue$jscomp$10;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$7 = propValue$jscomp$10;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$10,
                      propValue$jscomp$10
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          if (null != innerHTML$jscomp$7) {
            if (null != children$jscomp$8)
              throw Error(
                "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
              );
            if ("object" !== typeof innerHTML$jscomp$7 || !("__html" in innerHTML$jscomp$7))
              throw Error(
                "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
              );
            var html = innerHTML$jscomp$7.__html;
            null !== html && void 0 !== html && ("string" === typeof html && 0 < html.length && "\n" === html[0] ? target$jscomp$0.push(leadingNewline, html) : target$jscomp$0.push("" + html));
          }
          "string" === typeof children$jscomp$8 && "\n" === children$jscomp$8[0] && target$jscomp$0.push(leadingNewline);
          return children$jscomp$8;
        case "img":
          var src = props.src, srcSet = props.srcSet;
          if (!("lazy" === props.loading || !src && !srcSet || "string" !== typeof src && null != src || "string" !== typeof srcSet && null != srcSet) && "low" !== props.fetchPriority && false === !!(formatContext.tagScope & 3) && ("string" !== typeof src || ":" !== src[4] || "d" !== src[0] && "D" !== src[0] || "a" !== src[1] && "A" !== src[1] || "t" !== src[2] && "T" !== src[2] || "a" !== src[3] && "A" !== src[3]) && ("string" !== typeof srcSet || ":" !== srcSet[4] || "d" !== srcSet[0] && "D" !== srcSet[0] || "a" !== srcSet[1] && "A" !== srcSet[1] || "t" !== srcSet[2] && "T" !== srcSet[2] || "a" !== srcSet[3] && "A" !== srcSet[3])) {
            var sizes2 = "string" === typeof props.sizes ? props.sizes : void 0, key$jscomp$0 = srcSet ? srcSet + "\n" + (sizes2 || "") : src, promotablePreloads = renderState.preloads.images, resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);
            if (resource$jscomp$1) {
              if ("high" === props.fetchPriority || 10 > renderState.highImagePreloads.size)
                promotablePreloads.delete(key$jscomp$0), renderState.highImagePreloads.add(resource$jscomp$1);
            } else if (!resumableState.imageResources.hasOwnProperty(key$jscomp$0)) {
              resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;
              var input = props.crossOrigin;
              var JSCompiler_inline_result$jscomp$8 = "string" === typeof input ? "use-credentials" === input ? input : "" : void 0;
              var headers = renderState.headers, header;
              headers && 0 < headers.remainingCapacity && "string" !== typeof props.srcSet && ("high" === props.fetchPriority || 500 > headers.highImagePreloads.length) && (header = getPreloadAsHeader(src, "image", {
                imageSrcSet: props.srcSet,
                imageSizes: props.sizes,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                nonce: props.nonce,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.refererPolicy
              }), 0 <= (headers.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS, headers.highImagePreloads && (headers.highImagePreloads += ", "), headers.highImagePreloads += header) : (resource$jscomp$1 = [], pushLinkImpl(resource$jscomp$1, {
                rel: "preload",
                as: "image",
                href: srcSet ? void 0 : src,
                imageSrcSet: srcSet,
                imageSizes: sizes2,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.referrerPolicy
              }), "high" === props.fetchPriority || 10 > renderState.highImagePreloads.size ? renderState.highImagePreloads.add(resource$jscomp$1) : (renderState.bulkPreloads.add(resource$jscomp$1), promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
            }
          }
          return pushSelfClosing(target$jscomp$0, props, "img");
        case "base":
        case "area":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "keygen":
        case "param":
        case "source":
        case "track":
        case "wbr":
          return pushSelfClosing(target$jscomp$0, props, type);
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          break;
        case "head":
          if (2 > formatContext.insertionMode) {
            var preamble = preambleState || renderState.preamble;
            if (preamble.headChunks)
              throw Error("The `<head>` tag may only be rendered once.");
            preamble.headChunks = [];
            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
              preamble.headChunks,
              props,
              "head"
            );
          } else
            JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "head"
            );
          return JSCompiler_inline_result$jscomp$9;
        case "body":
          if (2 > formatContext.insertionMode) {
            var preamble$jscomp$0 = preambleState || renderState.preamble;
            if (preamble$jscomp$0.bodyChunks)
              throw Error("The `<body>` tag may only be rendered once.");
            preamble$jscomp$0.bodyChunks = [];
            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
              preamble$jscomp$0.bodyChunks,
              props,
              "body"
            );
          } else
            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "body"
            );
          return JSCompiler_inline_result$jscomp$10;
        case "html":
          if (0 === formatContext.insertionMode) {
            var preamble$jscomp$1 = preambleState || renderState.preamble;
            if (preamble$jscomp$1.htmlChunks)
              throw Error("The `<html>` tag may only be rendered once.");
            preamble$jscomp$1.htmlChunks = [doctypeChunk];
            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
              preamble$jscomp$1.htmlChunks,
              props,
              "html"
            );
          } else
            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "html"
            );
          return JSCompiler_inline_result$jscomp$11;
        default:
          if (-1 !== type.indexOf("-")) {
            target$jscomp$0.push(startChunkForTag(type));
            var children$jscomp$9 = null, innerHTML$jscomp$8 = null, propKey$jscomp$11;
            for (propKey$jscomp$11 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$11)) {
                var propValue$jscomp$11 = props[propKey$jscomp$11];
                if (null != propValue$jscomp$11) {
                  var attributeName = propKey$jscomp$11;
                  switch (propKey$jscomp$11) {
                    case "children":
                      children$jscomp$9 = propValue$jscomp$11;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$8 = propValue$jscomp$11;
                      break;
                    case "style":
                      pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);
                      break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                    case "ref":
                      break;
                    case "className":
                      attributeName = "class";
                    default:
                      if (isAttributeNameSafe(propKey$jscomp$11) && "function" !== typeof propValue$jscomp$11 && "symbol" !== typeof propValue$jscomp$11 && false !== propValue$jscomp$11) {
                        if (true === propValue$jscomp$11) propValue$jscomp$11 = "";
                        else if ("object" === typeof propValue$jscomp$11) continue;
                        target$jscomp$0.push(
                          attributeSeparator,
                          attributeName,
                          attributeAssign,
                          escapeTextForBrowser(propValue$jscomp$11),
                          attributeEnd
                        );
                      }
                  }
                }
              }
            target$jscomp$0.push(endOfStartTag);
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
            return children$jscomp$9;
          }
      }
      return pushStartGenericElement(target$jscomp$0, props, type);
    }
    var endTagCache = /* @__PURE__ */ new Map();
    function endChunkForTag(tag) {
      var chunk2 = endTagCache.get(tag);
      void 0 === chunk2 && (chunk2 = stringToPrecomputedChunk("</" + tag + ">"), endTagCache.set(tag, chunk2));
      return chunk2;
    }
    function hoistPreambleState(renderState, preambleState) {
      renderState = renderState.preamble;
      null === renderState.htmlChunks && preambleState.htmlChunks && (renderState.htmlChunks = preambleState.htmlChunks, preambleState.contribution |= 1);
      null === renderState.headChunks && preambleState.headChunks && (renderState.headChunks = preambleState.headChunks, preambleState.contribution |= 4);
      null === renderState.bodyChunks && preambleState.bodyChunks && (renderState.bodyChunks = preambleState.bodyChunks, preambleState.contribution |= 2);
    }
    function writeBootstrap(destination, renderState) {
      renderState = renderState.bootstrapChunks;
      for (var i11 = 0; i11 < renderState.length - 1; i11++)
        writeChunk(destination, renderState[i11]);
      return i11 < renderState.length ? (i11 = renderState[i11], renderState.length = 0, writeChunkAndReturn(destination, i11)) : true;
    }
    var placeholder1 = stringToPrecomputedChunk('<template id="');
    var placeholder2 = stringToPrecomputedChunk('"></template>');
    var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
    var startPendingSuspenseBoundary1 = stringToPrecomputedChunk(
      '<!--$?--><template id="'
    );
    var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
    var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
    var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
    var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
    var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
    var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
    stringToPrecomputedChunk(' data-msg="');
    stringToPrecomputedChunk(' data-stck="');
    stringToPrecomputedChunk(' data-cstck="');
    var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
    function writeStartPendingSuspenseBoundary(destination, renderState, id5) {
      writeChunk(destination, startPendingSuspenseBoundary1);
      if (null === id5)
        throw Error(
          "An ID must have been assigned before we can complete the boundary."
        );
      writeChunk(destination, renderState.boundaryPrefix);
      writeChunk(destination, id5.toString(16));
      return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
    }
    var boundaryPreambleContributionChunkStart = stringToPrecomputedChunk("<!--");
    var boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("-->");
    function writePreambleContribution(destination, preambleState) {
      preambleState = preambleState.contribution;
      0 !== preambleState && (writeChunk(destination, boundaryPreambleContributionChunkStart), writeChunk(destination, "" + preambleState), writeChunk(destination, boundaryPreambleContributionChunkEnd));
    }
    var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
    var startSegmentHTML2 = stringToPrecomputedChunk('">');
    var endSegmentHTML = stringToPrecomputedChunk("</div>");
    var startSegmentSVG = stringToPrecomputedChunk(
      '<svg aria-hidden="true" style="display:none" id="'
    );
    var startSegmentSVG2 = stringToPrecomputedChunk('">');
    var endSegmentSVG = stringToPrecomputedChunk("</svg>");
    var startSegmentMathML = stringToPrecomputedChunk(
      '<math aria-hidden="true" style="display:none" id="'
    );
    var startSegmentMathML2 = stringToPrecomputedChunk('">');
    var endSegmentMathML = stringToPrecomputedChunk("</math>");
    var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
    var startSegmentTable2 = stringToPrecomputedChunk('">');
    var endSegmentTable = stringToPrecomputedChunk("</table>");
    var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
    var startSegmentTableBody2 = stringToPrecomputedChunk('">');
    var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
    var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
    var startSegmentTableRow2 = stringToPrecomputedChunk('">');
    var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
    var startSegmentColGroup = stringToPrecomputedChunk(
      '<table hidden><colgroup id="'
    );
    var startSegmentColGroup2 = stringToPrecomputedChunk('">');
    var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
    function writeStartSegment(destination, renderState, formatContext, id5) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return writeChunk(destination, startSegmentHTML), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentHTML2);
        case 4:
          return writeChunk(destination, startSegmentSVG), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentSVG2);
        case 5:
          return writeChunk(destination, startSegmentMathML), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentMathML2);
        case 6:
          return writeChunk(destination, startSegmentTable), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentTable2);
        case 7:
          return writeChunk(destination, startSegmentTableBody), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentTableBody2);
        case 8:
          return writeChunk(destination, startSegmentTableRow), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentTableRow2);
        case 9:
          return writeChunk(destination, startSegmentColGroup), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, id5.toString(16)), writeChunkAndReturn(destination, startSegmentColGroup2);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function writeEndSegment(destination, formatContext) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return writeChunkAndReturn(destination, endSegmentHTML);
        case 4:
          return writeChunkAndReturn(destination, endSegmentSVG);
        case 5:
          return writeChunkAndReturn(destination, endSegmentMathML);
        case 6:
          return writeChunkAndReturn(destination, endSegmentTable);
        case 7:
          return writeChunkAndReturn(destination, endSegmentTableBody);
        case 8:
          return writeChunkAndReturn(destination, endSegmentTableRow);
        case 9:
          return writeChunkAndReturn(destination, endSegmentColGroup);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var completeSegmentScript1Full = stringToPrecomputedChunk(
      '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
    );
    var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
    var completeSegmentScript2 = stringToPrecomputedChunk('","');
    var completeSegmentScriptEnd = stringToPrecomputedChunk('")</script>');
    stringToPrecomputedChunk('<template data-rsi="" data-sid="');
    stringToPrecomputedChunk('" data-pid="');
    var completeBoundaryScript1Full = stringToPrecomputedChunk(
      '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("'
    );
    var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
    var completeBoundaryWithStylesScript1FullBoth = stringToPrecomputedChunk(
      '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
    );
    var completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
      '$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
    );
    var completeBoundaryWithStylesScript1Partial = stringToPrecomputedChunk('$RR("');
    var completeBoundaryScript2 = stringToPrecomputedChunk('","');
    var completeBoundaryScript3a = stringToPrecomputedChunk('",');
    var completeBoundaryScript3b = stringToPrecomputedChunk('"');
    var completeBoundaryScriptEnd = stringToPrecomputedChunk(")</script>");
    stringToPrecomputedChunk('<template data-rci="" data-bid="');
    stringToPrecomputedChunk('<template data-rri="" data-bid="');
    stringToPrecomputedChunk('" data-sid="');
    stringToPrecomputedChunk('" data-sty="');
    var clientRenderScript1Full = stringToPrecomputedChunk(
      '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX("'
    );
    var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
    var clientRenderScript1A = stringToPrecomputedChunk('"');
    var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
    var clientRenderScriptEnd = stringToPrecomputedChunk(")</script>");
    stringToPrecomputedChunk('<template data-rxi="" data-bid="');
    stringToPrecomputedChunk('" data-dgst="');
    stringToPrecomputedChunk('" data-msg="');
    stringToPrecomputedChunk('" data-stck="');
    stringToPrecomputedChunk('" data-cstck="');
    var regexForJSStringsInInstructionScripts = /[<\u2028\u2029]/g;
    function escapeJSStringsForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInInstructionScripts,
        function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var regexForJSStringsInScripts = /[&><\u2028\u2029]/g;
    function escapeJSObjectForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInScripts,
        function(match) {
          switch (match) {
            case "&":
              return "\\u0026";
            case ">":
              return "\\u003e";
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var lateStyleTagResourceOpen1 = stringToPrecomputedChunk(
      '<style media="not all" data-precedence="'
    );
    var lateStyleTagResourceOpen2 = stringToPrecomputedChunk('" data-href="');
    var lateStyleTagResourceOpen3 = stringToPrecomputedChunk('">');
    var lateStyleTagTemplateClose = stringToPrecomputedChunk("</style>");
    var currentlyRenderingBoundaryHasStylesToHoist = false;
    var destinationHasCapacity = true;
    function flushStyleTagsLateForBoundary(styleQueue) {
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs, i11 = 0;
      if (hrefs.length) {
        writeChunk(this, lateStyleTagResourceOpen1);
        writeChunk(this, styleQueue.precedence);
        for (writeChunk(this, lateStyleTagResourceOpen2); i11 < hrefs.length - 1; i11++)
          writeChunk(this, hrefs[i11]), writeChunk(this, spaceSeparator);
        writeChunk(this, hrefs[i11]);
        writeChunk(this, lateStyleTagResourceOpen3);
        for (i11 = 0; i11 < rules.length; i11++) writeChunk(this, rules[i11]);
        destinationHasCapacity = writeChunkAndReturn(
          this,
          lateStyleTagTemplateClose
        );
        currentlyRenderingBoundaryHasStylesToHoist = true;
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function hasStylesToHoist(stylesheet) {
      return 2 !== stylesheet.state ? currentlyRenderingBoundaryHasStylesToHoist = true : false;
    }
    function writeHoistablesForBoundary(destination, hoistableState, renderState) {
      currentlyRenderingBoundaryHasStylesToHoist = false;
      destinationHasCapacity = true;
      hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);
      hoistableState.stylesheets.forEach(hasStylesToHoist);
      currentlyRenderingBoundaryHasStylesToHoist && (renderState.stylesToHoist = true);
      return destinationHasCapacity;
    }
    function flushResource(resource) {
      for (var i11 = 0; i11 < resource.length; i11++) writeChunk(this, resource[i11]);
      resource.length = 0;
    }
    var stylesheetFlushingQueue = [];
    function flushStyleInPreamble(stylesheet) {
      pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);
      for (var i11 = 0; i11 < stylesheetFlushingQueue.length; i11++)
        writeChunk(this, stylesheetFlushingQueue[i11]);
      stylesheetFlushingQueue.length = 0;
      stylesheet.state = 2;
    }
    var styleTagResourceOpen1 = stringToPrecomputedChunk(
      '<style data-precedence="'
    );
    var styleTagResourceOpen2 = stringToPrecomputedChunk('" data-href="');
    var spaceSeparator = stringToPrecomputedChunk(" ");
    var styleTagResourceOpen3 = stringToPrecomputedChunk('">');
    var styleTagResourceClose = stringToPrecomputedChunk("</style>");
    function flushStylesInPreamble(styleQueue) {
      var hasStylesheets = 0 < styleQueue.sheets.size;
      styleQueue.sheets.forEach(flushStyleInPreamble, this);
      styleQueue.sheets.clear();
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs;
      if (!hasStylesheets || hrefs.length) {
        writeChunk(this, styleTagResourceOpen1);
        writeChunk(this, styleQueue.precedence);
        styleQueue = 0;
        if (hrefs.length) {
          for (writeChunk(this, styleTagResourceOpen2); styleQueue < hrefs.length - 1; styleQueue++)
            writeChunk(this, hrefs[styleQueue]), writeChunk(this, spaceSeparator);
          writeChunk(this, hrefs[styleQueue]);
        }
        writeChunk(this, styleTagResourceOpen3);
        for (styleQueue = 0; styleQueue < rules.length; styleQueue++)
          writeChunk(this, rules[styleQueue]);
        writeChunk(this, styleTagResourceClose);
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function preloadLateStyle(stylesheet) {
      if (0 === stylesheet.state) {
        stylesheet.state = 1;
        var props = stylesheet.props;
        pushLinkImpl(stylesheetFlushingQueue, {
          rel: "preload",
          as: "style",
          href: stylesheet.props.href,
          crossOrigin: props.crossOrigin,
          fetchPriority: props.fetchPriority,
          integrity: props.integrity,
          media: props.media,
          hrefLang: props.hrefLang,
          referrerPolicy: props.referrerPolicy
        });
        for (stylesheet = 0; stylesheet < stylesheetFlushingQueue.length; stylesheet++)
          writeChunk(this, stylesheetFlushingQueue[stylesheet]);
        stylesheetFlushingQueue.length = 0;
      }
    }
    function preloadLateStyles(styleQueue) {
      styleQueue.sheets.forEach(preloadLateStyle, this);
      styleQueue.sheets.clear();
    }
    var arrayFirstOpenBracket = stringToPrecomputedChunk("[");
    var arraySubsequentOpenBracket = stringToPrecomputedChunk(",[");
    var arrayInterstitial = stringToPrecomputedChunk(",");
    var arrayCloseBracket = stringToPrecomputedChunk("]");
    function writeStyleResourceDependenciesInJS(destination, hoistableState) {
      writeChunk(destination, arrayFirstOpenBracket);
      var nextArrayOpenBrackChunk = arrayFirstOpenBracket;
      hoistableState.stylesheets.forEach(function(resource) {
        if (2 !== resource.state)
          if (3 === resource.state)
            writeChunk(destination, nextArrayOpenBrackChunk), writeChunk(
              destination,
              escapeJSObjectForInstructionScripts("" + resource.props.href)
            ), writeChunk(destination, arrayCloseBracket), nextArrayOpenBrackChunk = arraySubsequentOpenBracket;
          else {
            writeChunk(destination, nextArrayOpenBrackChunk);
            var precedence = resource.props["data-precedence"], props = resource.props, coercedHref = sanitizeURL("" + resource.props.href);
            writeChunk(
              destination,
              escapeJSObjectForInstructionScripts(coercedHref)
            );
            precedence = "" + precedence;
            writeChunk(destination, arrayInterstitial);
            writeChunk(
              destination,
              escapeJSObjectForInstructionScripts(precedence)
            );
            for (var propKey in props)
              if (hasOwnProperty2.call(props, propKey) && (precedence = props[propKey], null != precedence))
                switch (propKey) {
                  case "href":
                  case "rel":
                  case "precedence":
                  case "data-precedence":
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  default:
                    writeStyleResourceAttributeInJS(
                      destination,
                      propKey,
                      precedence
                    );
                }
            writeChunk(destination, arrayCloseBracket);
            nextArrayOpenBrackChunk = arraySubsequentOpenBracket;
            resource.state = 3;
          }
      });
      writeChunk(destination, arrayCloseBracket);
    }
    function writeStyleResourceAttributeInJS(destination, name2, value) {
      var attributeName = name2.toLowerCase();
      switch (typeof value) {
        case "function":
        case "symbol":
          return;
      }
      switch (name2) {
        case "innerHTML":
        case "dangerouslySetInnerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "style":
        case "ref":
          return;
        case "className":
          attributeName = "class";
          name2 = "" + value;
          break;
        case "hidden":
          if (false === value) return;
          name2 = "";
          break;
        case "src":
        case "href":
          value = sanitizeURL(value);
          name2 = "" + value;
          break;
        default:
          if (2 < name2.length && ("o" === name2[0] || "O" === name2[0]) && ("n" === name2[1] || "N" === name2[1]) || !isAttributeNameSafe(name2))
            return;
          name2 = "" + value;
      }
      writeChunk(destination, arrayInterstitial);
      writeChunk(destination, escapeJSObjectForInstructionScripts(attributeName));
      writeChunk(destination, arrayInterstitial);
      writeChunk(destination, escapeJSObjectForInstructionScripts(name2));
    }
    function createHoistableState() {
      return { styles: /* @__PURE__ */ new Set(), stylesheets: /* @__PURE__ */ new Set() };
    }
    function prefetchDNS(href) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          if (!resumableState.dnsResources.hasOwnProperty(href)) {
            resumableState.dnsResources[href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity)
              JSCompiler_temp = (header = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=dns-prefetch", 0 <= (resumableState.remainingCapacity -= header.length + 2));
            JSCompiler_temp ? (renderState.resets.dns[href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (header = [], pushLinkImpl(header, { href, rel: "dns-prefetch" }), renderState.preconnects.add(header));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.D(href);
    }
    function preconnect(href, crossOrigin) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          var bucket = "use-credentials" === crossOrigin ? "credentials" : "string" === typeof crossOrigin ? "anonymous" : "default";
          if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {
            resumableState.connectResources[bucket][href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity) {
              JSCompiler_temp = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=preconnect";
              if ("string" === typeof crossOrigin) {
                var escapedCrossOrigin = ("" + crossOrigin).replace(
                  regexForLinkHeaderQuotedParamValueContext,
                  escapeStringForLinkHeaderQuotedParamValueContextReplacer
                );
                JSCompiler_temp += '; crossorigin="' + escapedCrossOrigin + '"';
              }
              JSCompiler_temp = (header = JSCompiler_temp, 0 <= (resumableState.remainingCapacity -= header.length + 2));
            }
            JSCompiler_temp ? (renderState.resets.connect[bucket][href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (bucket = [], pushLinkImpl(bucket, {
              rel: "preconnect",
              href,
              crossOrigin
            }), renderState.preconnects.add(bucket));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.C(href, crossOrigin);
    }
    function preload(href, as2, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (as2 && href) {
          switch (as2) {
            case "image":
              if (options) {
                var imageSrcSet = options.imageSrcSet;
                var imageSizes = options.imageSizes;
                var fetchPriority = options.fetchPriority;
              }
              var key = imageSrcSet ? imageSrcSet + "\n" + (imageSizes || "") : href;
              if (resumableState.imageResources.hasOwnProperty(key)) return;
              resumableState.imageResources[key] = PRELOAD_NO_CREDS;
              resumableState = renderState.headers;
              var header;
              resumableState && 0 < resumableState.remainingCapacity && "string" !== typeof imageSrcSet && "high" === fetchPriority && (header = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key] = PRELOAD_NO_CREDS, resumableState.highImagePreloads && (resumableState.highImagePreloads += ", "), resumableState.highImagePreloads += header) : (resumableState = [], pushLinkImpl(
                resumableState,
                assign(
                  { rel: "preload", href: imageSrcSet ? void 0 : href, as: as2 },
                  options
                )
              ), "high" === fetchPriority ? renderState.highImagePreloads.add(resumableState) : (renderState.bulkPreloads.add(resumableState), renderState.preloads.images.set(key, resumableState)));
              break;
            case "style":
              if (resumableState.styleResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.styleResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.stylesheets.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              break;
            case "script":
              if (resumableState.scriptResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              renderState.preloads.scripts.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.scriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              break;
            default:
              if (resumableState.unknownResources.hasOwnProperty(as2)) {
                if (imageSrcSet = resumableState.unknownResources[as2], imageSrcSet.hasOwnProperty(href))
                  return;
              } else
                imageSrcSet = {}, resumableState.unknownResources[as2] = imageSrcSet;
              imageSrcSet[href] = PRELOAD_NO_CREDS;
              if ((resumableState = renderState.headers) && 0 < resumableState.remainingCapacity && "font" === as2 && (key = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= key.length + 2)))
                renderState.resets.font[href] = PRELOAD_NO_CREDS, resumableState.fontPreloads && (resumableState.fontPreloads += ", "), resumableState.fontPreloads += key;
              else
                switch (resumableState = [], href = assign({ rel: "preload", href, as: as2 }, options), pushLinkImpl(resumableState, href), as2) {
                  case "font":
                    renderState.fontPreloads.add(resumableState);
                    break;
                  default:
                    renderState.bulkPreloads.add(resumableState);
                }
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.L(href, as2, options);
    }
    function preloadModule(href, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          var as2 = options && "string" === typeof options.as ? options.as : "script";
          switch (as2) {
            case "script":
              if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;
              as2 = [];
              resumableState.moduleScriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.moduleScripts.set(href, as2);
              break;
            default:
              if (resumableState.moduleUnknownResources.hasOwnProperty(as2)) {
                var resources = resumableState.unknownResources[as2];
                if (resources.hasOwnProperty(href)) return;
              } else
                resources = {}, resumableState.moduleUnknownResources[as2] = resources;
              as2 = [];
              resources[href] = PRELOAD_NO_CREDS;
          }
          pushLinkImpl(as2, assign({ rel: "modulepreload", href }, options));
          renderState.bulkPreloads.add(as2);
          enqueueFlush(request);
        }
      } else previousDispatcher.m(href, options);
    }
    function preinitStyle(href, precedence, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          precedence = precedence || "default";
          var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
          null !== resourceState && (resumableState.styleResources[href] = null, styleQueue || (styleQueue = {
            precedence: escapeTextForBrowser(precedence),
            rules: [],
            hrefs: [],
            sheets: /* @__PURE__ */ new Map()
          }, renderState.styles.set(precedence, styleQueue)), precedence = {
            state: 0,
            props: assign(
              { rel: "stylesheet", href, "data-precedence": precedence },
              options
            )
          }, resourceState && (2 === resourceState.length && adoptPreloadCredentials(precedence.props, resourceState), (renderState = renderState.preloads.stylesheets.get(href)) && 0 < renderState.length ? renderState.length = 0 : precedence.state = 1), styleQueue.sheets.set(href, precedence), enqueueFlush(request));
        }
      } else previousDispatcher.S(href, precedence, options);
    }
    function preinitScript(src, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.scriptResources.hasOwnProperty(src) ? resumableState.scriptResources[src] : void 0;
          null !== resourceState && (resumableState.scriptResources[src] = null, options = assign({ src, async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.scripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.X(src, options);
    }
    function preinitModuleScript(src, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.moduleScriptResources.hasOwnProperty(
            src
          ) ? resumableState.moduleScriptResources[src] : void 0;
          null !== resourceState && (resumableState.moduleScriptResources[src] = null, options = assign({ src, type: "module", async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.moduleScripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.M(src, options);
    }
    function adoptPreloadCredentials(target, preloadState) {
      null == target.crossOrigin && (target.crossOrigin = preloadState[0]);
      null == target.integrity && (target.integrity = preloadState[1]);
    }
    function getPreloadAsHeader(href, as2, params) {
      href = ("" + href).replace(
        regexForHrefInLinkHeaderURLContext,
        escapeHrefForLinkHeaderURLContextReplacer
      );
      as2 = ("" + as2).replace(
        regexForLinkHeaderQuotedParamValueContext,
        escapeStringForLinkHeaderQuotedParamValueContextReplacer
      );
      as2 = "<" + href + '>; rel=preload; as="' + as2 + '"';
      for (var paramName in params)
        hasOwnProperty2.call(params, paramName) && (href = params[paramName], "string" === typeof href && (as2 += "; " + paramName.toLowerCase() + '="' + ("" + href).replace(
          regexForLinkHeaderQuotedParamValueContext,
          escapeStringForLinkHeaderQuotedParamValueContextReplacer
        ) + '"'));
      return as2;
    }
    var regexForHrefInLinkHeaderURLContext = /[<>\r\n]/g;
    function escapeHrefForLinkHeaderURLContextReplacer(match) {
      switch (match) {
        case "<":
          return "%3C";
        case ">":
          return "%3E";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    var regexForLinkHeaderQuotedParamValueContext = /["';,\r\n]/g;
    function escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {
      switch (match) {
        case '"':
          return "%22";
        case "'":
          return "%27";
        case ";":
          return "%3B";
        case ",":
          return "%2C";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    function hoistStyleQueueDependency(styleQueue) {
      this.styles.add(styleQueue);
    }
    function hoistStylesheetDependency(stylesheet) {
      this.stylesheets.add(stylesheet);
    }
    var bind = Function.prototype.bind;
    var requestStorage = new async_hooks.AsyncLocalStorage();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (type.$$typeof) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return (type.displayName || "Context") + ".Provider";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
            return type;
          case REACT_MEMO_TYPE:
            return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x3) {
            }
        }
      return null;
    }
    var emptyContextObject = {};
    var currentActiveSnapshot = null;
    function popToNearestCommonAncestor(prev, next) {
      if (prev !== next) {
        prev.context._currentValue = prev.parentValue;
        prev = prev.parent;
        var parentNext = next.parent;
        if (null === prev) {
          if (null !== parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
        } else {
          if (null === parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
          popToNearestCommonAncestor(prev, parentNext);
        }
        next.context._currentValue = next.value;
      }
    }
    function popAllPrevious(prev) {
      prev.context._currentValue = prev.parentValue;
      prev = prev.parent;
      null !== prev && popAllPrevious(prev);
    }
    function pushAllNext(next) {
      var parentNext = next.parent;
      null !== parentNext && pushAllNext(parentNext);
      next.context._currentValue = next.value;
    }
    function popPreviousToCommonLevel(prev, next) {
      prev.context._currentValue = prev.parentValue;
      prev = prev.parent;
      if (null === prev)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : popPreviousToCommonLevel(prev, next);
    }
    function popNextToCommonLevel(prev, next) {
      var parentNext = next.parent;
      if (null === parentNext)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext);
      next.context._currentValue = next.value;
    }
    function switchContext(newSnapshot) {
      var prev = currentActiveSnapshot;
      prev !== newSnapshot && (null === prev ? pushAllNext(newSnapshot) : null === newSnapshot ? popAllPrevious(prev) : prev.depth === newSnapshot.depth ? popToNearestCommonAncestor(prev, newSnapshot) : prev.depth > newSnapshot.depth ? popPreviousToCommonLevel(prev, newSnapshot) : popNextToCommonLevel(prev, newSnapshot), currentActiveSnapshot = newSnapshot);
    }
    var classComponentUpdater = {
      enqueueSetState: function(inst, payload) {
        inst = inst._reactInternals;
        null !== inst.queue && inst.queue.push(payload);
      },
      enqueueReplaceState: function(inst, payload) {
        inst = inst._reactInternals;
        inst.replace = true;
        inst.queue = [payload];
      },
      enqueueForceUpdate: function() {
      }
    };
    var emptyTreeContext = { id: 1, overflow: "" };
    function pushTreeContext(baseContext, totalChildren, index) {
      var baseIdWithLeadingBit = baseContext.id;
      baseContext = baseContext.overflow;
      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
      baseIdWithLeadingBit &= ~(1 << baseLength);
      index += 1;
      var length = 32 - clz32(totalChildren) + baseLength;
      if (30 < length) {
        var numberOfOverflowBits = baseLength - baseLength % 5;
        length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
        baseIdWithLeadingBit >>= numberOfOverflowBits;
        baseLength -= numberOfOverflowBits;
        return {
          id: 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit,
          overflow: length + baseContext
        };
      }
      return {
        id: 1 << length | index << baseLength | baseIdWithLeadingBit,
        overflow: baseContext
      };
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x3) {
      x3 >>>= 0;
      return 0 === x3 ? 32 : 31 - (log(x3) / LN2 | 0) | 0;
    }
    var SuspenseException = Error(
      "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."
    );
    function noop$2() {
    }
    function trackUsedThenable(thenableState2, thenable, index) {
      index = thenableState2[index];
      void 0 === index ? thenableState2.push(thenable) : index !== thenable && (thenable.then(noop$2, noop$2), thenable = index);
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          "string" === typeof thenable.status ? thenable.then(noop$2, noop$2) : (thenableState2 = thenable, thenableState2.status = "pending", thenableState2.then(
            function(fulfilledValue) {
              if ("pending" === thenable.status) {
                var fulfilledThenable = thenable;
                fulfilledThenable.status = "fulfilled";
                fulfilledThenable.value = fulfilledValue;
              }
            },
            function(error) {
              if ("pending" === thenable.status) {
                var rejectedThenable = thenable;
                rejectedThenable.status = "rejected";
                rejectedThenable.reason = error;
              }
            }
          ));
          switch (thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
          suspendedThenable = thenable;
          throw SuspenseException;
      }
    }
    var suspendedThenable = null;
    function getSuspendedThenable() {
      if (null === suspendedThenable)
        throw Error(
          "Expected a suspended thenable. This is a bug in React. Please file an issue."
        );
      var thenable = suspendedThenable;
      suspendedThenable = null;
      return thenable;
    }
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var currentlyRenderingComponent = null;
    var currentlyRenderingTask = null;
    var currentlyRenderingRequest = null;
    var currentlyRenderingKeyPath = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var isReRender = false;
    var didScheduleRenderPhaseUpdate = false;
    var localIdCounter = 0;
    var actionStateCounter = 0;
    var actionStateMatchingIndex = -1;
    var thenableIndexCounter = 0;
    var thenableState = null;
    var renderPhaseUpdates = null;
    var numberOfReRenders = 0;
    function resolveCurrentlyRenderingComponent() {
      if (null === currentlyRenderingComponent)
        throw Error(
          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
        );
      return currentlyRenderingComponent;
    }
    function createHook() {
      if (0 < numberOfReRenders)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function createWorkInProgressHook() {
      null === workInProgressHook ? null === firstWorkInProgressHook ? (isReRender = false, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = true, workInProgressHook = firstWorkInProgressHook) : null === workInProgressHook.next ? (isReRender = false, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = true, workInProgressHook = workInProgressHook.next);
      return workInProgressHook;
    }
    function getThenableStateAfterSuspending() {
      var state2 = thenableState;
      thenableState = null;
      return state2;
    }
    function resetHooksState() {
      currentlyRenderingKeyPath = currentlyRenderingRequest = currentlyRenderingTask = currentlyRenderingComponent = null;
      didScheduleRenderPhaseUpdate = false;
      firstWorkInProgressHook = null;
      numberOfReRenders = 0;
      workInProgressHook = renderPhaseUpdates = null;
    }
    function basicStateReducer(state2, action) {
      return "function" === typeof action ? action(state2) : action;
    }
    function useReducer2(reducer2, initialArg, init) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      if (isReRender) {
        var queue = workInProgressHook.queue;
        initialArg = queue.dispatch;
        if (null !== renderPhaseUpdates && (init = renderPhaseUpdates.get(queue), void 0 !== init)) {
          renderPhaseUpdates.delete(queue);
          queue = workInProgressHook.memoizedState;
          do
            queue = reducer2(queue, init.action), init = init.next;
          while (null !== init);
          workInProgressHook.memoizedState = queue;
          return [queue, initialArg];
        }
        return [workInProgressHook.memoizedState, initialArg];
      }
      reducer2 = reducer2 === basicStateReducer ? "function" === typeof initialArg ? initialArg() : initialArg : void 0 !== init ? init(initialArg) : initialArg;
      workInProgressHook.memoizedState = reducer2;
      reducer2 = workInProgressHook.queue = { last: null, dispatch: null };
      reducer2 = reducer2.dispatch = dispatchAction.bind(
        null,
        currentlyRenderingComponent,
        reducer2
      );
      return [workInProgressHook.memoizedState, reducer2];
    }
    function useMemo10(nextCreate, deps) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      if (null !== workInProgressHook) {
        var prevState = workInProgressHook.memoizedState;
        if (null !== prevState && null !== deps) {
          var prevDeps = prevState[1];
          a: if (null === prevDeps) prevDeps = false;
          else {
            for (var i11 = 0; i11 < prevDeps.length && i11 < deps.length; i11++)
              if (!objectIs(deps[i11], prevDeps[i11])) {
                prevDeps = false;
                break a;
              }
            prevDeps = true;
          }
          if (prevDeps) return prevState[0];
        }
      }
      nextCreate = nextCreate();
      workInProgressHook.memoizedState = [nextCreate, deps];
      return nextCreate;
    }
    function dispatchAction(componentIdentity, queue, action) {
      if (25 <= numberOfReRenders)
        throw Error(
          "Too many re-renders. React limits the number of renders to prevent an infinite loop."
        );
      if (componentIdentity === currentlyRenderingComponent)
        if (didScheduleRenderPhaseUpdate = true, componentIdentity = { action, next: null }, null === renderPhaseUpdates && (renderPhaseUpdates = /* @__PURE__ */ new Map()), action = renderPhaseUpdates.get(queue), void 0 === action)
          renderPhaseUpdates.set(queue, componentIdentity);
        else {
          for (queue = action; null !== queue.next; ) queue = queue.next;
          queue.next = componentIdentity;
        }
    }
    function unsupportedStartTransition() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function unsupportedSetOptimisticState() {
      throw Error("Cannot update optimistic state while rendering.");
    }
    function createPostbackActionStateKey(permalink, componentKeyPath, hookIndex) {
      if (void 0 !== permalink) return "p" + permalink;
      permalink = JSON.stringify([componentKeyPath, null, hookIndex]);
      componentKeyPath = crypto.createHash("md5");
      componentKeyPath.update(permalink);
      return "k" + componentKeyPath.digest("hex");
    }
    function useActionState(action, initialState, permalink) {
      resolveCurrentlyRenderingComponent();
      var actionStateHookIndex = actionStateCounter++, request = currentlyRenderingRequest;
      if ("function" === typeof action.$$FORM_ACTION) {
        var nextPostbackStateKey = null, componentKeyPath = currentlyRenderingKeyPath;
        request = request.formState;
        var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;
        if (null !== request && "function" === typeof isSignatureEqual) {
          var postbackKey = request[1];
          isSignatureEqual.call(action, request[2], request[3]) && (nextPostbackStateKey = createPostbackActionStateKey(
            permalink,
            componentKeyPath,
            actionStateHookIndex
          ), postbackKey === nextPostbackStateKey && (actionStateMatchingIndex = actionStateHookIndex, initialState = request[0]));
        }
        var boundAction = action.bind(null, initialState);
        action = function(payload) {
          boundAction(payload);
        };
        "function" === typeof boundAction.$$FORM_ACTION && (action.$$FORM_ACTION = function(prefix3) {
          prefix3 = boundAction.$$FORM_ACTION(prefix3);
          void 0 !== permalink && (permalink += "", prefix3.action = permalink);
          var formData = prefix3.data;
          formData && (null === nextPostbackStateKey && (nextPostbackStateKey = createPostbackActionStateKey(
            permalink,
            componentKeyPath,
            actionStateHookIndex
          )), formData.append("$ACTION_KEY", nextPostbackStateKey));
          return prefix3;
        });
        return [initialState, action, false];
      }
      var boundAction$22 = action.bind(null, initialState);
      return [
        initialState,
        function(payload) {
          boundAction$22(payload);
        },
        false
      ];
    }
    function unwrapThenable(thenable) {
      var index = thenableIndexCounter;
      thenableIndexCounter += 1;
      null === thenableState && (thenableState = []);
      return trackUsedThenable(thenableState, thenable, index);
    }
    function unsupportedRefresh() {
      throw Error("Cache cannot be refreshed during server rendering.");
    }
    function noop$1() {
    }
    var HooksDispatcher = {
      readContext: function(context) {
        return context._currentValue;
      },
      use: function(usable) {
        if (null !== usable && "object" === typeof usable) {
          if ("function" === typeof usable.then) return unwrapThenable(usable);
          if (usable.$$typeof === REACT_CONTEXT_TYPE) return usable._currentValue;
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
      },
      useContext: function(context) {
        resolveCurrentlyRenderingComponent();
        return context._currentValue;
      },
      useMemo: useMemo10,
      useReducer: useReducer2,
      useRef: function(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
        workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        return null === previousRef ? (initialValue = { current: initialValue }, workInProgressHook.memoizedState = initialValue) : previousRef;
      },
      useState: function(initialState) {
        return useReducer2(basicStateReducer, initialState);
      },
      useInsertionEffect: noop$1,
      useLayoutEffect: noop$1,
      useCallback: function(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      },
      useImperativeHandle: noop$1,
      useEffect: noop$1,
      useDebugValue: noop$1,
      useDeferredValue: function(value, initialValue) {
        resolveCurrentlyRenderingComponent();
        return void 0 !== initialValue ? initialValue : value;
      },
      useTransition: function() {
        resolveCurrentlyRenderingComponent();
        return [false, unsupportedStartTransition];
      },
      useId: function() {
        var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
        var overflow = JSCompiler_inline_result.overflow;
        JSCompiler_inline_result = JSCompiler_inline_result.id;
        JSCompiler_inline_result = (JSCompiler_inline_result & ~(1 << 32 - clz32(JSCompiler_inline_result) - 1)).toString(32) + overflow;
        var resumableState = currentResumableState;
        if (null === resumableState)
          throw Error(
            "Invalid hook call. Hooks can only be called inside of the body of a function component."
          );
        overflow = localIdCounter++;
        JSCompiler_inline_result = "\xAB" + resumableState.idPrefix + "R" + JSCompiler_inline_result;
        0 < overflow && (JSCompiler_inline_result += "H" + overflow.toString(32));
        return JSCompiler_inline_result + "\xBB";
      },
      useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
        if (void 0 === getServerSnapshot)
          throw Error(
            "Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering."
          );
        return getServerSnapshot();
      },
      useOptimistic: function(passthrough) {
        resolveCurrentlyRenderingComponent();
        return [passthrough, unsupportedSetOptimisticState];
      },
      useActionState,
      useFormState: useActionState,
      useHostTransitionStatus: function() {
        resolveCurrentlyRenderingComponent();
        return sharedNotPendingObject;
      },
      useMemoCache: function(size) {
        for (var data = Array(size), i11 = 0; i11 < size; i11++)
          data[i11] = REACT_MEMO_CACHE_SENTINEL;
        return data;
      },
      useCacheRefresh: function() {
        return unsupportedRefresh;
      }
    };
    var currentResumableState = null;
    var DefaultAsyncDispatcher = {
      getCacheForType: function() {
        throw Error("Not implemented.");
      }
    };
    function prepareStackTrace(error, structuredStackTrace) {
      error = (error.name || "Error") + ": " + (error.message || "");
      for (var i11 = 0; i11 < structuredStackTrace.length; i11++)
        error += "\n    at " + structuredStackTrace[i11].toString();
      return error;
    }
    var prefix2;
    var suffix;
    function describeBuiltInComponentFrame(name2) {
      if (void 0 === prefix2)
        try {
          throw Error();
        } catch (x3) {
          var match = x3.stack.trim().match(/\n( *(at )?)/);
          prefix2 = match && match[1] || "";
          suffix = -1 < x3.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x3.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
      return "\n" + prefix2 + name2 + suffix;
    }
    var reentry = false;
    function describeNativeComponentFrame(fn, construct) {
      if (!fn || reentry) return "";
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = prepareStackTrace;
      try {
        var RunInRootFrame = {
          DetermineComponentFrameRoot: function() {
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if ("object" === typeof Reflect && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x3) {
                    var control = x3;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x$24) {
                    control = x$24;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x$25) {
                  control = x$25;
                }
                (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {
                });
              }
            } catch (sample) {
              if (sample && control && "string" === typeof sample.stack)
                return [sample.stack, control.stack];
            }
            return [null, null];
          }
        };
        RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
        var namePropDescriptor = Object.getOwnPropertyDescriptor(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name"
        );
        namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name",
          { value: "DetermineComponentFrameRoot" }
        );
        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
        if (sampleStack && controlStack) {
          var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
          for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot"); )
            RunInRootFrame++;
          for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes(
            "DetermineComponentFrameRoot"
          ); )
            namePropDescriptor++;
          if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length)
            for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]; )
              namePropDescriptor--;
          for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--)
            if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
                do
                  if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
                    var frame3 = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
                    fn.displayName && frame3.includes("<anonymous>") && (frame3 = frame3.replace("<anonymous>", fn.displayName));
                    return frame3;
                  }
                while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
              }
              break;
            }
        }
      } finally {
        reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
      }
      return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
    }
    function describeComponentStackByType(type) {
      if ("string" === typeof type) return describeBuiltInComponentFrame(type);
      if ("function" === typeof type)
        return type.prototype && type.prototype.isReactComponent ? describeNativeComponentFrame(type, true) : describeNativeComponentFrame(type, false);
      if ("object" === typeof type && null !== type) {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeNativeComponentFrame(type.render, false);
          case REACT_MEMO_TYPE:
            return describeNativeComponentFrame(type.type, false);
          case REACT_LAZY_TYPE:
            var lazyComponent = type, payload = lazyComponent._payload;
            lazyComponent = lazyComponent._init;
            try {
              type = lazyComponent(payload);
            } catch (x3) {
              return describeBuiltInComponentFrame("Lazy");
            }
            return describeComponentStackByType(type);
        }
        if ("string" === typeof type.name)
          return payload = type.env, describeBuiltInComponentFrame(
            type.name + (payload ? " [" + payload + "]" : "")
          );
      }
      switch (type) {
        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame("SuspenseList");
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame("Suspense");
      }
      return "";
    }
    function defaultErrorHandler(error) {
      if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
        var JSCompiler_inline_result = error.environmentName;
        error = [error].slice(0);
        "string" === typeof error[0] ? error.splice(
          0,
          1,
          "\x1B[0m\x1B[7m%c%s\x1B[0m%c " + error[0],
          "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px",
          " " + JSCompiler_inline_result + " ",
          ""
        ) : error.splice(
          0,
          0,
          "\x1B[0m\x1B[7m%c%s\x1B[0m%c ",
          "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px",
          " " + JSCompiler_inline_result + " ",
          ""
        );
        error.unshift(console);
        JSCompiler_inline_result = bind.apply(console.error, error);
        JSCompiler_inline_result();
      } else console.error(error);
      return null;
    }
    function noop3() {
    }
    function RequestInstance(resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      var abortSet = /* @__PURE__ */ new Set();
      this.destination = null;
      this.flushScheduled = false;
      this.resumableState = resumableState;
      this.renderState = renderState;
      this.rootFormatContext = rootFormatContext;
      this.progressiveChunkSize = void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;
      this.status = 10;
      this.fatalError = null;
      this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
      this.completedPreambleSegments = this.completedRootSegment = null;
      this.abortableTasks = abortSet;
      this.pingedTasks = [];
      this.clientRenderedBoundaries = [];
      this.completedBoundaries = [];
      this.partialBoundaries = [];
      this.trackedPostpones = null;
      this.onError = void 0 === onError ? defaultErrorHandler : onError;
      this.onPostpone = void 0 === onPostpone ? noop3 : onPostpone;
      this.onAllReady = void 0 === onAllReady ? noop3 : onAllReady;
      this.onShellReady = void 0 === onShellReady ? noop3 : onShellReady;
      this.onShellError = void 0 === onShellError ? noop3 : onShellError;
      this.onFatalError = void 0 === onFatalError ? noop3 : onFatalError;
      this.formState = void 0 === formState ? null : formState;
    }
    function createRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      resumableState = new RequestInstance(
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        formState
      );
      renderState = createPendingSegment(
        resumableState,
        0,
        null,
        rootFormatContext,
        false,
        false
      );
      renderState.parentFlushed = true;
      children = createRenderTask(
        resumableState,
        null,
        children,
        -1,
        null,
        renderState,
        null,
        null,
        resumableState.abortableTasks,
        null,
        rootFormatContext,
        null,
        emptyTreeContext,
        null,
        false
      );
      pushComponentStack(children);
      resumableState.pingedTasks.push(children);
      return resumableState;
    }
    function createPrerenderRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone) {
      children = createRequest(
        children,
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        void 0
      );
      children.trackedPostpones = {
        workingMap: /* @__PURE__ */ new Map(),
        rootNodes: [],
        rootSlots: null
      };
      return children;
    }
    var currentRequest = null;
    function resolveRequest() {
      if (currentRequest) return currentRequest;
      var store = requestStorage.getStore();
      return store ? store : null;
    }
    function pingTask(request, task) {
      request.pingedTasks.push(task);
      1 === request.pingedTasks.length && (request.flushScheduled = null !== request.destination, null !== request.trackedPostpones || 10 === request.status ? scheduleMicrotask(function() {
        return performWork(request);
      }) : setImmediate(function() {
        return performWork(request);
      }));
    }
    function createSuspenseBoundary(request, fallbackAbortableTasks, contentPreamble, fallbackPreamble) {
      return {
        status: 0,
        rootSegmentID: -1,
        parentFlushed: false,
        pendingTasks: 0,
        completedSegments: [],
        byteSize: 0,
        fallbackAbortableTasks,
        errorDigest: null,
        contentState: createHoistableState(),
        fallbackState: createHoistableState(),
        contentPreamble,
        fallbackPreamble,
        trackedContentKeyPath: null,
        trackedFallbackNode: null
      };
    }
    function createRenderTask(request, thenableState2, node, childIndex, blockedBoundary, blockedSegment, blockedPreamble, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      var task = {
        replay: null,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment,
        blockedPreamble,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createReplayTask(request, thenableState2, replay, node, childIndex, blockedBoundary, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      replay.pendingTasks++;
      var task = {
        replay,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment: null,
        blockedPreamble: null,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createPendingSegment(request, index, boundary, parentFormatContext, lastPushedText, textEmbedded) {
      return {
        status: 0,
        parentFlushed: false,
        id: -1,
        index,
        chunks: [],
        children: [],
        preambleChildren: [],
        parentFormatContext,
        boundary,
        lastPushedText,
        textEmbedded
      };
    }
    function pushComponentStack(task) {
      var node = task.node;
      if ("object" === typeof node && null !== node)
        switch (node.$$typeof) {
          case REACT_ELEMENT_TYPE:
            task.componentStack = { parent: task.componentStack, type: node.type };
        }
    }
    function getThrownInfo(node$jscomp$0) {
      var errorInfo = {};
      node$jscomp$0 && Object.defineProperty(errorInfo, "componentStack", {
        configurable: true,
        enumerable: true,
        get: function() {
          try {
            var info = "", node = node$jscomp$0;
            do
              info += describeComponentStackByType(node.type), node = node.parent;
            while (node);
            var JSCompiler_inline_result = info;
          } catch (x3) {
            JSCompiler_inline_result = "\nError generating stack: " + x3.message + "\n" + x3.stack;
          }
          Object.defineProperty(errorInfo, "componentStack", {
            value: JSCompiler_inline_result
          });
          return JSCompiler_inline_result;
        }
      });
      return errorInfo;
    }
    function logRecoverableError(request, error, errorInfo) {
      request = request.onError;
      error = request(error, errorInfo);
      if (null == error || "string" === typeof error) return error;
    }
    function fatalError(request, error) {
      var onShellError = request.onShellError, onFatalError = request.onFatalError;
      onShellError(error);
      onFatalError(error);
      null !== request.destination ? (request.status = 14, request.destination.destroy(error)) : (request.status = 13, request.fatalError = error);
    }
    function renderWithHooks(request, task, keyPath, Component3, props, secondArg) {
      var prevThenableState = task.thenableState;
      task.thenableState = null;
      currentlyRenderingComponent = {};
      currentlyRenderingTask = task;
      currentlyRenderingRequest = request;
      currentlyRenderingKeyPath = keyPath;
      actionStateCounter = localIdCounter = 0;
      actionStateMatchingIndex = -1;
      thenableIndexCounter = 0;
      thenableState = prevThenableState;
      for (request = Component3(props, secondArg); didScheduleRenderPhaseUpdate; )
        didScheduleRenderPhaseUpdate = false, actionStateCounter = localIdCounter = 0, actionStateMatchingIndex = -1, thenableIndexCounter = 0, numberOfReRenders += 1, workInProgressHook = null, request = Component3(props, secondArg);
      resetHooksState();
      return request;
    }
    function finishFunctionComponent(request, task, keyPath, children, hasId, actionStateCount, actionStateMatchingIndex2) {
      var didEmitActionStateMarkers = false;
      if (0 !== actionStateCount && null !== request.formState) {
        var segment = task.blockedSegment;
        if (null !== segment) {
          didEmitActionStateMarkers = true;
          segment = segment.chunks;
          for (var i11 = 0; i11 < actionStateCount; i11++)
            i11 === actionStateMatchingIndex2 ? segment.push(formStateMarkerIsMatching) : segment.push(formStateMarkerIsNotMatching);
        }
      }
      actionStateCount = task.keyPath;
      task.keyPath = keyPath;
      hasId ? (keyPath = task.treeContext, task.treeContext = pushTreeContext(keyPath, 1, 0), renderNode(request, task, children, -1), task.treeContext = keyPath) : didEmitActionStateMarkers ? renderNode(request, task, children, -1) : renderNodeDestructive(request, task, children, -1);
      task.keyPath = actionStateCount;
    }
    function renderElement(request, task, keyPath, type, props, ref) {
      if ("function" === typeof type)
        if (type.prototype && type.prototype.isReactComponent) {
          var newProps = props;
          if ("ref" in props) {
            newProps = {};
            for (var propName in props)
              "ref" !== propName && (newProps[propName] = props[propName]);
          }
          var defaultProps62 = type.defaultProps;
          if (defaultProps62) {
            newProps === props && (newProps = assign({}, newProps, props));
            for (var propName$33 in defaultProps62)
              void 0 === newProps[propName$33] && (newProps[propName$33] = defaultProps62[propName$33]);
          }
          props = newProps;
          newProps = emptyContextObject;
          defaultProps62 = type.contextType;
          "object" === typeof defaultProps62 && null !== defaultProps62 && (newProps = defaultProps62._currentValue);
          newProps = new type(props, newProps);
          var initialState = void 0 !== newProps.state ? newProps.state : null;
          newProps.updater = classComponentUpdater;
          newProps.props = props;
          newProps.state = initialState;
          defaultProps62 = { queue: [], replace: false };
          newProps._reactInternals = defaultProps62;
          ref = type.contextType;
          newProps.context = "object" === typeof ref && null !== ref ? ref._currentValue : emptyContextObject;
          ref = type.getDerivedStateFromProps;
          "function" === typeof ref && (ref = ref(props, initialState), initialState = null === ref || void 0 === ref ? initialState : assign({}, initialState, ref), newProps.state = initialState);
          if ("function" !== typeof type.getDerivedStateFromProps && "function" !== typeof newProps.getSnapshotBeforeUpdate && ("function" === typeof newProps.UNSAFE_componentWillMount || "function" === typeof newProps.componentWillMount))
            if (type = newProps.state, "function" === typeof newProps.componentWillMount && newProps.componentWillMount(), "function" === typeof newProps.UNSAFE_componentWillMount && newProps.UNSAFE_componentWillMount(), type !== newProps.state && classComponentUpdater.enqueueReplaceState(
              newProps,
              newProps.state,
              null
            ), null !== defaultProps62.queue && 0 < defaultProps62.queue.length)
              if (type = defaultProps62.queue, ref = defaultProps62.replace, defaultProps62.queue = null, defaultProps62.replace = false, ref && 1 === type.length)
                newProps.state = type[0];
              else {
                defaultProps62 = ref ? type[0] : newProps.state;
                initialState = true;
                for (ref = ref ? 1 : 0; ref < type.length; ref++)
                  propName$33 = type[ref], propName$33 = "function" === typeof propName$33 ? propName$33.call(newProps, defaultProps62, props, void 0) : propName$33, null != propName$33 && (initialState ? (initialState = false, defaultProps62 = assign({}, defaultProps62, propName$33)) : assign(defaultProps62, propName$33));
                newProps.state = defaultProps62;
              }
            else defaultProps62.queue = null;
          type = newProps.render();
          if (12 === request.status) throw null;
          props = task.keyPath;
          task.keyPath = keyPath;
          renderNodeDestructive(request, task, type, -1);
          task.keyPath = props;
        } else {
          type = renderWithHooks(request, task, keyPath, type, props, void 0);
          if (12 === request.status) throw null;
          finishFunctionComponent(
            request,
            task,
            keyPath,
            type,
            0 !== localIdCounter,
            actionStateCounter,
            actionStateMatchingIndex
          );
        }
      else if ("string" === typeof type)
        if (newProps = task.blockedSegment, null === newProps)
          newProps = props.children, defaultProps62 = task.formatContext, initialState = task.keyPath, task.formatContext = getChildFormatContext(defaultProps62, type, props), task.keyPath = keyPath, renderNode(request, task, newProps, -1), task.formatContext = defaultProps62, task.keyPath = initialState;
        else {
          ref = pushStartInstance(
            newProps.chunks,
            type,
            props,
            request.resumableState,
            request.renderState,
            task.blockedPreamble,
            task.hoistableState,
            task.formatContext,
            newProps.lastPushedText,
            task.isFallback
          );
          newProps.lastPushedText = false;
          defaultProps62 = task.formatContext;
          initialState = task.keyPath;
          task.keyPath = keyPath;
          3 === (task.formatContext = getChildFormatContext(defaultProps62, type, props)).insertionMode ? (keyPath = createPendingSegment(
            request,
            0,
            null,
            task.formatContext,
            false,
            false
          ), newProps.preambleChildren.push(keyPath), keyPath = createRenderTask(
            request,
            null,
            ref,
            -1,
            task.blockedBoundary,
            keyPath,
            task.blockedPreamble,
            task.hoistableState,
            request.abortableTasks,
            task.keyPath,
            task.formatContext,
            task.context,
            task.treeContext,
            task.componentStack,
            task.isFallback
          ), pushComponentStack(keyPath), request.pingedTasks.push(keyPath)) : renderNode(request, task, ref, -1);
          task.formatContext = defaultProps62;
          task.keyPath = initialState;
          a: {
            task = newProps.chunks;
            request = request.resumableState;
            switch (type) {
              case "title":
              case "style":
              case "script":
              case "area":
              case "base":
              case "br":
              case "col":
              case "embed":
              case "hr":
              case "img":
              case "input":
              case "keygen":
              case "link":
              case "meta":
              case "param":
              case "source":
              case "track":
              case "wbr":
                break a;
              case "body":
                if (1 >= defaultProps62.insertionMode) {
                  request.hasBody = true;
                  break a;
                }
                break;
              case "html":
                if (0 === defaultProps62.insertionMode) {
                  request.hasHtml = true;
                  break a;
                }
                break;
              case "head":
                if (1 >= defaultProps62.insertionMode) break a;
            }
            task.push(endChunkForTag(type));
          }
          newProps.lastPushedText = false;
        }
      else {
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_ACTIVITY_TYPE:
            "hidden" !== props.mode && (type = task.keyPath, task.keyPath = keyPath, renderNodeDestructive(request, task, props.children, -1), task.keyPath = type);
            return;
          case REACT_SUSPENSE_LIST_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_VIEW_TRANSITION_TYPE:
          case REACT_SCOPE_TYPE:
            throw Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE:
            a: if (null !== task.replay) {
              type = task.keyPath;
              task.keyPath = keyPath;
              keyPath = props.children;
              try {
                renderNode(request, task, keyPath, -1);
              } finally {
                task.keyPath = type;
              }
            } else {
              type = task.keyPath;
              var parentBoundary = task.blockedBoundary;
              ref = task.blockedPreamble;
              var parentHoistableState = task.hoistableState;
              propName$33 = task.blockedSegment;
              propName = props.fallback;
              props = props.children;
              var fallbackAbortSet = /* @__PURE__ */ new Set();
              var newBoundary = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                request,
                fallbackAbortSet,
                createPreambleState(),
                createPreambleState()
              ) : createSuspenseBoundary(request, fallbackAbortSet, null, null);
              null !== request.trackedPostpones && (newBoundary.trackedContentKeyPath = keyPath);
              var boundarySegment = createPendingSegment(
                request,
                propName$33.chunks.length,
                newBoundary,
                task.formatContext,
                false,
                false
              );
              propName$33.children.push(boundarySegment);
              propName$33.lastPushedText = false;
              var contentRootSegment = createPendingSegment(
                request,
                0,
                null,
                task.formatContext,
                false,
                false
              );
              contentRootSegment.parentFlushed = true;
              if (null !== request.trackedPostpones) {
                newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
                defaultProps62 = [newProps[1], newProps[2], [], null];
                request.trackedPostpones.workingMap.set(newProps, defaultProps62);
                newBoundary.trackedFallbackNode = defaultProps62;
                task.blockedSegment = boundarySegment;
                task.blockedPreamble = newBoundary.fallbackPreamble;
                task.keyPath = newProps;
                boundarySegment.status = 6;
                try {
                  renderNode(request, task, propName, -1), boundarySegment.lastPushedText && boundarySegment.textEmbedded && boundarySegment.chunks.push(textSeparator), boundarySegment.status = 1;
                } catch (thrownValue) {
                  throw boundarySegment.status = 12 === request.status ? 3 : 4, thrownValue;
                } finally {
                  task.blockedSegment = propName$33, task.blockedPreamble = ref, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  props,
                  -1,
                  newBoundary,
                  contentRootSegment,
                  newBoundary.contentPreamble,
                  newBoundary.contentState,
                  task.abortSet,
                  keyPath,
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  task.isFallback
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              } else {
                task.blockedBoundary = newBoundary;
                task.blockedPreamble = newBoundary.contentPreamble;
                task.hoistableState = newBoundary.contentState;
                task.blockedSegment = contentRootSegment;
                task.keyPath = keyPath;
                contentRootSegment.status = 6;
                try {
                  if (renderNode(request, task, props, -1), contentRootSegment.lastPushedText && contentRootSegment.textEmbedded && contentRootSegment.chunks.push(textSeparator), contentRootSegment.status = 1, queueCompletedSegment(newBoundary, contentRootSegment), 0 === newBoundary.pendingTasks && 0 === newBoundary.status) {
                    newBoundary.status = 1;
                    0 === request.pendingRootTasks && task.blockedPreamble && preparePreamble(request);
                    break a;
                  }
                } catch (thrownValue$28) {
                  newBoundary.status = 4, 12 === request.status ? (contentRootSegment.status = 3, newProps = request.fatalError) : (contentRootSegment.status = 4, newProps = thrownValue$28), defaultProps62 = getThrownInfo(task.componentStack), initialState = logRecoverableError(
                    request,
                    newProps,
                    defaultProps62
                  ), newBoundary.errorDigest = initialState, untrackBoundary(request, newBoundary);
                } finally {
                  task.blockedBoundary = parentBoundary, task.blockedPreamble = ref, task.hoistableState = parentHoistableState, task.blockedSegment = propName$33, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  propName,
                  -1,
                  parentBoundary,
                  boundarySegment,
                  newBoundary.fallbackPreamble,
                  newBoundary.fallbackState,
                  fallbackAbortSet,
                  [keyPath[0], "Suspense Fallback", keyPath[2]],
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  true
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              }
            }
            return;
        }
        if ("object" === typeof type && null !== type)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              if ("ref" in props)
                for (newBoundary in newProps = {}, props)
                  "ref" !== newBoundary && (newProps[newBoundary] = props[newBoundary]);
              else newProps = props;
              type = renderWithHooks(
                request,
                task,
                keyPath,
                type.render,
                newProps,
                ref
              );
              finishFunctionComponent(
                request,
                task,
                keyPath,
                type,
                0 !== localIdCounter,
                actionStateCounter,
                actionStateMatchingIndex
              );
              return;
            case REACT_MEMO_TYPE:
              renderElement(request, task, keyPath, type.type, props, ref);
              return;
            case REACT_PROVIDER_TYPE:
            case REACT_CONTEXT_TYPE:
              defaultProps62 = props.children;
              newProps = task.keyPath;
              props = props.value;
              initialState = type._currentValue;
              type._currentValue = props;
              ref = currentActiveSnapshot;
              currentActiveSnapshot = type = {
                parent: ref,
                depth: null === ref ? 0 : ref.depth + 1,
                context: type,
                parentValue: initialState,
                value: props
              };
              task.context = type;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, defaultProps62, -1);
              request = currentActiveSnapshot;
              if (null === request)
                throw Error(
                  "Tried to pop a Context at the root of the app. This is a bug in React."
                );
              request.context._currentValue = request.parentValue;
              request = currentActiveSnapshot = request.parent;
              task.context = request;
              task.keyPath = newProps;
              return;
            case REACT_CONSUMER_TYPE:
              props = props.children;
              type = props(type._context._currentValue);
              props = task.keyPath;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, type, -1);
              task.keyPath = props;
              return;
            case REACT_LAZY_TYPE:
              newProps = type._init;
              type = newProps(type._payload);
              if (12 === request.status) throw null;
              renderElement(request, task, keyPath, type, props, ref);
              return;
          }
        throw Error(
          "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((null == type ? type : typeof type) + ".")
        );
      }
    }
    function resumeNode(request, task, segmentId, node, childIndex) {
      var prevReplay = task.replay, blockedBoundary = task.blockedBoundary, resumedSegment = createPendingSegment(
        request,
        0,
        null,
        task.formatContext,
        false,
        false
      );
      resumedSegment.id = segmentId;
      resumedSegment.parentFlushed = true;
      try {
        task.replay = null, task.blockedSegment = resumedSegment, renderNode(request, task, node, childIndex), resumedSegment.status = 1, null === blockedBoundary ? request.completedRootSegment = resumedSegment : (queueCompletedSegment(blockedBoundary, resumedSegment), blockedBoundary.parentFlushed && request.partialBoundaries.push(blockedBoundary));
      } finally {
        task.replay = prevReplay, task.blockedSegment = null;
      }
    }
    function renderNodeDestructive(request, task, node, childIndex) {
      null !== task.replay && "number" === typeof task.replay.slots ? resumeNode(request, task, task.replay.slots, node, childIndex) : (task.node = node, task.childIndex = childIndex, node = task.componentStack, pushComponentStack(task), retryNode(request, task), task.componentStack = node);
    }
    function retryNode(request, task) {
      var node = task.node, childIndex = task.childIndex;
      if (null !== node) {
        if ("object" === typeof node) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = node.type, key = node.key, props = node.props;
              node = props.ref;
              var ref = void 0 !== node ? node : null, name2 = getComponentNameFromType(type), keyOrIndex = null == key ? -1 === childIndex ? 0 : childIndex : key;
              key = [task.keyPath, name2, keyOrIndex];
              if (null !== task.replay)
                a: {
                  var replay = task.replay;
                  childIndex = replay.nodes;
                  for (node = 0; node < childIndex.length; node++) {
                    var node$jscomp$0 = childIndex[node];
                    if (keyOrIndex === node$jscomp$0[1]) {
                      if (4 === node$jscomp$0.length) {
                        if (null !== name2 && name2 !== node$jscomp$0[0])
                          throw Error(
                            "Expected the resume to render <" + node$jscomp$0[0] + "> in this slot but instead it rendered <" + name2 + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        var childNodes = node$jscomp$0[2];
                        name2 = node$jscomp$0[3];
                        keyOrIndex = task.node;
                        task.replay = {
                          nodes: childNodes,
                          slots: name2,
                          pendingTasks: 1
                        };
                        try {
                          renderElement(request, task, key, type, props, ref);
                          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                            throw Error(
                              "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                            );
                          task.replay.pendingTasks--;
                        } catch (x3) {
                          if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                            throw task.node === keyOrIndex && (task.replay = replay), x3;
                          task.replay.pendingTasks--;
                          props = getThrownInfo(task.componentStack);
                          key = task.blockedBoundary;
                          type = x3;
                          props = logRecoverableError(request, type, props);
                          abortRemainingReplayNodes(
                            request,
                            key,
                            childNodes,
                            name2,
                            type,
                            props
                          );
                        }
                        task.replay = replay;
                      } else {
                        if (type !== REACT_SUSPENSE_TYPE)
                          throw Error(
                            "Expected the resume to render <Suspense> in this slot but instead it rendered <" + (getComponentNameFromType(type) || "Unknown") + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        b: {
                          replay = void 0;
                          type = node$jscomp$0[5];
                          ref = node$jscomp$0[2];
                          name2 = node$jscomp$0[3];
                          keyOrIndex = null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];
                          node$jscomp$0 = null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];
                          var prevKeyPath = task.keyPath, previousReplaySet = task.replay, parentBoundary = task.blockedBoundary, parentHoistableState = task.hoistableState, content4 = props.children, fallback = props.fallback, fallbackAbortSet = /* @__PURE__ */ new Set();
                          props = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            createPreambleState(),
                            createPreambleState()
                          ) : createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            null,
                            null
                          );
                          props.parentFlushed = true;
                          props.rootSegmentID = type;
                          task.blockedBoundary = props;
                          task.hoistableState = props.contentState;
                          task.keyPath = key;
                          task.replay = {
                            nodes: ref,
                            slots: name2,
                            pendingTasks: 1
                          };
                          try {
                            renderNode(request, task, content4, -1);
                            if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                              throw Error(
                                "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                              );
                            task.replay.pendingTasks--;
                            if (0 === props.pendingTasks && 0 === props.status) {
                              props.status = 1;
                              request.completedBoundaries.push(props);
                              break b;
                            }
                          } catch (error) {
                            props.status = 4, childNodes = getThrownInfo(task.componentStack), replay = logRecoverableError(
                              request,
                              error,
                              childNodes
                            ), props.errorDigest = replay, task.replay.pendingTasks--, request.clientRenderedBoundaries.push(props);
                          } finally {
                            task.blockedBoundary = parentBoundary, task.hoistableState = parentHoistableState, task.replay = previousReplaySet, task.keyPath = prevKeyPath;
                          }
                          task = createReplayTask(
                            request,
                            null,
                            {
                              nodes: keyOrIndex,
                              slots: node$jscomp$0,
                              pendingTasks: 0
                            },
                            fallback,
                            -1,
                            parentBoundary,
                            props.fallbackState,
                            fallbackAbortSet,
                            [key[0], "Suspense Fallback", key[2]],
                            task.formatContext,
                            task.context,
                            task.treeContext,
                            task.componentStack,
                            true
                          );
                          pushComponentStack(task);
                          request.pingedTasks.push(task);
                        }
                      }
                      childIndex.splice(node, 1);
                      break a;
                    }
                  }
                }
              else renderElement(request, task, key, type, props, ref);
              return;
            case REACT_PORTAL_TYPE:
              throw Error(
                "Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render."
              );
            case REACT_LAZY_TYPE:
              childNodes = node._init;
              node = childNodes(node._payload);
              if (12 === request.status) throw null;
              renderNodeDestructive(request, task, node, childIndex);
              return;
          }
          if (isArrayImpl(node)) {
            renderChildrenArray(request, task, node, childIndex);
            return;
          }
          null === node || "object" !== typeof node ? childNodes = null : (childNodes = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], childNodes = "function" === typeof childNodes ? childNodes : null);
          if (childNodes && (childNodes = childNodes.call(node))) {
            node = childNodes.next();
            if (!node.done) {
              props = [];
              do
                props.push(node.value), node = childNodes.next();
              while (!node.done);
              renderChildrenArray(request, task, props, childIndex);
            }
            return;
          }
          if ("function" === typeof node.then)
            return task.thenableState = null, renderNodeDestructive(request, task, unwrapThenable(node), childIndex);
          if (node.$$typeof === REACT_CONTEXT_TYPE)
            return renderNodeDestructive(
              request,
              task,
              node._currentValue,
              childIndex
            );
          childIndex = Object.prototype.toString.call(node);
          throw Error(
            "Objects are not valid as a React child (found: " + ("[object Object]" === childIndex ? "object with keys {" + Object.keys(node).join(", ") + "}" : childIndex) + "). If you meant to render a collection of children, use an array instead."
          );
        }
        if ("string" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            node,
            request.renderState,
            childIndex.lastPushedText
          ));
        else if ("number" === typeof node || "bigint" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            "" + node,
            request.renderState,
            childIndex.lastPushedText
          ));
      }
    }
    function renderChildrenArray(request, task, children, childIndex) {
      var prevKeyPath = task.keyPath;
      if (-1 !== childIndex && (task.keyPath = [task.keyPath, "Fragment", childIndex], null !== task.replay)) {
        for (var replay = task.replay, replayNodes = replay.nodes, j4 = 0; j4 < replayNodes.length; j4++) {
          var node = replayNodes[j4];
          if (node[1] === childIndex) {
            childIndex = node[2];
            node = node[3];
            task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };
            try {
              renderChildrenArray(request, task, children, -1);
              if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                throw Error(
                  "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                );
              task.replay.pendingTasks--;
            } catch (x3) {
              if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                throw x3;
              task.replay.pendingTasks--;
              children = getThrownInfo(task.componentStack);
              var boundary = task.blockedBoundary, error = x3;
              children = logRecoverableError(request, error, children);
              abortRemainingReplayNodes(
                request,
                boundary,
                childIndex,
                node,
                error,
                children
              );
            }
            task.replay = replay;
            replayNodes.splice(j4, 1);
            break;
          }
        }
        task.keyPath = prevKeyPath;
        return;
      }
      replay = task.treeContext;
      replayNodes = children.length;
      if (null !== task.replay && (j4 = task.replay.slots, null !== j4 && "object" === typeof j4)) {
        for (childIndex = 0; childIndex < replayNodes; childIndex++)
          node = children[childIndex], task.treeContext = pushTreeContext(replay, replayNodes, childIndex), boundary = j4[childIndex], "number" === typeof boundary ? (resumeNode(request, task, boundary, node, childIndex), delete j4[childIndex]) : renderNode(request, task, node, childIndex);
        task.treeContext = replay;
        task.keyPath = prevKeyPath;
        return;
      }
      for (j4 = 0; j4 < replayNodes; j4++)
        childIndex = children[j4], task.treeContext = pushTreeContext(replay, replayNodes, j4), renderNode(request, task, childIndex, j4);
      task.treeContext = replay;
      task.keyPath = prevKeyPath;
    }
    function untrackBoundary(request, boundary) {
      request = request.trackedPostpones;
      null !== request && (boundary = boundary.trackedContentKeyPath, null !== boundary && (boundary = request.workingMap.get(boundary), void 0 !== boundary && (boundary.length = 4, boundary[2] = [], boundary[3] = null)));
    }
    function spawnNewSuspendedReplayTask(request, task, thenableState2) {
      return createReplayTask(
        request,
        thenableState2,
        task.replay,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function spawnNewSuspendedRenderTask(request, task, thenableState2) {
      var segment = task.blockedSegment, newSegment = createPendingSegment(
        request,
        segment.chunks.length,
        null,
        task.formatContext,
        segment.lastPushedText,
        true
      );
      segment.children.push(newSegment);
      segment.lastPushedText = false;
      return createRenderTask(
        request,
        thenableState2,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        newSegment,
        task.blockedPreamble,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function renderNode(request, task, node, childIndex) {
      var previousFormatContext = task.formatContext, previousContext = task.context, previousKeyPath = task.keyPath, previousTreeContext = task.treeContext, previousComponentStack = task.componentStack, segment = task.blockedSegment;
      if (null === segment)
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue) {
          if (resetHooksState(), node = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedReplayTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      else {
        var childrenLength = segment.children.length, chunkLength = segment.chunks.length;
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue$48) {
          if (resetHooksState(), segment.children.length = childrenLength, segment.chunks.length = chunkLength, node = thrownValue$48 === SuspenseException ? getSuspendedThenable() : thrownValue$48, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedRenderTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      }
      task.formatContext = previousFormatContext;
      task.context = previousContext;
      task.keyPath = previousKeyPath;
      task.treeContext = previousTreeContext;
      switchContext(previousContext);
      throw node;
    }
    function abortTaskSoft(task) {
      var boundary = task.blockedBoundary;
      task = task.blockedSegment;
      null !== task && (task.status = 3, finishedTask(this, boundary, task));
    }
    function abortRemainingReplayNodes(request$jscomp$0, boundary, nodes, slots, error, errorDigest$jscomp$0) {
      for (var i11 = 0; i11 < nodes.length; i11++) {
        var node = nodes[i11];
        if (4 === node.length)
          abortRemainingReplayNodes(
            request$jscomp$0,
            boundary,
            node[2],
            node[3],
            error,
            errorDigest$jscomp$0
          );
        else {
          node = node[5];
          var request = request$jscomp$0, errorDigest = errorDigest$jscomp$0, resumedBoundary = createSuspenseBoundary(
            request,
            /* @__PURE__ */ new Set(),
            null,
            null
          );
          resumedBoundary.parentFlushed = true;
          resumedBoundary.rootSegmentID = node;
          resumedBoundary.status = 4;
          resumedBoundary.errorDigest = errorDigest;
          resumedBoundary.parentFlushed && request.clientRenderedBoundaries.push(resumedBoundary);
        }
      }
      nodes.length = 0;
      if (null !== slots) {
        if (null === boundary)
          throw Error(
            "We should not have any resumable nodes in the shell. This is a bug in React."
          );
        4 !== boundary.status && (boundary.status = 4, boundary.errorDigest = errorDigest$jscomp$0, boundary.parentFlushed && request$jscomp$0.clientRenderedBoundaries.push(boundary));
        if ("object" === typeof slots) for (var index in slots) delete slots[index];
      }
    }
    function abortTask(task, request, error) {
      var boundary = task.blockedBoundary, segment = task.blockedSegment;
      if (null !== segment) {
        if (6 === segment.status) return;
        segment.status = 3;
      }
      segment = getThrownInfo(task.componentStack);
      if (null === boundary) {
        if (13 !== request.status && 14 !== request.status) {
          boundary = task.replay;
          if (null === boundary) {
            logRecoverableError(request, error, segment);
            fatalError(request, error);
            return;
          }
          boundary.pendingTasks--;
          0 === boundary.pendingTasks && 0 < boundary.nodes.length && (task = logRecoverableError(request, error, segment), abortRemainingReplayNodes(
            request,
            null,
            boundary.nodes,
            boundary.slots,
            error,
            task
          ));
          request.pendingRootTasks--;
          0 === request.pendingRootTasks && completeShell(request);
        }
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (boundary.status = 4, task = logRecoverableError(request, error, segment), boundary.status = 4, boundary.errorDigest = task, untrackBoundary(request, boundary), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary)), boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
          return abortTask(fallbackTask, request, error);
        }), boundary.fallbackAbortableTasks.clear();
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function safelyEmitEarlyPreloads(request, shellComplete) {
      try {
        var renderState = request.renderState, onHeaders = renderState.onHeaders;
        if (onHeaders) {
          var headers = renderState.headers;
          if (headers) {
            renderState.headers = null;
            var linkHeader = headers.preconnects;
            headers.fontPreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.fontPreloads);
            headers.highImagePreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.highImagePreloads);
            if (!shellComplete) {
              var queueIter = renderState.styles.values(), queueStep = queueIter.next();
              b: for (; 0 < headers.remainingCapacity && !queueStep.done; queueStep = queueIter.next())
                for (var sheetIter = queueStep.value.sheets.values(), sheetStep = sheetIter.next(); 0 < headers.remainingCapacity && !sheetStep.done; sheetStep = sheetIter.next()) {
                  var sheet = sheetStep.value, props = sheet.props, key = props.href, props$jscomp$0 = sheet.props, header = getPreloadAsHeader(props$jscomp$0.href, "style", {
                    crossOrigin: props$jscomp$0.crossOrigin,
                    integrity: props$jscomp$0.integrity,
                    nonce: props$jscomp$0.nonce,
                    type: props$jscomp$0.type,
                    fetchPriority: props$jscomp$0.fetchPriority,
                    referrerPolicy: props$jscomp$0.referrerPolicy,
                    media: props$jscomp$0.media
                  });
                  if (0 <= (headers.remainingCapacity -= header.length + 2))
                    renderState.resets.style[key] = PRELOAD_NO_CREDS, linkHeader && (linkHeader += ", "), linkHeader += header, renderState.resets.style[key] = "string" === typeof props.crossOrigin || "string" === typeof props.integrity ? [props.crossOrigin, props.integrity] : PRELOAD_NO_CREDS;
                  else break b;
                }
            }
            linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});
          }
        }
      } catch (error) {
        logRecoverableError(request, error, {});
      }
    }
    function completeShell(request) {
      null === request.trackedPostpones && safelyEmitEarlyPreloads(request, true);
      null === request.trackedPostpones && preparePreamble(request);
      request.onShellError = noop3;
      request = request.onShellReady;
      request();
    }
    function completeAll(request) {
      safelyEmitEarlyPreloads(
        request,
        null === request.trackedPostpones ? true : null === request.completedRootSegment || 5 !== request.completedRootSegment.status
      );
      preparePreamble(request);
      request = request.onAllReady;
      request();
    }
    function queueCompletedSegment(boundary, segment) {
      if (0 === segment.chunks.length && 1 === segment.children.length && null === segment.children[0].boundary && -1 === segment.children[0].id) {
        var childSegment = segment.children[0];
        childSegment.id = segment.id;
        childSegment.parentFlushed = true;
        1 === childSegment.status && queueCompletedSegment(boundary, childSegment);
      } else boundary.completedSegments.push(segment);
    }
    function finishedTask(request, boundary, segment) {
      if (null === boundary) {
        if (null !== segment && segment.parentFlushed) {
          if (null !== request.completedRootSegment)
            throw Error(
              "There can only be one root segment. This is a bug in React."
            );
          request.completedRootSegment = segment;
        }
        request.pendingRootTasks--;
        0 === request.pendingRootTasks && completeShell(request);
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (0 === boundary.pendingTasks ? (0 === boundary.status && (boundary.status = 1), null !== segment && segment.parentFlushed && 1 === segment.status && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), 1 === boundary.status && (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear(), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary.contentPreamble && preparePreamble(request))) : null !== segment && segment.parentFlushed && 1 === segment.status && (queueCompletedSegment(boundary, segment), 1 === boundary.completedSegments.length && boundary.parentFlushed && request.partialBoundaries.push(boundary)));
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function performWork(request$jscomp$2) {
      if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {
        var prevContext = currentActiveSnapshot, prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = HooksDispatcher;
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        var prevRequest = currentRequest;
        currentRequest = request$jscomp$2;
        var prevResumableState = currentResumableState;
        currentResumableState = request$jscomp$2.resumableState;
        try {
          var pingedTasks = request$jscomp$2.pingedTasks, i11;
          for (i11 = 0; i11 < pingedTasks.length; i11++) {
            var task = pingedTasks[i11], request = request$jscomp$2, segment = task.blockedSegment;
            if (null === segment) {
              var request$jscomp$0 = request;
              if (0 !== task.replay.pendingTasks) {
                switchContext(task.context);
                try {
                  "number" === typeof task.replay.slots ? resumeNode(
                    request$jscomp$0,
                    task,
                    task.replay.slots,
                    task.node,
                    task.childIndex
                  ) : retryNode(request$jscomp$0, task);
                  if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                    throw Error(
                      "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                    );
                  task.replay.pendingTasks--;
                  task.abortSet.delete(task);
                  finishedTask(request$jscomp$0, task.blockedBoundary, null);
                } catch (thrownValue) {
                  resetHooksState();
                  var x3 = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue;
                  if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then) {
                    var ping = task.ping;
                    x3.then(ping, ping);
                    task.thenableState = getThenableStateAfterSuspending();
                  } else {
                    task.replay.pendingTasks--;
                    task.abortSet.delete(task);
                    var errorInfo = getThrownInfo(task.componentStack);
                    request = void 0;
                    var request$jscomp$1 = request$jscomp$0, boundary = task.blockedBoundary, error$jscomp$0 = 12 === request$jscomp$0.status ? request$jscomp$0.fatalError : x3, replayNodes = task.replay.nodes, resumeSlots = task.replay.slots;
                    request = logRecoverableError(
                      request$jscomp$1,
                      error$jscomp$0,
                      errorInfo
                    );
                    abortRemainingReplayNodes(
                      request$jscomp$1,
                      boundary,
                      replayNodes,
                      resumeSlots,
                      error$jscomp$0,
                      request
                    );
                    request$jscomp$0.pendingRootTasks--;
                    0 === request$jscomp$0.pendingRootTasks && completeShell(request$jscomp$0);
                    request$jscomp$0.allPendingTasks--;
                    0 === request$jscomp$0.allPendingTasks && completeAll(request$jscomp$0);
                  }
                } finally {
                }
              }
            } else if (request$jscomp$0 = void 0, request$jscomp$1 = segment, 0 === request$jscomp$1.status) {
              request$jscomp$1.status = 6;
              switchContext(task.context);
              var childrenLength = request$jscomp$1.children.length, chunkLength = request$jscomp$1.chunks.length;
              try {
                retryNode(request, task), request$jscomp$1.lastPushedText && request$jscomp$1.textEmbedded && request$jscomp$1.chunks.push(textSeparator), task.abortSet.delete(task), request$jscomp$1.status = 1, finishedTask(request, task.blockedBoundary, request$jscomp$1);
              } catch (thrownValue) {
                resetHooksState();
                request$jscomp$1.children.length = childrenLength;
                request$jscomp$1.chunks.length = chunkLength;
                var x$jscomp$0 = thrownValue === SuspenseException ? getSuspendedThenable() : 12 === request.status ? request.fatalError : thrownValue;
                if ("object" === typeof x$jscomp$0 && null !== x$jscomp$0 && "function" === typeof x$jscomp$0.then) {
                  request$jscomp$1.status = 0;
                  task.thenableState = getThenableStateAfterSuspending();
                  var ping$jscomp$0 = task.ping;
                  x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);
                } else {
                  var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);
                  task.abortSet.delete(task);
                  request$jscomp$1.status = 4;
                  var boundary$jscomp$0 = task.blockedBoundary;
                  request$jscomp$0 = logRecoverableError(
                    request,
                    x$jscomp$0,
                    errorInfo$jscomp$0
                  );
                  null === boundary$jscomp$0 ? fatalError(request, x$jscomp$0) : (boundary$jscomp$0.pendingTasks--, 4 !== boundary$jscomp$0.status && (boundary$jscomp$0.status = 4, boundary$jscomp$0.errorDigest = request$jscomp$0, untrackBoundary(request, boundary$jscomp$0), boundary$jscomp$0.parentFlushed && request.clientRenderedBoundaries.push(boundary$jscomp$0), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary$jscomp$0.contentPreamble && preparePreamble(request)));
                  request.allPendingTasks--;
                  0 === request.allPendingTasks && completeAll(request);
                }
              } finally {
              }
            }
          }
          pingedTasks.splice(0, i11);
          null !== request$jscomp$2.destination && flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);
        } catch (error) {
          logRecoverableError(request$jscomp$2, error, {}), fatalError(request$jscomp$2, error);
        } finally {
          currentResumableState = prevResumableState, ReactSharedInternals.H = prevDispatcher, ReactSharedInternals.A = prevAsyncDispatcher, prevDispatcher === HooksDispatcher && switchContext(prevContext), currentRequest = prevRequest;
        }
      }
    }
    function preparePreambleFromSubtree(request, segment, collectedPreambleSegments) {
      segment.preambleChildren.length && collectedPreambleSegments.push(segment.preambleChildren);
      for (var pendingPreambles = false, i11 = 0; i11 < segment.children.length; i11++)
        pendingPreambles = preparePreambleFromSegment(
          request,
          segment.children[i11],
          collectedPreambleSegments
        ) || pendingPreambles;
      return pendingPreambles;
    }
    function preparePreambleFromSegment(request, segment, collectedPreambleSegments) {
      var boundary = segment.boundary;
      if (null === boundary)
        return preparePreambleFromSubtree(
          request,
          segment,
          collectedPreambleSegments
        );
      var preamble = boundary.contentPreamble, fallbackPreamble = boundary.fallbackPreamble;
      if (null === preamble || null === fallbackPreamble) return false;
      switch (boundary.status) {
        case 1:
          hoistPreambleState(request.renderState, preamble);
          segment = boundary.completedSegments[0];
          if (!segment)
            throw Error(
              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
            );
          return preparePreambleFromSubtree(
            request,
            segment,
            collectedPreambleSegments
          );
        case 5:
          if (null !== request.trackedPostpones) return true;
        case 4:
          if (1 === segment.status)
            return hoistPreambleState(request.renderState, fallbackPreamble), preparePreambleFromSubtree(
              request,
              segment,
              collectedPreambleSegments
            );
        default:
          return true;
      }
    }
    function preparePreamble(request) {
      if (request.completedRootSegment && null === request.completedPreambleSegments) {
        var collectedPreambleSegments = [], hasPendingPreambles = preparePreambleFromSegment(
          request,
          request.completedRootSegment,
          collectedPreambleSegments
        ), preamble = request.renderState.preamble;
        if (false === hasPendingPreambles || preamble.headChunks && preamble.bodyChunks)
          request.completedPreambleSegments = collectedPreambleSegments;
      }
    }
    function flushSubtree(request, destination, segment, hoistableState) {
      segment.parentFlushed = true;
      switch (segment.status) {
        case 0:
          segment.id = request.nextSegmentId++;
        case 5:
          return hoistableState = segment.id, segment.lastPushedText = false, segment.textEmbedded = false, request = request.renderState, writeChunk(destination, placeholder1), writeChunk(destination, request.placeholderPrefix), request = hoistableState.toString(16), writeChunk(destination, request), writeChunkAndReturn(destination, placeholder2);
        case 1:
          segment.status = 2;
          var r8 = true, chunks = segment.chunks, chunkIdx = 0;
          segment = segment.children;
          for (var childIdx = 0; childIdx < segment.length; childIdx++) {
            for (r8 = segment[childIdx]; chunkIdx < r8.index; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            r8 = flushSegment(request, destination, r8, hoistableState);
          }
          for (; chunkIdx < chunks.length - 1; chunkIdx++)
            writeChunk(destination, chunks[chunkIdx]);
          chunkIdx < chunks.length && (r8 = writeChunkAndReturn(destination, chunks[chunkIdx]));
          return r8;
        default:
          throw Error(
            "Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React."
          );
      }
    }
    function flushSegment(request, destination, segment, hoistableState) {
      var boundary = segment.boundary;
      if (null === boundary)
        return flushSubtree(request, destination, segment, hoistableState);
      boundary.parentFlushed = true;
      if (4 === boundary.status) {
        var errorDigest = boundary.errorDigest;
        writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
        writeChunk(destination, clientRenderedSuspenseBoundaryError1);
        errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, escapeTextForBrowser(errorDigest)), writeChunk(
          destination,
          clientRenderedSuspenseBoundaryErrorAttrInterstitial
        ));
        writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
        flushSubtree(request, destination, segment, hoistableState);
        (request = boundary.fallbackPreamble) && writePreambleContribution(destination, request);
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      if (1 !== boundary.status)
        return 0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++), 0 < boundary.completedSegments.length && request.partialBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), hoistableState && (boundary = boundary.fallbackState, boundary.styles.forEach(hoistStyleQueueDependency, hoistableState), boundary.stylesheets.forEach(
          hoistStylesheetDependency,
          hoistableState
        )), flushSubtree(request, destination, segment, hoistableState), writeChunkAndReturn(destination, endSuspenseBoundary);
      if (boundary.byteSize > request.progressiveChunkSize)
        return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), flushSubtree(request, destination, segment, hoistableState), writeChunkAndReturn(destination, endSuspenseBoundary);
      hoistableState && (segment = boundary.contentState, segment.styles.forEach(hoistStyleQueueDependency, hoistableState), segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
      writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      segment = boundary.completedSegments;
      if (1 !== segment.length)
        throw Error(
          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
        );
      flushSegment(request, destination, segment[0], hoistableState);
      (request = boundary.contentPreamble) && writePreambleContribution(destination, request);
      return writeChunkAndReturn(destination, endSuspenseBoundary);
    }
    function flushSegmentContainer(request, destination, segment, hoistableState) {
      writeStartSegment(
        destination,
        request.renderState,
        segment.parentFormatContext,
        segment.id
      );
      flushSegment(request, destination, segment, hoistableState);
      return writeEndSegment(destination, segment.parentFormatContext);
    }
    function flushCompletedBoundary(request, destination, boundary) {
      for (var completedSegments = boundary.completedSegments, i11 = 0; i11 < completedSegments.length; i11++)
        flushPartiallyCompletedSegment(
          request,
          destination,
          boundary,
          completedSegments[i11]
        );
      completedSegments.length = 0;
      writeHoistablesForBoundary(
        destination,
        boundary.contentState,
        request.renderState
      );
      completedSegments = request.resumableState;
      request = request.renderState;
      i11 = boundary.rootSegmentID;
      boundary = boundary.contentState;
      var requiresStyleInsertion = request.stylesToHoist;
      request.stylesToHoist = false;
      writeChunk(destination, request.startInlineScript);
      requiresStyleInsertion ? 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 10, writeChunk(destination, completeBoundaryWithStylesScript1FullBoth)) : 0 === (completedSegments.instructions & 8) ? (completedSegments.instructions |= 8, writeChunk(destination, completeBoundaryWithStylesScript1FullPartial)) : writeChunk(destination, completeBoundaryWithStylesScript1Partial) : 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 2, writeChunk(destination, completeBoundaryScript1Full)) : writeChunk(destination, completeBoundaryScript1Partial);
      completedSegments = i11.toString(16);
      writeChunk(destination, request.boundaryPrefix);
      writeChunk(destination, completedSegments);
      writeChunk(destination, completeBoundaryScript2);
      writeChunk(destination, request.segmentPrefix);
      writeChunk(destination, completedSegments);
      requiresStyleInsertion ? (writeChunk(destination, completeBoundaryScript3a), writeStyleResourceDependenciesInJS(destination, boundary)) : writeChunk(destination, completeBoundaryScript3b);
      boundary = writeChunkAndReturn(destination, completeBoundaryScriptEnd);
      return writeBootstrap(destination, request) && boundary;
    }
    function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
      if (2 === segment.status) return true;
      var hoistableState = boundary.contentState, segmentID = segment.id;
      if (-1 === segmentID) {
        if (-1 === (segment.id = boundary.rootSegmentID))
          throw Error(
            "A root segment ID must have been assigned by now. This is a bug in React."
          );
        return flushSegmentContainer(request, destination, segment, hoistableState);
      }
      if (segmentID === boundary.rootSegmentID)
        return flushSegmentContainer(request, destination, segment, hoistableState);
      flushSegmentContainer(request, destination, segment, hoistableState);
      boundary = request.resumableState;
      request = request.renderState;
      writeChunk(destination, request.startInlineScript);
      0 === (boundary.instructions & 1) ? (boundary.instructions |= 1, writeChunk(destination, completeSegmentScript1Full)) : writeChunk(destination, completeSegmentScript1Partial);
      writeChunk(destination, request.segmentPrefix);
      segmentID = segmentID.toString(16);
      writeChunk(destination, segmentID);
      writeChunk(destination, completeSegmentScript2);
      writeChunk(destination, request.placeholderPrefix);
      writeChunk(destination, segmentID);
      destination = writeChunkAndReturn(destination, completeSegmentScriptEnd);
      return destination;
    }
    function flushCompletedQueues(request, destination) {
      currentView = new Uint8Array(2048);
      writtenBytes = 0;
      destinationHasCapacity$1 = true;
      try {
        if (!(0 < request.pendingRootTasks)) {
          var i11, completedRootSegment = request.completedRootSegment;
          if (null !== completedRootSegment) {
            if (5 === completedRootSegment.status) return;
            var completedPreambleSegments = request.completedPreambleSegments;
            if (null === completedPreambleSegments) return;
            var renderState = request.renderState, preamble = renderState.preamble, htmlChunks = preamble.htmlChunks, headChunks = preamble.headChunks, i$jscomp$0;
            if (htmlChunks) {
              for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
                writeChunk(destination, htmlChunks[i$jscomp$0]);
              if (headChunks)
                for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                  writeChunk(destination, headChunks[i$jscomp$0]);
              else
                writeChunk(destination, startChunkForTag("head")), writeChunk(destination, endOfStartTag);
            } else if (headChunks)
              for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                writeChunk(destination, headChunks[i$jscomp$0]);
            var charsetChunks = renderState.charsetChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)
              writeChunk(destination, charsetChunks[i$jscomp$0]);
            charsetChunks.length = 0;
            renderState.preconnects.forEach(flushResource, destination);
            renderState.preconnects.clear();
            var viewportChunks = renderState.viewportChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)
              writeChunk(destination, viewportChunks[i$jscomp$0]);
            viewportChunks.length = 0;
            renderState.fontPreloads.forEach(flushResource, destination);
            renderState.fontPreloads.clear();
            renderState.highImagePreloads.forEach(flushResource, destination);
            renderState.highImagePreloads.clear();
            renderState.styles.forEach(flushStylesInPreamble, destination);
            var importMapChunks = renderState.importMapChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)
              writeChunk(destination, importMapChunks[i$jscomp$0]);
            importMapChunks.length = 0;
            renderState.bootstrapScripts.forEach(flushResource, destination);
            renderState.scripts.forEach(flushResource, destination);
            renderState.scripts.clear();
            renderState.bulkPreloads.forEach(flushResource, destination);
            renderState.bulkPreloads.clear();
            var hoistableChunks = renderState.hoistableChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
              writeChunk(destination, hoistableChunks[i$jscomp$0]);
            for (renderState = hoistableChunks.length = 0; renderState < completedPreambleSegments.length; renderState++) {
              var segments = completedPreambleSegments[renderState];
              for (preamble = 0; preamble < segments.length; preamble++)
                flushSegment(request, destination, segments[preamble], null);
            }
            var preamble$jscomp$0 = request.renderState.preamble, headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
            (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) && writeChunk(destination, endChunkForTag("head"));
            var bodyChunks = preamble$jscomp$0.bodyChunks;
            if (bodyChunks)
              for (completedPreambleSegments = 0; completedPreambleSegments < bodyChunks.length; completedPreambleSegments++)
                writeChunk(destination, bodyChunks[completedPreambleSegments]);
            flushSegment(request, destination, completedRootSegment, null);
            request.completedRootSegment = null;
            writeBootstrap(destination, request.renderState);
          }
          var renderState$jscomp$0 = request.renderState;
          completedRootSegment = 0;
          var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;
          for (completedRootSegment = 0; completedRootSegment < viewportChunks$jscomp$0.length; completedRootSegment++)
            writeChunk(destination, viewportChunks$jscomp$0[completedRootSegment]);
          viewportChunks$jscomp$0.length = 0;
          renderState$jscomp$0.preconnects.forEach(flushResource, destination);
          renderState$jscomp$0.preconnects.clear();
          renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.fontPreloads.clear();
          renderState$jscomp$0.highImagePreloads.forEach(
            flushResource,
            destination
          );
          renderState$jscomp$0.highImagePreloads.clear();
          renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);
          renderState$jscomp$0.scripts.forEach(flushResource, destination);
          renderState$jscomp$0.scripts.clear();
          renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.bulkPreloads.clear();
          var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;
          for (completedRootSegment = 0; completedRootSegment < hoistableChunks$jscomp$0.length; completedRootSegment++)
            writeChunk(destination, hoistableChunks$jscomp$0[completedRootSegment]);
          hoistableChunks$jscomp$0.length = 0;
          var clientRenderedBoundaries = request.clientRenderedBoundaries;
          for (i11 = 0; i11 < clientRenderedBoundaries.length; i11++) {
            var boundary = clientRenderedBoundaries[i11];
            renderState$jscomp$0 = destination;
            var resumableState = request.resumableState, renderState$jscomp$1 = request.renderState, id5 = boundary.rootSegmentID, errorDigest = boundary.errorDigest;
            writeChunk(
              renderState$jscomp$0,
              renderState$jscomp$1.startInlineScript
            );
            0 === (resumableState.instructions & 4) ? (resumableState.instructions |= 4, writeChunk(renderState$jscomp$0, clientRenderScript1Full)) : writeChunk(renderState$jscomp$0, clientRenderScript1Partial);
            writeChunk(renderState$jscomp$0, renderState$jscomp$1.boundaryPrefix);
            writeChunk(renderState$jscomp$0, id5.toString(16));
            writeChunk(renderState$jscomp$0, clientRenderScript1A);
            errorDigest && (writeChunk(
              renderState$jscomp$0,
              clientRenderErrorScriptArgInterstitial
            ), writeChunk(
              renderState$jscomp$0,
              escapeJSStringsForInstructionScripts(errorDigest || "")
            ));
            var JSCompiler_inline_result = writeChunkAndReturn(
              renderState$jscomp$0,
              clientRenderScriptEnd
            );
            if (!JSCompiler_inline_result) {
              request.destination = null;
              i11++;
              clientRenderedBoundaries.splice(0, i11);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i11);
          var completedBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < completedBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, completedBoundaries[i11])) {
              request.destination = null;
              i11++;
              completedBoundaries.splice(0, i11);
              return;
            }
          completedBoundaries.splice(0, i11);
          completeWriting(destination);
          currentView = new Uint8Array(2048);
          writtenBytes = 0;
          destinationHasCapacity$1 = true;
          var partialBoundaries = request.partialBoundaries;
          for (i11 = 0; i11 < partialBoundaries.length; i11++) {
            var boundary$51 = partialBoundaries[i11];
            a: {
              clientRenderedBoundaries = request;
              boundary = destination;
              var completedSegments = boundary$51.completedSegments;
              for (JSCompiler_inline_result = 0; JSCompiler_inline_result < completedSegments.length; JSCompiler_inline_result++)
                if (!flushPartiallyCompletedSegment(
                  clientRenderedBoundaries,
                  boundary,
                  boundary$51,
                  completedSegments[JSCompiler_inline_result]
                )) {
                  JSCompiler_inline_result++;
                  completedSegments.splice(0, JSCompiler_inline_result);
                  var JSCompiler_inline_result$jscomp$0 = false;
                  break a;
                }
              completedSegments.splice(0, JSCompiler_inline_result);
              JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(
                boundary,
                boundary$51.contentState,
                clientRenderedBoundaries.renderState
              );
            }
            if (!JSCompiler_inline_result$jscomp$0) {
              request.destination = null;
              i11++;
              partialBoundaries.splice(0, i11);
              return;
            }
          }
          partialBoundaries.splice(0, i11);
          var largeBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < largeBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, largeBoundaries[i11])) {
              request.destination = null;
              i11++;
              largeBoundaries.splice(0, i11);
              return;
            }
          largeBoundaries.splice(0, i11);
        }
      } finally {
        0 === request.allPendingTasks && 0 === request.pingedTasks.length && 0 === request.clientRenderedBoundaries.length && 0 === request.completedBoundaries.length ? (request.flushScheduled = false, i11 = request.resumableState, i11.hasBody && writeChunk(destination, endChunkForTag("body")), i11.hasHtml && writeChunk(destination, endChunkForTag("html")), completeWriting(destination), flushBuffered(destination), request.status = 14, destination.end(), request.destination = null) : (completeWriting(destination), flushBuffered(destination));
      }
    }
    function startWork(request) {
      request.flushScheduled = null !== request.destination;
      scheduleMicrotask(function() {
        return requestStorage.run(request, performWork, request);
      });
      setImmediate(function() {
        10 === request.status && (request.status = 11);
        null === request.trackedPostpones && requestStorage.run(
          request,
          enqueueEarlyPreloadsAfterInitialWork,
          request
        );
      });
    }
    function enqueueEarlyPreloadsAfterInitialWork(request) {
      safelyEmitEarlyPreloads(request, 0 === request.pendingRootTasks);
    }
    function enqueueFlush(request) {
      false === request.flushScheduled && 0 === request.pingedTasks.length && null !== request.destination && (request.flushScheduled = true, setImmediate(function() {
        var destination = request.destination;
        destination ? flushCompletedQueues(request, destination) : request.flushScheduled = false;
      }));
    }
    function startFlowing(request, destination) {
      if (13 === request.status)
        request.status = 14, destination.destroy(request.fatalError);
      else if (14 !== request.status && null === request.destination) {
        request.destination = destination;
        try {
          flushCompletedQueues(request, destination);
        } catch (error) {
          logRecoverableError(request, error, {}), fatalError(request, error);
        }
      }
    }
    function abort(request, reason) {
      if (11 === request.status || 10 === request.status) request.status = 12;
      try {
        var abortableTasks = request.abortableTasks;
        if (0 < abortableTasks.size) {
          var error = void 0 === reason ? Error("The render was aborted by the server without a reason.") : "object" === typeof reason && null !== reason && "function" === typeof reason.then ? Error("The render was aborted by the server with a promise.") : reason;
          request.fatalError = error;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, error);
          });
          abortableTasks.clear();
        }
        null !== request.destination && flushCompletedQueues(request, request.destination);
      } catch (error$53) {
        logRecoverableError(request, error$53, {}), fatalError(request, error$53);
      }
    }
    function ensureCorrectIsomorphicReactVersion() {
      var isomorphicReactPackageVersion = React8.version;
      if ("19.1.0" !== isomorphicReactPackageVersion)
        throw Error(
          'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.1.0\nLearn more: https://react.dev/warnings/version-mismatch")
        );
    }
    ensureCorrectIsomorphicReactVersion();
    function createDrainHandler(destination, request) {
      return function() {
        return startFlowing(request, destination);
      };
    }
    function createCancelHandler(request, reason) {
      return function() {
        request.destination = null;
        abort(request, Error(reason));
      };
    }
    function createRequestImpl(children, options) {
      var resumableState = createResumableState(
        options ? options.identifierPrefix : void 0,
        options ? options.unstable_externalRuntimeSrc : void 0,
        options ? options.bootstrapScriptContent : void 0,
        options ? options.bootstrapScripts : void 0,
        options ? options.bootstrapModules : void 0
      );
      return createRequest(
        children,
        resumableState,
        createRenderState(
          resumableState,
          options ? options.nonce : void 0,
          options ? options.unstable_externalRuntimeSrc : void 0,
          options ? options.importMap : void 0,
          options ? options.onHeaders : void 0,
          options ? options.maxHeadersLength : void 0
        ),
        createRootFormatContext(options ? options.namespaceURI : void 0),
        options ? options.progressiveChunkSize : void 0,
        options ? options.onError : void 0,
        options ? options.onAllReady : void 0,
        options ? options.onShellReady : void 0,
        options ? options.onShellError : void 0,
        void 0,
        options ? options.onPostpone : void 0,
        options ? options.formState : void 0
      );
    }
    ensureCorrectIsomorphicReactVersion();
    function createFakeWritable(readable) {
      return {
        write: function(chunk2) {
          return readable.push(chunk2);
        },
        end: function() {
          readable.push(null);
        },
        destroy: function(error) {
          readable.destroy(error);
        }
      };
    }
    exports.prerenderToNodeStream = function(children, options) {
      return new Promise(function(resolve, reject) {
        var resumableState = createResumableState(
          options ? options.identifierPrefix : void 0,
          options ? options.unstable_externalRuntimeSrc : void 0,
          options ? options.bootstrapScriptContent : void 0,
          options ? options.bootstrapScripts : void 0,
          options ? options.bootstrapModules : void 0
        ), request = createPrerenderRequest(
          children,
          resumableState,
          createRenderState(
            resumableState,
            void 0,
            options ? options.unstable_externalRuntimeSrc : void 0,
            options ? options.importMap : void 0,
            options ? options.onHeaders : void 0,
            options ? options.maxHeadersLength : void 0
          ),
          createRootFormatContext(options ? options.namespaceURI : void 0),
          options ? options.progressiveChunkSize : void 0,
          options ? options.onError : void 0,
          function() {
            var readable = new stream.Readable({
              read: function() {
                startFlowing(request, writable);
              }
            }), writable = createFakeWritable(readable);
            resolve({ prelude: readable });
          },
          void 0,
          void 0,
          reject,
          options ? options.onPostpone : void 0
        );
        if (options && options.signal) {
          var signal = options.signal;
          if (signal.aborted) abort(request, signal.reason);
          else {
            var listener = function() {
              abort(request, signal.reason);
              signal.removeEventListener("abort", listener);
            };
            signal.addEventListener("abort", listener);
          }
        }
        startWork(request);
      });
    };
    exports.renderToPipeableStream = function(children, options) {
      var request = createRequestImpl(children, options), hasStartedFlowing = false;
      startWork(request);
      return {
        pipe: function(destination) {
          if (hasStartedFlowing)
            throw Error(
              "React currently only supports piping to one writable stream."
            );
          hasStartedFlowing = true;
          safelyEmitEarlyPreloads(
            request,
            null === request.trackedPostpones ? 0 === request.pendingRootTasks : null === request.completedRootSegment ? 0 === request.pendingRootTasks : 5 !== request.completedRootSegment.status
          );
          startFlowing(request, destination);
          destination.on("drain", createDrainHandler(destination, request));
          destination.on(
            "error",
            createCancelHandler(
              request,
              "The destination stream errored while writing data."
            )
          );
          destination.on(
            "close",
            createCancelHandler(request, "The destination stream closed early.")
          );
          return destination;
        },
        abort: function(reason) {
          abort(request, reason);
        }
      };
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/server.node.js
var require_server_node = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/server.node.js"(exports) {
    "use strict";
    var l9;
    var s37;
    if (true) {
      l9 = require_react_dom_server_legacy_node_production();
      s37 = require_react_dom_server_node_production();
    } else {
      l9 = null;
      s37 = null;
    }
    exports.version = l9.version;
    exports.renderToString = l9.renderToString;
    exports.renderToStaticMarkup = l9.renderToStaticMarkup;
    exports.renderToPipeableStream = s37.renderToPipeableStream;
    if (s37.resumeToPipeableStream) {
      exports.resumeToPipeableStream = s37.resumeToPipeableStream;
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/createErrorWithCleanStackTrace.js
var require_createErrorWithCleanStackTrace = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/createErrorWithCleanStackTrace.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createErrorWithCleanStackTrace = void 0;
    function createErrorWithCleanStackTrace3(errorMessage, numberOfStackTraceLinesToRemove3) {
      const err = new Error(errorMessage);
      err.stack = clean3(err.stack, numberOfStackTraceLinesToRemove3);
      return err;
    }
    exports.createErrorWithCleanStackTrace = createErrorWithCleanStackTrace3;
    function clean3(errStack, numberOfStackTraceLinesToRemove3) {
      if (!errStack) {
        return errStack;
      }
      const stackLines = splitByLine3(errStack);
      let linesRemoved = 0;
      const stackLine__cleaned = stackLines.filter((line) => {
        if (line.includes(" (internal/") || line.includes(" (node:internal")) {
          return false;
        }
        if (linesRemoved < numberOfStackTraceLinesToRemove3 && isStackTraceLine3(line)) {
          linesRemoved++;
          return false;
        }
        return true;
      }).join("\n");
      return stackLine__cleaned;
    }
    function isStackTraceLine3(line) {
      return line.startsWith("    at ");
    }
    function splitByLine3(str) {
      return str.split(/\r?\n/);
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/getGlobalObject.js
var require_getGlobalObject = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/getGlobalObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getGlobalObject = void 0;
    function getGlobalObject3(key, defaultValue2) {
      const globalObjectsAll = globalThis[projectKey2] = globalThis[projectKey2] || {};
      const globalObject11 = globalObjectsAll[key] = globalObjectsAll[key] || defaultValue2;
      return globalObject11;
    }
    exports.getGlobalObject = getGlobalObject3;
    var projectKey2 = "_react_streaming";
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/PROJECT_VERSION.js
var require_PROJECT_VERSION = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/PROJECT_VERSION.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PROJECT_VERSION = void 0;
    exports.PROJECT_VERSION = "0.4.2";
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/projectInfo.js
var require_projectInfo = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/projectInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.projectInfo = void 0;
    var PROJECT_VERSION_1 = require_PROJECT_VERSION();
    var projectInfo2 = {
      projectName: "react-streaming",
      projectVersion: PROJECT_VERSION_1.PROJECT_VERSION,
      npmPackageName: "react-streaming",
      githubRepository: "https://github.com/brillout/react-streaming"
    };
    exports.projectInfo = projectInfo2;
  }
});

// node_modules/.pnpm/@brillout+picocolors@1.0.26/node_modules/@brillout/picocolors/dist/cjs/picocolors.js
var require_picocolors = __commonJS({
  "node_modules/.pnpm/@brillout+picocolors@1.0.26/node_modules/@brillout/picocolors/dist/cjs/picocolors.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rm = void 0;
    if (isBrowser5())
      throw new Error("This file should never be included in the browser.");
    var p13 = typeof process === "undefined" ? {} : process;
    var argv2 = p13.argv || [];
    var env2 = p13.env || {};
    var isColorSupported2 = !(!!env2.NO_COLOR || argv2.includes("--no-color")) && (!!env2.FORCE_COLOR || argv2.includes("--color") || p13.platform === "win32" || (p13.stdout || {}).isTTY && env2.TERM !== "dumb" || !!env2.CI);
    var formatter2 = (open, close, replace = open) => (input) => {
      let string = "" + input;
      let index = string.indexOf(close, open.length);
      return ~index ? open + replaceClose2(string, close, replace, index) + close : open + string + close;
    };
    var replaceClose2 = (string, close, replace, index) => {
      let start = string.substring(0, index) + replace;
      let end = string.substring(index + close.length);
      let nextIndex = end.indexOf(close);
      return ~nextIndex ? start + replaceClose2(end, close, replace, nextIndex) : start + end;
    };
    var createColors2 = (enabled = isColorSupported2) => {
      const cyan = formatter2("\x1B[36m", "\x1B[39m");
      return {
        isColorSupported: enabled,
        code: enabled ? cyan : (s37) => `\`${s37}\``,
        string: enabled ? cyan : (s37) => `'${s37}'`,
        reset: enabled ? (s37) => `\x1B[0m${s37}\x1B[0m` : String,
        bold: enabled ? formatter2("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m") : String,
        dim: enabled ? formatter2("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m") : String,
        italic: enabled ? formatter2("\x1B[3m", "\x1B[23m") : String,
        underline: enabled ? formatter2("\x1B[4m", "\x1B[24m") : String,
        inverse: enabled ? formatter2("\x1B[7m", "\x1B[27m") : String,
        hidden: enabled ? formatter2("\x1B[8m", "\x1B[28m") : String,
        strikethrough: enabled ? formatter2("\x1B[9m", "\x1B[29m") : String,
        black: enabled ? formatter2("\x1B[30m", "\x1B[39m") : String,
        red: enabled ? formatter2("\x1B[31m", "\x1B[39m") : String,
        green: enabled ? formatter2("\x1B[32m", "\x1B[39m") : String,
        yellow: enabled ? formatter2("\x1B[33m", "\x1B[39m") : String,
        blue: enabled ? formatter2("\x1B[34m", "\x1B[39m") : String,
        magenta: enabled ? formatter2("\x1B[35m", "\x1B[39m") : String,
        cyan: enabled ? cyan : String,
        white: enabled ? formatter2("\x1B[37m", "\x1B[39m") : String,
        gray: enabled ? formatter2("\x1B[90m", "\x1B[39m") : String,
        bgBlack: enabled ? formatter2("\x1B[40m", "\x1B[49m") : String,
        bgRed: enabled ? formatter2("\x1B[41m", "\x1B[49m") : String,
        bgGreen: enabled ? formatter2("\x1B[42m", "\x1B[49m") : String,
        bgYellow: enabled ? formatter2("\x1B[43m", "\x1B[49m") : String,
        bgBlue: enabled ? formatter2("\x1B[44m", "\x1B[49m") : String,
        bgMagenta: enabled ? formatter2("\x1B[45m", "\x1B[49m") : String,
        bgCyan: enabled ? formatter2("\x1B[46m", "\x1B[49m") : String,
        bgWhite: enabled ? formatter2("\x1B[47m", "\x1B[49m") : String
      };
    };
    var pc2 = createColors2();
    exports.default = pc2;
    function isBrowser5() {
      return Object.getOwnPropertyDescriptor(globalThis, "window")?.get?.toString().includes("[native code]") ?? false;
    }
    function stripAnsi2(string) {
      return string.replace(ansiRegex3, "");
    }
    exports.rm = stripAnsi2;
    var ansiRegex3 = getAnsiRegex3();
    function getAnsiRegex3() {
      const pattern = [
        "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
        "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
      ].join("|");
      return new RegExp(pattern, "g");
    }
    try {
      module.exports = Object.assign(exports.default, exports);
    } catch {
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/assert.js
var require_assert = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/assert.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    var _a;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getProjectError = exports.assertInfo = exports.assertWarning = exports.assertUsage = exports.assert = void 0;
    var createErrorWithCleanStackTrace_1 = require_createErrorWithCleanStackTrace();
    var getGlobalObject_1 = require_getGlobalObject();
    var projectInfo_1 = require_projectInfo();
    var picocolors_1 = __importDefault2(require_picocolors());
    var errorPrefix = `[${projectInfo_1.projectInfo.npmPackageName}@${projectInfo_1.projectInfo.projectVersion}]`;
    var internalErrorPrefix2 = `${errorPrefix}[Bug]`;
    var usageErrorPrefix2 = `${errorPrefix}[Wrong Usage]`;
    var warningPrefix = `${errorPrefix}[Warning]`;
    var infoPrefix = `${errorPrefix}[Info]`;
    var numberOfStackTraceLinesToRemove3 = 2;
    var globalObject11 = (0, getGlobalObject_1.getGlobalObject)("assert.ts", {
      versions: /* @__PURE__ */ new Set(),
      alreadyLogged: /* @__PURE__ */ new Set()
    });
    var { versions } = globalObject11;
    var alreadyLogged = (_a = globalObject11.alreadyLogged) !== null && _a !== void 0 ? _a : (
      // TODO/eventually: remove
      // We need to set the same default again because older react-streaming versions (published before 11.03.2025) don't set any default in their getGlobalObject() call
      /* @__PURE__ */ new Set()
    );
    assertSingleVersion();
    function assert4(condition, debugInfo) {
      if (condition) {
        return;
      }
      const debugStr = (() => {
        if (!debugInfo) {
          return "";
        }
        const debugInfoSerialized = typeof debugInfo === "string" ? debugInfo : "`" + JSON.stringify(debugInfo) + "`";
        return `Debug info (this is for the ${projectInfo_1.projectInfo.projectName} maintainers; you can ignore this): ${debugInfoSerialized}.`;
      })();
      const internalError = (0, createErrorWithCleanStackTrace_1.createErrorWithCleanStackTrace)([
        `${internalErrorPrefix2} You stumbled upon a bug in ${projectInfo_1.projectInfo.projectName}'s source code.`,
        `Reach out at ${projectInfo_1.projectInfo.githubRepository}/issues/new and include this error stack (the error stack is usually enough to fix the problem).`,
        "A maintainer will fix the bug (usually under 24 hours).",
        `Do not hesitate to reach out as it makes ${projectInfo_1.projectInfo.projectName} more robust.`,
        debugStr
      ].join(" "), numberOfStackTraceLinesToRemove3);
      throw internalError;
    }
    exports.assert = assert4;
    function assertUsage3(condition, errorMessage) {
      if (condition) {
        return;
      }
      const whiteSpace = errorMessage.startsWith("[") ? "" : " ";
      const usageError = (0, createErrorWithCleanStackTrace_1.createErrorWithCleanStackTrace)(`${usageErrorPrefix2}${whiteSpace}${errorMessage}`, numberOfStackTraceLinesToRemove3);
      throw usageError;
    }
    exports.assertUsage = assertUsage3;
    function getProjectError2(errorMessage) {
      const pluginError = (0, createErrorWithCleanStackTrace_1.createErrorWithCleanStackTrace)(`${errorPrefix} ${errorMessage}`, numberOfStackTraceLinesToRemove3);
      return pluginError;
    }
    exports.getProjectError = getProjectError2;
    function assertWarning3(condition, errorMessage, { onlyOnce, showStackTrace }) {
      if (condition) {
        return;
      }
      const msg = `${warningPrefix} ${errorMessage}`;
      if (onlyOnce) {
        const key = onlyOnce === true ? msg : onlyOnce;
        if (alreadyLogged.has(key)) {
          return;
        } else {
          alreadyLogged.add(key);
        }
      }
      if (showStackTrace) {
        console.warn(new Error(msg));
      } else {
        console.warn(msg);
      }
    }
    exports.assertWarning = assertWarning3;
    function assertInfo2(condition, errorMessage, { onlyOnce }) {
      if (condition) {
        return;
      }
      const msg = `${infoPrefix} ${errorMessage}`;
      if (onlyOnce) {
        const key = msg;
        if (alreadyLogged.has(key)) {
          return;
        } else {
          alreadyLogged.add(key);
        }
      }
      console.log(msg);
    }
    exports.assertInfo = assertInfo2;
    function assertSingleVersion() {
      versions.add(projectInfo_1.projectInfo.projectVersion);
      if (versions.size >= 2) {
        const versionsStr = Array.from(versions).map((v5) => `${projectInfo_1.projectInfo.projectName}@${v5}`).join(" and ");
        assertWarning3(false, `${versionsStr} loaded which is highly discouraged, see ${picocolors_1.default.underline("https://vike.dev/warning/version-mismatch")}`, { onlyOnce: true });
      }
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isBrowser.js
var require_isBrowser = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isBrowser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = void 0;
    function isBrowser5() {
      return typeof window !== "undefined" && typeof window.scrollY === "number";
    }
    exports.isBrowser = isBrowser5;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isCallable.js
var require_isCallable2 = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isCallable.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isCallable = void 0;
    function isCallable3(thing) {
      return thing instanceof Function || typeof thing === "function";
    }
    exports.isCallable = isCallable3;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/objectAssign.js
var require_objectAssign = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/objectAssign.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.objectAssign = void 0;
    function objectAssign2(obj, objAddendum) {
      Object.assign(obj, objAddendum);
    }
    exports.objectAssign = objectAssign2;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/debug.js
var require_debug = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/debug.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isDebugEnabled = exports.createDebugger = void 0;
    var isBrowser_1 = require_isBrowser();
    var isCallable_1 = require_isCallable2();
    var objectAssign_1 = require_objectAssign();
    var assert_1 = require_assert();
    (0, assert_1.assert)(!(0, isBrowser_1.isBrowser)(), "utils/debug.js loaded in browser");
    globalThis.__brillout_debug_createDebugger = createDebugger2;
    function createDebugger2(namespace, optionsGlobal) {
      const debugWithOptions = (options) => {
        return (msg, info) => {
          if (!isDebugEnabled(namespace))
            return;
          if (info !== void 0) {
            msg += strInfo(info, Object.assign(Object.assign({}, optionsGlobal), options));
          }
          console.log("\x1B[1m%s\x1B[0m", namespace, msg);
        };
      };
      const debug5 = (msg, info) => debugWithOptions({})(msg, info);
      (0, objectAssign_1.objectAssign)(debug5, { options: debugWithOptions, isEnabled: isDebugEnabled(namespace) });
      return debug5;
    }
    exports.createDebugger = createDebugger2;
    function isDebugEnabled(namespace) {
      var _a;
      let DEBUG3;
      try {
        DEBUG3 = process.env.DEBUG;
      } catch (_b) {
      }
      return (_a = DEBUG3 === null || DEBUG3 === void 0 ? void 0 : DEBUG3.includes(namespace)) !== null && _a !== void 0 ? _a : false;
    }
    exports.isDebugEnabled = isDebugEnabled;
    function strInfo(info, options) {
      var _a, _b;
      if (info === void 0) {
        return void 0;
      }
      let str = "\n";
      if (typeof info === "string") {
        str += info;
      } else if (Array.isArray(info)) {
        if (info.length === 0) {
          str += (_b = (_a = options.serialization) === null || _a === void 0 ? void 0 : _a.emptyArray) !== null && _b !== void 0 ? _b : "[]";
        } else {
          str += info.map(strUnknown2).join("\n");
        }
      } else {
        str += strUnknown2(info);
      }
      str = pad2(str);
      return str;
    }
    function pad2(str) {
      const PADDING = "     ";
      const terminalWidth = getTerminalWidth2();
      const lines = [];
      str.split("\n").forEach((line) => {
        if (!terminalWidth) {
          lines.push(line);
        } else {
          chunk2(line, terminalWidth - PADDING.length).forEach((chunk3) => {
            lines.push(chunk3);
          });
        }
      });
      return lines.join("\n" + PADDING);
    }
    function chunk2(str, size) {
      if (str.length <= size) {
        return [str];
      }
      const chunks = str.match(new RegExp(".{1," + size + "}", "g"));
      (0, assert_1.assert)(chunks);
      return chunks;
    }
    function strUnknown2(thing) {
      return typeof thing === "string" ? thing : strObj2(thing);
    }
    function strObj2(obj, newLines = false) {
      return JSON.stringify(obj, replaceFunctionSerializer2, newLines ? 2 : void 0);
    }
    function replaceFunctionSerializer2(_key, value) {
      if ((0, isCallable_1.isCallable)(value)) {
        return value.toString().split(/\s+/).join(" ");
      }
      return value;
    }
    function getTerminalWidth2() {
      return typeof process !== "undefined" && typeof process.stdout !== "undefined" && process.stdout.columns || void 0;
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isPromise.js
var require_isPromise = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isPromise.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isPromise = void 0;
    var isCallable_1 = require_isCallable2();
    function isPromise2(val) {
      return typeof val === "object" && val !== null && "then" in val && (0, isCallable_1.isCallable)(val.then);
    }
    exports.isPromise = isPromise2;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isVikeReactApp.js
var require_isVikeReactApp = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/isVikeReactApp.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isVikeReactApp = void 0;
    function isVikeReactApp2() {
      const g9 = globalThis;
      return !!g9._isVikeReactApp;
    }
    exports.isVikeReactApp = isVikeReactApp2;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/assertVersion.js
var require_assertVersion = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/utils/assertVersion.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isVersionOrAbove = exports.assertVersion = void 0;
    var assert_js_1 = require_assert();
    function assertVersion2(dependencyName, versionActual, versionExpected) {
      (0, assert_js_1.assert)(versionActual);
      (0, assert_js_1.assert)(versionExpected);
      (0, assert_js_1.assertUsage)(isVersionOrAbove2(versionActual, versionExpected), `${dependencyName} ${versionActual} isn't supported, use ${dependencyName} >= ${versionExpected} instead.`);
    }
    exports.assertVersion = assertVersion2;
    function isVersionOrAbove2(versionActual, versionExpected) {
      const p1 = parseVersion2(versionActual);
      const p22 = parseVersion2(versionExpected);
      if (p1[0] !== p22[0])
        return p1[0] > p22[0];
      if (p1[1] !== p22[1])
        return p1[1] > p22[1];
      if (p1[2] !== p22[2])
        return p1[2] > p22[2];
      return true;
    }
    exports.isVersionOrAbove = isVersionOrAbove2;
    function parseVersion2(version) {
      version = version.split("-")[0];
      let partsStr = version.split(".");
      partsStr = partsStr.slice(0, 3);
      (0, assert_js_1.assert)(partsStr.length === 3);
      (0, assert_js_1.assert)(partsStr.every((s37) => s37.length > 0));
      const parts = partsStr.map((s37) => parseInt(s37, 10));
      return parts;
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/utils.js
var require_utils2 = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/utils.js"(exports) {
    "use strict";
    var __createBinding2 = exports && exports.__createBinding || (Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    });
    var __exportStar2 = exports && exports.__exportStar || function(m11, exports2) {
      for (var p13 in m11) if (p13 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p13)) __createBinding2(exports2, m11, p13);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar2(require_assert(), exports);
    __exportStar2(require_debug(), exports);
    __exportStar2(require_isPromise(), exports);
    __exportStar2(require_isBrowser(), exports);
    __exportStar2(require_getGlobalObject(), exports);
    __exportStar2(require_isVikeReactApp(), exports);
    __exportStar2(require_assertVersion(), exports);
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/useAsync/useSuspenseData.js
var require_useSuspenseData = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/useAsync/useSuspenseData.js"(exports) {
    "use strict";
    var __createBinding2 = exports && exports.__createBinding || (Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    });
    var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o6, v5) {
      Object.defineProperty(o6, "default", { enumerable: true, value: v5 });
    } : function(o6, v5) {
      o6["default"] = v5;
    });
    var __importStar2 = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k4 in mod) if (k4 !== "default" && Object.prototype.hasOwnProperty.call(mod, k4)) __createBinding2(result, mod, k4);
      }
      __setModuleDefault2(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SuspenseData = exports.useSuspenseData = void 0;
    var react_1 = __importStar2(require_react());
    var utils_1 = require_utils2();
    var globalObject11 = (0, utils_1.getGlobalObject)("useSuspenseData.ts", {
      ctxSuspenses: react_1.default.createContext(void 0)
    });
    function SuspenseData({ children }) {
      const suspenses = {};
      return react_1.default.createElement(globalObject11.ctxSuspenses.Provider, { value: suspenses }, children);
    }
    exports.SuspenseData = SuspenseData;
    function useSuspenseData() {
      const suspenses = (0, react_1.useContext)(globalObject11.ctxSuspenses);
      return suspenses;
    }
    exports.useSuspenseData = useSuspenseData;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/useStream.js
var require_useStream = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/useStream.js"(exports) {
    "use strict";
    var __createBinding2 = exports && exports.__createBinding || (Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    });
    var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o6, v5) {
      Object.defineProperty(o6, "default", { enumerable: true, value: v5 });
    } : function(o6, v5) {
      o6["default"] = v5;
    });
    var __importStar2 = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k4 in mod) if (k4 !== "default" && Object.prototype.hasOwnProperty.call(mod, k4)) __createBinding2(result, mod, k4);
      }
      __setModuleDefault2(result, mod);
      return result;
    };
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamProvider = exports.useStreamOptional = exports.useStream = void 0;
    var picocolors_1 = __importDefault2(require_picocolors());
    var react_1 = __importStar2(require_react());
    var utils_1 = require_utils2();
    var globalObject11 = (0, utils_1.getGlobalObject)("useStream.ts", {
      StreamContext: react_1.default.createContext(null)
    });
    var StreamProvider = globalObject11.StreamContext.Provider;
    exports.StreamProvider = StreamProvider;
    function useStream() {
      const streamUtils = (0, react_1.useContext)(globalObject11.StreamContext);
      (0, utils_1.assertUsage)(streamUtils, getErrMsg2());
      return streamUtils;
    }
    exports.useStream = useStream;
    function useStreamOptional() {
      const streamUtils = (0, react_1.useContext)(globalObject11.StreamContext);
      return streamUtils;
    }
    exports.useStreamOptional = useStreamOptional;
    function getErrMsg2() {
      if ((0, utils_1.isVikeReactApp)()) {
        return `HTML streaming (https://vike.dev/streaming) disabled: set the setting ${picocolors_1.default.code("stream")} (https://vike.dev/stream) to ${picocolors_1.default.code("true")}.`;
      } else {
        return `react-streaming (https://github.com/brillout/react-streaming) isn't installed: make sure to use ${picocolors_1.default.code("renderToStream()")} to render your root React component, see https://github.com/brillout/react-streaming#get-started`;
      }
    }
  }
});

// node_modules/.pnpm/isbot-fast@1.2.0/node_modules/isbot-fast/index.js
var require_isbot_fast = __commonJS({
  "node_modules/.pnpm/isbot-fast@1.2.0/node_modules/isbot-fast/index.js"(exports, module) {
    var bots = [
      // generic
      "bot",
      // googlebot, bingbot, telegrambot, twitterbot, yandexbot, etc.
      "check",
      "cloud",
      // cloudflare, cloudinary, etc.
      "crawler",
      "download",
      "monitor",
      // monitor & monitoring
      "preview",
      // skypeuripreview, bingpreview, yahoo link preview, etc.
      "scan",
      "spider",
      // baiduspider, 360spider, screaming frog seo spider, etc.
      // search engines
      "google",
      "qwantify",
      "yahoo",
      // aggregators, messengers and social networks
      "facebookexternalhit",
      "flipboard",
      "tumblr",
      "vkshare",
      "whatsapp",
      // downloaders
      "curl",
      "perl",
      "python",
      "wget",
      // high activity scanners
      "heritrix",
      "ia_archiver"
    ];
    var createRegex = () => new RegExp(`(${bots.join("|")})`, "i");
    var isBotRegex = createRegex();
    module.exports = (userAgent) => isBotRegex.test(userAgent);
    module.exports.extend = (additionalBots) => {
      bots = [...new Set(bots.concat(additionalBots))];
      isBotRegex = createRegex();
    };
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/resolveSeoStrategy.js
var require_resolveSeoStrategy = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/resolveSeoStrategy.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.resolveSeoStrategy = void 0;
    var isbot_fast_1 = __importDefault2(require_isbot_fast());
    var picocolors_1 = __importDefault2(require_picocolors());
    var utils_1 = require_utils2();
    function resolveSeoStrategy(options = {}) {
      const seoStrategy = options.seoStrategy || "conservative";
      if (!options.userAgent) {
        showWarning();
        return { disableStream: true };
      }
      if (!(0, isbot_fast_1.default)(options.userAgent)) {
        return { disableStream: false };
      }
      const isGoogleBot = options.userAgent.toLowerCase().includes("googlebot");
      if (seoStrategy === "google-speed" && isGoogleBot) {
        return { disableStream: false };
      }
      return { disableStream: true };
    }
    exports.resolveSeoStrategy = resolveSeoStrategy;
    function showWarning() {
      const isVikeReact = (0, utils_1.isVikeReactApp)();
      const link = isVikeReact ? "https://vike.dev/streaming" : "https://github.com/brillout/react-streaming";
      const help = isVikeReact ? `the HTTP request headers with ${picocolors_1.default.code("renderPage({ headersOriginal })")}` : picocolors_1.default.code("options.userAgent");
      const errMsg = [
        `HTML streaming (${link}) disabled because the User-Agent request header is unknown: make sure to provide`,
        `${help}.`,
        "The HTTP User-Agent request header is needed so that HTML streaming can automatically be disabled for bots and crawlers, see https://github.com/brillout/react-streaming#bots for more information."
      ];
      if (!isVikeReact) {
        errMsg.push(`Or set ${picocolors_1.default.code("options.disable")} to ${picocolors_1.default.code("true")} to suppress this warning.`);
      }
      (0, utils_1.assertWarning)(false, errMsg.join(" "), { onlyOnce: true });
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/common.js
var require_common = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/common.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.wrapStreamEnd = exports.assertReactImport = exports.afterReactBugCatch = exports.debugFlow = void 0;
    var utils_1 = require_utils2();
    exports.debugFlow = (0, utils_1.createDebugger)("react-streaming:flow");
    function afterReactBugCatch(fn) {
      setTimeout(() => {
        fn();
      }, 0);
    }
    exports.afterReactBugCatch = afterReactBugCatch;
    function assertReactImport(fn, fnName) {
      (0, utils_1.assert)(typeof fn === "function");
      (0, utils_1.assertUsage)(fn, `Couldn't import ${fnName}() from 'react-dom'`);
    }
    exports.assertReactImport = assertReactImport;
    function wrapStreamEnd(streamEnd, didError) {
      return streamEnd.then(() => new Promise((r8) => setTimeout(r8, 0))).then(() => !didError);
    }
    exports.wrapStreamEnd = wrapStreamEnd;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream.js
var require_renderToStream = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream.js"(exports) {
    "use strict";
    var __createBinding2 = exports && exports.__createBinding || (Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    });
    var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o6, v5) {
      Object.defineProperty(o6, "default", { enumerable: true, value: v5 });
    } : function(o6, v5) {
      o6["default"] = v5;
    });
    var __importStar2 = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k4 in mod) if (k4 !== "default" && Object.prototype.hasOwnProperty.call(mod, k4)) __createBinding2(result, mod, k4);
      }
      __setModuleDefault2(result, mod);
      return result;
    };
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.renderToWebStream_set = exports.renderToNodeStream_set = exports.disable = exports.renderToStream = void 0;
    var react_1 = __importDefault2(require_react());
    var server_1 = __importStar2(require_server_node());
    var useSuspenseData_1 = require_useSuspenseData();
    var useStream_1 = require_useStream();
    var resolveSeoStrategy_1 = require_resolveSeoStrategy();
    var utils_1 = require_utils2();
    var common_1 = require_common();
    var globalObject11 = (0, utils_1.getGlobalObject)("renderToStream.ts", {
      renderToNodeStream: null,
      renderToWebStream: null
    });
    assertReact();
    var globalConfig = globalThis.__react_streaming = globalThis.__react_streaming || {
      disable: false
    };
    function disable() {
      globalConfig.disable = true;
    }
    exports.disable = disable;
    async function renderToStream2(element, options = {}) {
      var _a, _b;
      (0, utils_1.assertUsage)(!options.renderToPipeableStream && !options.renderToReadableStream, "using deprecated options");
      element = react_1.default.createElement(useSuspenseData_1.SuspenseData, null, element);
      const buffer = [];
      let injectToStream = async (chunk2) => {
        buffer.push(chunk2);
      };
      const doNotClosePromise = { promise: null };
      let doNotCloseTimeout = null;
      const doNotClose = () => {
        let resolve;
        doNotClosePromise.promise = new Promise((r8) => resolve = r8);
        if (doNotCloseTimeout)
          clearTimeout(doNotCloseTimeout);
        doNotCloseTimeout = setTimeout(() => {
          (0, utils_1.assertUsage)(false, "makeClosableAgain() not called after 10 seconds (`const makeClosableAgain = stream.doNotClose()`)");
        }, 10 * 1e3);
        const makeClosableAgain = () => {
          resolve();
          clearTimeout(doNotCloseTimeout);
        };
        return makeClosableAgain;
      };
      let abortFn;
      const setAbortFn = (fn) => abortFn = fn;
      const streamTimeout = (() => {
        var _a2;
        if (options.timeout === null)
          return null;
        return setTimeout(() => {
          var _a3;
          (0, utils_1.assert)(abortFn);
          abortFn();
          (_a3 = options.onTimeout) === null || _a3 === void 0 ? void 0 : _a3.call(options);
        }, ((_a2 = options.timeout) !== null && _a2 !== void 0 ? _a2 : 20) * 1e3);
      })();
      const clearTimeouts = () => {
        if (streamTimeout !== null)
          clearTimeout(streamTimeout);
        if (doNotCloseTimeout !== null)
          clearTimeout(doNotCloseTimeout);
      };
      let hasStreamEnded = () => false;
      element = react_1.default.createElement(useStream_1.StreamProvider, {
        value: {
          injectToStream: (chunk2, options2) => injectToStream(chunk2, options2),
          hasStreamEnded: () => hasStreamEnded(),
          doNotClose
        }
      }, element);
      const disable2 = globalConfig.disable || ((_a = options.disable) !== null && _a !== void 0 ? _a : (0, resolveSeoStrategy_1.resolveSeoStrategy)(options).disableStream);
      const webStream = (_b = options.webStream) !== null && _b !== void 0 ? _b : !globalObject11.renderToNodeStream;
      (0, common_1.debugFlow)(`disable === ${disable2} && webStream === ${webStream}`);
      let ret;
      const retCommon = { disabled: disable2, doNotClose };
      if (!webStream) {
        ret = Object.assign(Object.assign({}, retCommon), await globalObject11.renderToNodeStream(element, disable2, options, doNotClosePromise, setAbortFn, clearTimeouts));
      } else {
        (0, utils_1.assert)(globalObject11.renderToWebStream);
        ret = Object.assign(Object.assign({}, retCommon), await globalObject11.renderToWebStream(element, disable2, options, doNotClosePromise, setAbortFn, clearTimeouts));
      }
      injectToStream = ret.injectToStream;
      buffer.forEach((chunk2) => injectToStream(chunk2));
      buffer.length = 0;
      hasStreamEnded = ret.hasStreamEnded;
      (0, common_1.debugFlow)("promise `await renderToStream()` resolved");
      return ret;
    }
    exports.renderToStream = renderToStream2;
    function renderToNodeStream_set(renderToNodeStream) {
      globalObject11.renderToNodeStream = renderToNodeStream;
    }
    exports.renderToNodeStream_set = renderToNodeStream_set;
    function renderToWebStream_set(renderToWebStream) {
      globalObject11.renderToWebStream = renderToWebStream;
    }
    exports.renderToWebStream_set = renderToWebStream_set;
    function assertReact() {
      const versionMajor = parseInt(server_1.version.split(".")[0], 10);
      (0, utils_1.assertUsage)(versionMajor >= 18, `\`react-dom@${server_1.version}\` was loaded, but react-streaming only works with React version 18 or greater.`);
      (0, utils_1.assert)(typeof server_1.default.renderToPipeableStream === "function" || typeof server_1.default.renderToReadableStream === "function");
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/index.js
var require_server = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.disable = exports.renderToStream = void 0;
    var assert_1 = require_assert();
    var isBrowser_1 = require_isBrowser();
    (0, assert_1.assertUsage)(!(0, isBrowser_1.isBrowser)(), "The file node_modules/react-streaming/dist/{esm,cjs}/server/index.js is loaded in the browser but it shouldn't. Make sure to never `import { something } from 'react-streaming/server'` in code that runs on the client-side. Also make sure your bundler picks the right node_modules/react-streaming/package.json#exports entries.");
    var renderToStream_1 = require_renderToStream();
    Object.defineProperty(exports, "renderToStream", { enumerable: true, get: function() {
      return renderToStream_1.renderToStream;
    } });
    Object.defineProperty(exports, "disable", { enumerable: true, get: function() {
      return renderToStream_1.disable;
    } });
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/orchestrateChunks.js
var require_orchestrateChunks = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/orchestrateChunks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.orchestrateChunks = void 0;
    var utils_1 = require_utils2();
    var debug5 = (0, utils_1.createDebugger)("react-streaming:chunks");
    function orchestrateChunks(streamOperations, doNotClosePromise) {
      let hasEnded = false;
      let lastWritePromise = null;
      let firstReactWritePromise_resolve;
      let firstReactWritePromise = new Promise((resolve) => {
        firstReactWritePromise_resolve = () => {
          if (firstReactWritePromise === null)
            return;
          firstReactWritePromise = null;
          resolve();
        };
      });
      let isFirstReactWrite = true;
      return { injectToStream, onReactWrite, onBeforeEnd, hasStreamEnded: () => hasEnded };
      function injectToStream(chunk2, options) {
        if (debug5.isEnabled)
          debug5("injectToStream()", getChunkAsString(chunk2));
        if (hasEnded) {
          (0, utils_1.assertUsage)(false, `Cannot inject the following chunk because the stream has already ended. Consider using the doNotClose() and hasStreamEnded() utilities. The chunk:
${getChunkAsString(chunk2)}`);
        }
        writeChunkInSequence(chunk2, options === null || options === void 0 ? void 0 : options.flush);
      }
      function writeChunkInSequence(chunk2, flush) {
        const lastWritePromisePrevious = lastWritePromise;
        lastWritePromise = (async () => {
          if (firstReactWritePromise)
            await firstReactWritePromise;
          if (lastWritePromisePrevious)
            await lastWritePromisePrevious;
          if ((0, utils_1.isPromise)(chunk2))
            chunk2 = await chunk2;
          writeChunkNow(chunk2, flush);
        })();
      }
      function writeChunkNow(chunk2, flush) {
        (0, utils_1.assert)(!hasEnded);
        (0, utils_1.assert)(streamOperations.operations);
        streamOperations.operations.writeChunk(chunk2);
        if (debug5.isEnabled)
          debug5(">>> WRITE", getChunkAsString(chunk2));
        if (flush && streamOperations.operations.flush !== null) {
          streamOperations.operations.flush();
          debug5(">>> FLUSH");
        }
      }
      function onReactWrite(chunk2) {
        if (debug5.isEnabled)
          debug5("onReactWrite()", getChunkAsString(chunk2));
        (0, utils_1.assert)(!hasEnded);
        const flush = true;
        if (isFirstReactWrite) {
          debug5(">>> START");
          writeChunkNow(chunk2, flush);
          setTimeout(() => {
            isFirstReactWrite = false;
            firstReactWritePromise_resolve();
          }, 0);
        } else {
          writeChunkInSequence(chunk2, flush);
        }
      }
      async function onBeforeEnd() {
        firstReactWritePromise_resolve();
        await new Promise((r8) => setTimeout(r8, 0));
        await doNotClosePromise.promise;
        await lastWritePromise;
        hasEnded = true;
        debug5(">>> END");
      }
    }
    exports.orchestrateChunks = orchestrateChunks;
    function getChunkAsString(chunk2) {
      try {
        return new TextDecoder().decode(chunk2);
      } catch (err) {
        return String(chunk2);
      }
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/createPipeWrapper.js
var require_createPipeWrapper = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/createPipeWrapper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createPipeWrapper = void 0;
    var utils_1 = require_utils2();
    var orchestrateChunks_1 = require_orchestrateChunks();
    var debug5 = (0, utils_1.createDebugger)("react-streaming:createPipeWrapper");
    var stream_1 = __require("stream");
    async function createPipeWrapper(pipeFromReact, onReactBug, clearTimeouts, doNotClosePromise) {
      const { pipeForUser, streamEnd } = createPipeForUser();
      const streamOperations = {
        operations: null
      };
      const { injectToStream, onReactWrite, onBeforeEnd, hasStreamEnded } = (0, orchestrateChunks_1.orchestrateChunks)(streamOperations, doNotClosePromise);
      return { pipeForUser, streamEnd, injectToStream, hasStreamEnded };
      function createPipeForUser() {
        debug5("createPipeForUser()");
        let onEnded;
        const streamEnd2 = new Promise((r8) => {
          onEnded = () => r8();
        });
        const pipeForUser2 = (writableFromUser) => {
          const writableForReact = new stream_1.Writable({
            write(chunk2, _encoding, callback) {
              debug5("write");
              if (!writableFromUser.destroyed) {
                onReactWrite(chunk2);
              } else {
                writableForReact.destroy();
              }
              callback();
            },
            async final(callback) {
              debug5("final");
              clearTimeouts();
              await onBeforeEnd();
              writableFromUser.end();
              onEnded();
              callback();
            },
            destroy(err) {
              debug5(`destroy (\`!!err === ${!!err}\`)`);
              clearTimeouts();
              if (err)
                onReactBug(err);
              writableFromUser.destroy(err !== null && err !== void 0 ? err : void 0);
              onEnded();
            }
          });
          const flush = () => {
            if (typeof writableFromUser.flush === "function") {
              ;
              writableFromUser.flush();
              debug5("stream flushed (Node.js Writable)");
            }
          };
          streamOperations.operations = {
            flush,
            writeChunk(chunk2) {
              writableFromUser.write(chunk2);
            }
          };
          writableForReact.flush = flush;
          pipeFromReact(writableForReact);
        };
        return { pipeForUser: pipeForUser2, streamEnd: streamEnd2 };
      }
    }
    exports.createPipeWrapper = createPipeWrapper;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/renderToNodeStream.js
var require_renderToNodeStream = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/renderToNodeStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.renderToNodeStream = void 0;
    var server_node_1 = require_server_node();
    var createPipeWrapper_1 = require_createPipeWrapper();
    var common_1 = require_common();
    async function renderToNodeStream(element, disable, options, doNotClosePromise, setAbortFn, clearTimeouts) {
      var _a;
      (0, common_1.debugFlow)("creating Node.js Stream Pipe");
      let onAllReady;
      const allReady = new Promise((r8) => {
        onAllReady = () => r8();
      });
      let onShellReady;
      const shellReady = new Promise((r8) => {
        onShellReady = () => r8();
      });
      let didError = false;
      let firstErr = null;
      let reactBug = null;
      const onError = (err) => {
        (0, common_1.debugFlow)("[react] onError() / onShellError()");
        didError = true;
        firstErr !== null && firstErr !== void 0 ? firstErr : firstErr = err;
        onShellReady();
        (0, common_1.afterReactBugCatch)(() => {
          var _a2;
          if (err !== reactBug) {
            (_a2 = options.onBoundaryError) === null || _a2 === void 0 ? void 0 : _a2.call(options, err);
          }
        });
      };
      const renderToPipeableStream = (_a = options.renderToPipeableStream) !== null && _a !== void 0 ? _a : server_node_1.renderToPipeableStream;
      if (!options.renderToPipeableStream) {
        (0, common_1.assertReactImport)(renderToPipeableStream, "renderToPipeableStream");
      }
      const { pipe: pipeOriginal, abort } = renderToPipeableStream(element, Object.assign(Object.assign({}, options.streamOptions), {
        onShellReady() {
          (0, common_1.debugFlow)("[react] onShellReady()");
          onShellReady();
        },
        onAllReady() {
          (0, common_1.debugFlow)("[react] onAllReady()");
          onShellReady();
          onAllReady();
        },
        onShellError: onError,
        onError
      }));
      setAbortFn(() => {
        abort();
      });
      let promiseResolved = false;
      const onReactBug = (err) => {
        (0, common_1.debugFlow)("react bug");
        didError = true;
        firstErr !== null && firstErr !== void 0 ? firstErr : firstErr = err;
        reactBug = err;
        if (reactBug !== firstErr || promiseResolved) {
          console.error(reactBug);
        }
      };
      const { pipeForUser, injectToStream, streamEnd, hasStreamEnded } = await (0, createPipeWrapper_1.createPipeWrapper)(pipeOriginal, onReactBug, clearTimeouts, doNotClosePromise);
      await shellReady;
      if (didError)
        throw firstErr;
      if (disable)
        await allReady;
      if (didError)
        throw firstErr;
      promiseResolved = true;
      return {
        pipe: pipeForUser,
        abort,
        readable: null,
        streamEnd: (0, common_1.wrapStreamEnd)(streamEnd, didError),
        injectToStream,
        hasStreamEnded
      };
    }
    exports.renderToNodeStream = renderToNodeStream;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/createReadableWrapper.js
var require_createReadableWrapper = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/createReadableWrapper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createReadableWrapper = void 0;
    var orchestrateChunks_1 = require_orchestrateChunks();
    function createReadableWrapper(readableFromReact, clearTimeouts, doNotClosePromise) {
      const streamOperations = {
        operations: null
      };
      let controllerOfUserStream;
      let onEnded;
      const streamEnd = new Promise((r8) => {
        onEnded = () => r8();
      });
      const readableForUser = new ReadableStream({
        start(controller) {
          controllerOfUserStream = controller;
          onReady(onEnded);
        }
      });
      const { injectToStream, onReactWrite, onBeforeEnd, hasStreamEnded } = (0, orchestrateChunks_1.orchestrateChunks)(streamOperations, doNotClosePromise);
      return { readableForUser, streamEnd, injectToStream, hasStreamEnded };
      async function onReady(onEnded2) {
        streamOperations.operations = {
          writeChunk(chunk2) {
            controllerOfUserStream.enqueue(encodeForWebStream2(chunk2));
          },
          flush: null
        };
        const reader = readableFromReact.getReader();
        while (true) {
          let result;
          try {
            result = await reader.read();
          } catch (err) {
            controllerOfUserStream.close();
            throw err;
          }
          const { value, done } = result;
          if (done) {
            break;
          }
          onReactWrite(value);
        }
        clearTimeouts();
        await onBeforeEnd();
        controllerOfUserStream.close();
        onEnded2();
      }
    }
    exports.createReadableWrapper = createReadableWrapper;
    var encoder2;
    function encodeForWebStream2(thing) {
      if (!encoder2) {
        encoder2 = new TextEncoder();
      }
      if (typeof thing === "string") {
        return encoder2.encode(thing);
      }
      return thing;
    }
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server.edge.production.js
var require_react_dom_server_edge_production = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server.edge.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    var ReactDOM2 = require_react_dom();
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    var REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var isArrayImpl = Array.isArray;
    function murmurhash3_32_gc(key, seed) {
      var remainder = key.length & 3;
      var bytes = key.length - remainder;
      var h1 = seed;
      for (seed = 0; seed < bytes; ) {
        var k1 = key.charCodeAt(seed) & 255 | (key.charCodeAt(++seed) & 255) << 8 | (key.charCodeAt(++seed) & 255) << 16 | (key.charCodeAt(++seed) & 255) << 24;
        ++seed;
        k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        k1 = k1 << 15 | k1 >>> 17;
        k1 = 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        h1 ^= k1;
        h1 = h1 << 13 | h1 >>> 19;
        h1 = 5 * (h1 & 65535) + ((5 * (h1 >>> 16) & 65535) << 16) & 4294967295;
        h1 = (h1 & 65535) + 27492 + (((h1 >>> 16) + 58964 & 65535) << 16);
      }
      k1 = 0;
      switch (remainder) {
        case 3:
          k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;
        case 2:
          k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;
        case 1:
          k1 ^= key.charCodeAt(seed) & 255, k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295, k1 = k1 << 15 | k1 >>> 17, h1 ^= 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
      }
      h1 ^= key.length;
      h1 ^= h1 >>> 16;
      h1 = 2246822507 * (h1 & 65535) + ((2246822507 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      h1 ^= h1 >>> 13;
      h1 = 3266489909 * (h1 & 65535) + ((3266489909 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      return (h1 ^ h1 >>> 16) >>> 0;
    }
    function handleErrorInNextTick(error) {
      setTimeout(function() {
        throw error;
      });
    }
    var LocalPromise = Promise;
    var scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : function(callback) {
      LocalPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    };
    var currentView = null;
    var writtenBytes = 0;
    function writeChunk(destination, chunk2) {
      if (0 !== chunk2.byteLength)
        if (2048 < chunk2.byteLength)
          0 < writtenBytes && (destination.enqueue(
            new Uint8Array(currentView.buffer, 0, writtenBytes)
          ), currentView = new Uint8Array(2048), writtenBytes = 0), destination.enqueue(chunk2);
        else {
          var allowableBytes = currentView.length - writtenBytes;
          allowableBytes < chunk2.byteLength && (0 === allowableBytes ? destination.enqueue(currentView) : (currentView.set(chunk2.subarray(0, allowableBytes), writtenBytes), destination.enqueue(currentView), chunk2 = chunk2.subarray(allowableBytes)), currentView = new Uint8Array(2048), writtenBytes = 0);
          currentView.set(chunk2, writtenBytes);
          writtenBytes += chunk2.byteLength;
        }
    }
    function writeChunkAndReturn(destination, chunk2) {
      writeChunk(destination, chunk2);
      return true;
    }
    function completeWriting(destination) {
      currentView && 0 < writtenBytes && (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)), currentView = null, writtenBytes = 0);
    }
    var textEncoder = new TextEncoder();
    function stringToChunk(content4) {
      return textEncoder.encode(content4);
    }
    function stringToPrecomputedChunk(content4) {
      return textEncoder.encode(content4);
    }
    function closeWithError(destination, error) {
      "function" === typeof destination.error ? destination.error(error) : destination.close();
    }
    var assign = Object.assign;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var VALID_ATTRIBUTE_NAME_REGEX = RegExp(
      "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
    );
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty2.call(validatedAttributeNameCache, attributeName))
        return true;
      if (hasOwnProperty2.call(illegalAttributeNameCache, attributeName)) return false;
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
        return validatedAttributeNameCache[attributeName] = true;
      illegalAttributeNameCache[attributeName] = true;
      return false;
    }
    var unitlessNumbers = new Set(
      "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
        " "
      )
    );
    var aliases = /* @__PURE__ */ new Map([
      ["acceptCharset", "accept-charset"],
      ["htmlFor", "for"],
      ["httpEquiv", "http-equiv"],
      ["crossOrigin", "crossorigin"],
      ["accentHeight", "accent-height"],
      ["alignmentBaseline", "alignment-baseline"],
      ["arabicForm", "arabic-form"],
      ["baselineShift", "baseline-shift"],
      ["capHeight", "cap-height"],
      ["clipPath", "clip-path"],
      ["clipRule", "clip-rule"],
      ["colorInterpolation", "color-interpolation"],
      ["colorInterpolationFilters", "color-interpolation-filters"],
      ["colorProfile", "color-profile"],
      ["colorRendering", "color-rendering"],
      ["dominantBaseline", "dominant-baseline"],
      ["enableBackground", "enable-background"],
      ["fillOpacity", "fill-opacity"],
      ["fillRule", "fill-rule"],
      ["floodColor", "flood-color"],
      ["floodOpacity", "flood-opacity"],
      ["fontFamily", "font-family"],
      ["fontSize", "font-size"],
      ["fontSizeAdjust", "font-size-adjust"],
      ["fontStretch", "font-stretch"],
      ["fontStyle", "font-style"],
      ["fontVariant", "font-variant"],
      ["fontWeight", "font-weight"],
      ["glyphName", "glyph-name"],
      ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
      ["glyphOrientationVertical", "glyph-orientation-vertical"],
      ["horizAdvX", "horiz-adv-x"],
      ["horizOriginX", "horiz-origin-x"],
      ["imageRendering", "image-rendering"],
      ["letterSpacing", "letter-spacing"],
      ["lightingColor", "lighting-color"],
      ["markerEnd", "marker-end"],
      ["markerMid", "marker-mid"],
      ["markerStart", "marker-start"],
      ["overlinePosition", "overline-position"],
      ["overlineThickness", "overline-thickness"],
      ["paintOrder", "paint-order"],
      ["panose-1", "panose-1"],
      ["pointerEvents", "pointer-events"],
      ["renderingIntent", "rendering-intent"],
      ["shapeRendering", "shape-rendering"],
      ["stopColor", "stop-color"],
      ["stopOpacity", "stop-opacity"],
      ["strikethroughPosition", "strikethrough-position"],
      ["strikethroughThickness", "strikethrough-thickness"],
      ["strokeDasharray", "stroke-dasharray"],
      ["strokeDashoffset", "stroke-dashoffset"],
      ["strokeLinecap", "stroke-linecap"],
      ["strokeLinejoin", "stroke-linejoin"],
      ["strokeMiterlimit", "stroke-miterlimit"],
      ["strokeOpacity", "stroke-opacity"],
      ["strokeWidth", "stroke-width"],
      ["textAnchor", "text-anchor"],
      ["textDecoration", "text-decoration"],
      ["textRendering", "text-rendering"],
      ["transformOrigin", "transform-origin"],
      ["underlinePosition", "underline-position"],
      ["underlineThickness", "underline-thickness"],
      ["unicodeBidi", "unicode-bidi"],
      ["unicodeRange", "unicode-range"],
      ["unitsPerEm", "units-per-em"],
      ["vAlphabetic", "v-alphabetic"],
      ["vHanging", "v-hanging"],
      ["vIdeographic", "v-ideographic"],
      ["vMathematical", "v-mathematical"],
      ["vectorEffect", "vector-effect"],
      ["vertAdvY", "vert-adv-y"],
      ["vertOriginX", "vert-origin-x"],
      ["vertOriginY", "vert-origin-y"],
      ["wordSpacing", "word-spacing"],
      ["writingMode", "writing-mode"],
      ["xmlnsXlink", "xmlns:xlink"],
      ["xHeight", "x-height"]
    ]);
    var matchHtmlRegExp = /["'&<>]/;
    function escapeTextForBrowser(text3) {
      if ("boolean" === typeof text3 || "number" === typeof text3 || "bigint" === typeof text3)
        return "" + text3;
      text3 = "" + text3;
      var match = matchHtmlRegExp.exec(text3);
      if (match) {
        var html = "", index, lastIndex = 0;
        for (index = match.index; index < text3.length; index++) {
          switch (text3.charCodeAt(index)) {
            case 34:
              match = "&quot;";
              break;
            case 38:
              match = "&amp;";
              break;
            case 39:
              match = "&#x27;";
              break;
            case 60:
              match = "&lt;";
              break;
            case 62:
              match = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += text3.slice(lastIndex, index));
          lastIndex = index + 1;
          html += match;
        }
        text3 = lastIndex !== index ? html + text3.slice(lastIndex, index) : html;
      }
      return text3;
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
    function sanitizeURL(url) {
      return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    var ReactSharedInternals = React8.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var ReactDOMSharedInternals = ReactDOM2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var sharedNotPendingObject = {
      pending: false,
      data: null,
      method: null,
      action: null
    };
    var previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
      f: previousDispatcher.f,
      r: previousDispatcher.r,
      D: prefetchDNS,
      C: preconnect,
      L: preload,
      m: preloadModule,
      X: preinitScript,
      S: preinitStyle,
      M: preinitModuleScript
    };
    var PRELOAD_NO_CREDS = [];
    stringToPrecomputedChunk('"></template>');
    var startInlineScript = stringToPrecomputedChunk("<script>");
    var endInlineScript = stringToPrecomputedChunk("</script>");
    var startScriptSrc = stringToPrecomputedChunk('<script src="');
    var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
    var scriptNonce = stringToPrecomputedChunk('" nonce="');
    var scriptIntegirty = stringToPrecomputedChunk('" integrity="');
    var scriptCrossOrigin = stringToPrecomputedChunk('" crossorigin="');
    var endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
    var scriptRegex = /(<\/|<)(s)(cript)/gi;
    function scriptReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\u0073" : "\\u0053") + suffix2;
    }
    var importMapScriptStart = stringToPrecomputedChunk(
      '<script type="importmap">'
    );
    var importMapScriptEnd = stringToPrecomputedChunk("</script>");
    function createRenderState(resumableState, nonce, externalRuntimeConfig, importMap, onHeaders, maxHeadersLength) {
      var inlineScriptWithNonce = void 0 === nonce ? startInlineScript : stringToPrecomputedChunk(
        '<script nonce="' + escapeTextForBrowser(nonce) + '">'
      ), idPrefix = resumableState.idPrefix;
      externalRuntimeConfig = [];
      var bootstrapScriptContent = resumableState.bootstrapScriptContent, bootstrapScripts = resumableState.bootstrapScripts, bootstrapModules = resumableState.bootstrapModules;
      void 0 !== bootstrapScriptContent && externalRuntimeConfig.push(
        inlineScriptWithNonce,
        stringToChunk(
          ("" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer)
        ),
        endInlineScript
      );
      bootstrapScriptContent = [];
      void 0 !== importMap && (bootstrapScriptContent.push(importMapScriptStart), bootstrapScriptContent.push(
        stringToChunk(
          ("" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)
        )
      ), bootstrapScriptContent.push(importMapScriptEnd));
      importMap = onHeaders ? {
        preconnects: "",
        fontPreloads: "",
        highImagePreloads: "",
        remainingCapacity: 2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
      } : null;
      onHeaders = {
        placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
        segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
        boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
        startInlineScript: inlineScriptWithNonce,
        preamble: createPreambleState(),
        externalRuntimeScript: null,
        bootstrapChunks: externalRuntimeConfig,
        importMapChunks: bootstrapScriptContent,
        onHeaders,
        headers: importMap,
        resets: {
          font: {},
          dns: {},
          connect: { default: {}, anonymous: {}, credentials: {} },
          image: {},
          style: {}
        },
        charsetChunks: [],
        viewportChunks: [],
        hoistableChunks: [],
        preconnects: /* @__PURE__ */ new Set(),
        fontPreloads: /* @__PURE__ */ new Set(),
        highImagePreloads: /* @__PURE__ */ new Set(),
        styles: /* @__PURE__ */ new Map(),
        bootstrapScripts: /* @__PURE__ */ new Set(),
        scripts: /* @__PURE__ */ new Set(),
        bulkPreloads: /* @__PURE__ */ new Set(),
        preloads: {
          images: /* @__PURE__ */ new Map(),
          stylesheets: /* @__PURE__ */ new Map(),
          scripts: /* @__PURE__ */ new Map(),
          moduleScripts: /* @__PURE__ */ new Map()
        },
        nonce,
        hoistableState: null,
        stylesToHoist: false
      };
      if (void 0 !== bootstrapScripts)
        for (importMap = 0; importMap < bootstrapScripts.length; importMap++) {
          var scriptConfig = bootstrapScripts[importMap];
          idPrefix = inlineScriptWithNonce = void 0;
          bootstrapScriptContent = {
            rel: "preload",
            as: "script",
            fetchPriority: "low",
            nonce
          };
          "string" === typeof scriptConfig ? bootstrapScriptContent.href = maxHeadersLength = scriptConfig : (bootstrapScriptContent.href = maxHeadersLength = scriptConfig.src, bootstrapScriptContent.integrity = idPrefix = "string" === typeof scriptConfig.integrity ? scriptConfig.integrity : void 0, bootstrapScriptContent.crossOrigin = inlineScriptWithNonce = "string" === typeof scriptConfig || null == scriptConfig.crossOrigin ? void 0 : "use-credentials" === scriptConfig.crossOrigin ? "use-credentials" : "");
          scriptConfig = resumableState;
          var href = maxHeadersLength;
          scriptConfig.scriptResources[href] = null;
          scriptConfig.moduleScriptResources[href] = null;
          scriptConfig = [];
          pushLinkImpl(scriptConfig, bootstrapScriptContent);
          onHeaders.bootstrapScripts.add(scriptConfig);
          externalRuntimeConfig.push(
            startScriptSrc,
            stringToChunk(escapeTextForBrowser(maxHeadersLength))
          );
          nonce && externalRuntimeConfig.push(
            scriptNonce,
            stringToChunk(escapeTextForBrowser(nonce))
          );
          "string" === typeof idPrefix && externalRuntimeConfig.push(
            scriptIntegirty,
            stringToChunk(escapeTextForBrowser(idPrefix))
          );
          "string" === typeof inlineScriptWithNonce && externalRuntimeConfig.push(
            scriptCrossOrigin,
            stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))
          );
          externalRuntimeConfig.push(endAsyncScript);
        }
      if (void 0 !== bootstrapModules)
        for (bootstrapScripts = 0; bootstrapScripts < bootstrapModules.length; bootstrapScripts++)
          bootstrapScriptContent = bootstrapModules[bootstrapScripts], inlineScriptWithNonce = maxHeadersLength = void 0, idPrefix = {
            rel: "modulepreload",
            fetchPriority: "low",
            nonce
          }, "string" === typeof bootstrapScriptContent ? idPrefix.href = importMap = bootstrapScriptContent : (idPrefix.href = importMap = bootstrapScriptContent.src, idPrefix.integrity = inlineScriptWithNonce = "string" === typeof bootstrapScriptContent.integrity ? bootstrapScriptContent.integrity : void 0, idPrefix.crossOrigin = maxHeadersLength = "string" === typeof bootstrapScriptContent || null == bootstrapScriptContent.crossOrigin ? void 0 : "use-credentials" === bootstrapScriptContent.crossOrigin ? "use-credentials" : ""), bootstrapScriptContent = resumableState, scriptConfig = importMap, bootstrapScriptContent.scriptResources[scriptConfig] = null, bootstrapScriptContent.moduleScriptResources[scriptConfig] = null, bootstrapScriptContent = [], pushLinkImpl(bootstrapScriptContent, idPrefix), onHeaders.bootstrapScripts.add(bootstrapScriptContent), externalRuntimeConfig.push(
            startModuleSrc,
            stringToChunk(escapeTextForBrowser(importMap))
          ), nonce && externalRuntimeConfig.push(
            scriptNonce,
            stringToChunk(escapeTextForBrowser(nonce))
          ), "string" === typeof inlineScriptWithNonce && externalRuntimeConfig.push(
            scriptIntegirty,
            stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))
          ), "string" === typeof maxHeadersLength && externalRuntimeConfig.push(
            scriptCrossOrigin,
            stringToChunk(escapeTextForBrowser(maxHeadersLength))
          ), externalRuntimeConfig.push(endAsyncScript);
      return onHeaders;
    }
    function createResumableState(identifierPrefix, externalRuntimeConfig, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
      return {
        idPrefix: void 0 === identifierPrefix ? "" : identifierPrefix,
        nextFormID: 0,
        streamingFormat: 0,
        bootstrapScriptContent,
        bootstrapScripts,
        bootstrapModules,
        instructions: 0,
        hasBody: false,
        hasHtml: false,
        unknownResources: {},
        dnsResources: {},
        connectResources: { default: {}, anonymous: {}, credentials: {} },
        imageResources: {},
        styleResources: {},
        scriptResources: {},
        moduleUnknownResources: {},
        moduleScriptResources: {}
      };
    }
    function createPreambleState() {
      return {
        htmlChunks: null,
        headChunks: null,
        bodyChunks: null,
        contribution: 0
      };
    }
    function createFormatContext(insertionMode, selectedValue, tagScope) {
      return {
        insertionMode,
        selectedValue,
        tagScope
      };
    }
    function createRootFormatContext(namespaceURI) {
      return createFormatContext(
        "http://www.w3.org/2000/svg" === namespaceURI ? 4 : "http://www.w3.org/1998/Math/MathML" === namespaceURI ? 5 : 0,
        null,
        0
      );
    }
    function getChildFormatContext(parentContext, type, props) {
      switch (type) {
        case "noscript":
          return createFormatContext(2, null, parentContext.tagScope | 1);
        case "select":
          return createFormatContext(
            2,
            null != props.value ? props.value : props.defaultValue,
            parentContext.tagScope
          );
        case "svg":
          return createFormatContext(4, null, parentContext.tagScope);
        case "picture":
          return createFormatContext(2, null, parentContext.tagScope | 2);
        case "math":
          return createFormatContext(5, null, parentContext.tagScope);
        case "foreignObject":
          return createFormatContext(2, null, parentContext.tagScope);
        case "table":
          return createFormatContext(6, null, parentContext.tagScope);
        case "thead":
        case "tbody":
        case "tfoot":
          return createFormatContext(7, null, parentContext.tagScope);
        case "colgroup":
          return createFormatContext(9, null, parentContext.tagScope);
        case "tr":
          return createFormatContext(8, null, parentContext.tagScope);
        case "head":
          if (2 > parentContext.insertionMode)
            return createFormatContext(3, null, parentContext.tagScope);
          break;
        case "html":
          if (0 === parentContext.insertionMode)
            return createFormatContext(1, null, parentContext.tagScope);
      }
      return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode ? createFormatContext(2, null, parentContext.tagScope) : parentContext;
    }
    var textSeparator = stringToPrecomputedChunk("<!-- -->");
    function pushTextInstance(target, text3, renderState, textEmbedded) {
      if ("" === text3) return textEmbedded;
      textEmbedded && target.push(textSeparator);
      target.push(stringToChunk(escapeTextForBrowser(text3)));
      return true;
    }
    var styleNameCache = /* @__PURE__ */ new Map();
    var styleAttributeStart = stringToPrecomputedChunk(' style="');
    var styleAssign = stringToPrecomputedChunk(":");
    var styleSeparator = stringToPrecomputedChunk(";");
    function pushStyleAttribute(target, style) {
      if ("object" !== typeof style)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      var isFirst = true, styleName;
      for (styleName in style)
        if (hasOwnProperty2.call(style, styleName)) {
          var styleValue = style[styleName];
          if (null != styleValue && "boolean" !== typeof styleValue && "" !== styleValue) {
            if (0 === styleName.indexOf("--")) {
              var nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              styleValue = stringToChunk(
                escapeTextForBrowser(("" + styleValue).trim())
              );
            } else
              nameChunk = styleNameCache.get(styleName), void 0 === nameChunk && (nameChunk = stringToPrecomputedChunk(
                escapeTextForBrowser(
                  styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-")
                )
              ), styleNameCache.set(styleName, nameChunk)), styleValue = "number" === typeof styleValue ? 0 === styleValue || unitlessNumbers.has(styleName) ? stringToChunk("" + styleValue) : stringToChunk(styleValue + "px") : stringToChunk(
                escapeTextForBrowser(("" + styleValue).trim())
              );
            isFirst ? (isFirst = false, target.push(
              styleAttributeStart,
              nameChunk,
              styleAssign,
              styleValue
            )) : target.push(styleSeparator, nameChunk, styleAssign, styleValue);
          }
        }
      isFirst || target.push(attributeEnd);
    }
    var attributeSeparator = stringToPrecomputedChunk(" ");
    var attributeAssign = stringToPrecomputedChunk('="');
    var attributeEnd = stringToPrecomputedChunk('"');
    var attributeEmptyString = stringToPrecomputedChunk('=""');
    function pushBooleanAttribute(target, name2, value) {
      value && "function" !== typeof value && "symbol" !== typeof value && target.push(attributeSeparator, stringToChunk(name2), attributeEmptyString);
    }
    function pushStringAttribute(target, name2, value) {
      "function" !== typeof value && "symbol" !== typeof value && "boolean" !== typeof value && target.push(
        attributeSeparator,
        stringToChunk(name2),
        attributeAssign,
        stringToChunk(escapeTextForBrowser(value)),
        attributeEnd
      );
    }
    var actionJavaScriptURL = stringToPrecomputedChunk(
      escapeTextForBrowser(
        "javascript:throw new Error('React form unexpectedly submitted.')"
      )
    );
    var startHiddenInputChunk = stringToPrecomputedChunk('<input type="hidden"');
    function pushAdditionalFormField(value, key) {
      this.push(startHiddenInputChunk);
      validateAdditionalFormField(value);
      pushStringAttribute(this, "name", key);
      pushStringAttribute(this, "value", value);
      this.push(endOfStartTagSelfClosing);
    }
    function validateAdditionalFormField(value) {
      if ("string" !== typeof value)
        throw Error(
          "File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration."
        );
    }
    function getCustomFormFields(resumableState, formAction) {
      if ("function" === typeof formAction.$$FORM_ACTION) {
        var id5 = resumableState.nextFormID++;
        resumableState = resumableState.idPrefix + id5;
        try {
          var customFields = formAction.$$FORM_ACTION(resumableState);
          if (customFields) {
            var formData = customFields.data;
            null != formData && formData.forEach(validateAdditionalFormField);
          }
          return customFields;
        } catch (x3) {
          if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then)
            throw x3;
        }
      }
      return null;
    }
    function pushFormActionAttribute(target, resumableState, renderState, formAction, formEncType, formMethod, formTarget, name2) {
      var formData = null;
      if ("function" === typeof formAction) {
        var customFields = getCustomFormFields(resumableState, formAction);
        null !== customFields ? (name2 = customFields.name, formAction = customFields.action || "", formEncType = customFields.encType, formMethod = customFields.method, formTarget = customFields.target, formData = customFields.data) : (target.push(
          attributeSeparator,
          stringToChunk("formAction"),
          attributeAssign,
          actionJavaScriptURL,
          attributeEnd
        ), formTarget = formMethod = formEncType = formAction = name2 = null, injectFormReplayingRuntime(resumableState, renderState));
      }
      null != name2 && pushAttribute(target, "name", name2);
      null != formAction && pushAttribute(target, "formAction", formAction);
      null != formEncType && pushAttribute(target, "formEncType", formEncType);
      null != formMethod && pushAttribute(target, "formMethod", formMethod);
      null != formTarget && pushAttribute(target, "formTarget", formTarget);
      return formData;
    }
    function pushAttribute(target, name2, value) {
      switch (name2) {
        case "className":
          pushStringAttribute(target, "class", value);
          break;
        case "tabIndex":
          pushStringAttribute(target, "tabindex", value);
          break;
        case "dir":
        case "role":
        case "viewBox":
        case "width":
        case "height":
          pushStringAttribute(target, name2, value);
          break;
        case "style":
          pushStyleAttribute(target, value);
          break;
        case "src":
        case "href":
          if ("" === value) break;
        case "action":
        case "formAction":
          if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "ref":
          break;
        case "autoFocus":
        case "multiple":
        case "muted":
          pushBooleanAttribute(target, name2.toLowerCase(), value);
          break;
        case "xlinkHref":
          if ("function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(
            attributeSeparator,
            stringToChunk("xlink:href"),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "contentEditable":
        case "spellCheck":
        case "draggable":
        case "value":
        case "autoReverse":
        case "externalResourcesRequired":
        case "focusable":
        case "preserveAlpha":
          "function" !== typeof value && "symbol" !== typeof value && target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "inert":
        case "allowFullScreen":
        case "async":
        case "autoPlay":
        case "controls":
        case "default":
        case "defer":
        case "disabled":
        case "disablePictureInPicture":
        case "disableRemotePlayback":
        case "formNoValidate":
        case "hidden":
        case "loop":
        case "noModule":
        case "noValidate":
        case "open":
        case "playsInline":
        case "readOnly":
        case "required":
        case "reversed":
        case "scoped":
        case "seamless":
        case "itemScope":
          value && "function" !== typeof value && "symbol" !== typeof value && target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeEmptyString
          );
          break;
        case "capture":
        case "download":
          true === value ? target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeEmptyString
          ) : false !== value && "function" !== typeof value && "symbol" !== typeof value && target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "cols":
        case "rows":
        case "size":
        case "span":
          "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value && target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "rowSpan":
        case "start":
          "function" === typeof value || "symbol" === typeof value || isNaN(value) || target.push(
            attributeSeparator,
            stringToChunk(name2),
            attributeAssign,
            stringToChunk(escapeTextForBrowser(value)),
            attributeEnd
          );
          break;
        case "xlinkActuate":
          pushStringAttribute(target, "xlink:actuate", value);
          break;
        case "xlinkArcrole":
          pushStringAttribute(target, "xlink:arcrole", value);
          break;
        case "xlinkRole":
          pushStringAttribute(target, "xlink:role", value);
          break;
        case "xlinkShow":
          pushStringAttribute(target, "xlink:show", value);
          break;
        case "xlinkTitle":
          pushStringAttribute(target, "xlink:title", value);
          break;
        case "xlinkType":
          pushStringAttribute(target, "xlink:type", value);
          break;
        case "xmlBase":
          pushStringAttribute(target, "xml:base", value);
          break;
        case "xmlLang":
          pushStringAttribute(target, "xml:lang", value);
          break;
        case "xmlSpace":
          pushStringAttribute(target, "xml:space", value);
          break;
        default:
          if (!(2 < name2.length) || "o" !== name2[0] && "O" !== name2[0] || "n" !== name2[1] && "N" !== name2[1]) {
            if (name2 = aliases.get(name2) || name2, isAttributeNameSafe(name2)) {
              switch (typeof value) {
                case "function":
                case "symbol":
                  return;
                case "boolean":
                  var prefix$8 = name2.toLowerCase().slice(0, 5);
                  if ("data-" !== prefix$8 && "aria-" !== prefix$8) return;
              }
              target.push(
                attributeSeparator,
                stringToChunk(name2),
                attributeAssign,
                stringToChunk(escapeTextForBrowser(value)),
                attributeEnd
              );
            }
          }
      }
    }
    var endOfStartTag = stringToPrecomputedChunk(">");
    var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
    function pushInnerHTML(target, innerHTML, children) {
      if (null != innerHTML) {
        if (null != children)
          throw Error(
            "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
          );
        if ("object" !== typeof innerHTML || !("__html" in innerHTML))
          throw Error(
            "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
          );
        innerHTML = innerHTML.__html;
        null !== innerHTML && void 0 !== innerHTML && target.push(stringToChunk("" + innerHTML));
      }
    }
    function flattenOptionChildren(children) {
      var content4 = "";
      React8.Children.forEach(children, function(child) {
        null != child && (content4 += child);
      });
      return content4;
    }
    var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
    var formReplayingRuntimeScript = stringToPrecomputedChunk(
      `addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error('React form unexpectedly submitted.')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});`
    );
    function injectFormReplayingRuntime(resumableState, renderState) {
      0 === (resumableState.instructions & 16) && (resumableState.instructions |= 16, renderState.bootstrapChunks.unshift(
        renderState.startInlineScript,
        formReplayingRuntimeScript,
        endInlineScript
      ));
    }
    var formStateMarkerIsMatching = stringToPrecomputedChunk("<!--F!-->");
    var formStateMarkerIsNotMatching = stringToPrecomputedChunk("<!--F-->");
    function pushLinkImpl(target, props) {
      target.push(startChunkForTag("link"));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTagSelfClosing);
      return null;
    }
    var styleRegex = /(<\/|<)(s)(tyle)/gi;
    function styleReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\73 " : "\\53 ") + suffix2;
    }
    function pushSelfClosing(target, props, tag) {
      target.push(startChunkForTag(tag));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(
                  tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                );
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTagSelfClosing);
      return null;
    }
    function pushTitleImpl(target, props) {
      target.push(startChunkForTag("title"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      props = Array.isArray(children) ? 2 > children.length ? children[0] : null : children;
      "function" !== typeof props && "symbol" !== typeof props && null !== props && void 0 !== props && target.push(stringToChunk(escapeTextForBrowser("" + props)));
      pushInnerHTML(target, innerHTML, children);
      target.push(endChunkForTag("title"));
      return null;
    }
    function pushScriptImpl(target, props) {
      target.push(startChunkForTag("script"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, children);
      "string" === typeof children && target.push(
        stringToChunk(("" + children).replace(scriptRegex, scriptReplacer))
      );
      target.push(endChunkForTag("script"));
      return null;
    }
    function pushStartSingletonElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, tag);
      return tag;
    }
    function pushStartGenericElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(endOfStartTag);
      pushInnerHTML(target, innerHTML, tag);
      return "string" === typeof tag ? (target.push(stringToChunk(escapeTextForBrowser(tag))), null) : tag;
    }
    var leadingNewline = stringToPrecomputedChunk("\n");
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = /* @__PURE__ */ new Map();
    function startChunkForTag(tag) {
      var tagStartChunk = validatedTagCache.get(tag);
      if (void 0 === tagStartChunk) {
        if (!VALID_TAG_REGEX.test(tag)) throw Error("Invalid tag: " + tag);
        tagStartChunk = stringToPrecomputedChunk("<" + tag);
        validatedTagCache.set(tag, tagStartChunk);
      }
      return tagStartChunk;
    }
    var doctypeChunk = stringToPrecomputedChunk("<!DOCTYPE html>");
    function pushStartInstance(target$jscomp$0, type, props, resumableState, renderState, preambleState, hoistableState, formatContext, textEmbedded, isFallback) {
      switch (type) {
        case "div":
        case "span":
        case "svg":
        case "path":
          break;
        case "a":
          target$jscomp$0.push(startChunkForTag("a"));
          var children = null, innerHTML = null, propKey;
          for (propKey in props)
            if (hasOwnProperty2.call(props, propKey)) {
              var propValue = props[propKey];
              if (null != propValue)
                switch (propKey) {
                  case "children":
                    children = propValue;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML = propValue;
                    break;
                  case "href":
                    "" === propValue ? pushStringAttribute(target$jscomp$0, "href", "") : pushAttribute(target$jscomp$0, propKey, propValue);
                    break;
                  default:
                    pushAttribute(target$jscomp$0, propKey, propValue);
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML, children);
          if ("string" === typeof children) {
            target$jscomp$0.push(stringToChunk(escapeTextForBrowser(children)));
            var JSCompiler_inline_result = null;
          } else JSCompiler_inline_result = children;
          return JSCompiler_inline_result;
        case "g":
        case "p":
        case "li":
          break;
        case "select":
          target$jscomp$0.push(startChunkForTag("select"));
          var children$jscomp$0 = null, innerHTML$jscomp$0 = null, propKey$jscomp$0;
          for (propKey$jscomp$0 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$0)) {
              var propValue$jscomp$0 = props[propKey$jscomp$0];
              if (null != propValue$jscomp$0)
                switch (propKey$jscomp$0) {
                  case "children":
                    children$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$0,
                      propValue$jscomp$0
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
          return children$jscomp$0;
        case "option":
          var selectedValue = formatContext.selectedValue;
          target$jscomp$0.push(startChunkForTag("option"));
          var children$jscomp$1 = null, value = null, selected = null, innerHTML$jscomp$1 = null, propKey$jscomp$1;
          for (propKey$jscomp$1 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$1)) {
              var propValue$jscomp$1 = props[propKey$jscomp$1];
              if (null != propValue$jscomp$1)
                switch (propKey$jscomp$1) {
                  case "children":
                    children$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "selected":
                    selected = propValue$jscomp$1;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "value":
                    value = propValue$jscomp$1;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$1,
                      propValue$jscomp$1
                    );
                }
            }
          if (null != selectedValue) {
            var stringValue = null !== value ? "" + value : flattenOptionChildren(children$jscomp$1);
            if (isArrayImpl(selectedValue))
              for (var i11 = 0; i11 < selectedValue.length; i11++) {
                if ("" + selectedValue[i11] === stringValue) {
                  target$jscomp$0.push(selectedMarkerAttribute);
                  break;
                }
              }
            else
              "" + selectedValue === stringValue && target$jscomp$0.push(selectedMarkerAttribute);
          } else selected && target$jscomp$0.push(selectedMarkerAttribute);
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);
          return children$jscomp$1;
        case "textarea":
          target$jscomp$0.push(startChunkForTag("textarea"));
          var value$jscomp$0 = null, defaultValue2 = null, children$jscomp$2 = null, propKey$jscomp$2;
          for (propKey$jscomp$2 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$2)) {
              var propValue$jscomp$2 = props[propKey$jscomp$2];
              if (null != propValue$jscomp$2)
                switch (propKey$jscomp$2) {
                  case "children":
                    children$jscomp$2 = propValue$jscomp$2;
                    break;
                  case "value":
                    value$jscomp$0 = propValue$jscomp$2;
                    break;
                  case "defaultValue":
                    defaultValue2 = propValue$jscomp$2;
                    break;
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$2,
                      propValue$jscomp$2
                    );
                }
            }
          null === value$jscomp$0 && null !== defaultValue2 && (value$jscomp$0 = defaultValue2);
          target$jscomp$0.push(endOfStartTag);
          if (null != children$jscomp$2) {
            if (null != value$jscomp$0)
              throw Error(
                "If you supply `defaultValue` on a <textarea>, do not pass children."
              );
            if (isArrayImpl(children$jscomp$2)) {
              if (1 < children$jscomp$2.length)
                throw Error("<textarea> can only have at most one child.");
              value$jscomp$0 = "" + children$jscomp$2[0];
            }
            value$jscomp$0 = "" + children$jscomp$2;
          }
          "string" === typeof value$jscomp$0 && "\n" === value$jscomp$0[0] && target$jscomp$0.push(leadingNewline);
          null !== value$jscomp$0 && target$jscomp$0.push(
            stringToChunk(escapeTextForBrowser("" + value$jscomp$0))
          );
          return null;
        case "input":
          target$jscomp$0.push(startChunkForTag("input"));
          var name2 = null, formAction = null, formEncType = null, formMethod = null, formTarget = null, value$jscomp$1 = null, defaultValue$jscomp$0 = null, checked = null, defaultChecked = null, propKey$jscomp$3;
          for (propKey$jscomp$3 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$3)) {
              var propValue$jscomp$3 = props[propKey$jscomp$3];
              if (null != propValue$jscomp$3)
                switch (propKey$jscomp$3) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  case "name":
                    name2 = propValue$jscomp$3;
                    break;
                  case "formAction":
                    formAction = propValue$jscomp$3;
                    break;
                  case "formEncType":
                    formEncType = propValue$jscomp$3;
                    break;
                  case "formMethod":
                    formMethod = propValue$jscomp$3;
                    break;
                  case "formTarget":
                    formTarget = propValue$jscomp$3;
                    break;
                  case "defaultChecked":
                    defaultChecked = propValue$jscomp$3;
                    break;
                  case "defaultValue":
                    defaultValue$jscomp$0 = propValue$jscomp$3;
                    break;
                  case "checked":
                    checked = propValue$jscomp$3;
                    break;
                  case "value":
                    value$jscomp$1 = propValue$jscomp$3;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$3,
                      propValue$jscomp$3
                    );
                }
            }
          var formData = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction,
            formEncType,
            formMethod,
            formTarget,
            name2
          );
          null !== checked ? pushBooleanAttribute(target$jscomp$0, "checked", checked) : null !== defaultChecked && pushBooleanAttribute(target$jscomp$0, "checked", defaultChecked);
          null !== value$jscomp$1 ? pushAttribute(target$jscomp$0, "value", value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0, "value", defaultValue$jscomp$0);
          target$jscomp$0.push(endOfStartTagSelfClosing);
          null != formData && formData.forEach(pushAdditionalFormField, target$jscomp$0);
          return null;
        case "button":
          target$jscomp$0.push(startChunkForTag("button"));
          var children$jscomp$3 = null, innerHTML$jscomp$2 = null, name$jscomp$0 = null, formAction$jscomp$0 = null, formEncType$jscomp$0 = null, formMethod$jscomp$0 = null, formTarget$jscomp$0 = null, propKey$jscomp$4;
          for (propKey$jscomp$4 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$4)) {
              var propValue$jscomp$4 = props[propKey$jscomp$4];
              if (null != propValue$jscomp$4)
                switch (propKey$jscomp$4) {
                  case "children":
                    children$jscomp$3 = propValue$jscomp$4;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$2 = propValue$jscomp$4;
                    break;
                  case "name":
                    name$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formAction":
                    formAction$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formEncType":
                    formEncType$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formMethod":
                    formMethod$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formTarget":
                    formTarget$jscomp$0 = propValue$jscomp$4;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$4,
                      propValue$jscomp$4
                    );
                }
            }
          var formData$jscomp$0 = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction$jscomp$0,
            formEncType$jscomp$0,
            formMethod$jscomp$0,
            formTarget$jscomp$0,
            name$jscomp$0
          );
          target$jscomp$0.push(endOfStartTag);
          null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);
          if ("string" === typeof children$jscomp$3) {
            target$jscomp$0.push(
              stringToChunk(escapeTextForBrowser(children$jscomp$3))
            );
            var JSCompiler_inline_result$jscomp$0 = null;
          } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;
          return JSCompiler_inline_result$jscomp$0;
        case "form":
          target$jscomp$0.push(startChunkForTag("form"));
          var children$jscomp$4 = null, innerHTML$jscomp$3 = null, formAction$jscomp$1 = null, formEncType$jscomp$1 = null, formMethod$jscomp$1 = null, formTarget$jscomp$1 = null, propKey$jscomp$5;
          for (propKey$jscomp$5 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$5)) {
              var propValue$jscomp$5 = props[propKey$jscomp$5];
              if (null != propValue$jscomp$5)
                switch (propKey$jscomp$5) {
                  case "children":
                    children$jscomp$4 = propValue$jscomp$5;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$3 = propValue$jscomp$5;
                    break;
                  case "action":
                    formAction$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "encType":
                    formEncType$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "method":
                    formMethod$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "target":
                    formTarget$jscomp$1 = propValue$jscomp$5;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$5,
                      propValue$jscomp$5
                    );
                }
            }
          var formData$jscomp$1 = null, formActionName = null;
          if ("function" === typeof formAction$jscomp$1) {
            var customFields = getCustomFormFields(
              resumableState,
              formAction$jscomp$1
            );
            null !== customFields ? (formAction$jscomp$1 = customFields.action || "", formEncType$jscomp$1 = customFields.encType, formMethod$jscomp$1 = customFields.method, formTarget$jscomp$1 = customFields.target, formData$jscomp$1 = customFields.data, formActionName = customFields.name) : (target$jscomp$0.push(
              attributeSeparator,
              stringToChunk("action"),
              attributeAssign,
              actionJavaScriptURL,
              attributeEnd
            ), formTarget$jscomp$1 = formMethod$jscomp$1 = formEncType$jscomp$1 = formAction$jscomp$1 = null, injectFormReplayingRuntime(resumableState, renderState));
          }
          null != formAction$jscomp$1 && pushAttribute(target$jscomp$0, "action", formAction$jscomp$1);
          null != formEncType$jscomp$1 && pushAttribute(target$jscomp$0, "encType", formEncType$jscomp$1);
          null != formMethod$jscomp$1 && pushAttribute(target$jscomp$0, "method", formMethod$jscomp$1);
          null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0, "target", formTarget$jscomp$1);
          target$jscomp$0.push(endOfStartTag);
          null !== formActionName && (target$jscomp$0.push(startHiddenInputChunk), pushStringAttribute(target$jscomp$0, "name", formActionName), target$jscomp$0.push(endOfStartTagSelfClosing), null != formData$jscomp$1 && formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);
          if ("string" === typeof children$jscomp$4) {
            target$jscomp$0.push(
              stringToChunk(escapeTextForBrowser(children$jscomp$4))
            );
            var JSCompiler_inline_result$jscomp$1 = null;
          } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;
          return JSCompiler_inline_result$jscomp$1;
        case "menuitem":
          target$jscomp$0.push(startChunkForTag("menuitem"));
          for (var propKey$jscomp$6 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$6)) {
              var propValue$jscomp$6 = props[propKey$jscomp$6];
              if (null != propValue$jscomp$6)
                switch (propKey$jscomp$6) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "menuitems cannot have `children` nor `dangerouslySetInnerHTML`."
                    );
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$6,
                      propValue$jscomp$6
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          return null;
        case "object":
          target$jscomp$0.push(startChunkForTag("object"));
          var children$jscomp$5 = null, innerHTML$jscomp$4 = null, propKey$jscomp$7;
          for (propKey$jscomp$7 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$7)) {
              var propValue$jscomp$7 = props[propKey$jscomp$7];
              if (null != propValue$jscomp$7)
                switch (propKey$jscomp$7) {
                  case "children":
                    children$jscomp$5 = propValue$jscomp$7;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$4 = propValue$jscomp$7;
                    break;
                  case "data":
                    var sanitizedValue = sanitizeURL("" + propValue$jscomp$7);
                    if ("" === sanitizedValue) break;
                    target$jscomp$0.push(
                      attributeSeparator,
                      stringToChunk("data"),
                      attributeAssign,
                      stringToChunk(escapeTextForBrowser(sanitizedValue)),
                      attributeEnd
                    );
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$7,
                      propValue$jscomp$7
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
          if ("string" === typeof children$jscomp$5) {
            target$jscomp$0.push(
              stringToChunk(escapeTextForBrowser(children$jscomp$5))
            );
            var JSCompiler_inline_result$jscomp$2 = null;
          } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;
          return JSCompiler_inline_result$jscomp$2;
        case "title":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(
              target$jscomp$0,
              props
            );
          else
            isFallback ? JSCompiler_inline_result$jscomp$3 = null : (pushTitleImpl(renderState.hoistableChunks, props), JSCompiler_inline_result$jscomp$3 = void 0);
          return JSCompiler_inline_result$jscomp$3;
        case "link":
          var rel = props.rel, href = props.href, precedence = props.precedence;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof rel || "string" !== typeof href || "" === href) {
            pushLinkImpl(target$jscomp$0, props);
            var JSCompiler_inline_result$jscomp$4 = null;
          } else if ("stylesheet" === props.rel)
            if ("string" !== typeof precedence || null != props.disabled || props.onLoad || props.onError)
              JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
                target$jscomp$0,
                props
              );
            else {
              var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
              if (null !== resourceState) {
                resumableState.styleResources[href] = null;
                styleQueue || (styleQueue = {
                  precedence: stringToChunk(escapeTextForBrowser(precedence)),
                  rules: [],
                  hrefs: [],
                  sheets: /* @__PURE__ */ new Map()
                }, renderState.styles.set(precedence, styleQueue));
                var resource = {
                  state: 0,
                  props: assign({}, props, {
                    "data-precedence": props.precedence,
                    precedence: null
                  })
                };
                if (resourceState) {
                  2 === resourceState.length && adoptPreloadCredentials(resource.props, resourceState);
                  var preloadResource = renderState.preloads.stylesheets.get(href);
                  preloadResource && 0 < preloadResource.length ? preloadResource.length = 0 : resource.state = 1;
                }
                styleQueue.sheets.set(href, resource);
                hoistableState && hoistableState.stylesheets.add(resource);
              } else if (styleQueue) {
                var resource$9 = styleQueue.sheets.get(href);
                resource$9 && hoistableState && hoistableState.stylesheets.add(resource$9);
              }
              textEmbedded && target$jscomp$0.push(textSeparator);
              JSCompiler_inline_result$jscomp$4 = null;
            }
          else
            props.onLoad || props.onError ? JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
              target$jscomp$0,
              props
            ) : (textEmbedded && target$jscomp$0.push(textSeparator), JSCompiler_inline_result$jscomp$4 = isFallback ? null : pushLinkImpl(renderState.hoistableChunks, props));
          return JSCompiler_inline_result$jscomp$4;
        case "script":
          var asyncProp = props.async;
          if ("string" !== typeof props.src || !props.src || !asyncProp || "function" === typeof asyncProp || "symbol" === typeof asyncProp || props.onLoad || props.onError || 4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(
              target$jscomp$0,
              props
            );
          else {
            var key = props.src;
            if ("module" === props.type) {
              var resources = resumableState.moduleScriptResources;
              var preloads = renderState.preloads.moduleScripts;
            } else
              resources = resumableState.scriptResources, preloads = renderState.preloads.scripts;
            var resourceState$jscomp$0 = resources.hasOwnProperty(key) ? resources[key] : void 0;
            if (null !== resourceState$jscomp$0) {
              resources[key] = null;
              var scriptProps = props;
              if (resourceState$jscomp$0) {
                2 === resourceState$jscomp$0.length && (scriptProps = assign({}, props), adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));
                var preloadResource$jscomp$0 = preloads.get(key);
                preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);
              }
              var resource$jscomp$0 = [];
              renderState.scripts.add(resource$jscomp$0);
              pushScriptImpl(resource$jscomp$0, scriptProps);
            }
            textEmbedded && target$jscomp$0.push(textSeparator);
            JSCompiler_inline_result$jscomp$5 = null;
          }
          return JSCompiler_inline_result$jscomp$5;
        case "style":
          var precedence$jscomp$0 = props.precedence, href$jscomp$0 = props.href;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof precedence$jscomp$0 || "string" !== typeof href$jscomp$0 || "" === href$jscomp$0) {
            target$jscomp$0.push(startChunkForTag("style"));
            var children$jscomp$6 = null, innerHTML$jscomp$5 = null, propKey$jscomp$8;
            for (propKey$jscomp$8 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$8)) {
                var propValue$jscomp$8 = props[propKey$jscomp$8];
                if (null != propValue$jscomp$8)
                  switch (propKey$jscomp$8) {
                    case "children":
                      children$jscomp$6 = propValue$jscomp$8;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$5 = propValue$jscomp$8;
                      break;
                    default:
                      pushAttribute(
                        target$jscomp$0,
                        propKey$jscomp$8,
                        propValue$jscomp$8
                      );
                  }
              }
            target$jscomp$0.push(endOfStartTag);
            var child = Array.isArray(children$jscomp$6) ? 2 > children$jscomp$6.length ? children$jscomp$6[0] : null : children$jscomp$6;
            "function" !== typeof child && "symbol" !== typeof child && null !== child && void 0 !== child && target$jscomp$0.push(
              stringToChunk(("" + child).replace(styleRegex, styleReplacer))
            );
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);
            target$jscomp$0.push(endChunkForTag("style"));
            var JSCompiler_inline_result$jscomp$6 = null;
          } else {
            var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);
            if (null !== (resumableState.styleResources.hasOwnProperty(href$jscomp$0) ? resumableState.styleResources[href$jscomp$0] : void 0)) {
              resumableState.styleResources[href$jscomp$0] = null;
              styleQueue$jscomp$0 ? styleQueue$jscomp$0.hrefs.push(
                stringToChunk(escapeTextForBrowser(href$jscomp$0))
              ) : (styleQueue$jscomp$0 = {
                precedence: stringToChunk(
                  escapeTextForBrowser(precedence$jscomp$0)
                ),
                rules: [],
                hrefs: [stringToChunk(escapeTextForBrowser(href$jscomp$0))],
                sheets: /* @__PURE__ */ new Map()
              }, renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));
              var target = styleQueue$jscomp$0.rules, children$jscomp$7 = null, innerHTML$jscomp$6 = null, propKey$jscomp$9;
              for (propKey$jscomp$9 in props)
                if (hasOwnProperty2.call(props, propKey$jscomp$9)) {
                  var propValue$jscomp$9 = props[propKey$jscomp$9];
                  if (null != propValue$jscomp$9)
                    switch (propKey$jscomp$9) {
                      case "children":
                        children$jscomp$7 = propValue$jscomp$9;
                        break;
                      case "dangerouslySetInnerHTML":
                        innerHTML$jscomp$6 = propValue$jscomp$9;
                    }
                }
              var child$jscomp$0 = Array.isArray(children$jscomp$7) ? 2 > children$jscomp$7.length ? children$jscomp$7[0] : null : children$jscomp$7;
              "function" !== typeof child$jscomp$0 && "symbol" !== typeof child$jscomp$0 && null !== child$jscomp$0 && void 0 !== child$jscomp$0 && target.push(
                stringToChunk(
                  ("" + child$jscomp$0).replace(styleRegex, styleReplacer)
                )
              );
              pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);
            }
            styleQueue$jscomp$0 && hoistableState && hoistableState.styles.add(styleQueue$jscomp$0);
            textEmbedded && target$jscomp$0.push(textSeparator);
            JSCompiler_inline_result$jscomp$6 = void 0;
          }
          return JSCompiler_inline_result$jscomp$6;
        case "meta":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
              target$jscomp$0,
              props,
              "meta"
            );
          else
            textEmbedded && target$jscomp$0.push(textSeparator), JSCompiler_inline_result$jscomp$7 = isFallback ? null : "string" === typeof props.charSet ? pushSelfClosing(renderState.charsetChunks, props, "meta") : "viewport" === props.name ? pushSelfClosing(renderState.viewportChunks, props, "meta") : pushSelfClosing(renderState.hoistableChunks, props, "meta");
          return JSCompiler_inline_result$jscomp$7;
        case "listing":
        case "pre":
          target$jscomp$0.push(startChunkForTag(type));
          var children$jscomp$8 = null, innerHTML$jscomp$7 = null, propKey$jscomp$10;
          for (propKey$jscomp$10 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$10)) {
              var propValue$jscomp$10 = props[propKey$jscomp$10];
              if (null != propValue$jscomp$10)
                switch (propKey$jscomp$10) {
                  case "children":
                    children$jscomp$8 = propValue$jscomp$10;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$7 = propValue$jscomp$10;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$10,
                      propValue$jscomp$10
                    );
                }
            }
          target$jscomp$0.push(endOfStartTag);
          if (null != innerHTML$jscomp$7) {
            if (null != children$jscomp$8)
              throw Error(
                "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
              );
            if ("object" !== typeof innerHTML$jscomp$7 || !("__html" in innerHTML$jscomp$7))
              throw Error(
                "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
              );
            var html = innerHTML$jscomp$7.__html;
            null !== html && void 0 !== html && ("string" === typeof html && 0 < html.length && "\n" === html[0] ? target$jscomp$0.push(leadingNewline, stringToChunk(html)) : target$jscomp$0.push(stringToChunk("" + html)));
          }
          "string" === typeof children$jscomp$8 && "\n" === children$jscomp$8[0] && target$jscomp$0.push(leadingNewline);
          return children$jscomp$8;
        case "img":
          var src = props.src, srcSet = props.srcSet;
          if (!("lazy" === props.loading || !src && !srcSet || "string" !== typeof src && null != src || "string" !== typeof srcSet && null != srcSet) && "low" !== props.fetchPriority && false === !!(formatContext.tagScope & 3) && ("string" !== typeof src || ":" !== src[4] || "d" !== src[0] && "D" !== src[0] || "a" !== src[1] && "A" !== src[1] || "t" !== src[2] && "T" !== src[2] || "a" !== src[3] && "A" !== src[3]) && ("string" !== typeof srcSet || ":" !== srcSet[4] || "d" !== srcSet[0] && "D" !== srcSet[0] || "a" !== srcSet[1] && "A" !== srcSet[1] || "t" !== srcSet[2] && "T" !== srcSet[2] || "a" !== srcSet[3] && "A" !== srcSet[3])) {
            var sizes2 = "string" === typeof props.sizes ? props.sizes : void 0, key$jscomp$0 = srcSet ? srcSet + "\n" + (sizes2 || "") : src, promotablePreloads = renderState.preloads.images, resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);
            if (resource$jscomp$1) {
              if ("high" === props.fetchPriority || 10 > renderState.highImagePreloads.size)
                promotablePreloads.delete(key$jscomp$0), renderState.highImagePreloads.add(resource$jscomp$1);
            } else if (!resumableState.imageResources.hasOwnProperty(key$jscomp$0)) {
              resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;
              var input = props.crossOrigin;
              var JSCompiler_inline_result$jscomp$8 = "string" === typeof input ? "use-credentials" === input ? input : "" : void 0;
              var headers = renderState.headers, header;
              headers && 0 < headers.remainingCapacity && "string" !== typeof props.srcSet && ("high" === props.fetchPriority || 500 > headers.highImagePreloads.length) && (header = getPreloadAsHeader(src, "image", {
                imageSrcSet: props.srcSet,
                imageSizes: props.sizes,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                nonce: props.nonce,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.refererPolicy
              }), 0 <= (headers.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS, headers.highImagePreloads && (headers.highImagePreloads += ", "), headers.highImagePreloads += header) : (resource$jscomp$1 = [], pushLinkImpl(resource$jscomp$1, {
                rel: "preload",
                as: "image",
                href: srcSet ? void 0 : src,
                imageSrcSet: srcSet,
                imageSizes: sizes2,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.referrerPolicy
              }), "high" === props.fetchPriority || 10 > renderState.highImagePreloads.size ? renderState.highImagePreloads.add(resource$jscomp$1) : (renderState.bulkPreloads.add(resource$jscomp$1), promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
            }
          }
          return pushSelfClosing(target$jscomp$0, props, "img");
        case "base":
        case "area":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "keygen":
        case "param":
        case "source":
        case "track":
        case "wbr":
          return pushSelfClosing(target$jscomp$0, props, type);
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          break;
        case "head":
          if (2 > formatContext.insertionMode) {
            var preamble = preambleState || renderState.preamble;
            if (preamble.headChunks)
              throw Error("The `<head>` tag may only be rendered once.");
            preamble.headChunks = [];
            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
              preamble.headChunks,
              props,
              "head"
            );
          } else
            JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "head"
            );
          return JSCompiler_inline_result$jscomp$9;
        case "body":
          if (2 > formatContext.insertionMode) {
            var preamble$jscomp$0 = preambleState || renderState.preamble;
            if (preamble$jscomp$0.bodyChunks)
              throw Error("The `<body>` tag may only be rendered once.");
            preamble$jscomp$0.bodyChunks = [];
            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
              preamble$jscomp$0.bodyChunks,
              props,
              "body"
            );
          } else
            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "body"
            );
          return JSCompiler_inline_result$jscomp$10;
        case "html":
          if (0 === formatContext.insertionMode) {
            var preamble$jscomp$1 = preambleState || renderState.preamble;
            if (preamble$jscomp$1.htmlChunks)
              throw Error("The `<html>` tag may only be rendered once.");
            preamble$jscomp$1.htmlChunks = [doctypeChunk];
            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
              preamble$jscomp$1.htmlChunks,
              props,
              "html"
            );
          } else
            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "html"
            );
          return JSCompiler_inline_result$jscomp$11;
        default:
          if (-1 !== type.indexOf("-")) {
            target$jscomp$0.push(startChunkForTag(type));
            var children$jscomp$9 = null, innerHTML$jscomp$8 = null, propKey$jscomp$11;
            for (propKey$jscomp$11 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$11)) {
                var propValue$jscomp$11 = props[propKey$jscomp$11];
                if (null != propValue$jscomp$11) {
                  var attributeName = propKey$jscomp$11;
                  switch (propKey$jscomp$11) {
                    case "children":
                      children$jscomp$9 = propValue$jscomp$11;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$8 = propValue$jscomp$11;
                      break;
                    case "style":
                      pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);
                      break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                    case "ref":
                      break;
                    case "className":
                      attributeName = "class";
                    default:
                      if (isAttributeNameSafe(propKey$jscomp$11) && "function" !== typeof propValue$jscomp$11 && "symbol" !== typeof propValue$jscomp$11 && false !== propValue$jscomp$11) {
                        if (true === propValue$jscomp$11) propValue$jscomp$11 = "";
                        else if ("object" === typeof propValue$jscomp$11) continue;
                        target$jscomp$0.push(
                          attributeSeparator,
                          stringToChunk(attributeName),
                          attributeAssign,
                          stringToChunk(escapeTextForBrowser(propValue$jscomp$11)),
                          attributeEnd
                        );
                      }
                  }
                }
              }
            target$jscomp$0.push(endOfStartTag);
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
            return children$jscomp$9;
          }
      }
      return pushStartGenericElement(target$jscomp$0, props, type);
    }
    var endTagCache = /* @__PURE__ */ new Map();
    function endChunkForTag(tag) {
      var chunk2 = endTagCache.get(tag);
      void 0 === chunk2 && (chunk2 = stringToPrecomputedChunk("</" + tag + ">"), endTagCache.set(tag, chunk2));
      return chunk2;
    }
    function hoistPreambleState(renderState, preambleState) {
      renderState = renderState.preamble;
      null === renderState.htmlChunks && preambleState.htmlChunks && (renderState.htmlChunks = preambleState.htmlChunks, preambleState.contribution |= 1);
      null === renderState.headChunks && preambleState.headChunks && (renderState.headChunks = preambleState.headChunks, preambleState.contribution |= 4);
      null === renderState.bodyChunks && preambleState.bodyChunks && (renderState.bodyChunks = preambleState.bodyChunks, preambleState.contribution |= 2);
    }
    function writeBootstrap(destination, renderState) {
      renderState = renderState.bootstrapChunks;
      for (var i11 = 0; i11 < renderState.length - 1; i11++)
        writeChunk(destination, renderState[i11]);
      return i11 < renderState.length ? (i11 = renderState[i11], renderState.length = 0, writeChunkAndReturn(destination, i11)) : true;
    }
    var placeholder1 = stringToPrecomputedChunk('<template id="');
    var placeholder2 = stringToPrecomputedChunk('"></template>');
    var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
    var startPendingSuspenseBoundary1 = stringToPrecomputedChunk(
      '<!--$?--><template id="'
    );
    var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
    var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
    var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
    var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
    var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
    var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
    stringToPrecomputedChunk(' data-msg="');
    stringToPrecomputedChunk(' data-stck="');
    stringToPrecomputedChunk(' data-cstck="');
    var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
    function writeStartPendingSuspenseBoundary(destination, renderState, id5) {
      writeChunk(destination, startPendingSuspenseBoundary1);
      if (null === id5)
        throw Error(
          "An ID must have been assigned before we can complete the boundary."
        );
      writeChunk(destination, renderState.boundaryPrefix);
      writeChunk(destination, stringToChunk(id5.toString(16)));
      return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
    }
    var boundaryPreambleContributionChunkStart = stringToPrecomputedChunk("<!--");
    var boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("-->");
    function writePreambleContribution(destination, preambleState) {
      preambleState = preambleState.contribution;
      0 !== preambleState && (writeChunk(destination, boundaryPreambleContributionChunkStart), writeChunk(destination, stringToChunk("" + preambleState)), writeChunk(destination, boundaryPreambleContributionChunkEnd));
    }
    var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
    var startSegmentHTML2 = stringToPrecomputedChunk('">');
    var endSegmentHTML = stringToPrecomputedChunk("</div>");
    var startSegmentSVG = stringToPrecomputedChunk(
      '<svg aria-hidden="true" style="display:none" id="'
    );
    var startSegmentSVG2 = stringToPrecomputedChunk('">');
    var endSegmentSVG = stringToPrecomputedChunk("</svg>");
    var startSegmentMathML = stringToPrecomputedChunk(
      '<math aria-hidden="true" style="display:none" id="'
    );
    var startSegmentMathML2 = stringToPrecomputedChunk('">');
    var endSegmentMathML = stringToPrecomputedChunk("</math>");
    var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
    var startSegmentTable2 = stringToPrecomputedChunk('">');
    var endSegmentTable = stringToPrecomputedChunk("</table>");
    var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
    var startSegmentTableBody2 = stringToPrecomputedChunk('">');
    var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
    var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
    var startSegmentTableRow2 = stringToPrecomputedChunk('">');
    var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
    var startSegmentColGroup = stringToPrecomputedChunk(
      '<table hidden><colgroup id="'
    );
    var startSegmentColGroup2 = stringToPrecomputedChunk('">');
    var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
    function writeStartSegment(destination, renderState, formatContext, id5) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return writeChunk(destination, startSegmentHTML), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentHTML2);
        case 4:
          return writeChunk(destination, startSegmentSVG), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentSVG2);
        case 5:
          return writeChunk(destination, startSegmentMathML), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentMathML2);
        case 6:
          return writeChunk(destination, startSegmentTable), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentTable2);
        case 7:
          return writeChunk(destination, startSegmentTableBody), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentTableBody2);
        case 8:
          return writeChunk(destination, startSegmentTableRow), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentTableRow2);
        case 9:
          return writeChunk(destination, startSegmentColGroup), writeChunk(destination, renderState.segmentPrefix), writeChunk(destination, stringToChunk(id5.toString(16))), writeChunkAndReturn(destination, startSegmentColGroup2);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function writeEndSegment(destination, formatContext) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return writeChunkAndReturn(destination, endSegmentHTML);
        case 4:
          return writeChunkAndReturn(destination, endSegmentSVG);
        case 5:
          return writeChunkAndReturn(destination, endSegmentMathML);
        case 6:
          return writeChunkAndReturn(destination, endSegmentTable);
        case 7:
          return writeChunkAndReturn(destination, endSegmentTableBody);
        case 8:
          return writeChunkAndReturn(destination, endSegmentTableRow);
        case 9:
          return writeChunkAndReturn(destination, endSegmentColGroup);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var completeSegmentScript1Full = stringToPrecomputedChunk(
      '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
    );
    var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
    var completeSegmentScript2 = stringToPrecomputedChunk('","');
    var completeSegmentScriptEnd = stringToPrecomputedChunk('")</script>');
    stringToPrecomputedChunk('<template data-rsi="" data-sid="');
    stringToPrecomputedChunk('" data-pid="');
    var completeBoundaryScript1Full = stringToPrecomputedChunk(
      '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("'
    );
    var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
    var completeBoundaryWithStylesScript1FullBoth = stringToPrecomputedChunk(
      '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
    );
    var completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
      '$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
    );
    var completeBoundaryWithStylesScript1Partial = stringToPrecomputedChunk('$RR("');
    var completeBoundaryScript2 = stringToPrecomputedChunk('","');
    var completeBoundaryScript3a = stringToPrecomputedChunk('",');
    var completeBoundaryScript3b = stringToPrecomputedChunk('"');
    var completeBoundaryScriptEnd = stringToPrecomputedChunk(")</script>");
    stringToPrecomputedChunk('<template data-rci="" data-bid="');
    stringToPrecomputedChunk('<template data-rri="" data-bid="');
    stringToPrecomputedChunk('" data-sid="');
    stringToPrecomputedChunk('" data-sty="');
    var clientRenderScript1Full = stringToPrecomputedChunk(
      '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX("'
    );
    var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
    var clientRenderScript1A = stringToPrecomputedChunk('"');
    var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
    var clientRenderScriptEnd = stringToPrecomputedChunk(")</script>");
    stringToPrecomputedChunk('<template data-rxi="" data-bid="');
    stringToPrecomputedChunk('" data-dgst="');
    stringToPrecomputedChunk('" data-msg="');
    stringToPrecomputedChunk('" data-stck="');
    stringToPrecomputedChunk('" data-cstck="');
    var regexForJSStringsInInstructionScripts = /[<\u2028\u2029]/g;
    function escapeJSStringsForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInInstructionScripts,
        function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var regexForJSStringsInScripts = /[&><\u2028\u2029]/g;
    function escapeJSObjectForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInScripts,
        function(match) {
          switch (match) {
            case "&":
              return "\\u0026";
            case ">":
              return "\\u003e";
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var lateStyleTagResourceOpen1 = stringToPrecomputedChunk(
      '<style media="not all" data-precedence="'
    );
    var lateStyleTagResourceOpen2 = stringToPrecomputedChunk('" data-href="');
    var lateStyleTagResourceOpen3 = stringToPrecomputedChunk('">');
    var lateStyleTagTemplateClose = stringToPrecomputedChunk("</style>");
    var currentlyRenderingBoundaryHasStylesToHoist = false;
    var destinationHasCapacity = true;
    function flushStyleTagsLateForBoundary(styleQueue) {
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs, i11 = 0;
      if (hrefs.length) {
        writeChunk(this, lateStyleTagResourceOpen1);
        writeChunk(this, styleQueue.precedence);
        for (writeChunk(this, lateStyleTagResourceOpen2); i11 < hrefs.length - 1; i11++)
          writeChunk(this, hrefs[i11]), writeChunk(this, spaceSeparator);
        writeChunk(this, hrefs[i11]);
        writeChunk(this, lateStyleTagResourceOpen3);
        for (i11 = 0; i11 < rules.length; i11++) writeChunk(this, rules[i11]);
        destinationHasCapacity = writeChunkAndReturn(
          this,
          lateStyleTagTemplateClose
        );
        currentlyRenderingBoundaryHasStylesToHoist = true;
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function hasStylesToHoist(stylesheet) {
      return 2 !== stylesheet.state ? currentlyRenderingBoundaryHasStylesToHoist = true : false;
    }
    function writeHoistablesForBoundary(destination, hoistableState, renderState) {
      currentlyRenderingBoundaryHasStylesToHoist = false;
      destinationHasCapacity = true;
      hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);
      hoistableState.stylesheets.forEach(hasStylesToHoist);
      currentlyRenderingBoundaryHasStylesToHoist && (renderState.stylesToHoist = true);
      return destinationHasCapacity;
    }
    function flushResource(resource) {
      for (var i11 = 0; i11 < resource.length; i11++) writeChunk(this, resource[i11]);
      resource.length = 0;
    }
    var stylesheetFlushingQueue = [];
    function flushStyleInPreamble(stylesheet) {
      pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);
      for (var i11 = 0; i11 < stylesheetFlushingQueue.length; i11++)
        writeChunk(this, stylesheetFlushingQueue[i11]);
      stylesheetFlushingQueue.length = 0;
      stylesheet.state = 2;
    }
    var styleTagResourceOpen1 = stringToPrecomputedChunk(
      '<style data-precedence="'
    );
    var styleTagResourceOpen2 = stringToPrecomputedChunk('" data-href="');
    var spaceSeparator = stringToPrecomputedChunk(" ");
    var styleTagResourceOpen3 = stringToPrecomputedChunk('">');
    var styleTagResourceClose = stringToPrecomputedChunk("</style>");
    function flushStylesInPreamble(styleQueue) {
      var hasStylesheets = 0 < styleQueue.sheets.size;
      styleQueue.sheets.forEach(flushStyleInPreamble, this);
      styleQueue.sheets.clear();
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs;
      if (!hasStylesheets || hrefs.length) {
        writeChunk(this, styleTagResourceOpen1);
        writeChunk(this, styleQueue.precedence);
        styleQueue = 0;
        if (hrefs.length) {
          for (writeChunk(this, styleTagResourceOpen2); styleQueue < hrefs.length - 1; styleQueue++)
            writeChunk(this, hrefs[styleQueue]), writeChunk(this, spaceSeparator);
          writeChunk(this, hrefs[styleQueue]);
        }
        writeChunk(this, styleTagResourceOpen3);
        for (styleQueue = 0; styleQueue < rules.length; styleQueue++)
          writeChunk(this, rules[styleQueue]);
        writeChunk(this, styleTagResourceClose);
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function preloadLateStyle(stylesheet) {
      if (0 === stylesheet.state) {
        stylesheet.state = 1;
        var props = stylesheet.props;
        pushLinkImpl(stylesheetFlushingQueue, {
          rel: "preload",
          as: "style",
          href: stylesheet.props.href,
          crossOrigin: props.crossOrigin,
          fetchPriority: props.fetchPriority,
          integrity: props.integrity,
          media: props.media,
          hrefLang: props.hrefLang,
          referrerPolicy: props.referrerPolicy
        });
        for (stylesheet = 0; stylesheet < stylesheetFlushingQueue.length; stylesheet++)
          writeChunk(this, stylesheetFlushingQueue[stylesheet]);
        stylesheetFlushingQueue.length = 0;
      }
    }
    function preloadLateStyles(styleQueue) {
      styleQueue.sheets.forEach(preloadLateStyle, this);
      styleQueue.sheets.clear();
    }
    var arrayFirstOpenBracket = stringToPrecomputedChunk("[");
    var arraySubsequentOpenBracket = stringToPrecomputedChunk(",[");
    var arrayInterstitial = stringToPrecomputedChunk(",");
    var arrayCloseBracket = stringToPrecomputedChunk("]");
    function writeStyleResourceDependenciesInJS(destination, hoistableState) {
      writeChunk(destination, arrayFirstOpenBracket);
      var nextArrayOpenBrackChunk = arrayFirstOpenBracket;
      hoistableState.stylesheets.forEach(function(resource) {
        if (2 !== resource.state)
          if (3 === resource.state)
            writeChunk(destination, nextArrayOpenBrackChunk), writeChunk(
              destination,
              stringToChunk(
                escapeJSObjectForInstructionScripts("" + resource.props.href)
              )
            ), writeChunk(destination, arrayCloseBracket), nextArrayOpenBrackChunk = arraySubsequentOpenBracket;
          else {
            writeChunk(destination, nextArrayOpenBrackChunk);
            var precedence = resource.props["data-precedence"], props = resource.props, coercedHref = sanitizeURL("" + resource.props.href);
            writeChunk(
              destination,
              stringToChunk(escapeJSObjectForInstructionScripts(coercedHref))
            );
            precedence = "" + precedence;
            writeChunk(destination, arrayInterstitial);
            writeChunk(
              destination,
              stringToChunk(escapeJSObjectForInstructionScripts(precedence))
            );
            for (var propKey in props)
              if (hasOwnProperty2.call(props, propKey) && (precedence = props[propKey], null != precedence))
                switch (propKey) {
                  case "href":
                  case "rel":
                  case "precedence":
                  case "data-precedence":
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      "link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  default:
                    writeStyleResourceAttributeInJS(
                      destination,
                      propKey,
                      precedence
                    );
                }
            writeChunk(destination, arrayCloseBracket);
            nextArrayOpenBrackChunk = arraySubsequentOpenBracket;
            resource.state = 3;
          }
      });
      writeChunk(destination, arrayCloseBracket);
    }
    function writeStyleResourceAttributeInJS(destination, name2, value) {
      var attributeName = name2.toLowerCase();
      switch (typeof value) {
        case "function":
        case "symbol":
          return;
      }
      switch (name2) {
        case "innerHTML":
        case "dangerouslySetInnerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "style":
        case "ref":
          return;
        case "className":
          attributeName = "class";
          name2 = "" + value;
          break;
        case "hidden":
          if (false === value) return;
          name2 = "";
          break;
        case "src":
        case "href":
          value = sanitizeURL(value);
          name2 = "" + value;
          break;
        default:
          if (2 < name2.length && ("o" === name2[0] || "O" === name2[0]) && ("n" === name2[1] || "N" === name2[1]) || !isAttributeNameSafe(name2))
            return;
          name2 = "" + value;
      }
      writeChunk(destination, arrayInterstitial);
      writeChunk(
        destination,
        stringToChunk(escapeJSObjectForInstructionScripts(attributeName))
      );
      writeChunk(destination, arrayInterstitial);
      writeChunk(
        destination,
        stringToChunk(escapeJSObjectForInstructionScripts(name2))
      );
    }
    function createHoistableState() {
      return { styles: /* @__PURE__ */ new Set(), stylesheets: /* @__PURE__ */ new Set() };
    }
    function prefetchDNS(href) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          if (!resumableState.dnsResources.hasOwnProperty(href)) {
            resumableState.dnsResources[href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity)
              JSCompiler_temp = (header = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=dns-prefetch", 0 <= (resumableState.remainingCapacity -= header.length + 2));
            JSCompiler_temp ? (renderState.resets.dns[href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (header = [], pushLinkImpl(header, { href, rel: "dns-prefetch" }), renderState.preconnects.add(header));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.D(href);
    }
    function preconnect(href, crossOrigin) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          var bucket = "use-credentials" === crossOrigin ? "credentials" : "string" === typeof crossOrigin ? "anonymous" : "default";
          if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {
            resumableState.connectResources[bucket][href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity) {
              JSCompiler_temp = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=preconnect";
              if ("string" === typeof crossOrigin) {
                var escapedCrossOrigin = ("" + crossOrigin).replace(
                  regexForLinkHeaderQuotedParamValueContext,
                  escapeStringForLinkHeaderQuotedParamValueContextReplacer
                );
                JSCompiler_temp += '; crossorigin="' + escapedCrossOrigin + '"';
              }
              JSCompiler_temp = (header = JSCompiler_temp, 0 <= (resumableState.remainingCapacity -= header.length + 2));
            }
            JSCompiler_temp ? (renderState.resets.connect[bucket][href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (bucket = [], pushLinkImpl(bucket, {
              rel: "preconnect",
              href,
              crossOrigin
            }), renderState.preconnects.add(bucket));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.C(href, crossOrigin);
    }
    function preload(href, as2, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (as2 && href) {
          switch (as2) {
            case "image":
              if (options) {
                var imageSrcSet = options.imageSrcSet;
                var imageSizes = options.imageSizes;
                var fetchPriority = options.fetchPriority;
              }
              var key = imageSrcSet ? imageSrcSet + "\n" + (imageSizes || "") : href;
              if (resumableState.imageResources.hasOwnProperty(key)) return;
              resumableState.imageResources[key] = PRELOAD_NO_CREDS;
              resumableState = renderState.headers;
              var header;
              resumableState && 0 < resumableState.remainingCapacity && "string" !== typeof imageSrcSet && "high" === fetchPriority && (header = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key] = PRELOAD_NO_CREDS, resumableState.highImagePreloads && (resumableState.highImagePreloads += ", "), resumableState.highImagePreloads += header) : (resumableState = [], pushLinkImpl(
                resumableState,
                assign(
                  { rel: "preload", href: imageSrcSet ? void 0 : href, as: as2 },
                  options
                )
              ), "high" === fetchPriority ? renderState.highImagePreloads.add(resumableState) : (renderState.bulkPreloads.add(resumableState), renderState.preloads.images.set(key, resumableState)));
              break;
            case "style":
              if (resumableState.styleResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.styleResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.stylesheets.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              break;
            case "script":
              if (resumableState.scriptResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              renderState.preloads.scripts.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.scriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              break;
            default:
              if (resumableState.unknownResources.hasOwnProperty(as2)) {
                if (imageSrcSet = resumableState.unknownResources[as2], imageSrcSet.hasOwnProperty(href))
                  return;
              } else
                imageSrcSet = {}, resumableState.unknownResources[as2] = imageSrcSet;
              imageSrcSet[href] = PRELOAD_NO_CREDS;
              if ((resumableState = renderState.headers) && 0 < resumableState.remainingCapacity && "font" === as2 && (key = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= key.length + 2)))
                renderState.resets.font[href] = PRELOAD_NO_CREDS, resumableState.fontPreloads && (resumableState.fontPreloads += ", "), resumableState.fontPreloads += key;
              else
                switch (resumableState = [], href = assign({ rel: "preload", href, as: as2 }, options), pushLinkImpl(resumableState, href), as2) {
                  case "font":
                    renderState.fontPreloads.add(resumableState);
                    break;
                  default:
                    renderState.bulkPreloads.add(resumableState);
                }
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.L(href, as2, options);
    }
    function preloadModule(href, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          var as2 = options && "string" === typeof options.as ? options.as : "script";
          switch (as2) {
            case "script":
              if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;
              as2 = [];
              resumableState.moduleScriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.moduleScripts.set(href, as2);
              break;
            default:
              if (resumableState.moduleUnknownResources.hasOwnProperty(as2)) {
                var resources = resumableState.unknownResources[as2];
                if (resources.hasOwnProperty(href)) return;
              } else
                resources = {}, resumableState.moduleUnknownResources[as2] = resources;
              as2 = [];
              resources[href] = PRELOAD_NO_CREDS;
          }
          pushLinkImpl(as2, assign({ rel: "modulepreload", href }, options));
          renderState.bulkPreloads.add(as2);
          enqueueFlush(request);
        }
      } else previousDispatcher.m(href, options);
    }
    function preinitStyle(href, precedence, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          precedence = precedence || "default";
          var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
          null !== resourceState && (resumableState.styleResources[href] = null, styleQueue || (styleQueue = {
            precedence: stringToChunk(escapeTextForBrowser(precedence)),
            rules: [],
            hrefs: [],
            sheets: /* @__PURE__ */ new Map()
          }, renderState.styles.set(precedence, styleQueue)), precedence = {
            state: 0,
            props: assign(
              { rel: "stylesheet", href, "data-precedence": precedence },
              options
            )
          }, resourceState && (2 === resourceState.length && adoptPreloadCredentials(precedence.props, resourceState), (renderState = renderState.preloads.stylesheets.get(href)) && 0 < renderState.length ? renderState.length = 0 : precedence.state = 1), styleQueue.sheets.set(href, precedence), enqueueFlush(request));
        }
      } else previousDispatcher.S(href, precedence, options);
    }
    function preinitScript(src, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.scriptResources.hasOwnProperty(src) ? resumableState.scriptResources[src] : void 0;
          null !== resourceState && (resumableState.scriptResources[src] = null, options = assign({ src, async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.scripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.X(src, options);
    }
    function preinitModuleScript(src, options) {
      var request = resolveRequest();
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.moduleScriptResources.hasOwnProperty(
            src
          ) ? resumableState.moduleScriptResources[src] : void 0;
          null !== resourceState && (resumableState.moduleScriptResources[src] = null, options = assign({ src, type: "module", async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.moduleScripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.M(src, options);
    }
    function adoptPreloadCredentials(target, preloadState) {
      null == target.crossOrigin && (target.crossOrigin = preloadState[0]);
      null == target.integrity && (target.integrity = preloadState[1]);
    }
    function getPreloadAsHeader(href, as2, params) {
      href = ("" + href).replace(
        regexForHrefInLinkHeaderURLContext,
        escapeHrefForLinkHeaderURLContextReplacer
      );
      as2 = ("" + as2).replace(
        regexForLinkHeaderQuotedParamValueContext,
        escapeStringForLinkHeaderQuotedParamValueContextReplacer
      );
      as2 = "<" + href + '>; rel=preload; as="' + as2 + '"';
      for (var paramName in params)
        hasOwnProperty2.call(params, paramName) && (href = params[paramName], "string" === typeof href && (as2 += "; " + paramName.toLowerCase() + '="' + ("" + href).replace(
          regexForLinkHeaderQuotedParamValueContext,
          escapeStringForLinkHeaderQuotedParamValueContextReplacer
        ) + '"'));
      return as2;
    }
    var regexForHrefInLinkHeaderURLContext = /[<>\r\n]/g;
    function escapeHrefForLinkHeaderURLContextReplacer(match) {
      switch (match) {
        case "<":
          return "%3C";
        case ">":
          return "%3E";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    var regexForLinkHeaderQuotedParamValueContext = /["';,\r\n]/g;
    function escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {
      switch (match) {
        case '"':
          return "%22";
        case "'":
          return "%27";
        case ";":
          return "%3B";
        case ",":
          return "%2C";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    function hoistStyleQueueDependency(styleQueue) {
      this.styles.add(styleQueue);
    }
    function hoistStylesheetDependency(stylesheet) {
      this.stylesheets.add(stylesheet);
    }
    var bind = Function.prototype.bind;
    var supportsRequestStorage = "function" === typeof AsyncLocalStorage;
    var requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null;
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (type.$$typeof) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return (type.displayName || "Context") + ".Provider";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
            return type;
          case REACT_MEMO_TYPE:
            return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x3) {
            }
        }
      return null;
    }
    var emptyContextObject = {};
    var currentActiveSnapshot = null;
    function popToNearestCommonAncestor(prev, next) {
      if (prev !== next) {
        prev.context._currentValue = prev.parentValue;
        prev = prev.parent;
        var parentNext = next.parent;
        if (null === prev) {
          if (null !== parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
        } else {
          if (null === parentNext)
            throw Error(
              "The stacks must reach the root at the same time. This is a bug in React."
            );
          popToNearestCommonAncestor(prev, parentNext);
        }
        next.context._currentValue = next.value;
      }
    }
    function popAllPrevious(prev) {
      prev.context._currentValue = prev.parentValue;
      prev = prev.parent;
      null !== prev && popAllPrevious(prev);
    }
    function pushAllNext(next) {
      var parentNext = next.parent;
      null !== parentNext && pushAllNext(parentNext);
      next.context._currentValue = next.value;
    }
    function popPreviousToCommonLevel(prev, next) {
      prev.context._currentValue = prev.parentValue;
      prev = prev.parent;
      if (null === prev)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : popPreviousToCommonLevel(prev, next);
    }
    function popNextToCommonLevel(prev, next) {
      var parentNext = next.parent;
      if (null === parentNext)
        throw Error(
          "The depth must equal at least at zero before reaching the root. This is a bug in React."
        );
      prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext);
      next.context._currentValue = next.value;
    }
    function switchContext(newSnapshot) {
      var prev = currentActiveSnapshot;
      prev !== newSnapshot && (null === prev ? pushAllNext(newSnapshot) : null === newSnapshot ? popAllPrevious(prev) : prev.depth === newSnapshot.depth ? popToNearestCommonAncestor(prev, newSnapshot) : prev.depth > newSnapshot.depth ? popPreviousToCommonLevel(prev, newSnapshot) : popNextToCommonLevel(prev, newSnapshot), currentActiveSnapshot = newSnapshot);
    }
    var classComponentUpdater = {
      enqueueSetState: function(inst, payload) {
        inst = inst._reactInternals;
        null !== inst.queue && inst.queue.push(payload);
      },
      enqueueReplaceState: function(inst, payload) {
        inst = inst._reactInternals;
        inst.replace = true;
        inst.queue = [payload];
      },
      enqueueForceUpdate: function() {
      }
    };
    var emptyTreeContext = { id: 1, overflow: "" };
    function pushTreeContext(baseContext, totalChildren, index) {
      var baseIdWithLeadingBit = baseContext.id;
      baseContext = baseContext.overflow;
      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
      baseIdWithLeadingBit &= ~(1 << baseLength);
      index += 1;
      var length = 32 - clz32(totalChildren) + baseLength;
      if (30 < length) {
        var numberOfOverflowBits = baseLength - baseLength % 5;
        length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
        baseIdWithLeadingBit >>= numberOfOverflowBits;
        baseLength -= numberOfOverflowBits;
        return {
          id: 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit,
          overflow: length + baseContext
        };
      }
      return {
        id: 1 << length | index << baseLength | baseIdWithLeadingBit,
        overflow: baseContext
      };
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x3) {
      x3 >>>= 0;
      return 0 === x3 ? 32 : 31 - (log(x3) / LN2 | 0) | 0;
    }
    var SuspenseException = Error(
      "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."
    );
    function noop$2() {
    }
    function trackUsedThenable(thenableState2, thenable, index) {
      index = thenableState2[index];
      void 0 === index ? thenableState2.push(thenable) : index !== thenable && (thenable.then(noop$2, noop$2), thenable = index);
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          "string" === typeof thenable.status ? thenable.then(noop$2, noop$2) : (thenableState2 = thenable, thenableState2.status = "pending", thenableState2.then(
            function(fulfilledValue) {
              if ("pending" === thenable.status) {
                var fulfilledThenable = thenable;
                fulfilledThenable.status = "fulfilled";
                fulfilledThenable.value = fulfilledValue;
              }
            },
            function(error) {
              if ("pending" === thenable.status) {
                var rejectedThenable = thenable;
                rejectedThenable.status = "rejected";
                rejectedThenable.reason = error;
              }
            }
          ));
          switch (thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
          suspendedThenable = thenable;
          throw SuspenseException;
      }
    }
    var suspendedThenable = null;
    function getSuspendedThenable() {
      if (null === suspendedThenable)
        throw Error(
          "Expected a suspended thenable. This is a bug in React. Please file an issue."
        );
      var thenable = suspendedThenable;
      suspendedThenable = null;
      return thenable;
    }
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var currentlyRenderingComponent = null;
    var currentlyRenderingTask = null;
    var currentlyRenderingRequest = null;
    var currentlyRenderingKeyPath = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var isReRender = false;
    var didScheduleRenderPhaseUpdate = false;
    var localIdCounter = 0;
    var actionStateCounter = 0;
    var actionStateMatchingIndex = -1;
    var thenableIndexCounter = 0;
    var thenableState = null;
    var renderPhaseUpdates = null;
    var numberOfReRenders = 0;
    function resolveCurrentlyRenderingComponent() {
      if (null === currentlyRenderingComponent)
        throw Error(
          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
        );
      return currentlyRenderingComponent;
    }
    function createHook() {
      if (0 < numberOfReRenders)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function createWorkInProgressHook() {
      null === workInProgressHook ? null === firstWorkInProgressHook ? (isReRender = false, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = true, workInProgressHook = firstWorkInProgressHook) : null === workInProgressHook.next ? (isReRender = false, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = true, workInProgressHook = workInProgressHook.next);
      return workInProgressHook;
    }
    function getThenableStateAfterSuspending() {
      var state2 = thenableState;
      thenableState = null;
      return state2;
    }
    function resetHooksState() {
      currentlyRenderingKeyPath = currentlyRenderingRequest = currentlyRenderingTask = currentlyRenderingComponent = null;
      didScheduleRenderPhaseUpdate = false;
      firstWorkInProgressHook = null;
      numberOfReRenders = 0;
      workInProgressHook = renderPhaseUpdates = null;
    }
    function basicStateReducer(state2, action) {
      return "function" === typeof action ? action(state2) : action;
    }
    function useReducer2(reducer2, initialArg, init) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      if (isReRender) {
        var queue = workInProgressHook.queue;
        initialArg = queue.dispatch;
        if (null !== renderPhaseUpdates && (init = renderPhaseUpdates.get(queue), void 0 !== init)) {
          renderPhaseUpdates.delete(queue);
          queue = workInProgressHook.memoizedState;
          do
            queue = reducer2(queue, init.action), init = init.next;
          while (null !== init);
          workInProgressHook.memoizedState = queue;
          return [queue, initialArg];
        }
        return [workInProgressHook.memoizedState, initialArg];
      }
      reducer2 = reducer2 === basicStateReducer ? "function" === typeof initialArg ? initialArg() : initialArg : void 0 !== init ? init(initialArg) : initialArg;
      workInProgressHook.memoizedState = reducer2;
      reducer2 = workInProgressHook.queue = { last: null, dispatch: null };
      reducer2 = reducer2.dispatch = dispatchAction.bind(
        null,
        currentlyRenderingComponent,
        reducer2
      );
      return [workInProgressHook.memoizedState, reducer2];
    }
    function useMemo10(nextCreate, deps) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      if (null !== workInProgressHook) {
        var prevState = workInProgressHook.memoizedState;
        if (null !== prevState && null !== deps) {
          var prevDeps = prevState[1];
          a: if (null === prevDeps) prevDeps = false;
          else {
            for (var i11 = 0; i11 < prevDeps.length && i11 < deps.length; i11++)
              if (!objectIs(deps[i11], prevDeps[i11])) {
                prevDeps = false;
                break a;
              }
            prevDeps = true;
          }
          if (prevDeps) return prevState[0];
        }
      }
      nextCreate = nextCreate();
      workInProgressHook.memoizedState = [nextCreate, deps];
      return nextCreate;
    }
    function dispatchAction(componentIdentity, queue, action) {
      if (25 <= numberOfReRenders)
        throw Error(
          "Too many re-renders. React limits the number of renders to prevent an infinite loop."
        );
      if (componentIdentity === currentlyRenderingComponent)
        if (didScheduleRenderPhaseUpdate = true, componentIdentity = { action, next: null }, null === renderPhaseUpdates && (renderPhaseUpdates = /* @__PURE__ */ new Map()), action = renderPhaseUpdates.get(queue), void 0 === action)
          renderPhaseUpdates.set(queue, componentIdentity);
        else {
          for (queue = action; null !== queue.next; ) queue = queue.next;
          queue.next = componentIdentity;
        }
    }
    function unsupportedStartTransition() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function unsupportedSetOptimisticState() {
      throw Error("Cannot update optimistic state while rendering.");
    }
    function useActionState(action, initialState, permalink) {
      resolveCurrentlyRenderingComponent();
      var actionStateHookIndex = actionStateCounter++, request = currentlyRenderingRequest;
      if ("function" === typeof action.$$FORM_ACTION) {
        var nextPostbackStateKey = null, componentKeyPath = currentlyRenderingKeyPath;
        request = request.formState;
        var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;
        if (null !== request && "function" === typeof isSignatureEqual) {
          var postbackKey = request[1];
          isSignatureEqual.call(action, request[2], request[3]) && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([componentKeyPath, null, actionStateHookIndex]),
            0
          ), postbackKey === nextPostbackStateKey && (actionStateMatchingIndex = actionStateHookIndex, initialState = request[0]));
        }
        var boundAction = action.bind(null, initialState);
        action = function(payload) {
          boundAction(payload);
        };
        "function" === typeof boundAction.$$FORM_ACTION && (action.$$FORM_ACTION = function(prefix3) {
          prefix3 = boundAction.$$FORM_ACTION(prefix3);
          void 0 !== permalink && (permalink += "", prefix3.action = permalink);
          var formData = prefix3.data;
          formData && (null === nextPostbackStateKey && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([
              componentKeyPath,
              null,
              actionStateHookIndex
            ]),
            0
          )), formData.append("$ACTION_KEY", nextPostbackStateKey));
          return prefix3;
        });
        return [initialState, action, false];
      }
      var boundAction$22 = action.bind(null, initialState);
      return [
        initialState,
        function(payload) {
          boundAction$22(payload);
        },
        false
      ];
    }
    function unwrapThenable(thenable) {
      var index = thenableIndexCounter;
      thenableIndexCounter += 1;
      null === thenableState && (thenableState = []);
      return trackUsedThenable(thenableState, thenable, index);
    }
    function unsupportedRefresh() {
      throw Error("Cache cannot be refreshed during server rendering.");
    }
    function noop$1() {
    }
    var HooksDispatcher = {
      readContext: function(context) {
        return context._currentValue;
      },
      use: function(usable) {
        if (null !== usable && "object" === typeof usable) {
          if ("function" === typeof usable.then) return unwrapThenable(usable);
          if (usable.$$typeof === REACT_CONTEXT_TYPE) return usable._currentValue;
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
      },
      useContext: function(context) {
        resolveCurrentlyRenderingComponent();
        return context._currentValue;
      },
      useMemo: useMemo10,
      useReducer: useReducer2,
      useRef: function(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
        workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        return null === previousRef ? (initialValue = { current: initialValue }, workInProgressHook.memoizedState = initialValue) : previousRef;
      },
      useState: function(initialState) {
        return useReducer2(basicStateReducer, initialState);
      },
      useInsertionEffect: noop$1,
      useLayoutEffect: noop$1,
      useCallback: function(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      },
      useImperativeHandle: noop$1,
      useEffect: noop$1,
      useDebugValue: noop$1,
      useDeferredValue: function(value, initialValue) {
        resolveCurrentlyRenderingComponent();
        return void 0 !== initialValue ? initialValue : value;
      },
      useTransition: function() {
        resolveCurrentlyRenderingComponent();
        return [false, unsupportedStartTransition];
      },
      useId: function() {
        var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
        var overflow = JSCompiler_inline_result.overflow;
        JSCompiler_inline_result = JSCompiler_inline_result.id;
        JSCompiler_inline_result = (JSCompiler_inline_result & ~(1 << 32 - clz32(JSCompiler_inline_result) - 1)).toString(32) + overflow;
        var resumableState = currentResumableState;
        if (null === resumableState)
          throw Error(
            "Invalid hook call. Hooks can only be called inside of the body of a function component."
          );
        overflow = localIdCounter++;
        JSCompiler_inline_result = "\xAB" + resumableState.idPrefix + "R" + JSCompiler_inline_result;
        0 < overflow && (JSCompiler_inline_result += "H" + overflow.toString(32));
        return JSCompiler_inline_result + "\xBB";
      },
      useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
        if (void 0 === getServerSnapshot)
          throw Error(
            "Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering."
          );
        return getServerSnapshot();
      },
      useOptimistic: function(passthrough) {
        resolveCurrentlyRenderingComponent();
        return [passthrough, unsupportedSetOptimisticState];
      },
      useActionState,
      useFormState: useActionState,
      useHostTransitionStatus: function() {
        resolveCurrentlyRenderingComponent();
        return sharedNotPendingObject;
      },
      useMemoCache: function(size) {
        for (var data = Array(size), i11 = 0; i11 < size; i11++)
          data[i11] = REACT_MEMO_CACHE_SENTINEL;
        return data;
      },
      useCacheRefresh: function() {
        return unsupportedRefresh;
      }
    };
    var currentResumableState = null;
    var DefaultAsyncDispatcher = {
      getCacheForType: function() {
        throw Error("Not implemented.");
      }
    };
    function prepareStackTrace(error, structuredStackTrace) {
      error = (error.name || "Error") + ": " + (error.message || "");
      for (var i11 = 0; i11 < structuredStackTrace.length; i11++)
        error += "\n    at " + structuredStackTrace[i11].toString();
      return error;
    }
    var prefix2;
    var suffix;
    function describeBuiltInComponentFrame(name2) {
      if (void 0 === prefix2)
        try {
          throw Error();
        } catch (x3) {
          var match = x3.stack.trim().match(/\n( *(at )?)/);
          prefix2 = match && match[1] || "";
          suffix = -1 < x3.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x3.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
      return "\n" + prefix2 + name2 + suffix;
    }
    var reentry = false;
    function describeNativeComponentFrame(fn, construct) {
      if (!fn || reentry) return "";
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = prepareStackTrace;
      try {
        var RunInRootFrame = {
          DetermineComponentFrameRoot: function() {
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if ("object" === typeof Reflect && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x3) {
                    var control = x3;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x$24) {
                    control = x$24;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x$25) {
                  control = x$25;
                }
                (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {
                });
              }
            } catch (sample) {
              if (sample && control && "string" === typeof sample.stack)
                return [sample.stack, control.stack];
            }
            return [null, null];
          }
        };
        RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
        var namePropDescriptor = Object.getOwnPropertyDescriptor(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name"
        );
        namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name",
          { value: "DetermineComponentFrameRoot" }
        );
        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
        if (sampleStack && controlStack) {
          var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
          for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot"); )
            RunInRootFrame++;
          for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes(
            "DetermineComponentFrameRoot"
          ); )
            namePropDescriptor++;
          if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length)
            for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]; )
              namePropDescriptor--;
          for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--)
            if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
                do
                  if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
                    var frame3 = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
                    fn.displayName && frame3.includes("<anonymous>") && (frame3 = frame3.replace("<anonymous>", fn.displayName));
                    return frame3;
                  }
                while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
              }
              break;
            }
        }
      } finally {
        reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
      }
      return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
    }
    function describeComponentStackByType(type) {
      if ("string" === typeof type) return describeBuiltInComponentFrame(type);
      if ("function" === typeof type)
        return type.prototype && type.prototype.isReactComponent ? describeNativeComponentFrame(type, true) : describeNativeComponentFrame(type, false);
      if ("object" === typeof type && null !== type) {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeNativeComponentFrame(type.render, false);
          case REACT_MEMO_TYPE:
            return describeNativeComponentFrame(type.type, false);
          case REACT_LAZY_TYPE:
            var lazyComponent = type, payload = lazyComponent._payload;
            lazyComponent = lazyComponent._init;
            try {
              type = lazyComponent(payload);
            } catch (x3) {
              return describeBuiltInComponentFrame("Lazy");
            }
            return describeComponentStackByType(type);
        }
        if ("string" === typeof type.name)
          return payload = type.env, describeBuiltInComponentFrame(
            type.name + (payload ? " [" + payload + "]" : "")
          );
      }
      switch (type) {
        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame("SuspenseList");
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame("Suspense");
      }
      return "";
    }
    function defaultErrorHandler(error) {
      if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
        var JSCompiler_inline_result = error.environmentName;
        error = [error].slice(0);
        "string" === typeof error[0] ? error.splice(
          0,
          1,
          "\x1B[0m\x1B[7m%c%s\x1B[0m%c " + error[0],
          "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px",
          " " + JSCompiler_inline_result + " ",
          ""
        ) : error.splice(
          0,
          0,
          "\x1B[0m\x1B[7m%c%s\x1B[0m%c ",
          "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px",
          " " + JSCompiler_inline_result + " ",
          ""
        );
        error.unshift(console);
        JSCompiler_inline_result = bind.apply(console.error, error);
        JSCompiler_inline_result();
      } else console.error(error);
      return null;
    }
    function noop3() {
    }
    function RequestInstance(resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      var abortSet = /* @__PURE__ */ new Set();
      this.destination = null;
      this.flushScheduled = false;
      this.resumableState = resumableState;
      this.renderState = renderState;
      this.rootFormatContext = rootFormatContext;
      this.progressiveChunkSize = void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;
      this.status = 10;
      this.fatalError = null;
      this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
      this.completedPreambleSegments = this.completedRootSegment = null;
      this.abortableTasks = abortSet;
      this.pingedTasks = [];
      this.clientRenderedBoundaries = [];
      this.completedBoundaries = [];
      this.partialBoundaries = [];
      this.trackedPostpones = null;
      this.onError = void 0 === onError ? defaultErrorHandler : onError;
      this.onPostpone = void 0 === onPostpone ? noop3 : onPostpone;
      this.onAllReady = void 0 === onAllReady ? noop3 : onAllReady;
      this.onShellReady = void 0 === onShellReady ? noop3 : onShellReady;
      this.onShellError = void 0 === onShellError ? noop3 : onShellError;
      this.onFatalError = void 0 === onFatalError ? noop3 : onFatalError;
      this.formState = void 0 === formState ? null : formState;
    }
    function createRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      resumableState = new RequestInstance(
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        formState
      );
      renderState = createPendingSegment(
        resumableState,
        0,
        null,
        rootFormatContext,
        false,
        false
      );
      renderState.parentFlushed = true;
      children = createRenderTask(
        resumableState,
        null,
        children,
        -1,
        null,
        renderState,
        null,
        null,
        resumableState.abortableTasks,
        null,
        rootFormatContext,
        null,
        emptyTreeContext,
        null,
        false
      );
      pushComponentStack(children);
      resumableState.pingedTasks.push(children);
      return resumableState;
    }
    function createPrerenderRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError, onPostpone) {
      children = createRequest(
        children,
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        void 0
      );
      children.trackedPostpones = {
        workingMap: /* @__PURE__ */ new Map(),
        rootNodes: [],
        rootSlots: null
      };
      return children;
    }
    var currentRequest = null;
    function resolveRequest() {
      if (currentRequest) return currentRequest;
      if (supportsRequestStorage) {
        var store = requestStorage.getStore();
        if (store) return store;
      }
      return null;
    }
    function pingTask(request, task) {
      request.pingedTasks.push(task);
      1 === request.pingedTasks.length && (request.flushScheduled = null !== request.destination, null !== request.trackedPostpones || 10 === request.status ? scheduleMicrotask(function() {
        return performWork(request);
      }) : setTimeout(function() {
        return performWork(request);
      }, 0));
    }
    function createSuspenseBoundary(request, fallbackAbortableTasks, contentPreamble, fallbackPreamble) {
      return {
        status: 0,
        rootSegmentID: -1,
        parentFlushed: false,
        pendingTasks: 0,
        completedSegments: [],
        byteSize: 0,
        fallbackAbortableTasks,
        errorDigest: null,
        contentState: createHoistableState(),
        fallbackState: createHoistableState(),
        contentPreamble,
        fallbackPreamble,
        trackedContentKeyPath: null,
        trackedFallbackNode: null
      };
    }
    function createRenderTask(request, thenableState2, node, childIndex, blockedBoundary, blockedSegment, blockedPreamble, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      var task = {
        replay: null,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment,
        blockedPreamble,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createReplayTask(request, thenableState2, replay, node, childIndex, blockedBoundary, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      replay.pendingTasks++;
      var task = {
        replay,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment: null,
        blockedPreamble: null,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createPendingSegment(request, index, boundary, parentFormatContext, lastPushedText, textEmbedded) {
      return {
        status: 0,
        parentFlushed: false,
        id: -1,
        index,
        chunks: [],
        children: [],
        preambleChildren: [],
        parentFormatContext,
        boundary,
        lastPushedText,
        textEmbedded
      };
    }
    function pushComponentStack(task) {
      var node = task.node;
      if ("object" === typeof node && null !== node)
        switch (node.$$typeof) {
          case REACT_ELEMENT_TYPE:
            task.componentStack = { parent: task.componentStack, type: node.type };
        }
    }
    function getThrownInfo(node$jscomp$0) {
      var errorInfo = {};
      node$jscomp$0 && Object.defineProperty(errorInfo, "componentStack", {
        configurable: true,
        enumerable: true,
        get: function() {
          try {
            var info = "", node = node$jscomp$0;
            do
              info += describeComponentStackByType(node.type), node = node.parent;
            while (node);
            var JSCompiler_inline_result = info;
          } catch (x3) {
            JSCompiler_inline_result = "\nError generating stack: " + x3.message + "\n" + x3.stack;
          }
          Object.defineProperty(errorInfo, "componentStack", {
            value: JSCompiler_inline_result
          });
          return JSCompiler_inline_result;
        }
      });
      return errorInfo;
    }
    function logRecoverableError(request, error, errorInfo) {
      request = request.onError;
      error = request(error, errorInfo);
      if (null == error || "string" === typeof error) return error;
    }
    function fatalError(request, error) {
      var onShellError = request.onShellError, onFatalError = request.onFatalError;
      onShellError(error);
      onFatalError(error);
      null !== request.destination ? (request.status = 14, closeWithError(request.destination, error)) : (request.status = 13, request.fatalError = error);
    }
    function renderWithHooks(request, task, keyPath, Component3, props, secondArg) {
      var prevThenableState = task.thenableState;
      task.thenableState = null;
      currentlyRenderingComponent = {};
      currentlyRenderingTask = task;
      currentlyRenderingRequest = request;
      currentlyRenderingKeyPath = keyPath;
      actionStateCounter = localIdCounter = 0;
      actionStateMatchingIndex = -1;
      thenableIndexCounter = 0;
      thenableState = prevThenableState;
      for (request = Component3(props, secondArg); didScheduleRenderPhaseUpdate; )
        didScheduleRenderPhaseUpdate = false, actionStateCounter = localIdCounter = 0, actionStateMatchingIndex = -1, thenableIndexCounter = 0, numberOfReRenders += 1, workInProgressHook = null, request = Component3(props, secondArg);
      resetHooksState();
      return request;
    }
    function finishFunctionComponent(request, task, keyPath, children, hasId, actionStateCount, actionStateMatchingIndex2) {
      var didEmitActionStateMarkers = false;
      if (0 !== actionStateCount && null !== request.formState) {
        var segment = task.blockedSegment;
        if (null !== segment) {
          didEmitActionStateMarkers = true;
          segment = segment.chunks;
          for (var i11 = 0; i11 < actionStateCount; i11++)
            i11 === actionStateMatchingIndex2 ? segment.push(formStateMarkerIsMatching) : segment.push(formStateMarkerIsNotMatching);
        }
      }
      actionStateCount = task.keyPath;
      task.keyPath = keyPath;
      hasId ? (keyPath = task.treeContext, task.treeContext = pushTreeContext(keyPath, 1, 0), renderNode(request, task, children, -1), task.treeContext = keyPath) : didEmitActionStateMarkers ? renderNode(request, task, children, -1) : renderNodeDestructive(request, task, children, -1);
      task.keyPath = actionStateCount;
    }
    function renderElement(request, task, keyPath, type, props, ref) {
      if ("function" === typeof type)
        if (type.prototype && type.prototype.isReactComponent) {
          var newProps = props;
          if ("ref" in props) {
            newProps = {};
            for (var propName in props)
              "ref" !== propName && (newProps[propName] = props[propName]);
          }
          var defaultProps62 = type.defaultProps;
          if (defaultProps62) {
            newProps === props && (newProps = assign({}, newProps, props));
            for (var propName$33 in defaultProps62)
              void 0 === newProps[propName$33] && (newProps[propName$33] = defaultProps62[propName$33]);
          }
          props = newProps;
          newProps = emptyContextObject;
          defaultProps62 = type.contextType;
          "object" === typeof defaultProps62 && null !== defaultProps62 && (newProps = defaultProps62._currentValue);
          newProps = new type(props, newProps);
          var initialState = void 0 !== newProps.state ? newProps.state : null;
          newProps.updater = classComponentUpdater;
          newProps.props = props;
          newProps.state = initialState;
          defaultProps62 = { queue: [], replace: false };
          newProps._reactInternals = defaultProps62;
          ref = type.contextType;
          newProps.context = "object" === typeof ref && null !== ref ? ref._currentValue : emptyContextObject;
          ref = type.getDerivedStateFromProps;
          "function" === typeof ref && (ref = ref(props, initialState), initialState = null === ref || void 0 === ref ? initialState : assign({}, initialState, ref), newProps.state = initialState);
          if ("function" !== typeof type.getDerivedStateFromProps && "function" !== typeof newProps.getSnapshotBeforeUpdate && ("function" === typeof newProps.UNSAFE_componentWillMount || "function" === typeof newProps.componentWillMount))
            if (type = newProps.state, "function" === typeof newProps.componentWillMount && newProps.componentWillMount(), "function" === typeof newProps.UNSAFE_componentWillMount && newProps.UNSAFE_componentWillMount(), type !== newProps.state && classComponentUpdater.enqueueReplaceState(
              newProps,
              newProps.state,
              null
            ), null !== defaultProps62.queue && 0 < defaultProps62.queue.length)
              if (type = defaultProps62.queue, ref = defaultProps62.replace, defaultProps62.queue = null, defaultProps62.replace = false, ref && 1 === type.length)
                newProps.state = type[0];
              else {
                defaultProps62 = ref ? type[0] : newProps.state;
                initialState = true;
                for (ref = ref ? 1 : 0; ref < type.length; ref++)
                  propName$33 = type[ref], propName$33 = "function" === typeof propName$33 ? propName$33.call(newProps, defaultProps62, props, void 0) : propName$33, null != propName$33 && (initialState ? (initialState = false, defaultProps62 = assign({}, defaultProps62, propName$33)) : assign(defaultProps62, propName$33));
                newProps.state = defaultProps62;
              }
            else defaultProps62.queue = null;
          type = newProps.render();
          if (12 === request.status) throw null;
          props = task.keyPath;
          task.keyPath = keyPath;
          renderNodeDestructive(request, task, type, -1);
          task.keyPath = props;
        } else {
          type = renderWithHooks(request, task, keyPath, type, props, void 0);
          if (12 === request.status) throw null;
          finishFunctionComponent(
            request,
            task,
            keyPath,
            type,
            0 !== localIdCounter,
            actionStateCounter,
            actionStateMatchingIndex
          );
        }
      else if ("string" === typeof type)
        if (newProps = task.blockedSegment, null === newProps)
          newProps = props.children, defaultProps62 = task.formatContext, initialState = task.keyPath, task.formatContext = getChildFormatContext(defaultProps62, type, props), task.keyPath = keyPath, renderNode(request, task, newProps, -1), task.formatContext = defaultProps62, task.keyPath = initialState;
        else {
          ref = pushStartInstance(
            newProps.chunks,
            type,
            props,
            request.resumableState,
            request.renderState,
            task.blockedPreamble,
            task.hoistableState,
            task.formatContext,
            newProps.lastPushedText,
            task.isFallback
          );
          newProps.lastPushedText = false;
          defaultProps62 = task.formatContext;
          initialState = task.keyPath;
          task.keyPath = keyPath;
          3 === (task.formatContext = getChildFormatContext(defaultProps62, type, props)).insertionMode ? (keyPath = createPendingSegment(
            request,
            0,
            null,
            task.formatContext,
            false,
            false
          ), newProps.preambleChildren.push(keyPath), keyPath = createRenderTask(
            request,
            null,
            ref,
            -1,
            task.blockedBoundary,
            keyPath,
            task.blockedPreamble,
            task.hoistableState,
            request.abortableTasks,
            task.keyPath,
            task.formatContext,
            task.context,
            task.treeContext,
            task.componentStack,
            task.isFallback
          ), pushComponentStack(keyPath), request.pingedTasks.push(keyPath)) : renderNode(request, task, ref, -1);
          task.formatContext = defaultProps62;
          task.keyPath = initialState;
          a: {
            task = newProps.chunks;
            request = request.resumableState;
            switch (type) {
              case "title":
              case "style":
              case "script":
              case "area":
              case "base":
              case "br":
              case "col":
              case "embed":
              case "hr":
              case "img":
              case "input":
              case "keygen":
              case "link":
              case "meta":
              case "param":
              case "source":
              case "track":
              case "wbr":
                break a;
              case "body":
                if (1 >= defaultProps62.insertionMode) {
                  request.hasBody = true;
                  break a;
                }
                break;
              case "html":
                if (0 === defaultProps62.insertionMode) {
                  request.hasHtml = true;
                  break a;
                }
                break;
              case "head":
                if (1 >= defaultProps62.insertionMode) break a;
            }
            task.push(endChunkForTag(type));
          }
          newProps.lastPushedText = false;
        }
      else {
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_ACTIVITY_TYPE:
            "hidden" !== props.mode && (type = task.keyPath, task.keyPath = keyPath, renderNodeDestructive(request, task, props.children, -1), task.keyPath = type);
            return;
          case REACT_SUSPENSE_LIST_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_VIEW_TRANSITION_TYPE:
          case REACT_SCOPE_TYPE:
            throw Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE:
            a: if (null !== task.replay) {
              type = task.keyPath;
              task.keyPath = keyPath;
              keyPath = props.children;
              try {
                renderNode(request, task, keyPath, -1);
              } finally {
                task.keyPath = type;
              }
            } else {
              type = task.keyPath;
              var parentBoundary = task.blockedBoundary;
              ref = task.blockedPreamble;
              var parentHoistableState = task.hoistableState;
              propName$33 = task.blockedSegment;
              propName = props.fallback;
              props = props.children;
              var fallbackAbortSet = /* @__PURE__ */ new Set();
              var newBoundary = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                request,
                fallbackAbortSet,
                createPreambleState(),
                createPreambleState()
              ) : createSuspenseBoundary(request, fallbackAbortSet, null, null);
              null !== request.trackedPostpones && (newBoundary.trackedContentKeyPath = keyPath);
              var boundarySegment = createPendingSegment(
                request,
                propName$33.chunks.length,
                newBoundary,
                task.formatContext,
                false,
                false
              );
              propName$33.children.push(boundarySegment);
              propName$33.lastPushedText = false;
              var contentRootSegment = createPendingSegment(
                request,
                0,
                null,
                task.formatContext,
                false,
                false
              );
              contentRootSegment.parentFlushed = true;
              if (null !== request.trackedPostpones) {
                newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
                defaultProps62 = [newProps[1], newProps[2], [], null];
                request.trackedPostpones.workingMap.set(newProps, defaultProps62);
                newBoundary.trackedFallbackNode = defaultProps62;
                task.blockedSegment = boundarySegment;
                task.blockedPreamble = newBoundary.fallbackPreamble;
                task.keyPath = newProps;
                boundarySegment.status = 6;
                try {
                  renderNode(request, task, propName, -1), boundarySegment.lastPushedText && boundarySegment.textEmbedded && boundarySegment.chunks.push(textSeparator), boundarySegment.status = 1;
                } catch (thrownValue) {
                  throw boundarySegment.status = 12 === request.status ? 3 : 4, thrownValue;
                } finally {
                  task.blockedSegment = propName$33, task.blockedPreamble = ref, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  props,
                  -1,
                  newBoundary,
                  contentRootSegment,
                  newBoundary.contentPreamble,
                  newBoundary.contentState,
                  task.abortSet,
                  keyPath,
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  task.isFallback
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              } else {
                task.blockedBoundary = newBoundary;
                task.blockedPreamble = newBoundary.contentPreamble;
                task.hoistableState = newBoundary.contentState;
                task.blockedSegment = contentRootSegment;
                task.keyPath = keyPath;
                contentRootSegment.status = 6;
                try {
                  if (renderNode(request, task, props, -1), contentRootSegment.lastPushedText && contentRootSegment.textEmbedded && contentRootSegment.chunks.push(textSeparator), contentRootSegment.status = 1, queueCompletedSegment(newBoundary, contentRootSegment), 0 === newBoundary.pendingTasks && 0 === newBoundary.status) {
                    newBoundary.status = 1;
                    0 === request.pendingRootTasks && task.blockedPreamble && preparePreamble(request);
                    break a;
                  }
                } catch (thrownValue$28) {
                  newBoundary.status = 4, 12 === request.status ? (contentRootSegment.status = 3, newProps = request.fatalError) : (contentRootSegment.status = 4, newProps = thrownValue$28), defaultProps62 = getThrownInfo(task.componentStack), initialState = logRecoverableError(
                    request,
                    newProps,
                    defaultProps62
                  ), newBoundary.errorDigest = initialState, untrackBoundary(request, newBoundary);
                } finally {
                  task.blockedBoundary = parentBoundary, task.blockedPreamble = ref, task.hoistableState = parentHoistableState, task.blockedSegment = propName$33, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  propName,
                  -1,
                  parentBoundary,
                  boundarySegment,
                  newBoundary.fallbackPreamble,
                  newBoundary.fallbackState,
                  fallbackAbortSet,
                  [keyPath[0], "Suspense Fallback", keyPath[2]],
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  true
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              }
            }
            return;
        }
        if ("object" === typeof type && null !== type)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              if ("ref" in props)
                for (newBoundary in newProps = {}, props)
                  "ref" !== newBoundary && (newProps[newBoundary] = props[newBoundary]);
              else newProps = props;
              type = renderWithHooks(
                request,
                task,
                keyPath,
                type.render,
                newProps,
                ref
              );
              finishFunctionComponent(
                request,
                task,
                keyPath,
                type,
                0 !== localIdCounter,
                actionStateCounter,
                actionStateMatchingIndex
              );
              return;
            case REACT_MEMO_TYPE:
              renderElement(request, task, keyPath, type.type, props, ref);
              return;
            case REACT_PROVIDER_TYPE:
            case REACT_CONTEXT_TYPE:
              defaultProps62 = props.children;
              newProps = task.keyPath;
              props = props.value;
              initialState = type._currentValue;
              type._currentValue = props;
              ref = currentActiveSnapshot;
              currentActiveSnapshot = type = {
                parent: ref,
                depth: null === ref ? 0 : ref.depth + 1,
                context: type,
                parentValue: initialState,
                value: props
              };
              task.context = type;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, defaultProps62, -1);
              request = currentActiveSnapshot;
              if (null === request)
                throw Error(
                  "Tried to pop a Context at the root of the app. This is a bug in React."
                );
              request.context._currentValue = request.parentValue;
              request = currentActiveSnapshot = request.parent;
              task.context = request;
              task.keyPath = newProps;
              return;
            case REACT_CONSUMER_TYPE:
              props = props.children;
              type = props(type._context._currentValue);
              props = task.keyPath;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, type, -1);
              task.keyPath = props;
              return;
            case REACT_LAZY_TYPE:
              newProps = type._init;
              type = newProps(type._payload);
              if (12 === request.status) throw null;
              renderElement(request, task, keyPath, type, props, ref);
              return;
          }
        throw Error(
          "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((null == type ? type : typeof type) + ".")
        );
      }
    }
    function resumeNode(request, task, segmentId, node, childIndex) {
      var prevReplay = task.replay, blockedBoundary = task.blockedBoundary, resumedSegment = createPendingSegment(
        request,
        0,
        null,
        task.formatContext,
        false,
        false
      );
      resumedSegment.id = segmentId;
      resumedSegment.parentFlushed = true;
      try {
        task.replay = null, task.blockedSegment = resumedSegment, renderNode(request, task, node, childIndex), resumedSegment.status = 1, null === blockedBoundary ? request.completedRootSegment = resumedSegment : (queueCompletedSegment(blockedBoundary, resumedSegment), blockedBoundary.parentFlushed && request.partialBoundaries.push(blockedBoundary));
      } finally {
        task.replay = prevReplay, task.blockedSegment = null;
      }
    }
    function renderNodeDestructive(request, task, node, childIndex) {
      null !== task.replay && "number" === typeof task.replay.slots ? resumeNode(request, task, task.replay.slots, node, childIndex) : (task.node = node, task.childIndex = childIndex, node = task.componentStack, pushComponentStack(task), retryNode(request, task), task.componentStack = node);
    }
    function retryNode(request, task) {
      var node = task.node, childIndex = task.childIndex;
      if (null !== node) {
        if ("object" === typeof node) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = node.type, key = node.key, props = node.props;
              node = props.ref;
              var ref = void 0 !== node ? node : null, name2 = getComponentNameFromType(type), keyOrIndex = null == key ? -1 === childIndex ? 0 : childIndex : key;
              key = [task.keyPath, name2, keyOrIndex];
              if (null !== task.replay)
                a: {
                  var replay = task.replay;
                  childIndex = replay.nodes;
                  for (node = 0; node < childIndex.length; node++) {
                    var node$jscomp$0 = childIndex[node];
                    if (keyOrIndex === node$jscomp$0[1]) {
                      if (4 === node$jscomp$0.length) {
                        if (null !== name2 && name2 !== node$jscomp$0[0])
                          throw Error(
                            "Expected the resume to render <" + node$jscomp$0[0] + "> in this slot but instead it rendered <" + name2 + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        var childNodes = node$jscomp$0[2];
                        name2 = node$jscomp$0[3];
                        keyOrIndex = task.node;
                        task.replay = {
                          nodes: childNodes,
                          slots: name2,
                          pendingTasks: 1
                        };
                        try {
                          renderElement(request, task, key, type, props, ref);
                          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                            throw Error(
                              "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                            );
                          task.replay.pendingTasks--;
                        } catch (x3) {
                          if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                            throw task.node === keyOrIndex && (task.replay = replay), x3;
                          task.replay.pendingTasks--;
                          props = getThrownInfo(task.componentStack);
                          key = task.blockedBoundary;
                          type = x3;
                          props = logRecoverableError(request, type, props);
                          abortRemainingReplayNodes(
                            request,
                            key,
                            childNodes,
                            name2,
                            type,
                            props
                          );
                        }
                        task.replay = replay;
                      } else {
                        if (type !== REACT_SUSPENSE_TYPE)
                          throw Error(
                            "Expected the resume to render <Suspense> in this slot but instead it rendered <" + (getComponentNameFromType(type) || "Unknown") + ">. The tree doesn't match so React will fallback to client rendering."
                          );
                        b: {
                          replay = void 0;
                          type = node$jscomp$0[5];
                          ref = node$jscomp$0[2];
                          name2 = node$jscomp$0[3];
                          keyOrIndex = null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];
                          node$jscomp$0 = null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];
                          var prevKeyPath = task.keyPath, previousReplaySet = task.replay, parentBoundary = task.blockedBoundary, parentHoistableState = task.hoistableState, content4 = props.children, fallback = props.fallback, fallbackAbortSet = /* @__PURE__ */ new Set();
                          props = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            createPreambleState(),
                            createPreambleState()
                          ) : createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            null,
                            null
                          );
                          props.parentFlushed = true;
                          props.rootSegmentID = type;
                          task.blockedBoundary = props;
                          task.hoistableState = props.contentState;
                          task.keyPath = key;
                          task.replay = {
                            nodes: ref,
                            slots: name2,
                            pendingTasks: 1
                          };
                          try {
                            renderNode(request, task, content4, -1);
                            if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                              throw Error(
                                "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                              );
                            task.replay.pendingTasks--;
                            if (0 === props.pendingTasks && 0 === props.status) {
                              props.status = 1;
                              request.completedBoundaries.push(props);
                              break b;
                            }
                          } catch (error) {
                            props.status = 4, childNodes = getThrownInfo(task.componentStack), replay = logRecoverableError(
                              request,
                              error,
                              childNodes
                            ), props.errorDigest = replay, task.replay.pendingTasks--, request.clientRenderedBoundaries.push(props);
                          } finally {
                            task.blockedBoundary = parentBoundary, task.hoistableState = parentHoistableState, task.replay = previousReplaySet, task.keyPath = prevKeyPath;
                          }
                          task = createReplayTask(
                            request,
                            null,
                            {
                              nodes: keyOrIndex,
                              slots: node$jscomp$0,
                              pendingTasks: 0
                            },
                            fallback,
                            -1,
                            parentBoundary,
                            props.fallbackState,
                            fallbackAbortSet,
                            [key[0], "Suspense Fallback", key[2]],
                            task.formatContext,
                            task.context,
                            task.treeContext,
                            task.componentStack,
                            true
                          );
                          pushComponentStack(task);
                          request.pingedTasks.push(task);
                        }
                      }
                      childIndex.splice(node, 1);
                      break a;
                    }
                  }
                }
              else renderElement(request, task, key, type, props, ref);
              return;
            case REACT_PORTAL_TYPE:
              throw Error(
                "Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render."
              );
            case REACT_LAZY_TYPE:
              childNodes = node._init;
              node = childNodes(node._payload);
              if (12 === request.status) throw null;
              renderNodeDestructive(request, task, node, childIndex);
              return;
          }
          if (isArrayImpl(node)) {
            renderChildrenArray(request, task, node, childIndex);
            return;
          }
          null === node || "object" !== typeof node ? childNodes = null : (childNodes = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], childNodes = "function" === typeof childNodes ? childNodes : null);
          if (childNodes && (childNodes = childNodes.call(node))) {
            node = childNodes.next();
            if (!node.done) {
              props = [];
              do
                props.push(node.value), node = childNodes.next();
              while (!node.done);
              renderChildrenArray(request, task, props, childIndex);
            }
            return;
          }
          if ("function" === typeof node.then)
            return task.thenableState = null, renderNodeDestructive(request, task, unwrapThenable(node), childIndex);
          if (node.$$typeof === REACT_CONTEXT_TYPE)
            return renderNodeDestructive(
              request,
              task,
              node._currentValue,
              childIndex
            );
          childIndex = Object.prototype.toString.call(node);
          throw Error(
            "Objects are not valid as a React child (found: " + ("[object Object]" === childIndex ? "object with keys {" + Object.keys(node).join(", ") + "}" : childIndex) + "). If you meant to render a collection of children, use an array instead."
          );
        }
        if ("string" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            node,
            request.renderState,
            childIndex.lastPushedText
          ));
        else if ("number" === typeof node || "bigint" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            "" + node,
            request.renderState,
            childIndex.lastPushedText
          ));
      }
    }
    function renderChildrenArray(request, task, children, childIndex) {
      var prevKeyPath = task.keyPath;
      if (-1 !== childIndex && (task.keyPath = [task.keyPath, "Fragment", childIndex], null !== task.replay)) {
        for (var replay = task.replay, replayNodes = replay.nodes, j4 = 0; j4 < replayNodes.length; j4++) {
          var node = replayNodes[j4];
          if (node[1] === childIndex) {
            childIndex = node[2];
            node = node[3];
            task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };
            try {
              renderChildrenArray(request, task, children, -1);
              if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                throw Error(
                  "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                );
              task.replay.pendingTasks--;
            } catch (x3) {
              if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                throw x3;
              task.replay.pendingTasks--;
              children = getThrownInfo(task.componentStack);
              var boundary = task.blockedBoundary, error = x3;
              children = logRecoverableError(request, error, children);
              abortRemainingReplayNodes(
                request,
                boundary,
                childIndex,
                node,
                error,
                children
              );
            }
            task.replay = replay;
            replayNodes.splice(j4, 1);
            break;
          }
        }
        task.keyPath = prevKeyPath;
        return;
      }
      replay = task.treeContext;
      replayNodes = children.length;
      if (null !== task.replay && (j4 = task.replay.slots, null !== j4 && "object" === typeof j4)) {
        for (childIndex = 0; childIndex < replayNodes; childIndex++)
          node = children[childIndex], task.treeContext = pushTreeContext(replay, replayNodes, childIndex), boundary = j4[childIndex], "number" === typeof boundary ? (resumeNode(request, task, boundary, node, childIndex), delete j4[childIndex]) : renderNode(request, task, node, childIndex);
        task.treeContext = replay;
        task.keyPath = prevKeyPath;
        return;
      }
      for (j4 = 0; j4 < replayNodes; j4++)
        childIndex = children[j4], task.treeContext = pushTreeContext(replay, replayNodes, j4), renderNode(request, task, childIndex, j4);
      task.treeContext = replay;
      task.keyPath = prevKeyPath;
    }
    function untrackBoundary(request, boundary) {
      request = request.trackedPostpones;
      null !== request && (boundary = boundary.trackedContentKeyPath, null !== boundary && (boundary = request.workingMap.get(boundary), void 0 !== boundary && (boundary.length = 4, boundary[2] = [], boundary[3] = null)));
    }
    function spawnNewSuspendedReplayTask(request, task, thenableState2) {
      return createReplayTask(
        request,
        thenableState2,
        task.replay,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function spawnNewSuspendedRenderTask(request, task, thenableState2) {
      var segment = task.blockedSegment, newSegment = createPendingSegment(
        request,
        segment.chunks.length,
        null,
        task.formatContext,
        segment.lastPushedText,
        true
      );
      segment.children.push(newSegment);
      segment.lastPushedText = false;
      return createRenderTask(
        request,
        thenableState2,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        newSegment,
        task.blockedPreamble,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function renderNode(request, task, node, childIndex) {
      var previousFormatContext = task.formatContext, previousContext = task.context, previousKeyPath = task.keyPath, previousTreeContext = task.treeContext, previousComponentStack = task.componentStack, segment = task.blockedSegment;
      if (null === segment)
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue) {
          if (resetHooksState(), node = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedReplayTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      else {
        var childrenLength = segment.children.length, chunkLength = segment.chunks.length;
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue$48) {
          if (resetHooksState(), segment.children.length = childrenLength, segment.chunks.length = chunkLength, node = thrownValue$48 === SuspenseException ? getSuspendedThenable() : thrownValue$48, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedRenderTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      }
      task.formatContext = previousFormatContext;
      task.context = previousContext;
      task.keyPath = previousKeyPath;
      task.treeContext = previousTreeContext;
      switchContext(previousContext);
      throw node;
    }
    function abortTaskSoft(task) {
      var boundary = task.blockedBoundary;
      task = task.blockedSegment;
      null !== task && (task.status = 3, finishedTask(this, boundary, task));
    }
    function abortRemainingReplayNodes(request$jscomp$0, boundary, nodes, slots, error, errorDigest$jscomp$0) {
      for (var i11 = 0; i11 < nodes.length; i11++) {
        var node = nodes[i11];
        if (4 === node.length)
          abortRemainingReplayNodes(
            request$jscomp$0,
            boundary,
            node[2],
            node[3],
            error,
            errorDigest$jscomp$0
          );
        else {
          node = node[5];
          var request = request$jscomp$0, errorDigest = errorDigest$jscomp$0, resumedBoundary = createSuspenseBoundary(
            request,
            /* @__PURE__ */ new Set(),
            null,
            null
          );
          resumedBoundary.parentFlushed = true;
          resumedBoundary.rootSegmentID = node;
          resumedBoundary.status = 4;
          resumedBoundary.errorDigest = errorDigest;
          resumedBoundary.parentFlushed && request.clientRenderedBoundaries.push(resumedBoundary);
        }
      }
      nodes.length = 0;
      if (null !== slots) {
        if (null === boundary)
          throw Error(
            "We should not have any resumable nodes in the shell. This is a bug in React."
          );
        4 !== boundary.status && (boundary.status = 4, boundary.errorDigest = errorDigest$jscomp$0, boundary.parentFlushed && request$jscomp$0.clientRenderedBoundaries.push(boundary));
        if ("object" === typeof slots) for (var index in slots) delete slots[index];
      }
    }
    function abortTask(task, request, error) {
      var boundary = task.blockedBoundary, segment = task.blockedSegment;
      if (null !== segment) {
        if (6 === segment.status) return;
        segment.status = 3;
      }
      segment = getThrownInfo(task.componentStack);
      if (null === boundary) {
        if (13 !== request.status && 14 !== request.status) {
          boundary = task.replay;
          if (null === boundary) {
            logRecoverableError(request, error, segment);
            fatalError(request, error);
            return;
          }
          boundary.pendingTasks--;
          0 === boundary.pendingTasks && 0 < boundary.nodes.length && (task = logRecoverableError(request, error, segment), abortRemainingReplayNodes(
            request,
            null,
            boundary.nodes,
            boundary.slots,
            error,
            task
          ));
          request.pendingRootTasks--;
          0 === request.pendingRootTasks && completeShell(request);
        }
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (boundary.status = 4, task = logRecoverableError(request, error, segment), boundary.status = 4, boundary.errorDigest = task, untrackBoundary(request, boundary), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary)), boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
          return abortTask(fallbackTask, request, error);
        }), boundary.fallbackAbortableTasks.clear();
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function safelyEmitEarlyPreloads(request, shellComplete) {
      try {
        var renderState = request.renderState, onHeaders = renderState.onHeaders;
        if (onHeaders) {
          var headers = renderState.headers;
          if (headers) {
            renderState.headers = null;
            var linkHeader = headers.preconnects;
            headers.fontPreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.fontPreloads);
            headers.highImagePreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.highImagePreloads);
            if (!shellComplete) {
              var queueIter = renderState.styles.values(), queueStep = queueIter.next();
              b: for (; 0 < headers.remainingCapacity && !queueStep.done; queueStep = queueIter.next())
                for (var sheetIter = queueStep.value.sheets.values(), sheetStep = sheetIter.next(); 0 < headers.remainingCapacity && !sheetStep.done; sheetStep = sheetIter.next()) {
                  var sheet = sheetStep.value, props = sheet.props, key = props.href, props$jscomp$0 = sheet.props, header = getPreloadAsHeader(props$jscomp$0.href, "style", {
                    crossOrigin: props$jscomp$0.crossOrigin,
                    integrity: props$jscomp$0.integrity,
                    nonce: props$jscomp$0.nonce,
                    type: props$jscomp$0.type,
                    fetchPriority: props$jscomp$0.fetchPriority,
                    referrerPolicy: props$jscomp$0.referrerPolicy,
                    media: props$jscomp$0.media
                  });
                  if (0 <= (headers.remainingCapacity -= header.length + 2))
                    renderState.resets.style[key] = PRELOAD_NO_CREDS, linkHeader && (linkHeader += ", "), linkHeader += header, renderState.resets.style[key] = "string" === typeof props.crossOrigin || "string" === typeof props.integrity ? [props.crossOrigin, props.integrity] : PRELOAD_NO_CREDS;
                  else break b;
                }
            }
            linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});
          }
        }
      } catch (error) {
        logRecoverableError(request, error, {});
      }
    }
    function completeShell(request) {
      null === request.trackedPostpones && safelyEmitEarlyPreloads(request, true);
      null === request.trackedPostpones && preparePreamble(request);
      request.onShellError = noop3;
      request = request.onShellReady;
      request();
    }
    function completeAll(request) {
      safelyEmitEarlyPreloads(
        request,
        null === request.trackedPostpones ? true : null === request.completedRootSegment || 5 !== request.completedRootSegment.status
      );
      preparePreamble(request);
      request = request.onAllReady;
      request();
    }
    function queueCompletedSegment(boundary, segment) {
      if (0 === segment.chunks.length && 1 === segment.children.length && null === segment.children[0].boundary && -1 === segment.children[0].id) {
        var childSegment = segment.children[0];
        childSegment.id = segment.id;
        childSegment.parentFlushed = true;
        1 === childSegment.status && queueCompletedSegment(boundary, childSegment);
      } else boundary.completedSegments.push(segment);
    }
    function finishedTask(request, boundary, segment) {
      if (null === boundary) {
        if (null !== segment && segment.parentFlushed) {
          if (null !== request.completedRootSegment)
            throw Error(
              "There can only be one root segment. This is a bug in React."
            );
          request.completedRootSegment = segment;
        }
        request.pendingRootTasks--;
        0 === request.pendingRootTasks && completeShell(request);
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (0 === boundary.pendingTasks ? (0 === boundary.status && (boundary.status = 1), null !== segment && segment.parentFlushed && 1 === segment.status && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), 1 === boundary.status && (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear(), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary.contentPreamble && preparePreamble(request))) : null !== segment && segment.parentFlushed && 1 === segment.status && (queueCompletedSegment(boundary, segment), 1 === boundary.completedSegments.length && boundary.parentFlushed && request.partialBoundaries.push(boundary)));
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function performWork(request$jscomp$2) {
      if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {
        var prevContext = currentActiveSnapshot, prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = HooksDispatcher;
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        var prevRequest = currentRequest;
        currentRequest = request$jscomp$2;
        var prevResumableState = currentResumableState;
        currentResumableState = request$jscomp$2.resumableState;
        try {
          var pingedTasks = request$jscomp$2.pingedTasks, i11;
          for (i11 = 0; i11 < pingedTasks.length; i11++) {
            var task = pingedTasks[i11], request = request$jscomp$2, segment = task.blockedSegment;
            if (null === segment) {
              var request$jscomp$0 = request;
              if (0 !== task.replay.pendingTasks) {
                switchContext(task.context);
                try {
                  "number" === typeof task.replay.slots ? resumeNode(
                    request$jscomp$0,
                    task,
                    task.replay.slots,
                    task.node,
                    task.childIndex
                  ) : retryNode(request$jscomp$0, task);
                  if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                    throw Error(
                      "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                    );
                  task.replay.pendingTasks--;
                  task.abortSet.delete(task);
                  finishedTask(request$jscomp$0, task.blockedBoundary, null);
                } catch (thrownValue) {
                  resetHooksState();
                  var x3 = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue;
                  if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then) {
                    var ping = task.ping;
                    x3.then(ping, ping);
                    task.thenableState = getThenableStateAfterSuspending();
                  } else {
                    task.replay.pendingTasks--;
                    task.abortSet.delete(task);
                    var errorInfo = getThrownInfo(task.componentStack);
                    request = void 0;
                    var request$jscomp$1 = request$jscomp$0, boundary = task.blockedBoundary, error$jscomp$0 = 12 === request$jscomp$0.status ? request$jscomp$0.fatalError : x3, replayNodes = task.replay.nodes, resumeSlots = task.replay.slots;
                    request = logRecoverableError(
                      request$jscomp$1,
                      error$jscomp$0,
                      errorInfo
                    );
                    abortRemainingReplayNodes(
                      request$jscomp$1,
                      boundary,
                      replayNodes,
                      resumeSlots,
                      error$jscomp$0,
                      request
                    );
                    request$jscomp$0.pendingRootTasks--;
                    0 === request$jscomp$0.pendingRootTasks && completeShell(request$jscomp$0);
                    request$jscomp$0.allPendingTasks--;
                    0 === request$jscomp$0.allPendingTasks && completeAll(request$jscomp$0);
                  }
                } finally {
                }
              }
            } else if (request$jscomp$0 = void 0, request$jscomp$1 = segment, 0 === request$jscomp$1.status) {
              request$jscomp$1.status = 6;
              switchContext(task.context);
              var childrenLength = request$jscomp$1.children.length, chunkLength = request$jscomp$1.chunks.length;
              try {
                retryNode(request, task), request$jscomp$1.lastPushedText && request$jscomp$1.textEmbedded && request$jscomp$1.chunks.push(textSeparator), task.abortSet.delete(task), request$jscomp$1.status = 1, finishedTask(request, task.blockedBoundary, request$jscomp$1);
              } catch (thrownValue) {
                resetHooksState();
                request$jscomp$1.children.length = childrenLength;
                request$jscomp$1.chunks.length = chunkLength;
                var x$jscomp$0 = thrownValue === SuspenseException ? getSuspendedThenable() : 12 === request.status ? request.fatalError : thrownValue;
                if ("object" === typeof x$jscomp$0 && null !== x$jscomp$0 && "function" === typeof x$jscomp$0.then) {
                  request$jscomp$1.status = 0;
                  task.thenableState = getThenableStateAfterSuspending();
                  var ping$jscomp$0 = task.ping;
                  x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);
                } else {
                  var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);
                  task.abortSet.delete(task);
                  request$jscomp$1.status = 4;
                  var boundary$jscomp$0 = task.blockedBoundary;
                  request$jscomp$0 = logRecoverableError(
                    request,
                    x$jscomp$0,
                    errorInfo$jscomp$0
                  );
                  null === boundary$jscomp$0 ? fatalError(request, x$jscomp$0) : (boundary$jscomp$0.pendingTasks--, 4 !== boundary$jscomp$0.status && (boundary$jscomp$0.status = 4, boundary$jscomp$0.errorDigest = request$jscomp$0, untrackBoundary(request, boundary$jscomp$0), boundary$jscomp$0.parentFlushed && request.clientRenderedBoundaries.push(boundary$jscomp$0), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary$jscomp$0.contentPreamble && preparePreamble(request)));
                  request.allPendingTasks--;
                  0 === request.allPendingTasks && completeAll(request);
                }
              } finally {
              }
            }
          }
          pingedTasks.splice(0, i11);
          null !== request$jscomp$2.destination && flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);
        } catch (error) {
          logRecoverableError(request$jscomp$2, error, {}), fatalError(request$jscomp$2, error);
        } finally {
          currentResumableState = prevResumableState, ReactSharedInternals.H = prevDispatcher, ReactSharedInternals.A = prevAsyncDispatcher, prevDispatcher === HooksDispatcher && switchContext(prevContext), currentRequest = prevRequest;
        }
      }
    }
    function preparePreambleFromSubtree(request, segment, collectedPreambleSegments) {
      segment.preambleChildren.length && collectedPreambleSegments.push(segment.preambleChildren);
      for (var pendingPreambles = false, i11 = 0; i11 < segment.children.length; i11++)
        pendingPreambles = preparePreambleFromSegment(
          request,
          segment.children[i11],
          collectedPreambleSegments
        ) || pendingPreambles;
      return pendingPreambles;
    }
    function preparePreambleFromSegment(request, segment, collectedPreambleSegments) {
      var boundary = segment.boundary;
      if (null === boundary)
        return preparePreambleFromSubtree(
          request,
          segment,
          collectedPreambleSegments
        );
      var preamble = boundary.contentPreamble, fallbackPreamble = boundary.fallbackPreamble;
      if (null === preamble || null === fallbackPreamble) return false;
      switch (boundary.status) {
        case 1:
          hoistPreambleState(request.renderState, preamble);
          segment = boundary.completedSegments[0];
          if (!segment)
            throw Error(
              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
            );
          return preparePreambleFromSubtree(
            request,
            segment,
            collectedPreambleSegments
          );
        case 5:
          if (null !== request.trackedPostpones) return true;
        case 4:
          if (1 === segment.status)
            return hoistPreambleState(request.renderState, fallbackPreamble), preparePreambleFromSubtree(
              request,
              segment,
              collectedPreambleSegments
            );
        default:
          return true;
      }
    }
    function preparePreamble(request) {
      if (request.completedRootSegment && null === request.completedPreambleSegments) {
        var collectedPreambleSegments = [], hasPendingPreambles = preparePreambleFromSegment(
          request,
          request.completedRootSegment,
          collectedPreambleSegments
        ), preamble = request.renderState.preamble;
        if (false === hasPendingPreambles || preamble.headChunks && preamble.bodyChunks)
          request.completedPreambleSegments = collectedPreambleSegments;
      }
    }
    function flushSubtree(request, destination, segment, hoistableState) {
      segment.parentFlushed = true;
      switch (segment.status) {
        case 0:
          segment.id = request.nextSegmentId++;
        case 5:
          return hoistableState = segment.id, segment.lastPushedText = false, segment.textEmbedded = false, request = request.renderState, writeChunk(destination, placeholder1), writeChunk(destination, request.placeholderPrefix), request = stringToChunk(hoistableState.toString(16)), writeChunk(destination, request), writeChunkAndReturn(destination, placeholder2);
        case 1:
          segment.status = 2;
          var r8 = true, chunks = segment.chunks, chunkIdx = 0;
          segment = segment.children;
          for (var childIdx = 0; childIdx < segment.length; childIdx++) {
            for (r8 = segment[childIdx]; chunkIdx < r8.index; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            r8 = flushSegment(request, destination, r8, hoistableState);
          }
          for (; chunkIdx < chunks.length - 1; chunkIdx++)
            writeChunk(destination, chunks[chunkIdx]);
          chunkIdx < chunks.length && (r8 = writeChunkAndReturn(destination, chunks[chunkIdx]));
          return r8;
        default:
          throw Error(
            "Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React."
          );
      }
    }
    function flushSegment(request, destination, segment, hoistableState) {
      var boundary = segment.boundary;
      if (null === boundary)
        return flushSubtree(request, destination, segment, hoistableState);
      boundary.parentFlushed = true;
      if (4 === boundary.status) {
        var errorDigest = boundary.errorDigest;
        writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
        writeChunk(destination, clientRenderedSuspenseBoundaryError1);
        errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))), writeChunk(
          destination,
          clientRenderedSuspenseBoundaryErrorAttrInterstitial
        ));
        writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
        flushSubtree(request, destination, segment, hoistableState);
        (request = boundary.fallbackPreamble) && writePreambleContribution(destination, request);
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      if (1 !== boundary.status)
        return 0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++), 0 < boundary.completedSegments.length && request.partialBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), hoistableState && (boundary = boundary.fallbackState, boundary.styles.forEach(hoistStyleQueueDependency, hoistableState), boundary.stylesheets.forEach(
          hoistStylesheetDependency,
          hoistableState
        )), flushSubtree(request, destination, segment, hoistableState), writeChunkAndReturn(destination, endSuspenseBoundary);
      if (boundary.byteSize > request.progressiveChunkSize)
        return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), flushSubtree(request, destination, segment, hoistableState), writeChunkAndReturn(destination, endSuspenseBoundary);
      hoistableState && (segment = boundary.contentState, segment.styles.forEach(hoistStyleQueueDependency, hoistableState), segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
      writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      segment = boundary.completedSegments;
      if (1 !== segment.length)
        throw Error(
          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
        );
      flushSegment(request, destination, segment[0], hoistableState);
      (request = boundary.contentPreamble) && writePreambleContribution(destination, request);
      return writeChunkAndReturn(destination, endSuspenseBoundary);
    }
    function flushSegmentContainer(request, destination, segment, hoistableState) {
      writeStartSegment(
        destination,
        request.renderState,
        segment.parentFormatContext,
        segment.id
      );
      flushSegment(request, destination, segment, hoistableState);
      return writeEndSegment(destination, segment.parentFormatContext);
    }
    function flushCompletedBoundary(request, destination, boundary) {
      for (var completedSegments = boundary.completedSegments, i11 = 0; i11 < completedSegments.length; i11++)
        flushPartiallyCompletedSegment(
          request,
          destination,
          boundary,
          completedSegments[i11]
        );
      completedSegments.length = 0;
      writeHoistablesForBoundary(
        destination,
        boundary.contentState,
        request.renderState
      );
      completedSegments = request.resumableState;
      request = request.renderState;
      i11 = boundary.rootSegmentID;
      boundary = boundary.contentState;
      var requiresStyleInsertion = request.stylesToHoist;
      request.stylesToHoist = false;
      writeChunk(destination, request.startInlineScript);
      requiresStyleInsertion ? 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 10, writeChunk(destination, completeBoundaryWithStylesScript1FullBoth)) : 0 === (completedSegments.instructions & 8) ? (completedSegments.instructions |= 8, writeChunk(destination, completeBoundaryWithStylesScript1FullPartial)) : writeChunk(destination, completeBoundaryWithStylesScript1Partial) : 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 2, writeChunk(destination, completeBoundaryScript1Full)) : writeChunk(destination, completeBoundaryScript1Partial);
      completedSegments = stringToChunk(i11.toString(16));
      writeChunk(destination, request.boundaryPrefix);
      writeChunk(destination, completedSegments);
      writeChunk(destination, completeBoundaryScript2);
      writeChunk(destination, request.segmentPrefix);
      writeChunk(destination, completedSegments);
      requiresStyleInsertion ? (writeChunk(destination, completeBoundaryScript3a), writeStyleResourceDependenciesInJS(destination, boundary)) : writeChunk(destination, completeBoundaryScript3b);
      boundary = writeChunkAndReturn(destination, completeBoundaryScriptEnd);
      return writeBootstrap(destination, request) && boundary;
    }
    function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
      if (2 === segment.status) return true;
      var hoistableState = boundary.contentState, segmentID = segment.id;
      if (-1 === segmentID) {
        if (-1 === (segment.id = boundary.rootSegmentID))
          throw Error(
            "A root segment ID must have been assigned by now. This is a bug in React."
          );
        return flushSegmentContainer(request, destination, segment, hoistableState);
      }
      if (segmentID === boundary.rootSegmentID)
        return flushSegmentContainer(request, destination, segment, hoistableState);
      flushSegmentContainer(request, destination, segment, hoistableState);
      boundary = request.resumableState;
      request = request.renderState;
      writeChunk(destination, request.startInlineScript);
      0 === (boundary.instructions & 1) ? (boundary.instructions |= 1, writeChunk(destination, completeSegmentScript1Full)) : writeChunk(destination, completeSegmentScript1Partial);
      writeChunk(destination, request.segmentPrefix);
      segmentID = stringToChunk(segmentID.toString(16));
      writeChunk(destination, segmentID);
      writeChunk(destination, completeSegmentScript2);
      writeChunk(destination, request.placeholderPrefix);
      writeChunk(destination, segmentID);
      destination = writeChunkAndReturn(destination, completeSegmentScriptEnd);
      return destination;
    }
    function flushCompletedQueues(request, destination) {
      currentView = new Uint8Array(2048);
      writtenBytes = 0;
      try {
        if (!(0 < request.pendingRootTasks)) {
          var i11, completedRootSegment = request.completedRootSegment;
          if (null !== completedRootSegment) {
            if (5 === completedRootSegment.status) return;
            var completedPreambleSegments = request.completedPreambleSegments;
            if (null === completedPreambleSegments) return;
            var renderState = request.renderState, preamble = renderState.preamble, htmlChunks = preamble.htmlChunks, headChunks = preamble.headChunks, i$jscomp$0;
            if (htmlChunks) {
              for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
                writeChunk(destination, htmlChunks[i$jscomp$0]);
              if (headChunks)
                for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                  writeChunk(destination, headChunks[i$jscomp$0]);
              else
                writeChunk(destination, startChunkForTag("head")), writeChunk(destination, endOfStartTag);
            } else if (headChunks)
              for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                writeChunk(destination, headChunks[i$jscomp$0]);
            var charsetChunks = renderState.charsetChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)
              writeChunk(destination, charsetChunks[i$jscomp$0]);
            charsetChunks.length = 0;
            renderState.preconnects.forEach(flushResource, destination);
            renderState.preconnects.clear();
            var viewportChunks = renderState.viewportChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)
              writeChunk(destination, viewportChunks[i$jscomp$0]);
            viewportChunks.length = 0;
            renderState.fontPreloads.forEach(flushResource, destination);
            renderState.fontPreloads.clear();
            renderState.highImagePreloads.forEach(flushResource, destination);
            renderState.highImagePreloads.clear();
            renderState.styles.forEach(flushStylesInPreamble, destination);
            var importMapChunks = renderState.importMapChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)
              writeChunk(destination, importMapChunks[i$jscomp$0]);
            importMapChunks.length = 0;
            renderState.bootstrapScripts.forEach(flushResource, destination);
            renderState.scripts.forEach(flushResource, destination);
            renderState.scripts.clear();
            renderState.bulkPreloads.forEach(flushResource, destination);
            renderState.bulkPreloads.clear();
            var hoistableChunks = renderState.hoistableChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
              writeChunk(destination, hoistableChunks[i$jscomp$0]);
            for (renderState = hoistableChunks.length = 0; renderState < completedPreambleSegments.length; renderState++) {
              var segments = completedPreambleSegments[renderState];
              for (preamble = 0; preamble < segments.length; preamble++)
                flushSegment(request, destination, segments[preamble], null);
            }
            var preamble$jscomp$0 = request.renderState.preamble, headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
            (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) && writeChunk(destination, endChunkForTag("head"));
            var bodyChunks = preamble$jscomp$0.bodyChunks;
            if (bodyChunks)
              for (completedPreambleSegments = 0; completedPreambleSegments < bodyChunks.length; completedPreambleSegments++)
                writeChunk(destination, bodyChunks[completedPreambleSegments]);
            flushSegment(request, destination, completedRootSegment, null);
            request.completedRootSegment = null;
            writeBootstrap(destination, request.renderState);
          }
          var renderState$jscomp$0 = request.renderState;
          completedRootSegment = 0;
          var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;
          for (completedRootSegment = 0; completedRootSegment < viewportChunks$jscomp$0.length; completedRootSegment++)
            writeChunk(destination, viewportChunks$jscomp$0[completedRootSegment]);
          viewportChunks$jscomp$0.length = 0;
          renderState$jscomp$0.preconnects.forEach(flushResource, destination);
          renderState$jscomp$0.preconnects.clear();
          renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.fontPreloads.clear();
          renderState$jscomp$0.highImagePreloads.forEach(
            flushResource,
            destination
          );
          renderState$jscomp$0.highImagePreloads.clear();
          renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);
          renderState$jscomp$0.scripts.forEach(flushResource, destination);
          renderState$jscomp$0.scripts.clear();
          renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.bulkPreloads.clear();
          var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;
          for (completedRootSegment = 0; completedRootSegment < hoistableChunks$jscomp$0.length; completedRootSegment++)
            writeChunk(destination, hoistableChunks$jscomp$0[completedRootSegment]);
          hoistableChunks$jscomp$0.length = 0;
          var clientRenderedBoundaries = request.clientRenderedBoundaries;
          for (i11 = 0; i11 < clientRenderedBoundaries.length; i11++) {
            var boundary = clientRenderedBoundaries[i11];
            renderState$jscomp$0 = destination;
            var resumableState = request.resumableState, renderState$jscomp$1 = request.renderState, id5 = boundary.rootSegmentID, errorDigest = boundary.errorDigest;
            writeChunk(
              renderState$jscomp$0,
              renderState$jscomp$1.startInlineScript
            );
            0 === (resumableState.instructions & 4) ? (resumableState.instructions |= 4, writeChunk(renderState$jscomp$0, clientRenderScript1Full)) : writeChunk(renderState$jscomp$0, clientRenderScript1Partial);
            writeChunk(renderState$jscomp$0, renderState$jscomp$1.boundaryPrefix);
            writeChunk(renderState$jscomp$0, stringToChunk(id5.toString(16)));
            writeChunk(renderState$jscomp$0, clientRenderScript1A);
            errorDigest && (writeChunk(
              renderState$jscomp$0,
              clientRenderErrorScriptArgInterstitial
            ), writeChunk(
              renderState$jscomp$0,
              stringToChunk(
                escapeJSStringsForInstructionScripts(errorDigest || "")
              )
            ));
            var JSCompiler_inline_result = writeChunkAndReturn(
              renderState$jscomp$0,
              clientRenderScriptEnd
            );
            if (!JSCompiler_inline_result) {
              request.destination = null;
              i11++;
              clientRenderedBoundaries.splice(0, i11);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i11);
          var completedBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < completedBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, completedBoundaries[i11])) {
              request.destination = null;
              i11++;
              completedBoundaries.splice(0, i11);
              return;
            }
          completedBoundaries.splice(0, i11);
          completeWriting(destination);
          currentView = new Uint8Array(2048);
          writtenBytes = 0;
          var partialBoundaries = request.partialBoundaries;
          for (i11 = 0; i11 < partialBoundaries.length; i11++) {
            var boundary$51 = partialBoundaries[i11];
            a: {
              clientRenderedBoundaries = request;
              boundary = destination;
              var completedSegments = boundary$51.completedSegments;
              for (JSCompiler_inline_result = 0; JSCompiler_inline_result < completedSegments.length; JSCompiler_inline_result++)
                if (!flushPartiallyCompletedSegment(
                  clientRenderedBoundaries,
                  boundary,
                  boundary$51,
                  completedSegments[JSCompiler_inline_result]
                )) {
                  JSCompiler_inline_result++;
                  completedSegments.splice(0, JSCompiler_inline_result);
                  var JSCompiler_inline_result$jscomp$0 = false;
                  break a;
                }
              completedSegments.splice(0, JSCompiler_inline_result);
              JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(
                boundary,
                boundary$51.contentState,
                clientRenderedBoundaries.renderState
              );
            }
            if (!JSCompiler_inline_result$jscomp$0) {
              request.destination = null;
              i11++;
              partialBoundaries.splice(0, i11);
              return;
            }
          }
          partialBoundaries.splice(0, i11);
          var largeBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < largeBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, largeBoundaries[i11])) {
              request.destination = null;
              i11++;
              largeBoundaries.splice(0, i11);
              return;
            }
          largeBoundaries.splice(0, i11);
        }
      } finally {
        0 === request.allPendingTasks && 0 === request.pingedTasks.length && 0 === request.clientRenderedBoundaries.length && 0 === request.completedBoundaries.length ? (request.flushScheduled = false, i11 = request.resumableState, i11.hasBody && writeChunk(destination, endChunkForTag("body")), i11.hasHtml && writeChunk(destination, endChunkForTag("html")), completeWriting(destination), request.status = 14, destination.close(), request.destination = null) : completeWriting(destination);
      }
    }
    function startWork(request) {
      request.flushScheduled = null !== request.destination;
      supportsRequestStorage ? scheduleMicrotask(function() {
        return requestStorage.run(request, performWork, request);
      }) : scheduleMicrotask(function() {
        return performWork(request);
      });
      setTimeout(function() {
        10 === request.status && (request.status = 11);
        null === request.trackedPostpones && (supportsRequestStorage ? requestStorage.run(
          request,
          enqueueEarlyPreloadsAfterInitialWork,
          request
        ) : enqueueEarlyPreloadsAfterInitialWork(request));
      }, 0);
    }
    function enqueueEarlyPreloadsAfterInitialWork(request) {
      safelyEmitEarlyPreloads(request, 0 === request.pendingRootTasks);
    }
    function enqueueFlush(request) {
      false === request.flushScheduled && 0 === request.pingedTasks.length && null !== request.destination && (request.flushScheduled = true, setTimeout(function() {
        var destination = request.destination;
        destination ? flushCompletedQueues(request, destination) : request.flushScheduled = false;
      }, 0));
    }
    function startFlowing(request, destination) {
      if (13 === request.status)
        request.status = 14, closeWithError(destination, request.fatalError);
      else if (14 !== request.status && null === request.destination) {
        request.destination = destination;
        try {
          flushCompletedQueues(request, destination);
        } catch (error) {
          logRecoverableError(request, error, {}), fatalError(request, error);
        }
      }
    }
    function abort(request, reason) {
      if (11 === request.status || 10 === request.status) request.status = 12;
      try {
        var abortableTasks = request.abortableTasks;
        if (0 < abortableTasks.size) {
          var error = void 0 === reason ? Error("The render was aborted by the server without a reason.") : "object" === typeof reason && null !== reason && "function" === typeof reason.then ? Error("The render was aborted by the server with a promise.") : reason;
          request.fatalError = error;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, error);
          });
          abortableTasks.clear();
        }
        null !== request.destination && flushCompletedQueues(request, request.destination);
      } catch (error$53) {
        logRecoverableError(request, error$53, {}), fatalError(request, error$53);
      }
    }
    function ensureCorrectIsomorphicReactVersion() {
      var isomorphicReactPackageVersion = React8.version;
      if ("19.1.0" !== isomorphicReactPackageVersion)
        throw Error(
          'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.1.0\nLearn more: https://react.dev/warnings/version-mismatch")
        );
    }
    ensureCorrectIsomorphicReactVersion();
    ensureCorrectIsomorphicReactVersion();
    exports.prerender = function(children, options) {
      return new Promise(function(resolve, reject) {
        var onHeaders = options ? options.onHeaders : void 0, onHeadersImpl;
        onHeaders && (onHeadersImpl = function(headersDescriptor) {
          onHeaders(new Headers(headersDescriptor));
        });
        var resources = createResumableState(
          options ? options.identifierPrefix : void 0,
          options ? options.unstable_externalRuntimeSrc : void 0,
          options ? options.bootstrapScriptContent : void 0,
          options ? options.bootstrapScripts : void 0,
          options ? options.bootstrapModules : void 0
        ), request = createPrerenderRequest(
          children,
          resources,
          createRenderState(
            resources,
            void 0,
            options ? options.unstable_externalRuntimeSrc : void 0,
            options ? options.importMap : void 0,
            onHeadersImpl,
            options ? options.maxHeadersLength : void 0
          ),
          createRootFormatContext(options ? options.namespaceURI : void 0),
          options ? options.progressiveChunkSize : void 0,
          options ? options.onError : void 0,
          function() {
            var result = {
              prelude: new ReadableStream(
                {
                  type: "bytes",
                  pull: function(controller) {
                    startFlowing(request, controller);
                  },
                  cancel: function(reason) {
                    request.destination = null;
                    abort(request, reason);
                  }
                },
                { highWaterMark: 0 }
              )
            };
            resolve(result);
          },
          void 0,
          void 0,
          reject,
          options ? options.onPostpone : void 0
        );
        if (options && options.signal) {
          var signal = options.signal;
          if (signal.aborted) abort(request, signal.reason);
          else {
            var listener = function() {
              abort(request, signal.reason);
              signal.removeEventListener("abort", listener);
            };
            signal.addEventListener("abort", listener);
          }
        }
        startWork(request);
      });
    };
    exports.renderToReadableStream = function(children, options) {
      return new Promise(function(resolve, reject) {
        var onFatalError, onAllReady, allReady = new Promise(function(res, rej) {
          onAllReady = res;
          onFatalError = rej;
        }), onHeaders = options ? options.onHeaders : void 0, onHeadersImpl;
        onHeaders && (onHeadersImpl = function(headersDescriptor) {
          onHeaders(new Headers(headersDescriptor));
        });
        var resumableState = createResumableState(
          options ? options.identifierPrefix : void 0,
          options ? options.unstable_externalRuntimeSrc : void 0,
          options ? options.bootstrapScriptContent : void 0,
          options ? options.bootstrapScripts : void 0,
          options ? options.bootstrapModules : void 0
        ), request = createRequest(
          children,
          resumableState,
          createRenderState(
            resumableState,
            options ? options.nonce : void 0,
            options ? options.unstable_externalRuntimeSrc : void 0,
            options ? options.importMap : void 0,
            onHeadersImpl,
            options ? options.maxHeadersLength : void 0
          ),
          createRootFormatContext(options ? options.namespaceURI : void 0),
          options ? options.progressiveChunkSize : void 0,
          options ? options.onError : void 0,
          onAllReady,
          function() {
            var stream = new ReadableStream(
              {
                type: "bytes",
                pull: function(controller) {
                  startFlowing(request, controller);
                },
                cancel: function(reason) {
                  request.destination = null;
                  abort(request, reason);
                }
              },
              { highWaterMark: 0 }
            );
            stream.allReady = allReady;
            resolve(stream);
          },
          function(error) {
            allReady.catch(function() {
            });
            reject(error);
          },
          onFatalError,
          options ? options.onPostpone : void 0,
          options ? options.formState : void 0
        );
        if (options && options.signal) {
          var signal = options.signal;
          if (signal.aborted) abort(request, signal.reason);
          else {
            var listener = function() {
              abort(request, signal.reason);
              signal.removeEventListener("abort", listener);
            };
            signal.addEventListener("abort", listener);
          }
        }
        startWork(request);
      });
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
var require_react_dom_server_legacy_browser_production = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    var ReactDOM2 = require_react_dom();
    function formatProdErrorMessage(code) {
      var url = "https://react.dev/errors/" + code;
      if (1 < arguments.length) {
        url += "?args[]=" + encodeURIComponent(arguments[1]);
        for (var i11 = 2; i11 < arguments.length; i11++)
          url += "&args[]=" + encodeURIComponent(arguments[i11]);
      }
      return "Minified React error #" + code + "; visit " + url + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    var REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var isArrayImpl = Array.isArray;
    function murmurhash3_32_gc(key, seed) {
      var remainder = key.length & 3;
      var bytes = key.length - remainder;
      var h1 = seed;
      for (seed = 0; seed < bytes; ) {
        var k1 = key.charCodeAt(seed) & 255 | (key.charCodeAt(++seed) & 255) << 8 | (key.charCodeAt(++seed) & 255) << 16 | (key.charCodeAt(++seed) & 255) << 24;
        ++seed;
        k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        k1 = k1 << 15 | k1 >>> 17;
        k1 = 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
        h1 ^= k1;
        h1 = h1 << 13 | h1 >>> 19;
        h1 = 5 * (h1 & 65535) + ((5 * (h1 >>> 16) & 65535) << 16) & 4294967295;
        h1 = (h1 & 65535) + 27492 + (((h1 >>> 16) + 58964 & 65535) << 16);
      }
      k1 = 0;
      switch (remainder) {
        case 3:
          k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;
        case 2:
          k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;
        case 1:
          k1 ^= key.charCodeAt(seed) & 255, k1 = 3432918353 * (k1 & 65535) + ((3432918353 * (k1 >>> 16) & 65535) << 16) & 4294967295, k1 = k1 << 15 | k1 >>> 17, h1 ^= 461845907 * (k1 & 65535) + ((461845907 * (k1 >>> 16) & 65535) << 16) & 4294967295;
      }
      h1 ^= key.length;
      h1 ^= h1 >>> 16;
      h1 = 2246822507 * (h1 & 65535) + ((2246822507 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      h1 ^= h1 >>> 13;
      h1 = 3266489909 * (h1 & 65535) + ((3266489909 * (h1 >>> 16) & 65535) << 16) & 4294967295;
      return (h1 ^ h1 >>> 16) >>> 0;
    }
    var assign = Object.assign;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var VALID_ATTRIBUTE_NAME_REGEX = RegExp(
      "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
    );
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty2.call(validatedAttributeNameCache, attributeName))
        return true;
      if (hasOwnProperty2.call(illegalAttributeNameCache, attributeName)) return false;
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
        return validatedAttributeNameCache[attributeName] = true;
      illegalAttributeNameCache[attributeName] = true;
      return false;
    }
    var unitlessNumbers = new Set(
      "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
        " "
      )
    );
    var aliases = /* @__PURE__ */ new Map([
      ["acceptCharset", "accept-charset"],
      ["htmlFor", "for"],
      ["httpEquiv", "http-equiv"],
      ["crossOrigin", "crossorigin"],
      ["accentHeight", "accent-height"],
      ["alignmentBaseline", "alignment-baseline"],
      ["arabicForm", "arabic-form"],
      ["baselineShift", "baseline-shift"],
      ["capHeight", "cap-height"],
      ["clipPath", "clip-path"],
      ["clipRule", "clip-rule"],
      ["colorInterpolation", "color-interpolation"],
      ["colorInterpolationFilters", "color-interpolation-filters"],
      ["colorProfile", "color-profile"],
      ["colorRendering", "color-rendering"],
      ["dominantBaseline", "dominant-baseline"],
      ["enableBackground", "enable-background"],
      ["fillOpacity", "fill-opacity"],
      ["fillRule", "fill-rule"],
      ["floodColor", "flood-color"],
      ["floodOpacity", "flood-opacity"],
      ["fontFamily", "font-family"],
      ["fontSize", "font-size"],
      ["fontSizeAdjust", "font-size-adjust"],
      ["fontStretch", "font-stretch"],
      ["fontStyle", "font-style"],
      ["fontVariant", "font-variant"],
      ["fontWeight", "font-weight"],
      ["glyphName", "glyph-name"],
      ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
      ["glyphOrientationVertical", "glyph-orientation-vertical"],
      ["horizAdvX", "horiz-adv-x"],
      ["horizOriginX", "horiz-origin-x"],
      ["imageRendering", "image-rendering"],
      ["letterSpacing", "letter-spacing"],
      ["lightingColor", "lighting-color"],
      ["markerEnd", "marker-end"],
      ["markerMid", "marker-mid"],
      ["markerStart", "marker-start"],
      ["overlinePosition", "overline-position"],
      ["overlineThickness", "overline-thickness"],
      ["paintOrder", "paint-order"],
      ["panose-1", "panose-1"],
      ["pointerEvents", "pointer-events"],
      ["renderingIntent", "rendering-intent"],
      ["shapeRendering", "shape-rendering"],
      ["stopColor", "stop-color"],
      ["stopOpacity", "stop-opacity"],
      ["strikethroughPosition", "strikethrough-position"],
      ["strikethroughThickness", "strikethrough-thickness"],
      ["strokeDasharray", "stroke-dasharray"],
      ["strokeDashoffset", "stroke-dashoffset"],
      ["strokeLinecap", "stroke-linecap"],
      ["strokeLinejoin", "stroke-linejoin"],
      ["strokeMiterlimit", "stroke-miterlimit"],
      ["strokeOpacity", "stroke-opacity"],
      ["strokeWidth", "stroke-width"],
      ["textAnchor", "text-anchor"],
      ["textDecoration", "text-decoration"],
      ["textRendering", "text-rendering"],
      ["transformOrigin", "transform-origin"],
      ["underlinePosition", "underline-position"],
      ["underlineThickness", "underline-thickness"],
      ["unicodeBidi", "unicode-bidi"],
      ["unicodeRange", "unicode-range"],
      ["unitsPerEm", "units-per-em"],
      ["vAlphabetic", "v-alphabetic"],
      ["vHanging", "v-hanging"],
      ["vIdeographic", "v-ideographic"],
      ["vMathematical", "v-mathematical"],
      ["vectorEffect", "vector-effect"],
      ["vertAdvY", "vert-adv-y"],
      ["vertOriginX", "vert-origin-x"],
      ["vertOriginY", "vert-origin-y"],
      ["wordSpacing", "word-spacing"],
      ["writingMode", "writing-mode"],
      ["xmlnsXlink", "xmlns:xlink"],
      ["xHeight", "x-height"]
    ]);
    var matchHtmlRegExp = /["'&<>]/;
    function escapeTextForBrowser(text3) {
      if ("boolean" === typeof text3 || "number" === typeof text3 || "bigint" === typeof text3)
        return "" + text3;
      text3 = "" + text3;
      var match = matchHtmlRegExp.exec(text3);
      if (match) {
        var html = "", index, lastIndex = 0;
        for (index = match.index; index < text3.length; index++) {
          switch (text3.charCodeAt(index)) {
            case 34:
              match = "&quot;";
              break;
            case 38:
              match = "&amp;";
              break;
            case 39:
              match = "&#x27;";
              break;
            case 60:
              match = "&lt;";
              break;
            case 62:
              match = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index && (html += text3.slice(lastIndex, index));
          lastIndex = index + 1;
          html += match;
        }
        text3 = lastIndex !== index ? html + text3.slice(lastIndex, index) : html;
      }
      return text3;
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
    function sanitizeURL(url) {
      return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    var ReactSharedInternals = React8.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var ReactDOMSharedInternals = ReactDOM2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    var sharedNotPendingObject = {
      pending: false,
      data: null,
      method: null,
      action: null
    };
    var previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
      f: previousDispatcher.f,
      r: previousDispatcher.r,
      D: prefetchDNS,
      C: preconnect,
      L: preload,
      m: preloadModule,
      X: preinitScript,
      S: preinitStyle,
      M: preinitModuleScript
    };
    var PRELOAD_NO_CREDS = [];
    var scriptRegex = /(<\/|<)(s)(cript)/gi;
    function scriptReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\u0073" : "\\u0053") + suffix2;
    }
    function createResumableState(identifierPrefix, externalRuntimeConfig, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
      return {
        idPrefix: void 0 === identifierPrefix ? "" : identifierPrefix,
        nextFormID: 0,
        streamingFormat: 0,
        bootstrapScriptContent,
        bootstrapScripts,
        bootstrapModules,
        instructions: 0,
        hasBody: false,
        hasHtml: false,
        unknownResources: {},
        dnsResources: {},
        connectResources: { default: {}, anonymous: {}, credentials: {} },
        imageResources: {},
        styleResources: {},
        scriptResources: {},
        moduleUnknownResources: {},
        moduleScriptResources: {}
      };
    }
    function createPreambleState() {
      return {
        htmlChunks: null,
        headChunks: null,
        bodyChunks: null,
        contribution: 0
      };
    }
    function createFormatContext(insertionMode, selectedValue, tagScope) {
      return {
        insertionMode,
        selectedValue,
        tagScope
      };
    }
    function getChildFormatContext(parentContext, type, props) {
      switch (type) {
        case "noscript":
          return createFormatContext(2, null, parentContext.tagScope | 1);
        case "select":
          return createFormatContext(
            2,
            null != props.value ? props.value : props.defaultValue,
            parentContext.tagScope
          );
        case "svg":
          return createFormatContext(4, null, parentContext.tagScope);
        case "picture":
          return createFormatContext(2, null, parentContext.tagScope | 2);
        case "math":
          return createFormatContext(5, null, parentContext.tagScope);
        case "foreignObject":
          return createFormatContext(2, null, parentContext.tagScope);
        case "table":
          return createFormatContext(6, null, parentContext.tagScope);
        case "thead":
        case "tbody":
        case "tfoot":
          return createFormatContext(7, null, parentContext.tagScope);
        case "colgroup":
          return createFormatContext(9, null, parentContext.tagScope);
        case "tr":
          return createFormatContext(8, null, parentContext.tagScope);
        case "head":
          if (2 > parentContext.insertionMode)
            return createFormatContext(3, null, parentContext.tagScope);
          break;
        case "html":
          if (0 === parentContext.insertionMode)
            return createFormatContext(1, null, parentContext.tagScope);
      }
      return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode ? createFormatContext(2, null, parentContext.tagScope) : parentContext;
    }
    var styleNameCache = /* @__PURE__ */ new Map();
    function pushStyleAttribute(target, style) {
      if ("object" !== typeof style) throw Error(formatProdErrorMessage(62));
      var isFirst = true, styleName;
      for (styleName in style)
        if (hasOwnProperty2.call(style, styleName)) {
          var styleValue = style[styleName];
          if (null != styleValue && "boolean" !== typeof styleValue && "" !== styleValue) {
            if (0 === styleName.indexOf("--")) {
              var nameChunk = escapeTextForBrowser(styleName);
              styleValue = escapeTextForBrowser(("" + styleValue).trim());
            } else
              nameChunk = styleNameCache.get(styleName), void 0 === nameChunk && (nameChunk = escapeTextForBrowser(
                styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-")
              ), styleNameCache.set(styleName, nameChunk)), styleValue = "number" === typeof styleValue ? 0 === styleValue || unitlessNumbers.has(styleName) ? "" + styleValue : styleValue + "px" : escapeTextForBrowser(("" + styleValue).trim());
            isFirst ? (isFirst = false, target.push(' style="', nameChunk, ":", styleValue)) : target.push(";", nameChunk, ":", styleValue);
          }
        }
      isFirst || target.push('"');
    }
    function pushBooleanAttribute(target, name2, value) {
      value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '=""');
    }
    function pushStringAttribute(target, name2, value) {
      "function" !== typeof value && "symbol" !== typeof value && "boolean" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
    }
    var actionJavaScriptURL = escapeTextForBrowser(
      "javascript:throw new Error('React form unexpectedly submitted.')"
    );
    function pushAdditionalFormField(value, key) {
      this.push('<input type="hidden"');
      validateAdditionalFormField(value);
      pushStringAttribute(this, "name", key);
      pushStringAttribute(this, "value", value);
      this.push("/>");
    }
    function validateAdditionalFormField(value) {
      if ("string" !== typeof value) throw Error(formatProdErrorMessage(480));
    }
    function getCustomFormFields(resumableState, formAction) {
      if ("function" === typeof formAction.$$FORM_ACTION) {
        var id5 = resumableState.nextFormID++;
        resumableState = resumableState.idPrefix + id5;
        try {
          var customFields = formAction.$$FORM_ACTION(resumableState);
          if (customFields) {
            var formData = customFields.data;
            null != formData && formData.forEach(validateAdditionalFormField);
          }
          return customFields;
        } catch (x3) {
          if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then)
            throw x3;
        }
      }
      return null;
    }
    function pushFormActionAttribute(target, resumableState, renderState, formAction, formEncType, formMethod, formTarget, name2) {
      var formData = null;
      if ("function" === typeof formAction) {
        var customFields = getCustomFormFields(resumableState, formAction);
        null !== customFields ? (name2 = customFields.name, formAction = customFields.action || "", formEncType = customFields.encType, formMethod = customFields.method, formTarget = customFields.target, formData = customFields.data) : (target.push(" ", "formAction", '="', actionJavaScriptURL, '"'), formTarget = formMethod = formEncType = formAction = name2 = null, injectFormReplayingRuntime(resumableState, renderState));
      }
      null != name2 && pushAttribute(target, "name", name2);
      null != formAction && pushAttribute(target, "formAction", formAction);
      null != formEncType && pushAttribute(target, "formEncType", formEncType);
      null != formMethod && pushAttribute(target, "formMethod", formMethod);
      null != formTarget && pushAttribute(target, "formTarget", formTarget);
      return formData;
    }
    function pushAttribute(target, name2, value) {
      switch (name2) {
        case "className":
          pushStringAttribute(target, "class", value);
          break;
        case "tabIndex":
          pushStringAttribute(target, "tabindex", value);
          break;
        case "dir":
        case "role":
        case "viewBox":
        case "width":
        case "height":
          pushStringAttribute(target, name2, value);
          break;
        case "style":
          pushStyleAttribute(target, value);
          break;
        case "src":
        case "href":
          if ("" === value) break;
        case "action":
        case "formAction":
          if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "ref":
          break;
        case "autoFocus":
        case "multiple":
        case "muted":
          pushBooleanAttribute(target, name2.toLowerCase(), value);
          break;
        case "xlinkHref":
          if ("function" === typeof value || "symbol" === typeof value || "boolean" === typeof value)
            break;
          value = sanitizeURL("" + value);
          target.push(" ", "xlink:href", '="', escapeTextForBrowser(value), '"');
          break;
        case "contentEditable":
        case "spellCheck":
        case "draggable":
        case "value":
        case "autoReverse":
        case "externalResourcesRequired":
        case "focusable":
        case "preserveAlpha":
          "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "inert":
        case "allowFullScreen":
        case "async":
        case "autoPlay":
        case "controls":
        case "default":
        case "defer":
        case "disabled":
        case "disablePictureInPicture":
        case "disableRemotePlayback":
        case "formNoValidate":
        case "hidden":
        case "loop":
        case "noModule":
        case "noValidate":
        case "open":
        case "playsInline":
        case "readOnly":
        case "required":
        case "reversed":
        case "scoped":
        case "seamless":
        case "itemScope":
          value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '=""');
          break;
        case "capture":
        case "download":
          true === value ? target.push(" ", name2, '=""') : false !== value && "function" !== typeof value && "symbol" !== typeof value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "cols":
        case "rows":
        case "size":
        case "span":
          "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value && target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "rowSpan":
        case "start":
          "function" === typeof value || "symbol" === typeof value || isNaN(value) || target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
          break;
        case "xlinkActuate":
          pushStringAttribute(target, "xlink:actuate", value);
          break;
        case "xlinkArcrole":
          pushStringAttribute(target, "xlink:arcrole", value);
          break;
        case "xlinkRole":
          pushStringAttribute(target, "xlink:role", value);
          break;
        case "xlinkShow":
          pushStringAttribute(target, "xlink:show", value);
          break;
        case "xlinkTitle":
          pushStringAttribute(target, "xlink:title", value);
          break;
        case "xlinkType":
          pushStringAttribute(target, "xlink:type", value);
          break;
        case "xmlBase":
          pushStringAttribute(target, "xml:base", value);
          break;
        case "xmlLang":
          pushStringAttribute(target, "xml:lang", value);
          break;
        case "xmlSpace":
          pushStringAttribute(target, "xml:space", value);
          break;
        default:
          if (!(2 < name2.length) || "o" !== name2[0] && "O" !== name2[0] || "n" !== name2[1] && "N" !== name2[1]) {
            if (name2 = aliases.get(name2) || name2, isAttributeNameSafe(name2)) {
              switch (typeof value) {
                case "function":
                case "symbol":
                  return;
                case "boolean":
                  var prefix$8 = name2.toLowerCase().slice(0, 5);
                  if ("data-" !== prefix$8 && "aria-" !== prefix$8) return;
              }
              target.push(" ", name2, '="', escapeTextForBrowser(value), '"');
            }
          }
      }
    }
    function pushInnerHTML(target, innerHTML, children) {
      if (null != innerHTML) {
        if (null != children) throw Error(formatProdErrorMessage(60));
        if ("object" !== typeof innerHTML || !("__html" in innerHTML))
          throw Error(formatProdErrorMessage(61));
        innerHTML = innerHTML.__html;
        null !== innerHTML && void 0 !== innerHTML && target.push("" + innerHTML);
      }
    }
    function flattenOptionChildren(children) {
      var content4 = "";
      React8.Children.forEach(children, function(child) {
        null != child && (content4 += child);
      });
      return content4;
    }
    function injectFormReplayingRuntime(resumableState, renderState) {
      0 === (resumableState.instructions & 16) && (resumableState.instructions |= 16, renderState.bootstrapChunks.unshift(
        renderState.startInlineScript,
        `addEventListener("submit",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute("formAction");null!=f&&(e=f,b=null)}"javascript:throw new Error('React form unexpectedly submitted.')"===e&&(a.preventDefault(),b?(a=document.createElement("input"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});`,
        "</script>"
      ));
    }
    function pushLinkImpl(target, props) {
      target.push(startChunkForTag("link"));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(formatProdErrorMessage(399, "link"));
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push("/>");
      return null;
    }
    var styleRegex = /(<\/|<)(s)(tyle)/gi;
    function styleReplacer(match, prefix3, s37, suffix2) {
      return "" + prefix3 + ("s" === s37 ? "\\73 " : "\\53 ") + suffix2;
    }
    function pushSelfClosing(target, props, tag) {
      target.push(startChunkForTag(tag));
      for (var propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw Error(formatProdErrorMessage(399, tag));
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push("/>");
      return null;
    }
    function pushTitleImpl(target, props) {
      target.push(startChunkForTag("title"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      props = Array.isArray(children) ? 2 > children.length ? children[0] : null : children;
      "function" !== typeof props && "symbol" !== typeof props && null !== props && void 0 !== props && target.push(escapeTextForBrowser("" + props));
      pushInnerHTML(target, innerHTML, children);
      target.push(endChunkForTag("title"));
      return null;
    }
    function pushScriptImpl(target, props) {
      target.push(startChunkForTag("script"));
      var children = null, innerHTML = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, children);
      "string" === typeof children && target.push(("" + children).replace(scriptRegex, scriptReplacer));
      target.push(endChunkForTag("script"));
      return null;
    }
    function pushStartSingletonElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, tag);
      return tag;
    }
    function pushStartGenericElement(target, props, tag) {
      target.push(startChunkForTag(tag));
      var innerHTML = tag = null, propKey;
      for (propKey in props)
        if (hasOwnProperty2.call(props, propKey)) {
          var propValue = props[propKey];
          if (null != propValue)
            switch (propKey) {
              case "children":
                tag = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, propKey, propValue);
            }
        }
      target.push(">");
      pushInnerHTML(target, innerHTML, tag);
      return "string" === typeof tag ? (target.push(escapeTextForBrowser(tag)), null) : tag;
    }
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = /* @__PURE__ */ new Map();
    function startChunkForTag(tag) {
      var tagStartChunk = validatedTagCache.get(tag);
      if (void 0 === tagStartChunk) {
        if (!VALID_TAG_REGEX.test(tag))
          throw Error(formatProdErrorMessage(65, tag));
        tagStartChunk = "<" + tag;
        validatedTagCache.set(tag, tagStartChunk);
      }
      return tagStartChunk;
    }
    function pushStartInstance(target$jscomp$0, type, props, resumableState, renderState, preambleState, hoistableState, formatContext, textEmbedded, isFallback) {
      switch (type) {
        case "div":
        case "span":
        case "svg":
        case "path":
          break;
        case "a":
          target$jscomp$0.push(startChunkForTag("a"));
          var children = null, innerHTML = null, propKey;
          for (propKey in props)
            if (hasOwnProperty2.call(props, propKey)) {
              var propValue = props[propKey];
              if (null != propValue)
                switch (propKey) {
                  case "children":
                    children = propValue;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML = propValue;
                    break;
                  case "href":
                    "" === propValue ? pushStringAttribute(target$jscomp$0, "href", "") : pushAttribute(target$jscomp$0, propKey, propValue);
                    break;
                  default:
                    pushAttribute(target$jscomp$0, propKey, propValue);
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML, children);
          if ("string" === typeof children) {
            target$jscomp$0.push(escapeTextForBrowser(children));
            var JSCompiler_inline_result = null;
          } else JSCompiler_inline_result = children;
          return JSCompiler_inline_result;
        case "g":
        case "p":
        case "li":
          break;
        case "select":
          target$jscomp$0.push(startChunkForTag("select"));
          var children$jscomp$0 = null, innerHTML$jscomp$0 = null, propKey$jscomp$0;
          for (propKey$jscomp$0 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$0)) {
              var propValue$jscomp$0 = props[propKey$jscomp$0];
              if (null != propValue$jscomp$0)
                switch (propKey$jscomp$0) {
                  case "children":
                    children$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$0 = propValue$jscomp$0;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$0,
                      propValue$jscomp$0
                    );
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
          return children$jscomp$0;
        case "option":
          var selectedValue = formatContext.selectedValue;
          target$jscomp$0.push(startChunkForTag("option"));
          var children$jscomp$1 = null, value = null, selected = null, innerHTML$jscomp$1 = null, propKey$jscomp$1;
          for (propKey$jscomp$1 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$1)) {
              var propValue$jscomp$1 = props[propKey$jscomp$1];
              if (null != propValue$jscomp$1)
                switch (propKey$jscomp$1) {
                  case "children":
                    children$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "selected":
                    selected = propValue$jscomp$1;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$1 = propValue$jscomp$1;
                    break;
                  case "value":
                    value = propValue$jscomp$1;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$1,
                      propValue$jscomp$1
                    );
                }
            }
          if (null != selectedValue) {
            var stringValue = null !== value ? "" + value : flattenOptionChildren(children$jscomp$1);
            if (isArrayImpl(selectedValue))
              for (var i11 = 0; i11 < selectedValue.length; i11++) {
                if ("" + selectedValue[i11] === stringValue) {
                  target$jscomp$0.push(' selected=""');
                  break;
                }
              }
            else
              "" + selectedValue === stringValue && target$jscomp$0.push(' selected=""');
          } else selected && target$jscomp$0.push(' selected=""');
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);
          return children$jscomp$1;
        case "textarea":
          target$jscomp$0.push(startChunkForTag("textarea"));
          var value$jscomp$0 = null, defaultValue2 = null, children$jscomp$2 = null, propKey$jscomp$2;
          for (propKey$jscomp$2 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$2)) {
              var propValue$jscomp$2 = props[propKey$jscomp$2];
              if (null != propValue$jscomp$2)
                switch (propKey$jscomp$2) {
                  case "children":
                    children$jscomp$2 = propValue$jscomp$2;
                    break;
                  case "value":
                    value$jscomp$0 = propValue$jscomp$2;
                    break;
                  case "defaultValue":
                    defaultValue2 = propValue$jscomp$2;
                    break;
                  case "dangerouslySetInnerHTML":
                    throw Error(formatProdErrorMessage(91));
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$2,
                      propValue$jscomp$2
                    );
                }
            }
          null === value$jscomp$0 && null !== defaultValue2 && (value$jscomp$0 = defaultValue2);
          target$jscomp$0.push(">");
          if (null != children$jscomp$2) {
            if (null != value$jscomp$0) throw Error(formatProdErrorMessage(92));
            if (isArrayImpl(children$jscomp$2)) {
              if (1 < children$jscomp$2.length)
                throw Error(formatProdErrorMessage(93));
              value$jscomp$0 = "" + children$jscomp$2[0];
            }
            value$jscomp$0 = "" + children$jscomp$2;
          }
          "string" === typeof value$jscomp$0 && "\n" === value$jscomp$0[0] && target$jscomp$0.push("\n");
          null !== value$jscomp$0 && target$jscomp$0.push(escapeTextForBrowser("" + value$jscomp$0));
          return null;
        case "input":
          target$jscomp$0.push(startChunkForTag("input"));
          var name2 = null, formAction = null, formEncType = null, formMethod = null, formTarget = null, value$jscomp$1 = null, defaultValue$jscomp$0 = null, checked = null, defaultChecked = null, propKey$jscomp$3;
          for (propKey$jscomp$3 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$3)) {
              var propValue$jscomp$3 = props[propKey$jscomp$3];
              if (null != propValue$jscomp$3)
                switch (propKey$jscomp$3) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(formatProdErrorMessage(399, "input"));
                  case "name":
                    name2 = propValue$jscomp$3;
                    break;
                  case "formAction":
                    formAction = propValue$jscomp$3;
                    break;
                  case "formEncType":
                    formEncType = propValue$jscomp$3;
                    break;
                  case "formMethod":
                    formMethod = propValue$jscomp$3;
                    break;
                  case "formTarget":
                    formTarget = propValue$jscomp$3;
                    break;
                  case "defaultChecked":
                    defaultChecked = propValue$jscomp$3;
                    break;
                  case "defaultValue":
                    defaultValue$jscomp$0 = propValue$jscomp$3;
                    break;
                  case "checked":
                    checked = propValue$jscomp$3;
                    break;
                  case "value":
                    value$jscomp$1 = propValue$jscomp$3;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$3,
                      propValue$jscomp$3
                    );
                }
            }
          var formData = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction,
            formEncType,
            formMethod,
            formTarget,
            name2
          );
          null !== checked ? pushBooleanAttribute(target$jscomp$0, "checked", checked) : null !== defaultChecked && pushBooleanAttribute(target$jscomp$0, "checked", defaultChecked);
          null !== value$jscomp$1 ? pushAttribute(target$jscomp$0, "value", value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0, "value", defaultValue$jscomp$0);
          target$jscomp$0.push("/>");
          null != formData && formData.forEach(pushAdditionalFormField, target$jscomp$0);
          return null;
        case "button":
          target$jscomp$0.push(startChunkForTag("button"));
          var children$jscomp$3 = null, innerHTML$jscomp$2 = null, name$jscomp$0 = null, formAction$jscomp$0 = null, formEncType$jscomp$0 = null, formMethod$jscomp$0 = null, formTarget$jscomp$0 = null, propKey$jscomp$4;
          for (propKey$jscomp$4 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$4)) {
              var propValue$jscomp$4 = props[propKey$jscomp$4];
              if (null != propValue$jscomp$4)
                switch (propKey$jscomp$4) {
                  case "children":
                    children$jscomp$3 = propValue$jscomp$4;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$2 = propValue$jscomp$4;
                    break;
                  case "name":
                    name$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formAction":
                    formAction$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formEncType":
                    formEncType$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formMethod":
                    formMethod$jscomp$0 = propValue$jscomp$4;
                    break;
                  case "formTarget":
                    formTarget$jscomp$0 = propValue$jscomp$4;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$4,
                      propValue$jscomp$4
                    );
                }
            }
          var formData$jscomp$0 = pushFormActionAttribute(
            target$jscomp$0,
            resumableState,
            renderState,
            formAction$jscomp$0,
            formEncType$jscomp$0,
            formMethod$jscomp$0,
            formTarget$jscomp$0,
            name$jscomp$0
          );
          target$jscomp$0.push(">");
          null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);
          if ("string" === typeof children$jscomp$3) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$3));
            var JSCompiler_inline_result$jscomp$0 = null;
          } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;
          return JSCompiler_inline_result$jscomp$0;
        case "form":
          target$jscomp$0.push(startChunkForTag("form"));
          var children$jscomp$4 = null, innerHTML$jscomp$3 = null, formAction$jscomp$1 = null, formEncType$jscomp$1 = null, formMethod$jscomp$1 = null, formTarget$jscomp$1 = null, propKey$jscomp$5;
          for (propKey$jscomp$5 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$5)) {
              var propValue$jscomp$5 = props[propKey$jscomp$5];
              if (null != propValue$jscomp$5)
                switch (propKey$jscomp$5) {
                  case "children":
                    children$jscomp$4 = propValue$jscomp$5;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$3 = propValue$jscomp$5;
                    break;
                  case "action":
                    formAction$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "encType":
                    formEncType$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "method":
                    formMethod$jscomp$1 = propValue$jscomp$5;
                    break;
                  case "target":
                    formTarget$jscomp$1 = propValue$jscomp$5;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$5,
                      propValue$jscomp$5
                    );
                }
            }
          var formData$jscomp$1 = null, formActionName = null;
          if ("function" === typeof formAction$jscomp$1) {
            var customFields = getCustomFormFields(
              resumableState,
              formAction$jscomp$1
            );
            null !== customFields ? (formAction$jscomp$1 = customFields.action || "", formEncType$jscomp$1 = customFields.encType, formMethod$jscomp$1 = customFields.method, formTarget$jscomp$1 = customFields.target, formData$jscomp$1 = customFields.data, formActionName = customFields.name) : (target$jscomp$0.push(
              " ",
              "action",
              '="',
              actionJavaScriptURL,
              '"'
            ), formTarget$jscomp$1 = formMethod$jscomp$1 = formEncType$jscomp$1 = formAction$jscomp$1 = null, injectFormReplayingRuntime(resumableState, renderState));
          }
          null != formAction$jscomp$1 && pushAttribute(target$jscomp$0, "action", formAction$jscomp$1);
          null != formEncType$jscomp$1 && pushAttribute(target$jscomp$0, "encType", formEncType$jscomp$1);
          null != formMethod$jscomp$1 && pushAttribute(target$jscomp$0, "method", formMethod$jscomp$1);
          null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0, "target", formTarget$jscomp$1);
          target$jscomp$0.push(">");
          null !== formActionName && (target$jscomp$0.push('<input type="hidden"'), pushStringAttribute(target$jscomp$0, "name", formActionName), target$jscomp$0.push("/>"), null != formData$jscomp$1 && formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);
          if ("string" === typeof children$jscomp$4) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$4));
            var JSCompiler_inline_result$jscomp$1 = null;
          } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;
          return JSCompiler_inline_result$jscomp$1;
        case "menuitem":
          target$jscomp$0.push(startChunkForTag("menuitem"));
          for (var propKey$jscomp$6 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$6)) {
              var propValue$jscomp$6 = props[propKey$jscomp$6];
              if (null != propValue$jscomp$6)
                switch (propKey$jscomp$6) {
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(formatProdErrorMessage(400));
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$6,
                      propValue$jscomp$6
                    );
                }
            }
          target$jscomp$0.push(">");
          return null;
        case "object":
          target$jscomp$0.push(startChunkForTag("object"));
          var children$jscomp$5 = null, innerHTML$jscomp$4 = null, propKey$jscomp$7;
          for (propKey$jscomp$7 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$7)) {
              var propValue$jscomp$7 = props[propKey$jscomp$7];
              if (null != propValue$jscomp$7)
                switch (propKey$jscomp$7) {
                  case "children":
                    children$jscomp$5 = propValue$jscomp$7;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$4 = propValue$jscomp$7;
                    break;
                  case "data":
                    var sanitizedValue = sanitizeURL("" + propValue$jscomp$7);
                    if ("" === sanitizedValue) break;
                    target$jscomp$0.push(
                      " ",
                      "data",
                      '="',
                      escapeTextForBrowser(sanitizedValue),
                      '"'
                    );
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$7,
                      propValue$jscomp$7
                    );
                }
            }
          target$jscomp$0.push(">");
          pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
          if ("string" === typeof children$jscomp$5) {
            target$jscomp$0.push(escapeTextForBrowser(children$jscomp$5));
            var JSCompiler_inline_result$jscomp$2 = null;
          } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;
          return JSCompiler_inline_result$jscomp$2;
        case "title":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(
              target$jscomp$0,
              props
            );
          else
            isFallback ? JSCompiler_inline_result$jscomp$3 = null : (pushTitleImpl(renderState.hoistableChunks, props), JSCompiler_inline_result$jscomp$3 = void 0);
          return JSCompiler_inline_result$jscomp$3;
        case "link":
          var rel = props.rel, href = props.href, precedence = props.precedence;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof rel || "string" !== typeof href || "" === href) {
            pushLinkImpl(target$jscomp$0, props);
            var JSCompiler_inline_result$jscomp$4 = null;
          } else if ("stylesheet" === props.rel)
            if ("string" !== typeof precedence || null != props.disabled || props.onLoad || props.onError)
              JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
                target$jscomp$0,
                props
              );
            else {
              var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
              if (null !== resourceState) {
                resumableState.styleResources[href] = null;
                styleQueue || (styleQueue = {
                  precedence: escapeTextForBrowser(precedence),
                  rules: [],
                  hrefs: [],
                  sheets: /* @__PURE__ */ new Map()
                }, renderState.styles.set(precedence, styleQueue));
                var resource = {
                  state: 0,
                  props: assign({}, props, {
                    "data-precedence": props.precedence,
                    precedence: null
                  })
                };
                if (resourceState) {
                  2 === resourceState.length && adoptPreloadCredentials(resource.props, resourceState);
                  var preloadResource = renderState.preloads.stylesheets.get(href);
                  preloadResource && 0 < preloadResource.length ? preloadResource.length = 0 : resource.state = 1;
                }
                styleQueue.sheets.set(href, resource);
                hoistableState && hoistableState.stylesheets.add(resource);
              } else if (styleQueue) {
                var resource$9 = styleQueue.sheets.get(href);
                resource$9 && hoistableState && hoistableState.stylesheets.add(resource$9);
              }
              textEmbedded && target$jscomp$0.push("<!-- -->");
              JSCompiler_inline_result$jscomp$4 = null;
            }
          else
            props.onLoad || props.onError ? JSCompiler_inline_result$jscomp$4 = pushLinkImpl(
              target$jscomp$0,
              props
            ) : (textEmbedded && target$jscomp$0.push("<!-- -->"), JSCompiler_inline_result$jscomp$4 = isFallback ? null : pushLinkImpl(renderState.hoistableChunks, props));
          return JSCompiler_inline_result$jscomp$4;
        case "script":
          var asyncProp = props.async;
          if ("string" !== typeof props.src || !props.src || !asyncProp || "function" === typeof asyncProp || "symbol" === typeof asyncProp || props.onLoad || props.onError || 4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(
              target$jscomp$0,
              props
            );
          else {
            var key = props.src;
            if ("module" === props.type) {
              var resources = resumableState.moduleScriptResources;
              var preloads = renderState.preloads.moduleScripts;
            } else
              resources = resumableState.scriptResources, preloads = renderState.preloads.scripts;
            var resourceState$jscomp$0 = resources.hasOwnProperty(key) ? resources[key] : void 0;
            if (null !== resourceState$jscomp$0) {
              resources[key] = null;
              var scriptProps = props;
              if (resourceState$jscomp$0) {
                2 === resourceState$jscomp$0.length && (scriptProps = assign({}, props), adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));
                var preloadResource$jscomp$0 = preloads.get(key);
                preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);
              }
              var resource$jscomp$0 = [];
              renderState.scripts.add(resource$jscomp$0);
              pushScriptImpl(resource$jscomp$0, scriptProps);
            }
            textEmbedded && target$jscomp$0.push("<!-- -->");
            JSCompiler_inline_result$jscomp$5 = null;
          }
          return JSCompiler_inline_result$jscomp$5;
        case "style":
          var precedence$jscomp$0 = props.precedence, href$jscomp$0 = props.href;
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp || "string" !== typeof precedence$jscomp$0 || "string" !== typeof href$jscomp$0 || "" === href$jscomp$0) {
            target$jscomp$0.push(startChunkForTag("style"));
            var children$jscomp$6 = null, innerHTML$jscomp$5 = null, propKey$jscomp$8;
            for (propKey$jscomp$8 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$8)) {
                var propValue$jscomp$8 = props[propKey$jscomp$8];
                if (null != propValue$jscomp$8)
                  switch (propKey$jscomp$8) {
                    case "children":
                      children$jscomp$6 = propValue$jscomp$8;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$5 = propValue$jscomp$8;
                      break;
                    default:
                      pushAttribute(
                        target$jscomp$0,
                        propKey$jscomp$8,
                        propValue$jscomp$8
                      );
                  }
              }
            target$jscomp$0.push(">");
            var child = Array.isArray(children$jscomp$6) ? 2 > children$jscomp$6.length ? children$jscomp$6[0] : null : children$jscomp$6;
            "function" !== typeof child && "symbol" !== typeof child && null !== child && void 0 !== child && target$jscomp$0.push(("" + child).replace(styleRegex, styleReplacer));
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);
            target$jscomp$0.push(endChunkForTag("style"));
            var JSCompiler_inline_result$jscomp$6 = null;
          } else {
            var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);
            if (null !== (resumableState.styleResources.hasOwnProperty(href$jscomp$0) ? resumableState.styleResources[href$jscomp$0] : void 0)) {
              resumableState.styleResources[href$jscomp$0] = null;
              styleQueue$jscomp$0 ? styleQueue$jscomp$0.hrefs.push(
                escapeTextForBrowser(href$jscomp$0)
              ) : (styleQueue$jscomp$0 = {
                precedence: escapeTextForBrowser(precedence$jscomp$0),
                rules: [],
                hrefs: [escapeTextForBrowser(href$jscomp$0)],
                sheets: /* @__PURE__ */ new Map()
              }, renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));
              var target = styleQueue$jscomp$0.rules, children$jscomp$7 = null, innerHTML$jscomp$6 = null, propKey$jscomp$9;
              for (propKey$jscomp$9 in props)
                if (hasOwnProperty2.call(props, propKey$jscomp$9)) {
                  var propValue$jscomp$9 = props[propKey$jscomp$9];
                  if (null != propValue$jscomp$9)
                    switch (propKey$jscomp$9) {
                      case "children":
                        children$jscomp$7 = propValue$jscomp$9;
                        break;
                      case "dangerouslySetInnerHTML":
                        innerHTML$jscomp$6 = propValue$jscomp$9;
                    }
                }
              var child$jscomp$0 = Array.isArray(children$jscomp$7) ? 2 > children$jscomp$7.length ? children$jscomp$7[0] : null : children$jscomp$7;
              "function" !== typeof child$jscomp$0 && "symbol" !== typeof child$jscomp$0 && null !== child$jscomp$0 && void 0 !== child$jscomp$0 && target.push(
                ("" + child$jscomp$0).replace(styleRegex, styleReplacer)
              );
              pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);
            }
            styleQueue$jscomp$0 && hoistableState && hoistableState.styles.add(styleQueue$jscomp$0);
            textEmbedded && target$jscomp$0.push("<!-- -->");
            JSCompiler_inline_result$jscomp$6 = void 0;
          }
          return JSCompiler_inline_result$jscomp$6;
        case "meta":
          if (4 === formatContext.insertionMode || formatContext.tagScope & 1 || null != props.itemProp)
            var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
              target$jscomp$0,
              props,
              "meta"
            );
          else
            textEmbedded && target$jscomp$0.push("<!-- -->"), JSCompiler_inline_result$jscomp$7 = isFallback ? null : "string" === typeof props.charSet ? pushSelfClosing(renderState.charsetChunks, props, "meta") : "viewport" === props.name ? pushSelfClosing(renderState.viewportChunks, props, "meta") : pushSelfClosing(renderState.hoistableChunks, props, "meta");
          return JSCompiler_inline_result$jscomp$7;
        case "listing":
        case "pre":
          target$jscomp$0.push(startChunkForTag(type));
          var children$jscomp$8 = null, innerHTML$jscomp$7 = null, propKey$jscomp$10;
          for (propKey$jscomp$10 in props)
            if (hasOwnProperty2.call(props, propKey$jscomp$10)) {
              var propValue$jscomp$10 = props[propKey$jscomp$10];
              if (null != propValue$jscomp$10)
                switch (propKey$jscomp$10) {
                  case "children":
                    children$jscomp$8 = propValue$jscomp$10;
                    break;
                  case "dangerouslySetInnerHTML":
                    innerHTML$jscomp$7 = propValue$jscomp$10;
                    break;
                  default:
                    pushAttribute(
                      target$jscomp$0,
                      propKey$jscomp$10,
                      propValue$jscomp$10
                    );
                }
            }
          target$jscomp$0.push(">");
          if (null != innerHTML$jscomp$7) {
            if (null != children$jscomp$8) throw Error(formatProdErrorMessage(60));
            if ("object" !== typeof innerHTML$jscomp$7 || !("__html" in innerHTML$jscomp$7))
              throw Error(formatProdErrorMessage(61));
            var html = innerHTML$jscomp$7.__html;
            null !== html && void 0 !== html && ("string" === typeof html && 0 < html.length && "\n" === html[0] ? target$jscomp$0.push("\n", html) : target$jscomp$0.push("" + html));
          }
          "string" === typeof children$jscomp$8 && "\n" === children$jscomp$8[0] && target$jscomp$0.push("\n");
          return children$jscomp$8;
        case "img":
          var src = props.src, srcSet = props.srcSet;
          if (!("lazy" === props.loading || !src && !srcSet || "string" !== typeof src && null != src || "string" !== typeof srcSet && null != srcSet) && "low" !== props.fetchPriority && false === !!(formatContext.tagScope & 3) && ("string" !== typeof src || ":" !== src[4] || "d" !== src[0] && "D" !== src[0] || "a" !== src[1] && "A" !== src[1] || "t" !== src[2] && "T" !== src[2] || "a" !== src[3] && "A" !== src[3]) && ("string" !== typeof srcSet || ":" !== srcSet[4] || "d" !== srcSet[0] && "D" !== srcSet[0] || "a" !== srcSet[1] && "A" !== srcSet[1] || "t" !== srcSet[2] && "T" !== srcSet[2] || "a" !== srcSet[3] && "A" !== srcSet[3])) {
            var sizes2 = "string" === typeof props.sizes ? props.sizes : void 0, key$jscomp$0 = srcSet ? srcSet + "\n" + (sizes2 || "") : src, promotablePreloads = renderState.preloads.images, resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);
            if (resource$jscomp$1) {
              if ("high" === props.fetchPriority || 10 > renderState.highImagePreloads.size)
                promotablePreloads.delete(key$jscomp$0), renderState.highImagePreloads.add(resource$jscomp$1);
            } else if (!resumableState.imageResources.hasOwnProperty(key$jscomp$0)) {
              resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;
              var input = props.crossOrigin;
              var JSCompiler_inline_result$jscomp$8 = "string" === typeof input ? "use-credentials" === input ? input : "" : void 0;
              var headers = renderState.headers, header;
              headers && 0 < headers.remainingCapacity && "string" !== typeof props.srcSet && ("high" === props.fetchPriority || 500 > headers.highImagePreloads.length) && (header = getPreloadAsHeader(src, "image", {
                imageSrcSet: props.srcSet,
                imageSizes: props.sizes,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                nonce: props.nonce,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.refererPolicy
              }), 0 <= (headers.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS, headers.highImagePreloads && (headers.highImagePreloads += ", "), headers.highImagePreloads += header) : (resource$jscomp$1 = [], pushLinkImpl(resource$jscomp$1, {
                rel: "preload",
                as: "image",
                href: srcSet ? void 0 : src,
                imageSrcSet: srcSet,
                imageSizes: sizes2,
                crossOrigin: JSCompiler_inline_result$jscomp$8,
                integrity: props.integrity,
                type: props.type,
                fetchPriority: props.fetchPriority,
                referrerPolicy: props.referrerPolicy
              }), "high" === props.fetchPriority || 10 > renderState.highImagePreloads.size ? renderState.highImagePreloads.add(resource$jscomp$1) : (renderState.bulkPreloads.add(resource$jscomp$1), promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
            }
          }
          return pushSelfClosing(target$jscomp$0, props, "img");
        case "base":
        case "area":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "keygen":
        case "param":
        case "source":
        case "track":
        case "wbr":
          return pushSelfClosing(target$jscomp$0, props, type);
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          break;
        case "head":
          if (2 > formatContext.insertionMode) {
            var preamble = preambleState || renderState.preamble;
            if (preamble.headChunks)
              throw Error(formatProdErrorMessage(545, "`<head>`"));
            preamble.headChunks = [];
            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
              preamble.headChunks,
              props,
              "head"
            );
          } else
            JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "head"
            );
          return JSCompiler_inline_result$jscomp$9;
        case "body":
          if (2 > formatContext.insertionMode) {
            var preamble$jscomp$0 = preambleState || renderState.preamble;
            if (preamble$jscomp$0.bodyChunks)
              throw Error(formatProdErrorMessage(545, "`<body>`"));
            preamble$jscomp$0.bodyChunks = [];
            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
              preamble$jscomp$0.bodyChunks,
              props,
              "body"
            );
          } else
            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "body"
            );
          return JSCompiler_inline_result$jscomp$10;
        case "html":
          if (0 === formatContext.insertionMode) {
            var preamble$jscomp$1 = preambleState || renderState.preamble;
            if (preamble$jscomp$1.htmlChunks)
              throw Error(formatProdErrorMessage(545, "`<html>`"));
            preamble$jscomp$1.htmlChunks = [""];
            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
              preamble$jscomp$1.htmlChunks,
              props,
              "html"
            );
          } else
            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
              target$jscomp$0,
              props,
              "html"
            );
          return JSCompiler_inline_result$jscomp$11;
        default:
          if (-1 !== type.indexOf("-")) {
            target$jscomp$0.push(startChunkForTag(type));
            var children$jscomp$9 = null, innerHTML$jscomp$8 = null, propKey$jscomp$11;
            for (propKey$jscomp$11 in props)
              if (hasOwnProperty2.call(props, propKey$jscomp$11)) {
                var propValue$jscomp$11 = props[propKey$jscomp$11];
                if (null != propValue$jscomp$11) {
                  var attributeName = propKey$jscomp$11;
                  switch (propKey$jscomp$11) {
                    case "children":
                      children$jscomp$9 = propValue$jscomp$11;
                      break;
                    case "dangerouslySetInnerHTML":
                      innerHTML$jscomp$8 = propValue$jscomp$11;
                      break;
                    case "style":
                      pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);
                      break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                    case "ref":
                      break;
                    case "className":
                      attributeName = "class";
                    default:
                      if (isAttributeNameSafe(propKey$jscomp$11) && "function" !== typeof propValue$jscomp$11 && "symbol" !== typeof propValue$jscomp$11 && false !== propValue$jscomp$11) {
                        if (true === propValue$jscomp$11) propValue$jscomp$11 = "";
                        else if ("object" === typeof propValue$jscomp$11) continue;
                        target$jscomp$0.push(
                          " ",
                          attributeName,
                          '="',
                          escapeTextForBrowser(propValue$jscomp$11),
                          '"'
                        );
                      }
                  }
                }
              }
            target$jscomp$0.push(">");
            pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
            return children$jscomp$9;
          }
      }
      return pushStartGenericElement(target$jscomp$0, props, type);
    }
    var endTagCache = /* @__PURE__ */ new Map();
    function endChunkForTag(tag) {
      var chunk2 = endTagCache.get(tag);
      void 0 === chunk2 && (chunk2 = "</" + tag + ">", endTagCache.set(tag, chunk2));
      return chunk2;
    }
    function hoistPreambleState(renderState, preambleState) {
      renderState = renderState.preamble;
      null === renderState.htmlChunks && preambleState.htmlChunks && (renderState.htmlChunks = preambleState.htmlChunks, preambleState.contribution |= 1);
      null === renderState.headChunks && preambleState.headChunks && (renderState.headChunks = preambleState.headChunks, preambleState.contribution |= 4);
      null === renderState.bodyChunks && preambleState.bodyChunks && (renderState.bodyChunks = preambleState.bodyChunks, preambleState.contribution |= 2);
    }
    function writeBootstrap(destination, renderState) {
      renderState = renderState.bootstrapChunks;
      for (var i11 = 0; i11 < renderState.length - 1; i11++)
        destination.push(renderState[i11]);
      return i11 < renderState.length ? (i11 = renderState[i11], renderState.length = 0, destination.push(i11)) : true;
    }
    function writeStartPendingSuspenseBoundary(destination, renderState, id5) {
      destination.push('<!--$?--><template id="');
      if (null === id5) throw Error(formatProdErrorMessage(395));
      destination.push(renderState.boundaryPrefix);
      renderState = id5.toString(16);
      destination.push(renderState);
      return destination.push('"></template>');
    }
    function writePreambleContribution(destination, preambleState) {
      preambleState = preambleState.contribution;
      0 !== preambleState && (destination.push("<!--"), destination.push("" + preambleState), destination.push("-->"));
    }
    function writeStartSegment(destination, renderState, formatContext, id5) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return destination.push('<div hidden id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 4:
          return destination.push('<svg aria-hidden="true" style="display:none" id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 5:
          return destination.push('<math aria-hidden="true" style="display:none" id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 6:
          return destination.push('<table hidden id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 7:
          return destination.push('<table hidden><tbody id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 8:
          return destination.push('<table hidden><tr id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        case 9:
          return destination.push('<table hidden><colgroup id="'), destination.push(renderState.segmentPrefix), renderState = id5.toString(16), destination.push(renderState), destination.push('">');
        default:
          throw Error(formatProdErrorMessage(397));
      }
    }
    function writeEndSegment(destination, formatContext) {
      switch (formatContext.insertionMode) {
        case 0:
        case 1:
        case 3:
        case 2:
          return destination.push("</div>");
        case 4:
          return destination.push("</svg>");
        case 5:
          return destination.push("</math>");
        case 6:
          return destination.push("</table>");
        case 7:
          return destination.push("</tbody></table>");
        case 8:
          return destination.push("</tr></table>");
        case 9:
          return destination.push("</colgroup></table>");
        default:
          throw Error(formatProdErrorMessage(397));
      }
    }
    var regexForJSStringsInInstructionScripts = /[<\u2028\u2029]/g;
    function escapeJSStringsForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInInstructionScripts,
        function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var regexForJSStringsInScripts = /[&><\u2028\u2029]/g;
    function escapeJSObjectForInstructionScripts(input) {
      return JSON.stringify(input).replace(
        regexForJSStringsInScripts,
        function(match) {
          switch (match) {
            case "&":
              return "\\u0026";
            case ">":
              return "\\u003e";
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw Error(
                "escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
              );
          }
        }
      );
    }
    var currentlyRenderingBoundaryHasStylesToHoist = false;
    var destinationHasCapacity = true;
    function flushStyleTagsLateForBoundary(styleQueue) {
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs, i11 = 0;
      if (hrefs.length) {
        this.push('<style media="not all" data-precedence="');
        this.push(styleQueue.precedence);
        for (this.push('" data-href="'); i11 < hrefs.length - 1; i11++)
          this.push(hrefs[i11]), this.push(" ");
        this.push(hrefs[i11]);
        this.push('">');
        for (i11 = 0; i11 < rules.length; i11++) this.push(rules[i11]);
        destinationHasCapacity = this.push("</style>");
        currentlyRenderingBoundaryHasStylesToHoist = true;
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function hasStylesToHoist(stylesheet) {
      return 2 !== stylesheet.state ? currentlyRenderingBoundaryHasStylesToHoist = true : false;
    }
    function writeHoistablesForBoundary(destination, hoistableState, renderState) {
      currentlyRenderingBoundaryHasStylesToHoist = false;
      destinationHasCapacity = true;
      hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);
      hoistableState.stylesheets.forEach(hasStylesToHoist);
      currentlyRenderingBoundaryHasStylesToHoist && (renderState.stylesToHoist = true);
      return destinationHasCapacity;
    }
    function flushResource(resource) {
      for (var i11 = 0; i11 < resource.length; i11++) this.push(resource[i11]);
      resource.length = 0;
    }
    var stylesheetFlushingQueue = [];
    function flushStyleInPreamble(stylesheet) {
      pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);
      for (var i11 = 0; i11 < stylesheetFlushingQueue.length; i11++)
        this.push(stylesheetFlushingQueue[i11]);
      stylesheetFlushingQueue.length = 0;
      stylesheet.state = 2;
    }
    function flushStylesInPreamble(styleQueue) {
      var hasStylesheets = 0 < styleQueue.sheets.size;
      styleQueue.sheets.forEach(flushStyleInPreamble, this);
      styleQueue.sheets.clear();
      var rules = styleQueue.rules, hrefs = styleQueue.hrefs;
      if (!hasStylesheets || hrefs.length) {
        this.push('<style data-precedence="');
        this.push(styleQueue.precedence);
        styleQueue = 0;
        if (hrefs.length) {
          for (this.push('" data-href="'); styleQueue < hrefs.length - 1; styleQueue++)
            this.push(hrefs[styleQueue]), this.push(" ");
          this.push(hrefs[styleQueue]);
        }
        this.push('">');
        for (styleQueue = 0; styleQueue < rules.length; styleQueue++)
          this.push(rules[styleQueue]);
        this.push("</style>");
        rules.length = 0;
        hrefs.length = 0;
      }
    }
    function preloadLateStyle(stylesheet) {
      if (0 === stylesheet.state) {
        stylesheet.state = 1;
        var props = stylesheet.props;
        pushLinkImpl(stylesheetFlushingQueue, {
          rel: "preload",
          as: "style",
          href: stylesheet.props.href,
          crossOrigin: props.crossOrigin,
          fetchPriority: props.fetchPriority,
          integrity: props.integrity,
          media: props.media,
          hrefLang: props.hrefLang,
          referrerPolicy: props.referrerPolicy
        });
        for (stylesheet = 0; stylesheet < stylesheetFlushingQueue.length; stylesheet++)
          this.push(stylesheetFlushingQueue[stylesheet]);
        stylesheetFlushingQueue.length = 0;
      }
    }
    function preloadLateStyles(styleQueue) {
      styleQueue.sheets.forEach(preloadLateStyle, this);
      styleQueue.sheets.clear();
    }
    function writeStyleResourceDependenciesInJS(destination, hoistableState) {
      destination.push("[");
      var nextArrayOpenBrackChunk = "[";
      hoistableState.stylesheets.forEach(function(resource) {
        if (2 !== resource.state)
          if (3 === resource.state)
            destination.push(nextArrayOpenBrackChunk), resource = escapeJSObjectForInstructionScripts(
              "" + resource.props.href
            ), destination.push(resource), destination.push("]"), nextArrayOpenBrackChunk = ",[";
          else {
            destination.push(nextArrayOpenBrackChunk);
            var precedence = resource.props["data-precedence"], props = resource.props, coercedHref = sanitizeURL("" + resource.props.href);
            coercedHref = escapeJSObjectForInstructionScripts(coercedHref);
            destination.push(coercedHref);
            precedence = "" + precedence;
            destination.push(",");
            precedence = escapeJSObjectForInstructionScripts(precedence);
            destination.push(precedence);
            for (var propKey in props)
              if (hasOwnProperty2.call(props, propKey) && (precedence = props[propKey], null != precedence))
                switch (propKey) {
                  case "href":
                  case "rel":
                  case "precedence":
                  case "data-precedence":
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(formatProdErrorMessage(399, "link"));
                  default:
                    writeStyleResourceAttributeInJS(
                      destination,
                      propKey,
                      precedence
                    );
                }
            destination.push("]");
            nextArrayOpenBrackChunk = ",[";
            resource.state = 3;
          }
      });
      destination.push("]");
    }
    function writeStyleResourceAttributeInJS(destination, name2, value) {
      var attributeName = name2.toLowerCase();
      switch (typeof value) {
        case "function":
        case "symbol":
          return;
      }
      switch (name2) {
        case "innerHTML":
        case "dangerouslySetInnerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "style":
        case "ref":
          return;
        case "className":
          attributeName = "class";
          name2 = "" + value;
          break;
        case "hidden":
          if (false === value) return;
          name2 = "";
          break;
        case "src":
        case "href":
          value = sanitizeURL(value);
          name2 = "" + value;
          break;
        default:
          if (2 < name2.length && ("o" === name2[0] || "O" === name2[0]) && ("n" === name2[1] || "N" === name2[1]) || !isAttributeNameSafe(name2))
            return;
          name2 = "" + value;
      }
      destination.push(",");
      attributeName = escapeJSObjectForInstructionScripts(attributeName);
      destination.push(attributeName);
      destination.push(",");
      attributeName = escapeJSObjectForInstructionScripts(name2);
      destination.push(attributeName);
    }
    function createHoistableState() {
      return { styles: /* @__PURE__ */ new Set(), stylesheets: /* @__PURE__ */ new Set() };
    }
    function prefetchDNS(href) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          if (!resumableState.dnsResources.hasOwnProperty(href)) {
            resumableState.dnsResources[href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity)
              JSCompiler_temp = (header = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=dns-prefetch", 0 <= (resumableState.remainingCapacity -= header.length + 2));
            JSCompiler_temp ? (renderState.resets.dns[href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (header = [], pushLinkImpl(header, { href, rel: "dns-prefetch" }), renderState.preconnects.add(header));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.D(href);
    }
    function preconnect(href, crossOrigin) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if ("string" === typeof href && href) {
          var bucket = "use-credentials" === crossOrigin ? "credentials" : "string" === typeof crossOrigin ? "anonymous" : "default";
          if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {
            resumableState.connectResources[bucket][href] = null;
            resumableState = renderState.headers;
            var header, JSCompiler_temp;
            if (JSCompiler_temp = resumableState && 0 < resumableState.remainingCapacity) {
              JSCompiler_temp = "<" + ("" + href).replace(
                regexForHrefInLinkHeaderURLContext,
                escapeHrefForLinkHeaderURLContextReplacer
              ) + ">; rel=preconnect";
              if ("string" === typeof crossOrigin) {
                var escapedCrossOrigin = ("" + crossOrigin).replace(
                  regexForLinkHeaderQuotedParamValueContext,
                  escapeStringForLinkHeaderQuotedParamValueContextReplacer
                );
                JSCompiler_temp += '; crossorigin="' + escapedCrossOrigin + '"';
              }
              JSCompiler_temp = (header = JSCompiler_temp, 0 <= (resumableState.remainingCapacity -= header.length + 2));
            }
            JSCompiler_temp ? (renderState.resets.connect[bucket][href] = null, resumableState.preconnects && (resumableState.preconnects += ", "), resumableState.preconnects += header) : (bucket = [], pushLinkImpl(bucket, {
              rel: "preconnect",
              href,
              crossOrigin
            }), renderState.preconnects.add(bucket));
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.C(href, crossOrigin);
    }
    function preload(href, as2, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (as2 && href) {
          switch (as2) {
            case "image":
              if (options) {
                var imageSrcSet = options.imageSrcSet;
                var imageSizes = options.imageSizes;
                var fetchPriority = options.fetchPriority;
              }
              var key = imageSrcSet ? imageSrcSet + "\n" + (imageSizes || "") : href;
              if (resumableState.imageResources.hasOwnProperty(key)) return;
              resumableState.imageResources[key] = PRELOAD_NO_CREDS;
              resumableState = renderState.headers;
              var header;
              resumableState && 0 < resumableState.remainingCapacity && "string" !== typeof imageSrcSet && "high" === fetchPriority && (header = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= header.length + 2)) ? (renderState.resets.image[key] = PRELOAD_NO_CREDS, resumableState.highImagePreloads && (resumableState.highImagePreloads += ", "), resumableState.highImagePreloads += header) : (resumableState = [], pushLinkImpl(
                resumableState,
                assign(
                  { rel: "preload", href: imageSrcSet ? void 0 : href, as: as2 },
                  options
                )
              ), "high" === fetchPriority ? renderState.highImagePreloads.add(resumableState) : (renderState.bulkPreloads.add(resumableState), renderState.preloads.images.set(key, resumableState)));
              break;
            case "style":
              if (resumableState.styleResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.styleResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.stylesheets.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              break;
            case "script":
              if (resumableState.scriptResources.hasOwnProperty(href)) return;
              imageSrcSet = [];
              renderState.preloads.scripts.set(href, imageSrcSet);
              renderState.bulkPreloads.add(imageSrcSet);
              pushLinkImpl(
                imageSrcSet,
                assign({ rel: "preload", href, as: as2 }, options)
              );
              resumableState.scriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              break;
            default:
              if (resumableState.unknownResources.hasOwnProperty(as2)) {
                if (imageSrcSet = resumableState.unknownResources[as2], imageSrcSet.hasOwnProperty(href))
                  return;
              } else
                imageSrcSet = {}, resumableState.unknownResources[as2] = imageSrcSet;
              imageSrcSet[href] = PRELOAD_NO_CREDS;
              if ((resumableState = renderState.headers) && 0 < resumableState.remainingCapacity && "font" === as2 && (key = getPreloadAsHeader(href, as2, options), 0 <= (resumableState.remainingCapacity -= key.length + 2)))
                renderState.resets.font[href] = PRELOAD_NO_CREDS, resumableState.fontPreloads && (resumableState.fontPreloads += ", "), resumableState.fontPreloads += key;
              else
                switch (resumableState = [], href = assign({ rel: "preload", href, as: as2 }, options), pushLinkImpl(resumableState, href), as2) {
                  case "font":
                    renderState.fontPreloads.add(resumableState);
                    break;
                  default:
                    renderState.bulkPreloads.add(resumableState);
                }
          }
          enqueueFlush(request);
        }
      } else previousDispatcher.L(href, as2, options);
    }
    function preloadModule(href, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          var as2 = options && "string" === typeof options.as ? options.as : "script";
          switch (as2) {
            case "script":
              if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;
              as2 = [];
              resumableState.moduleScriptResources[href] = !options || "string" !== typeof options.crossOrigin && "string" !== typeof options.integrity ? PRELOAD_NO_CREDS : [options.crossOrigin, options.integrity];
              renderState.preloads.moduleScripts.set(href, as2);
              break;
            default:
              if (resumableState.moduleUnknownResources.hasOwnProperty(as2)) {
                var resources = resumableState.unknownResources[as2];
                if (resources.hasOwnProperty(href)) return;
              } else
                resources = {}, resumableState.moduleUnknownResources[as2] = resources;
              as2 = [];
              resources[href] = PRELOAD_NO_CREDS;
          }
          pushLinkImpl(as2, assign({ rel: "modulepreload", href }, options));
          renderState.bulkPreloads.add(as2);
          enqueueFlush(request);
        }
      } else previousDispatcher.m(href, options);
    }
    function preinitStyle(href, precedence, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (href) {
          precedence = precedence || "default";
          var styleQueue = renderState.styles.get(precedence), resourceState = resumableState.styleResources.hasOwnProperty(href) ? resumableState.styleResources[href] : void 0;
          null !== resourceState && (resumableState.styleResources[href] = null, styleQueue || (styleQueue = {
            precedence: escapeTextForBrowser(precedence),
            rules: [],
            hrefs: [],
            sheets: /* @__PURE__ */ new Map()
          }, renderState.styles.set(precedence, styleQueue)), precedence = {
            state: 0,
            props: assign(
              { rel: "stylesheet", href, "data-precedence": precedence },
              options
            )
          }, resourceState && (2 === resourceState.length && adoptPreloadCredentials(precedence.props, resourceState), (renderState = renderState.preloads.stylesheets.get(href)) && 0 < renderState.length ? renderState.length = 0 : precedence.state = 1), styleQueue.sheets.set(href, precedence), enqueueFlush(request));
        }
      } else previousDispatcher.S(href, precedence, options);
    }
    function preinitScript(src, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.scriptResources.hasOwnProperty(src) ? resumableState.scriptResources[src] : void 0;
          null !== resourceState && (resumableState.scriptResources[src] = null, options = assign({ src, async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.scripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.X(src, options);
    }
    function preinitModuleScript(src, options) {
      var request = currentRequest ? currentRequest : null;
      if (request) {
        var resumableState = request.resumableState, renderState = request.renderState;
        if (src) {
          var resourceState = resumableState.moduleScriptResources.hasOwnProperty(
            src
          ) ? resumableState.moduleScriptResources[src] : void 0;
          null !== resourceState && (resumableState.moduleScriptResources[src] = null, options = assign({ src, type: "module", async: true }, options), resourceState && (2 === resourceState.length && adoptPreloadCredentials(options, resourceState), src = renderState.preloads.moduleScripts.get(src)) && (src.length = 0), src = [], renderState.scripts.add(src), pushScriptImpl(src, options), enqueueFlush(request));
        }
      } else previousDispatcher.M(src, options);
    }
    function adoptPreloadCredentials(target, preloadState) {
      null == target.crossOrigin && (target.crossOrigin = preloadState[0]);
      null == target.integrity && (target.integrity = preloadState[1]);
    }
    function getPreloadAsHeader(href, as2, params) {
      href = ("" + href).replace(
        regexForHrefInLinkHeaderURLContext,
        escapeHrefForLinkHeaderURLContextReplacer
      );
      as2 = ("" + as2).replace(
        regexForLinkHeaderQuotedParamValueContext,
        escapeStringForLinkHeaderQuotedParamValueContextReplacer
      );
      as2 = "<" + href + '>; rel=preload; as="' + as2 + '"';
      for (var paramName in params)
        hasOwnProperty2.call(params, paramName) && (href = params[paramName], "string" === typeof href && (as2 += "; " + paramName.toLowerCase() + '="' + ("" + href).replace(
          regexForLinkHeaderQuotedParamValueContext,
          escapeStringForLinkHeaderQuotedParamValueContextReplacer
        ) + '"'));
      return as2;
    }
    var regexForHrefInLinkHeaderURLContext = /[<>\r\n]/g;
    function escapeHrefForLinkHeaderURLContextReplacer(match) {
      switch (match) {
        case "<":
          return "%3C";
        case ">":
          return "%3E";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    var regexForLinkHeaderQuotedParamValueContext = /["';,\r\n]/g;
    function escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {
      switch (match) {
        case '"':
          return "%22";
        case "'":
          return "%27";
        case ";":
          return "%3B";
        case ",":
          return "%2C";
        case "\n":
          return "%0A";
        case "\r":
          return "%0D";
        default:
          throw Error(
            "escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React"
          );
      }
    }
    function hoistStyleQueueDependency(styleQueue) {
      this.styles.add(styleQueue);
    }
    function hoistStylesheetDependency(stylesheet) {
      this.stylesheets.add(stylesheet);
    }
    function createRenderState(resumableState, generateStaticMarkup) {
      var idPrefix = resumableState.idPrefix, bootstrapChunks = [], bootstrapScriptContent = resumableState.bootstrapScriptContent, bootstrapScripts = resumableState.bootstrapScripts, bootstrapModules = resumableState.bootstrapModules;
      void 0 !== bootstrapScriptContent && bootstrapChunks.push(
        "<script>",
        ("" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer),
        "</script>"
      );
      bootstrapScriptContent = idPrefix + "P:";
      var JSCompiler_object_inline_segmentPrefix_1542 = idPrefix + "S:";
      idPrefix += "B:";
      var JSCompiler_object_inline_preamble_1545 = createPreambleState(), JSCompiler_object_inline_preconnects_1555 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_fontPreloads_1556 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_highImagePreloads_1557 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_styles_1558 = /* @__PURE__ */ new Map(), JSCompiler_object_inline_bootstrapScripts_1559 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_scripts_1560 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_bulkPreloads_1561 = /* @__PURE__ */ new Set(), JSCompiler_object_inline_preloads_1562 = {
        images: /* @__PURE__ */ new Map(),
        stylesheets: /* @__PURE__ */ new Map(),
        scripts: /* @__PURE__ */ new Map(),
        moduleScripts: /* @__PURE__ */ new Map()
      };
      if (void 0 !== bootstrapScripts)
        for (var i11 = 0; i11 < bootstrapScripts.length; i11++) {
          var scriptConfig = bootstrapScripts[i11], src, crossOrigin = void 0, integrity = void 0, props = {
            rel: "preload",
            as: "script",
            fetchPriority: "low",
            nonce: void 0
          };
          "string" === typeof scriptConfig ? props.href = src = scriptConfig : (props.href = src = scriptConfig.src, props.integrity = integrity = "string" === typeof scriptConfig.integrity ? scriptConfig.integrity : void 0, props.crossOrigin = crossOrigin = "string" === typeof scriptConfig || null == scriptConfig.crossOrigin ? void 0 : "use-credentials" === scriptConfig.crossOrigin ? "use-credentials" : "");
          scriptConfig = resumableState;
          var href = src;
          scriptConfig.scriptResources[href] = null;
          scriptConfig.moduleScriptResources[href] = null;
          scriptConfig = [];
          pushLinkImpl(scriptConfig, props);
          JSCompiler_object_inline_bootstrapScripts_1559.add(scriptConfig);
          bootstrapChunks.push('<script src="', escapeTextForBrowser(src));
          "string" === typeof integrity && bootstrapChunks.push('" integrity="', escapeTextForBrowser(integrity));
          "string" === typeof crossOrigin && bootstrapChunks.push(
            '" crossorigin="',
            escapeTextForBrowser(crossOrigin)
          );
          bootstrapChunks.push('" async=""></script>');
        }
      if (void 0 !== bootstrapModules)
        for (bootstrapScripts = 0; bootstrapScripts < bootstrapModules.length; bootstrapScripts++)
          props = bootstrapModules[bootstrapScripts], crossOrigin = src = void 0, integrity = {
            rel: "modulepreload",
            fetchPriority: "low",
            nonce: void 0
          }, "string" === typeof props ? integrity.href = i11 = props : (integrity.href = i11 = props.src, integrity.integrity = crossOrigin = "string" === typeof props.integrity ? props.integrity : void 0, integrity.crossOrigin = src = "string" === typeof props || null == props.crossOrigin ? void 0 : "use-credentials" === props.crossOrigin ? "use-credentials" : ""), props = resumableState, scriptConfig = i11, props.scriptResources[scriptConfig] = null, props.moduleScriptResources[scriptConfig] = null, props = [], pushLinkImpl(props, integrity), JSCompiler_object_inline_bootstrapScripts_1559.add(props), bootstrapChunks.push(
            '<script type="module" src="',
            escapeTextForBrowser(i11)
          ), "string" === typeof crossOrigin && bootstrapChunks.push(
            '" integrity="',
            escapeTextForBrowser(crossOrigin)
          ), "string" === typeof src && bootstrapChunks.push('" crossorigin="', escapeTextForBrowser(src)), bootstrapChunks.push('" async=""></script>');
      return {
        placeholderPrefix: bootstrapScriptContent,
        segmentPrefix: JSCompiler_object_inline_segmentPrefix_1542,
        boundaryPrefix: idPrefix,
        startInlineScript: "<script>",
        preamble: JSCompiler_object_inline_preamble_1545,
        externalRuntimeScript: null,
        bootstrapChunks,
        importMapChunks: [],
        onHeaders: void 0,
        headers: null,
        resets: {
          font: {},
          dns: {},
          connect: { default: {}, anonymous: {}, credentials: {} },
          image: {},
          style: {}
        },
        charsetChunks: [],
        viewportChunks: [],
        hoistableChunks: [],
        preconnects: JSCompiler_object_inline_preconnects_1555,
        fontPreloads: JSCompiler_object_inline_fontPreloads_1556,
        highImagePreloads: JSCompiler_object_inline_highImagePreloads_1557,
        styles: JSCompiler_object_inline_styles_1558,
        bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1559,
        scripts: JSCompiler_object_inline_scripts_1560,
        bulkPreloads: JSCompiler_object_inline_bulkPreloads_1561,
        preloads: JSCompiler_object_inline_preloads_1562,
        stylesToHoist: false,
        generateStaticMarkup
      };
    }
    function pushTextInstance(target, text3, renderState, textEmbedded) {
      if (renderState.generateStaticMarkup)
        return target.push(escapeTextForBrowser(text3)), false;
      "" === text3 ? target = textEmbedded : (textEmbedded && target.push("<!-- -->"), target.push(escapeTextForBrowser(text3)), target = true);
      return target;
    }
    function pushSegmentFinale(target, renderState, lastPushedText, textEmbedded) {
      renderState.generateStaticMarkup || lastPushedText && textEmbedded && target.push("<!-- -->");
    }
    var bind = Function.prototype.bind;
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (type.$$typeof) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return (type.displayName || "Context") + ".Provider";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
            return type;
          case REACT_MEMO_TYPE:
            return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x3) {
            }
        }
      return null;
    }
    var emptyContextObject = {};
    var currentActiveSnapshot = null;
    function popToNearestCommonAncestor(prev, next) {
      if (prev !== next) {
        prev.context._currentValue2 = prev.parentValue;
        prev = prev.parent;
        var parentNext = next.parent;
        if (null === prev) {
          if (null !== parentNext) throw Error(formatProdErrorMessage(401));
        } else {
          if (null === parentNext) throw Error(formatProdErrorMessage(401));
          popToNearestCommonAncestor(prev, parentNext);
        }
        next.context._currentValue2 = next.value;
      }
    }
    function popAllPrevious(prev) {
      prev.context._currentValue2 = prev.parentValue;
      prev = prev.parent;
      null !== prev && popAllPrevious(prev);
    }
    function pushAllNext(next) {
      var parentNext = next.parent;
      null !== parentNext && pushAllNext(parentNext);
      next.context._currentValue2 = next.value;
    }
    function popPreviousToCommonLevel(prev, next) {
      prev.context._currentValue2 = prev.parentValue;
      prev = prev.parent;
      if (null === prev) throw Error(formatProdErrorMessage(402));
      prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : popPreviousToCommonLevel(prev, next);
    }
    function popNextToCommonLevel(prev, next) {
      var parentNext = next.parent;
      if (null === parentNext) throw Error(formatProdErrorMessage(402));
      prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext);
      next.context._currentValue2 = next.value;
    }
    function switchContext(newSnapshot) {
      var prev = currentActiveSnapshot;
      prev !== newSnapshot && (null === prev ? pushAllNext(newSnapshot) : null === newSnapshot ? popAllPrevious(prev) : prev.depth === newSnapshot.depth ? popToNearestCommonAncestor(prev, newSnapshot) : prev.depth > newSnapshot.depth ? popPreviousToCommonLevel(prev, newSnapshot) : popNextToCommonLevel(prev, newSnapshot), currentActiveSnapshot = newSnapshot);
    }
    var classComponentUpdater = {
      enqueueSetState: function(inst, payload) {
        inst = inst._reactInternals;
        null !== inst.queue && inst.queue.push(payload);
      },
      enqueueReplaceState: function(inst, payload) {
        inst = inst._reactInternals;
        inst.replace = true;
        inst.queue = [payload];
      },
      enqueueForceUpdate: function() {
      }
    };
    var emptyTreeContext = { id: 1, overflow: "" };
    function pushTreeContext(baseContext, totalChildren, index) {
      var baseIdWithLeadingBit = baseContext.id;
      baseContext = baseContext.overflow;
      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
      baseIdWithLeadingBit &= ~(1 << baseLength);
      index += 1;
      var length = 32 - clz32(totalChildren) + baseLength;
      if (30 < length) {
        var numberOfOverflowBits = baseLength - baseLength % 5;
        length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
        baseIdWithLeadingBit >>= numberOfOverflowBits;
        baseLength -= numberOfOverflowBits;
        return {
          id: 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit,
          overflow: length + baseContext
        };
      }
      return {
        id: 1 << length | index << baseLength | baseIdWithLeadingBit,
        overflow: baseContext
      };
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x3) {
      x3 >>>= 0;
      return 0 === x3 ? 32 : 31 - (log(x3) / LN2 | 0) | 0;
    }
    var SuspenseException = Error(formatProdErrorMessage(460));
    function noop$2() {
    }
    function trackUsedThenable(thenableState2, thenable, index) {
      index = thenableState2[index];
      void 0 === index ? thenableState2.push(thenable) : index !== thenable && (thenable.then(noop$2, noop$2), thenable = index);
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          "string" === typeof thenable.status ? thenable.then(noop$2, noop$2) : (thenableState2 = thenable, thenableState2.status = "pending", thenableState2.then(
            function(fulfilledValue) {
              if ("pending" === thenable.status) {
                var fulfilledThenable = thenable;
                fulfilledThenable.status = "fulfilled";
                fulfilledThenable.value = fulfilledValue;
              }
            },
            function(error) {
              if ("pending" === thenable.status) {
                var rejectedThenable = thenable;
                rejectedThenable.status = "rejected";
                rejectedThenable.reason = error;
              }
            }
          ));
          switch (thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
          suspendedThenable = thenable;
          throw SuspenseException;
      }
    }
    var suspendedThenable = null;
    function getSuspendedThenable() {
      if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));
      var thenable = suspendedThenable;
      suspendedThenable = null;
      return thenable;
    }
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var currentlyRenderingComponent = null;
    var currentlyRenderingTask = null;
    var currentlyRenderingRequest = null;
    var currentlyRenderingKeyPath = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var isReRender = false;
    var didScheduleRenderPhaseUpdate = false;
    var localIdCounter = 0;
    var actionStateCounter = 0;
    var actionStateMatchingIndex = -1;
    var thenableIndexCounter = 0;
    var thenableState = null;
    var renderPhaseUpdates = null;
    var numberOfReRenders = 0;
    function resolveCurrentlyRenderingComponent() {
      if (null === currentlyRenderingComponent)
        throw Error(formatProdErrorMessage(321));
      return currentlyRenderingComponent;
    }
    function createHook() {
      if (0 < numberOfReRenders) throw Error(formatProdErrorMessage(312));
      return { memoizedState: null, queue: null, next: null };
    }
    function createWorkInProgressHook() {
      null === workInProgressHook ? null === firstWorkInProgressHook ? (isReRender = false, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = true, workInProgressHook = firstWorkInProgressHook) : null === workInProgressHook.next ? (isReRender = false, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = true, workInProgressHook = workInProgressHook.next);
      return workInProgressHook;
    }
    function getThenableStateAfterSuspending() {
      var state2 = thenableState;
      thenableState = null;
      return state2;
    }
    function resetHooksState() {
      currentlyRenderingKeyPath = currentlyRenderingRequest = currentlyRenderingTask = currentlyRenderingComponent = null;
      didScheduleRenderPhaseUpdate = false;
      firstWorkInProgressHook = null;
      numberOfReRenders = 0;
      workInProgressHook = renderPhaseUpdates = null;
    }
    function basicStateReducer(state2, action) {
      return "function" === typeof action ? action(state2) : action;
    }
    function useReducer2(reducer2, initialArg, init) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      if (isReRender) {
        var queue = workInProgressHook.queue;
        initialArg = queue.dispatch;
        if (null !== renderPhaseUpdates && (init = renderPhaseUpdates.get(queue), void 0 !== init)) {
          renderPhaseUpdates.delete(queue);
          queue = workInProgressHook.memoizedState;
          do
            queue = reducer2(queue, init.action), init = init.next;
          while (null !== init);
          workInProgressHook.memoizedState = queue;
          return [queue, initialArg];
        }
        return [workInProgressHook.memoizedState, initialArg];
      }
      reducer2 = reducer2 === basicStateReducer ? "function" === typeof initialArg ? initialArg() : initialArg : void 0 !== init ? init(initialArg) : initialArg;
      workInProgressHook.memoizedState = reducer2;
      reducer2 = workInProgressHook.queue = { last: null, dispatch: null };
      reducer2 = reducer2.dispatch = dispatchAction.bind(
        null,
        currentlyRenderingComponent,
        reducer2
      );
      return [workInProgressHook.memoizedState, reducer2];
    }
    function useMemo10(nextCreate, deps) {
      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
      workInProgressHook = createWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      if (null !== workInProgressHook) {
        var prevState = workInProgressHook.memoizedState;
        if (null !== prevState && null !== deps) {
          var prevDeps = prevState[1];
          a: if (null === prevDeps) prevDeps = false;
          else {
            for (var i11 = 0; i11 < prevDeps.length && i11 < deps.length; i11++)
              if (!objectIs(deps[i11], prevDeps[i11])) {
                prevDeps = false;
                break a;
              }
            prevDeps = true;
          }
          if (prevDeps) return prevState[0];
        }
      }
      nextCreate = nextCreate();
      workInProgressHook.memoizedState = [nextCreate, deps];
      return nextCreate;
    }
    function dispatchAction(componentIdentity, queue, action) {
      if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));
      if (componentIdentity === currentlyRenderingComponent)
        if (didScheduleRenderPhaseUpdate = true, componentIdentity = { action, next: null }, null === renderPhaseUpdates && (renderPhaseUpdates = /* @__PURE__ */ new Map()), action = renderPhaseUpdates.get(queue), void 0 === action)
          renderPhaseUpdates.set(queue, componentIdentity);
        else {
          for (queue = action; null !== queue.next; ) queue = queue.next;
          queue.next = componentIdentity;
        }
    }
    function unsupportedStartTransition() {
      throw Error(formatProdErrorMessage(394));
    }
    function unsupportedSetOptimisticState() {
      throw Error(formatProdErrorMessage(479));
    }
    function useActionState(action, initialState, permalink) {
      resolveCurrentlyRenderingComponent();
      var actionStateHookIndex = actionStateCounter++, request = currentlyRenderingRequest;
      if ("function" === typeof action.$$FORM_ACTION) {
        var nextPostbackStateKey = null, componentKeyPath = currentlyRenderingKeyPath;
        request = request.formState;
        var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;
        if (null !== request && "function" === typeof isSignatureEqual) {
          var postbackKey = request[1];
          isSignatureEqual.call(action, request[2], request[3]) && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([componentKeyPath, null, actionStateHookIndex]),
            0
          ), postbackKey === nextPostbackStateKey && (actionStateMatchingIndex = actionStateHookIndex, initialState = request[0]));
        }
        var boundAction = action.bind(null, initialState);
        action = function(payload) {
          boundAction(payload);
        };
        "function" === typeof boundAction.$$FORM_ACTION && (action.$$FORM_ACTION = function(prefix3) {
          prefix3 = boundAction.$$FORM_ACTION(prefix3);
          void 0 !== permalink && (permalink += "", prefix3.action = permalink);
          var formData = prefix3.data;
          formData && (null === nextPostbackStateKey && (nextPostbackStateKey = void 0 !== permalink ? "p" + permalink : "k" + murmurhash3_32_gc(
            JSON.stringify([
              componentKeyPath,
              null,
              actionStateHookIndex
            ]),
            0
          )), formData.append("$ACTION_KEY", nextPostbackStateKey));
          return prefix3;
        });
        return [initialState, action, false];
      }
      var boundAction$22 = action.bind(null, initialState);
      return [
        initialState,
        function(payload) {
          boundAction$22(payload);
        },
        false
      ];
    }
    function unwrapThenable(thenable) {
      var index = thenableIndexCounter;
      thenableIndexCounter += 1;
      null === thenableState && (thenableState = []);
      return trackUsedThenable(thenableState, thenable, index);
    }
    function unsupportedRefresh() {
      throw Error(formatProdErrorMessage(393));
    }
    function noop$1() {
    }
    var HooksDispatcher = {
      readContext: function(context) {
        return context._currentValue2;
      },
      use: function(usable) {
        if (null !== usable && "object" === typeof usable) {
          if ("function" === typeof usable.then) return unwrapThenable(usable);
          if (usable.$$typeof === REACT_CONTEXT_TYPE)
            return usable._currentValue2;
        }
        throw Error(formatProdErrorMessage(438, String(usable)));
      },
      useContext: function(context) {
        resolveCurrentlyRenderingComponent();
        return context._currentValue2;
      },
      useMemo: useMemo10,
      useReducer: useReducer2,
      useRef: function(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
        workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        return null === previousRef ? (initialValue = { current: initialValue }, workInProgressHook.memoizedState = initialValue) : previousRef;
      },
      useState: function(initialState) {
        return useReducer2(basicStateReducer, initialState);
      },
      useInsertionEffect: noop$1,
      useLayoutEffect: noop$1,
      useCallback: function(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      },
      useImperativeHandle: noop$1,
      useEffect: noop$1,
      useDebugValue: noop$1,
      useDeferredValue: function(value, initialValue) {
        resolveCurrentlyRenderingComponent();
        return void 0 !== initialValue ? initialValue : value;
      },
      useTransition: function() {
        resolveCurrentlyRenderingComponent();
        return [false, unsupportedStartTransition];
      },
      useId: function() {
        var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
        var overflow = JSCompiler_inline_result.overflow;
        JSCompiler_inline_result = JSCompiler_inline_result.id;
        JSCompiler_inline_result = (JSCompiler_inline_result & ~(1 << 32 - clz32(JSCompiler_inline_result) - 1)).toString(32) + overflow;
        var resumableState = currentResumableState;
        if (null === resumableState) throw Error(formatProdErrorMessage(404));
        overflow = localIdCounter++;
        JSCompiler_inline_result = "\xAB" + resumableState.idPrefix + "R" + JSCompiler_inline_result;
        0 < overflow && (JSCompiler_inline_result += "H" + overflow.toString(32));
        return JSCompiler_inline_result + "\xBB";
      },
      useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
        if (void 0 === getServerSnapshot)
          throw Error(formatProdErrorMessage(407));
        return getServerSnapshot();
      },
      useOptimistic: function(passthrough) {
        resolveCurrentlyRenderingComponent();
        return [passthrough, unsupportedSetOptimisticState];
      },
      useActionState,
      useFormState: useActionState,
      useHostTransitionStatus: function() {
        resolveCurrentlyRenderingComponent();
        return sharedNotPendingObject;
      },
      useMemoCache: function(size) {
        for (var data = Array(size), i11 = 0; i11 < size; i11++)
          data[i11] = REACT_MEMO_CACHE_SENTINEL;
        return data;
      },
      useCacheRefresh: function() {
        return unsupportedRefresh;
      }
    };
    var currentResumableState = null;
    var DefaultAsyncDispatcher = {
      getCacheForType: function() {
        throw Error(formatProdErrorMessage(248));
      }
    };
    var prefix2;
    var suffix;
    function describeBuiltInComponentFrame(name2) {
      if (void 0 === prefix2)
        try {
          throw Error();
        } catch (x3) {
          var match = x3.stack.trim().match(/\n( *(at )?)/);
          prefix2 = match && match[1] || "";
          suffix = -1 < x3.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x3.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
      return "\n" + prefix2 + name2 + suffix;
    }
    var reentry = false;
    function describeNativeComponentFrame(fn, construct) {
      if (!fn || reentry) return "";
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        var RunInRootFrame = {
          DetermineComponentFrameRoot: function() {
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if ("object" === typeof Reflect && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x3) {
                    var control = x3;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x$24) {
                    control = x$24;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x$25) {
                  control = x$25;
                }
                (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {
                });
              }
            } catch (sample) {
              if (sample && control && "string" === typeof sample.stack)
                return [sample.stack, control.stack];
            }
            return [null, null];
          }
        };
        RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
        var namePropDescriptor = Object.getOwnPropertyDescriptor(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name"
        );
        namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name",
          { value: "DetermineComponentFrameRoot" }
        );
        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
        if (sampleStack && controlStack) {
          var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
          for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot"); )
            RunInRootFrame++;
          for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes(
            "DetermineComponentFrameRoot"
          ); )
            namePropDescriptor++;
          if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length)
            for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]; )
              namePropDescriptor--;
          for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--)
            if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
                do
                  if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
                    var frame3 = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
                    fn.displayName && frame3.includes("<anonymous>") && (frame3 = frame3.replace("<anonymous>", fn.displayName));
                    return frame3;
                  }
                while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
              }
              break;
            }
        }
      } finally {
        reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
      }
      return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
    }
    function describeComponentStackByType(type) {
      if ("string" === typeof type) return describeBuiltInComponentFrame(type);
      if ("function" === typeof type)
        return type.prototype && type.prototype.isReactComponent ? describeNativeComponentFrame(type, true) : describeNativeComponentFrame(type, false);
      if ("object" === typeof type && null !== type) {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeNativeComponentFrame(type.render, false);
          case REACT_MEMO_TYPE:
            return describeNativeComponentFrame(type.type, false);
          case REACT_LAZY_TYPE:
            var lazyComponent = type, payload = lazyComponent._payload;
            lazyComponent = lazyComponent._init;
            try {
              type = lazyComponent(payload);
            } catch (x3) {
              return describeBuiltInComponentFrame("Lazy");
            }
            return describeComponentStackByType(type);
        }
        if ("string" === typeof type.name)
          return payload = type.env, describeBuiltInComponentFrame(
            type.name + (payload ? " [" + payload + "]" : "")
          );
      }
      switch (type) {
        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame("SuspenseList");
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame("Suspense");
      }
      return "";
    }
    function defaultErrorHandler(error) {
      if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
        var JSCompiler_inline_result = error.environmentName;
        error = [error].slice(0);
        "string" === typeof error[0] ? error.splice(
          0,
          1,
          "[%s] " + error[0],
          " " + JSCompiler_inline_result + " "
        ) : error.splice(0, 0, "[%s] ", " " + JSCompiler_inline_result + " ");
        error.unshift(console);
        JSCompiler_inline_result = bind.apply(console.error, error);
        JSCompiler_inline_result();
      } else console.error(error);
      return null;
    }
    function noop3() {
    }
    function RequestInstance(resumableState, renderState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      var abortSet = /* @__PURE__ */ new Set();
      this.destination = null;
      this.flushScheduled = false;
      this.resumableState = resumableState;
      this.renderState = renderState;
      this.rootFormatContext = rootFormatContext;
      this.progressiveChunkSize = void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;
      this.status = 10;
      this.fatalError = null;
      this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
      this.completedPreambleSegments = this.completedRootSegment = null;
      this.abortableTasks = abortSet;
      this.pingedTasks = [];
      this.clientRenderedBoundaries = [];
      this.completedBoundaries = [];
      this.partialBoundaries = [];
      this.trackedPostpones = null;
      this.onError = void 0 === onError2 ? defaultErrorHandler : onError2;
      this.onPostpone = void 0 === onPostpone ? noop3 : onPostpone;
      this.onAllReady = void 0 === onAllReady ? noop3 : onAllReady;
      this.onShellReady = void 0 === onShellReady ? noop3 : onShellReady;
      this.onShellError = void 0 === onShellError ? noop3 : onShellError;
      this.onFatalError = void 0 === onFatalError ? noop3 : onFatalError;
      this.formState = void 0 === formState ? null : formState;
    }
    function createRequest(children, resumableState, renderState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError, onPostpone, formState) {
      resumableState = new RequestInstance(
        resumableState,
        renderState,
        rootFormatContext,
        progressiveChunkSize,
        onError2,
        onAllReady,
        onShellReady,
        onShellError,
        onFatalError,
        onPostpone,
        formState
      );
      renderState = createPendingSegment(
        resumableState,
        0,
        null,
        rootFormatContext,
        false,
        false
      );
      renderState.parentFlushed = true;
      children = createRenderTask(
        resumableState,
        null,
        children,
        -1,
        null,
        renderState,
        null,
        null,
        resumableState.abortableTasks,
        null,
        rootFormatContext,
        null,
        emptyTreeContext,
        null,
        false
      );
      pushComponentStack(children);
      resumableState.pingedTasks.push(children);
      return resumableState;
    }
    var currentRequest = null;
    function pingTask(request, task) {
      request.pingedTasks.push(task);
      1 === request.pingedTasks.length && (request.flushScheduled = null !== request.destination, performWork(request));
    }
    function createSuspenseBoundary(request, fallbackAbortableTasks, contentPreamble, fallbackPreamble) {
      return {
        status: 0,
        rootSegmentID: -1,
        parentFlushed: false,
        pendingTasks: 0,
        completedSegments: [],
        byteSize: 0,
        fallbackAbortableTasks,
        errorDigest: null,
        contentState: createHoistableState(),
        fallbackState: createHoistableState(),
        contentPreamble,
        fallbackPreamble,
        trackedContentKeyPath: null,
        trackedFallbackNode: null
      };
    }
    function createRenderTask(request, thenableState2, node, childIndex, blockedBoundary, blockedSegment, blockedPreamble, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      var task = {
        replay: null,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment,
        blockedPreamble,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createReplayTask(request, thenableState2, replay, node, childIndex, blockedBoundary, hoistableState, abortSet, keyPath, formatContext, context, treeContext, componentStack, isFallback) {
      request.allPendingTasks++;
      null === blockedBoundary ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
      replay.pendingTasks++;
      var task = {
        replay,
        node,
        childIndex,
        ping: function() {
          return pingTask(request, task);
        },
        blockedBoundary,
        blockedSegment: null,
        blockedPreamble: null,
        hoistableState,
        abortSet,
        keyPath,
        formatContext,
        context,
        treeContext,
        componentStack,
        thenableState: thenableState2,
        isFallback
      };
      abortSet.add(task);
      return task;
    }
    function createPendingSegment(request, index, boundary, parentFormatContext, lastPushedText, textEmbedded) {
      return {
        status: 0,
        parentFlushed: false,
        id: -1,
        index,
        chunks: [],
        children: [],
        preambleChildren: [],
        parentFormatContext,
        boundary,
        lastPushedText,
        textEmbedded
      };
    }
    function pushComponentStack(task) {
      var node = task.node;
      if ("object" === typeof node && null !== node)
        switch (node.$$typeof) {
          case REACT_ELEMENT_TYPE:
            task.componentStack = { parent: task.componentStack, type: node.type };
        }
    }
    function getThrownInfo(node$jscomp$0) {
      var errorInfo = {};
      node$jscomp$0 && Object.defineProperty(errorInfo, "componentStack", {
        configurable: true,
        enumerable: true,
        get: function() {
          try {
            var info = "", node = node$jscomp$0;
            do
              info += describeComponentStackByType(node.type), node = node.parent;
            while (node);
            var JSCompiler_inline_result = info;
          } catch (x3) {
            JSCompiler_inline_result = "\nError generating stack: " + x3.message + "\n" + x3.stack;
          }
          Object.defineProperty(errorInfo, "componentStack", {
            value: JSCompiler_inline_result
          });
          return JSCompiler_inline_result;
        }
      });
      return errorInfo;
    }
    function logRecoverableError(request, error, errorInfo) {
      request = request.onError;
      error = request(error, errorInfo);
      if (null == error || "string" === typeof error) return error;
    }
    function fatalError(request, error) {
      var onShellError = request.onShellError, onFatalError = request.onFatalError;
      onShellError(error);
      onFatalError(error);
      null !== request.destination ? (request.status = 14, request.destination.destroy(error)) : (request.status = 13, request.fatalError = error);
    }
    function renderWithHooks(request, task, keyPath, Component3, props, secondArg) {
      var prevThenableState = task.thenableState;
      task.thenableState = null;
      currentlyRenderingComponent = {};
      currentlyRenderingTask = task;
      currentlyRenderingRequest = request;
      currentlyRenderingKeyPath = keyPath;
      actionStateCounter = localIdCounter = 0;
      actionStateMatchingIndex = -1;
      thenableIndexCounter = 0;
      thenableState = prevThenableState;
      for (request = Component3(props, secondArg); didScheduleRenderPhaseUpdate; )
        didScheduleRenderPhaseUpdate = false, actionStateCounter = localIdCounter = 0, actionStateMatchingIndex = -1, thenableIndexCounter = 0, numberOfReRenders += 1, workInProgressHook = null, request = Component3(props, secondArg);
      resetHooksState();
      return request;
    }
    function finishFunctionComponent(request, task, keyPath, children, hasId, actionStateCount, actionStateMatchingIndex2) {
      var didEmitActionStateMarkers = false;
      if (0 !== actionStateCount && null !== request.formState) {
        var segment = task.blockedSegment;
        if (null !== segment) {
          didEmitActionStateMarkers = true;
          segment = segment.chunks;
          for (var i11 = 0; i11 < actionStateCount; i11++)
            i11 === actionStateMatchingIndex2 ? segment.push("<!--F!-->") : segment.push("<!--F-->");
        }
      }
      actionStateCount = task.keyPath;
      task.keyPath = keyPath;
      hasId ? (keyPath = task.treeContext, task.treeContext = pushTreeContext(keyPath, 1, 0), renderNode(request, task, children, -1), task.treeContext = keyPath) : didEmitActionStateMarkers ? renderNode(request, task, children, -1) : renderNodeDestructive(request, task, children, -1);
      task.keyPath = actionStateCount;
    }
    function renderElement(request, task, keyPath, type, props, ref) {
      if ("function" === typeof type)
        if (type.prototype && type.prototype.isReactComponent) {
          var newProps = props;
          if ("ref" in props) {
            newProps = {};
            for (var propName in props)
              "ref" !== propName && (newProps[propName] = props[propName]);
          }
          var defaultProps62 = type.defaultProps;
          if (defaultProps62) {
            newProps === props && (newProps = assign({}, newProps, props));
            for (var propName$33 in defaultProps62)
              void 0 === newProps[propName$33] && (newProps[propName$33] = defaultProps62[propName$33]);
          }
          props = newProps;
          newProps = emptyContextObject;
          defaultProps62 = type.contextType;
          "object" === typeof defaultProps62 && null !== defaultProps62 && (newProps = defaultProps62._currentValue2);
          newProps = new type(props, newProps);
          var initialState = void 0 !== newProps.state ? newProps.state : null;
          newProps.updater = classComponentUpdater;
          newProps.props = props;
          newProps.state = initialState;
          defaultProps62 = { queue: [], replace: false };
          newProps._reactInternals = defaultProps62;
          ref = type.contextType;
          newProps.context = "object" === typeof ref && null !== ref ? ref._currentValue2 : emptyContextObject;
          ref = type.getDerivedStateFromProps;
          "function" === typeof ref && (ref = ref(props, initialState), initialState = null === ref || void 0 === ref ? initialState : assign({}, initialState, ref), newProps.state = initialState);
          if ("function" !== typeof type.getDerivedStateFromProps && "function" !== typeof newProps.getSnapshotBeforeUpdate && ("function" === typeof newProps.UNSAFE_componentWillMount || "function" === typeof newProps.componentWillMount))
            if (type = newProps.state, "function" === typeof newProps.componentWillMount && newProps.componentWillMount(), "function" === typeof newProps.UNSAFE_componentWillMount && newProps.UNSAFE_componentWillMount(), type !== newProps.state && classComponentUpdater.enqueueReplaceState(
              newProps,
              newProps.state,
              null
            ), null !== defaultProps62.queue && 0 < defaultProps62.queue.length)
              if (type = defaultProps62.queue, ref = defaultProps62.replace, defaultProps62.queue = null, defaultProps62.replace = false, ref && 1 === type.length)
                newProps.state = type[0];
              else {
                defaultProps62 = ref ? type[0] : newProps.state;
                initialState = true;
                for (ref = ref ? 1 : 0; ref < type.length; ref++)
                  propName$33 = type[ref], propName$33 = "function" === typeof propName$33 ? propName$33.call(newProps, defaultProps62, props, void 0) : propName$33, null != propName$33 && (initialState ? (initialState = false, defaultProps62 = assign({}, defaultProps62, propName$33)) : assign(defaultProps62, propName$33));
                newProps.state = defaultProps62;
              }
            else defaultProps62.queue = null;
          type = newProps.render();
          if (12 === request.status) throw null;
          props = task.keyPath;
          task.keyPath = keyPath;
          renderNodeDestructive(request, task, type, -1);
          task.keyPath = props;
        } else {
          type = renderWithHooks(request, task, keyPath, type, props, void 0);
          if (12 === request.status) throw null;
          finishFunctionComponent(
            request,
            task,
            keyPath,
            type,
            0 !== localIdCounter,
            actionStateCounter,
            actionStateMatchingIndex
          );
        }
      else if ("string" === typeof type)
        if (newProps = task.blockedSegment, null === newProps)
          newProps = props.children, defaultProps62 = task.formatContext, initialState = task.keyPath, task.formatContext = getChildFormatContext(defaultProps62, type, props), task.keyPath = keyPath, renderNode(request, task, newProps, -1), task.formatContext = defaultProps62, task.keyPath = initialState;
        else {
          ref = pushStartInstance(
            newProps.chunks,
            type,
            props,
            request.resumableState,
            request.renderState,
            task.blockedPreamble,
            task.hoistableState,
            task.formatContext,
            newProps.lastPushedText,
            task.isFallback
          );
          newProps.lastPushedText = false;
          defaultProps62 = task.formatContext;
          initialState = task.keyPath;
          task.keyPath = keyPath;
          3 === (task.formatContext = getChildFormatContext(defaultProps62, type, props)).insertionMode ? (keyPath = createPendingSegment(
            request,
            0,
            null,
            task.formatContext,
            false,
            false
          ), newProps.preambleChildren.push(keyPath), keyPath = createRenderTask(
            request,
            null,
            ref,
            -1,
            task.blockedBoundary,
            keyPath,
            task.blockedPreamble,
            task.hoistableState,
            request.abortableTasks,
            task.keyPath,
            task.formatContext,
            task.context,
            task.treeContext,
            task.componentStack,
            task.isFallback
          ), pushComponentStack(keyPath), request.pingedTasks.push(keyPath)) : renderNode(request, task, ref, -1);
          task.formatContext = defaultProps62;
          task.keyPath = initialState;
          a: {
            task = newProps.chunks;
            request = request.resumableState;
            switch (type) {
              case "title":
              case "style":
              case "script":
              case "area":
              case "base":
              case "br":
              case "col":
              case "embed":
              case "hr":
              case "img":
              case "input":
              case "keygen":
              case "link":
              case "meta":
              case "param":
              case "source":
              case "track":
              case "wbr":
                break a;
              case "body":
                if (1 >= defaultProps62.insertionMode) {
                  request.hasBody = true;
                  break a;
                }
                break;
              case "html":
                if (0 === defaultProps62.insertionMode) {
                  request.hasHtml = true;
                  break a;
                }
                break;
              case "head":
                if (1 >= defaultProps62.insertionMode) break a;
            }
            task.push(endChunkForTag(type));
          }
          newProps.lastPushedText = false;
        }
      else {
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_ACTIVITY_TYPE:
            "hidden" !== props.mode && (type = task.keyPath, task.keyPath = keyPath, renderNodeDestructive(request, task, props.children, -1), task.keyPath = type);
            return;
          case REACT_SUSPENSE_LIST_TYPE:
            type = task.keyPath;
            task.keyPath = keyPath;
            renderNodeDestructive(request, task, props.children, -1);
            task.keyPath = type;
            return;
          case REACT_VIEW_TRANSITION_TYPE:
          case REACT_SCOPE_TYPE:
            throw Error(formatProdErrorMessage(343));
          case REACT_SUSPENSE_TYPE:
            a: if (null !== task.replay) {
              type = task.keyPath;
              task.keyPath = keyPath;
              keyPath = props.children;
              try {
                renderNode(request, task, keyPath, -1);
              } finally {
                task.keyPath = type;
              }
            } else {
              type = task.keyPath;
              var parentBoundary = task.blockedBoundary;
              ref = task.blockedPreamble;
              var parentHoistableState = task.hoistableState;
              propName$33 = task.blockedSegment;
              propName = props.fallback;
              props = props.children;
              var fallbackAbortSet = /* @__PURE__ */ new Set();
              var newBoundary = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                request,
                fallbackAbortSet,
                createPreambleState(),
                createPreambleState()
              ) : createSuspenseBoundary(request, fallbackAbortSet, null, null);
              null !== request.trackedPostpones && (newBoundary.trackedContentKeyPath = keyPath);
              var boundarySegment = createPendingSegment(
                request,
                propName$33.chunks.length,
                newBoundary,
                task.formatContext,
                false,
                false
              );
              propName$33.children.push(boundarySegment);
              propName$33.lastPushedText = false;
              var contentRootSegment = createPendingSegment(
                request,
                0,
                null,
                task.formatContext,
                false,
                false
              );
              contentRootSegment.parentFlushed = true;
              if (null !== request.trackedPostpones) {
                newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
                defaultProps62 = [newProps[1], newProps[2], [], null];
                request.trackedPostpones.workingMap.set(newProps, defaultProps62);
                newBoundary.trackedFallbackNode = defaultProps62;
                task.blockedSegment = boundarySegment;
                task.blockedPreamble = newBoundary.fallbackPreamble;
                task.keyPath = newProps;
                boundarySegment.status = 6;
                try {
                  renderNode(request, task, propName, -1), pushSegmentFinale(
                    boundarySegment.chunks,
                    request.renderState,
                    boundarySegment.lastPushedText,
                    boundarySegment.textEmbedded
                  ), boundarySegment.status = 1;
                } catch (thrownValue) {
                  throw boundarySegment.status = 12 === request.status ? 3 : 4, thrownValue;
                } finally {
                  task.blockedSegment = propName$33, task.blockedPreamble = ref, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  props,
                  -1,
                  newBoundary,
                  contentRootSegment,
                  newBoundary.contentPreamble,
                  newBoundary.contentState,
                  task.abortSet,
                  keyPath,
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  task.isFallback
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              } else {
                task.blockedBoundary = newBoundary;
                task.blockedPreamble = newBoundary.contentPreamble;
                task.hoistableState = newBoundary.contentState;
                task.blockedSegment = contentRootSegment;
                task.keyPath = keyPath;
                contentRootSegment.status = 6;
                try {
                  if (renderNode(request, task, props, -1), pushSegmentFinale(
                    contentRootSegment.chunks,
                    request.renderState,
                    contentRootSegment.lastPushedText,
                    contentRootSegment.textEmbedded
                  ), contentRootSegment.status = 1, queueCompletedSegment(newBoundary, contentRootSegment), 0 === newBoundary.pendingTasks && 0 === newBoundary.status) {
                    newBoundary.status = 1;
                    0 === request.pendingRootTasks && task.blockedPreamble && preparePreamble(request);
                    break a;
                  }
                } catch (thrownValue$28) {
                  newBoundary.status = 4, 12 === request.status ? (contentRootSegment.status = 3, newProps = request.fatalError) : (contentRootSegment.status = 4, newProps = thrownValue$28), defaultProps62 = getThrownInfo(task.componentStack), initialState = logRecoverableError(
                    request,
                    newProps,
                    defaultProps62
                  ), newBoundary.errorDigest = initialState, untrackBoundary(request, newBoundary);
                } finally {
                  task.blockedBoundary = parentBoundary, task.blockedPreamble = ref, task.hoistableState = parentHoistableState, task.blockedSegment = propName$33, task.keyPath = type;
                }
                task = createRenderTask(
                  request,
                  null,
                  propName,
                  -1,
                  parentBoundary,
                  boundarySegment,
                  newBoundary.fallbackPreamble,
                  newBoundary.fallbackState,
                  fallbackAbortSet,
                  [keyPath[0], "Suspense Fallback", keyPath[2]],
                  task.formatContext,
                  task.context,
                  task.treeContext,
                  task.componentStack,
                  true
                );
                pushComponentStack(task);
                request.pingedTasks.push(task);
              }
            }
            return;
        }
        if ("object" === typeof type && null !== type)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              if ("ref" in props)
                for (newBoundary in newProps = {}, props)
                  "ref" !== newBoundary && (newProps[newBoundary] = props[newBoundary]);
              else newProps = props;
              type = renderWithHooks(
                request,
                task,
                keyPath,
                type.render,
                newProps,
                ref
              );
              finishFunctionComponent(
                request,
                task,
                keyPath,
                type,
                0 !== localIdCounter,
                actionStateCounter,
                actionStateMatchingIndex
              );
              return;
            case REACT_MEMO_TYPE:
              renderElement(request, task, keyPath, type.type, props, ref);
              return;
            case REACT_PROVIDER_TYPE:
            case REACT_CONTEXT_TYPE:
              defaultProps62 = props.children;
              newProps = task.keyPath;
              props = props.value;
              initialState = type._currentValue2;
              type._currentValue2 = props;
              ref = currentActiveSnapshot;
              currentActiveSnapshot = type = {
                parent: ref,
                depth: null === ref ? 0 : ref.depth + 1,
                context: type,
                parentValue: initialState,
                value: props
              };
              task.context = type;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, defaultProps62, -1);
              request = currentActiveSnapshot;
              if (null === request) throw Error(formatProdErrorMessage(403));
              request.context._currentValue2 = request.parentValue;
              request = currentActiveSnapshot = request.parent;
              task.context = request;
              task.keyPath = newProps;
              return;
            case REACT_CONSUMER_TYPE:
              props = props.children;
              type = props(type._context._currentValue2);
              props = task.keyPath;
              task.keyPath = keyPath;
              renderNodeDestructive(request, task, type, -1);
              task.keyPath = props;
              return;
            case REACT_LAZY_TYPE:
              newProps = type._init;
              type = newProps(type._payload);
              if (12 === request.status) throw null;
              renderElement(request, task, keyPath, type, props, ref);
              return;
          }
        throw Error(
          formatProdErrorMessage(130, null == type ? type : typeof type, "")
        );
      }
    }
    function resumeNode(request, task, segmentId, node, childIndex) {
      var prevReplay = task.replay, blockedBoundary = task.blockedBoundary, resumedSegment = createPendingSegment(
        request,
        0,
        null,
        task.formatContext,
        false,
        false
      );
      resumedSegment.id = segmentId;
      resumedSegment.parentFlushed = true;
      try {
        task.replay = null, task.blockedSegment = resumedSegment, renderNode(request, task, node, childIndex), resumedSegment.status = 1, null === blockedBoundary ? request.completedRootSegment = resumedSegment : (queueCompletedSegment(blockedBoundary, resumedSegment), blockedBoundary.parentFlushed && request.partialBoundaries.push(blockedBoundary));
      } finally {
        task.replay = prevReplay, task.blockedSegment = null;
      }
    }
    function renderNodeDestructive(request, task, node, childIndex) {
      null !== task.replay && "number" === typeof task.replay.slots ? resumeNode(request, task, task.replay.slots, node, childIndex) : (task.node = node, task.childIndex = childIndex, node = task.componentStack, pushComponentStack(task), retryNode(request, task), task.componentStack = node);
    }
    function retryNode(request, task) {
      var node = task.node, childIndex = task.childIndex;
      if (null !== node) {
        if ("object" === typeof node) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = node.type, key = node.key, props = node.props;
              node = props.ref;
              var ref = void 0 !== node ? node : null, name2 = getComponentNameFromType(type), keyOrIndex = null == key ? -1 === childIndex ? 0 : childIndex : key;
              key = [task.keyPath, name2, keyOrIndex];
              if (null !== task.replay)
                a: {
                  var replay = task.replay;
                  childIndex = replay.nodes;
                  for (node = 0; node < childIndex.length; node++) {
                    var node$jscomp$0 = childIndex[node];
                    if (keyOrIndex === node$jscomp$0[1]) {
                      if (4 === node$jscomp$0.length) {
                        if (null !== name2 && name2 !== node$jscomp$0[0])
                          throw Error(
                            formatProdErrorMessage(490, node$jscomp$0[0], name2)
                          );
                        var childNodes = node$jscomp$0[2];
                        name2 = node$jscomp$0[3];
                        keyOrIndex = task.node;
                        task.replay = {
                          nodes: childNodes,
                          slots: name2,
                          pendingTasks: 1
                        };
                        try {
                          renderElement(request, task, key, type, props, ref);
                          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                            throw Error(formatProdErrorMessage(488));
                          task.replay.pendingTasks--;
                        } catch (x3) {
                          if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                            throw task.node === keyOrIndex && (task.replay = replay), x3;
                          task.replay.pendingTasks--;
                          props = getThrownInfo(task.componentStack);
                          key = task.blockedBoundary;
                          type = x3;
                          props = logRecoverableError(request, type, props);
                          abortRemainingReplayNodes(
                            request,
                            key,
                            childNodes,
                            name2,
                            type,
                            props
                          );
                        }
                        task.replay = replay;
                      } else {
                        if (type !== REACT_SUSPENSE_TYPE)
                          throw Error(
                            formatProdErrorMessage(
                              490,
                              "Suspense",
                              getComponentNameFromType(type) || "Unknown"
                            )
                          );
                        b: {
                          replay = void 0;
                          type = node$jscomp$0[5];
                          ref = node$jscomp$0[2];
                          name2 = node$jscomp$0[3];
                          keyOrIndex = null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];
                          node$jscomp$0 = null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];
                          var prevKeyPath = task.keyPath, previousReplaySet = task.replay, parentBoundary = task.blockedBoundary, parentHoistableState = task.hoistableState, content4 = props.children, fallback = props.fallback, fallbackAbortSet = /* @__PURE__ */ new Set();
                          props = 2 > task.formatContext.insertionMode ? createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            createPreambleState(),
                            createPreambleState()
                          ) : createSuspenseBoundary(
                            request,
                            fallbackAbortSet,
                            null,
                            null
                          );
                          props.parentFlushed = true;
                          props.rootSegmentID = type;
                          task.blockedBoundary = props;
                          task.hoistableState = props.contentState;
                          task.keyPath = key;
                          task.replay = {
                            nodes: ref,
                            slots: name2,
                            pendingTasks: 1
                          };
                          try {
                            renderNode(request, task, content4, -1);
                            if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                              throw Error(formatProdErrorMessage(488));
                            task.replay.pendingTasks--;
                            if (0 === props.pendingTasks && 0 === props.status) {
                              props.status = 1;
                              request.completedBoundaries.push(props);
                              break b;
                            }
                          } catch (error) {
                            props.status = 4, childNodes = getThrownInfo(task.componentStack), replay = logRecoverableError(
                              request,
                              error,
                              childNodes
                            ), props.errorDigest = replay, task.replay.pendingTasks--, request.clientRenderedBoundaries.push(props);
                          } finally {
                            task.blockedBoundary = parentBoundary, task.hoistableState = parentHoistableState, task.replay = previousReplaySet, task.keyPath = prevKeyPath;
                          }
                          task = createReplayTask(
                            request,
                            null,
                            {
                              nodes: keyOrIndex,
                              slots: node$jscomp$0,
                              pendingTasks: 0
                            },
                            fallback,
                            -1,
                            parentBoundary,
                            props.fallbackState,
                            fallbackAbortSet,
                            [key[0], "Suspense Fallback", key[2]],
                            task.formatContext,
                            task.context,
                            task.treeContext,
                            task.componentStack,
                            true
                          );
                          pushComponentStack(task);
                          request.pingedTasks.push(task);
                        }
                      }
                      childIndex.splice(node, 1);
                      break a;
                    }
                  }
                }
              else renderElement(request, task, key, type, props, ref);
              return;
            case REACT_PORTAL_TYPE:
              throw Error(formatProdErrorMessage(257));
            case REACT_LAZY_TYPE:
              childNodes = node._init;
              node = childNodes(node._payload);
              if (12 === request.status) throw null;
              renderNodeDestructive(request, task, node, childIndex);
              return;
          }
          if (isArrayImpl(node)) {
            renderChildrenArray(request, task, node, childIndex);
            return;
          }
          null === node || "object" !== typeof node ? childNodes = null : (childNodes = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], childNodes = "function" === typeof childNodes ? childNodes : null);
          if (childNodes && (childNodes = childNodes.call(node))) {
            node = childNodes.next();
            if (!node.done) {
              props = [];
              do
                props.push(node.value), node = childNodes.next();
              while (!node.done);
              renderChildrenArray(request, task, props, childIndex);
            }
            return;
          }
          if ("function" === typeof node.then)
            return task.thenableState = null, renderNodeDestructive(request, task, unwrapThenable(node), childIndex);
          if (node.$$typeof === REACT_CONTEXT_TYPE)
            return renderNodeDestructive(
              request,
              task,
              node._currentValue2,
              childIndex
            );
          childIndex = Object.prototype.toString.call(node);
          throw Error(
            formatProdErrorMessage(
              31,
              "[object Object]" === childIndex ? "object with keys {" + Object.keys(node).join(", ") + "}" : childIndex
            )
          );
        }
        if ("string" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            node,
            request.renderState,
            childIndex.lastPushedText
          ));
        else if ("number" === typeof node || "bigint" === typeof node)
          childIndex = task.blockedSegment, null !== childIndex && (childIndex.lastPushedText = pushTextInstance(
            childIndex.chunks,
            "" + node,
            request.renderState,
            childIndex.lastPushedText
          ));
      }
    }
    function renderChildrenArray(request, task, children, childIndex) {
      var prevKeyPath = task.keyPath;
      if (-1 !== childIndex && (task.keyPath = [task.keyPath, "Fragment", childIndex], null !== task.replay)) {
        for (var replay = task.replay, replayNodes = replay.nodes, j4 = 0; j4 < replayNodes.length; j4++) {
          var node = replayNodes[j4];
          if (node[1] === childIndex) {
            childIndex = node[2];
            node = node[3];
            task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };
            try {
              renderChildrenArray(request, task, children, -1);
              if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                throw Error(formatProdErrorMessage(488));
              task.replay.pendingTasks--;
            } catch (x3) {
              if ("object" === typeof x3 && null !== x3 && (x3 === SuspenseException || "function" === typeof x3.then))
                throw x3;
              task.replay.pendingTasks--;
              children = getThrownInfo(task.componentStack);
              var boundary = task.blockedBoundary, error = x3;
              children = logRecoverableError(request, error, children);
              abortRemainingReplayNodes(
                request,
                boundary,
                childIndex,
                node,
                error,
                children
              );
            }
            task.replay = replay;
            replayNodes.splice(j4, 1);
            break;
          }
        }
        task.keyPath = prevKeyPath;
        return;
      }
      replay = task.treeContext;
      replayNodes = children.length;
      if (null !== task.replay && (j4 = task.replay.slots, null !== j4 && "object" === typeof j4)) {
        for (childIndex = 0; childIndex < replayNodes; childIndex++)
          node = children[childIndex], task.treeContext = pushTreeContext(replay, replayNodes, childIndex), boundary = j4[childIndex], "number" === typeof boundary ? (resumeNode(request, task, boundary, node, childIndex), delete j4[childIndex]) : renderNode(request, task, node, childIndex);
        task.treeContext = replay;
        task.keyPath = prevKeyPath;
        return;
      }
      for (j4 = 0; j4 < replayNodes; j4++)
        childIndex = children[j4], task.treeContext = pushTreeContext(replay, replayNodes, j4), renderNode(request, task, childIndex, j4);
      task.treeContext = replay;
      task.keyPath = prevKeyPath;
    }
    function untrackBoundary(request, boundary) {
      request = request.trackedPostpones;
      null !== request && (boundary = boundary.trackedContentKeyPath, null !== boundary && (boundary = request.workingMap.get(boundary), void 0 !== boundary && (boundary.length = 4, boundary[2] = [], boundary[3] = null)));
    }
    function spawnNewSuspendedReplayTask(request, task, thenableState2) {
      return createReplayTask(
        request,
        thenableState2,
        task.replay,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function spawnNewSuspendedRenderTask(request, task, thenableState2) {
      var segment = task.blockedSegment, newSegment = createPendingSegment(
        request,
        segment.chunks.length,
        null,
        task.formatContext,
        segment.lastPushedText,
        true
      );
      segment.children.push(newSegment);
      segment.lastPushedText = false;
      return createRenderTask(
        request,
        thenableState2,
        task.node,
        task.childIndex,
        task.blockedBoundary,
        newSegment,
        task.blockedPreamble,
        task.hoistableState,
        task.abortSet,
        task.keyPath,
        task.formatContext,
        task.context,
        task.treeContext,
        task.componentStack,
        task.isFallback
      );
    }
    function renderNode(request, task, node, childIndex) {
      var previousFormatContext = task.formatContext, previousContext = task.context, previousKeyPath = task.keyPath, previousTreeContext = task.treeContext, previousComponentStack = task.componentStack, segment = task.blockedSegment;
      if (null === segment)
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue) {
          if (resetHooksState(), node = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedReplayTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      else {
        var childrenLength = segment.children.length, chunkLength = segment.chunks.length;
        try {
          return renderNodeDestructive(request, task, node, childIndex);
        } catch (thrownValue$48) {
          if (resetHooksState(), segment.children.length = childrenLength, segment.chunks.length = chunkLength, node = thrownValue$48 === SuspenseException ? getSuspendedThenable() : thrownValue$48, "object" === typeof node && null !== node) {
            if ("function" === typeof node.then) {
              childIndex = getThenableStateAfterSuspending();
              request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;
              node.then(request, request);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
            if ("Maximum call stack size exceeded" === node.message) {
              node = getThenableStateAfterSuspending();
              node = spawnNewSuspendedRenderTask(request, task, node);
              request.pingedTasks.push(node);
              task.formatContext = previousFormatContext;
              task.context = previousContext;
              task.keyPath = previousKeyPath;
              task.treeContext = previousTreeContext;
              task.componentStack = previousComponentStack;
              switchContext(previousContext);
              return;
            }
          }
        }
      }
      task.formatContext = previousFormatContext;
      task.context = previousContext;
      task.keyPath = previousKeyPath;
      task.treeContext = previousTreeContext;
      switchContext(previousContext);
      throw node;
    }
    function abortTaskSoft(task) {
      var boundary = task.blockedBoundary;
      task = task.blockedSegment;
      null !== task && (task.status = 3, finishedTask(this, boundary, task));
    }
    function abortRemainingReplayNodes(request$jscomp$0, boundary, nodes, slots, error, errorDigest$jscomp$0) {
      for (var i11 = 0; i11 < nodes.length; i11++) {
        var node = nodes[i11];
        if (4 === node.length)
          abortRemainingReplayNodes(
            request$jscomp$0,
            boundary,
            node[2],
            node[3],
            error,
            errorDigest$jscomp$0
          );
        else {
          node = node[5];
          var request = request$jscomp$0, errorDigest = errorDigest$jscomp$0, resumedBoundary = createSuspenseBoundary(
            request,
            /* @__PURE__ */ new Set(),
            null,
            null
          );
          resumedBoundary.parentFlushed = true;
          resumedBoundary.rootSegmentID = node;
          resumedBoundary.status = 4;
          resumedBoundary.errorDigest = errorDigest;
          resumedBoundary.parentFlushed && request.clientRenderedBoundaries.push(resumedBoundary);
        }
      }
      nodes.length = 0;
      if (null !== slots) {
        if (null === boundary) throw Error(formatProdErrorMessage(487));
        4 !== boundary.status && (boundary.status = 4, boundary.errorDigest = errorDigest$jscomp$0, boundary.parentFlushed && request$jscomp$0.clientRenderedBoundaries.push(boundary));
        if ("object" === typeof slots) for (var index in slots) delete slots[index];
      }
    }
    function abortTask(task, request, error) {
      var boundary = task.blockedBoundary, segment = task.blockedSegment;
      if (null !== segment) {
        if (6 === segment.status) return;
        segment.status = 3;
      }
      segment = getThrownInfo(task.componentStack);
      if (null === boundary) {
        if (13 !== request.status && 14 !== request.status) {
          boundary = task.replay;
          if (null === boundary) {
            logRecoverableError(request, error, segment);
            fatalError(request, error);
            return;
          }
          boundary.pendingTasks--;
          0 === boundary.pendingTasks && 0 < boundary.nodes.length && (task = logRecoverableError(request, error, segment), abortRemainingReplayNodes(
            request,
            null,
            boundary.nodes,
            boundary.slots,
            error,
            task
          ));
          request.pendingRootTasks--;
          0 === request.pendingRootTasks && completeShell(request);
        }
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (boundary.status = 4, task = logRecoverableError(request, error, segment), boundary.status = 4, boundary.errorDigest = task, untrackBoundary(request, boundary), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary)), boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
          return abortTask(fallbackTask, request, error);
        }), boundary.fallbackAbortableTasks.clear();
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function safelyEmitEarlyPreloads(request, shellComplete) {
      try {
        var renderState = request.renderState, onHeaders = renderState.onHeaders;
        if (onHeaders) {
          var headers = renderState.headers;
          if (headers) {
            renderState.headers = null;
            var linkHeader = headers.preconnects;
            headers.fontPreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.fontPreloads);
            headers.highImagePreloads && (linkHeader && (linkHeader += ", "), linkHeader += headers.highImagePreloads);
            if (!shellComplete) {
              var queueIter = renderState.styles.values(), queueStep = queueIter.next();
              b: for (; 0 < headers.remainingCapacity && !queueStep.done; queueStep = queueIter.next())
                for (var sheetIter = queueStep.value.sheets.values(), sheetStep = sheetIter.next(); 0 < headers.remainingCapacity && !sheetStep.done; sheetStep = sheetIter.next()) {
                  var sheet = sheetStep.value, props = sheet.props, key = props.href, props$jscomp$0 = sheet.props, header = getPreloadAsHeader(props$jscomp$0.href, "style", {
                    crossOrigin: props$jscomp$0.crossOrigin,
                    integrity: props$jscomp$0.integrity,
                    nonce: props$jscomp$0.nonce,
                    type: props$jscomp$0.type,
                    fetchPriority: props$jscomp$0.fetchPriority,
                    referrerPolicy: props$jscomp$0.referrerPolicy,
                    media: props$jscomp$0.media
                  });
                  if (0 <= (headers.remainingCapacity -= header.length + 2))
                    renderState.resets.style[key] = PRELOAD_NO_CREDS, linkHeader && (linkHeader += ", "), linkHeader += header, renderState.resets.style[key] = "string" === typeof props.crossOrigin || "string" === typeof props.integrity ? [props.crossOrigin, props.integrity] : PRELOAD_NO_CREDS;
                  else break b;
                }
            }
            linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});
          }
        }
      } catch (error) {
        logRecoverableError(request, error, {});
      }
    }
    function completeShell(request) {
      null === request.trackedPostpones && safelyEmitEarlyPreloads(request, true);
      null === request.trackedPostpones && preparePreamble(request);
      request.onShellError = noop3;
      request = request.onShellReady;
      request();
    }
    function completeAll(request) {
      safelyEmitEarlyPreloads(
        request,
        null === request.trackedPostpones ? true : null === request.completedRootSegment || 5 !== request.completedRootSegment.status
      );
      preparePreamble(request);
      request = request.onAllReady;
      request();
    }
    function queueCompletedSegment(boundary, segment) {
      if (0 === segment.chunks.length && 1 === segment.children.length && null === segment.children[0].boundary && -1 === segment.children[0].id) {
        var childSegment = segment.children[0];
        childSegment.id = segment.id;
        childSegment.parentFlushed = true;
        1 === childSegment.status && queueCompletedSegment(boundary, childSegment);
      } else boundary.completedSegments.push(segment);
    }
    function finishedTask(request, boundary, segment) {
      if (null === boundary) {
        if (null !== segment && segment.parentFlushed) {
          if (null !== request.completedRootSegment)
            throw Error(formatProdErrorMessage(389));
          request.completedRootSegment = segment;
        }
        request.pendingRootTasks--;
        0 === request.pendingRootTasks && completeShell(request);
      } else
        boundary.pendingTasks--, 4 !== boundary.status && (0 === boundary.pendingTasks ? (0 === boundary.status && (boundary.status = 1), null !== segment && segment.parentFlushed && 1 === segment.status && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), 1 === boundary.status && (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear(), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary.contentPreamble && preparePreamble(request))) : null !== segment && segment.parentFlushed && 1 === segment.status && (queueCompletedSegment(boundary, segment), 1 === boundary.completedSegments.length && boundary.parentFlushed && request.partialBoundaries.push(boundary)));
      request.allPendingTasks--;
      0 === request.allPendingTasks && completeAll(request);
    }
    function performWork(request$jscomp$2) {
      if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {
        var prevContext = currentActiveSnapshot, prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = HooksDispatcher;
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        var prevRequest = currentRequest;
        currentRequest = request$jscomp$2;
        var prevResumableState = currentResumableState;
        currentResumableState = request$jscomp$2.resumableState;
        try {
          var pingedTasks = request$jscomp$2.pingedTasks, i11;
          for (i11 = 0; i11 < pingedTasks.length; i11++) {
            var task = pingedTasks[i11], request = request$jscomp$2, segment = task.blockedSegment;
            if (null === segment) {
              var request$jscomp$0 = request;
              if (0 !== task.replay.pendingTasks) {
                switchContext(task.context);
                try {
                  "number" === typeof task.replay.slots ? resumeNode(
                    request$jscomp$0,
                    task,
                    task.replay.slots,
                    task.node,
                    task.childIndex
                  ) : retryNode(request$jscomp$0, task);
                  if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)
                    throw Error(formatProdErrorMessage(488));
                  task.replay.pendingTasks--;
                  task.abortSet.delete(task);
                  finishedTask(request$jscomp$0, task.blockedBoundary, null);
                } catch (thrownValue) {
                  resetHooksState();
                  var x3 = thrownValue === SuspenseException ? getSuspendedThenable() : thrownValue;
                  if ("object" === typeof x3 && null !== x3 && "function" === typeof x3.then) {
                    var ping = task.ping;
                    x3.then(ping, ping);
                    task.thenableState = getThenableStateAfterSuspending();
                  } else {
                    task.replay.pendingTasks--;
                    task.abortSet.delete(task);
                    var errorInfo = getThrownInfo(task.componentStack);
                    request = void 0;
                    var request$jscomp$1 = request$jscomp$0, boundary = task.blockedBoundary, error$jscomp$0 = 12 === request$jscomp$0.status ? request$jscomp$0.fatalError : x3, replayNodes = task.replay.nodes, resumeSlots = task.replay.slots;
                    request = logRecoverableError(
                      request$jscomp$1,
                      error$jscomp$0,
                      errorInfo
                    );
                    abortRemainingReplayNodes(
                      request$jscomp$1,
                      boundary,
                      replayNodes,
                      resumeSlots,
                      error$jscomp$0,
                      request
                    );
                    request$jscomp$0.pendingRootTasks--;
                    0 === request$jscomp$0.pendingRootTasks && completeShell(request$jscomp$0);
                    request$jscomp$0.allPendingTasks--;
                    0 === request$jscomp$0.allPendingTasks && completeAll(request$jscomp$0);
                  }
                } finally {
                }
              }
            } else if (request$jscomp$0 = void 0, request$jscomp$1 = segment, 0 === request$jscomp$1.status) {
              request$jscomp$1.status = 6;
              switchContext(task.context);
              var childrenLength = request$jscomp$1.children.length, chunkLength = request$jscomp$1.chunks.length;
              try {
                retryNode(request, task), pushSegmentFinale(
                  request$jscomp$1.chunks,
                  request.renderState,
                  request$jscomp$1.lastPushedText,
                  request$jscomp$1.textEmbedded
                ), task.abortSet.delete(task), request$jscomp$1.status = 1, finishedTask(request, task.blockedBoundary, request$jscomp$1);
              } catch (thrownValue) {
                resetHooksState();
                request$jscomp$1.children.length = childrenLength;
                request$jscomp$1.chunks.length = chunkLength;
                var x$jscomp$0 = thrownValue === SuspenseException ? getSuspendedThenable() : 12 === request.status ? request.fatalError : thrownValue;
                if ("object" === typeof x$jscomp$0 && null !== x$jscomp$0 && "function" === typeof x$jscomp$0.then) {
                  request$jscomp$1.status = 0;
                  task.thenableState = getThenableStateAfterSuspending();
                  var ping$jscomp$0 = task.ping;
                  x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);
                } else {
                  var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);
                  task.abortSet.delete(task);
                  request$jscomp$1.status = 4;
                  var boundary$jscomp$0 = task.blockedBoundary;
                  request$jscomp$0 = logRecoverableError(
                    request,
                    x$jscomp$0,
                    errorInfo$jscomp$0
                  );
                  null === boundary$jscomp$0 ? fatalError(request, x$jscomp$0) : (boundary$jscomp$0.pendingTasks--, 4 !== boundary$jscomp$0.status && (boundary$jscomp$0.status = 4, boundary$jscomp$0.errorDigest = request$jscomp$0, untrackBoundary(request, boundary$jscomp$0), boundary$jscomp$0.parentFlushed && request.clientRenderedBoundaries.push(boundary$jscomp$0), 0 === request.pendingRootTasks && null === request.trackedPostpones && null !== boundary$jscomp$0.contentPreamble && preparePreamble(request)));
                  request.allPendingTasks--;
                  0 === request.allPendingTasks && completeAll(request);
                }
              } finally {
              }
            }
          }
          pingedTasks.splice(0, i11);
          null !== request$jscomp$2.destination && flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);
        } catch (error) {
          logRecoverableError(request$jscomp$2, error, {}), fatalError(request$jscomp$2, error);
        } finally {
          currentResumableState = prevResumableState, ReactSharedInternals.H = prevDispatcher, ReactSharedInternals.A = prevAsyncDispatcher, prevDispatcher === HooksDispatcher && switchContext(prevContext), currentRequest = prevRequest;
        }
      }
    }
    function preparePreambleFromSubtree(request, segment, collectedPreambleSegments) {
      segment.preambleChildren.length && collectedPreambleSegments.push(segment.preambleChildren);
      for (var pendingPreambles = false, i11 = 0; i11 < segment.children.length; i11++)
        pendingPreambles = preparePreambleFromSegment(
          request,
          segment.children[i11],
          collectedPreambleSegments
        ) || pendingPreambles;
      return pendingPreambles;
    }
    function preparePreambleFromSegment(request, segment, collectedPreambleSegments) {
      var boundary = segment.boundary;
      if (null === boundary)
        return preparePreambleFromSubtree(
          request,
          segment,
          collectedPreambleSegments
        );
      var preamble = boundary.contentPreamble, fallbackPreamble = boundary.fallbackPreamble;
      if (null === preamble || null === fallbackPreamble) return false;
      switch (boundary.status) {
        case 1:
          hoistPreambleState(request.renderState, preamble);
          segment = boundary.completedSegments[0];
          if (!segment) throw Error(formatProdErrorMessage(391));
          return preparePreambleFromSubtree(
            request,
            segment,
            collectedPreambleSegments
          );
        case 5:
          if (null !== request.trackedPostpones) return true;
        case 4:
          if (1 === segment.status)
            return hoistPreambleState(request.renderState, fallbackPreamble), preparePreambleFromSubtree(
              request,
              segment,
              collectedPreambleSegments
            );
        default:
          return true;
      }
    }
    function preparePreamble(request) {
      if (request.completedRootSegment && null === request.completedPreambleSegments) {
        var collectedPreambleSegments = [], hasPendingPreambles = preparePreambleFromSegment(
          request,
          request.completedRootSegment,
          collectedPreambleSegments
        ), preamble = request.renderState.preamble;
        if (false === hasPendingPreambles || preamble.headChunks && preamble.bodyChunks)
          request.completedPreambleSegments = collectedPreambleSegments;
      }
    }
    function flushSubtree(request, destination, segment, hoistableState) {
      segment.parentFlushed = true;
      switch (segment.status) {
        case 0:
          segment.id = request.nextSegmentId++;
        case 5:
          return hoistableState = segment.id, segment.lastPushedText = false, segment.textEmbedded = false, request = request.renderState, destination.push('<template id="'), destination.push(request.placeholderPrefix), request = hoistableState.toString(16), destination.push(request), destination.push('"></template>');
        case 1:
          segment.status = 2;
          var r8 = true, chunks = segment.chunks, chunkIdx = 0;
          segment = segment.children;
          for (var childIdx = 0; childIdx < segment.length; childIdx++) {
            for (r8 = segment[childIdx]; chunkIdx < r8.index; chunkIdx++)
              destination.push(chunks[chunkIdx]);
            r8 = flushSegment(request, destination, r8, hoistableState);
          }
          for (; chunkIdx < chunks.length - 1; chunkIdx++)
            destination.push(chunks[chunkIdx]);
          chunkIdx < chunks.length && (r8 = destination.push(chunks[chunkIdx]));
          return r8;
        default:
          throw Error(formatProdErrorMessage(390));
      }
    }
    function flushSegment(request, destination, segment, hoistableState) {
      var boundary = segment.boundary;
      if (null === boundary)
        return flushSubtree(request, destination, segment, hoistableState);
      boundary.parentFlushed = true;
      if (4 === boundary.status) {
        if (!request.renderState.generateStaticMarkup) {
          var errorDigest = boundary.errorDigest;
          destination.push("<!--$!-->");
          destination.push("<template");
          errorDigest && (destination.push(' data-dgst="'), errorDigest = escapeTextForBrowser(errorDigest), destination.push(errorDigest), destination.push('"'));
          destination.push("></template>");
        }
        flushSubtree(request, destination, segment, hoistableState);
        request.renderState.generateStaticMarkup ? destination = true : ((request = boundary.fallbackPreamble) && writePreambleContribution(destination, request), destination = destination.push("<!--/$-->"));
        return destination;
      }
      if (1 !== boundary.status)
        return 0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++), 0 < boundary.completedSegments.length && request.partialBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), hoistableState && (boundary = boundary.fallbackState, boundary.styles.forEach(hoistStyleQueueDependency, hoistableState), boundary.stylesheets.forEach(
          hoistStylesheetDependency,
          hoistableState
        )), flushSubtree(request, destination, segment, hoistableState), destination.push("<!--/$-->");
      if (boundary.byteSize > request.progressiveChunkSize)
        return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(
          destination,
          request.renderState,
          boundary.rootSegmentID
        ), flushSubtree(request, destination, segment, hoistableState), destination.push("<!--/$-->");
      hoistableState && (segment = boundary.contentState, segment.styles.forEach(hoistStyleQueueDependency, hoistableState), segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
      request.renderState.generateStaticMarkup || destination.push("<!--$-->");
      segment = boundary.completedSegments;
      if (1 !== segment.length) throw Error(formatProdErrorMessage(391));
      flushSegment(request, destination, segment[0], hoistableState);
      request.renderState.generateStaticMarkup ? destination = true : ((request = boundary.contentPreamble) && writePreambleContribution(destination, request), destination = destination.push("<!--/$-->"));
      return destination;
    }
    function flushSegmentContainer(request, destination, segment, hoistableState) {
      writeStartSegment(
        destination,
        request.renderState,
        segment.parentFormatContext,
        segment.id
      );
      flushSegment(request, destination, segment, hoistableState);
      return writeEndSegment(destination, segment.parentFormatContext);
    }
    function flushCompletedBoundary(request, destination, boundary) {
      for (var completedSegments = boundary.completedSegments, i11 = 0; i11 < completedSegments.length; i11++)
        flushPartiallyCompletedSegment(
          request,
          destination,
          boundary,
          completedSegments[i11]
        );
      completedSegments.length = 0;
      writeHoistablesForBoundary(
        destination,
        boundary.contentState,
        request.renderState
      );
      completedSegments = request.resumableState;
      request = request.renderState;
      i11 = boundary.rootSegmentID;
      boundary = boundary.contentState;
      var requiresStyleInsertion = request.stylesToHoist;
      request.stylesToHoist = false;
      destination.push(request.startInlineScript);
      requiresStyleInsertion ? 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 10, destination.push(
        '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
      )) : 0 === (completedSegments.instructions & 8) ? (completedSegments.instructions |= 8, destination.push(
        '$RM=new Map;\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll("link[data-precedence],style[data-precedence]"),x=[],k=0;b=h[k++];)"not all"===b.getAttribute("media")?x.push(b):("LINK"===b.tagName&&p.set(b.getAttribute("href"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement("link");a.href=\nd;a.rel="stylesheet";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute("media");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute("data-precedence");a.removeAttribute("media")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\nt,u,""),w.bind(null,t,u,"Resource failed to load"))};$RR("'
      )) : destination.push('$RR("') : 0 === (completedSegments.instructions & 2) ? (completedSegments.instructions |= 2, destination.push(
        '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data="$!",a.setAttribute("data-dgst",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if("/$"===d)if(0===f)break;else f--;else"$"!==d&&"$?"!==d&&"$!"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data="$"}b._reactRetry&&b._reactRetry()}};$RC("'
      )) : destination.push('$RC("');
      completedSegments = i11.toString(16);
      destination.push(request.boundaryPrefix);
      destination.push(completedSegments);
      destination.push('","');
      destination.push(request.segmentPrefix);
      destination.push(completedSegments);
      requiresStyleInsertion ? (destination.push('",'), writeStyleResourceDependenciesInJS(destination, boundary)) : destination.push('"');
      boundary = destination.push(")</script>");
      return writeBootstrap(destination, request) && boundary;
    }
    function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
      if (2 === segment.status) return true;
      var hoistableState = boundary.contentState, segmentID = segment.id;
      if (-1 === segmentID) {
        if (-1 === (segment.id = boundary.rootSegmentID))
          throw Error(formatProdErrorMessage(392));
        return flushSegmentContainer(request, destination, segment, hoistableState);
      }
      if (segmentID === boundary.rootSegmentID)
        return flushSegmentContainer(request, destination, segment, hoistableState);
      flushSegmentContainer(request, destination, segment, hoistableState);
      boundary = request.resumableState;
      request = request.renderState;
      destination.push(request.startInlineScript);
      0 === (boundary.instructions & 1) ? (boundary.instructions |= 1, destination.push(
        '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'
      )) : destination.push('$RS("');
      destination.push(request.segmentPrefix);
      segmentID = segmentID.toString(16);
      destination.push(segmentID);
      destination.push('","');
      destination.push(request.placeholderPrefix);
      destination.push(segmentID);
      destination = destination.push('")</script>');
      return destination;
    }
    function flushCompletedQueues(request, destination) {
      try {
        if (!(0 < request.pendingRootTasks)) {
          var i11, completedRootSegment = request.completedRootSegment;
          if (null !== completedRootSegment) {
            if (5 === completedRootSegment.status) return;
            var completedPreambleSegments = request.completedPreambleSegments;
            if (null === completedPreambleSegments) return;
            var renderState = request.renderState, preamble = renderState.preamble, htmlChunks = preamble.htmlChunks, headChunks = preamble.headChunks, i$jscomp$0;
            if (htmlChunks) {
              for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
                destination.push(htmlChunks[i$jscomp$0]);
              if (headChunks)
                for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                  destination.push(headChunks[i$jscomp$0]);
              else {
                var chunk2 = startChunkForTag("head");
                destination.push(chunk2);
                destination.push(">");
              }
            } else if (headChunks)
              for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)
                destination.push(headChunks[i$jscomp$0]);
            var charsetChunks = renderState.charsetChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)
              destination.push(charsetChunks[i$jscomp$0]);
            charsetChunks.length = 0;
            renderState.preconnects.forEach(flushResource, destination);
            renderState.preconnects.clear();
            var viewportChunks = renderState.viewportChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)
              destination.push(viewportChunks[i$jscomp$0]);
            viewportChunks.length = 0;
            renderState.fontPreloads.forEach(flushResource, destination);
            renderState.fontPreloads.clear();
            renderState.highImagePreloads.forEach(flushResource, destination);
            renderState.highImagePreloads.clear();
            renderState.styles.forEach(flushStylesInPreamble, destination);
            var importMapChunks = renderState.importMapChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)
              destination.push(importMapChunks[i$jscomp$0]);
            importMapChunks.length = 0;
            renderState.bootstrapScripts.forEach(flushResource, destination);
            renderState.scripts.forEach(flushResource, destination);
            renderState.scripts.clear();
            renderState.bulkPreloads.forEach(flushResource, destination);
            renderState.bulkPreloads.clear();
            var hoistableChunks = renderState.hoistableChunks;
            for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
              destination.push(hoistableChunks[i$jscomp$0]);
            for (renderState = hoistableChunks.length = 0; renderState < completedPreambleSegments.length; renderState++) {
              var segments = completedPreambleSegments[renderState];
              for (preamble = 0; preamble < segments.length; preamble++)
                flushSegment(request, destination, segments[preamble], null);
            }
            var preamble$jscomp$0 = request.renderState.preamble, headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
            if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
              var chunk$jscomp$0 = endChunkForTag("head");
              destination.push(chunk$jscomp$0);
            }
            var bodyChunks = preamble$jscomp$0.bodyChunks;
            if (bodyChunks)
              for (completedPreambleSegments = 0; completedPreambleSegments < bodyChunks.length; completedPreambleSegments++)
                destination.push(bodyChunks[completedPreambleSegments]);
            flushSegment(request, destination, completedRootSegment, null);
            request.completedRootSegment = null;
            writeBootstrap(destination, request.renderState);
          }
          var renderState$jscomp$0 = request.renderState;
          completedRootSegment = 0;
          var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;
          for (completedRootSegment = 0; completedRootSegment < viewportChunks$jscomp$0.length; completedRootSegment++)
            destination.push(viewportChunks$jscomp$0[completedRootSegment]);
          viewportChunks$jscomp$0.length = 0;
          renderState$jscomp$0.preconnects.forEach(flushResource, destination);
          renderState$jscomp$0.preconnects.clear();
          renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.fontPreloads.clear();
          renderState$jscomp$0.highImagePreloads.forEach(
            flushResource,
            destination
          );
          renderState$jscomp$0.highImagePreloads.clear();
          renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);
          renderState$jscomp$0.scripts.forEach(flushResource, destination);
          renderState$jscomp$0.scripts.clear();
          renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);
          renderState$jscomp$0.bulkPreloads.clear();
          var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;
          for (completedRootSegment = 0; completedRootSegment < hoistableChunks$jscomp$0.length; completedRootSegment++)
            destination.push(hoistableChunks$jscomp$0[completedRootSegment]);
          hoistableChunks$jscomp$0.length = 0;
          var clientRenderedBoundaries = request.clientRenderedBoundaries;
          for (i11 = 0; i11 < clientRenderedBoundaries.length; i11++) {
            var boundary = clientRenderedBoundaries[i11];
            renderState$jscomp$0 = destination;
            var resumableState = request.resumableState, renderState$jscomp$1 = request.renderState, id5 = boundary.rootSegmentID, errorDigest = boundary.errorDigest;
            renderState$jscomp$0.push(renderState$jscomp$1.startInlineScript);
            0 === (resumableState.instructions & 4) ? (resumableState.instructions |= 4, renderState$jscomp$0.push(
              '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX("'
            )) : renderState$jscomp$0.push('$RX("');
            renderState$jscomp$0.push(renderState$jscomp$1.boundaryPrefix);
            var chunk$jscomp$1 = id5.toString(16);
            renderState$jscomp$0.push(chunk$jscomp$1);
            renderState$jscomp$0.push('"');
            if (errorDigest) {
              renderState$jscomp$0.push(",");
              var chunk$jscomp$2 = escapeJSStringsForInstructionScripts(
                errorDigest || ""
              );
              renderState$jscomp$0.push(chunk$jscomp$2);
            }
            var JSCompiler_inline_result = renderState$jscomp$0.push(")</script>");
            if (!JSCompiler_inline_result) {
              request.destination = null;
              i11++;
              clientRenderedBoundaries.splice(0, i11);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i11);
          var completedBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < completedBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, completedBoundaries[i11])) {
              request.destination = null;
              i11++;
              completedBoundaries.splice(0, i11);
              return;
            }
          completedBoundaries.splice(0, i11);
          var partialBoundaries = request.partialBoundaries;
          for (i11 = 0; i11 < partialBoundaries.length; i11++) {
            var boundary$51 = partialBoundaries[i11];
            a: {
              clientRenderedBoundaries = request;
              boundary = destination;
              var completedSegments = boundary$51.completedSegments;
              for (JSCompiler_inline_result = 0; JSCompiler_inline_result < completedSegments.length; JSCompiler_inline_result++)
                if (!flushPartiallyCompletedSegment(
                  clientRenderedBoundaries,
                  boundary,
                  boundary$51,
                  completedSegments[JSCompiler_inline_result]
                )) {
                  JSCompiler_inline_result++;
                  completedSegments.splice(0, JSCompiler_inline_result);
                  var JSCompiler_inline_result$jscomp$0 = false;
                  break a;
                }
              completedSegments.splice(0, JSCompiler_inline_result);
              JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(
                boundary,
                boundary$51.contentState,
                clientRenderedBoundaries.renderState
              );
            }
            if (!JSCompiler_inline_result$jscomp$0) {
              request.destination = null;
              i11++;
              partialBoundaries.splice(0, i11);
              return;
            }
          }
          partialBoundaries.splice(0, i11);
          var largeBoundaries = request.completedBoundaries;
          for (i11 = 0; i11 < largeBoundaries.length; i11++)
            if (!flushCompletedBoundary(request, destination, largeBoundaries[i11])) {
              request.destination = null;
              i11++;
              largeBoundaries.splice(0, i11);
              return;
            }
          largeBoundaries.splice(0, i11);
        }
      } finally {
        0 === request.allPendingTasks && 0 === request.pingedTasks.length && 0 === request.clientRenderedBoundaries.length && 0 === request.completedBoundaries.length && (request.flushScheduled = false, i11 = request.resumableState, i11.hasBody && (partialBoundaries = endChunkForTag("body"), destination.push(partialBoundaries)), i11.hasHtml && (i11 = endChunkForTag("html"), destination.push(i11)), request.status = 14, destination.push(null), request.destination = null);
      }
    }
    function enqueueFlush(request) {
      if (false === request.flushScheduled && 0 === request.pingedTasks.length && null !== request.destination) {
        request.flushScheduled = true;
        var destination = request.destination;
        destination ? flushCompletedQueues(request, destination) : request.flushScheduled = false;
      }
    }
    function startFlowing(request, destination) {
      if (13 === request.status)
        request.status = 14, destination.destroy(request.fatalError);
      else if (14 !== request.status && null === request.destination) {
        request.destination = destination;
        try {
          flushCompletedQueues(request, destination);
        } catch (error) {
          logRecoverableError(request, error, {}), fatalError(request, error);
        }
      }
    }
    function abort(request, reason) {
      if (11 === request.status || 10 === request.status) request.status = 12;
      try {
        var abortableTasks = request.abortableTasks;
        if (0 < abortableTasks.size) {
          var error = void 0 === reason ? Error(formatProdErrorMessage(432)) : "object" === typeof reason && null !== reason && "function" === typeof reason.then ? Error(formatProdErrorMessage(530)) : reason;
          request.fatalError = error;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, error);
          });
          abortableTasks.clear();
        }
        null !== request.destination && flushCompletedQueues(request, request.destination);
      } catch (error$53) {
        logRecoverableError(request, error$53, {}), fatalError(request, error$53);
      }
    }
    function onError() {
    }
    function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
      var didFatal = false, fatalError2 = null, result = "", readyToStream = false;
      options = createResumableState(options ? options.identifierPrefix : void 0);
      children = createRequest(
        children,
        options,
        createRenderState(options, generateStaticMarkup),
        createFormatContext(0, null, 0),
        Infinity,
        onError,
        void 0,
        function() {
          readyToStream = true;
        },
        void 0,
        void 0,
        void 0
      );
      children.flushScheduled = null !== children.destination;
      performWork(children);
      10 === children.status && (children.status = 11);
      null === children.trackedPostpones && safelyEmitEarlyPreloads(children, 0 === children.pendingRootTasks);
      abort(children, abortReason);
      startFlowing(children, {
        push: function(chunk2) {
          null !== chunk2 && (result += chunk2);
          return true;
        },
        destroy: function(error) {
          didFatal = true;
          fatalError2 = error;
        }
      });
      if (didFatal && fatalError2 !== abortReason) throw fatalError2;
      if (!readyToStream) throw Error(formatProdErrorMessage(426));
      return result;
    }
    exports.renderToStaticMarkup = function(children, options) {
      return renderToStringImpl(
        children,
        options,
        true,
        'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
      );
    };
    exports.renderToString = function(children, options) {
      return renderToStringImpl(
        children,
        options,
        false,
        'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
      );
    };
    exports.version = "19.1.0";
  }
});

// node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/server.edge.js
var require_server_edge = __commonJS({
  "node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/server.edge.js"(exports) {
    "use strict";
    var b4;
    var l9;
    if (true) {
      b4 = require_react_dom_server_edge_production();
      l9 = require_react_dom_server_legacy_browser_production();
    } else {
      b4 = null;
      l9 = null;
    }
    exports.version = b4.version;
    exports.renderToReadableStream = b4.renderToReadableStream;
    exports.renderToString = l9.renderToString;
    exports.renderToStaticMarkup = l9.renderToStaticMarkup;
    if (b4.resume) {
      exports.resume = b4.resume;
    }
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/renderToWebStream.js
var require_renderToWebStream = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/renderToStream/renderToWebStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.renderToWebStream = void 0;
    var createReadableWrapper_1 = require_createReadableWrapper();
    var common_1 = require_common();
    var server_1 = require_server_node();
    var utils_1 = require_utils2();
    async function renderToWebStream(element, disable, options, doNotClosePromise, setAbortFn, clearTimeouts) {
      var _a;
      (0, common_1.debugFlow)("creating Web Stream Pipe");
      (0, utils_1.assertVersion)("React", server_1.version, "19.0.0");
      const { renderToReadableStream: renderToReadableStream_ } = await Promise.resolve().then(() => __toESM(require_server_edge()));
      const controller = new AbortController();
      setAbortFn(() => {
        controller.abort();
      });
      let didError = false;
      let firstErr = null;
      let reactBug = null;
      const onError = (err) => {
        didError = true;
        firstErr = firstErr || err;
        (0, common_1.afterReactBugCatch)(() => {
          var _a2;
          if (err !== reactBug) {
            (_a2 = options.onBoundaryError) === null || _a2 === void 0 ? void 0 : _a2.call(options, err);
          }
        });
      };
      const renderToReadableStream = (_a = options.renderToReadableStream) !== null && _a !== void 0 ? _a : renderToReadableStream_;
      if (!options.renderToReadableStream) {
        (0, common_1.assertReactImport)(renderToReadableStream, "renderToReadableStream");
      }
      const readableOriginal = await renderToReadableStream(element, Object.assign({ onError, signal: controller.signal }, options.streamOptions));
      const { allReady } = readableOriginal;
      let promiseResolved = false;
      allReady.catch((err) => {
        (0, common_1.debugFlow)("react bug");
        didError = true;
        firstErr = firstErr || err;
        reactBug = err;
        if (reactBug !== firstErr || promiseResolved) {
          console.error(reactBug);
        }
      });
      if (didError)
        throw firstErr;
      if (disable)
        await allReady;
      if (didError)
        throw firstErr;
      const { readableForUser, streamEnd, injectToStream, hasStreamEnded } = (0, createReadableWrapper_1.createReadableWrapper)(readableOriginal, clearTimeouts, doNotClosePromise);
      promiseResolved = true;
      return {
        readable: readableForUser,
        pipe: null,
        abort: controller.abort,
        streamEnd: (0, common_1.wrapStreamEnd)(streamEnd, didError),
        injectToStream,
        hasStreamEnded
      };
    }
    exports.renderToWebStream = renderToWebStream;
  }
});

// node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/index.node-and-web.js
var require_index_node_and_web = __commonJS({
  "node_modules/.pnpm/react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-streaming/dist/cjs/server/index.node-and-web.js"(exports) {
    "use strict";
    var __createBinding2 = exports && exports.__createBinding || (Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    });
    var __exportStar2 = exports && exports.__exportStar || function(m11, exports2) {
      for (var p13 in m11) if (p13 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p13)) __createBinding2(exports2, m11, p13);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar2(require_server(), exports);
    var renderToNodeStream_1 = require_renderToNodeStream();
    var renderToStream_1 = require_renderToStream();
    (0, renderToStream_1.renderToNodeStream_set)(renderToNodeStream_1.renderToNodeStream);
    var renderToWebStream_1 = require_renderToWebStream();
    var renderToStream_2 = require_renderToStream();
    (0, renderToStream_2.renderToWebStream_set)(renderToWebStream_1.renderToWebStream);
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/getGlobalObject.js
function getGlobalObject2(key, defaultValue2) {
  const globalObjectsAll = globalThis[projectKey] = globalThis[projectKey] || {};
  const globalObject11 = globalObjectsAll[key] = globalObjectsAll[key] || defaultValue2;
  return globalObject11;
}
var projectKey;
var init_getGlobalObject2 = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/getGlobalObject.js"() {
    projectKey = "_vike_react";
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/hooks/usePageContext.js
function PageContextProvider({ pageContext, children }) {
  const { reactContext } = globalObject8;
  return import_react.default.createElement(reactContext.Provider, { value: pageContext }, children);
}
function usePageContext() {
  const { reactContext } = globalObject8;
  const pageContext = (0, import_react.useContext)(reactContext);
  return pageContext;
}
var import_react, globalObject8;
var init_usePageContext = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/hooks/usePageContext.js"() {
    import_react = __toESM(require_react(), 1);
    init_getGlobalObject2();
    globalObject8 = getGlobalObject2("PageContextProvider.ts", {
      reactContext: import_react.default.createContext(void 0)
    });
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/isCallable.js
function isCallable2(thing) {
  return thing instanceof Function || typeof thing === "function";
}
var init_isCallable2 = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/isCallable.js"() {
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/hooks/useConfig/configsCumulative.js
var configsCumulative;
var init_configsCumulative = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/hooks/useConfig/configsCumulative.js"() {
    configsCumulative = ["Head", "bodyAttributes", "htmlAttributes"];
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/includes.js
function includes(values2, x3) {
  return values2.includes(x3);
}
var init_includes = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/includes.js"() {
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/getHeadSetting.js
function getHeadSetting(configName, pageContext) {
  const valFromUseConfig = pageContext._configFromHook?.[configName];
  const valFromConfig = pageContext.config[configName];
  const getCallable = (val) => isCallable2(val) ? val(pageContext) : val;
  if (!includes(configsCumulative, configName)) {
    if (valFromUseConfig !== void 0)
      return valFromUseConfig;
    return getCallable(valFromConfig);
  } else {
    return [
      //
      ...(valFromConfig ?? []).map(getCallable),
      ...valFromUseConfig ?? []
    ];
  }
}
var init_getHeadSetting = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/getHeadSetting.js"() {
    init_isCallable2();
    init_configsCumulative();
    init_includes();
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/getPageElement.js
function getPageElement(pageContext) {
  const { Page: Page3, config: { Loading } } = pageContext;
  let page = Page3 ? import_react2.default.createElement(Page3, null) : null;
  const addSuspense = (el) => {
    if (!Loading?.layout)
      return el;
    return import_react2.default.createElement(import_react2.Suspense, { fallback: import_react2.default.createElement(Loading.layout, null) }, page);
  };
  page = addSuspense(page);
  [
    // Inner wrapping
    ...pageContext.config.Layout || [],
    // Outer wrapping
    ...pageContext.config.Wrapper || []
  ].forEach((Wrap) => {
    page = import_react2.default.createElement(Wrap, null, page);
    page = addSuspense(page);
  });
  page = import_react2.default.createElement(PageContextProvider, { pageContext }, page);
  let renderPromiseResolve;
  let renderPromise = new Promise((r8) => renderPromiseResolve = r8);
  page = import_react2.default.createElement(RenderPromiseProvider, { renderPromiseResolve }, page);
  if (pageContext.config.reactStrictMode !== false) {
    page = import_react2.default.createElement(import_react2.default.StrictMode, null, page);
  }
  return { page, renderPromise };
}
function RenderPromiseProvider({ children, renderPromiseResolve }) {
  (0, import_react2.useEffect)(renderPromiseResolve);
  return children;
}
var import_react2;
var init_getPageElement = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/getPageElement.js"() {
    import_react2 = __toESM(require_react(), 1);
    init_usePageContext();
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/isReactElement.js
function isReactElement(value) {
  return (0, import_react3.isValidElement)(value) || Array.isArray(value);
}
var import_react3;
var init_isReactElement = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/isReactElement.js"() {
    import_react3 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/getTagAttributesString.js
function getTagAttributesString(tagAttributes) {
  const tagAttributesString = Object.entries(tagAttributes).filter(([_key, value]) => value !== false && value !== null && value !== void 0).map(([key, value]) => `${ensureIsValidAttributeName(key)}=${JSON.stringify(String(value))}`).join(" ");
  if (tagAttributesString.length === 0)
    return "";
  return ` ${tagAttributesString}`;
}
function ensureIsValidAttributeName(str) {
  if (/^[a-z][a-z0-9\-]*$/i.test(str) && !str.endsWith("-"))
    return str;
  throw new Error(`Invalid HTML tag attribute name ${JSON.stringify(str)}`);
}
var init_getTagAttributesString = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/getTagAttributesString.js"() {
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/assert.js
function assert3(condition) {
  if (condition)
    return;
  throw new Error("You stumbled upon a vike-react bug, reach out on GitHub.");
}
var init_assert3 = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/assert.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContext.js
var init_getPageContext = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContext.js"() {
    init_executeHook();
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/callCumulativeHooks.js
async function callCumulativeHooks(values2, pageContext) {
  if (!values2)
    return [];
  const valuesPromises = values2.map((val) => {
    if (isCallable2(val)) {
      providePageContext(pageContext);
      return val(pageContext);
    } else {
      return val;
    }
  });
  const valuesResolved = await Promise.all(valuesPromises);
  return valuesResolved;
}
var init_callCumulativeHooks = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/callCumulativeHooks.js"() {
    init_getPageContext();
    init_isCallable2();
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/objectEntries.js
function objectEntries(obj) {
  return Object.entries(obj);
}
var init_objectEntries2 = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/utils/objectEntries.js"() {
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/resolveReactOptions.js
function resolveReactOptions(pageContext) {
  const optionsAcc = {};
  (pageContext.config.react ?? []).forEach((valUnresolved) => {
    const optionList = isCallable2(valUnresolved) ? valUnresolved(pageContext) : valUnresolved;
    if (!optionList)
      return;
    objectEntries(optionList).forEach(([fnName, options]) => {
      if (!options)
        return;
      optionsAcc[fnName] ?? (optionsAcc[fnName] = {});
      objectEntries(options).forEach(([key, val]) => {
        var _a;
        if (!isCallable2(val)) {
          (_a = optionsAcc[fnName])[key] ?? (_a[key] = val);
        } else {
          const valPrevious = optionsAcc[fnName][key];
          optionsAcc[fnName][key] = (...args) => {
            valPrevious?.(...args);
            val(...args);
          };
        }
      });
    });
  });
  return optionsAcc;
}
var init_resolveReactOptions = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/resolveReactOptions.js"() {
    init_isCallable2();
    init_objectEntries2();
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/onRenderHtml.js
async function renderPageToHtml(pageContext) {
  if (pageContext.Page)
    pageContext.page = getPageElement(pageContext).page;
  await callCumulativeHooks(pageContext.config.onBeforeRenderHtml, pageContext);
  const { renderToStringOptions } = resolveReactOptions(pageContext);
  if (pageContext.page) {
    const { stream, streamIsRequired } = pageContext.config;
    if (!stream && !streamIsRequired) {
      const pageHtmlString = (0, import_server.renderToString)(pageContext.page, renderToStringOptions);
      pageContext.pageHtmlString = pageHtmlString;
    } else {
      const pageHtmlStream = await (0, import_server2.renderToStream)(pageContext.page, {
        webStream: typeof stream === "string" ? stream === "web" : void 0,
        userAgent: pageContext.headers?.["user-agent"] || // TODO/eventually: remove old way of acccessing the User Agent header.
        // @ts-ignore
        pageContext.userAgent,
        disable: stream === false ? true : void 0
      });
      pageContext.pageHtmlStream = pageHtmlStream;
    }
  }
  await callCumulativeHooks(pageContext.config.onAfterRenderHtml, pageContext);
}
function getHeadHtml(pageContext) {
  pageContext._headAlreadySet = true;
  const favicon = getHeadSetting("favicon", pageContext);
  const title8 = getHeadSetting("title", pageContext);
  const description4 = getHeadSetting("description", pageContext);
  const image5 = getHeadSetting("image", pageContext);
  const faviconTag = !favicon ? "" : escapeInject`<link rel="icon" href="${favicon}" />`;
  const titleTags = !title8 ? "" : escapeInject`<title>${title8}</title><meta property="og:title" content="${title8}" />`;
  const descriptionTags = !description4 ? "" : escapeInject`<meta name="description" content="${description4}" /><meta property="og:description" content="${description4}" />`;
  const imageTags = !image5 ? "" : escapeInject`<meta property="og:image" content="${image5}"><meta name="twitter:card" content="summary_large_image">`;
  const viewportTag = dangerouslySkipEscape(getViewportTag(getHeadSetting("viewport", pageContext)));
  const headElementsHtml = dangerouslySkipEscape([
    // Added by +Head
    ...pageContext.config.Head ?? [],
    // Added by useConfig()
    ...pageContext._configFromHook?.Head ?? []
  ].filter((Head) => Head !== null && Head !== void 0).map((Head) => getHeadElementHtml(Head, pageContext)).join("\n"));
  const headHtml = escapeInject`
    ${titleTags}
    ${viewportTag}
    ${headElementsHtml}
    ${faviconTag}
    ${descriptionTags}
    ${imageTags}
  `;
  return headHtml;
}
function getHeadElementHtml(Head, pageContext) {
  let headElement;
  if (isReactElement(Head)) {
    headElement = Head;
  } else {
    headElement = import_react4.default.createElement(
      PageContextProvider,
      { pageContext },
      import_react4.default.createElement(Head, null)
    );
  }
  if (pageContext.config.reactStrictMode !== false) {
    headElement = import_react4.default.createElement(import_react4.default.StrictMode, null, headElement);
  }
  return (0, import_server.renderToStaticMarkup)(headElement);
}
function getTagAttributes(pageContext) {
  let lang = getHeadSetting("lang", pageContext);
  if (lang === void 0)
    lang = "en";
  const bodyAttributes = mergeTagAttributesList(getHeadSetting("bodyAttributes", pageContext));
  const htmlAttributes = mergeTagAttributesList(getHeadSetting("htmlAttributes", pageContext));
  const bodyAttributesString = getTagAttributesString(bodyAttributes);
  const htmlAttributesString = getTagAttributesString({ ...htmlAttributes, lang: lang ?? htmlAttributes.lang });
  return { htmlAttributesString, bodyAttributesString };
}
function mergeTagAttributesList(tagAttributesList = []) {
  const tagAttributes = {};
  tagAttributesList.forEach((tagAttrs) => Object.assign(tagAttributes, tagAttrs));
  return tagAttributes;
}
function getViewportTag(viewport) {
  if (viewport === "responsive" || viewport === void 0) {
    return '<meta name="viewport" content="width=device-width,initial-scale=1">';
  }
  if (typeof viewport === "number") {
    return `<meta name="viewport" content="width=${viewport}">`;
  }
  return "";
}
function addEcosystemStamp2() {
  const g9 = globalThis;
  g9._isVikeReactApp = /* Don't set to true so that consumers do `!!globalThis._isVikeApp` instead of `globalThis._isVikeApp === true`.
  true
  */
  // We use an object so that we can eventually, in the future, add helpful information as needed. (E.g. the vike-react version.)
  {};
}
async function getBodyHtmlBoundary(pageContext) {
  const bodyHtmlBegin = dangerouslySkipEscape((await callCumulativeHooks(pageContext.config.bodyHtmlBegin, pageContext)).join(""));
  const bodyHtmlEnd = dangerouslySkipEscape((await callCumulativeHooks(pageContext.config.bodyHtmlEnd, pageContext)).join(""));
  return { bodyHtmlBegin, bodyHtmlEnd };
}
var import_react4, import_server, import_server2, onRenderHtml;
var init_onRenderHtml = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/onRenderHtml.js"() {
    import_react4 = __toESM(require_react(), 1);
    import_server = __toESM(require_server_node(), 1);
    import_server2 = __toESM(require_index_node_and_web(), 1);
    init_runtime2();
    init_usePageContext();
    init_getHeadSetting();
    init_getPageElement();
    init_isReactElement();
    init_getTagAttributesString();
    init_assert3();
    init_callCumulativeHooks();
    init_resolveReactOptions();
    addEcosystemStamp2();
    onRenderHtml = async (pageContext) => {
      await renderPageToHtml(pageContext);
      const headHtml = getHeadHtml(pageContext);
      const { bodyHtmlBegin, bodyHtmlEnd } = await getBodyHtmlBoundary(pageContext);
      const { htmlAttributesString, bodyAttributesString } = getTagAttributes(pageContext);
      delete pageContext._configFromHook;
      let pageHtmlStringOrStream = (
        // Set to empty string if SSR is disabled
        ""
      );
      if (pageContext.pageHtmlString) {
        assert3(pageContext.pageHtmlStream === void 0);
        pageHtmlStringOrStream = dangerouslySkipEscape(pageContext.pageHtmlString);
      }
      if (pageContext.pageHtmlStream) {
        assert3(pageContext.pageHtmlString === void 0);
        pageHtmlStringOrStream = pageContext.pageHtmlStream;
      }
      return escapeInject`<!DOCTYPE html>
    <html${dangerouslySkipEscape(htmlAttributesString)}>
      <head>
        <meta charset="UTF-8" />
        ${headHtml}
      </head>
      <body${dangerouslySkipEscape(bodyAttributesString)}>
        ${bodyHtmlBegin}
        <div id="root">${pageHtmlStringOrStream}</div>
        ${bodyHtmlEnd}
      </body>
    </html>`;
    };
  }
});

// node_modules/.pnpm/effector@23.3.0/node_modules/effector/effector.mjs
function e(e12, t13) {
  for (const r8 in e12) t13(e12[r8], r8);
}
function t(e12, t13) {
  e12.forEach(t13);
}
function r(e12, t13, r8) {
  if (!e12) throw Error(`${r8 ? r8 + ": " : ""}${t13}`);
}
function n(e12, t13) {
  const r8 = _(e12), n12 = r8.meta || {};
  re(e12) || (n12.isRegion = 1), ye = { id: r8.id, parent: ye, value: e12, template: n12.template || be(), sidRoot: n12.sidRoot || ye && ye.sidRoot, meta: n12 };
  try {
    return t13();
  } finally {
    ve("region"), ye = H(ye);
  }
}
function a({ node: e12 = [], from: r8, source: n12, parent: a12 = r8 || n12, to: o6, target: s37, child: i11 = o6 || s37, scope: c13 = {}, meta: l9 = {}, family: d6 = { type: "regular" }, regional: u4 } = {}) {
  const f11 = $e(a12), p13 = $e(d6.links), m11 = $e(d6.owners), g9 = [];
  t(e12, (e13) => e13 && ie(g9, e13));
  const h8 = { id: pe(), seq: g9, next: $e(i11), meta: l9, scope: c13, family: { triggers: f11.length, type: d6.type || "crosslink", links: p13, owners: m11 } };
  return t(p13, (e13) => ie(V(e13), h8)), t(m11, (e13) => ie(L(e13), h8)), t(f11, (e13) => ie(e13.next, h8)), u4 && ye && Se(W(ye), [h8]), h8;
}
function o(e12, r8, n12) {
  let a12, o6 = ot, s37 = null, i11 = tt;
  if (e12.target && (r8 = e12.params, n12 = e12.defer, a12 = e12.meta, o6 = "page" in e12 ? e12.page : o6, e12.stack && (s37 = e12.stack), i11 = U(e12) || i11, e12 = e12.target), i11 && tt && i11 !== tt && (tt = null), Array.isArray(e12)) for (let t13 = 0; t13 < e12.length; t13++) Xe("pure", o6, _(e12[t13]), s37, r8[t13], i11, a12);
  else Xe("pure", o6, _(e12), s37, r8, i11, a12);
  if (n12 && !rt) return;
  const c13 = { isRoot: rt, currentPage: ot, scope: tt, isWatch: nt, isPure: at };
  let l9, d6, u4, f11, p13, m11;
  rt = 0;
  e: for (; f11 = Qe(); ) {
    const { idx: e13, stack: r9, type: n13 } = f11;
    u4 = r9.node, ot = p13 = r9.page, tt = U(r9), p13 ? m11 = p13.reg : tt && (m11 = tt.reg);
    const a13 = !!p13, o7 = !!tt, s38 = { fail: 0, scope: u4.scope };
    l9 = d6 = 0;
    for (let t13 = e13; t13 < u4.seq.length && !l9; t13++) {
      const i12 = u4.seq[t13];
      if (i12.order) {
        const { priority: a14, barrierID: o8 } = i12.order, s39 = o8 ? p13 ? `${p13.fullID}_${o8}` : o8 : 0;
        if (t13 !== e13 || n13 !== a14) {
          o8 ? et.has(s39) || (et.add(s39), Ye(t13, r9, a14, o8)) : Ye(t13, r9, a14, 0);
          continue e;
        }
        o8 && et.delete(s39);
      }
      switch (i12.type) {
        case "mov": {
          const e15 = i12.data;
          let t14;
          switch (e15.from) {
            case "stack":
              t14 = W(r9);
              break;
            case "a":
            case "b":
              t14 = r9[e15.from];
              break;
            case "value":
              t14 = e15.store;
              break;
            case "store":
              if (m11 && !m11[e15.store.id]) if (a13) {
                const t15 = lt(p13, e15.store.id);
                r9.page = p13 = t15, t15 ? m11 = t15.reg : o7 ? (mt(tt, e15.store, 0, 1, e15.softRead), m11 = tt.reg) : m11 = void 0;
              } else o7 && mt(tt, e15.store, 0, 1, e15.softRead);
              t14 = We(m11 && m11[e15.store.id] || e15.store);
          }
          switch (e15.to) {
            case "stack":
              r9.value = t14;
              break;
            case "a":
            case "b":
              r9[e15.to] = t14;
              break;
            case "store":
              dt(p13, tt, e15.target, 0).current = t14;
          }
          break;
        }
        case "compute":
          const e14 = i12.data;
          if (e14.fn) {
            nt = "watch" === u4.meta.op, at = e14.pure;
            const t14 = e14.safe ? (0, e14.fn)(W(r9), s38.scope, r9) : gt(s38, e14.fn, r9);
            e14.filter ? d6 = !t14 : r9.value = t14, nt = c13.isWatch, at = c13.isPure;
          }
      }
      l9 = s38.fail || d6;
    }
    if (ut && ut(r9, s38), !l9) {
      const e14 = W(r9), n14 = U(r9);
      if (t(u4.next, (t13) => {
        Xe("child", p13, t13, r9, e14, n14);
      }), n14) {
        u4.meta.needFxCounter && Xe("child", p13, n14.fxCount, r9, e14, n14), u4.meta.storeChange && Xe("child", p13, n14.storeChange, r9, e14, n14), u4.meta.warnSerialize && Xe("child", p13, n14.warnSerializeNode, r9, e14, n14);
        const a14 = n14.additionalLinks[u4.id];
        a14 && t(a14, (t13) => {
          Xe("child", p13, t13, r9, e14, n14);
        });
      }
    }
  }
  rt = c13.isRoot, ot = c13.currentPage, tt = U(c13);
}
function s(t13, r8 = "combine") {
  let n12 = r8 + "(", a12 = "", o6 = 0;
  return e(t13, (e12) => {
    o6 < 25 && (null != e12 && (n12 += a12, n12 += Q(e12) ? K(e12).fullName : e12.toString()), o6 += 1, a12 = ", ");
  }), n12 + ")";
}
function c(e12, t13) {
  let r8, n12;
  const a12 = e12;
  if (t13) {
    const a13 = K(t13);
    0 === e12.length ? (r8 = a13.path, n12 = a13.fullName) : (r8 = a13.path.concat([e12]), n12 = 0 === a13.fullName.length ? e12 : a13.fullName + "/" + e12);
  } else r8 = 0 === e12.length ? [] : [e12], n12 = e12;
  return { shortName: a12, fullName: n12, path: r8 };
}
function l(e12, t13) {
  if (!t13) return e12;
  if (!t13.name && !t13.named && !t13.loc) return e12;
  let r8 = `[${e12}]`;
  const n12 = t13.named || t13.name;
  n12 && (r8 += ` unit '${n12}'`);
  const a12 = t13.loc;
  return !n12 && a12 && (r8 += ` (${a12.file}:${a12.line}:${a12.column})`), r8;
}
function d(e12, t13) {
  const r8 = t13 ? e12 : e12[0];
  Ae(r8);
  let n12 = r8.or;
  const a12 = r8.and;
  if (a12) {
    const r9 = t13 ? a12 : a12[0];
    if (Me(r9) && "and" in r9) {
      const r10 = d(a12, t13);
      e12 = r10[0], n12 = { ...n12, ...r10[1] };
    } else e12 = a12;
  }
  return [e12, n12];
}
function u(e12) {
  const t13 = () => e12();
  return t13.unsubscribe = () => e12(), t13;
}
function f(e12, ...t13) {
  const r8 = be();
  if (r8) {
    const n12 = r8.handlers[e12];
    if (n12) return n12(r8, ...t13);
  }
}
function p2(e12, t13) {
  const n12 = ht({ or: t13, and: "string" == typeof e12 ? { name: e12 } : e12 }), s37 = l("event", n12), i11 = (e13, ...t14) => (r(!G(i11, "derived"), "call of derived event is not supported, use createEvent instead", s37), r(!at, "unit call from pure function is not supported, use operators like sample instead", s37), ot ? ((e14, t15, r8, n13) => {
    const a12 = ot;
    let o6 = null;
    if (t15) for (o6 = ot; o6 && o6.template !== t15; ) o6 = H(o6);
    ct(o6);
    const s38 = e14.create(r8, n13);
    return ct(a12), s38;
  })(i11, c13, e13, t14) : i11.create(e13, t14)), c13 = be(), d6 = Object.assign(i11, { graphite: a({ meta: At(n12.actualOp || "event", i11, n12), regional: 1 }), create: (e13) => (o({ target: i11, params: e13, scope: tt }), e13), watch: (e13) => xt(i11, e13), map: (e13) => jt(i11, P, e13, [Ve()]), filter: (e13) => jt(i11, "filter", e13.fn ? e13 : e13.fn, [Ve(Oe, 1)]), filterMap: (e13) => jt(i11, "filterMap", e13, [Ve(), Pe((e14) => !ze(e14), 1)]), prepend(e13) {
    r(i11.targetable, ".prepend of derived event is not supported, call source event instead", s37);
    const t14 = p2("* \u2192 " + i11.shortName, { parent: H(i11) });
    return f("eventPrepend", _(t14)), $t(t14, i11, [Ve()], "prepend", e13), zt(i11, t14), t14;
  } });
  return null != n12 && n12.domain && n12.domain.hooks.event(d6), J(d6, "id", d6.graphite.id), ve(d6.graphite), d6;
}
function m(e12, n12, a12, o6, s37) {
  return Ce(a12, `${s37} ${n12}`, "first argument"), r(xe(o6), "second argument should be a function", s37), ce(!G(e12, "derived"), `${n12} in derived store`, `${n12} in store created via createStore`, s37), t(Array.isArray(a12) ? a12 : [a12], (t13) => {
    e12.off(t13), Nt(t13, e12, "on", Ie, o6);
  }), e12;
}
function g(e12, n12) {
  const s37 = ht(n12), i11 = Be(e12), c13 = l("store", s37), d6 = Error();
  Error.captureStackTrace && Error.captureStackTrace(d6, g);
  const u4 = d6.stack, h8 = p2({ named: "updates", derived: 1 });
  f("storeBase", i11);
  const y3 = i11.id, v5 = "skipVoid" in s37, b4 = v5 && !s37.skipVoid;
  ce(!(v5 && s37.skipVoid), "{skipVoid: true}", "updateFilter", c13);
  const k4 = { updates: h8, defaultState: e12, stateRef: i11, getState() {
    let e13, t13 = i11;
    if (ot) {
      let t14 = ot;
      for (; t14 && !t14.reg[y3]; ) t14 = H(t14);
      t14 && (e13 = t14);
    }
    return !e13 && tt && (mt(tt, i11, 1), e13 = tt), e13 && (t13 = e13.reg[y3]), We(t13);
  }, setState: (e13) => o({ target: k4, params: e13, defer: 1, scope: tt }), reset: (...e13) => (r(k4.targetable, ".reset of derived store is not supported", c13), t(e13, (e14) => m(k4, ".reset", e14, () => k4.defaultState, c13)), k4), on: (e13, t13) => (r(k4.targetable, ".on of derived store is not supported", c13), m(k4, ".on", e13, t13, c13)), off(e13) {
    const t13 = _(e13).id, r8 = _(k4).family.links.find((e14) => e14.meta.onTrigger === t13);
    return r8 && wt(r8), k4;
  }, map(e13, t13) {
    let r8, n13;
    Me(e13) && (r8 = e13, e13 = e13.fn);
    const a12 = k4.getState(), o6 = ze(a12);
    be() ? n13 = null : (!o6 || o6 && b4) && (n13 = e13(a12));
    const s38 = g(n13, { name: `${k4.shortName} \u2192 *`, derived: 1, ...t13, and: r8 }), c14 = Nt(k4, s38, P, Oe, e13);
    return He(B(s38), { type: P, fn: e13, from: i11 }), B(s38).noInit = 1, f("storeMap", i11, c14), s38;
  }, watch(e13, t13) {
    if (ce(!t13, "watch second argument", "sample", c13), !t13 || !Q(e13)) {
      const t14 = xt(k4, e13);
      return f("storeWatch", i11, e13) || e13(k4.getState()), t14;
    }
    return r(xe(t13), "second argument should be a function", c13), e13.watch((e14) => t13(k4.getState(), e14));
  } }, w8 = At("store", k4, s37), S3 = k4.defaultConfig.updateFilter;
  k4.graphite = a({ scope: { state: i11, fn: S3 }, node: [Pe((e13, t13, r8) => (r8.scope && !r8.scope.reg[i11.id] && (r8.b = 1), e13)), _e(i11), Pe((e13, t13, { a: r8, b: n13 }) => {
    const a12 = ze(e13);
    return a12 && !v5 && le(`${c13}: ${Ct}`, u4), (a12 && b4 || !a12) && (e13 !== r8 || n13);
  }, 1), S3 && Ve(Re, 1), De({ from: "stack", target: i11 })], child: h8, meta: { ...w8, defaultState: e12, storeTrace: u4 }, regional: 1 }), J(k4, "id", k4.graphite.id), J(k4, "rootStateRefId", y3);
  const $4 = G(k4, "serialize"), M5 = G(k4, "derived"), x3 = "ignore" === $4, z4 = G(k4, "sid");
  z4 && (J(k4, "storeChange", 1), i11.sid = z4), z4 || x3 || M5 || J(k4, "warnSerialize", 1);
  const A4 = ze(e12);
  return r(M5 || !A4 || A4 && b4, Ct, c13), M5 && A4 && !v5 && console.error(`${c13}: ${Ct}`), Se(k4, [h8]), null != s37 && s37.domain && s37.domain.hooks.store(k4), M5 || (k4.reinit = p2({ named: "reinit" }), k4.reset(k4.reinit)), i11.meta = k4.graphite.meta, ve(k4.graphite), k4;
}
function h(...e12) {
  let t13, n12, a12;
  [e12, a12] = d(e12);
  const o6 = l("combine", a12), s37 = e12[e12.length - 1], i11 = e12.length > 1 && !Y(s37) && Me(s37), c13 = i11 && s37, u4 = i11 ? e12[e12.length - 2] : s37;
  let f11, p13, m11;
  if (xe(u4) ? (n12 = e12.slice(0, i11 ? -2 : -1), t13 = u4) : n12 = e12, 1 === n12.length) {
    const e13 = n12[0];
    Y(e13) || (f11 = e13, p13 = 1);
  }
  if (!p13 && (f11 = n12, t13)) {
    m11 = 1;
    const e13 = t13;
    t13 = (t14) => e13(...t14);
  }
  return r(Me(f11), `${o6}: shape should be an object`), Rt(Array.isArray(f11), !m11, f11, a12, t13, c13);
}
function y() {
  const e12 = {};
  return e12.req = new Promise((t13, r8) => {
    e12.rs = t13, e12.rj = r8;
  }), e12.req.catch(() => {
  }), e12;
}
function v(e12, t13 = {}) {
  const n12 = ht(xe(e12) ? { handler: e12 } : e12, t13), s37 = l("effect", n12), i11 = p2(xe(e12) ? { handler: e12 } : e12, { ...t13, actualOp: "effect" }), c13 = _(i11);
  J(c13, "op", i11.kind = "effect"), i11.use = (e13) => (r(xe(e13), ".use argument should be a function", s37), v5.scope.handler = e13, i11), i11.use.getCurrent = () => v5.scope.handler;
  const d6 = i11.finally = p2({ named: "finally", derived: 1 }), u4 = i11.done = d6.filterMap({ named: "done", fn({ status: e13, params: t14, result: r8 }) {
    if ("done" === e13) return { params: t14, result: r8 };
  } }), f11 = i11.fail = d6.filterMap({ named: "fail", fn({ status: e13, params: t14, error: r8 }) {
    if ("fail" === e13) return { params: t14, error: r8 };
  } }), m11 = i11.doneData = u4.map({ named: "doneData", fn: ({ result: e13 }) => e13 }), h8 = i11.failData = f11.map({ named: "failData", fn: ({ error: e13 }) => e13 }), v5 = a({ scope: { handler: i11.defaultConfig.handler || (() => r(0, `no handler used in ${i11.compositeName.fullName}`)) }, node: [Pe((e13, t14, r8) => {
    let n13 = t14.handler;
    const a12 = U(r8);
    if (a12) {
      const e14 = a12.handlers.unitMap.get(i11) || a12.handlers.sidMap[i11.sid];
      e14 && (n13 = e14);
    }
    return e13.handler = n13, e13;
  }, 0, 1), Pe((e13, t14, r8) => {
    if (t14.runnerFn && !t14.runnerFn(e13, null, r8)) return;
    const { params: n13, req: a12, handler: o6, args: s38 = [n13] } = e13, i12 = Ot(n13, a12, 1, d6, r8), c14 = Ot(n13, a12, 0, d6, r8), [l9, u5] = It(o6, c14, s38);
    l9 && (Me(u5) && xe(u5.then) ? u5.then(i12, c14) : i12(u5));
  }, 0, 1)], meta: { op: "fx", fx: "runner" }, regional: 1 });
  c13.scope.runner = v5, ie(c13.seq, Pe((e13, { runner: t14 }, r8) => {
    const n13 = H(r8) ? { params: e13, req: { rs(e14) {
    }, rj(e14) {
    } } } : e13;
    return r8.meta || (r8.meta = { fxID: me() }), o({ target: t14, params: n13, defer: 1, scope: U(r8), meta: r8.meta }), n13.params;
  })), i11.create = (e13) => {
    const t14 = y(), r8 = { params: e13, req: t14 };
    if (tt && !nt) {
      const e14 = tt;
      t14.req.finally(() => {
        st(e14);
      }).catch(() => {
      });
    }
    return o({ target: i11, params: r8, scope: tt }), t14.req;
  };
  const b4 = i11.inFlight = g(0, { serialize: "ignore", named: (G(i11, "name") || i11.graphite.id) + ".inFlight" }).on(i11, (e13) => e13 + 1).on(d6, (e13) => e13 - 1).map({ fn: (e13) => e13, named: "inFlight" });
  J(d6, "needFxCounter", "dec"), J(i11, "needFxCounter", 1);
  const k4 = i11.pending = b4.map({ fn: (e13) => e13 > 0, named: "pending" });
  return Se(i11, [d6, u4, f11, m11, h8, k4, b4]), null != n12 && n12.domain && n12.domain.hooks.effect(i11), i11;
}
function b(e12) {
  let t13;
  [e12, t13] = d(e12, 1);
  const n12 = l("attach", t13);
  let { source: a12, effect: s37, mapParams: i11, domain: u4 } = e12;
  ee(s37) && r(ze(u4), "`domain` can only be used with a plain function", n12);
  const f11 = v(e12, t13);
  J(f11, "attached", 1);
  const { runner: p13 } = _(f11).scope;
  let m11;
  const g9 = (e13, t14, r8) => {
    const { params: n13, req: s38, handler: c13 } = e13, l9 = f11.finally, d6 = Ot(n13, s38, 0, l9, r8), u5 = r8.a, p14 = ee(c13);
    let m12, g10 = 1;
    if (i11 ? [g10, m12] = It(i11, d6, [n13, u5]) : m12 = a12 && p14 ? u5 : n13, g10) {
      if (!p14) return e13.args = [u5, m12], 1;
      o({ target: c13, params: { params: m12, req: { rs: Ot(n13, s38, 1, l9, r8), rj: d6 } }, page: r8.page, defer: 1, meta: r8.meta });
    }
  };
  if (a12) {
    let e13;
    p13.scope.runnerFn = g9, Y(a12) ? (e13 = a12, Se(e13, [f11])) : (e13 = h(a12), Se(f11, [e13])), m11 = [Pe((e14) => e14, 0, 1), _e(B(e13))], delete p13.seq[1].order;
  } else m11 = [Pe(g9, 1, 1)];
  p13.seq.splice(1, 0, ...m11), f11.use(s37);
  const y3 = H(s37);
  return y3 && (Object.assign(K(f11), c(f11.shortName, y3)), f11.defaultConfig.parent = y3), zt(s37, f11, "effect"), f11;
}
function $(e12, n12) {
  let a12 = 0;
  return t(qt, (t13) => {
    t13 in e12 && (r(null != e12[t13], Dt(n12, t13)), a12 = 1);
  }), a12;
}
function M(...e12) {
  let t13, r8, n12, a12, [[o6, s37, i11], c13] = d(e12), u4 = 1;
  const f11 = l("sample", c13);
  return ze(s37) && Me(o6) && $(o6, f11) && (s37 = o6.clock, i11 = o6.fn, "batch" in o6 ? u4 = o6.batch : (ce(!("greedy" in o6), "greedy in sample", "batch", f11), u4 = !o6.greedy), a12 = o6.filter, t13 = o6.target, r8 = o6.name, n12 = o6.sid, o6 = o6.source), Et("sample", s37, o6, a12, t13, i11, r8, c13, u4, 1, 0, n12);
}
function A(t13, n12, a12) {
  const o6 = l("restore", a12);
  if (r(!Y(t13), "restore($store) is not supported", o6), Z(t13) || ee(t13)) {
    const e12 = H(t13), r8 = g(n12, { parent: e12, name: t13.shortName, and: a12 });
    return $t(ee(t13) ? t13.doneData : t13, r8), e12 && e12.hooks.store(r8), r8;
  }
  const s37 = Array.isArray(t13) ? [] : {};
  return e(t13, (e12, t14) => s37[t14] = Y(e12) ? e12 : g(e12, { name: t14 })), s37;
}
function j(...t13) {
  const n12 = "split";
  let o6, s37, [[i11, c13], u4] = d(t13);
  const m11 = l(n12, u4), g9 = !c13;
  g9 && (o6 = i11.cases, c13 = i11.match, s37 = i11.clock, i11 = i11.source);
  const h8 = Y(c13), y3 = !Q(c13) && xe(c13), v5 = !h8 && !y3 && Me(c13);
  r(Q(i11), "source must be a unit", m11), o6 || (o6 = {}), g9 ? e(o6, (e12, t14) => Ne(m11, e12, `cases.${t14}`)) : (r(v5, "match should be an object", m11), e(c13, (e12, t14) => o6[t14] = p2({ derived: 1, named: `cases.${t14}`, and: u4 })), o6.__ = p2({ derived: 1, named: "cases.__", and: u4 }));
  const b4 = new Set([].concat(i11, s37 || [], Object.values(o6))), k4 = Object.keys(h8 || y3 ? o6 : c13);
  let w8;
  if (h8 || y3) h8 && b4.add(c13), w8 = [h8 && _e(B(c13), 0, 1), Ee({ safe: h8, filter: 1, pure: !h8, fn(e12, t14, r8) {
    const n13 = String(h8 ? r8.a : c13(e12));
    _t(t14, oe(k4, n13) ? n13 : "__", e12, r8);
  } })];
  else if (v5) {
    const t14 = Be({});
    t14.type = "shape";
    const r8 = [];
    let n13;
    e(c13, (e12, a12) => {
      if (Q(e12)) {
        n13 = 1, ie(r8, a12), b4.add(e12);
        const o7 = $t(e12, [], [_e(t14), Pe((e13, t15, { a: r9 }) => r9[a12] = e13)]);
        if (Y(e12)) {
          t14.current[a12] = e12.getState();
          const r9 = B(e12);
          He(t14, { from: r9, field: a12, type: "field" }), f("splitMatchStore", r9, o7);
        }
      }
    }), n13 && f("splitBase", t14), w8 = [n13 && _e(t14, 0, 1), Ve((e12, t15, n14) => {
      for (let a12 = 0; a12 < k4.length; a12++) {
        const o7 = k4[a12];
        if (oe(r8, o7) ? n14.a[o7] : c13[o7](e12)) return void _t(t15, o7, e12, n14);
      }
      _t(t15, "__", e12, n14);
    }, 1)];
  } else r(0, "expect match to be unit, function or object");
  const S3 = a({ meta: { op: n12 }, parent: s37 ? [] : i11, scope: o6, node: w8, family: { owners: Array.from(b4) }, regional: 1 });
  if (s37 && Et(n12, s37, i11, null, S3, null, n12, u4, 0, 0, 0), !g9) return o6;
}
function C(e12, { scope: t13, params: r8 } = {}) {
  if (!Q(e12)) return Promise.reject(new Error("first argument should be unit"));
  if (!(ee(e12) || Z(e12) || Y(e12) || ne(e12))) return Promise.reject(new Error("first argument accepts only effects, events, stores or scopes"));
  if (ne(e12)) t13 = e12;
  else if (!te(e12)) {
    const t14 = l("allSettled", _(e12).meta);
    return Promise.reject(Error(`${t14}: unit should be targetable`));
  }
  const n12 = y();
  n12.parentFork = tt;
  const { fxCount: a12 } = t13;
  ie(a12.scope.defers, n12);
  const s37 = [], i11 = [];
  return ne(e12) || (ie(s37, e12), ie(i11, ee(e12) ? { params: r8, req: { rs(e13) {
    n12.value = { status: "done", value: e13 };
  }, rj(e13) {
    n12.value = { status: "fail", value: e13 };
  } } } : r8)), ie(s37, a12), ie(i11, null), o({ target: s37, params: i11, scope: t13 }), n12.req;
}
function N(e12, r8, n12) {
  const a12 = [];
  (function e13(o6) {
    oe(a12, o6) || (ie(a12, o6), "store" === G(o6, "op") && (n12 || G(o6, "sid")) && r8(o6, G(o6, "sid")), t(o6.next, e13), t(V(o6), e13), t(L(o6), e13));
  })(e12);
}
function R(e12, n12) {
  const a12 = Array.isArray(e12) ? new Map(e12) : e12, o6 = /* @__PURE__ */ new Map();
  let s37 = 0;
  if (a12 instanceof Map) {
    const e13 = {};
    return t(a12, (t13, a13) => {
      r(Q(a13), "Map key should be a unit"), n12 && n12(a13, t13), a13.sid && (a13.sid in e13 && (s37 = 1), e13[a13.sid] = t13), o6.set(a13, t13);
    }), { sidMap: e13, unitMap: o6, hasSidDoubles: s37 };
  }
  return { sidMap: a12, unitMap: o6 };
}
function I(e12, n12) {
  let o6, s37 = e12;
  re(e12) && (ce(0, "fork(domain)", "fork()"), o6 = e12, s37 = n12);
  const i11 = ((e13) => {
    const r8 = a({ scope: { defers: [], inFlight: 0, fxID: 0 }, node: [Pe((e14, t13, r9) => {
      r9.parent ? "dec" === r9.parent.node.meta.needFxCounter ? t13.inFlight -= 1 : (t13.inFlight += 1, t13.fxID += 1) : t13.fxID += 1;
    }), Ee({ priority: "sampler", batch: 1 }), Pe((e14, r9) => {
      const { defers: n14, fxID: a12 } = r9;
      r9.inFlight > 0 || 0 === n14.length || Promise.resolve().then(() => {
        r9.fxID === a12 && t(n14.splice(0, n14.length), (e15) => {
          st(e15.parentFork), e15.rs(e15.value);
        });
      });
    }, 0, 1)] }), n13 = a({ node: [Pe((e14, t13, r9) => {
      const n14 = r9.parent;
      if (n14) {
        const t14 = n14.node;
        if (Lt(n14)) {
          const n15 = U(r9), a12 = t14.meta.sid;
          n15.sidIdMap[a12] = t14.scope.state.id, n15.values.sidMap[a12] = e14;
          const o8 = t14.meta.serialize;
          o8 && n15.sidSerializeSettings.set(a12, "ignore" === o8 ? { ignore: 1 } : { ignore: 0, write: o8.write });
        }
      }
    })] }), o7 = a({ node: [Pe((e14, t13, r9) => {
      const n14 = U(r9), a12 = r9.parent;
      n14 && a12 && Lt(a12) && n14.warnSerializeTraces.add(G(a12.node, "storeTrace"));
    })] }), s38 = { cloneOf: e13, reg: {}, values: { sidMap: {}, idMap: {} }, sidIdMap: {}, sidSerializeSettings: /* @__PURE__ */ new Map(), getState(e14) {
      if ("current" in e14) return dt(ot, s38, e14, 0).current;
      const t13 = _(e14);
      return dt(ot, s38, t13.scope.state, 1).current;
    }, kind: "scope", graphite: a({ family: { type: "domain", links: [r8, n13, o7] }, meta: { unit: "fork" }, scope: { forkInFlightCounter: r8 } }), additionalLinks: {}, handlers: { sidMap: {}, unitMap: /* @__PURE__ */ new Map() }, fxCount: r8, storeChange: n13, warnSerializeTraces: /* @__PURE__ */ new Set(), warnSerializeNode: o7 };
    return s38;
  })(o6);
  if (s37) {
    if (s37.values) {
      const { sidMap: e13, unitMap: n13, hasSidDoubles: a12 } = R(s37.values, (e14) => r(Y(e14) && te(e14), "Values map can contain only writable stores as keys"));
      Object.assign(i11.values.sidMap, e13), t(n13, (e14, t13) => {
        if (i11.values.idMap[t13.stateRef.id] = e14, i11.sidIdMap[G(t13, "sid")] = t13.stateRef.id, "ignore" === G(t13, "serialize")) {
          const e15 = G(t13, "sid");
          i11.sidSerializeSettings.set(e15, { ignore: 1 });
        }
      }), i11.fromSerialize = !(Array.isArray(s37.values) || s37.values instanceof Map), i11.hasSidDoubles = a12;
    }
    s37.handlers && (ce(s37.handlers instanceof Map || Array.isArray(s37.handlers), "object with handlers", "array"), i11.handlers = R(s37.handlers, (e13) => r(ee(e13), "Handlers map can contain only effects as keys")));
  }
  return i11;
}
function F(e12, { scope: t13, safe: n12 } = {}) {
  r(t13 || tt || n12, "scopeBind: scope not found");
  const a12 = t13 || tt;
  return (...t14) => {
    function r8() {
      st(s37);
    }
    let n13, o6 = 0;
    const s37 = tt;
    st(a12);
    try {
      n13 = e12(...t14);
    } catch (e13) {
      n13 = e13, o6 = 1;
    }
    if (r8(), o6) throw n13;
    return n13 instanceof Promise && n13.then(r8, r8), n13;
  };
}
function q(n12, a12 = {}) {
  n12.warnSerializeTraces.size && (console.error("serialize: One or more stores dont have sids, their values are omitted"), t(n12.warnSerializeTraces, (e12) => {
    le("store should have sid or `serialize: ignore`", e12);
  })), r(!n12.hasSidDoubles, "duplicate sid found in this scope");
  const o6 = a12.ignore ? a12.ignore.map(({ sid: e12 }) => e12) : [], s37 = {};
  return e(n12.values.sidMap, (e12, t13) => {
    var r8;
    if (oe(o6, t13)) return;
    const a13 = n12.sidIdMap[t13], i11 = null !== (r8 = n12.sidSerializeSettings.get(t13)) && void 0 !== r8 ? r8 : { ignore: 0, write: Bt };
    i11.ignore || (s37[t13] = (0, i11.write)(a13 && a13 in n12.reg ? n12.reg[a13].current : e12));
  }), "onlyChanges" in a12 && (ce(0, "onlyChanges"), a12.onlyChanges || (r(n12.cloneOf, "scope should be created from domain"), N(_(n12.cloneOf), (e12, t13) => {
    t13 in s37 || oe(o6, t13) || G(e12, "isCombine") || "ignore" === G(e12, "serialize") || (s37[t13] = n12.getState(e12));
  }))), s37;
}
function D({ unit: e12, fn: t13, scope: r8, batch: n12 }) {
  const o6 = [Le.run({ fn: (e13) => t13(e13) })];
  n12 && o6.unshift(Le.compute({ priority: "sampler", batch: 1 })), Y(e12) && o6.unshift(Le.mov({ store: e12.stateRef, to: "stack" }));
  const s37 = Array.isArray(e12) ? e12 : [e12];
  if (r8) {
    const e13 = [], t14 = r8.additionalLinks;
    return s37.forEach((r9) => {
      const n13 = t14[r9.graphite.id] || [];
      t14[r9.graphite.id] = n13;
      const s38 = a({ node: E(o6, r9), meta: { watchOp: r9.kind } });
      n13.push(s38), e13.push(() => {
        const e14 = n13.indexOf(s38);
        -1 !== e14 && n13.splice(e14, 1), wt(s38);
      });
    }), u(() => {
      e13.forEach((e14) => e14());
    });
  }
  {
    const e13 = a({ node: o6, parent: s37, family: { owners: s37 } });
    return u(() => {
      wt(e13);
    });
  }
}
function E(e12, t13) {
  return Y(t13) ? [Le.mov({ store: t13.stateRef, to: "stack" }), ...e12] : e12;
}
var T, P, _, V, L, B, W, H, U, G, J, K, Q, X, Y, Z, ee, te, re, ne, ae, oe, se, ie, ce, le, de, ue, fe, pe, me, ge, ye, ve, be, ke, we, Se, $e, Me, xe, ze, Ae, je, Ce, Ne, Re, Ie, Oe, Fe, qe, De, Ee, Te, Pe, _e, Ve, Le, Be, We, He, Ue, Ge, Je, Ke, Qe, Xe, Ye, Ze, et, tt, rt, nt, at, ot, st, ct, lt, dt, ut, pt, mt, gt, ht, yt, vt, bt, kt, wt, St, $t, xt, zt, At, jt, Ct, Nt, Rt, It, Ot, Ft, qt, Dt, Et, Tt, Pt, _t, Lt, Bt;
var init_effector = __esm({
  "node_modules/.pnpm/effector@23.3.0/node_modules/effector/effector.mjs"() {
    T = "undefined" != typeof Symbol && Symbol.observable || "@@observable";
    P = "map";
    _ = (e12) => e12.graphite || e12;
    V = (e12) => e12.family.owners;
    L = (e12) => e12.family.links;
    B = (e12) => e12.stateRef;
    W = (e12) => e12.value;
    H = (e12) => e12.parent;
    U = (e12) => e12.scope;
    G = (e12, t13) => _(e12).meta[t13];
    J = (e12, t13, r8) => _(e12).meta[t13] = r8;
    K = (e12) => e12.compositeName;
    Q = (e12) => (xe(e12) || Me(e12)) && "kind" in e12;
    X = (e12) => (t13) => Q(t13) && t13.kind === e12;
    Y = X("store");
    Z = X("event");
    ee = X("effect");
    te = (e12) => Q(e12) && !!e12.targetable;
    re = X("domain");
    ne = X("scope");
    ae = { __proto__: null, unit: Q, store: Y, event: Z, effect: ee, targetable: te, domain: re, scope: ne, attached: (e12) => ee(e12) && 1 == G(e12, "attached") };
    oe = (e12, t13) => e12.includes(t13);
    se = (e12, t13) => {
      const r8 = e12.indexOf(t13);
      -1 !== r8 && e12.splice(r8, 1);
    };
    ie = (e12, t13) => e12.push(t13);
    ce = (e12, t13, r8, n12) => !e12 && console.error(`${n12 ? n12 + ": " : ""}${t13} is deprecated${r8 ? `, use ${r8} instead` : ""}`);
    le = (e12, t13) => {
      const r8 = Error(e12);
      r8.stack = t13, console.error(r8);
    };
    de = () => {
      let e12 = 0;
      return () => "" + ++e12;
    };
    ue = de();
    fe = de();
    pe = de();
    me = de();
    ye = null;
    ve = (e12) => {
      ge && ge(e12, ye);
    };
    be = () => ye && ye.template;
    ke = (e12) => (e12 && ye && ye.sidRoot && (e12 = `${ye.sidRoot}|${e12}`), e12);
    we = ({ sid: e12, name: t13, loc: r8, method: o6, fn: s37 }) => n(a({ meta: { sidRoot: ke(e12), sid: e12, name: t13, loc: r8, method: o6, type: "factory" }, regional: 1 }), s37);
    Se = (e12, r8) => {
      const n12 = _(e12);
      t(r8, (e13) => {
        const t13 = _(e13);
        "domain" !== n12.family.type && (t13.family.type = "crosslink"), ie(V(t13), n12), ie(L(n12), t13);
      });
    };
    $e = (e12 = []) => (Array.isArray(e12) ? e12 : [e12]).flat().map(_);
    Me = (e12) => "object" == typeof e12 && null !== e12;
    xe = (e12) => "function" == typeof e12;
    ze = (e12) => void 0 === e12;
    Ae = (e12) => r(Me(e12) || xe(e12), "expect first argument be an object");
    je = (e12, t13, n12, a12) => r(!(!Me(e12) && !xe(e12) || !("family" in e12) && !("graphite" in e12)), `${t13}: expect ${n12} to be a unit (store, event or effect)${a12}`);
    Ce = (e12, r8, n12) => {
      Array.isArray(e12) ? t(e12, (e13, t13) => je(e13, r8, `${t13} item of ${n12}`, "")) : je(e12, r8, n12, " or array of units");
    };
    Ne = (e12, n12, a12 = "target") => t($e(n12), (t13) => r(!G(t13, "derived"), `${e12}: derived unit in "${a12}" is not supported, use createStore/createEvent instead"`));
    Re = (e12, { fn: t13 }, { a: r8 }) => t13(e12, r8);
    Ie = (e12, { fn: t13 }, { a: r8 }) => t13(r8, e12);
    Oe = (e12, { fn: t13 }) => t13(e12);
    Fe = (e12, t13, r8, n12) => {
      const a12 = { id: fe(), type: e12, data: t13 };
      return r8 && (a12.order = { priority: r8 }, n12 && (a12.order.barrierID = ++qe)), a12;
    };
    qe = 0;
    De = ({ from: e12 = "store", store: t13, target: r8, to: n12 = r8 ? "store" : "stack", batch: a12, priority: o6 }) => Fe("mov", { from: e12, store: t13, to: n12, target: r8 }, o6, a12);
    Ee = ({ fn: e12, batch: t13, priority: r8, safe: n12 = 0, filter: a12 = 0, pure: o6 = 0 }) => Fe("compute", { fn: e12, safe: n12, filter: a12, pure: o6 }, r8, t13);
    Te = ({ fn: e12 }) => Ee({ fn: e12, priority: "effect" });
    Pe = (e12, t13, r8) => Ee({ fn: e12, safe: 1, filter: t13, priority: r8 && "effect" });
    _e = (e12, t13, r8) => De({ store: e12, to: t13 ? "stack" : "a", priority: r8 && "sampler", batch: 1 });
    Ve = (e12 = Oe, t13) => Ee({ fn: e12, pure: 1, filter: t13 });
    Le = { mov: De, compute: Ee, filter: ({ fn: e12, pure: t13 }) => Ee({ fn: e12, filter: 1, pure: t13 }), run: Te };
    Be = (e12) => ({ id: fe(), current: e12, initial: e12 });
    We = ({ current: e12 }) => e12;
    He = (e12, t13) => {
      e12.before || (e12.before = []), ie(e12.before, t13);
    };
    Ue = null;
    Ge = (e12, t13) => {
      if (!e12) return t13;
      if (!t13) return e12;
      let r8;
      return (e12.v.type === t13.v.type && e12.v.id > t13.v.id || Ze(e12.v.type) > Ze(t13.v.type)) && (r8 = e12, e12 = t13, t13 = r8), r8 = Ge(e12.r, t13), e12.r = e12.l, e12.l = r8, e12;
    };
    Je = [];
    Ke = 0;
    for (; Ke < 6; ) ie(Je, { first: null, last: null, size: 0 }), Ke += 1;
    Qe = () => {
      for (let e12 = 0; e12 < 6; e12++) {
        const t13 = Je[e12];
        if (t13.size > 0) {
          if (3 === e12 || 4 === e12) {
            t13.size -= 1;
            const e13 = Ue.v;
            return Ue = Ge(Ue.l, Ue.r), e13;
          }
          1 === t13.size && (t13.last = null);
          const r8 = t13.first;
          return t13.first = r8.r, t13.size -= 1, r8.v;
        }
      }
    };
    Xe = (e12, t13, r8, n12, a12, o6, s37) => Ye(0, { a: null, b: null, node: r8, parent: n12, value: a12, page: t13, scope: o6, meta: s37 }, e12, 0);
    Ye = (e12, t13, r8, n12) => {
      const a12 = Ze(r8), o6 = Je[a12], s37 = { v: { idx: e12, stack: t13, type: r8, id: n12 }, l: null, r: null };
      3 === a12 || 4 === a12 ? Ue = Ge(Ue, s37) : (0 === o6.size ? o6.first = s37 : o6.last.r = s37, o6.last = s37), o6.size += 1;
    };
    Ze = (e12) => {
      switch (e12) {
        case "child":
          return 0;
        case "pure":
          return 1;
        case "read":
          return 2;
        case "barrier":
          return 3;
        case "sampler":
          return 4;
        case "effect":
          return 5;
        default:
          return -1;
      }
    };
    et = /* @__PURE__ */ new Set();
    rt = 1;
    nt = 0;
    at = 0;
    ot = null;
    st = (e12) => {
      tt = e12;
    };
    ct = (e12) => {
      ot = e12;
    };
    lt = (e12, t13) => {
      if (e12) {
        for (; e12 && !e12.reg[t13]; ) e12 = e12.parent;
        if (e12) return e12;
      }
      return null;
    };
    dt = (e12, t13, r8, n12) => {
      const a12 = lt(e12, r8.id);
      return a12 ? a12.reg[r8.id] : t13 ? (mt(t13, r8, n12), t13.reg[r8.id]) : r8;
    };
    pt = (e12) => e12;
    mt = (e12, r8, n12, a12, o6) => {
      const s37 = e12.reg;
      if (s37[r8.id]) return;
      const i11 = r8.sid, c13 = { id: r8.id, current: r8.initial, meta: r8.meta };
      if (c13.id in e12.values.idMap) c13.current = e12.values.idMap[c13.id];
      else if (i11 && i11 in e12.values.sidMap && !(i11 in e12.sidIdMap)) {
        var l9;
        const t13 = null == r8 || null === (l9 = r8.meta) || void 0 === l9 ? void 0 : l9.serialize;
        c13.current = (e12.fromSerialize && "ignore" !== t13 && (null == t13 ? void 0 : t13.read) || pt)(e12.values.sidMap[i11]);
      } else if (r8.before && !o6) {
        let o7 = 0;
        const i12 = n12 || !r8.noInit || a12;
        t(r8.before, (t13) => {
          switch (t13.type) {
            case "map": {
              const r9 = t13.from;
              if ((r9 || t13.fn) && (r9 && mt(e12, r9, n12, a12), i12)) {
                const e13 = r9 && s37[r9.id].current;
                c13.current = t13.fn ? t13.fn(e13) : e13;
              }
              break;
            }
            case "field":
              mt(e12, t13.from, n12, a12), o7 || (o7 = 1, c13.current = Array.isArray(c13.current) ? [...c13.current] : { ...c13.current }), i12 && (c13.current[t13.field] = s37[s37[t13.from.id].id].current);
          }
        });
      }
      i11 && (e12.sidIdMap[i11] = r8.id), s37[r8.id] = c13;
    };
    gt = (e12, t13, r8) => {
      try {
        return t13(W(r8), e12.scope, r8);
      } catch (t14) {
        console.error(t14), e12.fail = 1, e12.failReason = t14;
      }
    };
    ht = (t13, r8 = {}) => (Me(t13) && (ht(t13.or, r8), e(t13, (e12, t14) => {
      ze(e12) || "or" === t14 || "and" === t14 || (r8[t14] = e12);
    }), ht(t13.and, r8)), r8);
    yt = (e12, t13) => {
      se(e12.next, t13), se(V(e12), t13), se(L(e12), t13);
    };
    vt = ["on", "reset", "sample", "split", "merge", "guard", "forward"];
    bt = (e12, t13, r8, n12, a12) => {
      let o6;
      e12.next.length = 0, e12.seq.length = 0, e12.scope = null;
      let s37 = L(e12);
      const i11 = e12.meta.isRegion, c13 = i11 ? e12 : n12;
      if (s37.length > 0) {
        const n13 = oe(vt, e12.meta.op), l9 = !i11 && !a12, d6 = l9 && r8 && !n13;
        for (; o6 = s37.pop(); ) {
          const s38 = oe(o6.next, e12);
          yt(o6, e12), i11 && bt(o6, 0, 0, e12, 1), s38 || (o6.family.triggers -= 1), (t13 || d6 || l9 && "crosslink" === o6.family.type && !n13 || a12 && oe(vt, o6.meta.op) && (s38 && 0 === o6.next.length || !s38 && o6.family.triggers <= 0)) && bt(o6, t13, r8 && "on" !== o6.meta.op, c13, a12);
        }
      }
      for (s37 = V(e12); o6 = s37.pop(); ) yt(o6, e12), r8 && "crosslink" === o6.family.type && bt(o6, t13, "on" !== o6.meta.op, c13, a12);
    };
    kt = (e12) => e12.clear();
    wt = (e12, { deep: t13 } = {}) => {
      let r8 = 0;
      if (e12.ownerSet && e12.ownerSet.delete(e12), re(e12)) {
        r8 = 1;
        const t14 = e12.history;
        kt(t14.events), kt(t14.effects), kt(t14.stores), kt(t14.domains);
      }
      bt(_(e12), !!t13, r8, null, 0);
    };
    St = (e12) => u(() => wt(e12));
    $t = (e12, t13, r8, n12, o6) => a({ node: r8, parent: e12, child: t13, scope: { fn: o6 }, meta: { op: n12 }, family: { owners: [e12, t13], links: t13 }, regional: 1 });
    xt = (e12, t13) => (r(xe(t13), ".watch argument should be a function"), St(a({ scope: { fn: t13 }, node: [Te({ fn: Oe })], parent: e12, meta: { op: "watch" }, family: { owners: e12 }, regional: 1 })));
    zt = (e12, t13, r8 = "event") => {
      H(e12) && H(e12).hooks[r8](t13);
    };
    At = (e12, t13, r8) => {
      const n12 = ht(r8), a12 = "domain" === e12, o6 = ue(), { sid: s37 = null, named: i11 = null, domain: l9 = null, parent: d6 = l9 } = n12, u4 = i11 || n12.name || (a12 ? "" : o6), f11 = c(u4, d6), p13 = { op: t13.kind = e12, name: t13.shortName = u4, sid: t13.sid = ke(s37), named: i11, unitId: t13.id = o6, serialize: n12.serialize, derived: n12.derived, config: n12 };
      if (t13.targetable = !n12.derived, t13.parent = d6, t13.compositeName = f11, t13.defaultConfig = n12, t13.getType = () => (ce(0, "getType", "compositeName.fullName"), f11.fullName), !a12) {
        t13.subscribe = (e14) => (Ae(e14), t13.watch(xe(e14) ? e14 : (t14) => e14.next && e14.next(t14))), t13[T] = () => t13;
        const e13 = be();
        e13 && (p13.nativeTemplate = e13);
      }
      return p13;
    };
    jt = (e12, t13, r8, n12) => {
      let a12;
      Me(r8) && (a12 = r8, r8 = r8.fn);
      const o6 = p2({ name: `${e12.shortName} \u2192 *`, derived: 1, and: a12 });
      return $t(e12, o6, n12, t13, r8), o6;
    };
    Ct = "undefined is used to skip updates. To allow undefined as a value provide explicit { skipVoid: false } option";
    Nt = (e12, t13, r8, n12, a12) => {
      const o6 = B(t13), s37 = De({ store: o6, to: "a", priority: "read" });
      r8 === P && (s37.data.softRead = 1);
      const i11 = [s37, Ve(n12)];
      f("storeOnMap", o6, i11, Y(e12) && B(e12));
      const c13 = $t(e12, t13, i11, r8, a12);
      return r8 !== P && J(c13, "onTrigger", _(e12).id), c13;
    };
    Rt = (t13, n12, a12, o6, i11, c13) => {
      const d6 = l("combine", o6), u4 = t13 ? (e12) => [...e12] : (e12) => ({ ...e12 }), p13 = t13 ? [] : {}, m11 = u4(p13), h8 = Be(m11), y3 = Be(1);
      h8.type = t13 ? "list" : "shape", h8.noInit = 1, f("combineBase", h8, y3);
      const v5 = g(m11, { name: s(a12), derived: 1, ...c13, and: o6 }), b4 = B(v5);
      b4.noInit = 1, J(v5, "isCombine", 1);
      const k4 = _e(h8);
      k4.order = { priority: "barrier" };
      const w8 = De({ store: b4, to: "b", priority: "read" });
      w8.data.softRead = 1;
      const S3 = [Pe((e12, t14, r8) => (r8.scope && !r8.scope.reg[h8.id] && (r8.c = 1), e12)), k4, De({ store: y3, to: "b" }), Pe((e12, { key: t14 }, r8) => {
        if (r8.c || e12 !== r8.a[t14]) return n12 && r8.b && (r8.a = u4(r8.a)), r8.a[t14] = e12, 1;
      }, 1), De({ from: "a", target: h8 }), De({ from: "value", store: 0, target: y3 }), De({ from: "value", store: 1, target: y3, priority: "barrier", batch: 1 }), _e(h8, 1, 1), i11 && Ve(), w8];
      if (e(a12, (e12, t14) => {
        if (!Y(e12)) return r(!Q(e12) && !ze(e12), `combine expects a store in a field ${t14}`, d6), void (m11[t14] = p13[t14] = e12);
        p13[t14] = e12.defaultState, m11[t14] = e12.getState();
        const n13 = $t(e12, v5, S3, "combine", i11);
        n13.scope.key = t14;
        const a13 = B(e12);
        He(h8, { type: "field", field: t14, from: a13 }), f("combineField", a13, n13);
      }), v5.defaultShape = a12, He(b4, { type: P, from: h8, fn: i11 }), !be()) if (i11) {
        const e12 = i11(m11);
        !ze(e12) || c13 && "skipVoid" in c13 || console.error(`${d6}: ${Ct}`), b4.current = e12, b4.initial = e12, v5.defaultState = e12;
      } else v5.defaultState = p13;
      return v5;
    };
    It = (e12, t13, r8) => {
      try {
        return [1, e12(...r8)];
      } catch (e13) {
        return t13(e13), [0, null];
      }
    };
    Ot = (e12, t13, r8, n12, a12) => (s37) => {
      o({ target: [n12, Ft], params: [r8 ? { status: "done", params: e12, result: s37 } : { status: "fail", params: e12, error: s37 }, { value: s37, fn: r8 ? t13.rs : t13.rj }], defer: 1, page: a12.page, scope: a12.scope, meta: a12.meta });
    };
    Ft = a({ node: [Te({ fn: ({ fn: e12, value: t13 }) => e12(t13) })], meta: { op: "fx", fx: "sidechain" } });
    qt = ["source", "clock", "target"];
    Dt = (e12, t13) => e12 + `: ${t13} should be defined`;
    Et = (e12, t13, n12, a12, o6, s37, i11, c13, d6, u4, m11, y3) => {
      const v5 = l(e12, c13), b4 = !!o6;
      r(!ze(n12) || !ze(t13), Dt(v5, "either source or clock"));
      let k4 = 0;
      ze(n12) ? k4 = 1 : Q(n12) || (n12 = h(n12)), ze(t13) ? t13 = n12 : (Ce(t13, v5, "clock"), Array.isArray(t13) && (t13 = $t(t13, [], [], e12))), k4 && (n12 = t13), c13 || i11 || (i11 = n12.shortName);
      let w8 = "none";
      (m11 || a12) && (Q(a12) ? w8 = "unit" : (r(xe(a12), "`filter` should be function or unit"), w8 = "fn")), o6 ? (Ce(o6, v5, "target"), Ne(v5, o6)) : "none" === w8 && u4 && Y(n12) && Y(t13) ? o6 = g(s37 ? s37(We(B(n12)), We(B(t13))) : We(B(n12)), { name: i11, sid: y3, or: c13 }) : (o6 = p2({ name: i11, derived: 1, or: c13 }), f("sampleTarget", _(o6)));
      const S3 = Be();
      let $4 = [];
      if ("unit" === w8) {
        const [r8, n13, s38] = Pt(a12, o6, t13, S3, e12);
        s38 || $4.push(...Tt(n13)), $4.push(...Tt(r8));
      }
      const M5 = [];
      if (k4) d6 && M5.push(_e(S3, 1, 1));
      else {
        const [r8, a13, s38] = Pt(n12, o6, t13, S3, e12);
        s38 || M5.push(...Tt(a13)), M5.push(_e(r8, 1, d6));
      }
      const x3 = $t(t13, o6, [f("sampleSourceLoader"), De({ from: "stack", target: S3 }), ...M5, ...$4, _e(S3), "fn" === w8 && Ve((e13, t14, { a: r8 }) => a12(e13, r8), 1), s37 && Ve(Re), f("sampleSourceUpward", b4)], e12, s37);
      return Se(n12, [x3]), Object.assign(x3.meta, c13, { joint: 1 }), o6;
    };
    Tt = (e12) => [_e(e12), Pe((e13, t13, { a: r8 }) => r8, 1)];
    Pt = (e12, t13, r8, n12, o6) => {
      const s37 = Y(e12), i11 = s37 ? B(e12) : Be(), c13 = Be(s37);
      return s37 || a({ parent: e12, node: [De({ from: "stack", target: i11 }), De({ from: "value", store: 1, target: c13 })], family: { owners: [...new Set([e12, t13, r8].flat())], links: t13 }, meta: { op: o6 }, regional: 1 }), f("sampleSource", c13, i11, n12), [i11, c13, s37];
    };
    _t = (e12, t13, r8, n12) => {
      const a12 = e12[t13];
      a12 && o({ target: a12, params: Array.isArray(a12) ? a12.map(() => r8) : r8, defer: 1, stack: n12 });
    };
    Lt = (e12) => !e12.node.meta.isCombine || e12.parent && "combine" !== e12.parent.node.meta.op;
    Bt = (e12) => e12;
  }
});

// node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react-jsx-runtime.production.js
var require_react_jsx_runtime_production = __commonJS({
  "node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react-jsx-runtime.production.js"(exports) {
    "use strict";
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    function jsxProd(type, config, maybeKey) {
      var key = null;
      void 0 !== maybeKey && (key = "" + maybeKey);
      void 0 !== config.key && (key = "" + config.key);
      if ("key" in config) {
        maybeKey = {};
        for (var propName in config)
          "key" !== propName && (maybeKey[propName] = config[propName]);
      } else maybeKey = config;
      config = maybeKey.ref;
      return {
        $$typeof: REACT_ELEMENT_TYPE,
        type,
        key,
        ref: void 0 !== config ? config : null,
        props: maybeKey
      };
    }
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsx = jsxProd;
    exports.jsxs = jsxProd;
  }
});

// node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_react_jsx_runtime_production();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __addDisposableResource: () => __addDisposableResource,
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldIn: () => __classPrivateFieldIn,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __disposeResources: () => __disposeResources,
  __esDecorate: () => __esDecorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __propKey: () => __propKey,
  __read: () => __read,
  __rest: () => __rest,
  __rewriteRelativeImportExtension: () => __rewriteRelativeImportExtension,
  __runInitializers: () => __runInitializers,
  __setFunctionName: () => __setFunctionName,
  __spread: () => __spread,
  __spreadArray: () => __spreadArray,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values,
  default: () => tslib_es6_default
});
function __extends(d6, b4) {
  if (typeof b4 !== "function" && b4 !== null)
    throw new TypeError("Class extends value " + String(b4) + " is not a constructor or null");
  extendStatics(d6, b4);
  function __() {
    this.constructor = d6;
  }
  d6.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
}
function __rest(s37, e12) {
  var t13 = {};
  for (var p13 in s37) if (Object.prototype.hasOwnProperty.call(s37, p13) && e12.indexOf(p13) < 0)
    t13[p13] = s37[p13];
  if (s37 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i11 = 0, p13 = Object.getOwnPropertySymbols(s37); i11 < p13.length; i11++) {
      if (e12.indexOf(p13[i11]) < 0 && Object.prototype.propertyIsEnumerable.call(s37, p13[i11]))
        t13[p13[i11]] = s37[p13[i11]];
    }
  return t13;
}
function __decorate(decorators, target, key, desc) {
  var c13 = arguments.length, r8 = c13 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d6;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r8 = Reflect.decorate(decorators, target, key, desc);
  else for (var i11 = decorators.length - 1; i11 >= 0; i11--) if (d6 = decorators[i11]) r8 = (c13 < 3 ? d6(r8) : c13 > 3 ? d6(target, key, r8) : d6(target, key)) || r8;
  return c13 > 3 && r8 && Object.defineProperty(target, key, r8), r8;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f11) {
    if (f11 !== void 0 && typeof f11 !== "function") throw new TypeError("Function expected");
    return f11;
  }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _3, done = false;
  for (var i11 = decorators.length - 1; i11 >= 0; i11--) {
    var context = {};
    for (var p13 in contextIn) context[p13] = p13 === "access" ? {} : contextIn[p13];
    for (var p13 in contextIn.access) context.access[p13] = contextIn.access[p13];
    context.addInitializer = function(f11) {
      if (done) throw new TypeError("Cannot add initializers after decoration has completed");
      extraInitializers.push(accept(f11 || null));
    };
    var result = (0, decorators[i11])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
    if (kind === "accessor") {
      if (result === void 0) continue;
      if (result === null || typeof result !== "object") throw new TypeError("Object expected");
      if (_3 = accept(result.get)) descriptor.get = _3;
      if (_3 = accept(result.set)) descriptor.set = _3;
      if (_3 = accept(result.init)) initializers.unshift(_3);
    } else if (_3 = accept(result)) {
      if (kind === "field") initializers.unshift(_3);
      else descriptor[key] = _3;
    }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
}
function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i11 = 0; i11 < initializers.length; i11++) {
    value = useValue ? initializers[i11].call(thisArg, value) : initializers[i11].call(thisArg);
  }
  return useValue ? value : void 0;
}
function __propKey(x3) {
  return typeof x3 === "symbol" ? x3 : "".concat(x3);
}
function __setFunctionName(f11, name2, prefix2) {
  if (typeof name2 === "symbol") name2 = name2.description ? "[".concat(name2.description, "]") : "";
  return Object.defineProperty(f11, "name", { configurable: true, value: prefix2 ? "".concat(prefix2, " ", name2) : name2 });
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e12) {
        reject(e12);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e12) {
        reject(e12);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t13[0] & 1) throw t13[1];
    return t13[1];
  }, trys: [], ops: [] }, f11, y3, t13, g9 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g9.next = verb(0), g9["throw"] = verb(1), g9["return"] = verb(2), typeof Symbol === "function" && (g9[Symbol.iterator] = function() {
    return this;
  }), g9;
  function verb(n12) {
    return function(v5) {
      return step([n12, v5]);
    };
  }
  function step(op) {
    if (f11) throw new TypeError("Generator is already executing.");
    while (g9 && (g9 = 0, op[0] && (_3 = 0)), _3) try {
      if (f11 = 1, y3 && (t13 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t13 = y3["return"]) && t13.call(y3), 0) : y3.next) && !(t13 = t13.call(y3, op[1])).done) return t13;
      if (y3 = 0, t13) op = [op[0] & 2, t13.value];
      switch (op[0]) {
        case 0:
        case 1:
          t13 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t13 = _3.trys, t13 = t13.length > 0 && t13[t13.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t13 || op[1] > t13[0] && op[1] < t13[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t13[1]) {
            _3.label = t13[1];
            t13 = op;
            break;
          }
          if (t13 && _3.label < t13[2]) {
            _3.label = t13[2];
            _3.ops.push(op);
            break;
          }
          if (t13[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e12) {
      op = [6, e12];
      y3 = 0;
    } finally {
      f11 = t13 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __exportStar(m11, o6) {
  for (var p13 in m11) if (p13 !== "default" && !Object.prototype.hasOwnProperty.call(o6, p13)) __createBinding(o6, m11, p13);
}
function __values(o6) {
  var s37 = typeof Symbol === "function" && Symbol.iterator, m11 = s37 && o6[s37], i11 = 0;
  if (m11) return m11.call(o6);
  if (o6 && typeof o6.length === "number") return {
    next: function() {
      if (o6 && i11 >= o6.length) o6 = void 0;
      return { value: o6 && o6[i11++], done: !o6 };
    }
  };
  throw new TypeError(s37 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o6, n12) {
  var m11 = typeof Symbol === "function" && o6[Symbol.iterator];
  if (!m11) return o6;
  var i11 = m11.call(o6), r8, ar2 = [], e12;
  try {
    while ((n12 === void 0 || n12-- > 0) && !(r8 = i11.next()).done) ar2.push(r8.value);
  } catch (error) {
    e12 = { error };
  } finally {
    try {
      if (r8 && !r8.done && (m11 = i11["return"])) m11.call(i11);
    } finally {
      if (e12) throw e12.error;
    }
  }
  return ar2;
}
function __spread() {
  for (var ar2 = [], i11 = 0; i11 < arguments.length; i11++)
    ar2 = ar2.concat(__read(arguments[i11]));
  return ar2;
}
function __spreadArrays() {
  for (var s37 = 0, i11 = 0, il = arguments.length; i11 < il; i11++) s37 += arguments[i11].length;
  for (var r8 = Array(s37), k4 = 0, i11 = 0; i11 < il; i11++)
    for (var a12 = arguments[i11], j4 = 0, jl = a12.length; j4 < jl; j4++, k4++)
      r8[k4] = a12[j4];
  return r8;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i11 = 0, l9 = from.length, ar2; i11 < l9; i11++) {
    if (ar2 || !(i11 in from)) {
      if (!ar2) ar2 = Array.prototype.slice.call(from, 0, i11);
      ar2[i11] = from[i11];
    }
  }
  return to.concat(ar2 || Array.prototype.slice.call(from));
}
function __await(v5) {
  return this instanceof __await ? (this.v = v5, this) : new __await(v5);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g9 = generator.apply(thisArg, _arguments || []), i11, q3 = [];
  return i11 = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i11[Symbol.asyncIterator] = function() {
    return this;
  }, i11;
  function awaitReturn(f11) {
    return function(v5) {
      return Promise.resolve(v5).then(f11, reject);
    };
  }
  function verb(n12, f11) {
    if (g9[n12]) {
      i11[n12] = function(v5) {
        return new Promise(function(a12, b4) {
          q3.push([n12, v5, a12, b4]) > 1 || resume(n12, v5);
        });
      };
      if (f11) i11[n12] = f11(i11[n12]);
    }
  }
  function resume(n12, v5) {
    try {
      step(g9[n12](v5));
    } catch (e12) {
      settle(q3[0][3], e12);
    }
  }
  function step(r8) {
    r8.value instanceof __await ? Promise.resolve(r8.value.v).then(fulfill, reject) : settle(q3[0][2], r8);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f11, v5) {
    if (f11(v5), q3.shift(), q3.length) resume(q3[0][0], q3[0][1]);
  }
}
function __asyncDelegator(o6) {
  var i11, p13;
  return i11 = {}, verb("next"), verb("throw", function(e12) {
    throw e12;
  }), verb("return"), i11[Symbol.iterator] = function() {
    return this;
  }, i11;
  function verb(n12, f11) {
    i11[n12] = o6[n12] ? function(v5) {
      return (p13 = !p13) ? { value: __await(o6[n12](v5)), done: false } : f11 ? f11(v5) : v5;
    } : f11;
  }
}
function __asyncValues(o6) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m11 = o6[Symbol.asyncIterator], i11;
  return m11 ? m11.call(o6) : (o6 = typeof __values === "function" ? __values(o6) : o6[Symbol.iterator](), i11 = {}, verb("next"), verb("throw"), verb("return"), i11[Symbol.asyncIterator] = function() {
    return this;
  }, i11);
  function verb(n12) {
    i11[n12] = o6[n12] && function(v5) {
      return new Promise(function(resolve, reject) {
        v5 = o6[n12](v5), settle(resolve, reject, v5.done, v5.value);
      });
    };
  }
  function settle(resolve, reject, d6, v5) {
    Promise.resolve(v5).then(function(v6) {
      resolve({ value: v6, done: d6 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k4 = ownKeys(mod), i11 = 0; i11 < k4.length; i11++) if (k4[i11] !== "default") __createBinding(result, mod, k4[i11]);
  }
  __setModuleDefault(result, mod);
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, state2, kind, f11) {
  if (kind === "a" && !f11) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state2 === "function" ? receiver !== state2 || !f11 : !state2.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f11 : kind === "a" ? f11.call(receiver) : f11 ? f11.value : state2.get(receiver);
}
function __classPrivateFieldSet(receiver, state2, value, kind, f11) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f11) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state2 === "function" ? receiver !== state2 || !f11 : !state2.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f11.call(receiver, value) : f11 ? f11.value = value : state2.set(receiver, value), value;
}
function __classPrivateFieldIn(state2, receiver) {
  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state2 === "function" ? receiver === state2 : state2.has(receiver);
}
function __addDisposableResource(env2, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose, inner;
    if (async) {
      if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
      dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
      if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
      dispose = value[Symbol.dispose];
      if (async) inner = dispose;
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    if (inner) dispose = function() {
      try {
        inner.call(this);
      } catch (e12) {
        return Promise.reject(e12);
      }
    };
    env2.stack.push({ value, dispose, async });
  } else if (async) {
    env2.stack.push({ async: true });
  }
  return value;
}
function __disposeResources(env2) {
  function fail(e12) {
    env2.error = env2.hasError ? new _SuppressedError(e12, env2.error, "An error was suppressed during disposal.") : e12;
    env2.hasError = true;
  }
  var r8, s37 = 0;
  function next() {
    while (r8 = env2.stack.pop()) {
      try {
        if (!r8.async && s37 === 1) return s37 = 0, env2.stack.push(r8), Promise.resolve().then(next);
        if (r8.dispose) {
          var result = r8.dispose.call(r8.value);
          if (r8.async) return s37 |= 2, Promise.resolve(result).then(next, function(e12) {
            fail(e12);
            return next();
          });
        } else s37 |= 1;
      } catch (e12) {
        fail(e12);
      }
    }
    if (s37 === 1) return env2.hasError ? Promise.reject(env2.error) : Promise.resolve();
    if (env2.hasError) throw env2.error;
  }
  return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
  if (typeof path === "string" && /^\.\.?\//.test(path)) {
    return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m11, tsx, d6, ext, cm) {
      return tsx ? preserveJsx ? ".jsx" : ".js" : d6 && (!ext || !cm) ? m11 : d6 + ext + "." + cm.toLowerCase() + "js";
    });
  }
  return path;
}
var extendStatics, __assign, __createBinding, __setModuleDefault, ownKeys, _SuppressedError, tslib_es6_default;
var init_tslib_es6 = __esm({
  "node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs"() {
    extendStatics = function(d6, b4) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d7, b5) {
        d7.__proto__ = b5;
      } || function(d7, b5) {
        for (var p13 in b5) if (Object.prototype.hasOwnProperty.call(b5, p13)) d7[p13] = b5[p13];
      };
      return extendStatics(d6, b4);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t13) {
        for (var s37, i11 = 1, n12 = arguments.length; i11 < n12; i11++) {
          s37 = arguments[i11];
          for (var p13 in s37) if (Object.prototype.hasOwnProperty.call(s37, p13)) t13[p13] = s37[p13];
        }
        return t13;
      };
      return __assign.apply(this, arguments);
    };
    __createBinding = Object.create ? function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      var desc = Object.getOwnPropertyDescriptor(m11, k4);
      if (!desc || ("get" in desc ? !m11.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m11[k4];
        } };
      }
      Object.defineProperty(o6, k22, desc);
    } : function(o6, m11, k4, k22) {
      if (k22 === void 0) k22 = k4;
      o6[k22] = m11[k4];
    };
    __setModuleDefault = Object.create ? function(o6, v5) {
      Object.defineProperty(o6, "default", { enumerable: true, value: v5 });
    } : function(o6, v5) {
      o6["default"] = v5;
    };
    ownKeys = function(o6) {
      ownKeys = Object.getOwnPropertyNames || function(o7) {
        var ar2 = [];
        for (var k4 in o7) if (Object.prototype.hasOwnProperty.call(o7, k4)) ar2[ar2.length] = k4;
        return ar2;
      };
      return ownKeys(o6);
    };
    _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
      var e12 = new Error(message);
      return e12.name = "SuppressedError", e12.error = error, e12.suppressed = suppressed, e12;
    };
    tslib_es6_default = {
      __extends,
      __assign,
      __rest,
      __decorate,
      __param,
      __esDecorate,
      __runInitializers,
      __propKey,
      __setFunctionName,
      __metadata,
      __awaiter,
      __generator,
      __createBinding,
      __exportStar,
      __values,
      __read,
      __spread,
      __spreadArrays,
      __spreadArray,
      __await,
      __asyncGenerator,
      __asyncDelegator,
      __asyncValues,
      __makeTemplateObject,
      __importStar,
      __importDefault,
      __classPrivateFieldGet,
      __classPrivateFieldSet,
      __classPrivateFieldIn,
      __addDisposableResource,
      __disposeResources,
      __rewriteRelativeImportExtension
    };
  }
});

// node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/constants.js
var require_constants = __commonJS({
  "node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.removedBarSizeVariable = exports.noScrollbarsClassName = exports.fullWidthClassName = exports.zeroRightClassName = void 0;
    exports.zeroRightClassName = "right-scroll-bar-position";
    exports.fullWidthClassName = "width-before-scroll-bar";
    exports.noScrollbarsClassName = "with-scroll-bars-hidden";
    exports.removedBarSizeVariable = "--removed-body-scroll-bar-size";
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/assignRef.js
var require_assignRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/assignRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assignRef = void 0;
    function assignRef2(ref, value) {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref) {
        ref.current = value;
      }
      return ref;
    }
    exports.assignRef = assignRef2;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useRef.js
var require_useRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useCallbackRef = void 0;
    var react_1 = require_react();
    function useCallbackRef(initialValue, callback) {
      var ref = (0, react_1.useState)(function() {
        return {
          // value
          value: initialValue,
          // last callback
          callback,
          // "memoized" public interface
          facade: {
            get current() {
              return ref.value;
            },
            set current(value) {
              var last = ref.value;
              if (last !== value) {
                ref.value = value;
                ref.callback(value, last);
              }
            }
          }
        };
      })[0];
      ref.callback = callback;
      return ref.facade;
    }
    exports.useCallbackRef = useCallbackRef;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/createRef.js
var require_createRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/createRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createCallbackRef = void 0;
    function createCallbackRef(callback) {
      var current = null;
      return {
        get current() {
          return current;
        },
        set current(value) {
          var last = current;
          if (last !== value) {
            current = value;
            callback(value, last);
          }
        }
      };
    }
    exports.createCallbackRef = createCallbackRef;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/mergeRef.js
var require_mergeRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/mergeRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.mergeRefs = void 0;
    var assignRef_1 = require_assignRef();
    var createRef_1 = require_createRef();
    function mergeRefs2(refs) {
      return (0, createRef_1.createCallbackRef)(function(newValue) {
        return refs.forEach(function(ref) {
          return (0, assignRef_1.assignRef)(ref, newValue);
        });
      });
    }
    exports.mergeRefs = mergeRefs2;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useMergeRef.js
var require_useMergeRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useMergeRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useMergeRefs = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var assignRef_1 = require_assignRef();
    var useRef_1 = require_useRef();
    var useIsomorphicLayoutEffect3 = typeof window !== "undefined" ? React8.useLayoutEffect : React8.useEffect;
    var currentValues = /* @__PURE__ */ new WeakMap();
    function useMergeRefs(refs, defaultValue2) {
      var callbackRef = (0, useRef_1.useCallbackRef)(defaultValue2 || null, function(newValue) {
        return refs.forEach(function(ref) {
          return (0, assignRef_1.assignRef)(ref, newValue);
        });
      });
      useIsomorphicLayoutEffect3(function() {
        var oldValue = currentValues.get(callbackRef);
        if (oldValue) {
          var prevRefs_1 = new Set(oldValue);
          var nextRefs_1 = new Set(refs);
          var current_1 = callbackRef.current;
          prevRefs_1.forEach(function(ref) {
            if (!nextRefs_1.has(ref)) {
              (0, assignRef_1.assignRef)(ref, null);
            }
          });
          nextRefs_1.forEach(function(ref) {
            if (!prevRefs_1.has(ref)) {
              (0, assignRef_1.assignRef)(ref, current_1);
            }
          });
        }
        currentValues.set(callbackRef, refs);
      }, [refs]);
      return callbackRef;
    }
    exports.useMergeRefs = useMergeRefs;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useTransformRef.js
var require_useTransformRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/useTransformRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useTransformRef = void 0;
    var assignRef_1 = require_assignRef();
    var useRef_1 = require_useRef();
    function useTransformRef(ref, transformer) {
      return (0, useRef_1.useCallbackRef)(null, function(value) {
        return (0, assignRef_1.assignRef)(ref, transformer(value));
      });
    }
    exports.useTransformRef = useTransformRef;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/transformRef.js
var require_transformRef = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/transformRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.transformRef = void 0;
    var assignRef_1 = require_assignRef();
    var createRef_1 = require_createRef();
    function transformRef(ref, transformer) {
      return (0, createRef_1.createCallbackRef)(function(value) {
        return (0, assignRef_1.assignRef)(ref, transformer(value));
      });
    }
    exports.transformRef = transformRef;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/refToCallback.js
var require_refToCallback = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/refToCallback.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useRefToCallback = exports.refToCallback = void 0;
    function refToCallback(ref) {
      return function(newValue) {
        if (typeof ref === "function") {
          ref(newValue);
        } else if (ref) {
          ref.current = newValue;
        }
      };
    }
    exports.refToCallback = refToCallback;
    var nullCallback = function() {
      return null;
    };
    var weakMem = /* @__PURE__ */ new WeakMap();
    var weakMemoize = function(ref) {
      var usedRef = ref || nullCallback;
      var storedRef = weakMem.get(usedRef);
      if (storedRef) {
        return storedRef;
      }
      var cb = refToCallback(usedRef);
      weakMem.set(usedRef, cb);
      return cb;
    };
    function useRefToCallback(ref) {
      return weakMemoize(ref);
    }
    exports.useRefToCallback = useRefToCallback;
  }
});

// node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/index.js
var require_es5 = __commonJS({
  "node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.2_react@19.1.0/node_modules/use-callback-ref/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useRefToCallback = exports.refToCallback = exports.transformRef = exports.useTransformRef = exports.useMergeRefs = exports.mergeRefs = exports.createCallbackRef = exports.useCallbackRef = exports.assignRef = void 0;
    var assignRef_1 = require_assignRef();
    Object.defineProperty(exports, "assignRef", { enumerable: true, get: function() {
      return assignRef_1.assignRef;
    } });
    var useRef_1 = require_useRef();
    Object.defineProperty(exports, "useCallbackRef", { enumerable: true, get: function() {
      return useRef_1.useCallbackRef;
    } });
    var createRef_1 = require_createRef();
    Object.defineProperty(exports, "createCallbackRef", { enumerable: true, get: function() {
      return createRef_1.createCallbackRef;
    } });
    var mergeRef_1 = require_mergeRef();
    Object.defineProperty(exports, "mergeRefs", { enumerable: true, get: function() {
      return mergeRef_1.mergeRefs;
    } });
    var useMergeRef_1 = require_useMergeRef();
    Object.defineProperty(exports, "useMergeRefs", { enumerable: true, get: function() {
      return useMergeRef_1.useMergeRefs;
    } });
    var useTransformRef_1 = require_useTransformRef();
    Object.defineProperty(exports, "useTransformRef", { enumerable: true, get: function() {
      return useTransformRef_1.useTransformRef;
    } });
    var transformRef_1 = require_transformRef();
    Object.defineProperty(exports, "transformRef", { enumerable: true, get: function() {
      return transformRef_1.transformRef;
    } });
    var refToCallback_1 = require_refToCallback();
    Object.defineProperty(exports, "refToCallback", { enumerable: true, get: function() {
      return refToCallback_1.refToCallback;
    } });
    Object.defineProperty(exports, "useRefToCallback", { enumerable: true, get: function() {
      return refToCallback_1.useRefToCallback;
    } });
  }
});

// node_modules/.pnpm/detect-node-es@1.1.0/node_modules/detect-node-es/es5/node.js
var require_node = __commonJS({
  "node_modules/.pnpm/detect-node-es@1.1.0/node_modules/detect-node-es/es5/node.js"(exports, module) {
    module.exports.isNode = Object.prototype.toString.call(typeof process !== "undefined" ? process : 0) === "[object process]";
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/env.js
var require_env = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.env = void 0;
    var detect_node_es_1 = require_node();
    exports.env = {
      isNode: detect_node_es_1.isNode,
      forceCache: false
    };
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/hook.js
var require_hook = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/hook.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useSidecar = void 0;
    var react_1 = require_react();
    var env_1 = require_env();
    var cache = /* @__PURE__ */ new WeakMap();
    var NO_OPTIONS = {};
    function useSidecar(importer, effect) {
      var options = effect && effect.options || NO_OPTIONS;
      if (env_1.env.isNode && !options.ssr) {
        return [null, null];
      }
      return useRealSidecar(importer, effect);
    }
    exports.useSidecar = useSidecar;
    function useRealSidecar(importer, effect) {
      var options = effect && effect.options || NO_OPTIONS;
      var couldUseCache = env_1.env.forceCache || env_1.env.isNode && !!options.ssr || !options.async;
      var _a = (0, react_1.useState)(couldUseCache ? function() {
        return cache.get(importer);
      } : void 0), Car = _a[0], setCar = _a[1];
      var _b = (0, react_1.useState)(null), error = _b[0], setError = _b[1];
      (0, react_1.useEffect)(function() {
        if (!Car) {
          importer().then(function(car) {
            var resolved = effect ? effect.read() : car.default || car;
            if (!resolved) {
              console.error("Sidecar error: with importer", importer);
              var error_1;
              if (effect) {
                console.error("Sidecar error: with medium", effect);
                error_1 = new Error("Sidecar medium was not found");
              } else {
                error_1 = new Error("Sidecar was not found in exports");
              }
              setError(function() {
                return error_1;
              });
              throw error_1;
            }
            cache.set(importer, resolved);
            setCar(function() {
              return resolved;
            });
          }, function(e12) {
            return setError(function() {
              return e12;
            });
          });
        }
      }, []);
      return [Car, error];
    }
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/hoc.js
var require_hoc = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/hoc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sidecar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var hook_1 = require_hook();
    function sidecar(importer, errorComponent) {
      var ErrorCase = function() {
        return errorComponent;
      };
      return function Sidecar(props) {
        var _a = (0, hook_1.useSidecar)(importer, props.sideCar), Car = _a[0], error = _a[1];
        if (error && errorComponent) {
          return ErrorCase;
        }
        return Car ? React8.createElement(Car, tslib_1.__assign({}, props)) : null;
      };
    }
    exports.sidecar = sidecar;
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/config.js
var require_config = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/config.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setConfig = exports.config = void 0;
    exports.config = {
      onError: function(e12) {
        return console.error(e12);
      }
    };
    var setConfig = function(conf) {
      Object.assign(exports.config, conf);
    };
    exports.setConfig = setConfig;
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/medium.js
var require_medium = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/medium.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createSidecarMedium = exports.createMedium = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    function ItoI(a12) {
      return a12;
    }
    function innerCreateMedium(defaults, middleware) {
      if (middleware === void 0) {
        middleware = ItoI;
      }
      var buffer = [];
      var assigned = false;
      var medium = {
        read: function() {
          if (assigned) {
            throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
          }
          if (buffer.length) {
            return buffer[buffer.length - 1];
          }
          return defaults;
        },
        useMedium: function(data) {
          var item3 = middleware(data, assigned);
          buffer.push(item3);
          return function() {
            buffer = buffer.filter(function(x3) {
              return x3 !== item3;
            });
          };
        },
        assignSyncMedium: function(cb) {
          assigned = true;
          while (buffer.length) {
            var cbs = buffer;
            buffer = [];
            cbs.forEach(cb);
          }
          buffer = {
            push: function(x3) {
              return cb(x3);
            },
            filter: function() {
              return buffer;
            }
          };
        },
        assignMedium: function(cb) {
          assigned = true;
          var pendingQueue = [];
          if (buffer.length) {
            var cbs = buffer;
            buffer = [];
            cbs.forEach(cb);
            pendingQueue = buffer;
          }
          var executeQueue = function() {
            var cbs2 = pendingQueue;
            pendingQueue = [];
            cbs2.forEach(cb);
          };
          var cycle = function() {
            return Promise.resolve().then(executeQueue);
          };
          cycle();
          buffer = {
            push: function(x3) {
              pendingQueue.push(x3);
              cycle();
            },
            filter: function(filter3) {
              pendingQueue = pendingQueue.filter(filter3);
              return buffer;
            }
          };
        }
      };
      return medium;
    }
    function createMedium(defaults, middleware) {
      if (middleware === void 0) {
        middleware = ItoI;
      }
      return innerCreateMedium(defaults, middleware);
    }
    exports.createMedium = createMedium;
    function createSidecarMedium(options) {
      if (options === void 0) {
        options = {};
      }
      var medium = innerCreateMedium(null);
      medium.options = tslib_1.__assign({ async: true, ssr: false }, options);
      return medium;
    }
    exports.createSidecarMedium = createSidecarMedium;
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/renderProp.js
var require_renderProp = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/renderProp.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.renderCar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var react_1 = require_react();
    function renderCar(WrappedComponent, defaults) {
      function State(_a) {
        var stateRef = _a.stateRef, props = _a.props;
        var renderTarget = (0, react_1.useCallback)(function SideTarget() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          (0, react_1.useLayoutEffect)(function() {
            stateRef.current(args);
          });
          return null;
        }, []);
        return React8.createElement(WrappedComponent, tslib_1.__assign({}, props, { children: renderTarget }));
      }
      var Children3 = React8.memo(function(_a) {
        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;
        var _b = (0, react_1.useState)(defaultState.current), state2 = _b[0], setState = _b[1];
        (0, react_1.useEffect)(function() {
          stateRef.current = setState;
        }, []);
        return children.apply(void 0, state2);
      }, function() {
        return true;
      });
      return function Combiner(props) {
        var defaultState = React8.useRef(defaults(props));
        var ref = React8.useRef(function(state2) {
          return defaultState.current = state2;
        });
        return React8.createElement(
          React8.Fragment,
          null,
          React8.createElement(State, { stateRef: ref, props }),
          React8.createElement(Children3, { stateRef: ref, defaultState, children: props.children })
        );
      };
    }
    exports.renderCar = renderCar;
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/exports.js
var require_exports = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/exports.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.exportSidecar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var SideCar = function(_a) {
      var sideCar = _a.sideCar, rest = tslib_1.__rest(_a, ["sideCar"]);
      if (!sideCar) {
        throw new Error("Sidecar: please provide `sideCar` property to import the right car");
      }
      var Target = sideCar.read();
      if (!Target) {
        throw new Error("Sidecar medium not found");
      }
      return React8.createElement(Target, tslib_1.__assign({}, rest));
    };
    SideCar.isSideCarExport = true;
    function exportSidecar(medium, exported) {
      medium.useMedium(exported);
      return SideCar;
    }
    exports.exportSidecar = exportSidecar;
  }
});

// node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/index.js
var require_es52 = __commonJS({
  "node_modules/.pnpm/use-sidecar@1.1.3_@types+react@19.1.2_react@19.1.0/node_modules/use-sidecar/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.exportSidecar = exports.renderCar = exports.createSidecarMedium = exports.createMedium = exports.setConfig = exports.useSidecar = exports.sidecar = void 0;
    var hoc_1 = require_hoc();
    Object.defineProperty(exports, "sidecar", { enumerable: true, get: function() {
      return hoc_1.sidecar;
    } });
    var hook_1 = require_hook();
    Object.defineProperty(exports, "useSidecar", { enumerable: true, get: function() {
      return hook_1.useSidecar;
    } });
    var config_1 = require_config();
    Object.defineProperty(exports, "setConfig", { enumerable: true, get: function() {
      return config_1.setConfig;
    } });
    var medium_1 = require_medium();
    Object.defineProperty(exports, "createMedium", { enumerable: true, get: function() {
      return medium_1.createMedium;
    } });
    Object.defineProperty(exports, "createSidecarMedium", { enumerable: true, get: function() {
      return medium_1.createSidecarMedium;
    } });
    var renderProp_1 = require_renderProp();
    Object.defineProperty(exports, "renderCar", { enumerable: true, get: function() {
      return renderProp_1.renderCar;
    } });
    var exports_1 = require_exports();
    Object.defineProperty(exports, "exportSidecar", { enumerable: true, get: function() {
      return exports_1.exportSidecar;
    } });
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/medium.js
var require_medium2 = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/medium.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.effectCar = void 0;
    var use_sidecar_1 = require_es52();
    exports.effectCar = (0, use_sidecar_1.createSidecarMedium)();
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/UI.js
var require_UI = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/UI.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RemoveScroll = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var constants_1 = require_constants();
    var use_callback_ref_1 = require_es5();
    var medium_1 = require_medium2();
    var nothing = function() {
      return;
    };
    var RemoveScroll3 = React8.forwardRef(function(props, parentRef) {
      var ref = React8.useRef(null);
      var _a = React8.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing
      }), callbacks = _a[0], setCallbacks = _a[1];
      var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container2 = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = tslib_1.__rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
      var SideCar = sideCar;
      var containerRef = (0, use_callback_ref_1.useMergeRefs)([ref, parentRef]);
      var containerProps = tslib_1.__assign(tslib_1.__assign({}, rest), callbacks);
      return React8.createElement(
        React8.Fragment,
        null,
        enabled && React8.createElement(SideCar, { sideCar: medium_1.effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
        forwardProps ? React8.cloneElement(React8.Children.only(children), tslib_1.__assign(tslib_1.__assign({}, containerProps), { ref: containerRef })) : React8.createElement(Container2, tslib_1.__assign({}, containerProps, { className, ref: containerRef }), children)
      );
    });
    exports.RemoveScroll = RemoveScroll3;
    RemoveScroll3.defaultProps = {
      enabled: true,
      removeScrollBar: true,
      inert: false
    };
    RemoveScroll3.classNames = {
      fullWidth: constants_1.fullWidthClassName,
      zeroRight: constants_1.zeroRightClassName
    };
  }
});

// node_modules/.pnpm/get-nonce@1.0.1/node_modules/get-nonce/dist/es5/index.js
var require_es53 = __commonJS({
  "node_modules/.pnpm/get-nonce@1.0.1/node_modules/get-nonce/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var currentNonce;
    exports.setNonce = function(nonce) {
      currentNonce = nonce;
    };
    exports.getNonce = function() {
      if (currentNonce) {
        return currentNonce;
      }
      if (typeof __webpack_nonce__ !== "undefined") {
        return __webpack_nonce__;
      }
      return void 0;
    };
  }
});

// node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/singleton.js
var require_singleton = __commonJS({
  "node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/singleton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stylesheetSingleton = void 0;
    var get_nonce_1 = require_es53();
    function makeStyleTag() {
      if (!document)
        return null;
      var tag = document.createElement("style");
      tag.type = "text/css";
      var nonce = (0, get_nonce_1.getNonce)();
      if (nonce) {
        tag.setAttribute("nonce", nonce);
      }
      return tag;
    }
    function injectStyles(tag, css) {
      if (tag.styleSheet) {
        tag.styleSheet.cssText = css;
      } else {
        tag.appendChild(document.createTextNode(css));
      }
    }
    function insertStyleTag(tag) {
      var head = document.head || document.getElementsByTagName("head")[0];
      head.appendChild(tag);
    }
    var stylesheetSingleton = function() {
      var counter = 0;
      var stylesheet = null;
      return {
        add: function(style) {
          if (counter == 0) {
            if (stylesheet = makeStyleTag()) {
              injectStyles(stylesheet, style);
              insertStyleTag(stylesheet);
            }
          }
          counter++;
        },
        remove: function() {
          counter--;
          if (!counter && stylesheet) {
            stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
            stylesheet = null;
          }
        }
      };
    };
    exports.stylesheetSingleton = stylesheetSingleton;
  }
});

// node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/hook.js
var require_hook2 = __commonJS({
  "node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/hook.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.styleHookSingleton = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var singleton_1 = require_singleton();
    var styleHookSingleton = function() {
      var sheet = (0, singleton_1.stylesheetSingleton)();
      return function(styles, isDynamic) {
        React8.useEffect(function() {
          sheet.add(styles);
          return function() {
            sheet.remove();
          };
        }, [styles && isDynamic]);
      };
    };
    exports.styleHookSingleton = styleHookSingleton;
  }
});

// node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/component.js
var require_component = __commonJS({
  "node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.styleSingleton = void 0;
    var hook_1 = require_hook2();
    var styleSingleton = function() {
      var useStyle3 = (0, hook_1.styleHookSingleton)();
      var Sheet = function(_a) {
        var styles = _a.styles, dynamic = _a.dynamic;
        useStyle3(styles, dynamic);
        return null;
      };
      return Sheet;
    };
    exports.styleSingleton = styleSingleton;
  }
});

// node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/index.js
var require_es54 = __commonJS({
  "node_modules/.pnpm/react-style-singleton@2.2.3_@types+react@19.1.2_react@19.1.0/node_modules/react-style-singleton/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.styleHookSingleton = exports.stylesheetSingleton = exports.styleSingleton = void 0;
    var component_1 = require_component();
    Object.defineProperty(exports, "styleSingleton", { enumerable: true, get: function() {
      return component_1.styleSingleton;
    } });
    var singleton_1 = require_singleton();
    Object.defineProperty(exports, "stylesheetSingleton", { enumerable: true, get: function() {
      return singleton_1.stylesheetSingleton;
    } });
    var hook_1 = require_hook2();
    Object.defineProperty(exports, "styleHookSingleton", { enumerable: true, get: function() {
      return hook_1.styleHookSingleton;
    } });
  }
});

// node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/utils.js
var require_utils3 = __commonJS({
  "node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getGapWidth = exports.zeroGap = void 0;
    exports.zeroGap = {
      left: 0,
      top: 0,
      right: 0,
      gap: 0
    };
    var parse3 = function(x3) {
      return parseInt(x3 || "", 10) || 0;
    };
    var getOffset = function(gapMode) {
      var cs2 = window.getComputedStyle(document.body);
      var left = cs2[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
      var top2 = cs2[gapMode === "padding" ? "paddingTop" : "marginTop"];
      var right = cs2[gapMode === "padding" ? "paddingRight" : "marginRight"];
      return [parse3(left), parse3(top2), parse3(right)];
    };
    var getGapWidth = function(gapMode) {
      if (gapMode === void 0) {
        gapMode = "margin";
      }
      if (typeof window === "undefined") {
        return exports.zeroGap;
      }
      var offsets = getOffset(gapMode);
      var documentWidth = document.documentElement.clientWidth;
      var windowWidth = window.innerWidth;
      return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
      };
    };
    exports.getGapWidth = getGapWidth;
  }
});

// node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/component.js
var require_component2 = __commonJS({
  "node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RemoveScrollBar = exports.useLockAttribute = exports.lockAttribute = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var react_style_singleton_1 = require_es54();
    var constants_1 = require_constants();
    var utils_1 = require_utils3();
    var Style = (0, react_style_singleton_1.styleSingleton)();
    exports.lockAttribute = "data-scroll-locked";
    var getStyles = function(_a, allowRelative, gapMode, important) {
      var left = _a.left, top2 = _a.top, right = _a.right, gap = _a.gap;
      if (gapMode === void 0) {
        gapMode = "margin";
      }
      return "\n  .".concat(constants_1.noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(exports.lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
        allowRelative && "position: relative ".concat(important, ";"),
        gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top2, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
        gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
      ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(constants_1.zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(constants_1.fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(constants_1.zeroRightClassName, " .").concat(constants_1.zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(constants_1.fullWidthClassName, " .").concat(constants_1.fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(exports.lockAttribute, "] {\n    ").concat(constants_1.removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
    };
    var getCurrentUseCounter = function() {
      var counter = parseInt(document.body.getAttribute(exports.lockAttribute) || "0", 10);
      return isFinite(counter) ? counter : 0;
    };
    var useLockAttribute = function() {
      React8.useEffect(function() {
        document.body.setAttribute(exports.lockAttribute, (getCurrentUseCounter() + 1).toString());
        return function() {
          var newCounter = getCurrentUseCounter() - 1;
          if (newCounter <= 0) {
            document.body.removeAttribute(exports.lockAttribute);
          } else {
            document.body.setAttribute(exports.lockAttribute, newCounter.toString());
          }
        };
      }, []);
    };
    exports.useLockAttribute = useLockAttribute;
    var RemoveScrollBar = function(_a) {
      var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
      (0, exports.useLockAttribute)();
      var gap = React8.useMemo(function() {
        return (0, utils_1.getGapWidth)(gapMode);
      }, [gapMode]);
      return React8.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
    };
    exports.RemoveScrollBar = RemoveScrollBar;
  }
});

// node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/index.js
var require_es55 = __commonJS({
  "node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getGapWidth = exports.removedBarSizeVariable = exports.noScrollbarsClassName = exports.fullWidthClassName = exports.zeroRightClassName = exports.RemoveScrollBar = void 0;
    var component_1 = require_component2();
    Object.defineProperty(exports, "RemoveScrollBar", { enumerable: true, get: function() {
      return component_1.RemoveScrollBar;
    } });
    var constants_1 = require_constants();
    Object.defineProperty(exports, "zeroRightClassName", { enumerable: true, get: function() {
      return constants_1.zeroRightClassName;
    } });
    Object.defineProperty(exports, "fullWidthClassName", { enumerable: true, get: function() {
      return constants_1.fullWidthClassName;
    } });
    Object.defineProperty(exports, "noScrollbarsClassName", { enumerable: true, get: function() {
      return constants_1.noScrollbarsClassName;
    } });
    Object.defineProperty(exports, "removedBarSizeVariable", { enumerable: true, get: function() {
      return constants_1.removedBarSizeVariable;
    } });
    var utils_1 = require_utils3();
    Object.defineProperty(exports, "getGapWidth", { enumerable: true, get: function() {
      return utils_1.getGapWidth;
    } });
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/aggresiveCapture.js
var require_aggresiveCapture = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/aggresiveCapture.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.nonPassive = void 0;
    var passiveSupported = false;
    if (typeof window !== "undefined") {
      try {
        options = Object.defineProperty({}, "passive", {
          get: function() {
            passiveSupported = true;
            return true;
          }
        });
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, options);
      } catch (err) {
        passiveSupported = false;
      }
    }
    var options;
    exports.nonPassive = passiveSupported ? { passive: false } : false;
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/handleScroll.js
var require_handleScroll = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/handleScroll.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.handleScroll = exports.locationCouldBeScrolled = void 0;
    var alwaysContainsScroll = function(node) {
      return node.tagName === "TEXTAREA";
    };
    var elementCanBeScrolled = function(node, overflow) {
      if (!(node instanceof Element)) {
        return false;
      }
      var styles = window.getComputedStyle(node);
      return (
        // not-not-scrollable
        styles[overflow] !== "hidden" && // contains scroll inside self
        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
      );
    };
    var elementCouldBeVScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowY");
    };
    var elementCouldBeHScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowX");
    };
    var locationCouldBeScrolled = function(axis, node) {
      var ownerDocument = node.ownerDocument;
      var current = node;
      do {
        if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
          current = current.host;
        }
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
          var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];
          if (scrollHeight > clientHeight) {
            return true;
          }
        }
        current = current.parentNode;
      } while (current && current !== ownerDocument.body);
      return false;
    };
    exports.locationCouldBeScrolled = locationCouldBeScrolled;
    var getVScrollVariables = function(_a) {
      var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
      return [
        scrollTop,
        scrollHeight,
        clientHeight
      ];
    };
    var getHScrollVariables = function(_a) {
      var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
      return [
        scrollLeft,
        scrollWidth,
        clientWidth
      ];
    };
    var elementCouldBeScrolled = function(axis, node) {
      return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
    };
    var getScrollVariables = function(axis, node) {
      return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
    };
    var getDirectionFactor = function(axis, direction) {
      return axis === "h" && direction === "rtl" ? -1 : 1;
    };
    var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
      var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
      var delta = directionFactor * sourceDelta;
      var target = event.target;
      var targetInLock = endTarget.contains(target);
      var shouldCancelScroll = false;
      var isDeltaPositive = delta > 0;
      var availableScroll = 0;
      var availableScrollTop = 0;
      do {
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
        var elementScroll = scroll_1 - capacity - directionFactor * position;
        if (position || elementScroll) {
          if (elementCouldBeScrolled(axis, target)) {
            availableScroll += elementScroll;
            availableScrollTop += position;
          }
        }
        if (target instanceof ShadowRoot) {
          target = target.host;
        } else {
          target = target.parentNode;
        }
      } while (
        // portaled content
        !targetInLock && target !== document.body || // self content
        targetInLock && (endTarget.contains(target) || endTarget === target)
      );
      if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
        shouldCancelScroll = true;
      } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
        shouldCancelScroll = true;
      }
      return shouldCancelScroll;
    };
    exports.handleScroll = handleScroll;
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/SideEffect.js
var require_SideEffect = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/SideEffect.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RemoveScrollSideCar = exports.getDeltaXY = exports.getTouchXY = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var react_remove_scroll_bar_1 = require_es55();
    var react_style_singleton_1 = require_es54();
    var aggresiveCapture_1 = require_aggresiveCapture();
    var handleScroll_1 = require_handleScroll();
    var getTouchXY = function(event) {
      return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
    };
    exports.getTouchXY = getTouchXY;
    var getDeltaXY = function(event) {
      return [event.deltaX, event.deltaY];
    };
    exports.getDeltaXY = getDeltaXY;
    var extractRef = function(ref) {
      return ref && "current" in ref ? ref.current : ref;
    };
    var deltaCompare = function(x3, y3) {
      return x3[0] === y3[0] && x3[1] === y3[1];
    };
    var generateStyle = function(id5) {
      return "\n  .block-interactivity-".concat(id5, " {pointer-events: none;}\n  .allow-interactivity-").concat(id5, " {pointer-events: all;}\n");
    };
    var idCounter = 0;
    var lockStack = [];
    function RemoveScrollSideCar(props) {
      var shouldPreventQueue = React8.useRef([]);
      var touchStartRef = React8.useRef([0, 0]);
      var activeAxis = React8.useRef();
      var id5 = React8.useState(idCounter++)[0];
      var Style = React8.useState(react_style_singleton_1.styleSingleton)[0];
      var lastProps = React8.useRef(props);
      React8.useEffect(function() {
        lastProps.current = props;
      }, [props]);
      React8.useEffect(function() {
        if (props.inert) {
          document.body.classList.add("block-interactivity-".concat(id5));
          var allow_1 = tslib_1.__spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
          allow_1.forEach(function(el) {
            return el.classList.add("allow-interactivity-".concat(id5));
          });
          return function() {
            document.body.classList.remove("block-interactivity-".concat(id5));
            allow_1.forEach(function(el) {
              return el.classList.remove("allow-interactivity-".concat(id5));
            });
          };
        }
        return;
      }, [props.inert, props.lockRef.current, props.shards]);
      var shouldCancelEvent = React8.useCallback(function(event, parent) {
        if ("touches" in event && event.touches.length === 2 || event.type === "wheel" && event.ctrlKey) {
          return !lastProps.current.allowPinchZoom;
        }
        var touch = (0, exports.getTouchXY)(event);
        var touchStart = touchStartRef.current;
        var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
        var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
        var currentAxis;
        var target = event.target;
        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
        if ("touches" in event && moveDirection === "h" && target.type === "range") {
          return false;
        }
        var canBeScrolledInMainDirection = (0, handleScroll_1.locationCouldBeScrolled)(moveDirection, target);
        if (!canBeScrolledInMainDirection) {
          return true;
        }
        if (canBeScrolledInMainDirection) {
          currentAxis = moveDirection;
        } else {
          currentAxis = moveDirection === "v" ? "h" : "v";
          canBeScrolledInMainDirection = (0, handleScroll_1.locationCouldBeScrolled)(moveDirection, target);
        }
        if (!canBeScrolledInMainDirection) {
          return false;
        }
        if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
          activeAxis.current = currentAxis;
        }
        if (!currentAxis) {
          return true;
        }
        var cancelingAxis = activeAxis.current || currentAxis;
        return (0, handleScroll_1.handleScroll)(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
      }, []);
      var shouldPrevent = React8.useCallback(function(_event) {
        var event = _event;
        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {
          return;
        }
        var delta = "deltaY" in event ? (0, exports.getDeltaXY)(event) : (0, exports.getTouchXY)(event);
        var sourceEvent = shouldPreventQueue.current.filter(function(e12) {
          return e12.name === event.type && (e12.target === event.target || event.target === e12.shadowParent) && deltaCompare(e12.delta, delta);
        })[0];
        if (sourceEvent && sourceEvent.should) {
          if (event.cancelable) {
            event.preventDefault();
          }
          return;
        }
        if (!sourceEvent) {
          var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
            return node.contains(event.target);
          });
          var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
          if (shouldStop) {
            if (event.cancelable) {
              event.preventDefault();
            }
          }
        }
      }, []);
      var shouldCancel = React8.useCallback(function(name2, delta, target, should) {
        var event = { name: name2, delta, target, should, shadowParent: getOutermostShadowParent(target) };
        shouldPreventQueue.current.push(event);
        setTimeout(function() {
          shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e12) {
            return e12 !== event;
          });
        }, 1);
      }, []);
      var scrollTouchStart = React8.useCallback(function(event) {
        touchStartRef.current = (0, exports.getTouchXY)(event);
        activeAxis.current = void 0;
      }, []);
      var scrollWheel = React8.useCallback(function(event) {
        shouldCancel(event.type, (0, exports.getDeltaXY)(event), event.target, shouldCancelEvent(event, props.lockRef.current));
      }, []);
      var scrollTouchMove = React8.useCallback(function(event) {
        shouldCancel(event.type, (0, exports.getTouchXY)(event), event.target, shouldCancelEvent(event, props.lockRef.current));
      }, []);
      React8.useEffect(function() {
        lockStack.push(Style);
        props.setCallbacks({
          onScrollCapture: scrollWheel,
          onWheelCapture: scrollWheel,
          onTouchMoveCapture: scrollTouchMove
        });
        document.addEventListener("wheel", shouldPrevent, aggresiveCapture_1.nonPassive);
        document.addEventListener("touchmove", shouldPrevent, aggresiveCapture_1.nonPassive);
        document.addEventListener("touchstart", scrollTouchStart, aggresiveCapture_1.nonPassive);
        return function() {
          lockStack = lockStack.filter(function(inst) {
            return inst !== Style;
          });
          document.removeEventListener("wheel", shouldPrevent, aggresiveCapture_1.nonPassive);
          document.removeEventListener("touchmove", shouldPrevent, aggresiveCapture_1.nonPassive);
          document.removeEventListener("touchstart", scrollTouchStart, aggresiveCapture_1.nonPassive);
        };
      }, []);
      var removeScrollBar = props.removeScrollBar, inert = props.inert;
      return React8.createElement(
        React8.Fragment,
        null,
        inert ? React8.createElement(Style, { styles: generateStyle(id5) }) : null,
        removeScrollBar ? React8.createElement(react_remove_scroll_bar_1.RemoveScrollBar, { gapMode: props.gapMode }) : null
      );
    }
    exports.RemoveScrollSideCar = RemoveScrollSideCar;
    function getOutermostShadowParent(node) {
      var shadowParent = null;
      while (node !== null) {
        if (node instanceof ShadowRoot) {
          shadowParent = node.host;
          node = node.host;
        }
        node = node.parentNode;
      }
      return shadowParent;
    }
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/sidecar.js
var require_sidecar = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/sidecar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var use_sidecar_1 = require_es52();
    var SideEffect_1 = require_SideEffect();
    var medium_1 = require_medium2();
    exports.default = (0, use_sidecar_1.exportSidecar)(medium_1.effectCar, SideEffect_1.RemoveScrollSideCar);
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/Combination.js
var require_Combination = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/Combination.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React8 = tslib_1.__importStar(require_react());
    var UI_1 = require_UI();
    var sidecar_1 = tslib_1.__importDefault(require_sidecar());
    var ReactRemoveScroll = React8.forwardRef(function(props, ref) {
      return React8.createElement(UI_1.RemoveScroll, tslib_1.__assign({}, props, { ref, sideCar: sidecar_1.default }));
    });
    ReactRemoveScroll.classNames = UI_1.RemoveScroll.classNames;
    exports.default = ReactRemoveScroll;
  }
});

// node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/index.js
var require_es56 = __commonJS({
  "node_modules/.pnpm/react-remove-scroll@2.6.3_@types+react@19.1.2_react@19.1.0/node_modules/react-remove-scroll/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RemoveScroll = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var Combination_1 = tslib_1.__importDefault(require_Combination());
    exports.RemoveScroll = Combination_1.default;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/keys/keys.mjs
function keys(object) {
  return Object.keys(object);
}
var init_keys = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/keys/keys.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/deep-merge/deep-merge.mjs
function isObject2(item3) {
  return item3 && typeof item3 === "object" && !Array.isArray(item3);
}
function deepMerge(target, source) {
  const result = { ...target };
  const _source = source;
  if (isObject2(target) && isObject2(source)) {
    Object.keys(source).forEach((key) => {
      if (isObject2(_source[key])) {
        if (!(key in target)) {
          result[key] = _source[key];
        } else {
          result[key] = deepMerge(result[key], _source[key]);
        }
      } else {
        result[key] = _source[key];
      }
    });
  }
  return result;
}
var init_deep_merge = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/deep-merge/deep-merge.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/camel-to-kebab-case/camel-to-kebab-case.mjs
function camelToKebabCase(value) {
  return value.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);
}
var init_camel_to_kebab_case = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/camel-to-kebab-case/camel-to-kebab-case.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/units-converters/px.mjs
function getTransformedScaledValue(value) {
  if (typeof value !== "string" || !value.includes("var(--mantine-scale)")) {
    return value;
  }
  return value.match(/^calc\((.*?)\)$/)?.[1].split("*")[0].trim();
}
function px(value) {
  const transformedValue = getTransformedScaledValue(value);
  if (typeof transformedValue === "number") {
    return transformedValue;
  }
  if (typeof transformedValue === "string") {
    if (transformedValue.includes("calc") || transformedValue.includes("var")) {
      return transformedValue;
    }
    if (transformedValue.includes("px")) {
      return Number(transformedValue.replace("px", ""));
    }
    if (transformedValue.includes("rem")) {
      return Number(transformedValue.replace("rem", "")) * 16;
    }
    if (transformedValue.includes("em")) {
      return Number(transformedValue.replace("em", "")) * 16;
    }
    return Number(transformedValue);
  }
  return NaN;
}
var init_px = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/units-converters/px.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/units-converters/rem.mjs
function scaleRem(remValue) {
  if (remValue === "0rem") {
    return "0rem";
  }
  return `calc(${remValue} * var(--mantine-scale))`;
}
function createConverter(units, { shouldScale = false } = {}) {
  function converter(value) {
    if (value === 0 || value === "0") {
      return `0${units}`;
    }
    if (typeof value === "number") {
      const val = `${value / 16}${units}`;
      return shouldScale ? scaleRem(val) : val;
    }
    if (typeof value === "string") {
      if (value === "") {
        return value;
      }
      if (value.startsWith("calc(") || value.startsWith("clamp(") || value.includes("rgba(")) {
        return value;
      }
      if (value.includes(",")) {
        return value.split(",").map((val) => converter(val)).join(",");
      }
      if (value.includes(" ")) {
        return value.split(" ").map((val) => converter(val)).join(" ");
      }
      if (value.includes(units)) {
        return shouldScale ? scaleRem(value) : value;
      }
      const replaced = value.replace("px", "");
      if (!Number.isNaN(Number(replaced))) {
        const val = `${Number(replaced) / 16}${units}`;
        return shouldScale ? scaleRem(val) : val;
      }
    }
    return value;
  }
  return converter;
}
var rem, em;
var init_rem = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/units-converters/rem.mjs"() {
    rem = createConverter("rem", { shouldScale: true });
    em = createConverter("em");
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/filter-props/filter-props.mjs
function filterProps(props) {
  return Object.keys(props).reduce((acc, key) => {
    if (props[key] !== void 0) {
      acc[key] = props[key];
    }
    return acc;
  }, {});
}
var init_filter_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/filter-props/filter-props.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/is-number-like/is-number-like.mjs
function isNumberLike(value) {
  if (typeof value === "number") {
    return true;
  }
  if (typeof value === "string") {
    if (value.startsWith("calc(") || value.startsWith("var(") || value.includes(" ") && value.trim() !== "") {
      return true;
    }
    const cssUnitsRegex = /^[+-]?[0-9]+(\.[0-9]+)?(px|em|rem|ex|ch|lh|rlh|vw|vh|vmin|vmax|vb|vi|svw|svh|lvw|lvh|dvw|dvh|cm|mm|in|pt|pc|q|cqw|cqh|cqi|cqb|cqmin|cqmax|%)?$/;
    const values2 = value.trim().split(/\s+/);
    return values2.every((val) => cssUnitsRegex.test(val));
  }
  return false;
}
var init_is_number_like = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/is-number-like/is-number-like.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs
function isElement(value) {
  if (Array.isArray(value) || value === null) {
    return false;
  }
  if (typeof value === "object") {
    if (value.type === import_react5.Fragment) {
      return false;
    }
    return true;
  }
  return false;
}
var import_react5;
var init_is_element = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs"() {
    "use client";
    import_react5 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs
function createSafeContext(errorMessage) {
  const Context = (0, import_react6.createContext)(null);
  const useSafeContext = () => {
    const ctx = (0, import_react6.useContext)(Context);
    if (ctx === null) {
      throw new Error(errorMessage);
    }
    return ctx;
  };
  const Provider = ({ children, value }) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Context.Provider, { value, children });
  return [Provider, useSafeContext];
}
var import_jsx_runtime, import_react6;
var init_create_safe_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs"() {
    "use client";
    import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
    import_react6 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs
function createOptionalContext(initialValue = null) {
  const Context = (0, import_react7.createContext)(initialValue);
  const useOptionalContext = () => (0, import_react7.useContext)(Context);
  const Provider = ({ children, value }) => /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(Context.Provider, { value, children });
  return [Provider, useOptionalContext];
}
var import_jsx_runtime2, import_react7;
var init_create_optional_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs"() {
    "use client";
    import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
    import_react7 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-safe-id/get-safe-id.mjs
function getSafeId(uid, errorMessage) {
  return (value) => {
    if (typeof value !== "string" || value.trim().length === 0) {
      throw new Error(errorMessage);
    }
    return `${uid}-${value}`;
  };
}
var init_get_safe_id = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-safe-id/get-safe-id.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/find-element-ancestor/find-element-ancestor.mjs
function findElementAncestor(element, selector) {
  let _element = element;
  while ((_element = _element.parentElement) && !_element.matches(selector)) {
  }
  return _element;
}
var init_find_element_ancestor = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/find-element-ancestor/find-element-ancestor.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs
function getPreviousIndex(current, elements, loop) {
  for (let i11 = current - 1; i11 >= 0; i11 -= 1) {
    if (!elements[i11].disabled) {
      return i11;
    }
  }
  if (loop) {
    for (let i11 = elements.length - 1; i11 > -1; i11 -= 1) {
      if (!elements[i11].disabled) {
        return i11;
      }
    }
  }
  return current;
}
function getNextIndex(current, elements, loop) {
  for (let i11 = current + 1; i11 < elements.length; i11 += 1) {
    if (!elements[i11].disabled) {
      return i11;
    }
  }
  if (loop) {
    for (let i11 = 0; i11 < elements.length; i11 += 1) {
      if (!elements[i11].disabled) {
        return i11;
      }
    }
  }
  return current;
}
function onSameLevel(target, sibling, parentSelector) {
  return findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector);
}
function createScopedKeydownHandler({
  parentSelector,
  siblingSelector,
  onKeyDown,
  loop = true,
  activateOnFocus = false,
  dir = "rtl",
  orientation
}) {
  return (event) => {
    onKeyDown?.(event);
    const elements = Array.from(
      findElementAncestor(event.currentTarget, parentSelector)?.querySelectorAll(
        siblingSelector
      ) || []
    ).filter((node) => onSameLevel(event.currentTarget, node, parentSelector));
    const current = elements.findIndex((el) => event.currentTarget === el);
    const _nextIndex = getNextIndex(current, elements, loop);
    const _previousIndex = getPreviousIndex(current, elements, loop);
    const nextIndex = dir === "rtl" ? _previousIndex : _nextIndex;
    const previousIndex = dir === "rtl" ? _nextIndex : _previousIndex;
    switch (event.key) {
      case "ArrowRight": {
        if (orientation === "horizontal") {
          event.stopPropagation();
          event.preventDefault();
          elements[nextIndex].focus();
          activateOnFocus && elements[nextIndex].click();
        }
        break;
      }
      case "ArrowLeft": {
        if (orientation === "horizontal") {
          event.stopPropagation();
          event.preventDefault();
          elements[previousIndex].focus();
          activateOnFocus && elements[previousIndex].click();
        }
        break;
      }
      case "ArrowUp": {
        if (orientation === "vertical") {
          event.stopPropagation();
          event.preventDefault();
          elements[_previousIndex].focus();
          activateOnFocus && elements[_previousIndex].click();
        }
        break;
      }
      case "ArrowDown": {
        if (orientation === "vertical") {
          event.stopPropagation();
          event.preventDefault();
          elements[_nextIndex].focus();
          activateOnFocus && elements[_nextIndex].click();
        }
        break;
      }
      case "Home": {
        event.stopPropagation();
        event.preventDefault();
        !elements[0].disabled && elements[0].focus();
        break;
      }
      case "End": {
        event.stopPropagation();
        event.preventDefault();
        const last = elements.length - 1;
        !elements[last].disabled && elements[last].focus();
        break;
      }
    }
  };
}
var init_create_scoped_keydown_handler = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs"() {
    "use client";
    init_find_element_ancestor();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-default-z-index/get-default-z-index.mjs
function getDefaultZIndex(level) {
  return elevations[level];
}
var elevations;
var init_get_default_z_index = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-default-z-index/get-default-z-index.mjs"() {
    "use client";
    elevations = {
      app: 100,
      modal: 200,
      popover: 300,
      overlay: 400,
      max: 9999
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs
function getSize(size, prefix2 = "size", convertToRem = true) {
  if (size === void 0) {
    return void 0;
  }
  return isNumberLike(size) ? convertToRem ? rem(size) : size : `var(--${prefix2}-${size})`;
}
function getSpacing(size) {
  return getSize(size, "mantine-spacing");
}
function getRadius(size) {
  if (size === void 0) {
    return "var(--mantine-radius-default)";
  }
  return getSize(size, "mantine-radius");
}
function getFontSize(size) {
  return getSize(size, "mantine-font-size");
}
function getLineHeight(size) {
  return getSize(size, "mantine-line-height", false);
}
function getShadow(size) {
  if (!size) {
    return void 0;
  }
  return getSize(size, "mantine-shadow", false);
}
var init_get_size = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs"() {
    "use client";
    init_is_number_like();
    init_rem();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-breakpoint-value/get-breakpoint-value.mjs
function getBreakpointValue(breakpoint, breakpoints) {
  if (breakpoint in breakpoints) {
    return px(breakpoints[breakpoint]);
  }
  return px(breakpoint);
}
var init_get_breakpoint_value = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-breakpoint-value/get-breakpoint-value.mjs"() {
    "use client";
    init_px();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs
function getSortedBreakpoints(values2, breakpoints) {
  const convertedBreakpoints = values2.map((breakpoint) => ({
    value: breakpoint,
    px: getBreakpointValue(breakpoint, breakpoints)
  }));
  convertedBreakpoints.sort((a12, b4) => a12.px - b4.px);
  return convertedBreakpoints;
}
var init_get_sorted_breakpoints = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs"() {
    "use client";
    init_get_breakpoint_value();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-base-value/get-base-value.mjs
function getBaseValue(value) {
  if (typeof value === "object" && value !== null) {
    if ("base" in value) {
      return value.base;
    }
    return void 0;
  }
  return value;
}
var init_get_base_value = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/utils/get-base-value/get-base-value.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/utils/clamp/clamp.mjs
function clamp(value, min, max) {
  if (min === void 0 && max === void 0) {
    return value;
  }
  if (min !== void 0 && max === void 0) {
    return Math.max(value, min);
  }
  if (min === void 0 && max !== void 0) {
    return Math.min(value, max);
  }
  return Math.min(Math.max(value, min), max);
}
var init_clamp = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/utils/clamp/clamp.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/utils/random-id/random-id.mjs
function randomId(prefix2 = "mantine-") {
  return `${prefix2}${Math.random().toString(36).slice(2, 11)}`;
}
var init_random_id = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/utils/random-id/random-id.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-media-query/use-media-query.mjs
function attachMediaListener(query2, callback) {
  try {
    query2.addEventListener("change", callback);
    return () => query2.removeEventListener("change", callback);
  } catch (e12) {
    query2.addListener(callback);
    return () => query2.removeListener(callback);
  }
}
function getInitialValue(query2, initialValue) {
  if (typeof window !== "undefined" && "matchMedia" in window) {
    return window.matchMedia(query2).matches;
  }
  return false;
}
function useMediaQuery(query2, initialValue, { getInitialValueInEffect } = {
  getInitialValueInEffect: true
}) {
  const [matches, setMatches] = (0, import_react8.useState)(
    getInitialValueInEffect ? initialValue : getInitialValue(query2)
  );
  const queryRef = (0, import_react8.useRef)(null);
  (0, import_react8.useEffect)(() => {
    if ("matchMedia" in window) {
      queryRef.current = window.matchMedia(query2);
      setMatches(queryRef.current.matches);
      return attachMediaListener(queryRef.current, (event) => setMatches(event.matches));
    }
    return void 0;
  }, [query2]);
  return matches;
}
var import_react8;
var init_use_media_query = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-media-query/use-media-query.mjs"() {
    "use client";
    import_react8 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-isomorphic-effect/use-isomorphic-effect.mjs
var import_react9, useIsomorphicEffect;
var init_use_isomorphic_effect = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-isomorphic-effect/use-isomorphic-effect.mjs"() {
    "use client";
    import_react9 = __toESM(require_react(), 1);
    useIsomorphicEffect = typeof document !== "undefined" ? import_react9.useLayoutEffect : import_react9.useEffect;
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-did-update/use-did-update.mjs
function useDidUpdate(fn, dependencies) {
  const mounted = (0, import_react10.useRef)(false);
  (0, import_react10.useEffect)(
    () => () => {
      mounted.current = false;
    },
    []
  );
  (0, import_react10.useEffect)(() => {
    if (mounted.current) {
      return fn();
    }
    mounted.current = true;
    return void 0;
  }, dependencies);
}
var import_react10;
var init_use_did_update = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-did-update/use-did-update.mjs"() {
    "use client";
    import_react10 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-return/use-focus-return.mjs
function useFocusReturn({ opened, shouldReturnFocus = true }) {
  const lastActiveElement = (0, import_react11.useRef)(null);
  const returnFocus = () => {
    if (lastActiveElement.current && "focus" in lastActiveElement.current && typeof lastActiveElement.current.focus === "function") {
      lastActiveElement.current?.focus({ preventScroll: true });
    }
  };
  useDidUpdate(() => {
    let timeout = -1;
    const clearFocusTimeout = (event) => {
      if (event.key === "Tab") {
        window.clearTimeout(timeout);
      }
    };
    document.addEventListener("keydown", clearFocusTimeout);
    if (opened) {
      lastActiveElement.current = document.activeElement;
    } else if (shouldReturnFocus) {
      timeout = window.setTimeout(returnFocus, 10);
    }
    return () => {
      window.clearTimeout(timeout);
      document.removeEventListener("keydown", clearFocusTimeout);
    };
  }, [opened, shouldReturnFocus]);
  return returnFocus;
}
var import_react11;
var init_use_focus_return = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-return/use-focus-return.mjs"() {
    "use client";
    import_react11 = __toESM(require_react(), 1);
    init_use_did_update();
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/tabbable.mjs
function hidden(element) {
  if (false) {
    return false;
  }
  return element.style.display === "none";
}
function visible(element) {
  const isHidden = element.getAttribute("aria-hidden") || element.getAttribute("hidden") || element.getAttribute("type") === "hidden";
  if (isHidden) {
    return false;
  }
  let parentElement = element;
  while (parentElement) {
    if (parentElement === document.body || parentElement.nodeType === 11) {
      break;
    }
    if (hidden(parentElement)) {
      return false;
    }
    parentElement = parentElement.parentNode;
  }
  return true;
}
function getElementTabIndex(element) {
  let tabIndex = element.getAttribute("tabindex");
  if (tabIndex === null) {
    tabIndex = void 0;
  }
  return parseInt(tabIndex, 10);
}
function focusable(element) {
  const nodeName = element.nodeName.toLowerCase();
  const isTabIndexNotNaN = !Number.isNaN(getElementTabIndex(element));
  const res = (
    // @ts-expect-error function accepts any html element but if it is a button, it should not be disabled to trigger the condition
    TABBABLE_NODES.test(nodeName) && !element.disabled || (element instanceof HTMLAnchorElement ? element.href || isTabIndexNotNaN : isTabIndexNotNaN)
  );
  return res && visible(element);
}
function tabbable(element) {
  const tabIndex = getElementTabIndex(element);
  const isTabIndexNaN = Number.isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element);
}
function findTabbableDescendants(element) {
  return Array.from(element.querySelectorAll(FOCUS_SELECTOR)).filter(tabbable);
}
var TABBABLE_NODES, FOCUS_SELECTOR;
var init_tabbable = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/tabbable.mjs"() {
    "use client";
    TABBABLE_NODES = /input|select|textarea|button|object/;
    FOCUS_SELECTOR = "a, input, select, textarea, button, object, [tabindex]";
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/scope-tab.mjs
function scopeTab(node, event) {
  const tabbable2 = findTabbableDescendants(node);
  if (!tabbable2.length) {
    event.preventDefault();
    return;
  }
  const finalTabbable = tabbable2[event.shiftKey ? 0 : tabbable2.length - 1];
  const root5 = node.getRootNode();
  let leavingFinalTabbable = finalTabbable === root5.activeElement || node === root5.activeElement;
  const activeElement = root5.activeElement;
  const activeElementIsRadio = activeElement.tagName === "INPUT" && activeElement.getAttribute("type") === "radio";
  if (activeElementIsRadio) {
    const activeRadioGroup = tabbable2.filter(
      (element) => element.getAttribute("type") === "radio" && element.getAttribute("name") === activeElement.getAttribute("name")
    );
    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);
  }
  if (!leavingFinalTabbable) {
    return;
  }
  event.preventDefault();
  const target = tabbable2[event.shiftKey ? tabbable2.length - 1 : 0];
  if (target) {
    target.focus();
  }
}
var init_scope_tab = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/scope-tab.mjs"() {
    "use client";
    init_tabbable();
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/use-focus-trap.mjs
function useFocusTrap(active = true) {
  const ref = (0, import_react12.useRef)(null);
  const focusNode = (node) => {
    let focusElement = node.querySelector("[data-autofocus]");
    if (!focusElement) {
      const children = Array.from(node.querySelectorAll(FOCUS_SELECTOR));
      focusElement = children.find(tabbable) || children.find(focusable) || null;
      if (!focusElement && focusable(node)) {
        focusElement = node;
      }
    }
    if (focusElement) {
      focusElement.focus({ preventScroll: true });
    } else if (false) {
      console.warn(
        "[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node",
        node
      );
    }
  };
  const setRef = (0, import_react12.useCallback)(
    (node) => {
      if (!active) {
        return;
      }
      if (node === null) {
        return;
      }
      if (ref.current === node) {
        return;
      }
      if (node) {
        setTimeout(() => {
          if (node.getRootNode()) {
            focusNode(node);
          } else if (false) {
            console.warn("[@mantine/hooks/use-focus-trap] Ref node is not part of the dom", node);
          }
        });
        ref.current = node;
      } else {
        ref.current = null;
      }
    },
    [active]
  );
  (0, import_react12.useEffect)(() => {
    if (!active) {
      return void 0;
    }
    ref.current && setTimeout(() => focusNode(ref.current));
    const handleKeyDown = (event) => {
      if (event.key === "Tab" && ref.current) {
        scopeTab(ref.current, event);
      }
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [active]);
  return setRef;
}
var import_react12;
var init_use_focus_trap = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-focus-trap/use-focus-trap.mjs"() {
    "use client";
    import_react12 = __toESM(require_react(), 1);
    init_scope_tab();
    init_tabbable();
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-force-update/use-force-update.mjs
function useForceUpdate() {
  const [, update] = (0, import_react13.useReducer)(reducer, 0);
  return update;
}
var import_react13, reducer;
var init_use_force_update = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-force-update/use-force-update.mjs"() {
    "use client";
    import_react13 = __toESM(require_react(), 1);
    reducer = (value) => (value + 1) % 1e6;
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-id/use-react-id.mjs
function useReactId() {
  const id5 = __useId();
  return id5 ? `mantine-${id5.replace(/:/g, "")}` : "";
}
var import_react14, __useId;
var init_use_react_id = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-id/use-react-id.mjs"() {
    "use client";
    import_react14 = __toESM(require_react(), 1);
    __useId = import_react14.default["useId".toString()] || (() => void 0);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-id/use-id.mjs
function useId(staticId) {
  const reactId = useReactId();
  const [uuid, setUuid] = (0, import_react15.useState)(reactId);
  useIsomorphicEffect(() => {
    setUuid(randomId());
  }, []);
  if (typeof staticId === "string") {
    return staticId;
  }
  if (typeof window === "undefined") {
    return reactId;
  }
  return uuid;
}
var import_react15;
var init_use_id = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-id/use-id.mjs"() {
    "use client";
    import_react15 = __toESM(require_react(), 1);
    init_use_isomorphic_effect();
    init_random_id();
    init_use_react_id();
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-window-event/use-window-event.mjs
function useWindowEvent(type, listener, options) {
  (0, import_react16.useEffect)(() => {
    window.addEventListener(type, listener, options);
    return () => window.removeEventListener(type, listener, options);
  }, [type, listener]);
}
var import_react16;
var init_use_window_event = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-window-event/use-window-event.mjs"() {
    "use client";
    import_react16 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs
function assignRef(ref, value) {
  if (typeof ref === "function") {
    return ref(value);
  } else if (typeof ref === "object" && ref !== null && "current" in ref) {
    ref.current = value;
  }
}
function mergeRefs(...refs) {
  const cleanupMap = /* @__PURE__ */ new Map();
  return (node) => {
    refs.forEach((ref) => {
      const cleanup = assignRef(ref, node);
      if (cleanup) {
        cleanupMap.set(ref, cleanup);
      }
    });
    if (cleanupMap.size > 0) {
      return () => {
        refs.forEach((ref) => {
          const cleanup = cleanupMap.get(ref);
          if (cleanup) {
            cleanup();
          } else {
            assignRef(ref, null);
          }
        });
        cleanupMap.clear();
      };
    }
  };
}
function useMergedRef(...refs) {
  return (0, import_react17.useCallback)(mergeRefs(...refs), refs);
}
var import_react17;
var init_use_merged_ref = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs"() {
    "use client";
    import_react17 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-uncontrolled/use-uncontrolled.mjs
function useUncontrolled({
  value,
  defaultValue: defaultValue2,
  finalValue,
  onChange = () => {
  }
}) {
  const [uncontrolledValue, setUncontrolledValue] = (0, import_react18.useState)(
    defaultValue2 !== void 0 ? defaultValue2 : finalValue
  );
  const handleUncontrolledChange = (val, ...payload) => {
    setUncontrolledValue(val);
    onChange?.(val, ...payload);
  };
  if (value !== void 0) {
    return [value, onChange, true];
  }
  return [uncontrolledValue, handleUncontrolledChange, false];
}
var import_react18;
var init_use_uncontrolled = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-uncontrolled/use-uncontrolled.mjs"() {
    "use client";
    import_react18 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-reduced-motion/use-reduced-motion.mjs
function useReducedMotion(initialValue, options) {
  return useMediaQuery("(prefers-reduced-motion: reduce)", initialValue, options);
}
var init_use_reduced_motion = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/use-reduced-motion/use-reduced-motion.mjs"() {
    "use client";
    init_use_media_query();
  }
});

// node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/index.mjs
var init_esm2 = __esm({
  "node_modules/.pnpm/@mantine+hooks@7.17.1_react@19.1.0/node_modules/@mantine/hooks/esm/index.mjs"() {
    init_clamp();
    init_random_id();
    init_use_focus_return();
    init_use_did_update();
    init_use_focus_trap();
    init_use_force_update();
    init_use_id();
    init_use_isomorphic_effect();
    init_use_merged_ref();
    init_use_reduced_motion();
    init_use_uncontrolled();
    init_use_window_event();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs
function createVarsResolver(resolver) {
  return resolver;
}
var init_create_vars_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs
function r2(e12) {
  var t13, f11, n12 = "";
  if ("string" == typeof e12 || "number" == typeof e12) n12 += e12;
  else if ("object" == typeof e12) if (Array.isArray(e12)) {
    var o6 = e12.length;
    for (t13 = 0; t13 < o6; t13++) e12[t13] && (f11 = r2(e12[t13])) && (n12 && (n12 += " "), n12 += f11);
  } else for (f11 in e12) e12[f11] && (n12 && (n12 += " "), n12 += f11);
  return n12;
}
function clsx() {
  for (var e12, t13, f11 = 0, n12 = "", o6 = arguments.length; f11 < o6; f11++) (e12 = arguments[f11]) && (t13 = r2(e12)) && (n12 && (n12 += " "), n12 += t13);
  return n12;
}
var clsx_default;
var init_clsx = __esm({
  "node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"() {
    clsx_default = clsx;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/resolve-class-names/resolve-class-names.mjs
function mergeClassNames(objects) {
  const merged = {};
  objects.forEach((obj) => {
    Object.entries(obj).forEach(([key, value]) => {
      if (merged[key]) {
        merged[key] = clsx_default(merged[key], value);
      } else {
        merged[key] = value;
      }
    });
  });
  return merged;
}
function resolveClassNames({ theme: theme2, classNames, props, stylesCtx }) {
  const arrayClassNames = Array.isArray(classNames) ? classNames : [classNames];
  const resolvedClassNames = arrayClassNames.map(
    (item3) => typeof item3 === "function" ? item3(theme2, props, stylesCtx) : item3 || EMPTY_CLASS_NAMES
  );
  return mergeClassNames(resolvedClassNames);
}
var EMPTY_CLASS_NAMES;
var init_resolve_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/resolve-class-names/resolve-class-names.mjs"() {
    "use client";
    init_clsx();
    EMPTY_CLASS_NAMES = {};
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-styles/resolve-styles.mjs
function resolveStyles({ theme: theme2, styles, props, stylesCtx }) {
  const arrayStyles = Array.isArray(styles) ? styles : [styles];
  return arrayStyles.reduce((acc, style) => {
    if (typeof style === "function") {
      return { ...acc, ...style(theme2, props, stylesCtx) };
    }
    return { ...acc, ...style };
  }, {});
}
var init_resolve_styles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-styles/resolve-styles.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs
function useMantineContext() {
  const ctx = (0, import_react19.useContext)(MantineContext);
  if (!ctx) {
    throw new Error("[@mantine/core] MantineProvider was not found in tree");
  }
  return ctx;
}
function useMantineCssVariablesResolver() {
  return useMantineContext().cssVariablesResolver;
}
function useMantineClassNamesPrefix() {
  return useMantineContext().classNamesPrefix;
}
function useMantineStyleNonce() {
  return useMantineContext().getStyleNonce;
}
function useMantineWithStaticClasses() {
  return useMantineContext().withStaticClasses;
}
function useMantineIsHeadless() {
  return useMantineContext().headless;
}
function useMantineSxTransform() {
  return useMantineContext().stylesTransform?.sx;
}
function useMantineStylesTransform() {
  return useMantineContext().stylesTransform?.styles;
}
function useMantineEnv() {
  return useMantineContext().env || "default";
}
var import_react19, MantineContext;
var init_Mantine_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs"() {
    "use client";
    import_react19 = __toESM(require_react(), 1);
    MantineContext = (0, import_react19.createContext)(null);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/to-rgba/to-rgba.mjs
function isHexColor(hex3) {
  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}([0-9A-F]{2})?$/i;
  return HEX_REGEXP.test(hex3);
}
function hexToRgba(color3) {
  let hexString = color3.replace("#", "");
  if (hexString.length === 3) {
    const shorthandHex = hexString.split("");
    hexString = [
      shorthandHex[0],
      shorthandHex[0],
      shorthandHex[1],
      shorthandHex[1],
      shorthandHex[2],
      shorthandHex[2]
    ].join("");
  }
  if (hexString.length === 8) {
    const alpha4 = parseInt(hexString.slice(6, 8), 16) / 255;
    return {
      r: parseInt(hexString.slice(0, 2), 16),
      g: parseInt(hexString.slice(2, 4), 16),
      b: parseInt(hexString.slice(4, 6), 16),
      a: alpha4
    };
  }
  const parsed = parseInt(hexString, 16);
  const r8 = parsed >> 16 & 255;
  const g9 = parsed >> 8 & 255;
  const b4 = parsed & 255;
  return {
    r: r8,
    g: g9,
    b: b4,
    a: 1
  };
}
function rgbStringToRgba(color3) {
  const [r8, g9, b4, a12] = color3.replace(/[^0-9,./]/g, "").split(/[/,]/).map(Number);
  return { r: r8, g: g9, b: b4, a: a12 || 1 };
}
function hslStringToRgba(hslaString) {
  const hslaRegex = /^hsla?\(\s*(\d+)\s*,\s*(\d+%)\s*,\s*(\d+%)\s*(,\s*(0?\.\d+|\d+(\.\d+)?))?\s*\)$/i;
  const matches = hslaString.match(hslaRegex);
  if (!matches) {
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 1
    };
  }
  const h8 = parseInt(matches[1], 10);
  const s37 = parseInt(matches[2], 10) / 100;
  const l9 = parseInt(matches[3], 10) / 100;
  const a12 = matches[5] ? parseFloat(matches[5]) : void 0;
  const chroma = (1 - Math.abs(2 * l9 - 1)) * s37;
  const huePrime = h8 / 60;
  const x3 = chroma * (1 - Math.abs(huePrime % 2 - 1));
  const m11 = l9 - chroma / 2;
  let r8;
  let g9;
  let b4;
  if (huePrime >= 0 && huePrime < 1) {
    r8 = chroma;
    g9 = x3;
    b4 = 0;
  } else if (huePrime >= 1 && huePrime < 2) {
    r8 = x3;
    g9 = chroma;
    b4 = 0;
  } else if (huePrime >= 2 && huePrime < 3) {
    r8 = 0;
    g9 = chroma;
    b4 = x3;
  } else if (huePrime >= 3 && huePrime < 4) {
    r8 = 0;
    g9 = x3;
    b4 = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    r8 = x3;
    g9 = 0;
    b4 = chroma;
  } else {
    r8 = chroma;
    g9 = 0;
    b4 = x3;
  }
  return {
    r: Math.round((r8 + m11) * 255),
    g: Math.round((g9 + m11) * 255),
    b: Math.round((b4 + m11) * 255),
    a: a12 || 1
  };
}
function toRgba(color3) {
  if (isHexColor(color3)) {
    return hexToRgba(color3);
  }
  if (color3.startsWith("rgb")) {
    return rgbStringToRgba(color3);
  }
  if (color3.startsWith("hsl")) {
    return hslStringToRgba(color3);
  }
  return {
    r: 0,
    g: 0,
    b: 0,
    a: 1
  };
}
var init_to_rgba = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/to-rgba/to-rgba.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/darken/darken.mjs
function darken(color3, alpha4) {
  if (color3.startsWith("var(")) {
    return `color-mix(in srgb, ${color3}, black ${alpha4 * 100}%)`;
  }
  const { r: r8, g: g9, b: b4, a: a12 } = toRgba(color3);
  const f11 = 1 - alpha4;
  const dark = (input) => Math.round(input * f11);
  return `rgba(${dark(r8)}, ${dark(g9)}, ${dark(b4)}, ${a12})`;
}
var init_darken = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/darken/darken.mjs"() {
    init_to_rgba();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-primary-shade/get-primary-shade.mjs
function getPrimaryShade(theme2, colorScheme) {
  if (typeof theme2.primaryShade === "number") {
    return theme2.primaryShade;
  }
  if (colorScheme === "dark") {
    return theme2.primaryShade.dark;
  }
  return theme2.primaryShade.light;
}
var init_get_primary_shade = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-primary-shade/get-primary-shade.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/luminance/luminance.mjs
function gammaCorrect(c13) {
  return c13 <= 0.03928 ? c13 / 12.92 : ((c13 + 0.055) / 1.055) ** 2.4;
}
function getLightnessFromOklch(oklchColor) {
  const match = oklchColor.match(/oklch\((.*?)%\s/);
  return match ? parseFloat(match[1]) : null;
}
function luminance(color3) {
  if (color3.startsWith("oklch(")) {
    return (getLightnessFromOklch(color3) || 0) / 100;
  }
  const { r: r8, g: g9, b: b4 } = toRgba(color3);
  const sR = r8 / 255;
  const sG = g9 / 255;
  const sB = b4 / 255;
  const rLinear = gammaCorrect(sR);
  const gLinear = gammaCorrect(sG);
  const bLinear = gammaCorrect(sB);
  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;
}
function isLightColor(color3, luminanceThreshold = 0.179) {
  if (color3.startsWith("var(")) {
    return false;
  }
  return luminance(color3) > luminanceThreshold;
}
var init_luminance = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/luminance/luminance.mjs"() {
    init_to_rgba();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs
function parseThemeColor({
  color: color3,
  theme: theme2,
  colorScheme
}) {
  if (typeof color3 !== "string") {
    throw new Error(
      `[@mantine/core] Failed to parse color. Expected color to be a string, instead got ${typeof color3}`
    );
  }
  if (color3 === "bright") {
    return {
      color: color3,
      value: colorScheme === "dark" ? theme2.white : theme2.black,
      shade: void 0,
      isThemeColor: false,
      isLight: isLightColor(
        colorScheme === "dark" ? theme2.white : theme2.black,
        theme2.luminanceThreshold
      ),
      variable: "--mantine-color-bright"
    };
  }
  if (color3 === "dimmed") {
    return {
      color: color3,
      value: colorScheme === "dark" ? theme2.colors.dark[2] : theme2.colors.gray[7],
      shade: void 0,
      isThemeColor: false,
      isLight: isLightColor(
        colorScheme === "dark" ? theme2.colors.dark[2] : theme2.colors.gray[6],
        theme2.luminanceThreshold
      ),
      variable: "--mantine-color-dimmed"
    };
  }
  if (color3 === "white" || color3 === "black") {
    return {
      color: color3,
      value: color3 === "white" ? theme2.white : theme2.black,
      shade: void 0,
      isThemeColor: false,
      isLight: isLightColor(
        color3 === "white" ? theme2.white : theme2.black,
        theme2.luminanceThreshold
      ),
      variable: `--mantine-color-${color3}`
    };
  }
  const [_color, shade] = color3.split(".");
  const colorShade = shade ? Number(shade) : void 0;
  const isThemeColor = _color in theme2.colors;
  if (isThemeColor) {
    const colorValue = colorShade !== void 0 ? theme2.colors[_color][colorShade] : theme2.colors[_color][getPrimaryShade(theme2, colorScheme || "light")];
    return {
      color: _color,
      value: colorValue,
      shade: colorShade,
      isThemeColor,
      isLight: isLightColor(colorValue, theme2.luminanceThreshold),
      variable: shade ? `--mantine-color-${_color}-${colorShade}` : `--mantine-color-${_color}-filled`
    };
  }
  return {
    color: color3,
    value: color3,
    isThemeColor,
    isLight: isLightColor(color3, theme2.luminanceThreshold),
    shade: colorShade,
    variable: void 0
  };
}
var init_parse_theme_color = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs"() {
    "use client";
    init_get_primary_shade();
    init_luminance();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs
function getThemeColor(color3, theme2) {
  const parsed = parseThemeColor({ color: color3 || theme2.primaryColor, theme: theme2 });
  return parsed.variable ? `var(${parsed.variable})` : color3;
}
var init_get_theme_color = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs"() {
    "use client";
    init_parse_theme_color();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-gradient/get-gradient.mjs
function getGradient(gradient, theme2) {
  const merged = {
    from: gradient?.from || theme2.defaultGradient.from,
    to: gradient?.to || theme2.defaultGradient.to,
    deg: gradient?.deg ?? theme2.defaultGradient.deg ?? 0
  };
  const fromColor = getThemeColor(merged.from, theme2);
  const toColor = getThemeColor(merged.to, theme2);
  return `linear-gradient(${merged.deg}deg, ${fromColor} 0%, ${toColor} 100%)`;
}
var init_get_gradient = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-gradient/get-gradient.mjs"() {
    "use client";
    init_get_theme_color();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/rgba/rgba.mjs
function rgba(color3, alpha22) {
  if (typeof color3 !== "string" || alpha22 > 1 || alpha22 < 0) {
    return "rgba(0, 0, 0, 1)";
  }
  if (color3.startsWith("var(")) {
    const mixPercentage = (1 - alpha22) * 100;
    return `color-mix(in srgb, ${color3}, transparent ${mixPercentage}%)`;
  }
  if (color3.startsWith("oklch")) {
    if (color3.includes("/")) {
      return color3.replace(/\/\s*[\d.]+\s*\)/, `/ ${alpha22})`);
    }
    return color3.replace(")", ` / ${alpha22})`);
  }
  const { r: r8, g: g9, b: b4 } = toRgba(color3);
  return `rgba(${r8}, ${g9}, ${b4}, ${alpha22})`;
}
var alpha;
var init_rgba = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/rgba/rgba.mjs"() {
    init_to_rgba();
    alpha = rgba;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.mjs
var import_react20, import_jsx_runtime3, defaultVariantColorsResolver;
var init_default_variant_colors_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.mjs"() {
    "use client";
    init_rem();
    import_react20 = __toESM(require_react(), 1);
    import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
    init_darken();
    init_get_gradient();
    init_parse_theme_color();
    init_rgba();
    defaultVariantColorsResolver = ({
      color: color3,
      theme: theme2,
      variant,
      gradient,
      autoContrast
    }) => {
      const parsed = parseThemeColor({ color: color3, theme: theme2 });
      const _autoContrast = typeof autoContrast === "boolean" ? autoContrast : theme2.autoContrast;
      if (variant === "filled") {
        const textColor = _autoContrast ? parsed.isLight ? "var(--mantine-color-black)" : "var(--mantine-color-white)" : "var(--mantine-color-white)";
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: `var(--mantine-color-${color3}-filled)`,
              hover: `var(--mantine-color-${color3}-filled-hover)`,
              color: textColor,
              border: `${rem(1)} solid transparent`
            };
          }
          return {
            background: `var(--mantine-color-${parsed.color}-${parsed.shade})`,
            hover: `var(--mantine-color-${parsed.color}-${parsed.shade === 9 ? 8 : parsed.shade + 1})`,
            color: textColor,
            border: `${rem(1)} solid transparent`
          };
        }
        return {
          background: color3,
          hover: darken(color3, 0.1),
          color: textColor,
          border: `${rem(1)} solid transparent`
        };
      }
      if (variant === "light") {
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: `var(--mantine-color-${color3}-light)`,
              hover: `var(--mantine-color-${color3}-light-hover)`,
              color: `var(--mantine-color-${color3}-light-color)`,
              border: `${rem(1)} solid transparent`
            };
          }
          const parsedColor = theme2.colors[parsed.color][parsed.shade];
          return {
            background: rgba(parsedColor, 0.1),
            hover: rgba(parsedColor, 0.12),
            color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,
            border: `${rem(1)} solid transparent`
          };
        }
        return {
          background: rgba(color3, 0.1),
          hover: rgba(color3, 0.12),
          color: color3,
          border: `${rem(1)} solid transparent`
        };
      }
      if (variant === "outline") {
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: "transparent",
              hover: `var(--mantine-color-${color3}-outline-hover)`,
              color: `var(--mantine-color-${color3}-outline)`,
              border: `${rem(1)} solid var(--mantine-color-${color3}-outline)`
            };
          }
          return {
            background: "transparent",
            hover: rgba(theme2.colors[parsed.color][parsed.shade], 0.05),
            color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,
            border: `${rem(1)} solid var(--mantine-color-${parsed.color}-${parsed.shade})`
          };
        }
        return {
          background: "transparent",
          hover: rgba(color3, 0.05),
          color: color3,
          border: `${rem(1)} solid ${color3}`
        };
      }
      if (variant === "subtle") {
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: "transparent",
              hover: `var(--mantine-color-${color3}-light-hover)`,
              color: `var(--mantine-color-${color3}-light-color)`,
              border: `${rem(1)} solid transparent`
            };
          }
          const parsedColor = theme2.colors[parsed.color][parsed.shade];
          return {
            background: "transparent",
            hover: rgba(parsedColor, 0.12),
            color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,
            border: `${rem(1)} solid transparent`
          };
        }
        return {
          background: "transparent",
          hover: rgba(color3, 0.12),
          color: color3,
          border: `${rem(1)} solid transparent`
        };
      }
      if (variant === "transparent") {
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: "transparent",
              hover: "transparent",
              color: `var(--mantine-color-${color3}-light-color)`,
              border: `${rem(1)} solid transparent`
            };
          }
          return {
            background: "transparent",
            hover: "transparent",
            color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,
            border: `${rem(1)} solid transparent`
          };
        }
        return {
          background: "transparent",
          hover: "transparent",
          color: color3,
          border: `${rem(1)} solid transparent`
        };
      }
      if (variant === "white") {
        if (parsed.isThemeColor) {
          if (parsed.shade === void 0) {
            return {
              background: "var(--mantine-color-white)",
              hover: darken(theme2.white, 0.01),
              color: `var(--mantine-color-${color3}-filled)`,
              border: `${rem(1)} solid transparent`
            };
          }
          return {
            background: "var(--mantine-color-white)",
            hover: darken(theme2.white, 0.01),
            color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,
            border: `${rem(1)} solid transparent`
          };
        }
        return {
          background: "var(--mantine-color-white)",
          hover: darken(theme2.white, 0.01),
          color: color3,
          border: `${rem(1)} solid transparent`
        };
      }
      if (variant === "gradient") {
        return {
          background: getGradient(gradient, theme2),
          hover: getGradient(gradient, theme2),
          color: "var(--mantine-color-white)",
          border: "none"
        };
      }
      if (variant === "default") {
        return {
          background: "var(--mantine-color-default)",
          hover: "var(--mantine-color-default-hover)",
          color: "var(--mantine-color-default-color)",
          border: `${rem(1)} solid var(--mantine-color-default-border)`
        };
      }
      return {};
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/default-colors.mjs
var DEFAULT_COLORS;
var init_default_colors = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/default-colors.mjs"() {
    DEFAULT_COLORS = {
      dark: [
        "#C9C9C9",
        "#b8b8b8",
        "#828282",
        "#696969",
        "#424242",
        "#3b3b3b",
        "#2e2e2e",
        "#242424",
        "#1f1f1f",
        "#141414"
      ],
      gray: [
        "#f8f9fa",
        "#f1f3f5",
        "#e9ecef",
        "#dee2e6",
        "#ced4da",
        "#adb5bd",
        "#868e96",
        "#495057",
        "#343a40",
        "#212529"
      ],
      red: [
        "#fff5f5",
        "#ffe3e3",
        "#ffc9c9",
        "#ffa8a8",
        "#ff8787",
        "#ff6b6b",
        "#fa5252",
        "#f03e3e",
        "#e03131",
        "#c92a2a"
      ],
      pink: [
        "#fff0f6",
        "#ffdeeb",
        "#fcc2d7",
        "#faa2c1",
        "#f783ac",
        "#f06595",
        "#e64980",
        "#d6336c",
        "#c2255c",
        "#a61e4d"
      ],
      grape: [
        "#f8f0fc",
        "#f3d9fa",
        "#eebefa",
        "#e599f7",
        "#da77f2",
        "#cc5de8",
        "#be4bdb",
        "#ae3ec9",
        "#9c36b5",
        "#862e9c"
      ],
      violet: [
        "#f3f0ff",
        "#e5dbff",
        "#d0bfff",
        "#b197fc",
        "#9775fa",
        "#845ef7",
        "#7950f2",
        "#7048e8",
        "#6741d9",
        "#5f3dc4"
      ],
      indigo: [
        "#edf2ff",
        "#dbe4ff",
        "#bac8ff",
        "#91a7ff",
        "#748ffc",
        "#5c7cfa",
        "#4c6ef5",
        "#4263eb",
        "#3b5bdb",
        "#364fc7"
      ],
      blue: [
        "#e7f5ff",
        "#d0ebff",
        "#a5d8ff",
        "#74c0fc",
        "#4dabf7",
        "#339af0",
        "#228be6",
        "#1c7ed6",
        "#1971c2",
        "#1864ab"
      ],
      cyan: [
        "#e3fafc",
        "#c5f6fa",
        "#99e9f2",
        "#66d9e8",
        "#3bc9db",
        "#22b8cf",
        "#15aabf",
        "#1098ad",
        "#0c8599",
        "#0b7285"
      ],
      teal: [
        "#e6fcf5",
        "#c3fae8",
        "#96f2d7",
        "#63e6be",
        "#38d9a9",
        "#20c997",
        "#12b886",
        "#0ca678",
        "#099268",
        "#087f5b"
      ],
      green: [
        "#ebfbee",
        "#d3f9d8",
        "#b2f2bb",
        "#8ce99a",
        "#69db7c",
        "#51cf66",
        "#40c057",
        "#37b24d",
        "#2f9e44",
        "#2b8a3e"
      ],
      lime: [
        "#f4fce3",
        "#e9fac8",
        "#d8f5a2",
        "#c0eb75",
        "#a9e34b",
        "#94d82d",
        "#82c91e",
        "#74b816",
        "#66a80f",
        "#5c940d"
      ],
      yellow: [
        "#fff9db",
        "#fff3bf",
        "#ffec99",
        "#ffe066",
        "#ffd43b",
        "#fcc419",
        "#fab005",
        "#f59f00",
        "#f08c00",
        "#e67700"
      ],
      orange: [
        "#fff4e6",
        "#ffe8cc",
        "#ffd8a8",
        "#ffc078",
        "#ffa94d",
        "#ff922b",
        "#fd7e14",
        "#f76707",
        "#e8590c",
        "#d9480f"
      ]
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/default-theme.mjs
var import_react21, import_jsx_runtime4, DEFAULT_FONT_FAMILY, DEFAULT_THEME;
var init_default_theme = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/default-theme.mjs"() {
    init_rem();
    import_react21 = __toESM(require_react(), 1);
    import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
    init_default_variant_colors_resolver();
    init_default_colors();
    DEFAULT_FONT_FAMILY = "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji";
    DEFAULT_THEME = {
      scale: 1,
      fontSmoothing: true,
      focusRing: "auto",
      white: "#fff",
      black: "#000",
      colors: DEFAULT_COLORS,
      primaryShade: { light: 6, dark: 8 },
      primaryColor: "blue",
      variantColorResolver: defaultVariantColorsResolver,
      autoContrast: false,
      luminanceThreshold: 0.3,
      fontFamily: DEFAULT_FONT_FAMILY,
      fontFamilyMonospace: "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace",
      respectReducedMotion: false,
      cursorType: "default",
      defaultGradient: { from: "blue", to: "cyan", deg: 45 },
      defaultRadius: "sm",
      activeClassName: "mantine-active",
      focusClassName: "",
      headings: {
        fontFamily: DEFAULT_FONT_FAMILY,
        fontWeight: "700",
        textWrap: "wrap",
        sizes: {
          h1: { fontSize: rem(34), lineHeight: "1.3" },
          h2: { fontSize: rem(26), lineHeight: "1.35" },
          h3: { fontSize: rem(22), lineHeight: "1.4" },
          h4: { fontSize: rem(18), lineHeight: "1.45" },
          h5: { fontSize: rem(16), lineHeight: "1.5" },
          h6: { fontSize: rem(14), lineHeight: "1.5" }
        }
      },
      fontSizes: {
        xs: rem(12),
        sm: rem(14),
        md: rem(16),
        lg: rem(18),
        xl: rem(20)
      },
      lineHeights: {
        xs: "1.4",
        sm: "1.45",
        md: "1.55",
        lg: "1.6",
        xl: "1.65"
      },
      radius: {
        xs: rem(2),
        sm: rem(4),
        md: rem(8),
        lg: rem(16),
        xl: rem(32)
      },
      spacing: {
        xs: rem(10),
        sm: rem(12),
        md: rem(16),
        lg: rem(20),
        xl: rem(32)
      },
      breakpoints: {
        xs: "36em",
        sm: "48em",
        md: "62em",
        lg: "75em",
        xl: "88em"
      },
      shadows: {
        xs: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), 0 ${rem(1)} ${rem(2)} rgba(0, 0, 0, 0.1)`,
        sm: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(10)} ${rem(
          15
        )} ${rem(-5)}, rgba(0, 0, 0, 0.04) 0 ${rem(7)} ${rem(7)} ${rem(-5)}`,
        md: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(20)} ${rem(
          25
        )} ${rem(-5)}, rgba(0, 0, 0, 0.04) 0 ${rem(10)} ${rem(10)} ${rem(-5)}`,
        lg: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(28)} ${rem(
          23
        )} ${rem(-7)}, rgba(0, 0, 0, 0.04) 0 ${rem(12)} ${rem(12)} ${rem(-7)}`,
        xl: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(36)} ${rem(
          28
        )} ${rem(-7)}, rgba(0, 0, 0, 0.04) 0 ${rem(17)} ${rem(17)} ${rem(-7)}`
      },
      other: {},
      components: {}
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/is-mantine-color-scheme.mjs
function isMantineColorScheme(value) {
  return value === "auto" || value === "dark" || value === "light";
}
var init_is_mantine_color_scheme = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/is-mantine-color-scheme.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/local-storage-manager.mjs
function localStorageColorSchemeManager({
  key = "mantine-color-scheme-value"
} = {}) {
  let handleStorageEvent;
  return {
    get: (defaultValue2) => {
      if (typeof window === "undefined") {
        return defaultValue2;
      }
      try {
        const storedColorScheme = window.localStorage.getItem(key);
        return isMantineColorScheme(storedColorScheme) ? storedColorScheme : defaultValue2;
      } catch {
        return defaultValue2;
      }
    },
    set: (value) => {
      try {
        window.localStorage.setItem(key, value);
      } catch (error) {
        console.warn(
          "[@mantine/core] Local storage color scheme manager was unable to save color scheme.",
          error
        );
      }
    },
    subscribe: (onUpdate) => {
      handleStorageEvent = (event) => {
        if (event.storageArea === window.localStorage && event.key === key) {
          isMantineColorScheme(event.newValue) && onUpdate(event.newValue);
        }
      };
      window.addEventListener("storage", handleStorageEvent);
    },
    unsubscribe: () => {
      window.removeEventListener("storage", handleStorageEvent);
    },
    clear: () => {
      window.localStorage.removeItem(key);
    }
  };
}
var init_local_storage_manager = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/local-storage-manager.mjs"() {
    "use client";
    init_is_mantine_color_scheme();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/merge-mantine-theme/merge-mantine-theme.mjs
function isValidPrimaryShade(shade) {
  if (shade < 0 || shade > 9) {
    return false;
  }
  return parseInt(shade.toString(), 10) === shade;
}
function validateMantineTheme(theme2) {
  if (!(theme2.primaryColor in theme2.colors)) {
    throw new Error(INVALID_PRIMARY_COLOR_ERROR);
  }
  if (typeof theme2.primaryShade === "object") {
    if (!isValidPrimaryShade(theme2.primaryShade.dark) || !isValidPrimaryShade(theme2.primaryShade.light)) {
      throw new Error(INVALID_PRIMARY_SHADE_ERROR);
    }
  }
  if (typeof theme2.primaryShade === "number" && !isValidPrimaryShade(theme2.primaryShade)) {
    throw new Error(INVALID_PRIMARY_SHADE_ERROR);
  }
}
function mergeMantineTheme(currentTheme, themeOverride) {
  if (!themeOverride) {
    validateMantineTheme(currentTheme);
    return currentTheme;
  }
  const result = deepMerge(currentTheme, themeOverride);
  if (themeOverride.fontFamily && !themeOverride.headings?.fontFamily) {
    result.headings.fontFamily = themeOverride.fontFamily;
  }
  validateMantineTheme(result);
  return result;
}
var import_react22, import_jsx_runtime5, INVALID_PRIMARY_COLOR_ERROR, INVALID_PRIMARY_SHADE_ERROR;
var init_merge_mantine_theme = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/merge-mantine-theme/merge-mantine-theme.mjs"() {
    init_deep_merge();
    import_react22 = __toESM(require_react(), 1);
    import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
    INVALID_PRIMARY_COLOR_ERROR = "[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more \u2013 https://mantine.dev/theming/colors/#primary-color";
    INVALID_PRIMARY_SHADE_ERROR = "[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs
function useMantineTheme() {
  const ctx = (0, import_react23.useContext)(MantineThemeContext);
  if (!ctx) {
    throw new Error(
      "@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app"
    );
  }
  return ctx;
}
function MantineThemeProvider({
  theme: theme2,
  children,
  inherit = true
}) {
  const parentTheme = useSafeMantineTheme();
  const mergedTheme = (0, import_react23.useMemo)(
    () => mergeMantineTheme(inherit ? parentTheme : DEFAULT_THEME, theme2),
    [theme2, parentTheme, inherit]
  );
  return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(MantineThemeContext.Provider, { value: mergedTheme, children });
}
var import_jsx_runtime6, import_react23, MantineThemeContext, useSafeMantineTheme;
var init_MantineThemeProvider = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs"() {
    "use client";
    import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
    import_react23 = __toESM(require_react(), 1);
    init_default_theme();
    init_merge_mantine_theme();
    MantineThemeContext = (0, import_react23.createContext)(null);
    useSafeMantineTheme = () => (0, import_react23.useContext)(MantineThemeContext) || DEFAULT_THEME;
    MantineThemeProvider.displayName = "@mantine/core/MantineThemeProvider";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineClasses/MantineClasses.mjs
function MantineClasses() {
  const theme2 = useMantineTheme();
  const nonce = useMantineStyleNonce();
  const classes30 = keys(theme2.breakpoints).reduce((acc, breakpoint) => {
    const isPxBreakpoint = theme2.breakpoints[breakpoint].includes("px");
    const pxValue = px(theme2.breakpoints[breakpoint]);
    const maxWidthBreakpoint = isPxBreakpoint ? `${pxValue - 0.1}px` : em(pxValue - 0.1);
    const minWidthBreakpoint = isPxBreakpoint ? `${pxValue}px` : em(pxValue);
    return `${acc}@media (max-width: ${maxWidthBreakpoint}) {.mantine-visible-from-${breakpoint} {display: none !important;}}@media (min-width: ${minWidthBreakpoint}) {.mantine-hidden-from-${breakpoint} {display: none !important;}}`;
  }, "");
  return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
    "style",
    {
      "data-mantine-styles": "classes",
      nonce: nonce?.(),
      dangerouslySetInnerHTML: { __html: classes30 }
    }
  );
}
var import_jsx_runtime7, import_react24;
var init_MantineClasses = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineClasses/MantineClasses.mjs"() {
    "use client";
    import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1);
    init_keys();
    init_px();
    init_rem();
    import_react24 = __toESM(require_react(), 1);
    init_Mantine_context();
    init_MantineThemeProvider();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/css-variables-object-to-string.mjs
function cssVariablesObjectToString(variables) {
  return Object.entries(variables).map(([name2, value]) => `${name2}: ${value};`).join("");
}
var init_css_variables_object_to_string = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/css-variables-object-to-string.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/wrap-with-selector.mjs
function wrapWithSelector(selectors, code) {
  const _selectors = Array.isArray(selectors) ? selectors : [selectors];
  return _selectors.reduce((acc, selector) => `${selector}{${acc}}`, code);
}
var init_wrap_with_selector = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/wrap-with-selector.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/convert-css-variables.mjs
function convertCssVariables(input, selector) {
  const sharedVariables = cssVariablesObjectToString(input.variables);
  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : "";
  const dark = cssVariablesObjectToString(input.dark);
  const light = cssVariablesObjectToString(input.light);
  const darkForced = dark ? selector === ":host" ? wrapWithSelector(`${selector}([data-mantine-color-scheme="dark"])`, dark) : wrapWithSelector(`${selector}[data-mantine-color-scheme="dark"]`, dark) : "";
  const lightForced = light ? selector === ":host" ? wrapWithSelector(`${selector}([data-mantine-color-scheme="light"])`, light) : wrapWithSelector(`${selector}[data-mantine-color-scheme="light"]`, light) : "";
  return `${shared}${darkForced}${lightForced}`;
}
var init_convert_css_variables = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/convert-css-variables.mjs"() {
    "use client";
    init_css_variables_object_to_string();
    init_wrap_with_selector();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs
function getContrastColor({ color: color3, theme: theme2, autoContrast }) {
  const _autoContrast = typeof autoContrast === "boolean" ? autoContrast : theme2.autoContrast;
  if (!_autoContrast) {
    return "var(--mantine-color-white)";
  }
  const parsed = parseThemeColor({ color: color3 || theme2.primaryColor, theme: theme2 });
  return parsed.isLight ? "var(--mantine-color-black)" : "var(--mantine-color-white)";
}
function getPrimaryContrastColor(theme2, colorScheme) {
  return getContrastColor({
    color: theme2.colors[theme2.primaryColor][getPrimaryShade(theme2, colorScheme)],
    theme: theme2,
    autoContrast: null
  });
}
var init_get_contrast_color = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs"() {
    "use client";
    init_get_primary_shade();
    init_parse_theme_color();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-css-color-variables.mjs
function getCSSColorVariables({
  theme: theme2,
  color: color3,
  colorScheme,
  name: name2 = color3,
  withColorValues = true
}) {
  if (!theme2.colors[color3]) {
    return {};
  }
  if (colorScheme === "light") {
    const primaryShade2 = getPrimaryShade(theme2, "light");
    const dynamicVariables2 = {
      [`--mantine-color-${name2}-text`]: `var(--mantine-color-${name2}-filled)`,
      [`--mantine-color-${name2}-filled`]: `var(--mantine-color-${name2}-${primaryShade2})`,
      [`--mantine-color-${name2}-filled-hover`]: `var(--mantine-color-${name2}-${primaryShade2 === 9 ? 8 : primaryShade2 + 1})`,
      [`--mantine-color-${name2}-light`]: alpha(theme2.colors[color3][primaryShade2], 0.1),
      [`--mantine-color-${name2}-light-hover`]: alpha(theme2.colors[color3][primaryShade2], 0.12),
      [`--mantine-color-${name2}-light-color`]: `var(--mantine-color-${name2}-${primaryShade2})`,
      [`--mantine-color-${name2}-outline`]: `var(--mantine-color-${name2}-${primaryShade2})`,
      [`--mantine-color-${name2}-outline-hover`]: alpha(theme2.colors[color3][primaryShade2], 0.05)
    };
    if (!withColorValues) {
      return dynamicVariables2;
    }
    return {
      [`--mantine-color-${name2}-0`]: theme2.colors[color3][0],
      [`--mantine-color-${name2}-1`]: theme2.colors[color3][1],
      [`--mantine-color-${name2}-2`]: theme2.colors[color3][2],
      [`--mantine-color-${name2}-3`]: theme2.colors[color3][3],
      [`--mantine-color-${name2}-4`]: theme2.colors[color3][4],
      [`--mantine-color-${name2}-5`]: theme2.colors[color3][5],
      [`--mantine-color-${name2}-6`]: theme2.colors[color3][6],
      [`--mantine-color-${name2}-7`]: theme2.colors[color3][7],
      [`--mantine-color-${name2}-8`]: theme2.colors[color3][8],
      [`--mantine-color-${name2}-9`]: theme2.colors[color3][9],
      ...dynamicVariables2
    };
  }
  const primaryShade = getPrimaryShade(theme2, "dark");
  const dynamicVariables = {
    [`--mantine-color-${name2}-text`]: `var(--mantine-color-${name2}-4)`,
    [`--mantine-color-${name2}-filled`]: `var(--mantine-color-${name2}-${primaryShade})`,
    [`--mantine-color-${name2}-filled-hover`]: `var(--mantine-color-${name2}-${primaryShade === 9 ? 8 : primaryShade + 1})`,
    [`--mantine-color-${name2}-light`]: alpha(
      theme2.colors[color3][Math.max(0, primaryShade - 2)],
      0.15
    ),
    [`--mantine-color-${name2}-light-hover`]: alpha(
      theme2.colors[color3][Math.max(0, primaryShade - 2)],
      0.2
    ),
    [`--mantine-color-${name2}-light-color`]: `var(--mantine-color-${name2}-${Math.max(primaryShade - 5, 0)})`,
    [`--mantine-color-${name2}-outline`]: `var(--mantine-color-${name2}-${Math.max(primaryShade - 4, 0)})`,
    [`--mantine-color-${name2}-outline-hover`]: alpha(
      theme2.colors[color3][Math.max(primaryShade - 4, 0)],
      0.05
    )
  };
  if (!withColorValues) {
    return dynamicVariables;
  }
  return {
    [`--mantine-color-${name2}-0`]: theme2.colors[color3][0],
    [`--mantine-color-${name2}-1`]: theme2.colors[color3][1],
    [`--mantine-color-${name2}-2`]: theme2.colors[color3][2],
    [`--mantine-color-${name2}-3`]: theme2.colors[color3][3],
    [`--mantine-color-${name2}-4`]: theme2.colors[color3][4],
    [`--mantine-color-${name2}-5`]: theme2.colors[color3][5],
    [`--mantine-color-${name2}-6`]: theme2.colors[color3][6],
    [`--mantine-color-${name2}-7`]: theme2.colors[color3][7],
    [`--mantine-color-${name2}-8`]: theme2.colors[color3][8],
    [`--mantine-color-${name2}-9`]: theme2.colors[color3][9],
    ...dynamicVariables
  };
}
var import_react25, import_jsx_runtime8;
var init_get_css_color_variables = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-css-color-variables.mjs"() {
    "use client";
    init_get_primary_shade();
    import_react25 = __toESM(require_react(), 1);
    import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1);
    init_rgba();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.mjs
function isVirtualColor(value) {
  return !!value && typeof value === "object" && "mantine-virtual-color" in value;
}
var import_react26, import_jsx_runtime9;
var init_virtual_color = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.mjs"() {
    import_react26 = __toESM(require_react(), 1);
    import_jsx_runtime9 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/default-css-variables-resolver.mjs
function assignSizeVariables(variables, sizes2, name2) {
  keys(sizes2).forEach(
    (size) => Object.assign(variables, { [`--mantine-${name2}-${size}`]: sizes2[size] })
  );
}
var import_react27, import_jsx_runtime10, defaultCssVariablesResolver;
var init_default_css_variables_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/default-css-variables-resolver.mjs"() {
    "use client";
    init_keys();
    init_rem();
    import_react27 = __toESM(require_react(), 1);
    import_jsx_runtime10 = __toESM(require_jsx_runtime(), 1);
    init_get_primary_shade();
    init_get_contrast_color();
    init_get_css_color_variables();
    init_virtual_color();
    defaultCssVariablesResolver = (theme2) => {
      const lightPrimaryShade = getPrimaryShade(theme2, "light");
      const defaultRadius = theme2.defaultRadius in theme2.radius ? theme2.radius[theme2.defaultRadius] : rem(theme2.defaultRadius);
      const result = {
        variables: {
          "--mantine-scale": theme2.scale.toString(),
          "--mantine-cursor-type": theme2.cursorType,
          "--mantine-color-scheme": "light dark",
          "--mantine-webkit-font-smoothing": theme2.fontSmoothing ? "antialiased" : "unset",
          "--mantine-moz-font-smoothing": theme2.fontSmoothing ? "grayscale" : "unset",
          "--mantine-color-white": theme2.white,
          "--mantine-color-black": theme2.black,
          "--mantine-line-height": theme2.lineHeights.md,
          "--mantine-font-family": theme2.fontFamily,
          "--mantine-font-family-monospace": theme2.fontFamilyMonospace,
          "--mantine-font-family-headings": theme2.headings.fontFamily,
          "--mantine-heading-font-weight": theme2.headings.fontWeight,
          "--mantine-heading-text-wrap": theme2.headings.textWrap,
          "--mantine-radius-default": defaultRadius,
          // Primary colors
          "--mantine-primary-color-filled": `var(--mantine-color-${theme2.primaryColor}-filled)`,
          "--mantine-primary-color-filled-hover": `var(--mantine-color-${theme2.primaryColor}-filled-hover)`,
          "--mantine-primary-color-light": `var(--mantine-color-${theme2.primaryColor}-light)`,
          "--mantine-primary-color-light-hover": `var(--mantine-color-${theme2.primaryColor}-light-hover)`,
          "--mantine-primary-color-light-color": `var(--mantine-color-${theme2.primaryColor}-light-color)`
        },
        light: {
          "--mantine-primary-color-contrast": getPrimaryContrastColor(theme2, "light"),
          "--mantine-color-bright": "var(--mantine-color-black)",
          "--mantine-color-text": theme2.black,
          "--mantine-color-body": theme2.white,
          "--mantine-color-error": "var(--mantine-color-red-6)",
          "--mantine-color-placeholder": "var(--mantine-color-gray-5)",
          "--mantine-color-anchor": `var(--mantine-color-${theme2.primaryColor}-${lightPrimaryShade})`,
          "--mantine-color-default": "var(--mantine-color-white)",
          "--mantine-color-default-hover": "var(--mantine-color-gray-0)",
          "--mantine-color-default-color": "var(--mantine-color-black)",
          "--mantine-color-default-border": "var(--mantine-color-gray-4)",
          "--mantine-color-dimmed": "var(--mantine-color-gray-6)"
        },
        dark: {
          "--mantine-primary-color-contrast": getPrimaryContrastColor(theme2, "dark"),
          "--mantine-color-bright": "var(--mantine-color-white)",
          "--mantine-color-text": "var(--mantine-color-dark-0)",
          "--mantine-color-body": "var(--mantine-color-dark-7)",
          "--mantine-color-error": "var(--mantine-color-red-8)",
          "--mantine-color-placeholder": "var(--mantine-color-dark-3)",
          "--mantine-color-anchor": `var(--mantine-color-${theme2.primaryColor}-4)`,
          "--mantine-color-default": "var(--mantine-color-dark-6)",
          "--mantine-color-default-hover": "var(--mantine-color-dark-5)",
          "--mantine-color-default-color": "var(--mantine-color-white)",
          "--mantine-color-default-border": "var(--mantine-color-dark-4)",
          "--mantine-color-dimmed": "var(--mantine-color-dark-2)"
        }
      };
      assignSizeVariables(result.variables, theme2.breakpoints, "breakpoint");
      assignSizeVariables(result.variables, theme2.spacing, "spacing");
      assignSizeVariables(result.variables, theme2.fontSizes, "font-size");
      assignSizeVariables(result.variables, theme2.lineHeights, "line-height");
      assignSizeVariables(result.variables, theme2.shadows, "shadow");
      assignSizeVariables(result.variables, theme2.radius, "radius");
      theme2.colors[theme2.primaryColor].forEach((_3, index) => {
        result.variables[`--mantine-primary-color-${index}`] = `var(--mantine-color-${theme2.primaryColor}-${index})`;
      });
      keys(theme2.colors).forEach((color3) => {
        const value = theme2.colors[color3];
        if (isVirtualColor(value)) {
          Object.assign(
            result.light,
            getCSSColorVariables({
              theme: theme2,
              name: value.name,
              color: value.light,
              colorScheme: "light",
              withColorValues: true
            })
          );
          Object.assign(
            result.dark,
            getCSSColorVariables({
              theme: theme2,
              name: value.name,
              color: value.dark,
              colorScheme: "dark",
              withColorValues: true
            })
          );
          return;
        }
        value.forEach((shade, index) => {
          result.variables[`--mantine-color-${color3}-${index}`] = shade;
        });
        Object.assign(
          result.light,
          getCSSColorVariables({
            theme: theme2,
            color: color3,
            colorScheme: "light",
            withColorValues: false
          })
        );
        Object.assign(
          result.dark,
          getCSSColorVariables({
            theme: theme2,
            color: color3,
            colorScheme: "dark",
            withColorValues: false
          })
        );
      });
      const headings4 = theme2.headings.sizes;
      keys(headings4).forEach((heading) => {
        result.variables[`--mantine-${heading}-font-size`] = headings4[heading].fontSize;
        result.variables[`--mantine-${heading}-line-height`] = headings4[heading].lineHeight;
        result.variables[`--mantine-${heading}-font-weight`] = headings4[heading].fontWeight || theme2.headings.fontWeight;
      });
      return result;
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-merged-variables.mjs
function getMergedVariables({ theme: theme2, generator }) {
  const defaultResolver = defaultCssVariablesResolver(theme2);
  const providerGenerator = generator?.(theme2);
  return providerGenerator ? deepMerge(defaultResolver, providerGenerator) : defaultResolver;
}
var import_react28, import_jsx_runtime11;
var init_get_merged_variables = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-merged-variables.mjs"() {
    "use client";
    init_deep_merge();
    import_react28 = __toESM(require_react(), 1);
    import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1);
    init_default_css_variables_resolver();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/remove-default-variables.mjs
function removeDefaultVariables(input) {
  const cleaned = {
    variables: {},
    light: {},
    dark: {}
  };
  keys(input.variables).forEach((key) => {
    if (defaultCssVariables.variables[key] !== input.variables[key]) {
      cleaned.variables[key] = input.variables[key];
    }
  });
  keys(input.light).forEach((key) => {
    if (defaultCssVariables.light[key] !== input.light[key]) {
      cleaned.light[key] = input.light[key];
    }
  });
  keys(input.dark).forEach((key) => {
    if (defaultCssVariables.dark[key] !== input.dark[key]) {
      cleaned.dark[key] = input.dark[key];
    }
  });
  return cleaned;
}
var import_react29, import_jsx_runtime12, defaultCssVariables;
var init_remove_default_variables = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/remove-default-variables.mjs"() {
    "use client";
    init_keys();
    import_react29 = __toESM(require_react(), 1);
    import_jsx_runtime12 = __toESM(require_jsx_runtime(), 1);
    init_default_theme();
    init_default_css_variables_resolver();
    defaultCssVariables = defaultCssVariablesResolver(DEFAULT_THEME);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs
function getColorSchemeCssVariables(selector) {
  return `
  ${selector}[data-mantine-color-scheme="dark"] { --mantine-color-scheme: dark; }
  ${selector}[data-mantine-color-scheme="light"] { --mantine-color-scheme: light; }
`;
}
function MantineCssVariables({
  cssVariablesSelector,
  deduplicateCssVariables
}) {
  const theme2 = useMantineTheme();
  const nonce = useMantineStyleNonce();
  const generator = useMantineCssVariablesResolver();
  const mergedVariables = getMergedVariables({ theme: theme2, generator });
  const shouldCleanVariables = cssVariablesSelector === ":root" && deduplicateCssVariables;
  const cleanedVariables = shouldCleanVariables ? removeDefaultVariables(mergedVariables) : mergedVariables;
  const css = convertCssVariables(cleanedVariables, cssVariablesSelector);
  if (css) {
    return /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(
      "style",
      {
        "data-mantine-styles": true,
        nonce: nonce?.(),
        dangerouslySetInnerHTML: {
          __html: `${css}${shouldCleanVariables ? "" : getColorSchemeCssVariables(cssVariablesSelector)}`
        }
      }
    );
  }
  return null;
}
var import_jsx_runtime13;
var init_MantineCssVariables = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs"() {
    "use client";
    import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1);
    init_convert_css_variables();
    init_Mantine_context();
    init_MantineThemeProvider();
    init_get_merged_variables();
    init_remove_default_variables();
    MantineCssVariables.displayName = "@mantine/CssVariables";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/suppress-nextjs-warning.mjs
function suppressNextjsWarning() {
  const originalError = console.error;
  console.error = (...args) => {
    if (args.length > 1 && typeof args[0] === "string" && args[0].toLowerCase().includes("extra attributes from the server") && typeof args[1] === "string" && args[1].toLowerCase().includes("data-mantine-color-scheme")) ;
    else {
      originalError(...args);
    }
  };
}
var init_suppress_nextjs_warning = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/suppress-nextjs-warning.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.mjs
function setColorSchemeAttribute(colorScheme, getRootElement) {
  const hasDarkColorScheme = typeof window !== "undefined" && "matchMedia" in window && window.matchMedia("(prefers-color-scheme: dark)")?.matches;
  const computedColorScheme = colorScheme !== "auto" ? colorScheme : hasDarkColorScheme ? "dark" : "light";
  getRootElement()?.setAttribute("data-mantine-color-scheme", computedColorScheme);
}
function useProviderColorScheme({
  manager,
  defaultColorScheme,
  getRootElement,
  forceColorScheme
}) {
  const media = (0, import_react30.useRef)(null);
  const [value, setValue] = (0, import_react30.useState)(() => manager.get(defaultColorScheme));
  const colorSchemeValue = forceColorScheme || value;
  const setColorScheme = (0, import_react30.useCallback)(
    (colorScheme) => {
      if (!forceColorScheme) {
        setColorSchemeAttribute(colorScheme, getRootElement);
        setValue(colorScheme);
        manager.set(colorScheme);
      }
    },
    [manager.set, colorSchemeValue, forceColorScheme]
  );
  const clearColorScheme = (0, import_react30.useCallback)(() => {
    setValue(defaultColorScheme);
    setColorSchemeAttribute(defaultColorScheme, getRootElement);
    manager.clear();
  }, [manager.clear, defaultColorScheme]);
  (0, import_react30.useEffect)(() => {
    manager.subscribe(setColorScheme);
    return manager.unsubscribe;
  }, [manager.subscribe, manager.unsubscribe]);
  useIsomorphicEffect(() => {
    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);
  }, []);
  (0, import_react30.useEffect)(() => {
    if (forceColorScheme) {
      setColorSchemeAttribute(forceColorScheme, getRootElement);
      return () => {
      };
    }
    if (forceColorScheme === void 0) {
      setColorSchemeAttribute(value, getRootElement);
    }
    if (typeof window !== "undefined" && "matchMedia" in window) {
      media.current = window.matchMedia("(prefers-color-scheme: dark)");
    }
    const listener = (event) => {
      if (value === "auto") {
        setColorSchemeAttribute(event.matches ? "dark" : "light", getRootElement);
      }
    };
    media.current?.addEventListener("change", listener);
    return () => media.current?.removeEventListener("change", listener);
  }, [value, forceColorScheme]);
  return { colorScheme: colorSchemeValue, setColorScheme, clearColorScheme };
}
var import_react30;
var init_use_provider_color_scheme = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.mjs"() {
    "use client";
    import_react30 = __toESM(require_react(), 1);
    init_esm2();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-respect-reduce-motion/use-respect-reduce-motion.mjs
function useRespectReduceMotion({
  respectReducedMotion,
  getRootElement
}) {
  useIsomorphicEffect(() => {
    if (respectReducedMotion) {
      getRootElement()?.setAttribute("data-respect-reduced-motion", "true");
    }
  }, [respectReducedMotion]);
}
var init_use_respect_reduce_motion = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-respect-reduce-motion/use-respect-reduce-motion.mjs"() {
    "use client";
    init_esm2();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs
function MantineProvider({
  theme: theme2,
  children,
  getStyleNonce,
  withStaticClasses = true,
  withGlobalClasses = true,
  deduplicateCssVariables = true,
  withCssVariables = true,
  cssVariablesSelector = ":root",
  classNamesPrefix = "mantine",
  colorSchemeManager = localStorageColorSchemeManager(),
  defaultColorScheme = "light",
  getRootElement = () => document.documentElement,
  cssVariablesResolver,
  forceColorScheme,
  stylesTransform,
  env: env2
}) {
  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({
    defaultColorScheme,
    forceColorScheme,
    manager: colorSchemeManager,
    getRootElement
  });
  useRespectReduceMotion({
    respectReducedMotion: theme2?.respectReducedMotion || false,
    getRootElement
  });
  return /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(
    MantineContext.Provider,
    {
      value: {
        colorScheme,
        setColorScheme,
        clearColorScheme,
        getRootElement,
        classNamesPrefix,
        getStyleNonce,
        cssVariablesResolver,
        cssVariablesSelector,
        withStaticClasses,
        stylesTransform,
        env: env2
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)(MantineThemeProvider, { theme: theme2, children: [
        withCssVariables && /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(
          MantineCssVariables,
          {
            cssVariablesSelector,
            deduplicateCssVariables
          }
        ),
        withGlobalClasses && /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(MantineClasses, {}),
        children
      ] })
    }
  );
}
function HeadlessMantineProvider({ children, theme: theme2 }) {
  return /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(
    MantineContext.Provider,
    {
      value: {
        colorScheme: "auto",
        setColorScheme: () => {
        },
        clearColorScheme: () => {
        },
        getRootElement: () => document.documentElement,
        classNamesPrefix: "mantine",
        cssVariablesSelector: ":root",
        withStaticClasses: false,
        headless: true
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(MantineThemeProvider, { theme: theme2, children })
    }
  );
}
var import_jsx_runtime14, import_react31;
var init_MantineProvider = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs"() {
    "use client";
    import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1);
    init_local_storage_manager();
    init_Mantine_context();
    init_MantineClasses();
    init_MantineCssVariables();
    import_react31 = __toESM(require_react(), 1);
    init_MantineThemeProvider();
    init_suppress_nextjs_warning();
    init_use_provider_color_scheme();
    init_use_respect_reduce_motion();
    suppressNextjsWarning();
    MantineProvider.displayName = "@mantine/core/MantineProvider";
    HeadlessMantineProvider.displayName = "@mantine/core/HeadlessMantineProvider";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs
function useResolvedStylesApi({
  classNames,
  styles,
  props,
  stylesCtx
}) {
  const theme2 = useMantineTheme();
  return {
    resolvedClassNames: resolveClassNames({
      theme: theme2,
      classNames,
      props,
      stylesCtx: stylesCtx || void 0
    }),
    resolvedStyles: resolveStyles({
      theme: theme2,
      styles,
      props,
      stylesCtx: stylesCtx || void 0
    })
  };
}
var import_react32, import_jsx_runtime15;
var init_use_resolved_styles_api = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs"() {
    "use client";
    import_react32 = __toESM(require_react(), 1);
    import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1);
    init_MantineThemeProvider();
    init_resolve_class_names();
    init_resolve_styles();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.mjs
function getGlobalClassNames({ theme: theme2, options, unstyled }) {
  return clsx_default(
    options?.focusable && !unstyled && (theme2.focusClassName || FOCUS_CLASS_NAMES[theme2.focusRing]),
    options?.active && !unstyled && theme2.activeClassName
  );
}
var FOCUS_CLASS_NAMES;
var init_get_global_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.mjs"() {
    "use client";
    init_clsx();
    FOCUS_CLASS_NAMES = {
      always: "mantine-focus-always",
      auto: "mantine-focus-auto",
      never: "mantine-focus-never"
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-options-class-names/get-options-class-names.mjs
function getOptionsClassNames({
  selector,
  stylesCtx,
  options,
  props,
  theme: theme2
}) {
  return resolveClassNames({
    theme: theme2,
    classNames: options?.classNames,
    props: options?.props || props,
    stylesCtx
  })[selector];
}
var init_get_options_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-options-class-names/get-options-class-names.mjs"() {
    "use client";
    init_resolve_class_names();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-resolved-class-names/get-resolved-class-names.mjs
function getResolvedClassNames({
  selector,
  stylesCtx,
  theme: theme2,
  classNames,
  props
}) {
  return resolveClassNames({ theme: theme2, classNames, props, stylesCtx })[selector];
}
var init_get_resolved_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-resolved-class-names/get-resolved-class-names.mjs"() {
    "use client";
    init_resolve_class_names();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-root-class-name/get-root-class-name.mjs
function getRootClassName({ rootSelector, selector, className }) {
  return rootSelector === selector ? className : void 0;
}
var init_get_root_class_name = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-root-class-name/get-root-class-name.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-selector-class-name/get-selector-class-name.mjs
function getSelectorClassName({ selector, classes: classes30, unstyled }) {
  return unstyled ? void 0 : classes30[selector];
}
var init_get_selector_class_name = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-selector-class-name/get-selector-class-name.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-static-class-names/get-static-class-names.mjs
function getStaticClassNames({
  themeName,
  classNamesPrefix,
  selector,
  withStaticClass
}) {
  if (withStaticClass === false) {
    return [];
  }
  return themeName.map((n12) => `${classNamesPrefix}-${n12}-${selector}`);
}
var init_get_static_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-static-class-names/get-static-class-names.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-theme-class-names/get-theme-class-names.mjs
function getThemeClassNames({
  themeName,
  theme: theme2,
  selector,
  props,
  stylesCtx
}) {
  return themeName.map(
    (n12) => resolveClassNames({
      theme: theme2,
      classNames: theme2.components[n12]?.classNames,
      props,
      stylesCtx
    })?.[selector]
  );
}
var init_get_theme_class_names = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-theme-class-names/get-theme-class-names.mjs"() {
    "use client";
    init_resolve_class_names();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-variant-class-name/get-variant-class-name.mjs
function getVariantClassName({
  options,
  classes: classes30,
  selector,
  unstyled
}) {
  return options?.variant && !unstyled ? classes30[`${selector}--${options.variant}`] : void 0;
}
var init_get_variant_class_name = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-variant-class-name/get-variant-class-name.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-class-name.mjs
function getClassName({
  theme: theme2,
  options,
  themeName,
  selector,
  classNamesPrefix,
  classNames,
  classes: classes30,
  unstyled,
  className,
  rootSelector,
  props,
  stylesCtx,
  withStaticClasses,
  headless,
  transformedStyles
}) {
  return clsx_default(
    getGlobalClassNames({ theme: theme2, options, unstyled: unstyled || headless }),
    getThemeClassNames({ theme: theme2, themeName, selector, props, stylesCtx }),
    getVariantClassName({ options, classes: classes30, selector, unstyled }),
    getResolvedClassNames({ selector, stylesCtx, theme: theme2, classNames, props }),
    getResolvedClassNames({ selector, stylesCtx, theme: theme2, classNames: transformedStyles, props }),
    getOptionsClassNames({ selector, stylesCtx, options, props, theme: theme2 }),
    getRootClassName({ rootSelector, selector, className }),
    getSelectorClassName({ selector, classes: classes30, unstyled: unstyled || headless }),
    withStaticClasses && !headless && getStaticClassNames({
      themeName,
      classNamesPrefix,
      selector,
      withStaticClass: options?.withStaticClass
    }),
    options?.className
  );
}
var init_get_class_name = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-class-name.mjs"() {
    "use client";
    init_clsx();
    init_get_global_class_names();
    init_get_options_class_names();
    init_get_resolved_class_names();
    init_get_root_class_name();
    init_get_selector_class_name();
    init_get_static_class_names();
    init_get_theme_class_names();
    init_get_variant_class_name();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/get-theme-styles/get-theme-styles.mjs
function getThemeStyles({
  theme: theme2,
  themeName,
  props,
  stylesCtx,
  selector
}) {
  return themeName.map(
    (n12) => resolveStyles({
      theme: theme2,
      styles: theme2.components[n12]?.styles,
      props,
      stylesCtx
    })[selector]
  ).reduce((acc, val) => ({ ...acc, ...val }), {});
}
var init_get_theme_styles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/get-theme-styles/get-theme-styles.mjs"() {
    "use client";
    init_resolve_styles();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-style/resolve-style.mjs
function resolveStyle({ style, theme: theme2 }) {
  if (Array.isArray(style)) {
    return [...style].reduce(
      (acc, item3) => ({ ...acc, ...resolveStyle({ style: item3, theme: theme2 }) }),
      {}
    );
  }
  if (typeof style === "function") {
    return style(theme2);
  }
  if (style == null) {
    return {};
  }
  return style;
}
var init_resolve_style = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-style/resolve-style.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-vars/merge-vars.mjs
function mergeVars(vars) {
  return vars.reduce((acc, current) => {
    if (current) {
      Object.keys(current).forEach((key) => {
        acc[key] = { ...acc[key], ...filterProps(current[key]) };
      });
    }
    return acc;
  }, {});
}
var import_react33, import_jsx_runtime16;
var init_merge_vars = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-vars/merge-vars.mjs"() {
    "use client";
    init_filter_props();
    import_react33 = __toESM(require_react(), 1);
    import_jsx_runtime16 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-vars/resolve-vars.mjs
function resolveVars({
  vars,
  varsResolver: varsResolver30,
  theme: theme2,
  props,
  stylesCtx,
  selector,
  themeName,
  headless
}) {
  return mergeVars([
    headless ? {} : varsResolver30?.(theme2, props, stylesCtx),
    ...themeName.map((name2) => theme2.components?.[name2]?.vars?.(theme2, props, stylesCtx)),
    vars?.(theme2, props, stylesCtx)
  ])?.[selector];
}
var init_resolve_vars = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-vars/resolve-vars.mjs"() {
    "use client";
    init_merge_vars();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/get-style.mjs
function getStyle({
  theme: theme2,
  themeName,
  selector,
  options,
  props,
  stylesCtx,
  rootSelector,
  styles,
  style,
  vars,
  varsResolver: varsResolver30,
  headless,
  withStylesTransform
}) {
  return {
    ...!withStylesTransform && getThemeStyles({ theme: theme2, themeName, props, stylesCtx, selector }),
    ...!withStylesTransform && resolveStyles({ theme: theme2, styles, props, stylesCtx })[selector],
    ...!withStylesTransform && resolveStyles({ theme: theme2, styles: options?.styles, props: options?.props || props, stylesCtx })[selector],
    ...resolveVars({ theme: theme2, props, stylesCtx, vars, varsResolver: varsResolver30, selector, themeName, headless }),
    ...rootSelector === selector ? resolveStyle({ style, theme: theme2 }) : null,
    ...resolveStyle({ style: options?.style, theme: theme2 })
  };
}
var init_get_style = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/get-style.mjs"() {
    "use client";
    init_get_theme_styles();
    init_resolve_style();
    init_resolve_styles();
    init_resolve_vars();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-transformed-styles.mjs
function useStylesTransform({ props, stylesCtx, themeName }) {
  const theme2 = useMantineTheme();
  const stylesTransform = useMantineStylesTransform()?.();
  const getTransformedStyles = (styles) => {
    if (!stylesTransform) {
      return [];
    }
    const transformedStyles = styles.map(
      (style) => stylesTransform(style, { props, theme: theme2, ctx: stylesCtx })
    );
    return [
      ...transformedStyles,
      ...themeName.map(
        (n12) => stylesTransform(theme2.components[n12]?.styles, { props, theme: theme2, ctx: stylesCtx })
      )
    ].filter(Boolean);
  };
  return {
    getTransformedStyles,
    withStylesTransform: !!stylesTransform
  };
}
var import_react34, import_jsx_runtime17;
var init_use_transformed_styles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-transformed-styles.mjs"() {
    "use client";
    import_react34 = __toESM(require_react(), 1);
    import_jsx_runtime17 = __toESM(require_jsx_runtime(), 1);
    init_Mantine_context();
    init_MantineThemeProvider();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs
function useStyles({
  name: name2,
  classes: classes30,
  props,
  stylesCtx,
  className,
  style,
  rootSelector = "root",
  unstyled,
  classNames,
  styles,
  vars,
  varsResolver: varsResolver30
}) {
  const theme2 = useMantineTheme();
  const classNamesPrefix = useMantineClassNamesPrefix();
  const withStaticClasses = useMantineWithStaticClasses();
  const headless = useMantineIsHeadless();
  const themeName = (Array.isArray(name2) ? name2 : [name2]).filter((n12) => n12);
  const { withStylesTransform, getTransformedStyles } = useStylesTransform({
    props,
    stylesCtx,
    themeName
  });
  return (selector, options) => ({
    className: getClassName({
      theme: theme2,
      options,
      themeName,
      selector,
      classNamesPrefix,
      classNames,
      classes: classes30,
      unstyled,
      className,
      rootSelector,
      props,
      stylesCtx,
      withStaticClasses,
      headless,
      transformedStyles: getTransformedStyles([options?.styles, styles])
    }),
    style: getStyle({
      theme: theme2,
      themeName,
      selector,
      options,
      props,
      stylesCtx,
      rootSelector,
      styles,
      style,
      vars,
      varsResolver: varsResolver30,
      headless,
      withStylesTransform
    })
  });
}
var import_react35, import_jsx_runtime18;
var init_use_styles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs"() {
    "use client";
    import_react35 = __toESM(require_react(), 1);
    import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1);
    init_Mantine_context();
    init_MantineThemeProvider();
    init_get_class_name();
    init_get_style();
    init_use_transformed_styles();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs
function getAutoContrastValue(autoContrast, theme2) {
  return typeof autoContrast === "boolean" ? autoContrast : theme2.autoContrast;
}
var init_get_auto_contrast_value = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs
function ColorSchemeScript({
  defaultColorScheme = "light",
  localStorageKey = "mantine-color-scheme-value",
  forceColorScheme,
  ...others
}) {
  const _defaultColorScheme = ["light", "dark", "auto"].includes(defaultColorScheme) ? defaultColorScheme : "light";
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
    "script",
    {
      ...others,
      "data-mantine-script": true,
      dangerouslySetInnerHTML: {
        __html: getScript({
          defaultColorScheme: _defaultColorScheme,
          localStorageKey,
          forceColorScheme
        })
      }
    }
  );
}
var import_jsx_runtime19, getScript;
var init_ColorSchemeScript = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs"() {
    "use client";
    import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1);
    getScript = ({
      defaultColorScheme,
      localStorageKey,
      forceColorScheme
    }) => forceColorScheme ? `document.documentElement.setAttribute("data-mantine-color-scheme", '${forceColorScheme}');` : `try {
  var _colorScheme = window.localStorage.getItem("${localStorageKey}");
  var colorScheme = _colorScheme === "light" || _colorScheme === "dark" || _colorScheme === "auto" ? _colorScheme : "${defaultColorScheme}";
  var computedColorScheme = colorScheme !== "auto" ? colorScheme : window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  document.documentElement.setAttribute("data-mantine-color-scheme", computedColorScheme);
} catch (e) {}
`;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs
function useProps(component, defaultProps62, props) {
  const theme2 = useMantineTheme();
  const contextPropsPayload = theme2.components[component]?.defaultProps;
  const contextProps = typeof contextPropsPayload === "function" ? contextPropsPayload(theme2) : contextPropsPayload;
  return { ...defaultProps62, ...contextProps, ...filterProps(props) };
}
var import_react36, import_jsx_runtime20;
var init_use_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs"() {
    "use client";
    init_filter_props();
    import_react36 = __toESM(require_react(), 1);
    import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);
    init_MantineThemeProvider();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/create-theme/create-theme.mjs
function createTheme(theme2) {
  return theme2;
}
var init_create_theme = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/create-theme/create-theme.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/css-object-to-string/css-object-to-string.mjs
function cssObjectToString(css) {
  return keys(css).reduce(
    (acc, rule) => css[rule] !== void 0 ? `${acc}${camelToKebabCase(rule)}:${css[rule]};` : acc,
    ""
  ).trim();
}
var import_react37, import_jsx_runtime21;
var init_css_object_to_string = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/css-object-to-string/css-object-to-string.mjs"() {
    "use client";
    init_keys();
    init_camel_to_kebab_case();
    import_react37 = __toESM(require_react(), 1);
    import_jsx_runtime21 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/styles-to-string/styles-to-string.mjs
function stylesToString({ selector, styles, media, container: container5 }) {
  const baseStyles = styles ? cssObjectToString(styles) : "";
  const mediaQueryStyles = !Array.isArray(media) ? [] : media.map((item3) => `@media${item3.query}{${selector}{${cssObjectToString(item3.styles)}}}`);
  const containerStyles = !Array.isArray(container5) ? [] : container5.map(
    (item3) => `@container ${item3.query}{${selector}{${cssObjectToString(item3.styles)}}}`
  );
  return `${baseStyles ? `${selector}{${baseStyles}}` : ""}${mediaQueryStyles.join("")}${containerStyles.join("")}`.trim();
}
var init_styles_to_string = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/styles-to-string/styles-to-string.mjs"() {
    "use client";
    init_css_object_to_string();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/InlineStyles.mjs
function InlineStyles(props) {
  const nonce = useMantineStyleNonce();
  return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(
    "style",
    {
      "data-mantine-styles": "inline",
      nonce: nonce?.(),
      dangerouslySetInnerHTML: { __html: stylesToString(props) }
    }
  );
}
var import_jsx_runtime22, import_react38;
var init_InlineStyles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/InlineStyles/InlineStyles.mjs"() {
    "use client";
    import_jsx_runtime22 = __toESM(require_jsx_runtime(), 1);
    import_react38 = __toESM(require_react(), 1);
    init_Mantine_context();
    init_styles_to_string();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/extract-style-props/extract-style-props.mjs
function extractStyleProps(others) {
  const {
    m: m11,
    mx,
    my,
    mt: mt3,
    mb,
    ml,
    mr: mr2,
    me: me4,
    ms: ms2,
    p: p13,
    px: px4,
    py,
    pt: pt2,
    pb,
    pl,
    pr,
    pe: pe4,
    ps: ps2,
    bd,
    bg,
    c: c13,
    opacity,
    ff,
    fz,
    fw,
    lts,
    ta,
    lh,
    fs: fs2,
    tt: tt3,
    td,
    w: w8,
    miw,
    maw,
    h: h8,
    mih,
    mah,
    bgsz,
    bgp,
    bgr,
    bga,
    pos,
    top: top2,
    left,
    bottom,
    right,
    inset,
    display,
    flex: flex5,
    hiddenFrom,
    visibleFrom,
    lightHidden,
    darkHidden,
    sx,
    ...rest
  } = others;
  const styleProps = filterProps({
    m: m11,
    mx,
    my,
    mt: mt3,
    mb,
    ml,
    mr: mr2,
    me: me4,
    ms: ms2,
    p: p13,
    px: px4,
    py,
    pt: pt2,
    pb,
    pl,
    pr,
    pe: pe4,
    ps: ps2,
    bd,
    bg,
    c: c13,
    opacity,
    ff,
    fz,
    fw,
    lts,
    ta,
    lh,
    fs: fs2,
    tt: tt3,
    td,
    w: w8,
    miw,
    maw,
    h: h8,
    mih,
    mah,
    bgsz,
    bgp,
    bgr,
    bga,
    pos,
    top: top2,
    left,
    bottom,
    right,
    inset,
    display,
    flex: flex5,
    hiddenFrom,
    visibleFrom,
    lightHidden,
    darkHidden,
    sx
  });
  return { styleProps, rest };
}
var import_react39, import_jsx_runtime23;
var init_extract_style_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/extract-style-props/extract-style-props.mjs"() {
    "use client";
    init_filter_props();
    import_react39 = __toESM(require_react(), 1);
    import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/style-props-data.mjs
var STYlE_PROPS_DATA;
var init_style_props_data = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/style-props-data.mjs"() {
    "use client";
    STYlE_PROPS_DATA = {
      m: { type: "spacing", property: "margin" },
      mt: { type: "spacing", property: "marginTop" },
      mb: { type: "spacing", property: "marginBottom" },
      ml: { type: "spacing", property: "marginLeft" },
      mr: { type: "spacing", property: "marginRight" },
      ms: { type: "spacing", property: "marginInlineStart" },
      me: { type: "spacing", property: "marginInlineEnd" },
      mx: { type: "spacing", property: "marginInline" },
      my: { type: "spacing", property: "marginBlock" },
      p: { type: "spacing", property: "padding" },
      pt: { type: "spacing", property: "paddingTop" },
      pb: { type: "spacing", property: "paddingBottom" },
      pl: { type: "spacing", property: "paddingLeft" },
      pr: { type: "spacing", property: "paddingRight" },
      ps: { type: "spacing", property: "paddingInlineStart" },
      pe: { type: "spacing", property: "paddingInlineEnd" },
      px: { type: "spacing", property: "paddingInline" },
      py: { type: "spacing", property: "paddingBlock" },
      bd: { type: "border", property: "border" },
      bg: { type: "color", property: "background" },
      c: { type: "textColor", property: "color" },
      opacity: { type: "identity", property: "opacity" },
      ff: { type: "fontFamily", property: "fontFamily" },
      fz: { type: "fontSize", property: "fontSize" },
      fw: { type: "identity", property: "fontWeight" },
      lts: { type: "size", property: "letterSpacing" },
      ta: { type: "identity", property: "textAlign" },
      lh: { type: "lineHeight", property: "lineHeight" },
      fs: { type: "identity", property: "fontStyle" },
      tt: { type: "identity", property: "textTransform" },
      td: { type: "identity", property: "textDecoration" },
      w: { type: "spacing", property: "width" },
      miw: { type: "spacing", property: "minWidth" },
      maw: { type: "spacing", property: "maxWidth" },
      h: { type: "spacing", property: "height" },
      mih: { type: "spacing", property: "minHeight" },
      mah: { type: "spacing", property: "maxHeight" },
      bgsz: { type: "size", property: "backgroundSize" },
      bgp: { type: "identity", property: "backgroundPosition" },
      bgr: { type: "identity", property: "backgroundRepeat" },
      bga: { type: "identity", property: "backgroundAttachment" },
      pos: { type: "identity", property: "position" },
      top: { type: "size", property: "top" },
      left: { type: "size", property: "left" },
      bottom: { type: "size", property: "bottom" },
      right: { type: "size", property: "right" },
      inset: { type: "size", property: "inset" },
      display: { type: "identity", property: "display" },
      flex: { type: "identity", property: "flex" }
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/color-resolver/color-resolver.mjs
function colorResolver(color3, theme2) {
  const parsedColor = parseThemeColor({ color: color3, theme: theme2 });
  if (parsedColor.color === "dimmed") {
    return "var(--mantine-color-dimmed)";
  }
  if (parsedColor.color === "bright") {
    return "var(--mantine-color-bright)";
  }
  return parsedColor.variable ? `var(${parsedColor.variable})` : parsedColor.color;
}
function textColorResolver(color3, theme2) {
  const parsedColor = parseThemeColor({ color: color3, theme: theme2 });
  if (parsedColor.isThemeColor && parsedColor.shade === void 0) {
    return `var(--mantine-color-${parsedColor.color}-text)`;
  }
  return colorResolver(color3, theme2);
}
var import_react40, import_jsx_runtime24;
var init_color_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/color-resolver/color-resolver.mjs"() {
    "use client";
    init_parse_theme_color();
    import_react40 = __toESM(require_react(), 1);
    import_jsx_runtime24 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/border-resolver/border-resolver.mjs
function borderResolver(value, theme2) {
  if (typeof value === "number") {
    return rem(value);
  }
  if (typeof value === "string") {
    const [size, style, ...colorTuple] = value.split(" ").filter((val) => val.trim() !== "");
    let result = `${rem(size)}`;
    style && (result += ` ${style}`);
    colorTuple.length > 0 && (result += ` ${colorResolver(colorTuple.join(" "), theme2)}`);
    return result.trim();
  }
  return value;
}
var import_react41, import_jsx_runtime25;
var init_border_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/border-resolver/border-resolver.mjs"() {
    "use client";
    init_rem();
    import_react41 = __toESM(require_react(), 1);
    import_jsx_runtime25 = __toESM(require_jsx_runtime(), 1);
    init_color_resolver();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/font-family-resolver/font-family-resolver.mjs
function fontFamilyResolver(fontFamily) {
  if (typeof fontFamily === "string" && fontFamily in values) {
    return values[fontFamily];
  }
  return fontFamily;
}
var values;
var init_font_family_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/font-family-resolver/font-family-resolver.mjs"() {
    "use client";
    values = {
      text: "var(--mantine-font-family)",
      mono: "var(--mantine-font-family-monospace)",
      monospace: "var(--mantine-font-family-monospace)",
      heading: "var(--mantine-font-family-headings)",
      headings: "var(--mantine-font-family-headings)"
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/font-size-resolver/font-size-resolver.mjs
function fontSizeResolver(value, theme2) {
  if (typeof value === "string" && value in theme2.fontSizes) {
    return `var(--mantine-font-size-${value})`;
  }
  if (typeof value === "string" && headings.includes(value)) {
    return `var(--mantine-${value}-font-size)`;
  }
  if (typeof value === "number") {
    return rem(value);
  }
  if (typeof value === "string") {
    return rem(value);
  }
  return value;
}
var import_react42, import_jsx_runtime26, headings;
var init_font_size_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/font-size-resolver/font-size-resolver.mjs"() {
    "use client";
    init_rem();
    import_react42 = __toESM(require_react(), 1);
    import_jsx_runtime26 = __toESM(require_jsx_runtime(), 1);
    headings = ["h1", "h2", "h3", "h4", "h5", "h6"];
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/identity-resolver/identity-resolver.mjs
function identityResolver(value) {
  return value;
}
var init_identity_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/identity-resolver/identity-resolver.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/line-height-resolver/line-height-resolver.mjs
function lineHeightResolver(value, theme2) {
  if (typeof value === "string" && value in theme2.lineHeights) {
    return `var(--mantine-line-height-${value})`;
  }
  if (typeof value === "string" && headings2.includes(value)) {
    return `var(--mantine-${value}-line-height)`;
  }
  return value;
}
var headings2;
var init_line_height_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/line-height-resolver/line-height-resolver.mjs"() {
    "use client";
    headings2 = ["h1", "h2", "h3", "h4", "h5", "h6"];
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/size-resolver/size-resolver.mjs
function sizeResolver(value) {
  if (typeof value === "number") {
    return rem(value);
  }
  return value;
}
var import_react43, import_jsx_runtime27;
var init_size_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/size-resolver/size-resolver.mjs"() {
    "use client";
    init_rem();
    import_react43 = __toESM(require_react(), 1);
    import_jsx_runtime27 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/spacing-resolver/spacing-resolver.mjs
function spacingResolver(value, theme2) {
  if (typeof value === "number") {
    return rem(value);
  }
  if (typeof value === "string") {
    const mod = value.replace("-", "");
    if (!(mod in theme2.spacing)) {
      return rem(value);
    }
    const variable = `--mantine-spacing-${mod}`;
    return value.startsWith("-") ? `calc(var(${variable}) * -1)` : `var(${variable})`;
  }
  return value;
}
var import_react44, import_jsx_runtime28;
var init_spacing_resolver = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/spacing-resolver/spacing-resolver.mjs"() {
    "use client";
    init_rem();
    import_react44 = __toESM(require_react(), 1);
    import_jsx_runtime28 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/index.mjs
var resolvers;
var init_resolvers = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/resolvers/index.mjs"() {
    "use client";
    init_border_resolver();
    init_color_resolver();
    init_font_family_resolver();
    init_font_size_resolver();
    init_identity_resolver();
    init_line_height_resolver();
    init_size_resolver();
    init_spacing_resolver();
    resolvers = {
      color: colorResolver,
      textColor: textColorResolver,
      fontSize: fontSizeResolver,
      spacing: spacingResolver,
      identity: identityResolver,
      size: sizeResolver,
      lineHeight: lineHeightResolver,
      fontFamily: fontFamilyResolver,
      border: borderResolver
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/sort-media-queries.mjs
function replaceMediaQuery(query2) {
  return query2.replace("(min-width: ", "").replace("em)", "");
}
function sortMediaQueries({
  media,
  ...props
}) {
  const breakpoints = Object.keys(media);
  const sortedMedia = breakpoints.sort((a12, b4) => Number(replaceMediaQuery(a12)) - Number(replaceMediaQuery(b4))).map((query2) => ({ query: query2, styles: media[query2] }));
  return { ...props, media: sortedMedia };
}
var init_sort_media_queries = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/sort-media-queries.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/parse-style-props.mjs
function hasResponsiveStyles(styleProp) {
  if (typeof styleProp !== "object" || styleProp === null) {
    return false;
  }
  const breakpoints = Object.keys(styleProp);
  if (breakpoints.length === 1 && breakpoints[0] === "base") {
    return false;
  }
  return true;
}
function getBaseValue2(value) {
  if (typeof value === "object" && value !== null) {
    if ("base" in value) {
      return value.base;
    }
    return void 0;
  }
  return value;
}
function getBreakpointKeys(value) {
  if (typeof value === "object" && value !== null) {
    return keys(value).filter((key) => key !== "base");
  }
  return [];
}
function getBreakpointValue2(value, breakpoint) {
  if (typeof value === "object" && value !== null && breakpoint in value) {
    return value[breakpoint];
  }
  return value;
}
function parseStyleProps({
  styleProps,
  data,
  theme: theme2
}) {
  return sortMediaQueries(
    keys(styleProps).reduce(
      (acc, styleProp) => {
        if (styleProp === "hiddenFrom" || styleProp === "visibleFrom" || styleProp === "sx") {
          return acc;
        }
        const propertyData = data[styleProp];
        const properties = Array.isArray(propertyData.property) ? propertyData.property : [propertyData.property];
        const baseValue = getBaseValue2(styleProps[styleProp]);
        if (!hasResponsiveStyles(styleProps[styleProp])) {
          properties.forEach((property) => {
            acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme2);
          });
          return acc;
        }
        acc.hasResponsiveStyles = true;
        const breakpoints = getBreakpointKeys(styleProps[styleProp]);
        properties.forEach((property) => {
          if (baseValue) {
            acc.styles[property] = resolvers[propertyData.type](baseValue, theme2);
          }
          breakpoints.forEach((breakpoint) => {
            const bp = `(min-width: ${theme2.breakpoints[breakpoint]})`;
            acc.media[bp] = {
              ...acc.media[bp],
              [property]: resolvers[propertyData.type](
                getBreakpointValue2(styleProps[styleProp], breakpoint),
                theme2
              )
            };
          });
        });
        return acc;
      },
      {
        hasResponsiveStyles: false,
        styles: {},
        inlineStyles: {},
        media: {}
      }
    )
  );
}
var import_react45, import_jsx_runtime29;
var init_parse_style_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/parse-style-props.mjs"() {
    "use client";
    init_keys();
    import_react45 = __toESM(require_react(), 1);
    import_jsx_runtime29 = __toESM(require_jsx_runtime(), 1);
    init_resolvers();
    init_sort_media_queries();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/use-random-classname/use-random-classname.mjs
function useRandomClassName() {
  const id5 = (0, import_react46.useId)().replace(/:/g, "");
  return `__m__-${id5}`;
}
var import_react46;
var init_use_random_classname = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/use-random-classname/use-random-classname.mjs"() {
    "use client";
    import_react46 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-style-object/get-style-object.mjs
function getStyleObject(style, theme2) {
  if (Array.isArray(style)) {
    return [...style].reduce(
      (acc, item3) => ({ ...acc, ...getStyleObject(item3, theme2) }),
      {}
    );
  }
  if (typeof style === "function") {
    return style(theme2);
  }
  if (style == null) {
    return {};
  }
  return style;
}
var init_get_style_object = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-style-object/get-style-object.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/create-polymorphic-component.mjs
function createPolymorphicComponent(component) {
  return component;
}
var init_create_polymorphic_component = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/create-polymorphic-component.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-box-mod/get-box-mod.mjs
function transformModKey(key) {
  return key.startsWith("data-") ? key : `data-${key}`;
}
function getMod(props) {
  return Object.keys(props).reduce((acc, key) => {
    const value = props[key];
    if (value === void 0 || value === "" || value === false || value === null) {
      return acc;
    }
    acc[transformModKey(key)] = props[key];
    return acc;
  }, {});
}
function getBoxMod(mod) {
  if (!mod) {
    return null;
  }
  if (typeof mod === "string") {
    return { [transformModKey(mod)]: true };
  }
  if (Array.isArray(mod)) {
    return [...mod].reduce(
      (acc, value) => ({ ...acc, ...getBoxMod(value) }),
      {}
    );
  }
  return getMod(mod);
}
var init_get_box_mod = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-box-mod/get-box-mod.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-box-style/get-box-style.mjs
function mergeStyles(styles, theme2) {
  if (Array.isArray(styles)) {
    return [...styles].reduce(
      (acc, item3) => ({ ...acc, ...mergeStyles(item3, theme2) }),
      {}
    );
  }
  if (typeof styles === "function") {
    return styles(theme2);
  }
  if (styles == null) {
    return {};
  }
  return styles;
}
function getBoxStyle({
  theme: theme2,
  style,
  vars,
  styleProps
}) {
  const _style = mergeStyles(style, theme2);
  const _vars = mergeStyles(vars, theme2);
  return { ..._style, ..._vars, ...styleProps };
}
var init_get_box_style = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/get-box-style/get-box-style.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/Box.mjs
var import_jsx_runtime30, import_react47, _Box, Box;
var init_Box = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/Box/Box.mjs"() {
    "use client";
    import_jsx_runtime30 = __toESM(require_jsx_runtime(), 1);
    import_react47 = __toESM(require_react(), 1);
    init_clsx();
    init_create_polymorphic_component();
    init_InlineStyles();
    init_is_number_like();
    init_Mantine_context();
    init_MantineThemeProvider();
    init_get_box_mod();
    init_get_box_style();
    init_extract_style_props();
    init_style_props_data();
    init_parse_style_props();
    init_use_random_classname();
    _Box = (0, import_react47.forwardRef)(
      ({
        component,
        style,
        __vars,
        className,
        variant,
        mod,
        size,
        hiddenFrom,
        visibleFrom,
        lightHidden,
        darkHidden,
        renderRoot,
        __size,
        ...others
      }, ref) => {
        const theme2 = useMantineTheme();
        const Element2 = component || "div";
        const { styleProps, rest } = extractStyleProps(others);
        const useSxTransform = useMantineSxTransform();
        const transformedSx = useSxTransform?.()?.(styleProps.sx);
        const responsiveClassName = useRandomClassName();
        const parsedStyleProps = parseStyleProps({
          styleProps,
          theme: theme2,
          data: STYlE_PROPS_DATA
        });
        const props = {
          ref,
          style: getBoxStyle({
            theme: theme2,
            style,
            vars: __vars,
            styleProps: parsedStyleProps.inlineStyles
          }),
          className: clsx_default(className, transformedSx, {
            [responsiveClassName]: parsedStyleProps.hasResponsiveStyles,
            "mantine-light-hidden": lightHidden,
            "mantine-dark-hidden": darkHidden,
            [`mantine-hidden-from-${hiddenFrom}`]: hiddenFrom,
            [`mantine-visible-from-${visibleFrom}`]: visibleFrom
          }),
          "data-variant": variant,
          "data-size": isNumberLike(size) ? void 0 : size || void 0,
          size: __size,
          ...getBoxMod(mod),
          ...rest
        };
        return /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(import_jsx_runtime30.Fragment, { children: [
          parsedStyleProps.hasResponsiveStyles && /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
            InlineStyles,
            {
              selector: `.${responsiveClassName}`,
              styles: parsedStyleProps.styles,
              media: parsedStyleProps.media
            }
          ),
          typeof renderRoot === "function" ? renderRoot(props) : /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(Element2, { ...props })
        ] });
      }
    );
    _Box.displayName = "@mantine/core/Box";
    Box = createPolymorphicComponent(_Box);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/factory.mjs
function identity(value) {
  return value;
}
function getWithProps(Component3) {
  const _Component = Component3;
  return (fixedProps) => {
    const Extended = (0, import_react48.forwardRef)((props, ref) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(_Component, { ...fixedProps, ...props, ref }));
    Extended.extend = _Component.extend;
    Extended.displayName = `WithProps(${_Component.displayName})`;
    return Extended;
  };
}
function factory(ui) {
  const Component3 = (0, import_react48.forwardRef)(ui);
  Component3.extend = identity;
  Component3.withProps = (fixedProps) => {
    const Extended = (0, import_react48.forwardRef)((props, ref) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Component3, { ...fixedProps, ...props, ref }));
    Extended.extend = Component3.extend;
    Extended.displayName = `WithProps(${Component3.displayName})`;
    return Extended;
  };
  return Component3;
}
var import_jsx_runtime31, import_react48;
var init_factory = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/factory.mjs"() {
    "use client";
    import_jsx_runtime31 = __toESM(require_jsx_runtime(), 1);
    import_react48 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs
function polymorphicFactory(ui) {
  const Component3 = (0, import_react49.forwardRef)(ui);
  Component3.withProps = (fixedProps) => {
    const Extended = (0, import_react49.forwardRef)((props, ref) => /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Component3, { ...fixedProps, ...props, ref }));
    Extended.extend = Component3.extend;
    Extended.displayName = `WithProps(${Component3.displayName})`;
    return Extended;
  };
  Component3.extend = identity;
  return Component3;
}
var import_jsx_runtime32, import_react49;
var init_polymorphic_factory = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs"() {
    "use client";
    import_jsx_runtime32 = __toESM(require_jsx_runtime(), 1);
    import_react49 = __toESM(require_react(), 1);
    init_factory();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs
function useDirection() {
  return (0, import_react50.useContext)(DirectionContext);
}
var import_jsx_runtime33, import_react50, DirectionContext;
var init_DirectionProvider = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs"() {
    "use client";
    import_jsx_runtime33 = __toESM(require_jsx_runtime(), 1);
    import_react50 = __toESM(require_react(), 1);
    DirectionContext = (0, import_react50.createContext)({
      dir: "ltr",
      toggleDirection: () => {
      },
      setDirection: () => {
      }
    });
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Collapse/use-collapse.mjs
function getAutoHeightDuration(height) {
  if (!height || typeof height === "string") {
    return 0;
  }
  const constant = height / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function getElementHeight(el) {
  return el?.current ? el.current.scrollHeight : "auto";
}
function useCollapse({
  transitionDuration,
  transitionTimingFunction = "ease",
  onTransitionEnd = () => {
  },
  opened
}) {
  const el = (0, import_react51.useRef)(null);
  const collapsedHeight = 0;
  const collapsedStyles = {
    display: "none",
    height: 0,
    overflow: "hidden"
  };
  const [styles, setStylesRaw] = (0, import_react51.useState)(opened ? {} : collapsedStyles);
  const setStyles = (newStyles) => {
    (0, import_react_dom.flushSync)(() => setStylesRaw(newStyles));
  };
  const mergeStyles2 = (newStyles) => {
    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));
  };
  function getTransitionStyles2(height) {
    const _duration = transitionDuration || getAutoHeightDuration(height);
    return {
      transition: `height ${_duration}ms ${transitionTimingFunction}, opacity ${_duration}ms ${transitionTimingFunction}`
    };
  }
  useDidUpdate(() => {
    if (typeof raf === "function") {
      if (opened) {
        raf(() => {
          mergeStyles2({ willChange: "height", display: "block", overflow: "hidden" });
          raf(() => {
            const height = getElementHeight(el);
            mergeStyles2({ ...getTransitionStyles2(height), height });
          });
        });
      } else {
        raf(() => {
          const height = getElementHeight(el);
          mergeStyles2({ ...getTransitionStyles2(height), willChange: "height", height });
          raf(() => mergeStyles2({ height: collapsedHeight, overflow: "hidden" }));
        });
      }
    }
  }, [opened]);
  const handleTransitionEnd = (e12) => {
    if (e12.target !== el.current || e12.propertyName !== "height") {
      return;
    }
    if (opened) {
      const height = getElementHeight(el);
      if (height === styles.height) {
        setStyles({});
      } else {
        mergeStyles2({ height });
      }
      onTransitionEnd();
    } else if (styles.height === collapsedHeight) {
      setStyles(collapsedStyles);
      onTransitionEnd();
    }
  };
  function getCollapseProps({ style = {}, refKey = "ref", ...rest } = {}) {
    const theirRef = rest[refKey];
    return {
      "aria-hidden": !opened,
      ...rest,
      [refKey]: mergeRefs(el, theirRef),
      onTransitionEnd: handleTransitionEnd,
      style: { boxSizing: "border-box", ...style, ...styles }
    };
  }
  return getCollapseProps;
}
var import_react51, import_react_dom, raf;
var init_use_collapse = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Collapse/use-collapse.mjs"() {
    "use client";
    import_react51 = __toESM(require_react(), 1);
    import_react_dom = __toESM(require_react_dom(), 1);
    init_esm2();
    raf = typeof window !== "undefined" && window.requestAnimationFrame;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Collapse/Collapse.mjs
var import_jsx_runtime34, import_react52, defaultProps, Collapse;
var init_Collapse = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Collapse/Collapse.mjs"() {
    "use client";
    import_jsx_runtime34 = __toESM(require_jsx_runtime(), 1);
    init_esm2();
    import_react52 = __toESM(require_react(), 1);
    init_clsx();
    init_MantineThemeProvider();
    init_use_props();
    init_get_style_object();
    init_Box();
    init_factory();
    init_use_collapse();
    defaultProps = {
      transitionDuration: 200,
      transitionTimingFunction: "ease",
      animateOpacity: true
    };
    Collapse = factory((props, ref) => {
      const {
        children,
        in: opened,
        transitionDuration,
        transitionTimingFunction,
        style,
        onTransitionEnd,
        animateOpacity,
        ...others
      } = useProps("Collapse", defaultProps, props);
      const theme2 = useMantineTheme();
      const shouldReduceMotion = useReducedMotion();
      const reduceMotion = theme2.respectReducedMotion ? shouldReduceMotion : false;
      const duration = reduceMotion ? 0 : transitionDuration;
      const getCollapseProps = useCollapse({
        opened,
        transitionDuration: duration,
        transitionTimingFunction,
        onTransitionEnd
      });
      if (duration === 0) {
        return opened ? /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Box, { ...others, children }) : null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
        Box,
        {
          ...getCollapseProps({
            style: {
              opacity: opened || !animateOpacity ? 1 : 0,
              transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : "none",
              ...getStyleObject(style, theme2)
            },
            ref,
            ...others
          }),
          children
        }
      );
    });
    Collapse.displayName = "@mantine/core/Collapse";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.module.css.mjs
var classes;
var init_UnstyledButton_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.module.css.mjs"() {
    "use client";
    classes = { "root": "m_87cf2631" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs
var import_jsx_runtime35, import_react53, defaultProps2, UnstyledButton;
var init_UnstyledButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs"() {
    "use client";
    import_jsx_runtime35 = __toESM(require_jsx_runtime(), 1);
    import_react53 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_UnstyledButton_module_css();
    defaultProps2 = {
      __staticSelector: "UnstyledButton"
    };
    UnstyledButton = polymorphicFactory(
      (_props, ref) => {
        const props = useProps("UnstyledButton", defaultProps2, _props);
        const {
          className,
          component = "button",
          __staticSelector,
          unstyled,
          classNames,
          styles,
          style,
          ...others
        } = props;
        const getStyles = useStyles({
          name: __staticSelector,
          props,
          classes,
          className,
          style,
          classNames,
          styles,
          unstyled
        });
        return /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
          Box,
          {
            ...getStyles("root", { focusable: true }),
            component,
            ref,
            type: component === "button" ? "button" : void 0,
            ...others
          }
        );
      }
    );
    UnstyledButton.classes = classes;
    UnstyledButton.displayName = "@mantine/core/UnstyledButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.module.css.mjs
var classes2;
var init_VisuallyHidden_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.module.css.mjs"() {
    "use client";
    classes2 = { "root": "m_515a97f8" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.mjs
var import_jsx_runtime36, import_react54, defaultProps3, VisuallyHidden;
var init_VisuallyHidden = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.mjs"() {
    "use client";
    import_jsx_runtime36 = __toESM(require_jsx_runtime(), 1);
    import_react54 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_VisuallyHidden_module_css();
    defaultProps3 = {};
    VisuallyHidden = factory((_props, ref) => {
      const props = useProps("VisuallyHidden", defaultProps3, _props);
      const { classNames, className, style, styles, unstyled, vars, ...others } = props;
      const getStyles = useStyles({
        name: "VisuallyHidden",
        classes: classes2,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled
      });
      return /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(Box, { component: "span", ref, ...getStyles("root"), ...others });
    });
    VisuallyHidden.classes = classes2;
    VisuallyHidden.displayName = "@mantine/core/VisuallyHidden";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Paper/Paper.module.css.mjs
var classes3;
var init_Paper_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Paper/Paper.module.css.mjs"() {
    "use client";
    classes3 = { "root": "m_1b7284a3" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Paper/Paper.mjs
var import_jsx_runtime37, import_react55, defaultProps4, varsResolver, Paper;
var init_Paper = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Paper/Paper.mjs"() {
    "use client";
    import_jsx_runtime37 = __toESM(require_jsx_runtime(), 1);
    import_react55 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Paper_module_css();
    defaultProps4 = {};
    varsResolver = createVarsResolver((_3, { radius, shadow }) => ({
      root: {
        "--paper-radius": radius === void 0 ? void 0 : getRadius(radius),
        "--paper-shadow": getShadow(shadow)
      }
    }));
    Paper = polymorphicFactory((_props, ref) => {
      const props = useProps("Paper", defaultProps4, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        withBorder,
        vars,
        radius,
        shadow,
        variant,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Paper",
        props,
        classes: classes3,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver
      });
      return /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
        Box,
        {
          ref,
          mod: [{ "data-with-border": withBorder }, mod],
          ...getStyles("root"),
          variant,
          ...others
        }
      );
    });
    Paper.classes = classes3;
    Paper.displayName = "@mantine/core/Paper";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Overlay/Overlay.module.css.mjs
var classes4;
var init_Overlay_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Overlay/Overlay.module.css.mjs"() {
    "use client";
    classes4 = { "root": "m_9814e45f" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Overlay/Overlay.mjs
var import_jsx_runtime38, import_react56, defaultProps5, varsResolver2, Overlay;
var init_Overlay = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Overlay/Overlay.mjs"() {
    "use client";
    import_jsx_runtime38 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react56 = __toESM(require_react(), 1);
    init_get_default_z_index();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_rgba();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Overlay_module_css();
    defaultProps5 = {
      zIndex: getDefaultZIndex("modal")
    };
    varsResolver2 = createVarsResolver(
      (_3, { gradient, color: color3, backgroundOpacity, blur, radius, zIndex }) => ({
        root: {
          "--overlay-bg": gradient || (color3 !== void 0 || backgroundOpacity !== void 0) && rgba(color3 || "#000", backgroundOpacity ?? 0.6) || void 0,
          "--overlay-filter": blur ? `blur(${rem(blur)})` : void 0,
          "--overlay-radius": radius === void 0 ? void 0 : getRadius(radius),
          "--overlay-z-index": zIndex?.toString()
        }
      })
    );
    Overlay = polymorphicFactory((_props, ref) => {
      const props = useProps("Overlay", defaultProps5, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        fixed,
        center,
        children,
        radius,
        zIndex,
        gradient,
        blur,
        color: color3,
        backgroundOpacity,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Overlay",
        props,
        classes: classes4,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver2
      });
      return /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(Box, { ref, ...getStyles("root"), mod: [{ center, fixed }, mod], ...others, children });
    });
    Overlay.classes = classes4;
    Overlay.displayName = "@mantine/core/Overlay";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Portal/Portal.mjs
function createPortalNode(props) {
  const node = document.createElement("div");
  node.setAttribute("data-portal", "true");
  typeof props.className === "string" && node.classList.add(...props.className.split(" ").filter(Boolean));
  typeof props.style === "object" && Object.assign(node.style, props.style);
  typeof props.id === "string" && node.setAttribute("id", props.id);
  return node;
}
function getTargetNode({
  target,
  reuseTargetNode,
  ...others
}) {
  if (target) {
    if (typeof target === "string") {
      return document.querySelector(target) || createPortalNode(others);
    }
    return target;
  }
  if (reuseTargetNode) {
    const existingNode = document.querySelector("[data-mantine-shared-portal-node]");
    if (existingNode) {
      return existingNode;
    }
    const node = createPortalNode(others);
    node.setAttribute("data-mantine-shared-portal-node", "true");
    document.body.appendChild(node);
    return node;
  }
  return createPortalNode(others);
}
var import_jsx_runtime39, import_react57, import_react_dom2, defaultProps6, Portal;
var init_Portal = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Portal/Portal.mjs"() {
    "use client";
    import_jsx_runtime39 = __toESM(require_jsx_runtime(), 1);
    import_react57 = __toESM(require_react(), 1);
    import_react_dom2 = __toESM(require_react_dom(), 1);
    init_esm2();
    init_clsx();
    init_use_props();
    init_factory();
    defaultProps6 = {};
    Portal = factory((props, ref) => {
      const { children, target, reuseTargetNode, ...others } = useProps("Portal", defaultProps6, props);
      const [mounted, setMounted] = (0, import_react57.useState)(false);
      const nodeRef = (0, import_react57.useRef)(null);
      useIsomorphicEffect(() => {
        setMounted(true);
        nodeRef.current = getTargetNode({ target, reuseTargetNode, ...others });
        assignRef(ref, nodeRef.current);
        if (!target && !reuseTargetNode && nodeRef.current) {
          document.body.appendChild(nodeRef.current);
        }
        return () => {
          if (!target && !reuseTargetNode && nodeRef.current) {
            document.body.removeChild(nodeRef.current);
          }
        };
      }, [target]);
      if (!mounted || !nodeRef.current) {
        return null;
      }
      return (0, import_react_dom2.createPortal)(/* @__PURE__ */ (0, import_jsx_runtime39.jsx)(import_jsx_runtime39.Fragment, { children }), nodeRef.current);
    });
    Portal.displayName = "@mantine/core/Portal";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Portal/OptionalPortal.mjs
var import_jsx_runtime40, import_react58, OptionalPortal;
var init_OptionalPortal = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Portal/OptionalPortal.mjs"() {
    "use client";
    import_jsx_runtime40 = __toESM(require_jsx_runtime(), 1);
    import_react58 = __toESM(require_react(), 1);
    init_clsx();
    init_Mantine_context();
    init_factory();
    init_Portal();
    OptionalPortal = factory(
      ({ withinPortal = true, children, ...others }, ref) => {
        const env2 = useMantineEnv();
        if (env2 === "test" || !withinPortal) {
          return /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(import_jsx_runtime40.Fragment, { children });
        }
        return /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(Portal, { ref, ...others, children });
      }
    );
    OptionalPortal.displayName = "@mantine/core/OptionalPortal";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/transitions.mjs
var popIn, transitions;
var init_transitions = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/transitions.mjs"() {
    "use client";
    popIn = (from) => ({
      in: { opacity: 1, transform: "scale(1)" },
      out: { opacity: 0, transform: `scale(.9) translateY(${from === "bottom" ? 10 : -10}px)` },
      transitionProperty: "transform, opacity"
    });
    transitions = {
      fade: {
        in: { opacity: 1 },
        out: { opacity: 0 },
        transitionProperty: "opacity"
      },
      "fade-up": {
        in: { opacity: 1, transform: "translateY(0)" },
        out: { opacity: 0, transform: "translateY(30px)" },
        transitionProperty: "opacity, transform"
      },
      "fade-down": {
        in: { opacity: 1, transform: "translateY(0)" },
        out: { opacity: 0, transform: "translateY(-30px)" },
        transitionProperty: "opacity, transform"
      },
      "fade-left": {
        in: { opacity: 1, transform: "translateX(0)" },
        out: { opacity: 0, transform: "translateX(30px)" },
        transitionProperty: "opacity, transform"
      },
      "fade-right": {
        in: { opacity: 1, transform: "translateX(0)" },
        out: { opacity: 0, transform: "translateX(-30px)" },
        transitionProperty: "opacity, transform"
      },
      scale: {
        in: { opacity: 1, transform: "scale(1)" },
        out: { opacity: 0, transform: "scale(0)" },
        common: { transformOrigin: "top" },
        transitionProperty: "transform, opacity"
      },
      "scale-y": {
        in: { opacity: 1, transform: "scaleY(1)" },
        out: { opacity: 0, transform: "scaleY(0)" },
        common: { transformOrigin: "top" },
        transitionProperty: "transform, opacity"
      },
      "scale-x": {
        in: { opacity: 1, transform: "scaleX(1)" },
        out: { opacity: 0, transform: "scaleX(0)" },
        common: { transformOrigin: "left" },
        transitionProperty: "transform, opacity"
      },
      "skew-up": {
        in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
        out: { opacity: 0, transform: "translateY(-20px) skew(-10deg, -5deg)" },
        common: { transformOrigin: "top" },
        transitionProperty: "transform, opacity"
      },
      "skew-down": {
        in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
        out: { opacity: 0, transform: "translateY(20px) skew(-10deg, -5deg)" },
        common: { transformOrigin: "bottom" },
        transitionProperty: "transform, opacity"
      },
      "rotate-left": {
        in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
        out: { opacity: 0, transform: "translateY(20px) rotate(-5deg)" },
        common: { transformOrigin: "bottom" },
        transitionProperty: "transform, opacity"
      },
      "rotate-right": {
        in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
        out: { opacity: 0, transform: "translateY(20px) rotate(5deg)" },
        common: { transformOrigin: "top" },
        transitionProperty: "transform, opacity"
      },
      "slide-down": {
        in: { opacity: 1, transform: "translateY(0)" },
        out: { opacity: 0, transform: "translateY(-100%)" },
        common: { transformOrigin: "top" },
        transitionProperty: "transform, opacity"
      },
      "slide-up": {
        in: { opacity: 1, transform: "translateY(0)" },
        out: { opacity: 0, transform: "translateY(100%)" },
        common: { transformOrigin: "bottom" },
        transitionProperty: "transform, opacity"
      },
      "slide-left": {
        in: { opacity: 1, transform: "translateX(0)" },
        out: { opacity: 0, transform: "translateX(100%)" },
        common: { transformOrigin: "left" },
        transitionProperty: "transform, opacity"
      },
      "slide-right": {
        in: { opacity: 1, transform: "translateX(0)" },
        out: { opacity: 0, transform: "translateX(-100%)" },
        common: { transformOrigin: "right" },
        transitionProperty: "transform, opacity"
      },
      pop: {
        ...popIn("bottom"),
        common: { transformOrigin: "center center" }
      },
      "pop-bottom-left": {
        ...popIn("bottom"),
        common: { transformOrigin: "bottom left" }
      },
      "pop-bottom-right": {
        ...popIn("bottom"),
        common: { transformOrigin: "bottom right" }
      },
      "pop-top-left": {
        ...popIn("top"),
        common: { transformOrigin: "top left" }
      },
      "pop-top-right": {
        ...popIn("top"),
        common: { transformOrigin: "top right" }
      }
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/get-transition-styles/get-transition-styles.mjs
function getTransitionStyles({
  transition,
  state: state2,
  duration,
  timingFunction
}) {
  const shared = {
    transitionDuration: `${duration}ms`,
    transitionTimingFunction: timingFunction
  };
  if (typeof transition === "string") {
    if (!(transition in transitions)) {
      return {};
    }
    return {
      transitionProperty: transitions[transition].transitionProperty,
      ...shared,
      ...transitions[transition].common,
      ...transitions[transition][transitionStatuses[state2]]
    };
  }
  return {
    transitionProperty: transition.transitionProperty,
    ...shared,
    ...transition.common,
    ...transition[transitionStatuses[state2]]
  };
}
var transitionStatuses;
var init_get_transition_styles = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/get-transition-styles/get-transition-styles.mjs"() {
    "use client";
    init_transitions();
    transitionStatuses = {
      entering: "in",
      entered: "in",
      exiting: "out",
      exited: "out",
      "pre-exiting": "out",
      "pre-entering": "out"
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/use-transition.mjs
function useTransition({
  duration,
  exitDuration,
  timingFunction,
  mounted,
  onEnter,
  onExit,
  onEntered,
  onExited,
  enterDelay,
  exitDelay
}) {
  const theme2 = useMantineTheme();
  const shouldReduceMotion = useReducedMotion();
  const reduceMotion = theme2.respectReducedMotion ? shouldReduceMotion : false;
  const [transitionDuration, setTransitionDuration] = (0, import_react59.useState)(reduceMotion ? 0 : duration);
  const [transitionStatus, setStatus] = (0, import_react59.useState)(mounted ? "entered" : "exited");
  const transitionTimeoutRef = (0, import_react59.useRef)(-1);
  const delayTimeoutRef = (0, import_react59.useRef)(-1);
  const rafRef = (0, import_react59.useRef)(-1);
  const handleStateChange = (shouldMount) => {
    const preHandler = shouldMount ? onEnter : onExit;
    const handler2 = shouldMount ? onEntered : onExited;
    window.clearTimeout(transitionTimeoutRef.current);
    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;
    setTransitionDuration(newTransitionDuration);
    if (newTransitionDuration === 0) {
      typeof preHandler === "function" && preHandler();
      typeof handler2 === "function" && handler2();
      setStatus(shouldMount ? "entered" : "exited");
    } else {
      rafRef.current = requestAnimationFrame(() => {
        import_react_dom3.default.flushSync(() => {
          setStatus(shouldMount ? "pre-entering" : "pre-exiting");
        });
        rafRef.current = requestAnimationFrame(() => {
          typeof preHandler === "function" && preHandler();
          setStatus(shouldMount ? "entering" : "exiting");
          transitionTimeoutRef.current = window.setTimeout(() => {
            typeof handler2 === "function" && handler2();
            setStatus(shouldMount ? "entered" : "exited");
          }, newTransitionDuration);
        });
      });
    }
  };
  const handleTransitionWithDelay = (shouldMount) => {
    window.clearTimeout(delayTimeoutRef.current);
    const delay3 = shouldMount ? enterDelay : exitDelay;
    if (typeof delay3 !== "number") {
      handleStateChange(shouldMount);
      return;
    }
    delayTimeoutRef.current = window.setTimeout(
      () => {
        handleStateChange(shouldMount);
      },
      shouldMount ? enterDelay : exitDelay
    );
  };
  useDidUpdate(() => {
    handleTransitionWithDelay(mounted);
  }, [mounted]);
  (0, import_react59.useEffect)(
    () => () => {
      window.clearTimeout(transitionTimeoutRef.current);
      cancelAnimationFrame(rafRef.current);
    },
    []
  );
  return {
    transitionDuration,
    transitionStatus,
    transitionTimingFunction: timingFunction || "ease"
  };
}
var import_react59, import_react_dom3, import_jsx_runtime41;
var init_use_transition = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/use-transition.mjs"() {
    "use client";
    import_react59 = __toESM(require_react(), 1);
    import_react_dom3 = __toESM(require_react_dom(), 1);
    init_esm2();
    import_jsx_runtime41 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    init_MantineThemeProvider();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/Transition.mjs
function Transition({
  keepMounted,
  transition = "fade",
  duration = 250,
  exitDuration = duration,
  mounted,
  children,
  timingFunction = "ease",
  onExit,
  onEntered,
  onEnter,
  onExited,
  enterDelay,
  exitDelay
}) {
  const env2 = useMantineEnv();
  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({
    mounted,
    exitDuration,
    duration,
    timingFunction,
    onExit,
    onEntered,
    onEnter,
    onExited,
    enterDelay,
    exitDelay
  });
  if (transitionDuration === 0 || env2 === "test") {
    return mounted ? /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(import_jsx_runtime42.Fragment, { children: children({}) }) : keepMounted ? children({ display: "none" }) : null;
  }
  return transitionStatus === "exited" ? keepMounted ? children({ display: "none" }) : null : /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(import_jsx_runtime42.Fragment, { children: children(
    getTransitionStyles({
      transition,
      duration: transitionDuration,
      state: transitionStatus,
      timingFunction: transitionTimingFunction
    })
  ) });
}
var import_jsx_runtime42, import_react60;
var init_Transition = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Transition/Transition.mjs"() {
    "use client";
    import_jsx_runtime42 = __toESM(require_jsx_runtime(), 1);
    import_react60 = __toESM(require_react(), 1);
    init_clsx();
    init_Mantine_context();
    init_get_transition_styles();
    init_use_transition();
    Transition.displayName = "@mantine/core/Transition";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs
function FocusTrap({
  children,
  active = true,
  refProp = "ref",
  innerRef
}) {
  const focusTrapRef = useFocusTrap(active);
  const ref = useMergedRef(focusTrapRef, innerRef);
  if (!isElement(children)) {
    return children;
  }
  return (0, import_react61.cloneElement)(children, { [refProp]: ref });
}
function FocusTrapInitialFocus(props) {
  return /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(VisuallyHidden, { tabIndex: -1, "data-autofocus": true, ...props });
}
var import_jsx_runtime43, import_react61;
var init_FocusTrap = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs"() {
    "use client";
    import_jsx_runtime43 = __toESM(require_jsx_runtime(), 1);
    import_react61 = __toESM(require_react(), 1);
    init_esm2();
    init_is_element();
    init_clsx();
    init_VisuallyHidden();
    FocusTrap.displayName = "@mantine/core/FocusTrap";
    FocusTrapInitialFocus.displayName = "@mantine/core/FocusTrapInitialFocus";
    FocusTrap.InitialFocus = FocusTrapInitialFocus;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/Loader.module.css.mjs
var classes5;
var init_Loader_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/Loader.module.css.mjs"() {
    "use client";
    classes5 = { "root": "m_5ae2e3c", "barsLoader": "m_7a2bd4cd", "bar": "m_870bb79", "bars-loader-animation": "m_5d2b3b9d", "dotsLoader": "m_4e3f22d7", "dot": "m_870c4af", "loader-dots-animation": "m_aac34a1", "ovalLoader": "m_b34414df", "oval-loader-animation": "m_f8e89c4b" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Bars.mjs
var import_jsx_runtime44, import_react62, Bars;
var init_Bars = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Bars.mjs"() {
    "use client";
    import_jsx_runtime44 = __toESM(require_jsx_runtime(), 1);
    import_react62 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_Loader_module_css();
    Bars = (0, import_react62.forwardRef)(({ className, ...others }, ref) => /* @__PURE__ */ (0, import_jsx_runtime44.jsxs)(Box, { component: "span", className: clsx_default(classes5.barsLoader, className), ...others, ref, children: [
      /* @__PURE__ */ (0, import_jsx_runtime44.jsx)("span", { className: classes5.bar }),
      /* @__PURE__ */ (0, import_jsx_runtime44.jsx)("span", { className: classes5.bar }),
      /* @__PURE__ */ (0, import_jsx_runtime44.jsx)("span", { className: classes5.bar })
    ] }));
    Bars.displayName = "@mantine/core/Bars";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Dots.mjs
var import_jsx_runtime45, import_react63, Dots;
var init_Dots = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Dots.mjs"() {
    "use client";
    import_jsx_runtime45 = __toESM(require_jsx_runtime(), 1);
    import_react63 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_Loader_module_css();
    Dots = (0, import_react63.forwardRef)(({ className, ...others }, ref) => /* @__PURE__ */ (0, import_jsx_runtime45.jsxs)(Box, { component: "span", className: clsx_default(classes5.dotsLoader, className), ...others, ref, children: [
      /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("span", { className: classes5.dot }),
      /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("span", { className: classes5.dot }),
      /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("span", { className: classes5.dot })
    ] }));
    Dots.displayName = "@mantine/core/Dots";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Oval.mjs
var import_jsx_runtime46, import_react64, Oval;
var init_Oval = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/loaders/Oval.mjs"() {
    "use client";
    import_jsx_runtime46 = __toESM(require_jsx_runtime(), 1);
    import_react64 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_Loader_module_css();
    Oval = (0, import_react64.forwardRef)(({ className, ...others }, ref) => /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(Box, { component: "span", className: clsx_default(classes5.ovalLoader, className), ...others, ref }));
    Oval.displayName = "@mantine/core/Oval";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/Loader.mjs
var import_jsx_runtime47, import_react65, defaultLoaders, defaultProps7, varsResolver3, Loader;
var init_Loader = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Loader/Loader.mjs"() {
    "use client";
    import_jsx_runtime47 = __toESM(require_jsx_runtime(), 1);
    import_react65 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_get_theme_color();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Bars();
    init_Dots();
    init_Oval();
    init_Loader_module_css();
    defaultLoaders = {
      bars: Bars,
      oval: Oval,
      dots: Dots
    };
    defaultProps7 = {
      loaders: defaultLoaders,
      type: "oval"
    };
    varsResolver3 = createVarsResolver((theme2, { size, color: color3 }) => ({
      root: {
        "--loader-size": getSize(size, "loader-size"),
        "--loader-color": color3 ? getThemeColor(color3, theme2) : void 0
      }
    }));
    Loader = factory((_props, ref) => {
      const props = useProps("Loader", defaultProps7, _props);
      const {
        size,
        color: color3,
        type,
        vars,
        className,
        style,
        classNames,
        styles,
        unstyled,
        loaders,
        variant,
        children,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Loader",
        props,
        classes: classes5,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver3
      });
      if (children) {
        return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(Box, { ...getStyles("root"), ref, ...others, children });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(
        Box,
        {
          ...getStyles("root"),
          ref,
          component: loaders[type],
          variant,
          size,
          ...others
        }
      );
    });
    Loader.defaultLoaders = defaultLoaders;
    Loader.classes = classes5;
    Loader.displayName = "@mantine/core/Loader";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseIcon.mjs
var import_jsx_runtime48, import_react66, CloseIcon;
var init_CloseIcon = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseIcon.mjs"() {
    "use client";
    import_jsx_runtime48 = __toESM(require_jsx_runtime(), 1);
    import_react66 = __toESM(require_react(), 1);
    CloseIcon = (0, import_react66.forwardRef)(
      ({ size = "var(--cb-icon-size, 70%)", style, ...others }, ref) => /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(
        "svg",
        {
          viewBox: "0 0 15 15",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          style: { ...style, width: size, height: size },
          ref,
          ...others,
          children: /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(
            "path",
            {
              d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
              fill: "currentColor",
              fillRule: "evenodd",
              clipRule: "evenodd"
            }
          )
        }
      )
    );
    CloseIcon.displayName = "@mantine/core/CloseIcon";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.module.css.mjs
var classes6;
var init_CloseButton_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.module.css.mjs"() {
    "use client";
    classes6 = { "root": "m_86a44da5", "root--subtle": "m_220c80f2" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.mjs
var import_jsx_runtime49, import_react67, defaultProps8, varsResolver4, CloseButton;
var init_CloseButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.mjs"() {
    "use client";
    import_jsx_runtime49 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react67 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_polymorphic_factory();
    init_UnstyledButton();
    init_CloseIcon();
    init_CloseButton_module_css();
    defaultProps8 = {
      variant: "subtle"
    };
    varsResolver4 = createVarsResolver((_3, { size, radius, iconSize }) => ({
      root: {
        "--cb-size": getSize(size, "cb-size"),
        "--cb-radius": radius === void 0 ? void 0 : getRadius(radius),
        "--cb-icon-size": rem(iconSize)
      }
    }));
    CloseButton = polymorphicFactory((_props, ref) => {
      const props = useProps("CloseButton", defaultProps8, _props);
      const {
        iconSize,
        children,
        vars,
        radius,
        className,
        classNames,
        style,
        styles,
        unstyled,
        "data-disabled": dataDisabled,
        disabled,
        variant,
        icon,
        mod,
        __staticSelector,
        ...others
      } = props;
      const getStyles = useStyles({
        name: __staticSelector || "CloseButton",
        props,
        className,
        style,
        classes: classes6,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver4
      });
      return /* @__PURE__ */ (0, import_jsx_runtime49.jsxs)(
        UnstyledButton,
        {
          ref,
          ...others,
          unstyled,
          variant,
          disabled,
          mod: [{ disabled: disabled || dataDisabled }, mod],
          ...getStyles("root", { variant, active: !disabled && !dataDisabled }),
          children: [
            icon || /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(CloseIcon, {}),
            children
          ]
        }
      );
    });
    CloseButton.classes = classes6;
    CloseButton.displayName = "@mantine/core/CloseButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/filter-falsy-children/filter-falsy-children.mjs
function filterFalsyChildren(children) {
  return import_react68.Children.toArray(children).filter(Boolean);
}
var import_react68;
var init_filter_falsy_children = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/filter-falsy-children/filter-falsy-children.mjs"() {
    "use client";
    import_react68 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/Group.module.css.mjs
var classes7;
var init_Group_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/Group.module.css.mjs"() {
    "use client";
    classes7 = { "root": "m_4081bf90" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/Group.mjs
var import_jsx_runtime50, import_react69, defaultProps9, varsResolver5, Group;
var init_Group = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Group/Group.mjs"() {
    "use client";
    import_jsx_runtime50 = __toESM(require_jsx_runtime(), 1);
    import_react69 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_filter_falsy_children();
    init_Group_module_css();
    defaultProps9 = {
      preventGrowOverflow: true,
      gap: "md",
      align: "center",
      justify: "flex-start",
      wrap: "wrap"
    };
    varsResolver5 = createVarsResolver(
      (_3, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({
        root: {
          "--group-child-width": grow && preventGrowOverflow ? childWidth : void 0,
          "--group-gap": getSpacing(gap),
          "--group-align": align,
          "--group-justify": justify,
          "--group-wrap": wrap
        }
      })
    );
    Group = factory((_props, ref) => {
      const props = useProps("Group", defaultProps9, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        children,
        gap,
        align,
        justify,
        wrap,
        grow,
        preventGrowOverflow,
        vars,
        variant,
        __size,
        mod,
        ...others
      } = props;
      const filteredChildren = filterFalsyChildren(children);
      const childrenCount = filteredChildren.length;
      const resolvedGap = getSpacing(gap ?? "md");
      const childWidth = `calc(${100 / childrenCount}% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;
      const stylesCtx = { childWidth };
      const getStyles = useStyles({
        name: "Group",
        props,
        stylesCtx,
        className,
        style,
        classes: classes7,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver5
      });
      return /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
        Box,
        {
          ...getStyles("root"),
          ref,
          variant,
          mod: [{ grow }, mod],
          size: __size,
          ...others,
          children: filteredChildren
        }
      );
    });
    Group.classes = classes7;
    Group.displayName = "@mantine/core/Group";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.context.mjs
var import_react70, import_jsx_runtime51, ModalBaseProvider, useModalBaseContext;
var init_ModalBase_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.context.mjs"() {
    "use client";
    import_react70 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime51 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [ModalBaseProvider, useModalBaseContext] = createSafeContext(
      "ModalBase component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-lock-scroll.mjs
function useLockScroll({ opened, transitionDuration }) {
  const [shouldLockScroll, setShouldLockScroll] = (0, import_react71.useState)(opened);
  const timeout = (0, import_react71.useRef)(-1);
  const reduceMotion = useReducedMotion();
  const _transitionDuration = reduceMotion ? 0 : transitionDuration;
  (0, import_react71.useEffect)(() => {
    if (opened) {
      setShouldLockScroll(true);
      window.clearTimeout(timeout.current);
    } else if (_transitionDuration === 0) {
      setShouldLockScroll(false);
    } else {
      timeout.current = window.setTimeout(() => setShouldLockScroll(false), _transitionDuration);
    }
    return () => window.clearTimeout(timeout.current);
  }, [opened, _transitionDuration]);
  return shouldLockScroll;
}
var import_react71;
var init_use_lock_scroll = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-lock-scroll.mjs"() {
    "use client";
    import_react71 = __toESM(require_react(), 1);
    init_esm2();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal.mjs
function useModal({
  id: id5,
  transitionProps,
  opened,
  trapFocus,
  closeOnEscape,
  onClose,
  returnFocus
}) {
  const _id = useId(id5);
  const [titleMounted, setTitleMounted] = (0, import_react72.useState)(false);
  const [bodyMounted, setBodyMounted] = (0, import_react72.useState)(false);
  const transitionDuration = typeof transitionProps?.duration === "number" ? transitionProps?.duration : 200;
  const shouldLockScroll = useLockScroll({ opened, transitionDuration });
  useWindowEvent(
    "keydown",
    (event) => {
      if (event.key === "Escape" && closeOnEscape && opened) {
        const shouldTrigger = event.target?.getAttribute("data-mantine-stop-propagation") !== "true";
        shouldTrigger && onClose();
      }
    },
    { capture: true }
  );
  useFocusReturn({ opened, shouldReturnFocus: trapFocus && returnFocus });
  return {
    _id,
    titleMounted,
    bodyMounted,
    shouldLockScroll,
    setTitleMounted,
    setBodyMounted
  };
}
var import_react72;
var init_use_modal = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal.mjs"() {
    "use client";
    import_react72 = __toESM(require_react(), 1);
    init_esm2();
    init_use_lock_scroll();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.mjs
var import_jsx_runtime52, import_react73, import_react_remove_scroll, ModalBase;
var init_ModalBase = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.mjs"() {
    "use client";
    import_jsx_runtime52 = __toESM(require_jsx_runtime(), 1);
    import_react73 = __toESM(require_react(), 1);
    import_react_remove_scroll = __toESM(require_es56(), 1);
    init_get_default_z_index();
    init_get_size();
    init_clsx();
    init_Box();
    init_OptionalPortal();
    init_ModalBase_context();
    init_use_modal();
    ModalBase = (0, import_react73.forwardRef)(
      ({
        keepMounted,
        opened,
        onClose,
        id: id5,
        transitionProps,
        onExitTransitionEnd,
        onEnterTransitionEnd,
        trapFocus,
        closeOnEscape,
        returnFocus,
        closeOnClickOutside,
        withinPortal,
        portalProps,
        lockScroll,
        children,
        zIndex,
        shadow,
        padding,
        __vars,
        unstyled,
        removeScrollProps,
        ...others
      }, ref) => {
        const { _id, titleMounted, bodyMounted, shouldLockScroll, setTitleMounted, setBodyMounted } = useModal({ id: id5, transitionProps, opened, trapFocus, closeOnEscape, onClose, returnFocus });
        const { key: removeScrollKey, ...otherRemoveScrollProps } = removeScrollProps || {};
        return /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(OptionalPortal, { ...portalProps, withinPortal, children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
          ModalBaseProvider,
          {
            value: {
              opened,
              onClose,
              closeOnClickOutside,
              onExitTransitionEnd,
              onEnterTransitionEnd,
              transitionProps: { ...transitionProps, keepMounted },
              getTitleId: () => `${_id}-title`,
              getBodyId: () => `${_id}-body`,
              titleMounted,
              bodyMounted,
              setTitleMounted,
              setBodyMounted,
              trapFocus,
              closeOnEscape,
              zIndex,
              unstyled
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
              import_react_remove_scroll.RemoveScroll,
              {
                enabled: shouldLockScroll && lockScroll,
                ...otherRemoveScrollProps,
                children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
                  Box,
                  {
                    ref,
                    ...others,
                    __vars: {
                      ...__vars,
                      "--mb-z-index": (zIndex || getDefaultZIndex("modal")).toString(),
                      "--mb-shadow": getShadow(shadow),
                      "--mb-padding": getSpacing(padding)
                    },
                    children
                  }
                )
              },
              removeScrollKey
            )
          }
        ) });
      }
    );
    ModalBase.displayName = "@mantine/core/ModalBase";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-body-id.mjs
function useModalBodyId() {
  const ctx = useModalBaseContext();
  (0, import_react74.useEffect)(() => {
    ctx.setBodyMounted(true);
    return () => ctx.setBodyMounted(false);
  }, []);
  return ctx.getBodyId();
}
var import_react74;
var init_use_modal_body_id = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-body-id.mjs"() {
    "use client";
    import_react74 = __toESM(require_react(), 1);
    init_ModalBase_context();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.module.css.mjs
var classes8;
var init_ModalBase_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.module.css.mjs"() {
    "use client";
    classes8 = { "title": "m_615af6c9", "header": "m_b5489c3c", "inner": "m_60c222c7", "content": "m_fd1ab0aa", "close": "m_606cb269", "body": "m_5df29311" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseBody.mjs
var import_jsx_runtime53, import_react75, ModalBaseBody;
var init_ModalBaseBody = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseBody.mjs"() {
    "use client";
    import_jsx_runtime53 = __toESM(require_jsx_runtime(), 1);
    import_react75 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_ModalBase_context();
    init_use_modal_body_id();
    init_ModalBase_module_css();
    ModalBaseBody = (0, import_react75.forwardRef)(
      ({ className, ...others }, ref) => {
        const bodyId = useModalBodyId();
        const ctx = useModalBaseContext();
        return /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
          Box,
          {
            ref,
            ...others,
            id: bodyId,
            className: clsx_default({ [classes8.body]: !ctx.unstyled }, className)
          }
        );
      }
    );
    ModalBaseBody.displayName = "@mantine/core/ModalBaseBody";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseCloseButton.mjs
var import_jsx_runtime54, import_react76, ModalBaseCloseButton;
var init_ModalBaseCloseButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseCloseButton.mjs"() {
    "use client";
    import_jsx_runtime54 = __toESM(require_jsx_runtime(), 1);
    import_react76 = __toESM(require_react(), 1);
    init_clsx();
    init_CloseButton();
    init_ModalBase_context();
    init_ModalBase_module_css();
    ModalBaseCloseButton = (0, import_react76.forwardRef)(
      ({ className, onClick, ...others }, ref) => {
        const ctx = useModalBaseContext();
        return /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
          CloseButton,
          {
            ref,
            ...others,
            onClick: (event) => {
              ctx.onClose();
              onClick?.(event);
            },
            className: clsx_default({ [classes8.close]: !ctx.unstyled }, className),
            unstyled: ctx.unstyled
          }
        );
      }
    );
    ModalBaseCloseButton.displayName = "@mantine/core/ModalBaseCloseButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseContent.mjs
var import_jsx_runtime55, import_react77, ModalBaseContent;
var init_ModalBaseContent = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseContent.mjs"() {
    "use client";
    import_jsx_runtime55 = __toESM(require_jsx_runtime(), 1);
    import_react77 = __toESM(require_react(), 1);
    init_clsx();
    init_FocusTrap();
    init_Paper();
    init_Transition();
    init_ModalBase_context();
    init_ModalBase_module_css();
    ModalBaseContent = (0, import_react77.forwardRef)(
      ({ transitionProps, className, innerProps, onKeyDown, style, ...others }, ref) => {
        const ctx = useModalBaseContext();
        return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
          Transition,
          {
            mounted: ctx.opened,
            transition: "pop",
            ...ctx.transitionProps,
            onExited: () => {
              ctx.onExitTransitionEnd?.();
              ctx.transitionProps?.onExited?.();
            },
            onEntered: () => {
              ctx.onEnterTransitionEnd?.();
              ctx.transitionProps?.onEntered?.();
            },
            ...transitionProps,
            children: (transitionStyles) => /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
              "div",
              {
                ...innerProps,
                className: clsx_default({ [classes8.inner]: !ctx.unstyled }, innerProps.className),
                children: /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(FocusTrap, { active: ctx.opened && ctx.trapFocus, innerRef: ref, children: /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                  Paper,
                  {
                    ...others,
                    component: "section",
                    role: "dialog",
                    tabIndex: -1,
                    "aria-modal": true,
                    "aria-describedby": ctx.bodyMounted ? ctx.getBodyId() : void 0,
                    "aria-labelledby": ctx.titleMounted ? ctx.getTitleId() : void 0,
                    style: [style, transitionStyles],
                    className: clsx_default({ [classes8.content]: !ctx.unstyled }, className),
                    unstyled: ctx.unstyled,
                    children: others.children
                  }
                ) })
              }
            )
          }
        );
      }
    );
    ModalBaseContent.displayName = "@mantine/core/ModalBaseContent";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseHeader.mjs
var import_jsx_runtime56, import_react78, ModalBaseHeader;
var init_ModalBaseHeader = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseHeader.mjs"() {
    "use client";
    import_jsx_runtime56 = __toESM(require_jsx_runtime(), 1);
    import_react78 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_ModalBase_context();
    init_ModalBase_module_css();
    ModalBaseHeader = (0, import_react78.forwardRef)(
      ({ className, ...others }, ref) => {
        const ctx = useModalBaseContext();
        return /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(
          Box,
          {
            component: "header",
            ref,
            className: clsx_default({ [classes8.header]: !ctx.unstyled }, className),
            ...others
          }
        );
      }
    );
    ModalBaseHeader.displayName = "@mantine/core/ModalBaseHeader";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-transition.mjs
function useModalTransition(transitionOverride) {
  const ctx = useModalBaseContext();
  return { ...DEFAULT_TRANSITION, ...ctx.transitionProps, ...transitionOverride };
}
var DEFAULT_TRANSITION;
var init_use_modal_transition = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-transition.mjs"() {
    "use client";
    init_ModalBase_context();
    DEFAULT_TRANSITION = {
      duration: 200,
      timingFunction: "ease",
      transition: "fade"
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseOverlay.mjs
var import_jsx_runtime57, import_react79, ModalBaseOverlay;
var init_ModalBaseOverlay = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseOverlay.mjs"() {
    "use client";
    import_jsx_runtime57 = __toESM(require_jsx_runtime(), 1);
    import_react79 = __toESM(require_react(), 1);
    init_Overlay();
    init_Transition();
    init_ModalBase_context();
    init_use_modal_transition();
    ModalBaseOverlay = (0, import_react79.forwardRef)(
      ({ onClick, transitionProps, style, visible: visible2, ...others }, ref) => {
        const ctx = useModalBaseContext();
        const transition = useModalTransition(transitionProps);
        return /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(
          Transition,
          {
            mounted: visible2 !== void 0 ? visible2 : ctx.opened,
            ...transition,
            transition: "fade",
            children: (transitionStyles) => /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(
              Overlay,
              {
                ref,
                fixed: true,
                style: [style, transitionStyles],
                zIndex: ctx.zIndex,
                unstyled: ctx.unstyled,
                onClick: (event) => {
                  onClick?.(event);
                  ctx.closeOnClickOutside && ctx.onClose();
                },
                ...others
              }
            )
          }
        );
      }
    );
    ModalBaseOverlay.displayName = "@mantine/core/ModalBaseOverlay";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-title-id.mjs
function useModalTitle() {
  const ctx = useModalBaseContext();
  (0, import_react80.useEffect)(() => {
    ctx.setTitleMounted(true);
    return () => ctx.setTitleMounted(false);
  }, []);
  return ctx.getTitleId();
}
var import_react80;
var init_use_modal_title_id = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/use-modal-title-id.mjs"() {
    "use client";
    import_react80 = __toESM(require_react(), 1);
    init_ModalBase_context();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseTitle.mjs
var import_jsx_runtime58, import_react81, ModalBaseTitle;
var init_ModalBaseTitle = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseTitle.mjs"() {
    "use client";
    import_jsx_runtime58 = __toESM(require_jsx_runtime(), 1);
    import_react81 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_ModalBase_context();
    init_use_modal_title_id();
    init_ModalBase_module_css();
    ModalBaseTitle = (0, import_react81.forwardRef)(
      ({ className, ...others }, ref) => {
        const id5 = useModalTitle();
        const ctx = useModalBaseContext();
        return /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(
          Box,
          {
            component: "h2",
            ref,
            className: clsx_default({ [classes8.title]: !ctx.unstyled }, className),
            ...others,
            id: id5
          }
        );
      }
    );
    ModalBaseTitle.displayName = "@mantine/core/ModalBaseTitle";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/NativeScrollArea.mjs
function NativeScrollArea({ children }) {
  return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_jsx_runtime59.Fragment, { children });
}
var import_jsx_runtime59;
var init_NativeScrollArea = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/ModalBase/NativeScrollArea.mjs"() {
    "use client";
    import_jsx_runtime59 = __toESM(require_jsx_runtime(), 1);
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.context.mjs
var import_react82, import_jsx_runtime60, InputContext, useInputContext;
var init_Input_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.context.mjs"() {
    "use client";
    import_react82 = __toESM(require_react(), 1);
    import_jsx_runtime60 = __toESM(require_jsx_runtime(), 1);
    init_create_optional_context();
    init_clsx();
    [InputContext, useInputContext] = createOptionalContext({
      size: "sm"
    });
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputClearButton/InputClearButton.mjs
var import_jsx_runtime61, import_react83, defaultProps10, InputClearButton;
var init_InputClearButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputClearButton/InputClearButton.mjs"() {
    "use client";
    import_jsx_runtime61 = __toESM(require_jsx_runtime(), 1);
    import_react83 = __toESM(require_react(), 1);
    init_clsx();
    init_use_resolved_styles_api();
    init_use_props();
    init_factory();
    init_CloseButton();
    init_Input_context();
    defaultProps10 = {};
    InputClearButton = factory((_props, ref) => {
      const props = useProps("InputClearButton", defaultProps10, _props);
      const { size, variant, vars, classNames, styles, ...others } = props;
      const ctx = useInputContext();
      const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi({
        classNames,
        styles,
        props
      });
      return /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
        CloseButton,
        {
          variant: variant || "transparent",
          ref,
          size: size || ctx?.size || "sm",
          classNames: resolvedClassNames,
          styles: resolvedStyles,
          __staticSelector: "InputClearButton",
          ...others
        }
      );
    });
    InputClearButton.displayName = "@mantine/core/InputClearButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs
var import_react84, import_jsx_runtime62, InputWrapperProvider, useInputWrapperContext;
var init_InputWrapper_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs"() {
    "use client";
    import_react84 = __toESM(require_react(), 1);
    import_jsx_runtime62 = __toESM(require_jsx_runtime(), 1);
    init_create_optional_context();
    init_clsx();
    [InputWrapperProvider, useInputWrapperContext] = createOptionalContext({
      offsetBottom: false,
      offsetTop: false,
      describedBy: void 0,
      getStyles: null,
      inputId: void 0,
      labelId: void 0
    });
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.module.css.mjs
var classes9;
var init_Input_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.module.css.mjs"() {
    "use client";
    classes9 = { "wrapper": "m_6c018570", "input": "m_8fb7ebe7", "section": "m_82577fc2", "placeholder": "m_88bacfd0", "root": "m_46b77525", "label": "m_8fdc1311", "required": "m_78a94662", "error": "m_8f816625", "description": "m_fe47ce59" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputDescription/InputDescription.mjs
var import_jsx_runtime63, import_react85, defaultProps11, varsResolver6, InputDescription;
var init_InputDescription = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputDescription/InputDescription.mjs"() {
    "use client";
    import_jsx_runtime63 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react85 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_InputWrapper_context();
    init_Input_module_css();
    defaultProps11 = {};
    varsResolver6 = createVarsResolver((_3, { size }) => ({
      description: {
        "--input-description-size": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`
      }
    }));
    InputDescription = factory((_props, ref) => {
      const props = useProps("InputDescription", defaultProps11, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        size,
        __staticSelector,
        __inheritStyles = true,
        variant,
        ...others
      } = useProps("InputDescription", defaultProps11, props);
      const ctx = useInputWrapperContext();
      const _getStyles = useStyles({
        name: ["InputWrapper", __staticSelector],
        props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        rootSelector: "description",
        vars,
        varsResolver: varsResolver6
      });
      const getStyles = __inheritStyles && ctx?.getStyles || _getStyles;
      return /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
        Box,
        {
          component: "p",
          ref,
          variant,
          size,
          ...getStyles("description", ctx?.getStyles ? { className, style } : void 0),
          ...others
        }
      );
    });
    InputDescription.classes = classes9;
    InputDescription.displayName = "@mantine/core/InputDescription";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputError/InputError.mjs
var import_jsx_runtime64, import_react86, defaultProps12, varsResolver7, InputError;
var init_InputError = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputError/InputError.mjs"() {
    "use client";
    import_jsx_runtime64 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react86 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_InputWrapper_context();
    init_Input_module_css();
    defaultProps12 = {};
    varsResolver7 = createVarsResolver((_3, { size }) => ({
      error: {
        "--input-error-size": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`
      }
    }));
    InputError = factory((_props, ref) => {
      const props = useProps("InputError", defaultProps12, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        size,
        __staticSelector,
        __inheritStyles = true,
        variant,
        ...others
      } = props;
      const _getStyles = useStyles({
        name: ["InputWrapper", __staticSelector],
        props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        rootSelector: "error",
        vars,
        varsResolver: varsResolver7
      });
      const ctx = useInputWrapperContext();
      const getStyles = __inheritStyles && ctx?.getStyles || _getStyles;
      return /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(
        Box,
        {
          component: "p",
          ref,
          variant,
          size,
          ...getStyles("error", ctx?.getStyles ? { className, style } : void 0),
          ...others
        }
      );
    });
    InputError.classes = classes9;
    InputError.displayName = "@mantine/core/InputError";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputLabel/InputLabel.mjs
var import_jsx_runtime65, import_react87, defaultProps13, varsResolver8, InputLabel;
var init_InputLabel = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputLabel/InputLabel.mjs"() {
    "use client";
    import_jsx_runtime65 = __toESM(require_jsx_runtime(), 1);
    import_react87 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_InputWrapper_context();
    init_Input_module_css();
    defaultProps13 = {
      labelElement: "label"
    };
    varsResolver8 = createVarsResolver((_3, { size }) => ({
      label: {
        "--input-label-size": getFontSize(size),
        "--input-asterisk-color": void 0
      }
    }));
    InputLabel = factory((_props, ref) => {
      const props = useProps("InputLabel", defaultProps13, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        labelElement,
        size,
        required,
        htmlFor,
        onMouseDown,
        children,
        __staticSelector,
        variant,
        mod,
        ...others
      } = useProps("InputLabel", defaultProps13, props);
      const _getStyles = useStyles({
        name: ["InputWrapper", __staticSelector],
        props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        rootSelector: "label",
        vars,
        varsResolver: varsResolver8
      });
      const ctx = useInputWrapperContext();
      const getStyles = ctx?.getStyles || _getStyles;
      return /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(
        Box,
        {
          ...getStyles("label", ctx?.getStyles ? { className, style } : void 0),
          component: labelElement,
          variant,
          size,
          ref,
          htmlFor: labelElement === "label" ? htmlFor : void 0,
          mod: [{ required }, mod],
          onMouseDown: (event) => {
            onMouseDown?.(event);
            if (!event.defaultPrevented && event.detail > 1) {
              event.preventDefault();
            }
          },
          ...others,
          children: [
            children,
            required && /* @__PURE__ */ (0, import_jsx_runtime65.jsx)("span", { ...getStyles("required"), "aria-hidden": true, children: " *" })
          ]
        }
      );
    });
    InputLabel.classes = classes9;
    InputLabel.displayName = "@mantine/core/InputLabel";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputPlaceholder/InputPlaceholder.mjs
var import_jsx_runtime66, import_react88, defaultProps14, InputPlaceholder;
var init_InputPlaceholder = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputPlaceholder/InputPlaceholder.mjs"() {
    "use client";
    import_jsx_runtime66 = __toESM(require_jsx_runtime(), 1);
    import_react88 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Input_module_css();
    defaultProps14 = {};
    InputPlaceholder = factory((_props, ref) => {
      const props = useProps("InputPlaceholder", defaultProps14, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        __staticSelector,
        variant,
        error,
        mod,
        ...others
      } = useProps("InputPlaceholder", defaultProps14, props);
      const getStyles = useStyles({
        name: ["InputPlaceholder", __staticSelector],
        props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        rootSelector: "placeholder"
      });
      return /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(
        Box,
        {
          ...getStyles("placeholder"),
          mod: [{ error: !!error }, mod],
          component: "span",
          variant,
          ref,
          ...others
        }
      );
    });
    InputPlaceholder.classes = classes9;
    InputPlaceholder.displayName = "@mantine/core/InputPlaceholder";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper/get-input-offsets/get-input-offsets.mjs
function getInputOffsets(inputWrapperOrder, { hasDescription, hasError }) {
  const inputIndex = inputWrapperOrder.findIndex((part) => part === "input");
  const aboveInput = inputWrapperOrder.slice(0, inputIndex);
  const belowInput = inputWrapperOrder.slice(inputIndex + 1);
  const offsetTop = hasDescription && aboveInput.includes("description") || hasError && aboveInput.includes("error");
  const offsetBottom = hasDescription && belowInput.includes("description") || hasError && belowInput.includes("error");
  return { offsetBottom, offsetTop };
}
var init_get_input_offsets = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper/get-input-offsets/get-input-offsets.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper/InputWrapper.mjs
var import_jsx_runtime67, import_react89, defaultProps15, varsResolver9, InputWrapper;
var init_InputWrapper = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/InputWrapper/InputWrapper.mjs"() {
    "use client";
    import_jsx_runtime67 = __toESM(require_jsx_runtime(), 1);
    import_react89 = __toESM(require_react(), 1);
    init_esm2();
    init_rem();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_InputDescription();
    init_InputError();
    init_InputLabel();
    init_InputWrapper_context();
    init_get_input_offsets();
    init_Input_module_css();
    defaultProps15 = {
      labelElement: "label",
      inputContainer: (children) => children,
      inputWrapperOrder: ["label", "description", "input", "error"]
    };
    varsResolver9 = createVarsResolver((_3, { size }) => ({
      label: {
        "--input-label-size": getFontSize(size),
        "--input-asterisk-color": void 0
      },
      error: {
        "--input-error-size": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`
      },
      description: {
        "--input-description-size": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`
      }
    }));
    InputWrapper = factory((_props, ref) => {
      const props = useProps("InputWrapper", defaultProps15, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        size,
        variant,
        __staticSelector,
        inputContainer,
        inputWrapperOrder,
        label: label3,
        error,
        description: description4,
        labelProps,
        descriptionProps,
        errorProps,
        labelElement,
        children,
        withAsterisk,
        id: id5,
        required,
        __stylesApiProps,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: ["InputWrapper", __staticSelector],
        props: __stylesApiProps || props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver9
      });
      const sharedProps = {
        size,
        variant,
        __staticSelector
      };
      const idBase3 = useId(id5);
      const isRequired = typeof withAsterisk === "boolean" ? withAsterisk : required;
      const errorId = errorProps?.id || `${idBase3}-error`;
      const descriptionId = descriptionProps?.id || `${idBase3}-description`;
      const inputId = idBase3;
      const hasError = !!error && typeof error !== "boolean";
      const hasDescription = !!description4;
      const _describedBy = `${hasError ? errorId : ""} ${hasDescription ? descriptionId : ""}`;
      const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : void 0;
      const labelId = labelProps?.id || `${idBase3}-label`;
      const _label = label3 && /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(
        InputLabel,
        {
          labelElement,
          id: labelId,
          htmlFor: inputId,
          required: isRequired,
          ...sharedProps,
          ...labelProps,
          children: label3
        },
        "label"
      );
      const _description = hasDescription && /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(
        InputDescription,
        {
          ...descriptionProps,
          ...sharedProps,
          size: descriptionProps?.size || sharedProps.size,
          id: descriptionProps?.id || descriptionId,
          children: description4
        },
        "description"
      );
      const _input = /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(import_react89.Fragment, { children: inputContainer(children) }, "input");
      const _error = hasError && /* @__PURE__ */ (0, import_react89.createElement)(
        InputError,
        {
          ...errorProps,
          ...sharedProps,
          size: errorProps?.size || sharedProps.size,
          key: "error",
          id: errorProps?.id || errorId
        },
        error
      );
      const content4 = inputWrapperOrder.map((part) => {
        switch (part) {
          case "label":
            return _label;
          case "input":
            return _input;
          case "description":
            return _description;
          case "error":
            return _error;
          default:
            return null;
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(
        InputWrapperProvider,
        {
          value: {
            getStyles,
            describedBy,
            inputId,
            labelId,
            ...getInputOffsets(inputWrapperOrder, { hasDescription, hasError })
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(
            Box,
            {
              ref,
              variant,
              size,
              mod: [{ error: !!error }, mod],
              ...getStyles("root"),
              ...others,
              children: content4
            }
          )
        }
      );
    });
    InputWrapper.classes = classes9;
    InputWrapper.displayName = "@mantine/core/InputWrapper";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.mjs
var import_jsx_runtime68, import_react90, defaultProps16, varsResolver10, Input;
var init_Input = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/Input.mjs"() {
    "use client";
    import_jsx_runtime68 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react90 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_extract_style_props();
    init_Box();
    init_polymorphic_factory();
    init_Input_context();
    init_InputClearButton();
    init_InputDescription();
    init_InputError();
    init_InputLabel();
    init_InputPlaceholder();
    init_InputWrapper_context();
    init_InputWrapper();
    init_Input_module_css();
    defaultProps16 = {
      variant: "default",
      leftSectionPointerEvents: "none",
      rightSectionPointerEvents: "none",
      withAria: true,
      withErrorStyles: true
    };
    varsResolver10 = createVarsResolver((_3, props, ctx) => ({
      wrapper: {
        "--input-margin-top": ctx.offsetTop ? "calc(var(--mantine-spacing-xs) / 2)" : void 0,
        "--input-margin-bottom": ctx.offsetBottom ? "calc(var(--mantine-spacing-xs) / 2)" : void 0,
        "--input-height": getSize(props.size, "input-height"),
        "--input-fz": getFontSize(props.size),
        "--input-radius": props.radius === void 0 ? void 0 : getRadius(props.radius),
        "--input-left-section-width": props.leftSectionWidth !== void 0 ? rem(props.leftSectionWidth) : void 0,
        "--input-right-section-width": props.rightSectionWidth !== void 0 ? rem(props.rightSectionWidth) : void 0,
        "--input-padding-y": props.multiline ? getSize(props.size, "input-padding-y") : void 0,
        "--input-left-section-pointer-events": props.leftSectionPointerEvents,
        "--input-right-section-pointer-events": props.rightSectionPointerEvents
      }
    }));
    Input = polymorphicFactory((_props, ref) => {
      const props = useProps("Input", defaultProps16, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        required,
        __staticSelector,
        __stylesApiProps,
        size,
        wrapperProps,
        error,
        disabled,
        leftSection,
        leftSectionProps,
        leftSectionWidth,
        rightSection,
        rightSectionProps,
        rightSectionWidth,
        rightSectionPointerEvents,
        leftSectionPointerEvents,
        variant,
        vars,
        pointer,
        multiline,
        radius,
        id: id5,
        withAria,
        withErrorStyles,
        mod,
        inputSize,
        __clearSection,
        __clearable,
        __defaultRightSection,
        ...others
      } = props;
      const { styleProps, rest } = extractStyleProps(others);
      const ctx = useInputWrapperContext();
      const stylesCtx = { offsetBottom: ctx?.offsetBottom, offsetTop: ctx?.offsetTop };
      const getStyles = useStyles({
        name: ["Input", __staticSelector],
        props: __stylesApiProps || props,
        classes: classes9,
        className,
        style,
        classNames,
        styles,
        unstyled,
        stylesCtx,
        rootSelector: "wrapper",
        vars,
        varsResolver: varsResolver10
      });
      const ariaAttributes = withAria ? {
        required,
        disabled,
        "aria-invalid": !!error,
        "aria-describedby": ctx?.describedBy,
        id: ctx?.inputId || id5
      } : {};
      const _rightSection = rightSection || __clearable && __clearSection || __defaultRightSection;
      return /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(InputContext, { value: { size: size || "sm" }, children: /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(
        Box,
        {
          ...getStyles("wrapper"),
          ...styleProps,
          ...wrapperProps,
          mod: [
            {
              error: !!error && withErrorStyles,
              pointer,
              disabled,
              multiline,
              "data-with-right-section": !!_rightSection,
              "data-with-left-section": !!leftSection
            },
            mod
          ],
          variant,
          size,
          children: [
            leftSection && /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
              "div",
              {
                ...leftSectionProps,
                "data-position": "left",
                ...getStyles("section", {
                  className: leftSectionProps?.className,
                  style: leftSectionProps?.style
                }),
                children: leftSection
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
              Box,
              {
                component: "input",
                ...rest,
                ...ariaAttributes,
                ref,
                required,
                mod: { disabled, error: !!error && withErrorStyles },
                variant,
                __size: inputSize,
                ...getStyles("input")
              }
            ),
            _rightSection && /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
              "div",
              {
                ...rightSectionProps,
                "data-position": "right",
                ...getStyles("section", {
                  className: rightSectionProps?.className,
                  style: rightSectionProps?.style
                }),
                children: _rightSection
              }
            )
          ]
        }
      ) });
    });
    Input.classes = classes9;
    Input.Wrapper = InputWrapper;
    Input.Label = InputLabel;
    Input.Error = InputError;
    Input.Description = InputDescription;
    Input.Placeholder = InputPlaceholder;
    Input.ClearButton = InputClearButton;
    Input.displayName = "@mantine/core/Input";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/use-input-props.mjs
function useInputProps(component, defaultProps62, _props) {
  const props = useProps(component, defaultProps62, _props);
  const {
    label: label3,
    description: description4,
    error,
    required,
    classNames,
    styles,
    className,
    unstyled,
    __staticSelector,
    __stylesApiProps,
    errorProps,
    labelProps,
    descriptionProps,
    wrapperProps: _wrapperProps,
    id: id5,
    size,
    style,
    inputContainer,
    inputWrapperOrder,
    withAsterisk,
    variant,
    vars,
    mod,
    ...others
  } = props;
  const { styleProps, rest } = extractStyleProps(others);
  const wrapperProps = {
    label: label3,
    description: description4,
    error,
    required,
    classNames,
    className,
    __staticSelector,
    __stylesApiProps: __stylesApiProps || props,
    errorProps,
    labelProps,
    descriptionProps,
    unstyled,
    styles,
    size,
    style,
    inputContainer,
    inputWrapperOrder,
    withAsterisk,
    variant,
    id: id5,
    mod,
    ..._wrapperProps
  };
  return {
    ...rest,
    classNames,
    styles,
    unstyled,
    wrapperProps: { ...wrapperProps, ...styleProps },
    inputProps: {
      required,
      classNames,
      styles,
      unstyled,
      size,
      __staticSelector,
      __stylesApiProps: __stylesApiProps || props,
      error,
      variant,
      id: id5
    }
  };
}
var import_react91, import_jsx_runtime69;
var init_use_input_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Input/use-input-props.mjs"() {
    "use client";
    import_react91 = __toESM(require_react(), 1);
    import_jsx_runtime69 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    init_use_props();
    init_extract_style_props();
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs
var import_jsx_runtime70, import_react92, defaultProps17, InputBase;
var init_InputBase = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs"() {
    "use client";
    import_jsx_runtime70 = __toESM(require_jsx_runtime(), 1);
    import_react92 = __toESM(require_react(), 1);
    init_clsx();
    init_polymorphic_factory();
    init_Input();
    init_use_input_props();
    defaultProps17 = {
      __staticSelector: "InputBase",
      withAria: true
    };
    InputBase = polymorphicFactory((props, ref) => {
      const { inputProps, wrapperProps, ...others } = useInputProps("InputBase", defaultProps17, props);
      return /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Input.Wrapper, { ...wrapperProps, children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Input, { ...inputProps, ...others, ref }) });
    });
    InputBase.classes = { ...Input.classes, ...Input.Wrapper.classes };
    InputBase.displayName = "@mantine/core/InputBase";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/flex-props.mjs
var FLEX_STYLE_PROPS_DATA;
var init_flex_props = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/flex-props.mjs"() {
    "use client";
    FLEX_STYLE_PROPS_DATA = {
      gap: { type: "spacing", property: "gap" },
      rowGap: { type: "spacing", property: "rowGap" },
      columnGap: { type: "spacing", property: "columnGap" },
      align: { type: "identity", property: "alignItems" },
      justify: { type: "identity", property: "justifyContent" },
      wrap: { type: "identity", property: "flexWrap" },
      direction: { type: "identity", property: "flexDirection" }
    };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/Flex.module.css.mjs
var classes10;
var init_Flex_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/Flex.module.css.mjs"() {
    "use client";
    classes10 = { "root": "m_8bffd616" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/Flex.mjs
var import_jsx_runtime71, import_react93, defaultProps18, Flex;
var init_Flex = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Flex/Flex.mjs"() {
    "use client";
    import_jsx_runtime71 = __toESM(require_jsx_runtime(), 1);
    init_filter_props();
    import_react93 = __toESM(require_react(), 1);
    init_clsx();
    init_MantineThemeProvider();
    init_use_props();
    init_use_styles();
    init_InlineStyles();
    init_parse_style_props();
    init_use_random_classname();
    init_Box();
    init_polymorphic_factory();
    init_flex_props();
    init_Flex_module_css();
    defaultProps18 = {};
    Flex = polymorphicFactory((_props, ref) => {
      const props = useProps("Flex", defaultProps18, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        gap,
        rowGap,
        columnGap,
        align,
        justify,
        wrap,
        direction,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Flex",
        classes: classes10,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars
      });
      const theme2 = useMantineTheme();
      const responsiveClassName = useRandomClassName();
      const parsedStyleProps = parseStyleProps({
        styleProps: { gap, rowGap, columnGap, align, justify, wrap, direction },
        theme: theme2,
        data: FLEX_STYLE_PROPS_DATA
      });
      return /* @__PURE__ */ (0, import_jsx_runtime71.jsxs)(import_jsx_runtime71.Fragment, { children: [
        parsedStyleProps.hasResponsiveStyles && /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(
          InlineStyles,
          {
            selector: `.${responsiveClassName}`,
            styles: parsedStyleProps.styles,
            media: parsedStyleProps.media
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(
          Box,
          {
            ref,
            ...getStyles("root", {
              className: responsiveClassName,
              style: filterProps(parsedStyleProps.inlineStyles)
            }),
            ...others
          }
        )
      ] });
    });
    Flex.classes = classes10;
    Flex.displayName = "@mantine/core/Flex";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.context.mjs
var import_react94, import_jsx_runtime72, AccordionProvider, useAccordionContext;
var init_Accordion_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.context.mjs"() {
    "use client";
    import_react94 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime72 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [AccordionProvider, useAccordionContext] = createSafeContext(
      "Accordion component was not found in the tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionChevron.mjs
function AccordionChevron({ style, size = 16, ...others }) {
  return /* @__PURE__ */ (0, import_jsx_runtime73.jsx)(
    "svg",
    {
      viewBox: "0 0 15 15",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      style: { ...style, width: rem(size), height: rem(size), display: "block" },
      ...others,
      children: /* @__PURE__ */ (0, import_jsx_runtime73.jsx)(
        "path",
        {
          d: "M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z",
          fill: "currentColor",
          fillRule: "evenodd",
          clipRule: "evenodd"
        }
      )
    }
  );
}
var import_jsx_runtime73, import_react95;
var init_AccordionChevron = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionChevron.mjs"() {
    "use client";
    import_jsx_runtime73 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react95 = __toESM(require_react(), 1);
    init_clsx();
    AccordionChevron.displayName = "@mantine/core/AccordionChevron";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionItem.context.mjs
var import_react96, import_jsx_runtime74, AccordionItemProvider, useAccordionItemContext;
var init_AccordionItem_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionItem.context.mjs"() {
    "use client";
    import_react96 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime74 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [AccordionItemProvider, useAccordionItemContext] = createSafeContext("Accordion.Item component was not found in the tree");
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.module.css.mjs
var classes11;
var init_Accordion_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.module.css.mjs"() {
    "use client";
    classes11 = { "root": "m_9bdbb667", "panel": "m_df78851f", "content": "m_4ba554d4", "itemTitle": "m_8fa820a0", "control": "m_4ba585b8", "control--default": "m_6939a5e9", "control--contained": "m_4271d21b", "label": "m_df3ffa0f", "chevron": "m_3f35ae96", "icon": "m_9bd771fe", "item": "m_9bd7b098", "item--default": "m_fe19b709", "item--contained": "m_1f921b3b", "item--filled": "m_2cdf939a", "item--separated": "m_9f59b069" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionControl/AccordionControl.mjs
var import_jsx_runtime75, import_react97, defaultProps19, AccordionControl;
var init_AccordionControl = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionControl/AccordionControl.mjs"() {
    "use client";
    import_jsx_runtime75 = __toESM(require_jsx_runtime(), 1);
    import_react97 = __toESM(require_react(), 1);
    init_create_scoped_keydown_handler();
    init_clsx();
    init_use_props();
    init_Box();
    init_factory();
    init_UnstyledButton();
    init_Accordion_context();
    init_AccordionItem_context();
    init_Accordion_module_css();
    defaultProps19 = {};
    AccordionControl = factory((props, ref) => {
      const {
        classNames,
        className,
        style,
        styles,
        vars,
        chevron: chevron2,
        icon,
        onClick,
        onKeyDown,
        children,
        disabled,
        mod,
        ...others
      } = useProps("AccordionControl", defaultProps19, props);
      const { value } = useAccordionItemContext();
      const ctx = useAccordionContext();
      const isActive = ctx.isItemActive(value);
      const shouldWrapWithHeading = typeof ctx.order === "number";
      const Heading = `h${ctx.order}`;
      const content4 = /* @__PURE__ */ (0, import_jsx_runtime75.jsxs)(
        UnstyledButton,
        {
          ...others,
          ...ctx.getStyles("control", { className, classNames, style, styles, variant: ctx.variant }),
          unstyled: ctx.unstyled,
          mod: [
            "accordion-control",
            { active: isActive, "chevron-position": ctx.chevronPosition, disabled },
            mod
          ],
          ref,
          onClick: (event) => {
            onClick?.(event);
            ctx.onChange(value);
          },
          type: "button",
          disabled,
          "aria-expanded": isActive,
          "aria-controls": ctx.getRegionId(value),
          id: ctx.getControlId(value),
          onKeyDown: createScopedKeydownHandler({
            siblingSelector: "[data-accordion-control]",
            parentSelector: "[data-accordion]",
            activateOnFocus: false,
            loop: ctx.loop,
            orientation: "vertical",
            onKeyDown
          }),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(
              Box,
              {
                component: "span",
                mod: { rotate: !ctx.disableChevronRotation && isActive, position: ctx.chevronPosition },
                ...ctx.getStyles("chevron", { classNames, styles }),
                children: chevron2 || ctx.chevron
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime75.jsx)("span", { ...ctx.getStyles("label", { classNames, styles }), children }),
            icon && /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(
              Box,
              {
                component: "span",
                mod: { "chevron-position": ctx.chevronPosition },
                ...ctx.getStyles("icon", { classNames, styles }),
                children: icon
              }
            )
          ]
        }
      );
      return shouldWrapWithHeading ? /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(Heading, { ...ctx.getStyles("itemTitle", { classNames, styles }), children: content4 }) : content4;
    });
    AccordionControl.displayName = "@mantine/core/AccordionControl";
    AccordionControl.classes = classes11;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionItem/AccordionItem.mjs
var import_jsx_runtime76, import_react98, defaultProps20, AccordionItem;
var init_AccordionItem = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionItem/AccordionItem.mjs"() {
    "use client";
    import_jsx_runtime76 = __toESM(require_jsx_runtime(), 1);
    import_react98 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_Box();
    init_factory();
    init_Accordion_context();
    init_AccordionItem_context();
    init_Accordion_module_css();
    defaultProps20 = {};
    AccordionItem = factory((props, ref) => {
      const { classNames, className, style, styles, vars, value, mod, ...others } = useProps(
        "AccordionItem",
        defaultProps20,
        props
      );
      const ctx = useAccordionContext();
      return /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(AccordionItemProvider, { value: { value }, children: /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(
        Box,
        {
          ref,
          mod: [{ active: ctx.isItemActive(value) }, mod],
          ...ctx.getStyles("item", { className, classNames, styles, style, variant: ctx.variant }),
          ...others
        }
      ) });
    });
    AccordionItem.displayName = "@mantine/core/AccordionItem";
    AccordionItem.classes = classes11;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionPanel/AccordionPanel.mjs
var import_jsx_runtime77, import_react99, defaultProps21, AccordionPanel;
var init_AccordionPanel = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/AccordionPanel/AccordionPanel.mjs"() {
    "use client";
    import_jsx_runtime77 = __toESM(require_jsx_runtime(), 1);
    import_react99 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_Collapse();
    init_Accordion_context();
    init_AccordionItem_context();
    init_Accordion_module_css();
    defaultProps21 = {};
    AccordionPanel = factory((props, ref) => {
      const { classNames, className, style, styles, vars, children, ...others } = useProps(
        "AccordionPanel",
        defaultProps21,
        props
      );
      const { value } = useAccordionItemContext();
      const ctx = useAccordionContext();
      return /* @__PURE__ */ (0, import_jsx_runtime77.jsx)(
        Collapse,
        {
          ref,
          ...ctx.getStyles("panel", { className, classNames, style, styles }),
          ...others,
          in: ctx.isItemActive(value),
          transitionDuration: ctx.transitionDuration ?? 200,
          role: "region",
          id: ctx.getRegionId(value),
          "aria-labelledby": ctx.getControlId(value),
          children: /* @__PURE__ */ (0, import_jsx_runtime77.jsx)("div", { ...ctx.getStyles("content", { classNames, styles }), children })
        }
      );
    });
    AccordionPanel.displayName = "@mantine/core/AccordionPanel";
    AccordionPanel.classes = classes11;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.mjs
function Accordion(_props) {
  const props = useProps("Accordion", defaultProps22, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    children,
    multiple,
    value,
    defaultValue: defaultValue2,
    onChange,
    id: id5,
    loop,
    transitionDuration,
    disableChevronRotation,
    chevronPosition,
    chevronSize,
    order,
    chevron: chevron2,
    variant,
    radius,
    ...others
  } = props;
  const uid = useId(id5);
  const [_value, handleChange] = useUncontrolled({
    value,
    defaultValue: defaultValue2,
    finalValue: multiple ? [] : null,
    onChange
  });
  const isItemActive = (itemValue) => Array.isArray(_value) ? _value.includes(itemValue) : itemValue === _value;
  const handleItemChange = (itemValue) => {
    const nextValue = Array.isArray(_value) ? _value.includes(itemValue) ? _value.filter((selectedValue) => selectedValue !== itemValue) : [..._value, itemValue] : itemValue === _value ? null : itemValue;
    handleChange(nextValue);
  };
  const getStyles = useStyles({
    name: "Accordion",
    classes: classes11,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver: varsResolver11
  });
  return /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
    AccordionProvider,
    {
      value: {
        isItemActive,
        onChange: handleItemChange,
        getControlId: getSafeId(
          `${uid}-control`,
          "Accordion.Item component was rendered with invalid value or without value"
        ),
        getRegionId: getSafeId(
          `${uid}-panel`,
          "Accordion.Item component was rendered with invalid value or without value"
        ),
        transitionDuration,
        disableChevronRotation,
        chevronPosition,
        order,
        chevron: chevron2,
        loop,
        getStyles,
        variant,
        unstyled
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(Box, { ...getStyles("root"), id: uid, ...others, variant, "data-accordion": true, children })
    }
  );
}
var import_jsx_runtime78, import_react100, defaultProps22, varsResolver11, extendAccordion;
var init_Accordion = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Accordion/Accordion.mjs"() {
    "use client";
    import_jsx_runtime78 = __toESM(require_jsx_runtime(), 1);
    init_esm2();
    init_rem();
    import_react100 = __toESM(require_react(), 1);
    init_get_safe_id();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Accordion_context();
    init_AccordionChevron();
    init_AccordionControl();
    init_AccordionItem();
    init_AccordionPanel();
    init_Accordion_module_css();
    defaultProps22 = {
      multiple: false,
      disableChevronRotation: false,
      chevronPosition: "right",
      variant: "default",
      chevron: /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(AccordionChevron, {})
    };
    varsResolver11 = createVarsResolver(
      (_3, { transitionDuration, chevronSize, radius }) => ({
        root: {
          "--accordion-transition-duration": transitionDuration === void 0 ? void 0 : `${transitionDuration}ms`,
          "--accordion-chevron-size": chevronSize === void 0 ? void 0 : rem(chevronSize),
          "--accordion-radius": radius === void 0 ? void 0 : getRadius(radius)
        }
      })
    );
    extendAccordion = (c13) => c13;
    Accordion.extend = extendAccordion;
    Accordion.withProps = getWithProps(Accordion);
    Accordion.classes = classes11;
    Accordion.displayName = "@mantine/core/Accordion";
    Accordion.Item = AccordionItem;
    Accordion.Panel = AccordionPanel;
    Accordion.Control = AccordionControl;
    Accordion.Chevron = AccordionChevron;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Text/Text.module.css.mjs
var classes12;
var init_Text_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Text/Text.module.css.mjs"() {
    "use client";
    classes12 = { "root": "m_b6d8b162" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Text/Text.mjs
function getTextTruncate(truncate) {
  if (truncate === "start") {
    return "start";
  }
  if (truncate === "end" || truncate) {
    return "end";
  }
  return void 0;
}
var import_jsx_runtime79, import_react101, defaultProps23, varsResolver12, Text;
var init_Text = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Text/Text.mjs"() {
    "use client";
    import_jsx_runtime79 = __toESM(require_jsx_runtime(), 1);
    import_react101 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_get_theme_color();
    init_get_gradient();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Text_module_css();
    defaultProps23 = {
      inherit: false
    };
    varsResolver12 = createVarsResolver(
      (theme2, { variant, lineClamp, gradient, size, color: color3 }) => ({
        root: {
          "--text-fz": getFontSize(size),
          "--text-lh": getLineHeight(size),
          "--text-gradient": variant === "gradient" ? getGradient(gradient, theme2) : void 0,
          "--text-line-clamp": typeof lineClamp === "number" ? lineClamp.toString() : void 0,
          "--text-color": color3 ? getThemeColor(color3, theme2) : void 0
        }
      })
    );
    Text = polymorphicFactory((_props, ref) => {
      const props = useProps("Text", defaultProps23, _props);
      const {
        lineClamp,
        truncate,
        inline,
        inherit,
        gradient,
        span,
        __staticSelector,
        vars,
        className,
        style,
        classNames,
        styles,
        unstyled,
        variant,
        mod,
        size,
        ...others
      } = props;
      const getStyles = useStyles({
        name: ["Text", __staticSelector],
        props,
        classes: classes12,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver12
      });
      return /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(
        Box,
        {
          ...getStyles("root", { focusable: true }),
          ref,
          component: span ? "span" : "p",
          variant,
          mod: [
            {
              "data-truncate": getTextTruncate(truncate),
              "data-line-clamp": typeof lineClamp === "number",
              "data-inline": inline,
              "data-inherit": inherit
            },
            mod
          ],
          size,
          ...others
        }
      );
    });
    Text.classes = classes12;
    Text.displayName = "@mantine/core/Text";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.module.css.mjs
var classes13;
var init_Blockquote_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.module.css.mjs"() {
    "use client";
    classes13 = { "root": "m_ddec01c0", "icon": "m_dde7bd57", "cite": "m_dde51a35" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.mjs
var import_jsx_runtime80, import_react102, defaultProps24, varsResolver13, Blockquote;
var init_Blockquote = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.mjs"() {
    "use client";
    import_jsx_runtime80 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react102 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_parse_theme_color();
    init_get_theme_color();
    init_rgba();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Blockquote_module_css();
    defaultProps24 = {
      iconSize: 48
    };
    varsResolver13 = createVarsResolver((theme2, { color: color3, iconSize, radius }) => {
      const darkParsed = parseThemeColor({
        color: color3 || theme2.primaryColor,
        theme: theme2,
        colorScheme: "dark"
      });
      const lightParsed = parseThemeColor({
        color: color3 || theme2.primaryColor,
        theme: theme2,
        colorScheme: "light"
      });
      return {
        root: {
          "--bq-bg-light": rgba(lightParsed.value, 0.07),
          "--bq-bg-dark": rgba(darkParsed.value, 0.06),
          "--bq-bd": getThemeColor(color3, theme2),
          "--bq-icon-size": rem(iconSize),
          "--bq-radius": getRadius(radius)
        }
      };
    });
    Blockquote = factory((_props, ref) => {
      const props = useProps("Blockquote", defaultProps24, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        children,
        icon,
        iconSize,
        cite,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Blockquote",
        classes: classes13,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver13
      });
      return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)(Box, { component: "blockquote", ref, ...getStyles("root"), ...others, children: [
        icon && /* @__PURE__ */ (0, import_jsx_runtime80.jsx)("span", { ...getStyles("icon"), children: icon }),
        children,
        cite && /* @__PURE__ */ (0, import_jsx_runtime80.jsx)("cite", { ...getStyles("cite"), children: cite })
      ] });
    });
    Blockquote.classes = classes13;
    Blockquote.displayName = "@mantine/core/Blockquote";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/Button.module.css.mjs
var classes14;
var init_Button_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/Button.module.css.mjs"() {
    "use client";
    classes14 = { "root": "m_77c9d27d", "inner": "m_80f1301b", "label": "m_811560b9", "section": "m_a74036a", "loader": "m_a25b86ee", "group": "m_80d6d844", "groupSection": "m_70be2a01" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/ButtonGroup/ButtonGroup.mjs
var import_jsx_runtime81, import_react103, defaultProps25, varsResolver14, ButtonGroup;
var init_ButtonGroup = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/ButtonGroup/ButtonGroup.mjs"() {
    "use client";
    import_jsx_runtime81 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react103 = __toESM(require_react(), 1);
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Button_module_css();
    defaultProps25 = {
      orientation: "horizontal"
    };
    varsResolver14 = createVarsResolver((_3, { borderWidth }) => ({
      group: { "--button-border-width": rem(borderWidth) }
    }));
    ButtonGroup = factory((_props, ref) => {
      const props = useProps("ButtonGroup", defaultProps25, _props);
      const {
        className,
        style,
        classNames,
        styles,
        unstyled,
        orientation,
        vars,
        borderWidth,
        variant,
        mod,
        ...others
      } = useProps("ButtonGroup", defaultProps25, _props);
      const getStyles = useStyles({
        name: "ButtonGroup",
        props,
        classes: classes14,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver14,
        rootSelector: "group"
      });
      return /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(
        Box,
        {
          ...getStyles("group"),
          ref,
          variant,
          mod: [{ "data-orientation": orientation }, mod],
          role: "group",
          ...others
        }
      );
    });
    ButtonGroup.classes = classes14;
    ButtonGroup.displayName = "@mantine/core/ButtonGroup";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/ButtonGroupSection/ButtonGroupSection.mjs
var import_jsx_runtime82, import_react104, defaultProps26, varsResolver15, ButtonGroupSection;
var init_ButtonGroupSection = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/ButtonGroupSection/ButtonGroupSection.mjs"() {
    "use client";
    import_jsx_runtime82 = __toESM(require_jsx_runtime(), 1);
    import_react104 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Button_module_css();
    defaultProps26 = {};
    varsResolver15 = createVarsResolver(
      (theme2, { radius, color: color3, gradient, variant, autoContrast, size }) => {
        const colors = theme2.variantColorResolver({
          color: color3 || theme2.primaryColor,
          theme: theme2,
          gradient,
          variant: variant || "filled",
          autoContrast
        });
        return {
          groupSection: {
            "--section-height": getSize(size, "section-height"),
            "--section-padding-x": getSize(size, "section-padding-x"),
            "--section-fz": size?.includes("compact") ? getFontSize(size.replace("compact-", "")) : getFontSize(size),
            "--section-radius": radius === void 0 ? void 0 : getRadius(radius),
            "--section-bg": color3 || variant ? colors.background : void 0,
            "--section-color": colors.color,
            "--section-bd": color3 || variant ? colors.border : void 0
          }
        };
      }
    );
    ButtonGroupSection = factory((_props, ref) => {
      const props = useProps("ButtonGroupSection", defaultProps26, _props);
      const {
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        variant,
        gradient,
        radius,
        autoContrast,
        ...others
      } = useProps("ButtonGroupSection", defaultProps26, _props);
      const getStyles = useStyles({
        name: "ButtonGroupSection",
        props,
        classes: classes14,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver15,
        rootSelector: "groupSection"
      });
      return /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Box, { ...getStyles("groupSection"), ref, variant, ...others });
    });
    ButtonGroupSection.classes = classes14;
    ButtonGroupSection.displayName = "@mantine/core/ButtonGroupSection";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/Button.mjs
var import_jsx_runtime83, import_react105, loaderTransition, defaultProps27, varsResolver16, Button;
var init_Button = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Button/Button.mjs"() {
    "use client";
    import_jsx_runtime83 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react105 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Loader();
    init_Transition();
    init_UnstyledButton();
    init_ButtonGroup();
    init_ButtonGroupSection();
    init_Button_module_css();
    loaderTransition = {
      in: { opacity: 1, transform: `translate(-50%, calc(-50% + ${rem(1)}))` },
      out: { opacity: 0, transform: "translate(-50%, -200%)" },
      common: { transformOrigin: "center" },
      transitionProperty: "transform, opacity"
    };
    defaultProps27 = {};
    varsResolver16 = createVarsResolver(
      (theme2, { radius, color: color3, gradient, variant, size, justify, autoContrast }) => {
        const colors = theme2.variantColorResolver({
          color: color3 || theme2.primaryColor,
          theme: theme2,
          gradient,
          variant: variant || "filled",
          autoContrast
        });
        return {
          root: {
            "--button-justify": justify,
            "--button-height": getSize(size, "button-height"),
            "--button-padding-x": getSize(size, "button-padding-x"),
            "--button-fz": size?.includes("compact") ? getFontSize(size.replace("compact-", "")) : getFontSize(size),
            "--button-radius": radius === void 0 ? void 0 : getRadius(radius),
            "--button-bg": color3 || variant ? colors.background : void 0,
            "--button-hover": color3 || variant ? colors.hover : void 0,
            "--button-color": colors.color,
            "--button-bd": color3 || variant ? colors.border : void 0,
            "--button-hover-color": color3 || variant ? colors.hoverColor : void 0
          }
        };
      }
    );
    Button = polymorphicFactory((_props, ref) => {
      const props = useProps("Button", defaultProps27, _props);
      const {
        style,
        vars,
        className,
        color: color3,
        disabled,
        children,
        leftSection,
        rightSection,
        fullWidth,
        variant,
        radius,
        loading,
        loaderProps,
        gradient,
        classNames,
        styles,
        unstyled,
        "data-disabled": dataDisabled,
        autoContrast,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Button",
        props,
        classes: classes14,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver16
      });
      const hasLeftSection = !!leftSection;
      const hasRightSection = !!rightSection;
      return /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)(
        UnstyledButton,
        {
          ref,
          ...getStyles("root", { active: !disabled && !loading && !dataDisabled }),
          unstyled,
          variant,
          disabled: disabled || loading,
          mod: [
            {
              disabled: disabled || dataDisabled,
              loading,
              block: fullWidth,
              "with-left-section": hasLeftSection,
              "with-right-section": hasRightSection
            },
            mod
          ],
          ...others,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(Transition, { mounted: !!loading, transition: loaderTransition, duration: 150, children: (transitionStyles) => /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(Box, { component: "span", ...getStyles("loader", { style: transitionStyles }), "aria-hidden": true, children: /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(
              Loader,
              {
                color: "var(--button-color)",
                size: "calc(var(--button-height) / 1.8)",
                ...loaderProps
              }
            ) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("span", { ...getStyles("inner"), children: [
              leftSection && /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(Box, { component: "span", ...getStyles("section"), mod: { position: "left" }, children: leftSection }),
              /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(Box, { component: "span", mod: { loading }, ...getStyles("label"), children }),
              rightSection && /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(Box, { component: "span", ...getStyles("section"), mod: { position: "right" }, children: rightSection })
            ] })
          ]
        }
      );
    });
    Button.classes = classes14;
    Button.displayName = "@mantine/core/Button";
    Button.Group = ButtonGroup;
    Button.GroupSection = ButtonGroupSection;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Center/Center.module.css.mjs
var classes15;
var init_Center_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Center/Center.module.css.mjs"() {
    "use client";
    classes15 = { "root": "m_4451eb3a" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Center/Center.mjs
var import_jsx_runtime84, import_react106, defaultProps28, Center;
var init_Center = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Center/Center.mjs"() {
    "use client";
    import_jsx_runtime84 = __toESM(require_jsx_runtime(), 1);
    import_react106 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Center_module_css();
    defaultProps28 = {};
    Center = polymorphicFactory((_props, ref) => {
      const props = useProps("Center", defaultProps28, _props);
      const { classNames, className, style, styles, unstyled, vars, inline, mod, ...others } = props;
      const getStyles = useStyles({
        name: "Center",
        props,
        classes: classes15,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars
      });
      return /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(Box, { ref, mod: [{ inline }, mod], ...getStyles("root"), ...others });
    });
    Center.classes = classes15;
    Center.displayName = "@mantine/core/Center";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Container/Container.module.css.mjs
var classes16;
var init_Container_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Container/Container.module.css.mjs"() {
    "use client";
    classes16 = { "root": "m_7485cace" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Container/Container.mjs
var import_jsx_runtime85, import_react107, defaultProps29, varsResolver17, Container;
var init_Container = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Container/Container.mjs"() {
    "use client";
    import_jsx_runtime85 = __toESM(require_jsx_runtime(), 1);
    import_react107 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Container_module_css();
    defaultProps29 = {};
    varsResolver17 = createVarsResolver((_3, { size, fluid }) => ({
      root: {
        "--container-size": fluid ? void 0 : getSize(size, "container-size")
      }
    }));
    Container = factory((_props, ref) => {
      const props = useProps("Container", defaultProps29, _props);
      const { classNames, className, style, styles, unstyled, vars, fluid, mod, ...others } = props;
      const getStyles = useStyles({
        name: "Container",
        classes: classes16,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver17
      });
      return /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(Box, { ref, mod: [{ fluid }, mod], ...getStyles("root"), ...others });
    });
    Container.classes = classes16;
    Container.displayName = "@mantine/core/Container";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Divider/Divider.module.css.mjs
var classes17;
var init_Divider_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Divider/Divider.module.css.mjs"() {
    "use client";
    classes17 = { "root": "m_3eebeb36", "label": "m_9e365f20" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Divider/Divider.mjs
var import_jsx_runtime86, import_react108, defaultProps30, varsResolver18, Divider;
var init_Divider = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Divider/Divider.mjs"() {
    "use client";
    import_jsx_runtime86 = __toESM(require_jsx_runtime(), 1);
    import_react108 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_get_theme_color();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Divider_module_css();
    defaultProps30 = {
      orientation: "horizontal"
    };
    varsResolver18 = createVarsResolver((theme2, { color: color3, variant, size }) => ({
      root: {
        "--divider-color": color3 ? getThemeColor(color3, theme2) : void 0,
        "--divider-border-style": variant,
        "--divider-size": getSize(size, "divider-size")
      }
    }));
    Divider = factory((_props, ref) => {
      const props = useProps("Divider", defaultProps30, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        color: color3,
        orientation,
        label: label3,
        labelPosition,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Divider",
        classes: classes17,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver18
      });
      return /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(
        Box,
        {
          ref,
          mod: [{ orientation, "with-label": !!label3 }, mod],
          ...getStyles("root"),
          ...others,
          role: "separator",
          children: label3 && /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(Box, { component: "span", mod: { position: labelPosition }, ...getStyles("label"), children: label3 })
        }
      );
    });
    Divider.classes = classes17;
    Divider.displayName = "@mantine/core/Divider";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.context.mjs
var import_react109, import_jsx_runtime87, DrawerProvider, useDrawerContext;
var init_Drawer_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.context.mjs"() {
    "use client";
    import_react109 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime87 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [DrawerProvider, useDrawerContext] = createSafeContext(
      "Drawer component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.module.css.mjs
var classes18;
var init_Drawer_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.module.css.mjs"() {
    "use client";
    classes18 = { "root": "m_f11b401e", "header": "m_5a7c2c9", "content": "m_b8a05bbd", "inner": "m_31cd769a" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerBody.mjs
var import_jsx_runtime88, import_react110, defaultProps31, DrawerBody;
var init_DrawerBody = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerBody.mjs"() {
    "use client";
    import_jsx_runtime88 = __toESM(require_jsx_runtime(), 1);
    import_react110 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseBody();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps31 = {};
    DrawerBody = factory((_props, ref) => {
      const props = useProps("DrawerBody", defaultProps31, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useDrawerContext();
      return /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(
        ModalBaseBody,
        {
          ref,
          ...ctx.getStyles("body", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    DrawerBody.classes = classes18;
    DrawerBody.displayName = "@mantine/core/DrawerBody";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerCloseButton.mjs
var import_jsx_runtime89, import_react111, defaultProps32, DrawerCloseButton;
var init_DrawerCloseButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerCloseButton.mjs"() {
    "use client";
    import_jsx_runtime89 = __toESM(require_jsx_runtime(), 1);
    import_react111 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseCloseButton();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps32 = {};
    DrawerCloseButton = factory((_props, ref) => {
      const props = useProps("DrawerCloseButton", defaultProps32, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useDrawerContext();
      return /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
        ModalBaseCloseButton,
        {
          ref,
          ...ctx.getStyles("close", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    DrawerCloseButton.classes = classes18;
    DrawerCloseButton.displayName = "@mantine/core/DrawerCloseButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerContent.mjs
var import_jsx_runtime90, import_react112, defaultProps33, DrawerContent;
var init_DrawerContent = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerContent.mjs"() {
    "use client";
    import_jsx_runtime90 = __toESM(require_jsx_runtime(), 1);
    import_react112 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseContent();
    init_NativeScrollArea();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps33 = {};
    DrawerContent = factory((_props, ref) => {
      const props = useProps("DrawerContent", defaultProps33, _props);
      const { classNames, className, style, styles, vars, children, radius, __hidden, ...others } = props;
      const ctx = useDrawerContext();
      const Scroll = ctx.scrollAreaComponent || NativeScrollArea;
      return /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
        ModalBaseContent,
        {
          ...ctx.getStyles("content", { className, style, styles, classNames }),
          innerProps: ctx.getStyles("inner", { className, style, styles, classNames }),
          ref,
          ...others,
          radius: radius || ctx.radius || 0,
          "data-hidden": __hidden || void 0,
          children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Scroll, { style: { height: "calc(100vh - var(--drawer-offset) * 2)" }, children })
        }
      );
    });
    DrawerContent.classes = classes18;
    DrawerContent.displayName = "@mantine/core/DrawerContent";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerHeader.mjs
var import_jsx_runtime91, import_react113, defaultProps34, DrawerHeader;
var init_DrawerHeader = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerHeader.mjs"() {
    "use client";
    import_jsx_runtime91 = __toESM(require_jsx_runtime(), 1);
    import_react113 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseHeader();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps34 = {};
    DrawerHeader = factory((_props, ref) => {
      const props = useProps("DrawerHeader", defaultProps34, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useDrawerContext();
      return /* @__PURE__ */ (0, import_jsx_runtime91.jsx)(
        ModalBaseHeader,
        {
          ref,
          ...ctx.getStyles("header", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    DrawerHeader.classes = classes18;
    DrawerHeader.displayName = "@mantine/core/DrawerHeader";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerOverlay.mjs
var import_jsx_runtime92, import_react114, defaultProps35, DrawerOverlay;
var init_DrawerOverlay = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerOverlay.mjs"() {
    "use client";
    import_jsx_runtime92 = __toESM(require_jsx_runtime(), 1);
    import_react114 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseOverlay();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps35 = {};
    DrawerOverlay = factory((_props, ref) => {
      const props = useProps("DrawerOverlay", defaultProps35, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useDrawerContext();
      return /* @__PURE__ */ (0, import_jsx_runtime92.jsx)(
        ModalBaseOverlay,
        {
          ref,
          ...ctx.getStyles("overlay", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    DrawerOverlay.classes = classes18;
    DrawerOverlay.displayName = "@mantine/core/DrawerOverlay";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerRoot.mjs
function getDrawerAlign(position) {
  switch (position) {
    case "top":
      return "flex-start";
    case "bottom":
      return "flex-end";
    default:
      return void 0;
  }
}
function getDrawerFlex(position) {
  if (position === "top" || position === "bottom") {
    return "0 0 calc(100% - var(--drawer-offset, 0rem) * 2)";
  }
  return void 0;
}
var import_jsx_runtime93, import_react115, transitions2, rtlTransitions, defaultProps36, varsResolver19, DrawerRoot;
var init_DrawerRoot = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerRoot.mjs"() {
    "use client";
    import_jsx_runtime93 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react115 = __toESM(require_react(), 1);
    init_get_default_z_index();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_factory();
    init_DirectionProvider();
    init_ModalBase();
    init_Drawer_context();
    init_Drawer_module_css();
    transitions2 = {
      top: "slide-down",
      bottom: "slide-up",
      left: "slide-right",
      right: "slide-left"
    };
    rtlTransitions = {
      top: "slide-down",
      bottom: "slide-up",
      right: "slide-right",
      left: "slide-left"
    };
    defaultProps36 = {
      closeOnClickOutside: true,
      withinPortal: true,
      lockScroll: true,
      trapFocus: true,
      returnFocus: true,
      closeOnEscape: true,
      keepMounted: false,
      zIndex: getDefaultZIndex("modal"),
      position: "left"
    };
    varsResolver19 = createVarsResolver((_3, { position, size, offset }) => ({
      root: {
        "--drawer-size": getSize(size, "drawer-size"),
        "--drawer-flex": getDrawerFlex(position),
        "--drawer-height": position === "left" || position === "right" ? void 0 : "var(--drawer-size)",
        "--drawer-align": getDrawerAlign(position),
        "--drawer-justify": position === "right" ? "flex-end" : void 0,
        "--drawer-offset": rem(offset)
      }
    }));
    DrawerRoot = factory((_props, ref) => {
      const props = useProps("DrawerRoot", defaultProps36, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        scrollAreaComponent,
        position,
        transitionProps,
        radius,
        ...others
      } = props;
      const { dir } = useDirection();
      const getStyles = useStyles({
        name: "Drawer",
        classes: classes18,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver19
      });
      const drawerTransition = (dir === "rtl" ? rtlTransitions : transitions2)[position];
      return /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(DrawerProvider, { value: { scrollAreaComponent, getStyles, radius }, children: /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
        ModalBase,
        {
          ref,
          ...getStyles("root"),
          transitionProps: { transition: drawerTransition, ...transitionProps },
          unstyled,
          ...others
        }
      ) });
    });
    DrawerRoot.classes = classes18;
    DrawerRoot.displayName = "@mantine/core/DrawerRoot";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerStack.mjs
function DrawerStack({ children }) {
  const [stack2, setStack] = (0, import_react116.useState)([]);
  const [maxZIndex, setMaxZIndex] = (0, import_react116.useState)(getDefaultZIndex("modal"));
  return /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
    DrawerStackProvider,
    {
      value: {
        stack: stack2,
        addModal: (id5, zIndex) => {
          setStack((current) => [.../* @__PURE__ */ new Set([...current, id5])]);
          setMaxZIndex(
            (current) => typeof zIndex === "number" && typeof current === "number" ? Math.max(current, zIndex) : current
          );
        },
        removeModal: (id5) => setStack((current) => current.filter((currentId) => currentId !== id5)),
        getZIndex: (id5) => `calc(${maxZIndex} + ${stack2.indexOf(id5)} + 1)`,
        currentId: stack2[stack2.length - 1],
        maxZIndex
      },
      children
    }
  );
}
var import_jsx_runtime94, import_react116, DrawerStackProvider, useDrawerStackContext;
var init_DrawerStack = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerStack.mjs"() {
    "use client";
    import_jsx_runtime94 = __toESM(require_jsx_runtime(), 1);
    import_react116 = __toESM(require_react(), 1);
    init_create_optional_context();
    init_get_default_z_index();
    init_clsx();
    [DrawerStackProvider, useDrawerStackContext] = createOptionalContext();
    DrawerStack.displayName = "@mantine/core/DrawerStack";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerTitle.mjs
var import_jsx_runtime95, import_react117, defaultProps37, DrawerTitle;
var init_DrawerTitle = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/DrawerTitle.mjs"() {
    "use client";
    import_jsx_runtime95 = __toESM(require_jsx_runtime(), 1);
    import_react117 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseTitle();
    init_Drawer_context();
    init_Drawer_module_css();
    defaultProps37 = {};
    DrawerTitle = factory((_props, ref) => {
      const props = useProps("DrawerTitle", defaultProps37, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useDrawerContext();
      return /* @__PURE__ */ (0, import_jsx_runtime95.jsx)(
        ModalBaseTitle,
        {
          ref,
          ...ctx.getStyles("title", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    DrawerTitle.classes = classes18;
    DrawerTitle.displayName = "@mantine/core/DrawerTitle";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.mjs
var import_jsx_runtime96, import_react118, defaultProps38, Drawer;
var init_Drawer = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Drawer/Drawer.mjs"() {
    "use client";
    import_jsx_runtime96 = __toESM(require_jsx_runtime(), 1);
    import_react118 = __toESM(require_react(), 1);
    init_get_default_z_index();
    init_clsx();
    init_use_props();
    init_factory();
    init_DrawerBody();
    init_DrawerCloseButton();
    init_DrawerContent();
    init_DrawerHeader();
    init_DrawerOverlay();
    init_DrawerRoot();
    init_DrawerStack();
    init_DrawerTitle();
    init_Drawer_module_css();
    defaultProps38 = {
      closeOnClickOutside: true,
      withinPortal: true,
      lockScroll: true,
      trapFocus: true,
      returnFocus: true,
      closeOnEscape: true,
      keepMounted: false,
      zIndex: getDefaultZIndex("modal"),
      withOverlay: true,
      withCloseButton: true
    };
    Drawer = factory((_props, ref) => {
      const {
        title: title8,
        withOverlay,
        overlayProps,
        withCloseButton,
        closeButtonProps,
        children,
        opened,
        stackId,
        zIndex,
        ...others
      } = useProps("Drawer", defaultProps38, _props);
      const ctx = useDrawerStackContext();
      const hasHeader = !!title8 || withCloseButton;
      const stackProps = ctx && stackId ? {
        closeOnEscape: ctx.currentId === stackId,
        trapFocus: ctx.currentId === stackId,
        zIndex: ctx.getZIndex(stackId)
      } : {};
      const overlayVisible = withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;
      (0, import_react118.useEffect)(() => {
        if (ctx && stackId) {
          opened ? ctx.addModal(stackId, zIndex || getDefaultZIndex("modal")) : ctx.removeModal(stackId);
        }
      }, [opened, stackId, zIndex]);
      return /* @__PURE__ */ (0, import_jsx_runtime96.jsxs)(
        DrawerRoot,
        {
          ref,
          opened,
          zIndex: ctx && stackId ? ctx.getZIndex(stackId) : zIndex,
          ...others,
          ...stackProps,
          children: [
            withOverlay && /* @__PURE__ */ (0, import_jsx_runtime96.jsx)(
              DrawerOverlay,
              {
                visible: overlayVisible,
                transitionProps: ctx && stackId ? { duration: 0 } : void 0,
                ...overlayProps
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime96.jsxs)(DrawerContent, { __hidden: ctx && stackId && opened ? stackId !== ctx.currentId : false, children: [
              hasHeader && /* @__PURE__ */ (0, import_jsx_runtime96.jsxs)(DrawerHeader, { children: [
                title8 && /* @__PURE__ */ (0, import_jsx_runtime96.jsx)(DrawerTitle, { children: title8 }),
                withCloseButton && /* @__PURE__ */ (0, import_jsx_runtime96.jsx)(DrawerCloseButton, { ...closeButtonProps })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime96.jsx)(DrawerBody, { children })
            ] })
          ]
        }
      );
    });
    Drawer.classes = classes18;
    Drawer.displayName = "@mantine/core/Drawer";
    Drawer.Root = DrawerRoot;
    Drawer.Overlay = DrawerOverlay;
    Drawer.Content = DrawerContent;
    Drawer.Body = DrawerBody;
    Drawer.Header = DrawerHeader;
    Drawer.Title = DrawerTitle;
    Drawer.CloseButton = DrawerCloseButton;
    Drawer.Stack = DrawerStack;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Image/Image.module.css.mjs
var classes19;
var init_Image_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Image/Image.module.css.mjs"() {
    "use client";
    classes19 = { "root": "m_9e117634" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Image/Image.mjs
var import_jsx_runtime97, import_react119, defaultProps39, varsResolver20, Image;
var init_Image = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Image/Image.mjs"() {
    "use client";
    import_jsx_runtime97 = __toESM(require_jsx_runtime(), 1);
    import_react119 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_polymorphic_factory();
    init_Image_module_css();
    defaultProps39 = {};
    varsResolver20 = createVarsResolver((_3, { radius, fit }) => ({
      root: {
        "--image-radius": radius === void 0 ? void 0 : getRadius(radius),
        "--image-object-fit": fit
      }
    }));
    Image = polymorphicFactory((_props, ref) => {
      const props = useProps("Image", defaultProps39, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        onError,
        src,
        radius,
        fit,
        fallbackSrc,
        mod,
        ...others
      } = props;
      const [error, setError] = (0, import_react119.useState)(!src);
      (0, import_react119.useEffect)(() => setError(!src), [src]);
      const getStyles = useStyles({
        name: "Image",
        classes: classes19,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver20
      });
      if (error && fallbackSrc) {
        return /* @__PURE__ */ (0, import_jsx_runtime97.jsx)(
          Box,
          {
            component: "img",
            ref,
            src: fallbackSrc,
            ...getStyles("root"),
            onError,
            mod: ["fallback", mod],
            ...others
          }
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime97.jsx)(
        Box,
        {
          component: "img",
          ref,
          ...getStyles("root"),
          src,
          onError: (event) => {
            onError?.(event);
            setError(true);
          },
          mod,
          ...others
        }
      );
    });
    Image.classes = classes19;
    Image.displayName = "@mantine/core/Image";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.context.mjs
var import_react120, import_jsx_runtime98, ListProvider, useListContext;
var init_List_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.context.mjs"() {
    "use client";
    import_react120 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime98 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [ListProvider, useListContext] = createSafeContext(
      "List component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.module.css.mjs
var classes20;
var init_List_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.module.css.mjs"() {
    "use client";
    classes20 = { "root": "m_abbac491", "item": "m_abb6bec2", "itemWrapper": "m_75cd9f71", "itemIcon": "m_60f83e5b" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/ListItem/ListItem.mjs
var import_jsx_runtime99, import_react121, defaultProps40, ListItem;
var init_ListItem = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/ListItem/ListItem.mjs"() {
    "use client";
    import_jsx_runtime99 = __toESM(require_jsx_runtime(), 1);
    import_react121 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_Box();
    init_factory();
    init_List_context();
    init_List_module_css();
    defaultProps40 = {};
    ListItem = factory((_props, ref) => {
      const props = useProps("ListItem", defaultProps40, _props);
      const { classNames, className, style, styles, vars, icon, children, mod, ...others } = props;
      const ctx = useListContext();
      const _icon = icon || ctx.icon;
      const stylesApiProps = { classNames, styles };
      return /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(
        Box,
        {
          ...ctx.getStyles("item", { ...stylesApiProps, className, style }),
          component: "li",
          mod: [{ "with-icon": !!_icon, centered: ctx.center }, mod],
          ref,
          ...others,
          children: /* @__PURE__ */ (0, import_jsx_runtime99.jsxs)("div", { ...ctx.getStyles("itemWrapper", stylesApiProps), children: [
            _icon && /* @__PURE__ */ (0, import_jsx_runtime99.jsx)("span", { ...ctx.getStyles("itemIcon", stylesApiProps), children: _icon }),
            /* @__PURE__ */ (0, import_jsx_runtime99.jsx)("span", { ...ctx.getStyles("itemLabel", stylesApiProps), children })
          ] })
        }
      );
    });
    ListItem.classes = classes20;
    ListItem.displayName = "@mantine/core/ListItem";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.mjs
var import_jsx_runtime100, import_react122, defaultProps41, varsResolver21, List;
var init_List = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/List/List.mjs"() {
    "use client";
    import_jsx_runtime100 = __toESM(require_jsx_runtime(), 1);
    import_react122 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_List_context();
    init_ListItem();
    init_List_module_css();
    defaultProps41 = {
      type: "unordered"
    };
    varsResolver21 = createVarsResolver((_3, { size, spacing }) => ({
      root: {
        "--list-fz": getFontSize(size),
        "--list-lh": getLineHeight(size),
        "--list-spacing": getSpacing(spacing)
      }
    }));
    List = factory((_props, ref) => {
      const props = useProps("List", defaultProps41, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        children,
        type,
        withPadding,
        icon,
        spacing,
        center,
        listStyleType,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "List",
        classes: classes20,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver21
      });
      return /* @__PURE__ */ (0, import_jsx_runtime100.jsx)(ListProvider, { value: { center, icon, getStyles }, children: /* @__PURE__ */ (0, import_jsx_runtime100.jsx)(
        Box,
        {
          ...getStyles("root", { style: { listStyleType } }),
          component: type === "unordered" ? "ul" : "ol",
          mod: [{ "with-padding": withPadding }, mod],
          ref,
          ...others,
          children
        }
      ) });
    });
    List.classes = classes20;
    List.displayName = "@mantine/core/List";
    List.Item = ListItem;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.context.mjs
var import_react123, import_jsx_runtime101, ModalProvider, useModalContext;
var init_Modal_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.context.mjs"() {
    "use client";
    import_react123 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime101 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [ModalProvider, useModalContext] = createSafeContext(
      "Modal component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.module.css.mjs
var classes21;
var init_Modal_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.module.css.mjs"() {
    "use client";
    classes21 = { "root": "m_9df02822", "content": "m_54c44539", "inner": "m_1f958f16", "header": "m_d0e2b9cd" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalBody.mjs
var import_jsx_runtime102, import_react124, defaultProps42, ModalBody;
var init_ModalBody = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalBody.mjs"() {
    "use client";
    import_jsx_runtime102 = __toESM(require_jsx_runtime(), 1);
    import_react124 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseBody();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps42 = {};
    ModalBody = factory((_props, ref) => {
      const props = useProps("ModalBody", defaultProps42, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useModalContext();
      return /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(
        ModalBaseBody,
        {
          ref,
          ...ctx.getStyles("body", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    ModalBody.classes = classes21;
    ModalBody.displayName = "@mantine/core/ModalBody";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalCloseButton.mjs
var import_jsx_runtime103, import_react125, defaultProps43, ModalCloseButton;
var init_ModalCloseButton = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalCloseButton.mjs"() {
    "use client";
    import_jsx_runtime103 = __toESM(require_jsx_runtime(), 1);
    import_react125 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseCloseButton();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps43 = {};
    ModalCloseButton = factory((_props, ref) => {
      const props = useProps("ModalCloseButton", defaultProps43, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useModalContext();
      return /* @__PURE__ */ (0, import_jsx_runtime103.jsx)(
        ModalBaseCloseButton,
        {
          ref,
          ...ctx.getStyles("close", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    ModalCloseButton.classes = classes21;
    ModalCloseButton.displayName = "@mantine/core/ModalCloseButton";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalContent.mjs
var import_jsx_runtime104, import_react126, defaultProps44, ModalContent;
var init_ModalContent = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalContent.mjs"() {
    "use client";
    import_jsx_runtime104 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react126 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseContent();
    init_NativeScrollArea();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps44 = {};
    ModalContent = factory((_props, ref) => {
      const props = useProps("ModalContent", defaultProps44, _props);
      const { classNames, className, style, styles, vars, children, __hidden, ...others } = props;
      const ctx = useModalContext();
      const Scroll = ctx.scrollAreaComponent || NativeScrollArea;
      return /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(
        ModalBaseContent,
        {
          ...ctx.getStyles("content", { className, style, styles, classNames }),
          innerProps: ctx.getStyles("inner", { className, style, styles, classNames }),
          "data-full-screen": ctx.fullScreen || void 0,
          "data-modal-content": true,
          "data-hidden": __hidden || void 0,
          ref,
          ...others,
          children: /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(
            Scroll,
            {
              style: {
                maxHeight: ctx.fullScreen ? "100dvh" : `calc(100dvh - (${rem(ctx.yOffset)} * 2))`
              },
              children
            }
          )
        }
      );
    });
    ModalContent.classes = classes21;
    ModalContent.displayName = "@mantine/core/ModalContent";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalHeader.mjs
var import_jsx_runtime105, import_react127, defaultProps45, ModalHeader;
var init_ModalHeader = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalHeader.mjs"() {
    "use client";
    import_jsx_runtime105 = __toESM(require_jsx_runtime(), 1);
    import_react127 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseHeader();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps45 = {};
    ModalHeader = factory((_props, ref) => {
      const props = useProps("ModalHeader", defaultProps45, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useModalContext();
      return /* @__PURE__ */ (0, import_jsx_runtime105.jsx)(
        ModalBaseHeader,
        {
          ref,
          ...ctx.getStyles("header", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    ModalHeader.classes = classes21;
    ModalHeader.displayName = "@mantine/core/ModalHeader";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalOverlay.mjs
var import_jsx_runtime106, import_react128, defaultProps46, ModalOverlay;
var init_ModalOverlay = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalOverlay.mjs"() {
    "use client";
    import_jsx_runtime106 = __toESM(require_jsx_runtime(), 1);
    import_react128 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseOverlay();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps46 = {};
    ModalOverlay = factory((_props, ref) => {
      const props = useProps("ModalOverlay", defaultProps46, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useModalContext();
      return /* @__PURE__ */ (0, import_jsx_runtime106.jsx)(
        ModalBaseOverlay,
        {
          ref,
          ...ctx.getStyles("overlay", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    ModalOverlay.classes = classes21;
    ModalOverlay.displayName = "@mantine/core/ModalOverlay";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalRoot.mjs
var import_jsx_runtime107, import_react129, defaultProps47, varsResolver22, ModalRoot;
var init_ModalRoot = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalRoot.mjs"() {
    "use client";
    import_jsx_runtime107 = __toESM(require_jsx_runtime(), 1);
    init_rem();
    import_react129 = __toESM(require_react(), 1);
    init_get_default_z_index();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_factory();
    init_ModalBase();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps47 = {
      __staticSelector: "Modal",
      closeOnClickOutside: true,
      withinPortal: true,
      lockScroll: true,
      trapFocus: true,
      returnFocus: true,
      closeOnEscape: true,
      keepMounted: false,
      zIndex: getDefaultZIndex("modal"),
      transitionProps: { duration: 200, transition: "fade-down" },
      yOffset: "5dvh"
    };
    varsResolver22 = createVarsResolver(
      (_3, { radius, size, yOffset, xOffset }) => ({
        root: {
          "--modal-radius": radius === void 0 ? void 0 : getRadius(radius),
          "--modal-size": getSize(size, "modal-size"),
          "--modal-y-offset": rem(yOffset),
          "--modal-x-offset": rem(xOffset)
        }
      })
    );
    ModalRoot = factory((_props, ref) => {
      const props = useProps("ModalRoot", defaultProps47, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        yOffset,
        scrollAreaComponent,
        radius,
        fullScreen,
        centered,
        xOffset,
        __staticSelector,
        ...others
      } = props;
      const getStyles = useStyles({
        name: __staticSelector,
        classes: classes21,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver22
      });
      return /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(ModalProvider, { value: { yOffset, scrollAreaComponent, getStyles, fullScreen }, children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(
        ModalBase,
        {
          ref,
          ...getStyles("root"),
          "data-full-screen": fullScreen || void 0,
          "data-centered": centered || void 0,
          unstyled,
          ...others
        }
      ) });
    });
    ModalRoot.classes = classes21;
    ModalRoot.displayName = "@mantine/core/ModalRoot";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalStack.mjs
function ModalStack({ children }) {
  const [stack2, setStack] = (0, import_react130.useState)([]);
  const [maxZIndex, setMaxZIndex] = (0, import_react130.useState)(getDefaultZIndex("modal"));
  return /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
    ModalStackProvider,
    {
      value: {
        stack: stack2,
        addModal: (id5, zIndex) => {
          setStack((current) => [.../* @__PURE__ */ new Set([...current, id5])]);
          setMaxZIndex(
            (current) => typeof zIndex === "number" && typeof current === "number" ? Math.max(current, zIndex) : current
          );
        },
        removeModal: (id5) => setStack((current) => current.filter((currentId) => currentId !== id5)),
        getZIndex: (id5) => `calc(${maxZIndex} + ${stack2.indexOf(id5)} + 1)`,
        currentId: stack2[stack2.length - 1],
        maxZIndex
      },
      children
    }
  );
}
var import_jsx_runtime108, import_react130, ModalStackProvider, useModalStackContext;
var init_ModalStack = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalStack.mjs"() {
    "use client";
    import_jsx_runtime108 = __toESM(require_jsx_runtime(), 1);
    import_react130 = __toESM(require_react(), 1);
    init_create_optional_context();
    init_get_default_z_index();
    init_clsx();
    [ModalStackProvider, useModalStackContext] = createOptionalContext();
    ModalStack.displayName = "@mantine/core/ModalStack";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalTitle.mjs
var import_jsx_runtime109, import_react131, defaultProps48, ModalTitle;
var init_ModalTitle = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/ModalTitle.mjs"() {
    "use client";
    import_jsx_runtime109 = __toESM(require_jsx_runtime(), 1);
    import_react131 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBaseTitle();
    init_Modal_context();
    init_Modal_module_css();
    defaultProps48 = {};
    ModalTitle = factory((_props, ref) => {
      const props = useProps("ModalTitle", defaultProps48, _props);
      const { classNames, className, style, styles, vars, ...others } = props;
      const ctx = useModalContext();
      return /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(
        ModalBaseTitle,
        {
          ref,
          ...ctx.getStyles("title", { classNames, style, styles, className }),
          ...others
        }
      );
    });
    ModalTitle.classes = classes21;
    ModalTitle.displayName = "@mantine/core/ModalTitle";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.mjs
var import_jsx_runtime110, import_react132, defaultProps49, Modal;
var init_Modal = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Modal/Modal.mjs"() {
    "use client";
    import_jsx_runtime110 = __toESM(require_jsx_runtime(), 1);
    import_react132 = __toESM(require_react(), 1);
    init_get_default_z_index();
    init_clsx();
    init_use_props();
    init_factory();
    init_ModalBody();
    init_ModalCloseButton();
    init_ModalContent();
    init_ModalHeader();
    init_ModalOverlay();
    init_ModalRoot();
    init_ModalStack();
    init_ModalTitle();
    init_Modal_module_css();
    defaultProps49 = {
      closeOnClickOutside: true,
      withinPortal: true,
      lockScroll: true,
      trapFocus: true,
      returnFocus: true,
      closeOnEscape: true,
      keepMounted: false,
      zIndex: getDefaultZIndex("modal"),
      transitionProps: { duration: 200, transition: "fade-down" },
      withOverlay: true,
      withCloseButton: true
    };
    Modal = factory((_props, ref) => {
      const {
        title: title8,
        withOverlay,
        overlayProps,
        withCloseButton,
        closeButtonProps,
        children,
        radius,
        opened,
        stackId,
        zIndex,
        ...others
      } = useProps("Modal", defaultProps49, _props);
      const ctx = useModalStackContext();
      const hasHeader = !!title8 || withCloseButton;
      const stackProps = ctx && stackId ? {
        closeOnEscape: ctx.currentId === stackId,
        trapFocus: ctx.currentId === stackId,
        zIndex: ctx.getZIndex(stackId)
      } : {};
      const overlayVisible = withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;
      (0, import_react132.useEffect)(() => {
        if (ctx && stackId) {
          opened ? ctx.addModal(stackId, zIndex || getDefaultZIndex("modal")) : ctx.removeModal(stackId);
        }
      }, [opened, stackId, zIndex]);
      return /* @__PURE__ */ (0, import_jsx_runtime110.jsxs)(
        ModalRoot,
        {
          ref,
          radius,
          opened,
          zIndex: ctx && stackId ? ctx.getZIndex(stackId) : zIndex,
          ...others,
          ...stackProps,
          children: [
            withOverlay && /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(
              ModalOverlay,
              {
                visible: overlayVisible,
                transitionProps: ctx && stackId ? { duration: 0 } : void 0,
                ...overlayProps
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime110.jsxs)(
              ModalContent,
              {
                radius,
                __hidden: ctx && stackId && opened ? stackId !== ctx.currentId : false,
                children: [
                  hasHeader && /* @__PURE__ */ (0, import_jsx_runtime110.jsxs)(ModalHeader, { children: [
                    title8 && /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(ModalTitle, { children: title8 }),
                    withCloseButton && /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(ModalCloseButton, { ...closeButtonProps })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(ModalBody, { children })
                ]
              }
            )
          ]
        }
      );
    });
    Modal.classes = classes21;
    Modal.displayName = "@mantine/core/Modal";
    Modal.Root = ModalRoot;
    Modal.Overlay = ModalOverlay;
    Modal.Content = ModalContent;
    Modal.Body = ModalBody;
    Modal.Header = ModalHeader;
    Modal.Title = ModalTitle;
    Modal.CloseButton = ModalCloseButton;
    Modal.Stack = ModalStack;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Notification/Notification.module.css.mjs
var classes22;
var init_Notification_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Notification/Notification.module.css.mjs"() {
    "use client";
    classes22 = { "root": "m_a513464", "icon": "m_a4ceffb", "loader": "m_b0920b15", "body": "m_a49ed24", "title": "m_3feedf16", "description": "m_3d733a3a", "closeButton": "m_919a4d88" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Notification/Notification.mjs
var import_jsx_runtime111, import_react133, defaultProps50, varsResolver23, Notification;
var init_Notification = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Notification/Notification.mjs"() {
    "use client";
    import_jsx_runtime111 = __toESM(require_jsx_runtime(), 1);
    import_react133 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_get_theme_color();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_CloseButton();
    init_Loader();
    init_Notification_module_css();
    defaultProps50 = {
      withCloseButton: true
    };
    varsResolver23 = createVarsResolver((theme2, { radius, color: color3 }) => ({
      root: {
        "--notification-radius": radius === void 0 ? void 0 : getRadius(radius),
        "--notification-color": color3 ? getThemeColor(color3, theme2) : void 0
      }
    }));
    Notification = factory((_props, ref) => {
      const props = useProps("Notification", defaultProps50, _props);
      const {
        className,
        color: color3,
        radius,
        loading,
        withCloseButton,
        withBorder,
        title: title8,
        icon,
        children,
        onClose,
        closeButtonProps,
        classNames,
        style,
        styles,
        unstyled,
        variant,
        vars,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Notification",
        classes: classes22,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver23
      });
      return /* @__PURE__ */ (0, import_jsx_runtime111.jsxs)(
        Box,
        {
          ...getStyles("root"),
          mod: [{ "data-with-icon": !!icon || loading, "data-with-border": withBorder }, mod],
          ref,
          variant,
          ...others,
          role: "alert",
          children: [
            icon && !loading && /* @__PURE__ */ (0, import_jsx_runtime111.jsx)("div", { ...getStyles("icon"), children: icon }),
            loading && /* @__PURE__ */ (0, import_jsx_runtime111.jsx)(Loader, { size: 28, color: color3, ...getStyles("loader") }),
            /* @__PURE__ */ (0, import_jsx_runtime111.jsxs)("div", { ...getStyles("body"), children: [
              title8 && /* @__PURE__ */ (0, import_jsx_runtime111.jsx)("div", { ...getStyles("title"), children: title8 }),
              /* @__PURE__ */ (0, import_jsx_runtime111.jsx)(Box, { ...getStyles("description"), mod: { "data-with-title": !!title8 }, children })
            ] }),
            withCloseButton && /* @__PURE__ */ (0, import_jsx_runtime111.jsx)(
              CloseButton,
              {
                iconSize: 16,
                color: "gray",
                ...closeButtonProps,
                unstyled,
                onClick: onClose,
                ...getStyles("closeButton")
              }
            )
          ]
        }
      );
    });
    Notification.classes = classes22;
    Notification.displayName = "@mantine/core/Notification";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.context.mjs
var import_react134, import_jsx_runtime112, ProgressProvider, useProgressContext;
var init_Progress_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.context.mjs"() {
    "use client";
    import_react134 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime112 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [ProgressProvider, useProgressContext] = createSafeContext(
      "Progress.Root component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.module.css.mjs
var classes23;
var init_Progress_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.module.css.mjs"() {
    "use client";
    classes23 = { "root": "m_db6d6462", "section": "m_2242eb65", "stripes-animation": "m_81a374bd", "label": "m_91e40b74" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressLabel/ProgressLabel.mjs
var import_jsx_runtime113, import_react135, defaultProps51, ProgressLabel;
var init_ProgressLabel = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressLabel/ProgressLabel.mjs"() {
    "use client";
    import_jsx_runtime113 = __toESM(require_jsx_runtime(), 1);
    import_react135 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_Box();
    init_factory();
    init_Progress_context();
    init_Progress_module_css();
    defaultProps51 = {};
    ProgressLabel = factory((props, ref) => {
      const { classNames, className, style, styles, vars, ...others } = useProps(
        "ProgressLabel",
        defaultProps51,
        props
      );
      const ctx = useProgressContext();
      return /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(
        Box,
        {
          ref,
          ...ctx.getStyles("label", { className, style, classNames, styles }),
          ...others
        }
      );
    });
    ProgressLabel.classes = classes23;
    ProgressLabel.displayName = "@mantine/core/ProgressLabel";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressRoot/ProgressRoot.mjs
var import_jsx_runtime114, import_react136, defaultProps52, varsResolver24, ProgressRoot;
var init_ProgressRoot = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressRoot/ProgressRoot.mjs"() {
    "use client";
    import_jsx_runtime114 = __toESM(require_jsx_runtime(), 1);
    import_react136 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Progress_context();
    init_Progress_module_css();
    defaultProps52 = {};
    varsResolver24 = createVarsResolver(
      (_3, { size, radius, transitionDuration }) => ({
        root: {
          "--progress-size": getSize(size, "progress-size"),
          "--progress-radius": radius === void 0 ? void 0 : getRadius(radius),
          "--progress-transition-duration": typeof transitionDuration === "number" ? `${transitionDuration}ms` : void 0
        }
      })
    );
    ProgressRoot = factory((_props, ref) => {
      const props = useProps("ProgressRoot", defaultProps52, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        autoContrast,
        transitionDuration,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Progress",
        classes: classes23,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver24
      });
      return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(ProgressProvider, { value: { getStyles, autoContrast }, children: /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(Box, { ref, ...getStyles("root"), ...others }) });
    });
    ProgressRoot.classes = classes23;
    ProgressRoot.displayName = "@mantine/core/ProgressRoot";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressSection/ProgressSection.mjs
var import_jsx_runtime115, import_react137, defaultProps53, ProgressSection;
var init_ProgressSection = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/ProgressSection/ProgressSection.mjs"() {
    "use client";
    import_jsx_runtime115 = __toESM(require_jsx_runtime(), 1);
    import_react137 = __toESM(require_react(), 1);
    init_clsx();
    init_get_theme_color();
    init_get_contrast_color();
    init_get_auto_contrast_value();
    init_MantineThemeProvider();
    init_use_props();
    init_Box();
    init_factory();
    init_Progress_context();
    init_Progress_module_css();
    defaultProps53 = {
      withAria: true
    };
    ProgressSection = factory((props, ref) => {
      const {
        classNames,
        className,
        style,
        styles,
        vars,
        value,
        withAria,
        color: color3,
        striped,
        animated,
        mod,
        ...others
      } = useProps("ProgressSection", defaultProps53, props);
      const ctx = useProgressContext();
      const theme2 = useMantineTheme();
      const ariaAttributes = withAria ? {
        role: "progressbar",
        "aria-valuemax": 100,
        "aria-valuemin": 0,
        "aria-valuenow": value,
        "aria-valuetext": `${value}%`
      } : {};
      return /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
        Box,
        {
          ref,
          ...ctx.getStyles("section", { className, classNames, styles, style }),
          ...others,
          ...ariaAttributes,
          mod: [{ striped: striped || animated, animated }, mod],
          __vars: {
            "--progress-section-width": `${value}%`,
            "--progress-section-color": getThemeColor(color3, theme2),
            "--progress-label-color": getAutoContrastValue(ctx.autoContrast, theme2) ? getContrastColor({ color: color3, theme: theme2, autoContrast: ctx.autoContrast }) : void 0
          }
        }
      );
    });
    ProgressSection.classes = classes23;
    ProgressSection.displayName = "@mantine/core/ProgressSection";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.mjs
var import_jsx_runtime116, import_react138, defaultProps54, Progress;
var init_Progress = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Progress/Progress.mjs"() {
    "use client";
    import_jsx_runtime116 = __toESM(require_jsx_runtime(), 1);
    import_react138 = __toESM(require_react(), 1);
    init_clsx();
    init_use_resolved_styles_api();
    init_use_props();
    init_factory();
    init_ProgressLabel();
    init_ProgressRoot();
    init_ProgressSection();
    init_Progress_module_css();
    defaultProps54 = {};
    Progress = factory((_props, ref) => {
      const props = useProps("Progress", defaultProps54, _props);
      const {
        value,
        classNames,
        styles,
        vars,
        color: color3,
        striped,
        animated,
        "aria-label": label3,
        ...others
      } = props;
      const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi({
        classNames,
        styles,
        props
      });
      return /* @__PURE__ */ (0, import_jsx_runtime116.jsx)(
        ProgressRoot,
        {
          ref,
          classNames: resolvedClassNames,
          styles: resolvedStyles,
          vars,
          ...others,
          children: /* @__PURE__ */ (0, import_jsx_runtime116.jsx)(
            ProgressSection,
            {
              value,
              color: color3,
              striped,
              animated,
              "aria-label": label3
            }
          )
        }
      );
    });
    Progress.classes = classes23;
    Progress.displayName = "@mantine/core/Progress";
    Progress.Section = ProgressSection;
    Progress.Root = ProgressRoot;
    Progress.Label = ProgressLabel;
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.context.mjs
var import_react139, import_jsx_runtime117, RatingProvider, useRatingContext;
var init_Rating_context = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.context.mjs"() {
    "use client";
    import_react139 = __toESM(require_react(), 1);
    init_create_safe_context();
    import_jsx_runtime117 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    [RatingProvider, useRatingContext] = createSafeContext(
      "Rating was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/StarSymbol/StarIcon.mjs
function StarIcon(props) {
  const { width, height, style, ...others } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(
    "svg",
    {
      viewBox: "0 0 24 24",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      style: { width, height, ...style },
      ...others,
      children: /* @__PURE__ */ (0, import_jsx_runtime118.jsx)("path", { d: "M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z" })
    }
  );
}
var import_jsx_runtime118;
var init_StarIcon = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/StarSymbol/StarIcon.mjs"() {
    "use client";
    import_jsx_runtime118 = __toESM(require_jsx_runtime(), 1);
    StarIcon.displayName = "@mantine/core/StarIcon";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/StarSymbol/StarSymbol.mjs
function StarSymbol({ type }) {
  const ctx = useRatingContext();
  return /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(StarIcon, { ...ctx.getStyles("starSymbol"), "data-filled": type === "full" || void 0 });
}
var import_jsx_runtime119;
var init_StarSymbol = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/StarSymbol/StarSymbol.mjs"() {
    "use client";
    import_jsx_runtime119 = __toESM(require_jsx_runtime(), 1);
    init_Rating_context();
    init_StarIcon();
    StarSymbol.displayName = "@mantine/core/StarSymbol";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/RatingItem/RatingItem.mjs
function RatingItem({
  getSymbolLabel,
  emptyIcon,
  fullIcon,
  full: full2,
  active,
  value,
  readOnly,
  fractionValue,
  color: color3,
  id: id5,
  onBlur,
  onChange,
  onInputChange,
  style,
  ...others
}) {
  const ctx = useRatingContext();
  const _fullIcon = typeof fullIcon === "function" ? fullIcon(value) : fullIcon;
  const _emptyIcon = typeof emptyIcon === "function" ? emptyIcon(value) : emptyIcon;
  const { dir } = useDirection();
  return /* @__PURE__ */ (0, import_jsx_runtime120.jsxs)(import_jsx_runtime120.Fragment, { children: [
    !readOnly && /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(
      "input",
      {
        ...ctx.getStyles("input"),
        onKeyDown: (event) => event.key === " " && onChange(value),
        id: id5,
        type: "radio",
        "data-active": active || void 0,
        "aria-label": getSymbolLabel?.(value),
        value,
        onBlur,
        onChange: onInputChange,
        ...others
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(
      Box,
      {
        component: readOnly ? "div" : "label",
        ...ctx.getStyles("label"),
        "data-read-only": readOnly || void 0,
        htmlFor: id5,
        onClick: () => onChange(value),
        __vars: {
          "--rating-item-z-index": (fractionValue === 1 ? void 0 : active ? 2 : 0)?.toString()
        },
        children: /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(
          Box,
          {
            ...ctx.getStyles("symbolBody"),
            __vars: {
              "--rating-symbol-clip-path": fractionValue === 1 ? void 0 : dir === "ltr" ? `inset(0 ${active ? 100 - fractionValue * 100 : 100}% 0 0)` : `inset(0 0 0 ${active ? 100 - fractionValue * 100 : 100}% )`
            },
            children: full2 ? _fullIcon || /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(StarSymbol, { type: "full" }) : _emptyIcon || /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(StarSymbol, { type: "empty" })
          }
        )
      }
    )
  ] });
}
var import_jsx_runtime120, import_react140;
var init_RatingItem = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/RatingItem/RatingItem.mjs"() {
    "use client";
    import_jsx_runtime120 = __toESM(require_jsx_runtime(), 1);
    import_react140 = __toESM(require_react(), 1);
    init_clsx();
    init_Box();
    init_DirectionProvider();
    init_Rating_context();
    init_StarSymbol();
    RatingItem.displayName = "@mantine/core/RatingItem";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.module.css.mjs
var classes24;
var init_Rating_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.module.css.mjs"() {
    "use client";
    classes24 = { "root": "m_f8d312f2", "symbolGroup": "m_61734bb7", "starSymbol": "m_5662a89a", "input": "m_211007ba", "label": "m_21342ee4", "symbolBody": "m_fae05d6a" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.mjs
function roundValueTo(value, to) {
  const rounded = Math.round(value / to) * to;
  const precision = `${to}`.split(".")[1]?.length || 0;
  return Number(rounded.toFixed(precision));
}
var import_jsx_runtime121, import_react141, defaultProps55, varsResolver25, Rating;
var init_Rating = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Rating/Rating.mjs"() {
    "use client";
    import_jsx_runtime121 = __toESM(require_jsx_runtime(), 1);
    import_react141 = __toESM(require_react(), 1);
    init_esm2();
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_get_theme_color();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_DirectionProvider();
    init_Rating_context();
    init_RatingItem();
    init_Rating_module_css();
    defaultProps55 = {
      size: "sm",
      getSymbolLabel: (value) => `${value}`,
      count: 5,
      fractions: 1,
      color: "yellow"
    };
    varsResolver25 = createVarsResolver((theme2, { size, color: color3 }) => ({
      root: {
        "--rating-size": getSize(size, "rating-size"),
        "--rating-color": getThemeColor(color3, theme2)
      }
    }));
    Rating = factory((_props, ref) => {
      const props = useProps("Rating", defaultProps55, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        name: name2,
        id: id5,
        value,
        defaultValue: defaultValue2,
        onChange,
        fractions,
        count,
        onMouseEnter,
        readOnly,
        onMouseMove,
        onHover,
        onMouseLeave,
        onTouchStart,
        onTouchEnd,
        size,
        variant,
        getSymbolLabel,
        color: color3,
        emptySymbol,
        fullSymbol,
        highlightSelectedOnly,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Rating",
        classes: classes24,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver25
      });
      const { dir } = useDirection();
      const _name = useId(name2);
      const _id = useId(id5);
      const rootRef = (0, import_react141.useRef)(null);
      const [_value, setValue] = useUncontrolled({
        value,
        defaultValue: defaultValue2,
        finalValue: 0,
        onChange
      });
      const [hovered, setHovered] = (0, import_react141.useState)(-1);
      const [isOutside, setOutside] = (0, import_react141.useState)(true);
      const _fractions = Math.floor(fractions);
      const _count = Math.floor(count);
      const decimalUnit = 1 / _fractions;
      const stableValueRounded = roundValueTo(_value, decimalUnit);
      const finalValue = hovered !== -1 ? hovered : stableValueRounded;
      const getRatingFromCoordinates = (x3) => {
        const { left, right, width } = rootRef.current.getBoundingClientRect();
        const symbolWidth = width / _count;
        const hoverPosition = dir === "rtl" ? right - x3 : x3 - left;
        const hoverValue = hoverPosition / symbolWidth;
        return clamp(roundValueTo(hoverValue + decimalUnit / 2, decimalUnit), decimalUnit, _count);
      };
      const handleMouseEnter = (event) => {
        onMouseEnter?.(event);
        !readOnly && setOutside(false);
      };
      const handleMouseMove = (event) => {
        onMouseMove?.(event);
        if (readOnly) {
          return;
        }
        const rounded = getRatingFromCoordinates(event.clientX);
        setHovered(rounded);
        rounded !== hovered && onHover?.(rounded);
      };
      const handleMouseLeave = (event) => {
        onMouseLeave?.(event);
        if (readOnly) {
          return;
        }
        setHovered(-1);
        setOutside(true);
        hovered !== -1 && onHover?.(-1);
      };
      const handleTouchStart = (event) => {
        const { touches } = event;
        if (touches.length !== 1) {
          return;
        }
        if (!readOnly) {
          const touch = touches[0];
          setValue(getRatingFromCoordinates(touch.clientX));
        }
        onTouchStart?.(event);
      };
      const handleTouchEnd = (event) => {
        event.preventDefault();
        onTouchEnd?.(event);
      };
      const handleItemBlur = () => isOutside && setHovered(-1);
      const handleInputChange = (event) => {
        if (!readOnly) {
          if (typeof event === "number") {
            setHovered(event);
          } else {
            setHovered(parseFloat(event.target.value));
          }
        }
      };
      const handleChange = (event) => {
        if (!readOnly) {
          if (typeof event === "number") {
            setValue(event);
          } else {
            setValue(parseFloat(event.target.value));
          }
        }
      };
      const items3 = Array(_count).fill(0).map((_3, index) => {
        const integerValue = index + 1;
        const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));
        const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;
        return /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(
          "div",
          {
            "data-active": isGroupActive || void 0,
            ...getStyles("symbolGroup"),
            children: fractionItems.map((__, fractionIndex) => {
              const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);
              const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);
              return /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(
                RatingItem,
                {
                  getSymbolLabel,
                  emptyIcon: emptySymbol,
                  fullIcon: fullSymbol,
                  full: highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue,
                  active: symbolValue === finalValue,
                  checked: symbolValue === stableValueRounded,
                  readOnly,
                  fractionValue,
                  value: symbolValue,
                  name: _name,
                  onChange: handleChange,
                  onBlur: handleItemBlur,
                  onInputChange: handleInputChange,
                  id: `${_id}-${index}-${fractionIndex}`
                },
                `${integerValue}-${symbolValue}`
              );
            })
          },
          integerValue
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RatingProvider, { value: { getStyles }, children: /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(
        Box,
        {
          ref: useMergedRef(rootRef, ref),
          ...getStyles("root"),
          onMouseMove: handleMouseMove,
          onMouseEnter: handleMouseEnter,
          onMouseLeave: handleMouseLeave,
          onTouchStart: handleTouchStart,
          onTouchEnd: handleTouchEnd,
          variant,
          size,
          id: _id,
          ...others,
          children: items3
        }
      ) });
    });
    Rating.classes = classes24;
    Rating.displayName = "@mantine/core/Rating";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Stack/Stack.module.css.mjs
var classes25;
var init_Stack_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Stack/Stack.module.css.mjs"() {
    "use client";
    classes25 = { "root": "m_6d731127" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Stack/Stack.mjs
var import_jsx_runtime122, import_react142, defaultProps56, varsResolver26, Stack;
var init_Stack = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Stack/Stack.mjs"() {
    "use client";
    import_jsx_runtime122 = __toESM(require_jsx_runtime(), 1);
    import_react142 = __toESM(require_react(), 1);
    init_get_size();
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_Stack_module_css();
    defaultProps56 = {
      gap: "md",
      align: "stretch",
      justify: "flex-start"
    };
    varsResolver26 = createVarsResolver((_3, { gap, align, justify }) => ({
      root: {
        "--stack-gap": getSpacing(gap),
        "--stack-align": align,
        "--stack-justify": justify
      }
    }));
    Stack = factory((_props, ref) => {
      const props = useProps("Stack", defaultProps56, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        align,
        justify,
        gap,
        variant,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Stack",
        props,
        classes: classes25,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver26
      });
      return /* @__PURE__ */ (0, import_jsx_runtime122.jsx)(Box, { ref, ...getStyles("root"), variant, ...others });
    });
    Stack.classes = classes25;
    Stack.displayName = "@mantine/core/Stack";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs
var import_jsx_runtime123, import_react143, defaultProps57, TextInput;
var init_TextInput = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs"() {
    "use client";
    import_jsx_runtime123 = __toESM(require_jsx_runtime(), 1);
    import_react143 = __toESM(require_react(), 1);
    init_clsx();
    init_use_props();
    init_factory();
    init_InputBase();
    defaultProps57 = {};
    TextInput = factory((props, ref) => {
      const _props = useProps("TextInput", defaultProps57, props);
      return /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(InputBase, { component: "input", ref, ..._props, __staticSelector: "TextInput" });
    });
    TextInput.classes = InputBase.classes;
    TextInput.displayName = "@mantine/core/TextInput";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/get-title-size.mjs
function getTitleSize(order, size) {
  const titleSize = size !== void 0 ? size : `h${order}`;
  if (headings3.includes(titleSize)) {
    return {
      fontSize: `var(--mantine-${titleSize}-font-size)`,
      fontWeight: `var(--mantine-${titleSize}-font-weight)`,
      lineHeight: `var(--mantine-${titleSize}-line-height)`
    };
  } else if (sizes.includes(titleSize)) {
    return {
      fontSize: `var(--mantine-font-size-${titleSize})`,
      fontWeight: `var(--mantine-h${order}-font-weight)`,
      lineHeight: `var(--mantine-h${order}-line-height)`
    };
  }
  return {
    fontSize: rem(titleSize),
    fontWeight: `var(--mantine-h${order}-font-weight)`,
    lineHeight: `var(--mantine-h${order}-line-height)`
  };
}
var import_react144, import_jsx_runtime124, headings3, sizes;
var init_get_title_size = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/get-title-size.mjs"() {
    "use client";
    init_rem();
    import_react144 = __toESM(require_react(), 1);
    import_jsx_runtime124 = __toESM(require_jsx_runtime(), 1);
    init_clsx();
    headings3 = ["h1", "h2", "h3", "h4", "h5", "h6"];
    sizes = ["xs", "sm", "md", "lg", "xl"];
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/Title.module.css.mjs
var classes26;
var init_Title_module_css = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/Title.module.css.mjs"() {
    "use client";
    classes26 = { "root": "m_8a5d1357" };
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/Title.mjs
var import_jsx_runtime125, import_react145, defaultProps58, varsResolver27, Title;
var init_Title = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/components/Title/Title.mjs"() {
    "use client";
    import_jsx_runtime125 = __toESM(require_jsx_runtime(), 1);
    import_react145 = __toESM(require_react(), 1);
    init_create_vars_resolver();
    init_clsx();
    init_use_props();
    init_use_styles();
    init_Box();
    init_factory();
    init_get_title_size();
    init_Title_module_css();
    defaultProps58 = {
      order: 1
    };
    varsResolver27 = createVarsResolver((_3, { order, size, lineClamp, textWrap }) => {
      const sizeVariables = getTitleSize(order, size);
      return {
        root: {
          "--title-fw": sizeVariables.fontWeight,
          "--title-lh": sizeVariables.lineHeight,
          "--title-fz": sizeVariables.fontSize,
          "--title-line-clamp": typeof lineClamp === "number" ? lineClamp.toString() : void 0,
          "--title-text-wrap": textWrap
        }
      };
    });
    Title = factory((_props, ref) => {
      const props = useProps("Title", defaultProps58, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        order,
        vars,
        size,
        variant,
        lineClamp,
        textWrap,
        mod,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Title",
        props,
        classes: classes26,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver27
      });
      if (![1, 2, 3, 4, 5, 6].includes(order)) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
        Box,
        {
          ...getStyles("root"),
          component: `h${order}`,
          variant,
          ref,
          mod: [{ order, "data-line-clamp": typeof lineClamp === "number" }, mod],
          size,
          ...others
        }
      );
    });
    Title.classes = classes26;
    Title.displayName = "@mantine/core/Title";
  }
});

// node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/index.mjs
var import_react_remove_scroll2;
var init_esm3 = __esm({
  "node_modules/.pnpm/@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@types+react@19.1.2_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/index.mjs"() {
    import_react_remove_scroll2 = __toESM(require_es56(), 1);
    init_keys();
    init_px();
    init_rem();
    init_filter_props();
    init_create_safe_context();
    init_get_default_z_index();
    init_get_size();
    init_get_sorted_breakpoints();
    init_get_base_value();
    init_create_vars_resolver();
    init_use_styles();
    init_ColorSchemeScript();
    init_MantineProvider();
    init_MantineThemeProvider();
    init_use_props();
    init_create_theme();
    init_InlineStyles();
    init_use_random_classname();
    init_Box();
    init_factory();
    init_DirectionProvider();
    init_UnstyledButton();
    init_VisuallyHidden();
    init_Paper();
    init_Group();
    init_Flex();
    init_Accordion();
    init_AccordionChevron();
    init_Blockquote();
    init_Button();
    init_Center();
    init_Container();
    init_Divider();
    init_Drawer();
    init_FocusTrap();
    init_Image();
    init_List();
    init_Modal();
    init_Notification();
    init_OptionalPortal();
    init_Progress();
    init_Rating();
    init_Stack();
    init_Text();
    init_TextInput();
    init_Title();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/actions/actions.mjs
function validateFormName(name2) {
  if (!/^[0-9a-zA-Z-]+$/.test(name2)) {
    throw new Error(
      `[@mantine/use-form] Form name "${name2}" is invalid, it should contain only letters, numbers and dashes`
    );
  }
}
function useFormEvent(eventKey, handler2) {
  useIsomorphicEffect2(() => {
    if (eventKey) {
      window.addEventListener(eventKey, handler2);
      return () => window.removeEventListener(eventKey, handler2);
    }
    return void 0;
  }, [eventKey]);
}
function useFormActions(name2, form) {
  if (name2) {
    validateFormName(name2);
  }
  useFormEvent(
    `mantine-form:${name2}:set-field-value`,
    (event) => form.setFieldValue(event.detail.path, event.detail.value)
  );
  useFormEvent(
    `mantine-form:${name2}:set-values`,
    (event) => form.setValues(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:set-initial-values`,
    (event) => form.setInitialValues(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:set-errors`,
    (event) => form.setErrors(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:set-field-error`,
    (event) => form.setFieldError(event.detail.path, event.detail.error)
  );
  useFormEvent(
    `mantine-form:${name2}:clear-field-error`,
    (event) => form.clearFieldError(event.detail)
  );
  useFormEvent(`mantine-form:${name2}:clear-errors`, form.clearErrors);
  useFormEvent(`mantine-form:${name2}:reset`, form.reset);
  useFormEvent(`mantine-form:${name2}:validate`, form.validate);
  useFormEvent(
    `mantine-form:${name2}:validate-field`,
    (event) => form.validateField(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:reorder-list-item`,
    (event) => form.reorderListItem(event.detail.path, event.detail.payload)
  );
  useFormEvent(
    `mantine-form:${name2}:remove-list-item`,
    (event) => form.removeListItem(event.detail.path, event.detail.index)
  );
  useFormEvent(
    `mantine-form:${name2}:insert-list-item`,
    (event) => form.insertListItem(event.detail.path, event.detail.item, event.detail.index)
  );
  useFormEvent(
    `mantine-form:${name2}:set-dirty`,
    (event) => form.setDirty(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:set-touched`,
    (event) => form.setTouched(event.detail)
  );
  useFormEvent(
    `mantine-form:${name2}:reset-dirty`,
    (event) => form.resetDirty(event.detail)
  );
  useFormEvent(`mantine-form:${name2}:reset-touched`, form.resetTouched);
}
var import_react146, useIsomorphicEffect2;
var init_actions = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/actions/actions.mjs"() {
    "use client";
    import_react146 = __toESM(require_react(), 1);
    useIsomorphicEffect2 = typeof window !== "undefined" ? import_react146.useLayoutEffect : import_react146.useEffect;
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/get-input-on-change/get-input-on-change.mjs
function getInputOnChange(setValue) {
  return (val) => {
    if (!val) {
      setValue(val);
    } else if (typeof val === "function") {
      setValue(val);
    } else if (typeof val === "object" && "nativeEvent" in val) {
      const { currentTarget } = val;
      if (currentTarget instanceof HTMLInputElement) {
        if (currentTarget.type === "checkbox") {
          setValue(currentTarget.checked);
        } else {
          setValue(currentTarget.value);
        }
      } else if (currentTarget instanceof HTMLTextAreaElement || currentTarget instanceof HTMLSelectElement) {
        setValue(currentTarget.value);
      }
    } else {
      setValue(val);
    }
  };
}
var init_get_input_on_change = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/get-input-on-change/get-input-on-change.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-errors/filter-errors/filter-errors.mjs
function filterErrors(errors) {
  if (errors === null || typeof errors !== "object") {
    return {};
  }
  return Object.keys(errors).reduce((acc, key) => {
    const errorValue = errors[key];
    if (errorValue !== void 0 && errorValue !== null && errorValue !== false) {
      acc[key] = errorValue;
    }
    return acc;
  }, {});
}
var init_filter_errors = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-errors/filter-errors/filter-errors.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-errors/use-form-errors.mjs
function useFormErrors(initialErrors) {
  const [errorsState, setErrorsState] = (0, import_react147.useState)(filterErrors(initialErrors));
  const errorsRef = (0, import_react147.useRef)(errorsState);
  const setErrors = (0, import_react147.useCallback)((errors) => {
    setErrorsState((current) => {
      const newErrors = filterErrors(typeof errors === "function" ? errors(current) : errors);
      errorsRef.current = newErrors;
      return newErrors;
    });
  }, []);
  const clearErrors = (0, import_react147.useCallback)(() => setErrors({}), []);
  const clearFieldError = (0, import_react147.useCallback)(
    (path) => {
      if (errorsRef.current[path] === void 0) {
        return;
      }
      setErrors((current) => {
        const errors = { ...current };
        delete errors[path];
        return errors;
      });
    },
    [errorsState]
  );
  const setFieldError = (0, import_react147.useCallback)(
    (path, error) => {
      if (error == null || error === false) {
        clearFieldError(path);
      } else if (errorsRef.current[path] !== error) {
        setErrors((current) => ({ ...current, [path]: error }));
      }
    },
    [errorsState]
  );
  return {
    errorsState,
    setErrors,
    clearErrors,
    setFieldError,
    clearFieldError
  };
}
var import_react147;
var init_use_form_errors = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-errors/use-form-errors.mjs"() {
    "use client";
    import_react147 = __toESM(require_react(), 1);
    init_filter_errors();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/clear-list-state.mjs
function clearListState(field, state2) {
  if (state2 === null || typeof state2 !== "object") {
    return {};
  }
  const clone = { ...state2 };
  Object.keys(state2).forEach((errorKey) => {
    if (errorKey.includes(`${String(field)}.`)) {
      delete clone[errorKey];
    }
  });
  return clone;
}
var init_clear_list_state = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/clear-list-state.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/change-error-indices.mjs
function getIndexFromKeyAfterPath(key, path) {
  const split = key.substring(path.length + 1).split(".")[0];
  return parseInt(split, 10);
}
function changeErrorIndices(path, index, errors, change) {
  if (index === void 0) {
    return errors;
  }
  const pathString = `${String(path)}`;
  let clearedErrors = errors;
  if (change === -1) {
    clearedErrors = clearListState(`${pathString}.${index}`, clearedErrors);
  }
  const cloned = { ...clearedErrors };
  const changedKeys = /* @__PURE__ */ new Set();
  Object.entries(clearedErrors).filter(([key]) => {
    if (!key.startsWith(`${pathString}.`)) {
      return false;
    }
    const currIndex = getIndexFromKeyAfterPath(key, pathString);
    if (Number.isNaN(currIndex)) {
      return false;
    }
    return currIndex >= index;
  }).forEach(([key, value]) => {
    const currIndex = getIndexFromKeyAfterPath(key, pathString);
    const newKey = key.replace(
      `${pathString}.${currIndex}`,
      `${pathString}.${currIndex + change}`
    );
    cloned[newKey] = value;
    changedKeys.add(newKey);
    if (!changedKeys.has(key)) {
      delete cloned[key];
    }
  });
  return cloned;
}
var init_change_error_indices = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/change-error-indices.mjs"() {
    "use client";
    init_clear_list_state();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/reorder-errors.mjs
function reorderErrors(path, { from, to }, errors) {
  const oldKeyStart = `${path}.${from}`;
  const newKeyStart = `${path}.${to}`;
  const clone = { ...errors };
  Object.keys(errors).every((key) => {
    let oldKey;
    let newKey;
    if (key.startsWith(oldKeyStart)) {
      oldKey = key;
      newKey = key.replace(oldKeyStart, newKeyStart);
    }
    if (key.startsWith(newKeyStart)) {
      oldKey = key.replace(newKeyStart, oldKeyStart);
      newKey = key;
    }
    if (oldKey && newKey) {
      const value1 = clone[oldKey];
      const value2 = clone[newKey];
      value2 === void 0 ? delete clone[oldKey] : clone[oldKey] = value2;
      value1 === void 0 ? delete clone[newKey] : clone[newKey] = value1;
      return false;
    }
    return true;
  });
  return clone;
}
var init_reorder_errors = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/lists/reorder-errors.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/klona@2.0.6/node_modules/klona/full/index.mjs
function set(obj, key, val) {
  if (typeof val.value === "object") val.value = klona(val.value);
  if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === "__proto__") {
    Object.defineProperty(obj, key, val);
  } else obj[key] = val.value;
}
function klona(x3) {
  if (typeof x3 !== "object") return x3;
  var i11 = 0, k4, list3, tmp, str = Object.prototype.toString.call(x3);
  if (str === "[object Object]") {
    tmp = Object.create(x3.__proto__ || null);
  } else if (str === "[object Array]") {
    tmp = Array(x3.length);
  } else if (str === "[object Set]") {
    tmp = /* @__PURE__ */ new Set();
    x3.forEach(function(val) {
      tmp.add(klona(val));
    });
  } else if (str === "[object Map]") {
    tmp = /* @__PURE__ */ new Map();
    x3.forEach(function(val, key) {
      tmp.set(klona(key), klona(val));
    });
  } else if (str === "[object Date]") {
    tmp = /* @__PURE__ */ new Date(+x3);
  } else if (str === "[object RegExp]") {
    tmp = new RegExp(x3.source, x3.flags);
  } else if (str === "[object DataView]") {
    tmp = new x3.constructor(klona(x3.buffer));
  } else if (str === "[object ArrayBuffer]") {
    tmp = x3.slice(0);
  } else if (str.slice(-6) === "Array]") {
    tmp = new x3.constructor(x3);
  }
  if (tmp) {
    for (list3 = Object.getOwnPropertySymbols(x3); i11 < list3.length; i11++) {
      set(tmp, list3[i11], Object.getOwnPropertyDescriptor(x3, list3[i11]));
    }
    for (i11 = 0, list3 = Object.getOwnPropertyNames(x3); i11 < list3.length; i11++) {
      if (Object.hasOwnProperty.call(tmp, k4 = list3[i11]) && tmp[k4] === x3[k4]) continue;
      set(tmp, k4, Object.getOwnPropertyDescriptor(x3, k4));
    }
  }
  return tmp || x3;
}
var init_full = __esm({
  "node_modules/.pnpm/klona@2.0.6/node_modules/klona/full/index.mjs"() {
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-splitted-path.mjs
function getSplittedPath(path) {
  if (typeof path !== "string") {
    return [];
  }
  return path.split(".");
}
var init_get_splitted_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-splitted-path.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-path.mjs
function getPath(path, values2) {
  const splittedPath = getSplittedPath(path);
  if (splittedPath.length === 0 || typeof values2 !== "object" || values2 === null) {
    return void 0;
  }
  let value = values2[splittedPath[0]];
  for (let i11 = 1; i11 < splittedPath.length; i11 += 1) {
    if (value == null) {
      break;
    }
    value = value[splittedPath[i11]];
  }
  return value;
}
var init_get_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-path.mjs"() {
    "use client";
    init_get_splitted_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/set-path.mjs
function setPath(path, value, values2) {
  const splittedPath = getSplittedPath(path);
  if (splittedPath.length === 0) {
    return values2;
  }
  const cloned = klona(values2);
  if (splittedPath.length === 1) {
    cloned[splittedPath[0]] = value;
    return cloned;
  }
  let val = cloned[splittedPath[0]];
  for (let i11 = 1; i11 < splittedPath.length - 1; i11 += 1) {
    if (val === void 0) {
      return cloned;
    }
    val = val[splittedPath[i11]];
  }
  val[splittedPath[splittedPath.length - 1]] = value;
  return cloned;
}
var init_set_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/set-path.mjs"() {
    "use client";
    init_full();
    init_get_splitted_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/reorder-path.mjs
function reorderPath(path, { from, to }, values2) {
  const currentValue = getPath(path, values2);
  if (!Array.isArray(currentValue)) {
    return values2;
  }
  const cloned = [...currentValue];
  const item3 = currentValue[from];
  cloned.splice(from, 1);
  cloned.splice(to, 0, item3);
  return setPath(path, cloned, values2);
}
var init_reorder_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/reorder-path.mjs"() {
    "use client";
    init_get_path();
    init_set_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/insert-path.mjs
function insertPath(path, value, index, values2) {
  const currentValue = getPath(path, values2);
  if (!Array.isArray(currentValue)) {
    return values2;
  }
  const cloned = [...currentValue];
  cloned.splice(typeof index === "number" ? index : cloned.length, 0, value);
  return setPath(path, cloned, values2);
}
var init_insert_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/insert-path.mjs"() {
    "use client";
    init_get_path();
    init_set_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/remove-path.mjs
function removePath(path, index, values2) {
  const currentValue = getPath(path, values2);
  if (!Array.isArray(currentValue)) {
    return values2;
  }
  return setPath(
    path,
    currentValue.filter((_3, itemIndex) => itemIndex !== index),
    values2
  );
}
var init_remove_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/remove-path.mjs"() {
    "use client";
    init_get_path();
    init_set_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/replace-path.mjs
function replacePath(path, item3, index, values2) {
  const currentValue = getPath(path, values2);
  if (!Array.isArray(currentValue)) {
    return values2;
  }
  if (currentValue.length <= index) {
    return values2;
  }
  const cloned = [...currentValue];
  cloned[index] = item3;
  return setPath(path, cloned, values2);
}
var init_replace_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/replace-path.mjs"() {
    "use client";
    init_get_path();
    init_set_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-list/use-form-list.mjs
function useFormList({
  $values,
  $errors,
  $status
}) {
  const reorderListItem = (0, import_react148.useCallback)((path, payload) => {
    $status.clearFieldDirty(path);
    $errors.setErrors((errs) => reorderErrors(path, payload, errs));
    $values.setValues({
      values: reorderPath(path, payload, $values.refValues.current),
      updateState: true
    });
  }, []);
  const removeListItem = (0, import_react148.useCallback)((path, index) => {
    $status.clearFieldDirty(path);
    $errors.setErrors((errs) => changeErrorIndices(path, index, errs, -1));
    $values.setValues({
      values: removePath(path, index, $values.refValues.current),
      updateState: true
    });
  }, []);
  const insertListItem = (0, import_react148.useCallback)((path, item3, index) => {
    $status.clearFieldDirty(path);
    $errors.setErrors((errs) => changeErrorIndices(path, index, errs, 1));
    $values.setValues({
      values: insertPath(path, item3, index, $values.refValues.current),
      updateState: true
    });
  }, []);
  const replaceListItem = (0, import_react148.useCallback)((path, index, item3) => {
    $status.clearFieldDirty(path);
    $values.setValues({
      values: replacePath(path, item3, index, $values.refValues.current),
      updateState: true
    });
  }, []);
  return { reorderListItem, removeListItem, insertListItem, replaceListItem };
}
var import_react148;
var init_use_form_list = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-list/use-form-list.mjs"() {
    "use client";
    import_react148 = __toESM(require_react(), 1);
    init_change_error_indices();
    init_reorder_errors();
    init_full();
    init_reorder_path();
    init_insert_path();
    init_remove_path();
    init_replace_path();
  }
});

// node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js
var require_fast_deep_equal = __commonJS({
  "node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"(exports, module) {
    "use strict";
    module.exports = function equal(a12, b4) {
      if (a12 === b4) return true;
      if (a12 && b4 && typeof a12 == "object" && typeof b4 == "object") {
        if (a12.constructor !== b4.constructor) return false;
        var length, i11, keys3;
        if (Array.isArray(a12)) {
          length = a12.length;
          if (length != b4.length) return false;
          for (i11 = length; i11-- !== 0; )
            if (!equal(a12[i11], b4[i11])) return false;
          return true;
        }
        if (a12.constructor === RegExp) return a12.source === b4.source && a12.flags === b4.flags;
        if (a12.valueOf !== Object.prototype.valueOf) return a12.valueOf() === b4.valueOf();
        if (a12.toString !== Object.prototype.toString) return a12.toString() === b4.toString();
        keys3 = Object.keys(a12);
        length = keys3.length;
        if (length !== Object.keys(b4).length) return false;
        for (i11 = length; i11-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b4, keys3[i11])) return false;
        for (i11 = length; i11-- !== 0; ) {
          var key = keys3[i11];
          if (!equal(a12[key], b4[key])) return false;
        }
        return true;
      }
      return a12 !== a12 && b4 !== b4;
    };
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/get-status/get-status.mjs
function getStatus(status2, path) {
  const paths2 = Object.keys(status2);
  if (typeof path === "string") {
    const nestedPaths = paths2.filter((statusPath) => statusPath.startsWith(`${path}.`));
    return status2[path] || nestedPaths.some((statusPath) => status2[statusPath]) || false;
  }
  return paths2.some((statusPath) => status2[statusPath]);
}
var init_get_status = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/get-status/get-status.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-status/use-form-status.mjs
function useFormStatus({
  initialDirty,
  initialTouched,
  mode,
  $values
}) {
  const [touchedState, setTouchedState] = (0, import_react149.useState)(initialTouched);
  const [dirtyState, setDirtyState] = (0, import_react149.useState)(initialDirty);
  const touchedRef = (0, import_react149.useRef)(initialTouched);
  const dirtyRef = (0, import_react149.useRef)(initialDirty);
  const setTouched = (0, import_react149.useCallback)((values2) => {
    const resolvedValues = typeof values2 === "function" ? values2(touchedRef.current) : values2;
    touchedRef.current = resolvedValues;
    if (mode === "controlled") {
      setTouchedState(resolvedValues);
    }
  }, []);
  const setDirty = (0, import_react149.useCallback)(
    (values2, forceUpdate = false) => {
      const resolvedValues = typeof values2 === "function" ? values2(dirtyRef.current) : values2;
      dirtyRef.current = resolvedValues;
      if (mode === "controlled" || forceUpdate) {
        setDirtyState(resolvedValues);
      }
    },
    []
  );
  const resetTouched = (0, import_react149.useCallback)(() => setTouched({}), []);
  const resetDirty = (0, import_react149.useCallback)((values2) => {
    const newSnapshot = values2 ? { ...$values.refValues.current, ...values2 } : $values.refValues.current;
    $values.setValuesSnapshot(newSnapshot);
    setDirty({});
  }, []);
  const setFieldTouched = (0, import_react149.useCallback)((path, touched) => {
    setTouched((currentTouched) => {
      if (getStatus(currentTouched, path) === touched) {
        return currentTouched;
      }
      return { ...currentTouched, [path]: touched };
    });
  }, []);
  const setFieldDirty = (0, import_react149.useCallback)((path, dirty, forceUpdate) => {
    setDirty((currentDirty) => {
      if (getStatus(currentDirty, path) === dirty) {
        return currentDirty;
      }
      return { ...currentDirty, [path]: dirty };
    }, forceUpdate);
  }, []);
  const setCalculatedFieldDirty = (0, import_react149.useCallback)((path, value) => {
    const currentDirty = getStatus(dirtyRef.current, path);
    const dirty = !(0, import_fast_deep_equal.default)(getPath(path, $values.getValuesSnapshot()), value);
    const clearedState = clearListState(path, dirtyRef.current);
    clearedState[path] = dirty;
    setDirty(clearedState, currentDirty !== dirty);
  }, []);
  const isTouched = (0, import_react149.useCallback)(
    (path) => getStatus(touchedRef.current, path),
    []
  );
  const clearFieldDirty = (0, import_react149.useCallback)(
    (path) => setDirty((current) => {
      if (typeof path !== "string") {
        return current;
      }
      const result = clearListState(path, current);
      delete result[path];
      if ((0, import_fast_deep_equal.default)(result, current)) {
        return current;
      }
      return result;
    }),
    []
  );
  const isDirty2 = (0, import_react149.useCallback)((path) => {
    if (path) {
      const overriddenValue = getPath(path, dirtyRef.current);
      if (typeof overriddenValue === "boolean") {
        return overriddenValue;
      }
      const sliceOfValues = getPath(path, $values.refValues.current);
      const sliceOfInitialValues = getPath(path, $values.valuesSnapshot.current);
      return !(0, import_fast_deep_equal.default)(sliceOfValues, sliceOfInitialValues);
    }
    const isOverridden = Object.keys(dirtyRef.current).length > 0;
    if (isOverridden) {
      return getStatus(dirtyRef.current);
    }
    return !(0, import_fast_deep_equal.default)($values.refValues.current, $values.valuesSnapshot.current);
  }, []);
  const getDirty = (0, import_react149.useCallback)(() => dirtyRef.current, []);
  const getTouched = (0, import_react149.useCallback)(() => touchedRef.current, []);
  return {
    touchedState,
    dirtyState,
    touchedRef,
    dirtyRef,
    setTouched,
    setDirty,
    resetDirty,
    resetTouched,
    isTouched,
    setFieldTouched,
    setFieldDirty,
    setTouchedState,
    setDirtyState,
    clearFieldDirty,
    isDirty: isDirty2,
    getDirty,
    getTouched,
    setCalculatedFieldDirty
  };
}
var import_react149, import_fast_deep_equal;
var init_use_form_status = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-status/use-form-status.mjs"() {
    "use client";
    import_react149 = __toESM(require_react(), 1);
    import_fast_deep_equal = __toESM(require_fast_deep_equal(), 1);
    init_get_status();
    init_clear_list_state();
    init_get_path();
    init_full();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-values/use-form-values.mjs
function useFormValues({
  initialValues,
  onValuesChange,
  mode
}) {
  const initialized = (0, import_react150.useRef)(false);
  const [stateValues, setStateValues] = (0, import_react150.useState)(initialValues || {});
  const refValues = (0, import_react150.useRef)(stateValues);
  const valuesSnapshot = (0, import_react150.useRef)(stateValues);
  const setValues = (0, import_react150.useCallback)(
    ({
      values: values2,
      subscribers,
      updateState = true,
      mergeWithPreviousValues = true
    }) => {
      const previousValues = refValues.current;
      const resolvedValues = values2 instanceof Function ? values2(refValues.current) : values2;
      const updatedValues = mergeWithPreviousValues ? { ...previousValues, ...resolvedValues } : resolvedValues;
      refValues.current = updatedValues;
      updateState && setStateValues(updatedValues);
      onValuesChange?.(updatedValues, previousValues);
      subscribers?.filter(Boolean).forEach((subscriber) => subscriber({ updatedValues, previousValues }));
    },
    [onValuesChange]
  );
  const setFieldValue = (0, import_react150.useCallback)(
    (payload) => {
      const currentValue = getPath(payload.path, refValues.current);
      const updatedValue = payload.value instanceof Function ? payload.value(currentValue) : payload.value;
      if (currentValue !== updatedValue) {
        const previousValues = refValues.current;
        const updatedValues = setPath(payload.path, updatedValue, refValues.current);
        setValues({ values: updatedValues, updateState: payload.updateState });
        payload.subscribers?.filter(Boolean).forEach(
          (subscriber) => subscriber({ path: payload.path, updatedValues, previousValues })
        );
      }
    },
    [setValues]
  );
  const setValuesSnapshot = (0, import_react150.useCallback)((payload) => {
    valuesSnapshot.current = payload;
  }, []);
  const initialize = (0, import_react150.useCallback)(
    (values2, onInitialize) => {
      if (!initialized.current) {
        initialized.current = true;
        setValues({ values: values2, updateState: mode === "controlled" });
        setValuesSnapshot(values2);
        onInitialize();
      }
    },
    [setValues]
  );
  const resetValues = (0, import_react150.useCallback)(() => {
    setValues({
      values: valuesSnapshot.current,
      updateState: true,
      mergeWithPreviousValues: false
    });
  }, [setValues]);
  const getValues = (0, import_react150.useCallback)(() => refValues.current, []);
  const getValuesSnapshot = (0, import_react150.useCallback)(() => valuesSnapshot.current, []);
  return {
    initialized,
    stateValues,
    refValues,
    valuesSnapshot,
    setValues,
    setFieldValue,
    resetValues,
    setValuesSnapshot,
    initialize,
    getValues,
    getValuesSnapshot
  };
}
var import_react150;
var init_use_form_values = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-values/use-form-values.mjs"() {
    "use client";
    import_react150 = __toESM(require_react(), 1);
    init_get_path();
    init_set_path();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-watch/use-form-watch.mjs
function useFormWatch({
  $status
}) {
  const subscribers = (0, import_react151.useRef)(
    {}
  );
  const watch = (0, import_react151.useCallback)((path, callback) => {
    (0, import_react151.useEffect)(() => {
      subscribers.current[path] = subscribers.current[path] || [];
      subscribers.current[path].push(callback);
      return () => {
        subscribers.current[path] = subscribers.current[path].filter((cb) => cb !== callback);
      };
    }, [callback]);
  }, []);
  const getFieldSubscribers = (0, import_react151.useCallback)((path) => {
    if (!subscribers.current[path]) {
      return [];
    }
    return subscribers.current[path].map(
      (callback) => (input) => callback({
        previousValue: getPath(path, input.previousValues),
        value: getPath(path, input.updatedValues),
        touched: $status.isTouched(path),
        dirty: $status.isDirty(path)
      })
    );
  }, []);
  return {
    subscribers,
    watch,
    getFieldSubscribers
  };
}
var import_react151;
var init_use_form_watch = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/hooks/use-form-watch/use-form-watch.mjs"() {
    "use client";
    import_react151 = __toESM(require_react(), 1);
    init_get_path();
    init_full();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-data-path.mjs
function getDataPath(formName, fieldPath) {
  return formName ? `${formName}-${fieldPath.toString()}` : fieldPath.toString();
}
var init_get_data_path = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/paths/get-data-path.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/validate-values.mjs
function getValidationResults(errors) {
  const filteredErrors = filterErrors(errors);
  return { hasErrors: Object.keys(filteredErrors).length > 0, errors: filteredErrors };
}
function validateRulesRecord(rules, values2, path = "", errors = {}) {
  if (typeof rules !== "object" || rules === null) {
    return errors;
  }
  return Object.keys(rules).reduce((acc, ruleKey) => {
    const rule = rules[ruleKey];
    const rulePath = `${path === "" ? "" : `${path}.`}${ruleKey}`;
    const value = getPath(rulePath, values2);
    let arrayValidation = false;
    if (typeof rule === "function") {
      acc[rulePath] = rule(value, values2, rulePath);
    }
    if (typeof rule === "object" && Array.isArray(value)) {
      arrayValidation = true;
      value.forEach(
        (_item, index) => validateRulesRecord(rule, values2, `${rulePath}.${index}`, acc)
      );
      if (formRootRule in rule) {
        acc[rulePath] = rule[formRootRule](value, values2, rulePath);
      }
    }
    if (typeof rule === "object" && typeof value === "object" && value !== null) {
      if (!arrayValidation) {
        validateRulesRecord(rule, values2, rulePath, acc);
      }
      if (formRootRule in rule) {
        acc[rulePath] = rule[formRootRule](value, values2, rulePath);
      }
    }
    return acc;
  }, errors);
}
function validateValues(validate2, values2) {
  if (typeof validate2 === "function") {
    return getValidationResults(validate2(values2));
  }
  return getValidationResults(validateRulesRecord(validate2, values2));
}
var formRootRule;
var init_validate_values = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/validate-values.mjs"() {
    "use client";
    init_filter_errors();
    init_get_path();
    init_full();
    formRootRule = Symbol("root-rule");
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/validate-field-value.mjs
function validateFieldValue(path, rules, values2) {
  if (typeof path !== "string") {
    return { hasError: false, error: null };
  }
  const results = validateValues(rules, values2);
  const pathInError = Object.keys(results.errors).find(
    (errorKey) => path.split(".").every((pathPart, i11) => pathPart === errorKey.split(".")[i11])
  );
  return { hasError: !!pathInError, error: pathInError ? results.errors[pathInError] : null };
}
var init_validate_field_value = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/validate-field-value.mjs"() {
    "use client";
    init_validate_values();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/form-index.mjs
var FORM_INDEX;
var init_form_index = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/form-index.mjs"() {
    "use client";
    FORM_INDEX = "__MANTINE_FORM_INDEX__";
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/should-validate-on-change.mjs
function shouldValidateOnChange(path, validateInputOnChange) {
  if (!validateInputOnChange) {
    return false;
  }
  if (typeof validateInputOnChange === "boolean") {
    return validateInputOnChange;
  }
  if (Array.isArray(validateInputOnChange)) {
    return validateInputOnChange.includes(path.replace(/[.][0-9]+/g, `.${FORM_INDEX}`));
  }
  return false;
}
var init_should_validate_on_change = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/validate/should-validate-on-change.mjs"() {
    "use client";
    init_form_index();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/use-form.mjs
function useForm({
  name: name2,
  mode = "controlled",
  initialValues,
  initialErrors = {},
  initialDirty = {},
  initialTouched = {},
  clearInputErrorOnChange = true,
  validateInputOnChange = false,
  validateInputOnBlur = false,
  onValuesChange,
  transformValues = (values2) => values2,
  enhanceGetInputProps,
  validate: rules,
  onSubmitPreventDefault = "always",
  touchTrigger = "change"
} = {}) {
  const $errors = useFormErrors(initialErrors);
  const $values = useFormValues({ initialValues, onValuesChange, mode });
  const $status = useFormStatus({ initialDirty, initialTouched, $values, mode });
  const $list = useFormList({ $values, $errors, $status });
  const $watch = useFormWatch({ $status });
  const [formKey, setFormKey] = (0, import_react152.useState)(0);
  const [fieldKeys, setFieldKeys] = (0, import_react152.useState)({});
  const [submitting, setSubmitting] = (0, import_react152.useState)(false);
  const reset = (0, import_react152.useCallback)(() => {
    $values.resetValues();
    $errors.clearErrors();
    $status.resetDirty();
    $status.resetTouched();
    mode === "uncontrolled" && setFormKey((key2) => key2 + 1);
  }, []);
  const handleValuesChanges = (0, import_react152.useCallback)(
    (previousValues) => {
      clearInputErrorOnChange && $errors.clearErrors();
      mode === "uncontrolled" && setFormKey((key2) => key2 + 1);
      Object.keys($watch.subscribers.current).forEach((path) => {
        const value = getPath(path, $values.refValues.current);
        const previousValue = getPath(path, previousValues);
        if (value !== previousValue) {
          $watch.getFieldSubscribers(path).forEach((cb) => cb({ previousValues, updatedValues: $values.refValues.current }));
        }
      });
    },
    [clearInputErrorOnChange]
  );
  const initialize = (0, import_react152.useCallback)(
    (values2) => {
      const previousValues = $values.refValues.current;
      $values.initialize(values2, () => mode === "uncontrolled" && setFormKey((key2) => key2 + 1));
      handleValuesChanges(previousValues);
    },
    [handleValuesChanges]
  );
  const setFieldValue = (0, import_react152.useCallback)(
    (path, value, options) => {
      const shouldValidate = shouldValidateOnChange(path, validateInputOnChange);
      const resolvedValue = value instanceof Function ? value(getPath(path, $values.refValues.current)) : value;
      $status.setCalculatedFieldDirty(path, resolvedValue);
      touchTrigger === "change" && $status.setFieldTouched(path, true);
      !shouldValidate && clearInputErrorOnChange && $errors.clearFieldError(path);
      $values.setFieldValue({
        path,
        value,
        updateState: mode === "controlled",
        subscribers: [
          ...$watch.getFieldSubscribers(path),
          shouldValidate ? (payload) => {
            const validationResults = validateFieldValue(path, rules, payload.updatedValues);
            validationResults.hasError ? $errors.setFieldError(path, validationResults.error) : $errors.clearFieldError(path);
          } : null,
          options?.forceUpdate !== false && mode !== "controlled" ? () => setFieldKeys((keys3) => ({
            ...keys3,
            [path]: (keys3[path] || 0) + 1
          })) : null
        ]
      });
    },
    [onValuesChange, rules]
  );
  const setValues = (0, import_react152.useCallback)(
    (values2) => {
      const previousValues = $values.refValues.current;
      $values.setValues({ values: values2, updateState: mode === "controlled" });
      handleValuesChanges(previousValues);
    },
    [onValuesChange, handleValuesChanges]
  );
  const validate2 = (0, import_react152.useCallback)(() => {
    const results = validateValues(rules, $values.refValues.current);
    $errors.setErrors(results.errors);
    return results;
  }, [rules]);
  const validateField = (0, import_react152.useCallback)(
    (path) => {
      const results = validateFieldValue(path, rules, $values.refValues.current);
      results.hasError ? $errors.setFieldError(path, results.error) : $errors.clearFieldError(path);
      return results;
    },
    [rules]
  );
  const getInputProps = (path, { type = "input", withError = true, withFocus = true, ...otherOptions } = {}) => {
    const onChange = getInputOnChange(
      (value) => setFieldValue(path, value, { forceUpdate: false })
    );
    const payload = { onChange, "data-path": getDataPath(name2, path) };
    if (withError) {
      payload.error = $errors.errorsState[path];
    }
    if (type === "checkbox") {
      payload[mode === "controlled" ? "checked" : "defaultChecked"] = getPath(
        path,
        $values.refValues.current
      );
    } else {
      payload[mode === "controlled" ? "value" : "defaultValue"] = getPath(
        path,
        $values.refValues.current
      );
    }
    if (withFocus) {
      payload.onFocus = () => $status.setFieldTouched(path, true);
      payload.onBlur = () => {
        if (shouldValidateOnChange(path, validateInputOnBlur)) {
          const validationResults = validateFieldValue(path, rules, $values.refValues.current);
          validationResults.hasError ? $errors.setFieldError(path, validationResults.error) : $errors.clearFieldError(path);
        }
      };
    }
    return Object.assign(
      payload,
      enhanceGetInputProps?.({
        inputProps: payload,
        field: path,
        options: { type, withError, withFocus, ...otherOptions },
        form
      })
    );
  };
  const onSubmit = (handleSubmit, handleValidationFailure) => (event) => {
    if (onSubmitPreventDefault === "always") {
      event?.preventDefault();
    }
    const results = validate2();
    if (results.hasErrors) {
      if (onSubmitPreventDefault === "validation-failed") {
        event?.preventDefault();
      }
      handleValidationFailure?.(results.errors, $values.refValues.current, event);
    } else {
      const submitResult = handleSubmit?.(
        transformValues($values.refValues.current),
        event
      );
      if (submitResult instanceof Promise) {
        setSubmitting(true);
        submitResult.finally(() => setSubmitting(false));
      }
    }
  };
  const getTransformedValues = (input) => transformValues(input || $values.refValues.current);
  const onReset = (0, import_react152.useCallback)((event) => {
    event.preventDefault();
    reset();
  }, []);
  const isValid2 = (0, import_react152.useCallback)(
    (path) => path ? !validateFieldValue(path, rules, $values.refValues.current).hasError : !validateValues(rules, $values.refValues.current).hasErrors,
    [rules]
  );
  const key = (path) => `${formKey}-${path}-${fieldKeys[path] || 0}`;
  const getInputNode = (0, import_react152.useCallback)(
    (path) => document.querySelector(`[data-path="${getDataPath(name2, path)}"]`),
    []
  );
  const form = {
    watch: $watch.watch,
    initialized: $values.initialized.current,
    values: $values.stateValues,
    getValues: $values.getValues,
    setInitialValues: $values.setValuesSnapshot,
    initialize,
    setValues,
    setFieldValue,
    submitting,
    setSubmitting,
    errors: $errors.errorsState,
    setErrors: $errors.setErrors,
    setFieldError: $errors.setFieldError,
    clearFieldError: $errors.clearFieldError,
    clearErrors: $errors.clearErrors,
    resetDirty: $status.resetDirty,
    setTouched: $status.setTouched,
    setDirty: $status.setDirty,
    isTouched: $status.isTouched,
    resetTouched: $status.resetTouched,
    isDirty: $status.isDirty,
    getTouched: $status.getTouched,
    getDirty: $status.getDirty,
    reorderListItem: $list.reorderListItem,
    insertListItem: $list.insertListItem,
    removeListItem: $list.removeListItem,
    replaceListItem: $list.replaceListItem,
    reset,
    validate: validate2,
    validateField,
    getInputProps,
    onSubmit,
    onReset,
    isValid: isValid2,
    getTransformedValues,
    key,
    getInputNode
  };
  useFormActions(name2, form);
  return form;
}
var import_react152;
var init_use_form = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/use-form.mjs"() {
    "use client";
    import_react152 = __toESM(require_react(), 1);
    init_actions();
    init_get_input_on_change();
    init_use_form_errors();
    init_use_form_list();
    init_use_form_status();
    init_use_form_values();
    init_use_form_watch();
    init_get_path();
    init_full();
    init_get_data_path();
    init_validate_values();
    init_validate_field_value();
    init_should_validate_on_change();
  }
});

// node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/index.mjs
var init_esm4 = __esm({
  "node_modules/.pnpm/@mantine+form@7.17.1_react@19.1.0/node_modules/@mantine/form/esm/index.mjs"() {
    init_use_form();
  }
});

// node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js
var require_use_sync_external_store_shim_production = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var useState23 = React8.useState;
    var useEffect30 = React8.useEffect;
    var useLayoutEffect5 = React8.useLayoutEffect;
    var useDebugValue = React8.useDebugValue;
    function useSyncExternalStore$2(subscribe, getSnapshot) {
      var value = getSnapshot(), _useState = useState23({ inst: { value, getSnapshot } }), inst = _useState[0].inst, forceUpdate = _useState[1];
      useLayoutEffect5(
        function() {
          inst.value = value;
          inst.getSnapshot = getSnapshot;
          checkIfSnapshotChanged(inst) && forceUpdate({ inst });
        },
        [subscribe, value, getSnapshot]
      );
      useEffect30(
        function() {
          checkIfSnapshotChanged(inst) && forceUpdate({ inst });
          return subscribe(function() {
            checkIfSnapshotChanged(inst) && forceUpdate({ inst });
          });
        },
        [subscribe]
      );
      useDebugValue(value);
      return value;
    }
    function checkIfSnapshotChanged(inst) {
      var latestGetSnapshot = inst.getSnapshot;
      inst = inst.value;
      try {
        var nextValue = latestGetSnapshot();
        return !objectIs(inst, nextValue);
      } catch (error) {
        return true;
      }
    }
    function useSyncExternalStore$1(subscribe, getSnapshot) {
      return getSnapshot();
    }
    var shim = "undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement ? useSyncExternalStore$1 : useSyncExternalStore$2;
    exports.useSyncExternalStore = void 0 !== React8.useSyncExternalStore ? React8.useSyncExternalStore : shim;
  }
});

// node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_use_sync_external_store_shim_production();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js
var require_with_selector_production = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js"(exports) {
    "use strict";
    var React8 = require_react();
    var shim = require_shim();
    function is2(x3, y3) {
      return x3 === y3 && (0 !== x3 || 1 / x3 === 1 / y3) || x3 !== x3 && y3 !== y3;
    }
    var objectIs = "function" === typeof Object.is ? Object.is : is2;
    var useSyncExternalStore2 = shim.useSyncExternalStore;
    var useRef23 = React8.useRef;
    var useEffect30 = React8.useEffect;
    var useMemo10 = React8.useMemo;
    var useDebugValue = React8.useDebugValue;
    exports.useSyncExternalStoreWithSelector = function(subscribe, getSnapshot, getServerSnapshot, selector, isEqual2) {
      var instRef = useRef23(null);
      if (null === instRef.current) {
        var inst = { hasValue: false, value: null };
        instRef.current = inst;
      } else inst = instRef.current;
      instRef = useMemo10(
        function() {
          function memoizedSelector(nextSnapshot) {
            if (!hasMemo) {
              hasMemo = true;
              memoizedSnapshot = nextSnapshot;
              nextSnapshot = selector(nextSnapshot);
              if (void 0 !== isEqual2 && inst.hasValue) {
                var currentSelection = inst.value;
                if (isEqual2(currentSelection, nextSnapshot))
                  return memoizedSelection = currentSelection;
              }
              return memoizedSelection = nextSnapshot;
            }
            currentSelection = memoizedSelection;
            if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;
            var nextSelection = selector(nextSnapshot);
            if (void 0 !== isEqual2 && isEqual2(currentSelection, nextSelection))
              return memoizedSnapshot = nextSnapshot, currentSelection;
            memoizedSnapshot = nextSnapshot;
            return memoizedSelection = nextSelection;
          }
          var hasMemo = false, memoizedSnapshot, memoizedSelection, maybeGetServerSnapshot = void 0 === getServerSnapshot ? null : getServerSnapshot;
          return [
            function() {
              return memoizedSelector(getSnapshot());
            },
            null === maybeGetServerSnapshot ? void 0 : function() {
              return memoizedSelector(maybeGetServerSnapshot());
            }
          ];
        },
        [getSnapshot, getServerSnapshot, selector, isEqual2]
      );
      var value = useSyncExternalStore2(subscribe, instRef[0], instRef[1]);
      useEffect30(
        function() {
          inst.hasValue = true;
          inst.value = value;
        },
        [value]
      );
      useDebugValue(value);
      return value;
    };
  }
});

// node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/shim/with-selector.js
var require_with_selector = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.4.0_react@19.1.0/node_modules/use-sync-external-store/shim/with-selector.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_with_selector_production();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/effector-react@23.3.0_effector@23.3.0_react@19.1.0/node_modules/effector-react/effector-react.mjs
function e2(e12, t13) {
  return t13.displayName = e12, t13;
}
function t2(e12, t13) {
  const n12 = ae.unit(e12);
  let r8 = {};
  n12 ? r8 = { unit: e12 } : "@@unitShape" in e12 ? "function" == typeof e12["@@unitShape"] ? r8 = e12["@@unitShape"]() : E2("expect @@unitShape to be a function") : r8 = e12;
  const o6 = Array.isArray(r8), s37 = import_react153.default.useRef({ stale: 1, justSubscribed: 0, scope: t13 }), [u4, c13, a12, i11, l9] = import_react153.default.useMemo(() => {
    s37.current.stale = 1;
    const e13 = Array.isArray(r8) ? [] : {}, o7 = [], u5 = [], c14 = [], a13 = [];
    for (const s38 in r8) {
      if (!{}.hasOwnProperty.call(r8, s38)) continue;
      const i12 = r8[s38];
      ae.unit(i12) || E2(`expect useUnit ${n12 ? "argument" : `value in key "${s38}"`} to be a unit`), ae.event(i12) || ae.effect(i12) ? (e13[s38] = t13 ? F(i12, { scope: t13 }) : i12, c14.push(s38), a13.push(i12)) : (e13[s38] = null, o7.push(s38), u5.push(i12));
    }
    return [e13, o7, u5, c14, a13];
  }, [s37, t13, ...Object.keys(r8), ...Object.values(r8)]), f11 = import_react153.default.useRef({ value: u4, storeKeys: c13, eventKeys: i11, eventValues: l9 }), p13 = import_react153.default.useCallback((e13) => {
    const n13 = s37.current;
    return n13.justSubscribed = 1, D({ unit: a12, fn: () => {
      n13.stale || (n13.stale = 1, e13());
    }, scope: t13, batch: 1 });
  }, [a12, t13, f11, s37]), d6 = import_react153.default.useCallback(() => {
    const e13 = f11.current, r9 = s37.current;
    let p14, d7 = 0;
    const y3 = e13.value, m11 = e13.storeKeys, v5 = e13.eventKeys, b4 = e13.eventValues, h8 = t13 !== r9.scope;
    if (r9.stale || r9.justSubscribed || h8) {
      d7 = !r9.justSubscribed || h8, p14 = o6 ? [...u4] : { ...u4 }, m11.length === c13.length && v5.length === i11.length || (d7 = 1);
      for (let e14 = 0; e14 < c13.length; e14++) {
        const n13 = U2(a12[e14], t13), r10 = c13[e14];
        d7 || (d7 = m11.includes(r10) ? y3[r10] !== n13 : 1), p14[r10] = n13;
      }
      for (let e14 = 0; e14 < i11.length; e14++) {
        const t14 = l9[e14], n13 = i11[e14];
        d7 || (d7 = v5.includes(n13) ? b4[v5.indexOf(n13)] !== t14 : 1);
      }
    }
    return d7 && (e13.value = p14), e13.storeKeys = c13, e13.eventKeys = i11, e13.eventValues = l9, r9.stale = 0, r9.justSubscribed = !d7, r9.scope = t13, n12 ? e13.value.unit : e13.value;
  }, [p13, a12, l9, t13, f11, s37]);
  return O(p13, d6, d6);
}
function n2([e12, t13], n12) {
  let r8, o6, s37, u4, c13 = K2;
  t13 ? (r8 = t13, s37 = e12, u4 = []) : { fn: r8, store: s37, keys: u4, defaultValue: o6, updateFilter: c13 = K2 } = e12, ae.store(s37) || E2("useStoreMap expects a store"), Array.isArray(u4) || E2("useStoreMap expects an array as keys"), "function" != typeof r8 && E2("useStoreMap expects a function");
  const a12 = import_react153.default.useCallback((e13) => D({ unit: s37, fn: e13, scope: n12 }), [s37, n12]), i11 = import_react153.default.useCallback(() => U2(s37, n12), [s37, n12]), l9 = import_react153.default.useRef(), f11 = import_react153.default.useRef(), p13 = import_react153.default.useRef(u4);
  return R2(a12, i11, i11, (e13) => {
    if (l9.current !== e13 || !((e14, t14) => {
      if (!e14 || !t14 || e14.length !== t14.length) return 0;
      let n13 = 1;
      for (let r9 = 0; r9 < e14.length; r9++) if (e14[r9] !== t14[r9]) {
        n13 = 0;
        break;
      }
      return n13;
    })(p13.current, u4)) {
      let t14 = r8(e13, u4);
      void 0 === t14 && void 0 !== o6 && (t14 = o6), l9.current = e13, p13.current = u4, void 0 !== t14 && (f11.current = t14);
    }
    return f11.current;
  }, (e13, t14) => !c13(t14, e13));
}
function o2(e12) {
  const t13 = import_react153.default.useContext(V2);
  return e12 && !t13 && E2("No scope found, consider adding <Provider> to app root"), t13;
}
function c2(e12, n12) {
  return t2(e12, o2(null == n12 ? void 0 : n12.forceScope));
}
function i(r8, s37, u4) {
  return ((r9, o6, s38) => {
    let u5, c13, a12, i11 = [];
    "object" == typeof o6 && null !== o6 ? (o6.keys && (i11 = o6.keys), { fn: u5, getKey: c13, placeholder: a12 } = o6) : u5 = o6, ae.store(r9) || E2("expect useList first argument to be a store"), "function" != typeof u5 && E2("expect useList's renderItem to be a function"), Array.isArray(i11) || E2("expect useList's keys to be an array");
    const l9 = import_react153.default.useMemo(() => {
      const t13 = e2(`${r9.shortName || "Unknown"}.Item`, (e12) => {
        const { index: t14, keys: o7, keyVal: u6, value: c14 } = e12;
        if (f11.current[1]) return f11.current[0](c14, u6);
        const a13 = n2([{ store: r9, keys: [t14, ...o7], fn: (e13, t15) => e13[t15[0]] }], s38);
        return f11.current[0](a13, t14);
      });
      return import_react153.default.memo(t13);
    }, [r9, s38, !!c13]), f11 = import_react153.default.useRef([u5, c13]);
    f11.current = [u5, c13];
    const p13 = import_react153.default.useMemo(() => i11, i11);
    if (c13) {
      const e12 = t2(r9, s38);
      return 0 === e12.length && a12 ? a12 : e12.map((e13) => {
        const t13 = f11.current[1](e13);
        return import_react153.default.createElement(l9, { keyVal: t13, key: t13, keys: p13, value: e13 });
      });
    }
    {
      const e12 = n2([{ store: r9, keys: [r9], fn: (e13) => e13.length }], s38);
      return 0 === e12 && a12 ? a12 : Array.from({ length: e12 }, (e13, t13) => import_react153.default.createElement(l9, { index: t13, key: t13, keys: p13 }));
    }
  })(r8, s37, o2(null == u4 ? void 0 : u4.forceScope));
}
var import_react153, import_with_selector, import_shim, E2, M2, O, R2, U2, K2, V2, L2;
var init_effector_react = __esm({
  "node_modules/.pnpm/effector-react@23.3.0_effector@23.3.0_react@19.1.0/node_modules/effector-react/effector-react.mjs"() {
    import_react153 = __toESM(require_react(), 1);
    init_effector();
    import_with_selector = __toESM(require_with_selector(), 1);
    import_shim = __toESM(require_shim(), 1);
    E2 = (e12) => {
      throw Error(e12);
    };
    M2 = "undefined" != typeof window ? import_react153.default.useLayoutEffect : import_react153.default.useEffect;
    ({ useSyncExternalStore: O } = import_shim.default);
    ({ useSyncExternalStoreWithSelector: R2 } = import_with_selector.default);
    U2 = (e12, t13) => t13 ? t13.getState(e12) : e12.getState();
    K2 = (e12, t13) => e12 !== t13;
    V2 = import_react153.default.createContext(null);
    ({ Provider: L2 } = V2);
  }
});

// node_modules/.pnpm/mantine-form-zod-resolver@1.1.0_@mantine+form@7.17.1_react@19.1.0__zod@3.24.3/node_modules/mantine-form-zod-resolver/dist/esm/index.mjs
function zodResolver(schema, options) {
  return (values2) => {
    const parsed = schema.safeParse(values2);
    if (parsed.success) {
      return {};
    }
    const results = {};
    if ("error" in parsed) {
      if (options?.errorPriority === "first") {
        parsed.error.errors.reverse();
      }
      parsed.error.errors.forEach((error) => {
        results[error.path.join(".")] = error.message;
      });
    }
    return results;
  };
}
var init_esm5 = __esm({
  "node_modules/.pnpm/mantine-form-zod-resolver@1.1.0_@mantine+form@7.17.1_react@19.1.0__zod@3.24.3/node_modules/mantine-form-zod-resolver/dist/esm/index.mjs"() {
  }
});

// node_modules/.pnpm/@farfetched+core@0.13.1_effector@23.3.0/node_modules/@farfetched/core/dist/core.js
function D2({
  field: e12
}) {
  let t13;
  if (e12 === void 0)
    t13 = g((r8) => null, {
      serialize: "ignore",
      name: "ff.$target/undefined",
      sid: "ff.$target/undefined"
    });
  else if (ae.store(e12))
    t13 = h(
      e12,
      (n12) => (a12) => n12 ?? null
    );
  else if (e12 != null && e12.source && (e12 != null && e12.fn)) {
    const r8 = e12;
    t13 = h(
      r8.source,
      (n12) => (a12) => r8.fn(a12, n12) ?? null
    );
  } else if (typeof e12 == "function") {
    const r8 = e12;
    t13 = g(
      (n12) => r8(n12) ?? null,
      {
        serialize: "ignore",
        name: "ff.$target/callbackField",
        sid: "ff.$target/$callbackField"
      }
    );
  } else {
    const r8 = e12;
    t13 = g((n12) => r8 ?? null, {
      serialize: "ignore",
      name: "ff.$target/valueField",
      sid: "ff.$target/$valueField"
    });
  }
  return t13;
}
function ht2(e12) {
  let t13;
  if (e12 === void 0)
    t13 = v(async (r8) => null);
  else if (ae.store(e12))
    t13 = b({
      source: e12,
      async effect(n12, a12) {
        return n12;
      }
    });
  else if (e12.source && e12.fn) {
    const r8 = e12;
    t13 = b({
      source: r8.source,
      async effect(n12, a12) {
        return r8.fn(a12, n12);
      }
    });
  } else if (typeof e12 == "function") {
    const r8 = e12;
    t13 = v(async (n12) => r8(n12));
  } else {
    const r8 = e12;
    t13 = v(async (n12) => r8);
  }
  return t13;
}
function R3(e12) {
  return e12 ? ae.store(e12) ? e12 : g(e12, {
    serialize: "ignore",
    name: "ff.$target/valueField",
    sid: "ff.$target/$valueField"
  }) : g(null, {
    serialize: "ignore",
    name: "ff.$target/undefined",
    sid: "ff.$target/$undefined"
  });
}
function le2(e12, t13) {
  let r8 = [], n12 = () => false;
  Array.isArray(e12) ? (r8 = e12, n12 = t13) : Array.isArray(e12.stores) && (r8 = e12.stores, n12 = e12.predicate);
  let a12;
  gt2(n12) ? a12 = n12 : ae.store(n12) ? a12 = n12.map((i11) => (l9) => i11 === l9) : a12 = (i11) => i11 === n12;
  const o6 = h(r8);
  return h(a12, o6, (i11, l9) => l9.every(i11));
}
function gt2(e12) {
  return typeof e12 == "function";
}
function H2(e12) {
  return e12.map((t13) => !t13);
}
function De2(...e12) {
  return le2({ predicate: true, stores: e12 });
}
function je2({
  clock: e12,
  until: t13
}) {
  const r8 = p2(), n12 = g(false, {
    serialize: "ignore",
    name: "ff.$fired",
    sid: "ff.$fired"
  }).on(r8, () => true).on(e12, () => false);
  return M({
    clock: [e12, t13],
    source: e12,
    filter: De2(t13, H2(n12)),
    target: r8
  }), r8;
}
function se2(e12) {
  if (e12 === "ignore")
    return "ignore";
}
function $t2({
  clock: e12
}) {
  const t13 = g(Date.now(), {
    name: "ff.$time",
    sid: "ff.$time"
  });
  return M({
    clock: e12,
    fn: () => {
    },
    target: ke2
  }), M({ clock: ke2.doneData, target: t13 }), t13;
}
function E3(e12) {
  return e12.map((t13) => t13, { skipVoid: false });
}
function vt2() {
  const e12 = {
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    resolve: () => {
    },
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    reject: () => {
    },
    // @ts-expect-error it will be set later
    promise: null
  };
  return e12.promise = new Promise((t13, r8) => {
    e12.resolve = t13, e12.reject = r8;
  }), e12.promise.catch(() => {
  }), e12;
}
function Z2(e12, t13) {
  try {
    if (e12 === t13 || Number.isNaN(e12) && Number.isNaN(t13))
      return true;
    const r8 = Ae2(e12), n12 = Ae2(t13);
    if (r8 !== n12)
      return false;
    if (r8 === "pure-object") {
      if (e12 === t13)
        return true;
      const a12 = Object.keys(e12), o6 = Object.keys(t13).length;
      if (a12.length !== o6)
        return false;
      for (let s37 = 0, i11 = a12.length; s37 < i11; s37++) {
        const l9 = a12[s37];
        if (!Object.prototype.hasOwnProperty.call(t13, a12[s37]))
          return false;
        const y3 = e12[l9], g9 = t13[l9];
        if (y3 === e12 || g9 === t13 || y3 === t13 || g9 === e12)
          return y3 === g9;
        if (!Z2(y3, g9))
          return false;
      }
      return true;
    } else if (r8 === "array") {
      if (e12.length === t13.length)
        for (let a12 = 0; a12 < e12.length; a12++) {
          const o6 = e12[a12], s37 = t13[a12];
          if (o6 === e12 || s37 === t13 || o6 === t13 || s37 === e12)
            return o6 === s37;
          if (!Z2(o6, s37))
            return false;
        }
      else
        return false;
      return true;
    } else if (r8 === "object" && e12.valueOf && t13.valueOf)
      return e12.valueOf() === t13.valueOf();
  } catch {
  }
  return false;
}
function wt2(e12) {
  if (Array.isArray(e12))
    return true;
  const t13 = e12.length;
  return typeof t13 == "number" && t13 > -1 ? t13 ? 0 in e12 && t13 - 1 in e12 : true : false;
}
function Ae2(e12) {
  const t13 = typeof e12;
  return t13 === "object" ? e12 === null ? "null" : wt2(e12) ? "array" : e12.constructor === Object || Object.getPrototypeOf(e12) === null ? "pure-object" : "object" : t13;
}
function U3(e12) {
  return (t13) => t13[e12];
}
function Oe2() {
  var e12, t13;
  return ((t13 = (e12 = a({ regional: true }).family.owners[0]) == null ? void 0 : e12.meta) == null ? void 0 : t13.name) ?? void 0;
}
function ee2(e12) {
  return {
    ...e12,
    errorType: Re2,
    explanation: "Response was considered as invalid against a given contract"
  };
}
function Ce2() {
  return {
    errorType: Ne2,
    explanation: "Request was cancelled due to concurrency policy"
  };
}
function Be2(e12) {
  return {
    ...e12,
    errorType: Me2,
    explanation: "Request was finished with unsuccessful HTTP code"
  };
}
function Tt2(e12) {
  return {
    ...e12,
    errorType: ze2,
    explanation: "Request was failed due to network problems"
  };
}
function Dt2(e12) {
  return v({
    handler: ({ result: r8 }) => {
      if (!e12.isData(r8))
        throw ee2({
          validationErrors: e12.getErrorMessages(r8),
          response: r8
        });
      return r8;
    },
    sid: "ff.applyContractFx"
  });
}
function jt2(e12) {
  return !!(e12 === true || Array.isArray(e12) && e12.length === 0 || typeof e12 == "string" && e12.length === 0);
}
function xe2(e12) {
  return e12 === true ? [] : e12 === false ? ["Invalid data"] : Array.isArray(e12) ? e12.length === 0 ? [] : e12 : [e12];
}
function Rt2(e12) {
  var t13;
  return ((t13 = e12.error) == null ? void 0 : t13.errorType) === Ne2;
}
function qt2() {
  ue2 = true;
}
function Nt2() {
  ue2 = false;
}
function Lt2() {
  const e12 = te2;
  return te2 = null, e12;
}
function Mt(e12) {
  const t13 = p2(e12.shortName + ".internalCall"), r8 = Le.compute({
    fn: (a12) => {
      const o6 = a12.handler, s37 = zt2(o6, t13);
      return a12.handler = s37, a12;
    }
  });
  return Ct2(e12).seq.splice(1, 0, r8), t13;
}
function zt2(e12, t13) {
  function r8(...n12) {
    const { result: a12, abortCallback: o6 } = Ut(e12, ...n12);
    if (a12 instanceof Promise) {
      const s37 = vt2(), i11 = Ee2(s37, o6);
      return t13(i11), a12.then(s37.resolve, s37.reject), s37.promise;
    } else {
      const s37 = Ee2(void 0, o6);
      return t13(s37), a12;
    }
  }
  return r8;
}
function Ee2(e12, t13) {
  let r8 = e12 ? "pending" : "finished";
  function n12() {
    r8 = "finished", a12.status = r8;
  }
  e12 && e12.promise.then(n12, n12);
  const a12 = {
    id: Ht(),
    status: r8,
    abort: (o6 = Ce2()) => {
      t13 == null || t13(), r8 !== "finished" && e12 && e12.reject(o6);
    },
    promise: e12 == null ? void 0 : e12.promise
  };
  return a12;
}
function Ct2(e12) {
  return e12.graphite.scope.runner;
}
function Ht() {
  return `${Bt2++}`;
}
function Ut(e12, ...t13) {
  Vt(), qt2();
  const r8 = e12(...t13), n12 = Lt2();
  return Nt2(), {
    result: r8,
    abortCallback: n12
  };
}
function Ke2(e12, { clock: t13 }) {
  M({ clock: t13, source: Qe2(e12), target: fe2 });
}
function Qe2(e12) {
  if (!e12.__.meta.$callObjects) {
    const t13 = g([], { serialize: "ignore" });
    M({
      clock: e12.__.lowLevelAPI.callObjectCreated,
      source: t13,
      fn: (r8, n12) => r8.filter((a12) => a12.status === "pending").concat(n12),
      target: t13
    }), M({
      clock: fe2.done,
      source: t13,
      fn: (r8, { params: n12 }) => r8.filter((a12) => !n12.includes(a12)),
      target: t13
    }), e12.__.meta.$callObjects = t13;
  }
  return e12.__.meta.$callObjects;
}
function Kt(e12) {
  return typeof e12 == "object" && e12 !== null && ne2 in e12 && ae2 in e12;
}
function Je2({
  name: e12,
  meta: t13,
  kind: r8,
  serialize: n12,
  enabled: a12,
  contract: o6,
  validate: s37,
  mapData: i11,
  sourced: l9,
  paramsAreMeaningless: y3
}) {
  const g9 = p2(), f11 = p2(), _3 = p2(), u4 = p2(), p13 = Dt2(
    o6
  ), m11 = e12 ?? "unnamed", d6 = v({
    handler: () => {
      throw new Error("Not implemented");
    },
    sid: `ff.${m11}.executeFx`,
    name: `${m11}.executeFx`
  }), w8 = Mt(d6), F5 = [{
    name: "remote_source",
    get: v(async ({ params: h8 }) => {
      const v5 = await d6(h8);
      return Kt(v5) ? {
        result: v5[ae2],
        stale: false,
        meta: v5[ne2]
      } : { result: v5, stale: false };
    })
  }], {
    retrieveDataFx: I5,
    notifyAboutNewValidDataFx: N5,
    notifyAboutDataInvalidationFx: C5
  } = Qt(F5), B3 = p2(), b4 = p2(), S3 = p2();
  M({
    clock: B3,
    fn: (h8) => ({
      params: h8,
      meta: { stopErrorPropagation: false, stale: true }
    }),
    target: u4
  });
  const A4 = {
    success: p2(),
    failure: p2(),
    skip: p2(),
    finally: p2()
  }, M5 = p2(), V5 = p2(), K4 = p2();
  j({
    source: M5,
    match: {
      aborted: ({ error: h8 }) => Rt2({ error: h8 })
    },
    cases: {
      aborted: K4,
      __: A4.failure
    }
  });
  const L4 = g("initial", {
    sid: `ff.${m11}.$status`,
    name: `ff.${m11}.$status`,
    serialize: n12
  });
  M({ clock: b4, target: L4.reinit });
  const G3 = g([], {
    serialize: "ignore",
    name: `ff.${m11}.$statusHistory`,
    sid: `ff.${m11}.$statusHistory`
  });
  M({
    clock: L4.updates,
    source: G3,
    fn: (h8, v5) => [...h8, v5],
    target: G3
  });
  const Q3 = R3(a12 ?? true).map(Boolean), ye3 = g(void 0, {
    serialize: "ignore",
    name: `ff.${m11}.$latestParams`,
    sid: `ff.${m11}.$latestParams`,
    skipVoid: false
  }), ct3 = L4.map((h8) => h8 === "initial"), it = L4.map((h8) => h8 === "pending"), lt2 = L4.map((h8) => h8 === "fail"), ut2 = L4.map((h8) => h8 === "done"), ft2 = L4.map((h8) => ["fail", "done"].includes(h8));
  M({
    clock: [
      I5.map(() => "pending"),
      A4.success.map(() => "done"),
      A4.failure.map(() => "fail"),
      M({
        clock: K4,
        source: {
          history: G3,
          retrieveDataPengind: I5.pending
        },
        fn: ({ history: h8, retrieveDataPengind: v5 }) => v5 ? "pending" : h8[h8.length - 2] ?? "initial"
      })
    ],
    target: L4
  }), M({
    clock: u4,
    filter: Q3,
    fn: ({ params: h8 }) => h8,
    target: ye3
  }), M({
    clock: B3,
    filter: H2(Q3),
    fn(h8) {
      return {
        params: h8,
        meta: { stopErrorPropagation: false, stale: false }
      };
    },
    target: A4.skip
  }), M({
    clock: g9,
    fn: ({ params: h8 }) => ({
      params: h8,
      meta: { stopErrorPropagation: false, stale: true }
    }),
    target: C5
  }), M({
    clock: C5.finally,
    source: g9,
    filter: ({ refresh: h8 }) => h8,
    fn: ({ params: h8 }) => ({
      params: h8,
      meta: { stopErrorPropagation: false, stale: true }
    }),
    target: u4
  }), M({
    clock: u4,
    filter: Q3,
    target: I5
  }), M({ clock: I5, target: S3 }), M({
    clock: I5.done,
    fn: ({ params: h8, result: v5 }) => ({
      params: h8.params,
      result: v5.result,
      meta: {
        stopErrorPropagation: v5.stopErrorPropagation ?? false,
        stale: v5.stale,
        responseMeta: v5.meta
      }
    }),
    filter: Q3,
    target: p13
  }), M({
    clock: I5.fail,
    source: Q3,
    filter: (h8, { error: v5 }) => h8 && !v5.stopErrorPropagation,
    fn: (h8, { error: v5, params: j4 }) => ({
      error: v5.error,
      params: j4.params,
      meta: { stopErrorPropagation: v5.stopErrorPropagation, stale: false }
    }),
    target: M5
  });
  const { validDataRecieved: ge3, __: $e3 } = j(
    M({
      clock: p13.done,
      source: {
        partialValidator: D2({
          field: s37 ?? Ot2
        })
      },
      fn: ({ partialValidator: h8 }, {
        params: {
          /* Extract original params, it is params of params */
          params: v5,
          meta: j4
        },
        result: z4
      }) => ({
        result: z4,
        params: v5,
        validation: h8({
          result: z4,
          params: v5
        }),
        meta: j4
      })
    }),
    {
      validDataRecieved: ({ validation: h8 }) => jt2(h8)
    }
  );
  M({
    clock: ge3,
    source: {
      partialMapper: D2({
        field: i11
      })
    },
    fn: ({ partialMapper: h8 }, { params: v5, result: j4, meta: z4 }) => ({
      result: h8({
        params: v5,
        result: j4,
        ...Jt(z4) ? z4.responseMeta : {}
      }),
      params: v5,
      meta: z4
    }),
    target: A4.success
  }), M({
    clock: A4.success,
    filter: ({ meta: h8 }) => h8.stale,
    fn: ({ params: h8, meta: v5 }) => ({ params: h8, meta: v5, skipStale: true }),
    target: I5
  }), M({
    clock: ge3,
    filter: ({ meta: h8 }) => !h8.stale,
    target: N5
  }), M({
    clock: p13.fail,
    filter: ({ params: h8 }) => !h8.meta.stopErrorPropagation,
    fn: ({ error: h8, params: v5 }) => ({
      error: h8,
      // Extract original params, it is params of params
      params: v5.params,
      meta: v5.meta
    }),
    target: M5
  }), M({
    clock: p13.fail,
    fn: ({ error: h8, params: v5 }) => ({
      error: h8,
      // Extract original params, it is params of params
      params: v5.params,
      meta: v5.meta
    }),
    target: V5
  }), M({
    clock: $e3,
    filter: ({ meta: h8 }) => !h8.stopErrorPropagation,
    fn: ({ params: h8, validation: v5, meta: j4, result: z4 }) => ({
      params: h8,
      error: ee2({
        validationErrors: xe2(v5),
        response: z4
      }),
      meta: j4
    }),
    target: M5
  }), M({
    clock: $e3,
    fn: ({ params: h8, validation: v5, meta: j4, result: z4 }) => ({
      params: h8,
      error: ee2({
        validationErrors: xe2(v5),
        response: z4
      }),
      meta: j4
    }),
    target: V5
  }), M({
    clock: Q3.updates,
    source: B3,
    filter: H2(Q3),
    fn: (h8) => ({
      params: h8,
      meta: {
        stopErrorPropagation: false,
        stale: true
      }
    }),
    target: A4.skip
  }), M({
    clock: A4.success,
    fn: ({ params: h8, result: v5, meta: j4 }) => ({
      status: "done",
      params: h8,
      result: v5,
      meta: j4
    }),
    target: A4.finally
  }), M({
    clock: A4.failure,
    fn: ({ params: h8, error: v5, meta: j4 }) => ({
      status: "fail",
      params: h8,
      error: v5,
      meta: j4
    }),
    target: A4.finally
  }), M({
    clock: A4.skip,
    fn: ({ params: h8, meta: v5 }) => ({
      status: "skip",
      params: h8,
      meta: v5
    }),
    target: A4.finally
  });
  const _e3 = {
    start: B3,
    finished: A4,
    started: S3,
    aborted: K4,
    reset: b4,
    $status: L4,
    $idle: ct3,
    $pending: it,
    $failed: lt2,
    $succeeded: ut2,
    $finished: ft2,
    $enabled: Q3,
    __: {
      executeFx: d6,
      meta: { ...t13, name: m11, flags: {} },
      kind: r8,
      $latestParams: E3(ye3),
      lowLevelAPI: {
        dataSources: F5,
        dataSourceRetrieverFx: I5,
        sourced: l9 ?? [],
        paramsAreMeaningless: y3 ?? false,
        revalidate: g9,
        pushError: _3,
        pushData: f11,
        startWithMeta: u4,
        callObjectCreated: w8,
        failedIgnoreSuppression: V5
      }
    }
  };
  return Ke2(_e3, { clock: b4 }), _e3;
}
function Qt(e12) {
  const t13 = v({
    handler: async ({ params: a12, skipStale: o6 }) => {
      for (const s37 of e12)
        try {
          const i11 = await s37.get({ params: a12 });
          if (o6 && (i11 != null && i11.stale))
            continue;
          if (i11)
            return i11;
        } catch (i11) {
          throw {
            stopErrorPropagation: false,
            error: i11
          };
        }
      throw {
        stopErrorPropagation: false,
        error: new Error("No data source returned data")
      };
    }
  }), r8 = v({
    handler: async ({ params: a12, result: o6 }) => {
      await Promise.all(
        e12.map(U3("set")).filter(Boolean).map((s37) => s37({ params: a12, result: o6 }))
      );
    }
  }), n12 = v({
    handler: async ({ params: a12 }) => {
      await Promise.all(
        e12.map(U3("unset")).filter(Boolean).map((o6) => o6({ params: a12 }))
      );
    }
  });
  return {
    retrieveDataFx: t13,
    notifyAboutNewValidDataFx: r8,
    notifyAboutDataInvalidationFx: n12
  };
}
function Jt(e12) {
  return "responseMeta" in e12 && typeof e12.responseMeta == "object";
}
function Yt(e12, t13) {
  return a({
    meta: { [Wt]: e12, [Gt]: t13 },
    regional: true
  });
}
function de2(e12) {
  const {
    initialData: t13,
    contract: r8,
    mapData: n12,
    enabled: a12,
    validate: o6,
    name: s37,
    serialize: i11,
    sourced: l9,
    paramsAreMeaningless: y3
  } = e12, g9 = t13 ?? null, f11 = Je2({
    name: s37 ?? Oe2(),
    kind: We2,
    serialize: se2(i11),
    enabled: a12,
    meta: {
      serialize: i11,
      initialData: g9,
      sid: Xt(g(null, { sid: "dummy" }))
    },
    contract: r8,
    validate: o6,
    mapData: n12,
    sourced: l9,
    paramsAreMeaningless: y3
  }), _3 = p2(), u4 = g(g9, {
    sid: `ff.${f11.__.meta.name}.$data`,
    name: `${f11.__.meta.name}.$data`,
    serialize: i11,
    skipVoid: false
  }), p13 = g(null, {
    sid: `ff.${f11.__.meta.name}.$error`,
    name: `${f11.__.meta.name}.$error`,
    serialize: se2(i11),
    skipVoid: false
  }), m11 = g(true, {
    sid: `ff.${f11.__.meta.name}.$stale`,
    name: `${f11.__.meta.name}.$stale`,
    serialize: se2(i11),
    skipVoid: false
  });
  M({
    clock: f11.finished.success,
    fn: () => null,
    target: p13
  }), M({
    clock: f11.finished.success,
    fn: ({ result: b4 }) => b4,
    target: u4
  }), u4.reset(f11.finished.failure), M({
    clock: f11.finished.failure,
    fn: ({ error: b4 }) => b4,
    target: p13
  }), M({
    clock: f11.finished.finally,
    fn: ({ meta: b4 }) => b4.stale,
    target: m11
  }), M({
    clock: f11.__.lowLevelAPI.pushData,
    target: [u4, p13.reinit]
  }), M({
    clock: f11.__.lowLevelAPI.pushError,
    target: [p13, u4.reinit]
  });
  const d6 = je2({
    clock: _3,
    until: f11.$enabled
  }), w8 = p2(), { haveToStart: P3, __: F5 } = j(
    M({
      clock: d6,
      source: { stale: m11, latestParams: f11.__.$latestParams },
      fn: ({ stale: b4, latestParams: S3 }, A4) => ({
        haveToStart: b4 || !Z2(A4, S3),
        params: A4
      })
    }),
    {
      haveToStart: ({ haveToStart: b4 }) => b4
    }
  );
  M({
    clock: F5,
    fn: () => null,
    target: w8
  }), M({
    clock: P3,
    fn: ({ params: b4 }) => b4,
    target: f11.start
  }), M({
    clock: f11.reset,
    target: [u4.reinit, p13.reinit, m11.reinit]
  });
  const I5 = {
    data: u4,
    error: p13,
    stale: m11,
    pending: f11.$pending,
    start: f11.start
  }, N5 = () => I5, C5 = ({
    source: b4,
    mapParams: S3
  }) => {
    const A4 = de2(e12);
    return A4.__.lowLevelAPI.dataSourceRetrieverFx.use(
      b({
        source: b4,
        mapParams: ({ params: M5, ...V5 }, K4) => ({
          params: S3 ? S3(M5, K4) : M5,
          ...V5
        }),
        effect: f11.__.lowLevelAPI.dataSourceRetrieverFx
      })
    ), A4;
  }, B3 = Yt(
    { type: "query", name: e12.name },
    { $status: f11.$status, $data: u4, $error: p13 }
  );
  return n(B3, () => ({
    refresh: _3,
    start: f11.start,
    reset: f11.reset,
    started: E3(f11.started),
    $data: E3(u4),
    $error: E3(p13),
    $status: E3(f11.$status),
    $idle: E3(f11.$idle),
    $pending: E3(f11.$pending),
    $succeeded: E3(f11.$succeeded),
    $failed: E3(f11.$failed),
    $finished: E3(f11.$finished),
    $enabled: E3(f11.$enabled),
    $stale: m11,
    aborted: E3(f11.aborted),
    finished: {
      success: E3(f11.finished.success),
      failure: E3(f11.finished.failure),
      finally: E3(f11.finished.finally),
      skip: E3(f11.finished.skip)
    },
    __: {
      ...f11.__,
      lowLevelAPI: { ...f11.__.lowLevelAPI, refreshSkipDueToFreshness: w8 },
      experimentalAPI: { attach: C5 }
    },
    "@@unitShape": N5
  }));
}
function Xt(e12) {
  const t13 = e12.sid;
  return t13 != null && t13.includes("|") ? t13 : null;
}
function Ye2(e12) {
  const t13 = e12;
  if (ae.effect(t13.effect))
    return t13.effect;
  if (typeof t13.handler == "function")
    return v(t13.handler);
  throw new Zt(
    "handler or effect must be passed to the config"
  );
}
function Or(e12) {
  const t13 = de2({
    initialData: e12.initialData ?? null,
    contract: e12.contract ?? re2,
    mapData: e12.mapData ?? (({ result: r8 }) => r8),
    enabled: e12.enabled,
    validate: e12.validate,
    name: e12.name,
    serialize: e12.serialize
  });
  return t13.__.executeFx.use(Ye2(e12)), t13;
}
function me2(e12) {
  const { name: t13, enabled: r8, contract: n12, validate: a12, mapData: o6 } = e12, s37 = Je2({
    name: t13 ?? Oe2(),
    serialize: "ignore",
    enabled: r8,
    kind: tt2,
    meta: null,
    contract: n12,
    validate: a12,
    mapData: o6
  }), i11 = {
    pending: s37.$pending,
    start: s37.start,
    reset: s37.reset
  }, l9 = () => i11, y3 = ({
    source: g9,
    mapParams: f11
  }) => {
    const _3 = me2(e12);
    return _3.__.lowLevelAPI.dataSourceRetrieverFx.use(
      b({
        source: g9,
        mapParams: ({ params: u4, ...p13 }, m11) => ({
          params: f11 ? f11(u4, m11) : u4,
          ...p13
        }),
        effect: s37.__.lowLevelAPI.dataSourceRetrieverFx
      })
    ), _3;
  };
  return {
    start: s37.start,
    reset: s37.reset,
    started: E3(s37.started),
    aborted: E3(s37.aborted),
    $status: E3(s37.$status),
    $idle: E3(s37.$idle),
    $pending: E3(s37.$pending),
    $succeeded: E3(s37.$succeeded),
    $failed: E3(s37.$failed),
    $finished: E3(s37.$finished),
    $enabled: E3(s37.$enabled),
    finished: {
      success: E3(s37.finished.success),
      failure: E3(s37.finished.failure),
      finally: E3(s37.finished.finally),
      skip: E3(s37.finished.skip)
    },
    __: { ...s37.__, experimentalAPI: { attach: y3 } },
    "@@unitShape": l9
  };
}
function Nr(e12) {
  const t13 = me2({
    name: e12.name,
    enabled: e12.enabled,
    contract: e12.contract ?? re2,
    mapData: ({ result: r8 }) => r8
  });
  return t13.__.executeFx.use(Ye2(e12)), t13;
}
function W2(e12) {
  if (typeof e12 == "number")
    return e12;
  let t13 = 0;
  for (const r8 of e12.split(" "))
    switch (true) {
      case Y2(r8, ir):
        t13 += X2(r8);
        break;
      case Y2(r8, lr):
        t13 += X2(r8) * 1e3;
        break;
      case Y2(r8, ur):
        t13 += X2(r8) * 6e4;
        break;
      case Y2(r8, fr):
        t13 += X2(r8) * 36e5;
        break;
    }
  return t13;
}
function Y2(e12, t13) {
  return t13.includes(dr(e12));
}
function dr(e12) {
  return e12.replace(/[0-9.]/g, "");
}
function X2(e12) {
  return e12.includes(".") ? parseFloat(e12) : parseInt(e12);
}
function he(e12) {
  const t13 = g(e12, {
    serialize: "ignore",
    name: "ff.$cacheInstance",
    sid: "ff.$cacheInstance"
  });
  return { ...e12, __: { $instance: t13 } };
}
function at2({
  adapter: e12,
  options: t13,
  events: r8
}) {
  t13 != null && t13.hit && M({
    clock: e12.get.done,
    filter: ({ result: n12 }) => n12 !== null,
    fn: ({ params: n12 }) => ({ key: n12.key }),
    target: t13.hit
  }), t13 != null && t13.miss && M({
    clock: e12.get.done,
    filter: ({ result: n12 }) => n12 === null,
    fn: ({ params: n12 }) => ({ key: n12.key }),
    target: t13.miss
  }), t13 != null && t13.expired && (r8 != null && r8.itemExpired) && M({
    clock: r8.itemExpired,
    fn: ({ key: n12 }) => ({ key: n12 }),
    target: t13.expired
  }), t13 != null && t13.evicted && (r8 != null && r8.itemEvicted) && M({
    clock: r8.itemEvicted,
    target: t13.evicted
  });
}
function mr(e12) {
  const { maxEntries: t13, maxAge: r8, observability: n12 } = e12 ?? {};
  let a12 = {};
  const o6 = p2(), s37 = p2(), i11 = p2(), l9 = p2(), y3 = p2();
  y3.watch(() => {
    a12 = {};
  });
  const g9 = $t2({ clock: o6 }), f11 = M({
    clock: o6,
    source: { now: g9 },
    fn: ({ now: u4 }, { key: p13, value: m11 }) => hr(
      a12,
      { key: p13, entry: { value: m11, cachedAt: u4 } },
      t13
    )
  });
  if (f11.watch(({ next: u4 }) => {
    a12 = u4;
  }), M({
    clock: f11,
    filter: ({ evicted: u4 }) => !!u4,
    fn: ({ evicted: u4 }) => ({ key: u4 }),
    target: l9
  }), s37.watch(({ key: u4 }) => {
    const { [u4]: p13, ...m11 } = a12;
    a12 = m11;
  }), r8) {
    const u4 = W2(r8);
    o6.watch((p13) => {
      const m11 = F(i11, { safe: true });
      setTimeout(() => m11(p13), u4);
    }), M({
      clock: i11,
      fn: ({ key: p13 }) => ({ key: p13 }),
      target: s37
    });
  }
  const _3 = {
    get: v(({ key: u4 }) => {
      const p13 = a12[u4] ?? null;
      if (!p13)
        return null;
      if (r8) {
        const m11 = (p13 == null ? void 0 : p13.cachedAt) + W2(r8);
        if (Date.now() >= m11)
          return s37({ key: u4 }), null;
      }
      return p13;
    }),
    set: v(o6),
    unset: v(s37),
    purge: y3
  };
  return at2({
    adapter: _3,
    options: n12,
    events: { itemExpired: i11, itemEvicted: l9 }
  }), he(_3);
}
function hr(e12, { key: t13, entry: r8 }, n12) {
  if (n12 === void 0)
    return { next: { ...e12, [t13]: r8 }, evicted: null };
  const a12 = Object.keys(e12);
  if (a12.length < n12)
    return { next: { ...e12, [t13]: r8 }, evicted: null };
  const [o6] = a12, { [o6]: s37, ...i11 } = e12;
  return { next: { ...i11, [t13]: r8 }, evicted: o6 };
}
function yr(e12) {
  let t13 = 0, r8 = 0;
  for (; r8 < e12.length; )
    t13 = (t13 << 5) - t13 + e12.charCodeAt(r8++) | 0;
  return t13.toString(36);
}
function st2(e12) {
  const t13 = /* @__PURE__ */ new Set();
  function r8(n12) {
    if (n12 === void 0)
      return;
    if (n12 === null)
      return "null";
    if (typeof n12 == "number")
      return isFinite(n12) ? `${n12}` : "null";
    if (typeof n12 == "function")
      throw new TypeError("Can't serialize function");
    if (typeof n12 != "object")
      return JSON.stringify(n12);
    if (t13.has(n12))
      throw new TypeError("Can't serialize cyclic structure");
    if (t13.add(n12), Array.isArray(n12)) {
      const o6 = n12.map((s37) => r8(s37) || "null").join(",");
      return t13.delete(n12), `[${o6}]`;
    }
    const a12 = Object.keys(n12).sort().map((o6) => {
      const s37 = r8(n12[o6]);
      return s37 ? `${r8(o6)}:${s37}` : "";
    }).filter(Boolean).join(",");
    return t13.delete(n12), `{${a12}}`;
  }
  return r8(e12);
}
function gr({
  sid: e12,
  params: t13 = null,
  sources: r8
}) {
  try {
    return st2({ params: t13, sources: r8, sid: e12 }) ?? null;
  } catch {
    return null;
  }
}
function $r({
  sid: e12,
  params: t13 = null,
  sources: r8
}) {
  try {
    const n12 = st2({ params: t13, sources: r8, sid: e12 });
    return yr(n12);
  } catch {
    return null;
  }
}
function _r(e12) {
  const t13 = kr(e12);
  if (t13)
    return t13;
  const r8 = vr(e12);
  if (r8)
    return r8;
  throw new Error(
    "Query does not have sid or uniq name, which is required for caching, read more https://effector.dev/en/explanation/sids/"
  );
}
function kr(e12) {
  return e12.__.meta.sid ?? null;
}
function vr(e12) {
  const t13 = e12.__.meta.name;
  return Pe2.has(t13) ? null : (Pe2.add(t13), t13);
}
function Vr(e12, t13) {
  const {
    adapter: r8,
    staleAfter: n12,
    purge: a12,
    humanReadableKeys: o6
  } = {
    adapter: (t13 == null ? void 0 : t13.adapter) ?? mr(),
    humanReadableKeys: false,
    ...t13
  }, s37 = o6 ? gr : $r, i11 = _r(e12), l9 = e12.__.lowLevelAPI.sourced.map(ht2), y3 = v(async (p13) => Promise.all(l9.map((m11) => m11(p13)))), g9 = v(async ({ instance: p13, params: m11 }) => {
    const d6 = await y3(m11), w8 = s37({
      sid: i11,
      params: e12.__.lowLevelAPI.paramsAreMeaningless ? null : m11,
      sources: d6
    });
    w8 && await p13.unset({ key: w8 });
  }), f11 = v(async ({ instance: p13, params: m11, result: d6 }) => {
    const w8 = await y3(m11), P3 = s37({
      sid: i11,
      params: e12.__.lowLevelAPI.paramsAreMeaningless ? null : m11,
      sources: w8
    });
    P3 && await p13.set({ key: P3, value: d6 });
  }), _3 = v(async ({ params: p13, instance: m11 }) => {
    const d6 = await y3(p13), w8 = s37({
      sid: i11,
      params: e12.__.lowLevelAPI.paramsAreMeaningless ? null : p13,
      sources: d6
    });
    if (!w8)
      return null;
    const P3 = await m11.get({ key: w8 });
    if (!P3)
      return null;
    const F5 = n12 ? P3.cachedAt + W2(n12) <= Date.now() : true;
    return { result: P3.value, stale: F5 };
  }), u4 = {
    name: "cache",
    get: b({
      source: {
        instance: r8.__.$instance
      },
      mapParams: ({ params: p13 }, { instance: m11 }) => ({
        params: p13,
        instance: m11
      }),
      effect: _3
    }),
    set: b({
      source: {
        instance: r8.__.$instance
      },
      mapParams: ({ params: p13, result: m11 }, { instance: d6 }) => ({
        params: p13,
        result: m11,
        instance: d6
      }),
      effect: f11
    }),
    unset: b({
      source: {
        instance: r8.__.$instance
      },
      mapParams: ({ params: p13 }, { instance: m11 }) => ({
        instance: m11,
        params: p13
      }),
      effect: g9
    })
  };
  e12.__.lowLevelAPI.dataSources.unshift(u4), a12 && M({
    clock: a12,
    source: { instance: r8.__.$instance },
    target: v(
      ({ instance: p13 }) => p13.purge()
    )
  });
}
var re2, ke2, Re2, Ne2, Me2, ze2, Ot2, te2, ue2, Bt2, Vt, fe2, ne2, ae2, We2, Wt, Gt, Zt, nr, ar, tt2, ir, lr, ur, fr, Pe2;
var init_core = __esm({
  "node_modules/.pnpm/@farfetched+core@0.13.1_effector@23.3.0/node_modules/@farfetched/core/dist/core.js"() {
    init_effector();
    re2 = {
      isData: (e12) => true,
      getErrorMessages: () => []
    };
    ke2 = v(() => Date.now());
    Re2 = "INVALID_DATA";
    Ne2 = "ABORT";
    Me2 = "HTTP";
    ze2 = "NETWORK";
    Ot2 = () => true;
    te2 = null;
    ue2 = false;
    Bt2 = 0;
    Vt = p2();
    fe2 = v(
      (e12) => e12.forEach((t13) => t13.abort())
    );
    ne2 = Symbol("Meta");
    ae2 = Symbol("Result");
    We2 = Symbol("Query");
    Wt = Symbol("Farfetched node meta");
    Gt = Symbol("Farfetched links meta");
    Zt = class extends Error {
      constructor(t13) {
        super(t13);
      }
    };
    nr = v({
      sid: "ff.fetchFx",
      handler: globalThis.fetch
    });
    ar = v({
      handler: async (e12) => {
        const t13 = await nr(e12).catch((r8) => {
          throw Tt2({
            reason: (r8 == null ? void 0 : r8.message) ?? null,
            cause: r8
          });
        });
        if (!t13.ok)
          throw Be2({
            status: t13.status,
            statusText: t13.statusText,
            response: await t13.text().catch(() => null) ?? null
          });
        return t13;
      },
      sid: "ff.requestFx"
    });
    tt2 = Symbol("Mutation");
    ir = [
      "ms",
      "milli",
      "millisecond",
      "milliseconds"
    ];
    lr = ["s", "sec", "secs", "second", "seconds"];
    ur = ["m", "min", "mins", "minute", "minutes"];
    fr = ["h", "hr", "hrs", "hour", "hours"];
    Pe2 = /* @__PURE__ */ new Set();
  }
});

// node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/shared/node-fetch-native.DfbY2q-x.mjs
function f2(e12) {
  return e12 && e12.__esModule && Object.prototype.hasOwnProperty.call(e12, "default") ? e12.default : e12;
}
var t3, o3, n3;
var init_node_fetch_native_DfbY2q_x = __esm({
  "node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/shared/node-fetch-native.DfbY2q-x.mjs"() {
    t3 = Object.defineProperty;
    o3 = (e12, l9) => t3(e12, "name", { value: l9, configurable: true });
    n3 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    o3(f2, "getDefaultExportFromCjs");
  }
});

// node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/chunks/multipart-parser.mjs
var multipart_parser_exports = {};
__export(multipart_parser_exports, {
  toFormData: () => v2
});
function $2(_3) {
  const o6 = _3.match(/\bfilename=("(.*?)"|([^()<>@,;:\\"/[\]?={}\s\t]+))($|;\s)/i);
  if (!o6) return;
  const n12 = o6[2] || o6[3] || "";
  let r8 = n12.slice(n12.lastIndexOf("\\") + 1);
  return r8 = r8.replace(/%22/g, '"'), r8 = r8.replace(/&#(\d{4});/g, (d6, l9) => String.fromCharCode(l9)), r8;
}
async function v2(_3, o6) {
  if (!/multipart/i.test(o6)) throw new TypeError("Failed to fetch");
  const n12 = o6.match(/boundary=(?:"([^"]+)"|([^;]+))/i);
  if (!n12) throw new TypeError("no or bad content-type header, no multipart boundary");
  const r8 = new M3(n12[1] || n12[2]);
  let d6, l9, c13, m11, e12, i11;
  const A4 = [], H5 = new Zt2(), O3 = E4((s37) => {
    c13 += f11.decode(s37, { stream: true });
  }, "onPartData"), y3 = E4((s37) => {
    A4.push(s37);
  }, "appendToFile"), a12 = E4(() => {
    const s37 = new Yr(A4, i11, { type: e12 });
    H5.append(m11, s37);
  }, "appendFileToFormData"), L4 = E4(() => {
    H5.append(m11, c13);
  }, "appendEntryToFormData"), f11 = new TextDecoder("utf-8");
  f11.decode(), r8.onPartBegin = function() {
    r8.onPartData = O3, r8.onPartEnd = L4, d6 = "", l9 = "", c13 = "", m11 = "", e12 = "", i11 = null, A4.length = 0;
  }, r8.onHeaderField = function(s37) {
    d6 += f11.decode(s37, { stream: true });
  }, r8.onHeaderValue = function(s37) {
    l9 += f11.decode(s37, { stream: true });
  }, r8.onHeaderEnd = function() {
    if (l9 += f11.decode(), d6 = d6.toLowerCase(), d6 === "content-disposition") {
      const s37 = l9.match(/\bname=("([^"]*)"|([^()<>@,;:\\"/[\]?={}\s\t]+))/i);
      s37 && (m11 = s37[2] || s37[3] || ""), i11 = $2(l9), i11 && (r8.onPartData = y3, r8.onPartEnd = a12);
    } else d6 === "content-type" && (e12 = l9);
    l9 = "", d6 = "";
  };
  for await (const s37 of _3) r8.write(s37);
  return r8.end(), H5;
}
var U4, E4, D3, t4, F2, u2, g2, N2, V3, S, Y3, x, C2, I2, p3, M3;
var init_multipart_parser = __esm({
  "node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/chunks/multipart-parser.mjs"() {
    init_node();
    init_node_fetch_native_DfbY2q_x();
    U4 = Object.defineProperty;
    E4 = (_3, o6) => U4(_3, "name", { value: o6, configurable: true });
    D3 = 0;
    t4 = { START_BOUNDARY: D3++, HEADER_FIELD_START: D3++, HEADER_FIELD: D3++, HEADER_VALUE_START: D3++, HEADER_VALUE: D3++, HEADER_VALUE_ALMOST_DONE: D3++, HEADERS_ALMOST_DONE: D3++, PART_DATA_START: D3++, PART_DATA: D3++, END: D3++ };
    F2 = 1;
    u2 = { PART_BOUNDARY: F2, LAST_BOUNDARY: F2 *= 2 };
    g2 = 10;
    N2 = 13;
    V3 = 32;
    S = 45;
    Y3 = 58;
    x = 97;
    C2 = 122;
    I2 = E4((_3) => _3 | 32, "lower");
    p3 = E4(() => {
    }, "noop");
    M3 = class {
      static {
        E4(this, "MultipartParser");
      }
      constructor(o6) {
        this.index = 0, this.flags = 0, this.onHeaderEnd = p3, this.onHeaderField = p3, this.onHeadersEnd = p3, this.onHeaderValue = p3, this.onPartBegin = p3, this.onPartData = p3, this.onPartEnd = p3, this.boundaryChars = {}, o6 = `\r
--` + o6;
        const n12 = new Uint8Array(o6.length);
        for (let r8 = 0; r8 < o6.length; r8++) n12[r8] = o6.charCodeAt(r8), this.boundaryChars[n12[r8]] = true;
        this.boundary = n12, this.lookbehind = new Uint8Array(this.boundary.length + 8), this.state = t4.START_BOUNDARY;
      }
      write(o6) {
        let n12 = 0;
        const r8 = o6.length;
        let d6 = this.index, { lookbehind: l9, boundary: c13, boundaryChars: m11, index: e12, state: i11, flags: A4 } = this;
        const H5 = this.boundary.length, O3 = H5 - 1, y3 = o6.length;
        let a12, L4;
        const f11 = E4((h8) => {
          this[h8 + "Mark"] = n12;
        }, "mark"), s37 = E4((h8) => {
          delete this[h8 + "Mark"];
        }, "clear"), T4 = E4((h8, P3, R13, k4) => {
          (P3 === void 0 || P3 !== R13) && this[h8](k4 && k4.subarray(P3, R13));
        }, "callback"), b4 = E4((h8, P3) => {
          const R13 = h8 + "Mark";
          R13 in this && (P3 ? (T4(h8, this[R13], n12, o6), delete this[R13]) : (T4(h8, this[R13], o6.length, o6), this[R13] = 0));
        }, "dataCallback");
        for (n12 = 0; n12 < r8; n12++) switch (a12 = o6[n12], i11) {
          case t4.START_BOUNDARY:
            if (e12 === c13.length - 2) {
              if (a12 === S) A4 |= u2.LAST_BOUNDARY;
              else if (a12 !== N2) return;
              e12++;
              break;
            } else if (e12 - 1 === c13.length - 2) {
              if (A4 & u2.LAST_BOUNDARY && a12 === S) i11 = t4.END, A4 = 0;
              else if (!(A4 & u2.LAST_BOUNDARY) && a12 === g2) e12 = 0, T4("onPartBegin"), i11 = t4.HEADER_FIELD_START;
              else return;
              break;
            }
            a12 !== c13[e12 + 2] && (e12 = -2), a12 === c13[e12 + 2] && e12++;
            break;
          case t4.HEADER_FIELD_START:
            i11 = t4.HEADER_FIELD, f11("onHeaderField"), e12 = 0;
          case t4.HEADER_FIELD:
            if (a12 === N2) {
              s37("onHeaderField"), i11 = t4.HEADERS_ALMOST_DONE;
              break;
            }
            if (e12++, a12 === S) break;
            if (a12 === Y3) {
              if (e12 === 1) return;
              b4("onHeaderField", true), i11 = t4.HEADER_VALUE_START;
              break;
            }
            if (L4 = I2(a12), L4 < x || L4 > C2) return;
            break;
          case t4.HEADER_VALUE_START:
            if (a12 === V3) break;
            f11("onHeaderValue"), i11 = t4.HEADER_VALUE;
          case t4.HEADER_VALUE:
            a12 === N2 && (b4("onHeaderValue", true), T4("onHeaderEnd"), i11 = t4.HEADER_VALUE_ALMOST_DONE);
            break;
          case t4.HEADER_VALUE_ALMOST_DONE:
            if (a12 !== g2) return;
            i11 = t4.HEADER_FIELD_START;
            break;
          case t4.HEADERS_ALMOST_DONE:
            if (a12 !== g2) return;
            T4("onHeadersEnd"), i11 = t4.PART_DATA_START;
            break;
          case t4.PART_DATA_START:
            i11 = t4.PART_DATA, f11("onPartData");
          case t4.PART_DATA:
            if (d6 = e12, e12 === 0) {
              for (n12 += O3; n12 < y3 && !(o6[n12] in m11); ) n12 += H5;
              n12 -= O3, a12 = o6[n12];
            }
            if (e12 < c13.length) c13[e12] === a12 ? (e12 === 0 && b4("onPartData", true), e12++) : e12 = 0;
            else if (e12 === c13.length) e12++, a12 === N2 ? A4 |= u2.PART_BOUNDARY : a12 === S ? A4 |= u2.LAST_BOUNDARY : e12 = 0;
            else if (e12 - 1 === c13.length) if (A4 & u2.PART_BOUNDARY) {
              if (e12 = 0, a12 === g2) {
                A4 &= ~u2.PART_BOUNDARY, T4("onPartEnd"), T4("onPartBegin"), i11 = t4.HEADER_FIELD_START;
                break;
              }
            } else A4 & u2.LAST_BOUNDARY && a12 === S ? (T4("onPartEnd"), i11 = t4.END, A4 = 0) : e12 = 0;
            if (e12 > 0) l9[e12 - 1] = a12;
            else if (d6 > 0) {
              const h8 = new Uint8Array(l9.buffer, l9.byteOffset, l9.byteLength);
              T4("onPartData", 0, d6, h8), d6 = 0, f11("onPartData"), n12--;
            }
            break;
          case t4.END:
            break;
          default:
            throw new Error(`Unexpected state entered: ${i11}`);
        }
        b4("onHeaderField"), b4("onHeaderValue"), b4("onPartData"), this.index = e12, this.state = i11, this.flags = A4;
      }
      end() {
        if (this.state === t4.HEADER_FIELD_START && this.index === 0 || this.state === t4.PART_DATA && this.index === this.boundary.length) this.onPartEnd();
        else if (this.state !== t4.END) throw new Error("MultipartParser.end(): stream ended unexpectedly");
      }
    };
    E4($2, "_fileName");
    E4(v2, "toFormData");
  }
});

// node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/node.mjs
import ft from "node:http";
import Qa from "node:https";
import Ye3 from "node:zlib";
import ie2, { PassThrough as Qt2, pipeline as Ge2 } from "node:stream";
import { Buffer as D4 } from "node:buffer";
import { types as Yt2, promisify as Ya, deprecate as Gt2 } from "node:util";
import { format as Za } from "node:url";
import { isIP as Ka } from "node:net";
import { statSync as Po, createReadStream as Ja, promises as Xa } from "node:fs";
import { basename as es } from "node:path";
function ts(i11) {
  if (!/^data:/i.test(i11)) throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
  i11 = i11.replace(/\r?\n/g, "");
  const o6 = i11.indexOf(",");
  if (o6 === -1 || o6 <= 4) throw new TypeError("malformed data: URI");
  const a12 = i11.substring(5, o6).split(";");
  let l9 = "", u4 = false;
  const m11 = a12[0] || "text/plain";
  let h8 = m11;
  for (let A4 = 1; A4 < a12.length; A4++) a12[A4] === "base64" ? u4 = true : a12[A4] && (h8 += `;${a12[A4]}`, a12[A4].indexOf("charset=") === 0 && (l9 = a12[A4].substring(8)));
  !a12[0] && !l9.length && (h8 += ";charset=US-ASCII", l9 = "US-ASCII");
  const S3 = u4 ? "base64" : "ascii", E7 = unescape(i11.substring(o6 + 1)), w8 = Buffer.from(E7, S3);
  return w8.type = m11, w8.typeFull = h8, w8.charset = l9, w8;
}
function ns() {
  return vo || (vo = 1, function(i11, o6) {
    (function(a12, l9) {
      l9(o6);
    })(rs, function(a12) {
      function l9() {
      }
      n4(l9, "noop");
      function u4(e12) {
        return typeof e12 == "object" && e12 !== null || typeof e12 == "function";
      }
      n4(u4, "typeIsObject");
      const m11 = l9;
      function h8(e12, t13) {
        try {
          Object.defineProperty(e12, "name", { value: t13, configurable: true });
        } catch {
        }
      }
      n4(h8, "setFunctionName");
      const S3 = Promise, E7 = Promise.prototype.then, w8 = Promise.reject.bind(S3);
      function A4(e12) {
        return new S3(e12);
      }
      n4(A4, "newPromise");
      function T4(e12) {
        return A4((t13) => t13(e12));
      }
      n4(T4, "promiseResolvedWith");
      function b4(e12) {
        return w8(e12);
      }
      n4(b4, "promiseRejectedWith");
      function q3(e12, t13, r8) {
        return E7.call(e12, t13, r8);
      }
      n4(q3, "PerformPromiseThen");
      function g9(e12, t13, r8) {
        q3(q3(e12, t13, r8), void 0, m11);
      }
      n4(g9, "uponPromise");
      function V5(e12, t13) {
        g9(e12, t13);
      }
      n4(V5, "uponFulfillment");
      function I5(e12, t13) {
        g9(e12, void 0, t13);
      }
      n4(I5, "uponRejection");
      function F5(e12, t13, r8) {
        return q3(e12, t13, r8);
      }
      n4(F5, "transformPromiseWith");
      function Q3(e12) {
        q3(e12, void 0, m11);
      }
      n4(Q3, "setPromiseIsHandledToTrue");
      let se4 = n4((e12) => {
        if (typeof queueMicrotask == "function") se4 = queueMicrotask;
        else {
          const t13 = T4(void 0);
          se4 = n4((r8) => q3(t13, r8), "_queueMicrotask");
        }
        return se4(e12);
      }, "_queueMicrotask");
      function O3(e12, t13, r8) {
        if (typeof e12 != "function") throw new TypeError("Argument is not a function");
        return Function.prototype.apply.call(e12, t13, r8);
      }
      n4(O3, "reflectCall");
      function z4(e12, t13, r8) {
        try {
          return T4(O3(e12, t13, r8));
        } catch (s37) {
          return b4(s37);
        }
      }
      n4(z4, "promiseCall");
      const $4 = 16384;
      class M5 {
        static {
          n4(this, "SimpleQueue");
        }
        constructor() {
          this._cursor = 0, this._size = 0, this._front = { _elements: [], _next: void 0 }, this._back = this._front, this._cursor = 0, this._size = 0;
        }
        get length() {
          return this._size;
        }
        push(t13) {
          const r8 = this._back;
          let s37 = r8;
          r8._elements.length === $4 - 1 && (s37 = { _elements: [], _next: void 0 }), r8._elements.push(t13), s37 !== r8 && (this._back = s37, r8._next = s37), ++this._size;
        }
        shift() {
          const t13 = this._front;
          let r8 = t13;
          const s37 = this._cursor;
          let f11 = s37 + 1;
          const c13 = t13._elements, d6 = c13[s37];
          return f11 === $4 && (r8 = t13._next, f11 = 0), --this._size, this._cursor = f11, t13 !== r8 && (this._front = r8), c13[s37] = void 0, d6;
        }
        forEach(t13) {
          let r8 = this._cursor, s37 = this._front, f11 = s37._elements;
          for (; (r8 !== f11.length || s37._next !== void 0) && !(r8 === f11.length && (s37 = s37._next, f11 = s37._elements, r8 = 0, f11.length === 0)); ) t13(f11[r8]), ++r8;
        }
        peek() {
          const t13 = this._front, r8 = this._cursor;
          return t13._elements[r8];
        }
      }
      const pt2 = Symbol("[[AbortSteps]]"), an = Symbol("[[ErrorSteps]]"), ar2 = Symbol("[[CancelSteps]]"), sr = Symbol("[[PullSteps]]"), ur2 = Symbol("[[ReleaseSteps]]");
      function sn(e12, t13) {
        e12._ownerReadableStream = t13, t13._reader = e12, t13._state === "readable" ? fr2(e12) : t13._state === "closed" ? ri(e12) : un(e12, t13._storedError);
      }
      n4(sn, "ReadableStreamReaderGenericInitialize");
      function lr2(e12, t13) {
        const r8 = e12._ownerReadableStream;
        return X4(r8, t13);
      }
      n4(lr2, "ReadableStreamReaderGenericCancel");
      function ue4(e12) {
        const t13 = e12._ownerReadableStream;
        t13._state === "readable" ? cr(e12, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")) : ni(e12, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")), t13._readableStreamController[ur2](), t13._reader = void 0, e12._ownerReadableStream = void 0;
      }
      n4(ue4, "ReadableStreamReaderGenericRelease");
      function yt2(e12) {
        return new TypeError("Cannot " + e12 + " a stream using a released reader");
      }
      n4(yt2, "readerLockException");
      function fr2(e12) {
        e12._closedPromise = A4((t13, r8) => {
          e12._closedPromise_resolve = t13, e12._closedPromise_reject = r8;
        });
      }
      n4(fr2, "defaultReaderClosedPromiseInitialize");
      function un(e12, t13) {
        fr2(e12), cr(e12, t13);
      }
      n4(un, "defaultReaderClosedPromiseInitializeAsRejected");
      function ri(e12) {
        fr2(e12), ln(e12);
      }
      n4(ri, "defaultReaderClosedPromiseInitializeAsResolved");
      function cr(e12, t13) {
        e12._closedPromise_reject !== void 0 && (Q3(e12._closedPromise), e12._closedPromise_reject(t13), e12._closedPromise_resolve = void 0, e12._closedPromise_reject = void 0);
      }
      n4(cr, "defaultReaderClosedPromiseReject");
      function ni(e12, t13) {
        un(e12, t13);
      }
      n4(ni, "defaultReaderClosedPromiseResetToRejected");
      function ln(e12) {
        e12._closedPromise_resolve !== void 0 && (e12._closedPromise_resolve(void 0), e12._closedPromise_resolve = void 0, e12._closedPromise_reject = void 0);
      }
      n4(ln, "defaultReaderClosedPromiseResolve");
      const fn = Number.isFinite || function(e12) {
        return typeof e12 == "number" && isFinite(e12);
      }, oi = Math.trunc || function(e12) {
        return e12 < 0 ? Math.ceil(e12) : Math.floor(e12);
      };
      function ii(e12) {
        return typeof e12 == "object" || typeof e12 == "function";
      }
      n4(ii, "isDictionary");
      function ne4(e12, t13) {
        if (e12 !== void 0 && !ii(e12)) throw new TypeError(`${t13} is not an object.`);
      }
      n4(ne4, "assertDictionary");
      function G3(e12, t13) {
        if (typeof e12 != "function") throw new TypeError(`${t13} is not a function.`);
      }
      n4(G3, "assertFunction");
      function ai2(e12) {
        return typeof e12 == "object" && e12 !== null || typeof e12 == "function";
      }
      n4(ai2, "isObject");
      function cn(e12, t13) {
        if (!ai2(e12)) throw new TypeError(`${t13} is not an object.`);
      }
      n4(cn, "assertObject");
      function le4(e12, t13, r8) {
        if (e12 === void 0) throw new TypeError(`Parameter ${t13} is required in '${r8}'.`);
      }
      n4(le4, "assertRequiredArgument");
      function dr2(e12, t13, r8) {
        if (e12 === void 0) throw new TypeError(`${t13} is required in '${r8}'.`);
      }
      n4(dr2, "assertRequiredField");
      function hr2(e12) {
        return Number(e12);
      }
      n4(hr2, "convertUnrestrictedDouble");
      function dn(e12) {
        return e12 === 0 ? 0 : e12;
      }
      n4(dn, "censorNegativeZero");
      function si(e12) {
        return dn(oi(e12));
      }
      n4(si, "integerPart");
      function mr2(e12, t13) {
        const s37 = Number.MAX_SAFE_INTEGER;
        let f11 = Number(e12);
        if (f11 = dn(f11), !fn(f11)) throw new TypeError(`${t13} is not a finite number`);
        if (f11 = si(f11), f11 < 0 || f11 > s37) throw new TypeError(`${t13} is outside the accepted range of 0 to ${s37}, inclusive`);
        return !fn(f11) || f11 === 0 ? 0 : f11;
      }
      n4(mr2, "convertUnsignedLongLongWithEnforceRange");
      function br(e12, t13) {
        if (!Te3(e12)) throw new TypeError(`${t13} is not a ReadableStream.`);
      }
      n4(br, "assertReadableStream");
      function ze4(e12) {
        return new ye3(e12);
      }
      n4(ze4, "AcquireReadableStreamDefaultReader");
      function hn(e12, t13) {
        e12._reader._readRequests.push(t13);
      }
      n4(hn, "ReadableStreamAddReadRequest");
      function pr(e12, t13, r8) {
        const f11 = e12._reader._readRequests.shift();
        r8 ? f11._closeSteps() : f11._chunkSteps(t13);
      }
      n4(pr, "ReadableStreamFulfillReadRequest");
      function gt3(e12) {
        return e12._reader._readRequests.length;
      }
      n4(gt3, "ReadableStreamGetNumReadRequests");
      function mn(e12) {
        const t13 = e12._reader;
        return !(t13 === void 0 || !ge3(t13));
      }
      n4(mn, "ReadableStreamHasDefaultReader");
      class ye3 {
        static {
          n4(this, "ReadableStreamDefaultReader");
        }
        constructor(t13) {
          if (le4(t13, 1, "ReadableStreamDefaultReader"), br(t13, "First parameter"), Ce4(t13)) throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          sn(this, t13), this._readRequests = new M5();
        }
        get closed() {
          return ge3(this) ? this._closedPromise : b4(_t2("closed"));
        }
        cancel(t13 = void 0) {
          return ge3(this) ? this._ownerReadableStream === void 0 ? b4(yt2("cancel")) : lr2(this, t13) : b4(_t2("cancel"));
        }
        read() {
          if (!ge3(this)) return b4(_t2("read"));
          if (this._ownerReadableStream === void 0) return b4(yt2("read from"));
          let t13, r8;
          const s37 = A4((c13, d6) => {
            t13 = c13, r8 = d6;
          });
          return et2(this, { _chunkSteps: n4((c13) => t13({ value: c13, done: false }), "_chunkSteps"), _closeSteps: n4(() => t13({ value: void 0, done: true }), "_closeSteps"), _errorSteps: n4((c13) => r8(c13), "_errorSteps") }), s37;
        }
        releaseLock() {
          if (!ge3(this)) throw _t2("releaseLock");
          this._ownerReadableStream !== void 0 && ui(this);
        }
      }
      Object.defineProperties(ye3.prototype, { cancel: { enumerable: true }, read: { enumerable: true }, releaseLock: { enumerable: true }, closed: { enumerable: true } }), h8(ye3.prototype.cancel, "cancel"), h8(ye3.prototype.read, "read"), h8(ye3.prototype.releaseLock, "releaseLock"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(ye3.prototype, Symbol.toStringTag, { value: "ReadableStreamDefaultReader", configurable: true });
      function ge3(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_readRequests") ? false : e12 instanceof ye3;
      }
      n4(ge3, "IsReadableStreamDefaultReader");
      function et2(e12, t13) {
        const r8 = e12._ownerReadableStream;
        r8._disturbed = true, r8._state === "closed" ? t13._closeSteps() : r8._state === "errored" ? t13._errorSteps(r8._storedError) : r8._readableStreamController[sr](t13);
      }
      n4(et2, "ReadableStreamDefaultReaderRead");
      function ui(e12) {
        ue4(e12);
        const t13 = new TypeError("Reader was released");
        bn(e12, t13);
      }
      n4(ui, "ReadableStreamDefaultReaderRelease");
      function bn(e12, t13) {
        const r8 = e12._readRequests;
        e12._readRequests = new M5(), r8.forEach((s37) => {
          s37._errorSteps(t13);
        });
      }
      n4(bn, "ReadableStreamDefaultReaderErrorReadRequests");
      function _t2(e12) {
        return new TypeError(`ReadableStreamDefaultReader.prototype.${e12} can only be used on a ReadableStreamDefaultReader`);
      }
      n4(_t2, "defaultReaderBrandCheckException");
      const li = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {
      }).prototype);
      class pn {
        static {
          n4(this, "ReadableStreamAsyncIteratorImpl");
        }
        constructor(t13, r8) {
          this._ongoingPromise = void 0, this._isFinished = false, this._reader = t13, this._preventCancel = r8;
        }
        next() {
          const t13 = n4(() => this._nextSteps(), "nextSteps");
          return this._ongoingPromise = this._ongoingPromise ? F5(this._ongoingPromise, t13, t13) : t13(), this._ongoingPromise;
        }
        return(t13) {
          const r8 = n4(() => this._returnSteps(t13), "returnSteps");
          return this._ongoingPromise ? F5(this._ongoingPromise, r8, r8) : r8();
        }
        _nextSteps() {
          if (this._isFinished) return Promise.resolve({ value: void 0, done: true });
          const t13 = this._reader;
          let r8, s37;
          const f11 = A4((d6, p13) => {
            r8 = d6, s37 = p13;
          });
          return et2(t13, { _chunkSteps: n4((d6) => {
            this._ongoingPromise = void 0, se4(() => r8({ value: d6, done: false }));
          }, "_chunkSteps"), _closeSteps: n4(() => {
            this._ongoingPromise = void 0, this._isFinished = true, ue4(t13), r8({ value: void 0, done: true });
          }, "_closeSteps"), _errorSteps: n4((d6) => {
            this._ongoingPromise = void 0, this._isFinished = true, ue4(t13), s37(d6);
          }, "_errorSteps") }), f11;
        }
        _returnSteps(t13) {
          if (this._isFinished) return Promise.resolve({ value: t13, done: true });
          this._isFinished = true;
          const r8 = this._reader;
          if (!this._preventCancel) {
            const s37 = lr2(r8, t13);
            return ue4(r8), F5(s37, () => ({ value: t13, done: true }));
          }
          return ue4(r8), T4({ value: t13, done: true });
        }
      }
      const yn = { next() {
        return gn(this) ? this._asyncIteratorImpl.next() : b4(_n("next"));
      }, return(e12) {
        return gn(this) ? this._asyncIteratorImpl.return(e12) : b4(_n("return"));
      } };
      Object.setPrototypeOf(yn, li);
      function fi(e12, t13) {
        const r8 = ze4(e12), s37 = new pn(r8, t13), f11 = Object.create(yn);
        return f11._asyncIteratorImpl = s37, f11;
      }
      n4(fi, "AcquireReadableStreamAsyncIterator");
      function gn(e12) {
        if (!u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_asyncIteratorImpl")) return false;
        try {
          return e12._asyncIteratorImpl instanceof pn;
        } catch {
          return false;
        }
      }
      n4(gn, "IsReadableStreamAsyncIterator");
      function _n(e12) {
        return new TypeError(`ReadableStreamAsyncIterator.${e12} can only be used on a ReadableSteamAsyncIterator`);
      }
      n4(_n, "streamAsyncIteratorBrandCheckException");
      const Sn = Number.isNaN || function(e12) {
        return e12 !== e12;
      };
      var yr2, gr2, _r2;
      function tt3(e12) {
        return e12.slice();
      }
      n4(tt3, "CreateArrayFromList");
      function wn(e12, t13, r8, s37, f11) {
        new Uint8Array(e12).set(new Uint8Array(r8, s37, f11), t13);
      }
      n4(wn, "CopyDataBlockBytes");
      let fe4 = n4((e12) => (typeof e12.transfer == "function" ? fe4 = n4((t13) => t13.transfer(), "TransferArrayBuffer") : typeof structuredClone == "function" ? fe4 = n4((t13) => structuredClone(t13, { transfer: [t13] }), "TransferArrayBuffer") : fe4 = n4((t13) => t13, "TransferArrayBuffer"), fe4(e12)), "TransferArrayBuffer"), _e3 = n4((e12) => (typeof e12.detached == "boolean" ? _e3 = n4((t13) => t13.detached, "IsDetachedBuffer") : _e3 = n4((t13) => t13.byteLength === 0, "IsDetachedBuffer"), _e3(e12)), "IsDetachedBuffer");
      function Rn(e12, t13, r8) {
        if (e12.slice) return e12.slice(t13, r8);
        const s37 = r8 - t13, f11 = new ArrayBuffer(s37);
        return wn(f11, 0, e12, t13, s37), f11;
      }
      n4(Rn, "ArrayBufferSlice");
      function St2(e12, t13) {
        const r8 = e12[t13];
        if (r8 != null) {
          if (typeof r8 != "function") throw new TypeError(`${String(t13)} is not a function`);
          return r8;
        }
      }
      n4(St2, "GetMethod");
      function ci(e12) {
        const t13 = { [Symbol.iterator]: () => e12.iterator }, r8 = async function* () {
          return yield* t13;
        }(), s37 = r8.next;
        return { iterator: r8, nextMethod: s37, done: false };
      }
      n4(ci, "CreateAsyncFromSyncIterator");
      const Sr = (_r2 = (yr2 = Symbol.asyncIterator) !== null && yr2 !== void 0 ? yr2 : (gr2 = Symbol.for) === null || gr2 === void 0 ? void 0 : gr2.call(Symbol, "Symbol.asyncIterator")) !== null && _r2 !== void 0 ? _r2 : "@@asyncIterator";
      function Tn(e12, t13 = "sync", r8) {
        if (r8 === void 0) if (t13 === "async") {
          if (r8 = St2(e12, Sr), r8 === void 0) {
            const c13 = St2(e12, Symbol.iterator), d6 = Tn(e12, "sync", c13);
            return ci(d6);
          }
        } else r8 = St2(e12, Symbol.iterator);
        if (r8 === void 0) throw new TypeError("The object is not iterable");
        const s37 = O3(r8, e12, []);
        if (!u4(s37)) throw new TypeError("The iterator method must return an object");
        const f11 = s37.next;
        return { iterator: s37, nextMethod: f11, done: false };
      }
      n4(Tn, "GetIterator");
      function di(e12) {
        const t13 = O3(e12.nextMethod, e12.iterator, []);
        if (!u4(t13)) throw new TypeError("The iterator.next() method must return an object");
        return t13;
      }
      n4(di, "IteratorNext");
      function hi(e12) {
        return !!e12.done;
      }
      n4(hi, "IteratorComplete");
      function mi(e12) {
        return e12.value;
      }
      n4(mi, "IteratorValue");
      function bi(e12) {
        return !(typeof e12 != "number" || Sn(e12) || e12 < 0);
      }
      n4(bi, "IsNonNegativeNumber");
      function Cn(e12) {
        const t13 = Rn(e12.buffer, e12.byteOffset, e12.byteOffset + e12.byteLength);
        return new Uint8Array(t13);
      }
      n4(Cn, "CloneAsUint8Array");
      function wr(e12) {
        const t13 = e12._queue.shift();
        return e12._queueTotalSize -= t13.size, e12._queueTotalSize < 0 && (e12._queueTotalSize = 0), t13.value;
      }
      n4(wr, "DequeueValue");
      function Rr(e12, t13, r8) {
        if (!bi(r8) || r8 === 1 / 0) throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
        e12._queue.push({ value: t13, size: r8 }), e12._queueTotalSize += r8;
      }
      n4(Rr, "EnqueueValueWithSize");
      function pi(e12) {
        return e12._queue.peek().value;
      }
      n4(pi, "PeekQueueValue");
      function Se3(e12) {
        e12._queue = new M5(), e12._queueTotalSize = 0;
      }
      n4(Se3, "ResetQueue");
      function Pn(e12) {
        return e12 === DataView;
      }
      n4(Pn, "isDataViewConstructor");
      function yi(e12) {
        return Pn(e12.constructor);
      }
      n4(yi, "isDataView");
      function gi(e12) {
        return Pn(e12) ? 1 : e12.BYTES_PER_ELEMENT;
      }
      n4(gi, "arrayBufferViewElementSize");
      class ve3 {
        static {
          n4(this, "ReadableStreamBYOBRequest");
        }
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get view() {
          if (!Tr(this)) throw Ar("view");
          return this._view;
        }
        respond(t13) {
          if (!Tr(this)) throw Ar("respond");
          if (le4(t13, 1, "respond"), t13 = mr2(t13, "First parameter"), this._associatedReadableByteStreamController === void 0) throw new TypeError("This BYOB request has been invalidated");
          if (_e3(this._view.buffer)) throw new TypeError("The BYOB request's buffer has been detached and so cannot be used as a response");
          Ct3(this._associatedReadableByteStreamController, t13);
        }
        respondWithNewView(t13) {
          if (!Tr(this)) throw Ar("respondWithNewView");
          if (le4(t13, 1, "respondWithNewView"), !ArrayBuffer.isView(t13)) throw new TypeError("You can only respond with array buffer views");
          if (this._associatedReadableByteStreamController === void 0) throw new TypeError("This BYOB request has been invalidated");
          if (_e3(t13.buffer)) throw new TypeError("The given view's buffer has been detached and so cannot be used as a response");
          Pt2(this._associatedReadableByteStreamController, t13);
        }
      }
      Object.defineProperties(ve3.prototype, { respond: { enumerable: true }, respondWithNewView: { enumerable: true }, view: { enumerable: true } }), h8(ve3.prototype.respond, "respond"), h8(ve3.prototype.respondWithNewView, "respondWithNewView"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(ve3.prototype, Symbol.toStringTag, { value: "ReadableStreamBYOBRequest", configurable: true });
      class ce3 {
        static {
          n4(this, "ReadableByteStreamController");
        }
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get byobRequest() {
          if (!Ae4(this)) throw nt2("byobRequest");
          return vr2(this);
        }
        get desiredSize() {
          if (!Ae4(this)) throw nt2("desiredSize");
          return Fn(this);
        }
        close() {
          if (!Ae4(this)) throw nt2("close");
          if (this._closeRequested) throw new TypeError("The stream has already been closed; do not close it again!");
          const t13 = this._controlledReadableByteStream._state;
          if (t13 !== "readable") throw new TypeError(`The stream (in ${t13} state) is not in the readable state and cannot be closed`);
          rt2(this);
        }
        enqueue(t13) {
          if (!Ae4(this)) throw nt2("enqueue");
          if (le4(t13, 1, "enqueue"), !ArrayBuffer.isView(t13)) throw new TypeError("chunk must be an array buffer view");
          if (t13.byteLength === 0) throw new TypeError("chunk must have non-zero byteLength");
          if (t13.buffer.byteLength === 0) throw new TypeError("chunk's buffer must have non-zero byteLength");
          if (this._closeRequested) throw new TypeError("stream is closed or draining");
          const r8 = this._controlledReadableByteStream._state;
          if (r8 !== "readable") throw new TypeError(`The stream (in ${r8} state) is not in the readable state and cannot be enqueued to`);
          Tt3(this, t13);
        }
        error(t13 = void 0) {
          if (!Ae4(this)) throw nt2("error");
          Z4(this, t13);
        }
        [ar2](t13) {
          En(this), Se3(this);
          const r8 = this._cancelAlgorithm(t13);
          return Rt3(this), r8;
        }
        [sr](t13) {
          const r8 = this._controlledReadableByteStream;
          if (this._queueTotalSize > 0) {
            In(this, t13);
            return;
          }
          const s37 = this._autoAllocateChunkSize;
          if (s37 !== void 0) {
            let f11;
            try {
              f11 = new ArrayBuffer(s37);
            } catch (d6) {
              t13._errorSteps(d6);
              return;
            }
            const c13 = { buffer: f11, bufferByteLength: s37, byteOffset: 0, byteLength: s37, bytesFilled: 0, minimumFill: 1, elementSize: 1, viewConstructor: Uint8Array, readerType: "default" };
            this._pendingPullIntos.push(c13);
          }
          hn(r8, t13), Be4(this);
        }
        [ur2]() {
          if (this._pendingPullIntos.length > 0) {
            const t13 = this._pendingPullIntos.peek();
            t13.readerType = "none", this._pendingPullIntos = new M5(), this._pendingPullIntos.push(t13);
          }
        }
      }
      Object.defineProperties(ce3.prototype, { close: { enumerable: true }, enqueue: { enumerable: true }, error: { enumerable: true }, byobRequest: { enumerable: true }, desiredSize: { enumerable: true } }), h8(ce3.prototype.close, "close"), h8(ce3.prototype.enqueue, "enqueue"), h8(ce3.prototype.error, "error"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(ce3.prototype, Symbol.toStringTag, { value: "ReadableByteStreamController", configurable: true });
      function Ae4(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_controlledReadableByteStream") ? false : e12 instanceof ce3;
      }
      n4(Ae4, "IsReadableByteStreamController");
      function Tr(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_associatedReadableByteStreamController") ? false : e12 instanceof ve3;
      }
      n4(Tr, "IsReadableStreamBYOBRequest");
      function Be4(e12) {
        if (!Ti(e12)) return;
        if (e12._pulling) {
          e12._pullAgain = true;
          return;
        }
        e12._pulling = true;
        const r8 = e12._pullAlgorithm();
        g9(r8, () => (e12._pulling = false, e12._pullAgain && (e12._pullAgain = false, Be4(e12)), null), (s37) => (Z4(e12, s37), null));
      }
      n4(Be4, "ReadableByteStreamControllerCallPullIfNeeded");
      function En(e12) {
        Pr(e12), e12._pendingPullIntos = new M5();
      }
      n4(En, "ReadableByteStreamControllerClearPendingPullIntos");
      function Cr(e12, t13) {
        let r8 = false;
        e12._state === "closed" && (r8 = true);
        const s37 = vn(t13);
        t13.readerType === "default" ? pr(e12, s37, r8) : Bi(e12, s37, r8);
      }
      n4(Cr, "ReadableByteStreamControllerCommitPullIntoDescriptor");
      function vn(e12) {
        const t13 = e12.bytesFilled, r8 = e12.elementSize;
        return new e12.viewConstructor(e12.buffer, e12.byteOffset, t13 / r8);
      }
      n4(vn, "ReadableByteStreamControllerConvertPullIntoDescriptor");
      function wt3(e12, t13, r8, s37) {
        e12._queue.push({ buffer: t13, byteOffset: r8, byteLength: s37 }), e12._queueTotalSize += s37;
      }
      n4(wt3, "ReadableByteStreamControllerEnqueueChunkToQueue");
      function An(e12, t13, r8, s37) {
        let f11;
        try {
          f11 = Rn(t13, r8, r8 + s37);
        } catch (c13) {
          throw Z4(e12, c13), c13;
        }
        wt3(e12, f11, 0, s37);
      }
      n4(An, "ReadableByteStreamControllerEnqueueClonedChunkToQueue");
      function Bn(e12, t13) {
        t13.bytesFilled > 0 && An(e12, t13.buffer, t13.byteOffset, t13.bytesFilled), je4(e12);
      }
      n4(Bn, "ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue");
      function Wn(e12, t13) {
        const r8 = Math.min(e12._queueTotalSize, t13.byteLength - t13.bytesFilled), s37 = t13.bytesFilled + r8;
        let f11 = r8, c13 = false;
        const d6 = s37 % t13.elementSize, p13 = s37 - d6;
        p13 >= t13.minimumFill && (f11 = p13 - t13.bytesFilled, c13 = true);
        const R13 = e12._queue;
        for (; f11 > 0; ) {
          const y3 = R13.peek(), C5 = Math.min(f11, y3.byteLength), P3 = t13.byteOffset + t13.bytesFilled;
          wn(t13.buffer, P3, y3.buffer, y3.byteOffset, C5), y3.byteLength === C5 ? R13.shift() : (y3.byteOffset += C5, y3.byteLength -= C5), e12._queueTotalSize -= C5, kn(e12, C5, t13), f11 -= C5;
        }
        return c13;
      }
      n4(Wn, "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue");
      function kn(e12, t13, r8) {
        r8.bytesFilled += t13;
      }
      n4(kn, "ReadableByteStreamControllerFillHeadPullIntoDescriptor");
      function qn(e12) {
        e12._queueTotalSize === 0 && e12._closeRequested ? (Rt3(e12), lt2(e12._controlledReadableByteStream)) : Be4(e12);
      }
      n4(qn, "ReadableByteStreamControllerHandleQueueDrain");
      function Pr(e12) {
        e12._byobRequest !== null && (e12._byobRequest._associatedReadableByteStreamController = void 0, e12._byobRequest._view = null, e12._byobRequest = null);
      }
      n4(Pr, "ReadableByteStreamControllerInvalidateBYOBRequest");
      function Er(e12) {
        for (; e12._pendingPullIntos.length > 0; ) {
          if (e12._queueTotalSize === 0) return;
          const t13 = e12._pendingPullIntos.peek();
          Wn(e12, t13) && (je4(e12), Cr(e12._controlledReadableByteStream, t13));
        }
      }
      n4(Er, "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue");
      function _i(e12) {
        const t13 = e12._controlledReadableByteStream._reader;
        for (; t13._readRequests.length > 0; ) {
          if (e12._queueTotalSize === 0) return;
          const r8 = t13._readRequests.shift();
          In(e12, r8);
        }
      }
      n4(_i, "ReadableByteStreamControllerProcessReadRequestsUsingQueue");
      function Si(e12, t13, r8, s37) {
        const f11 = e12._controlledReadableByteStream, c13 = t13.constructor, d6 = gi(c13), { byteOffset: p13, byteLength: R13 } = t13, y3 = r8 * d6;
        let C5;
        try {
          C5 = fe4(t13.buffer);
        } catch (B3) {
          s37._errorSteps(B3);
          return;
        }
        const P3 = { buffer: C5, bufferByteLength: C5.byteLength, byteOffset: p13, byteLength: R13, bytesFilled: 0, minimumFill: y3, elementSize: d6, viewConstructor: c13, readerType: "byob" };
        if (e12._pendingPullIntos.length > 0) {
          e12._pendingPullIntos.push(P3), Ln(f11, s37);
          return;
        }
        if (f11._state === "closed") {
          const B3 = new c13(P3.buffer, P3.byteOffset, 0);
          s37._closeSteps(B3);
          return;
        }
        if (e12._queueTotalSize > 0) {
          if (Wn(e12, P3)) {
            const B3 = vn(P3);
            qn(e12), s37._chunkSteps(B3);
            return;
          }
          if (e12._closeRequested) {
            const B3 = new TypeError("Insufficient bytes to fill elements in the given buffer");
            Z4(e12, B3), s37._errorSteps(B3);
            return;
          }
        }
        e12._pendingPullIntos.push(P3), Ln(f11, s37), Be4(e12);
      }
      n4(Si, "ReadableByteStreamControllerPullInto");
      function wi(e12, t13) {
        t13.readerType === "none" && je4(e12);
        const r8 = e12._controlledReadableByteStream;
        if (Br(r8)) for (; Dn(r8) > 0; ) {
          const s37 = je4(e12);
          Cr(r8, s37);
        }
      }
      n4(wi, "ReadableByteStreamControllerRespondInClosedState");
      function Ri(e12, t13, r8) {
        if (kn(e12, t13, r8), r8.readerType === "none") {
          Bn(e12, r8), Er(e12);
          return;
        }
        if (r8.bytesFilled < r8.minimumFill) return;
        je4(e12);
        const s37 = r8.bytesFilled % r8.elementSize;
        if (s37 > 0) {
          const f11 = r8.byteOffset + r8.bytesFilled;
          An(e12, r8.buffer, f11 - s37, s37);
        }
        r8.bytesFilled -= s37, Cr(e12._controlledReadableByteStream, r8), Er(e12);
      }
      n4(Ri, "ReadableByteStreamControllerRespondInReadableState");
      function On(e12, t13) {
        const r8 = e12._pendingPullIntos.peek();
        Pr(e12), e12._controlledReadableByteStream._state === "closed" ? wi(e12, r8) : Ri(e12, t13, r8), Be4(e12);
      }
      n4(On, "ReadableByteStreamControllerRespondInternal");
      function je4(e12) {
        return e12._pendingPullIntos.shift();
      }
      n4(je4, "ReadableByteStreamControllerShiftPendingPullInto");
      function Ti(e12) {
        const t13 = e12._controlledReadableByteStream;
        return t13._state !== "readable" || e12._closeRequested || !e12._started ? false : !!(mn(t13) && gt3(t13) > 0 || Br(t13) && Dn(t13) > 0 || Fn(e12) > 0);
      }
      n4(Ti, "ReadableByteStreamControllerShouldCallPull");
      function Rt3(e12) {
        e12._pullAlgorithm = void 0, e12._cancelAlgorithm = void 0;
      }
      n4(Rt3, "ReadableByteStreamControllerClearAlgorithms");
      function rt2(e12) {
        const t13 = e12._controlledReadableByteStream;
        if (!(e12._closeRequested || t13._state !== "readable")) {
          if (e12._queueTotalSize > 0) {
            e12._closeRequested = true;
            return;
          }
          if (e12._pendingPullIntos.length > 0) {
            const r8 = e12._pendingPullIntos.peek();
            if (r8.bytesFilled % r8.elementSize !== 0) {
              const s37 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              throw Z4(e12, s37), s37;
            }
          }
          Rt3(e12), lt2(t13);
        }
      }
      n4(rt2, "ReadableByteStreamControllerClose");
      function Tt3(e12, t13) {
        const r8 = e12._controlledReadableByteStream;
        if (e12._closeRequested || r8._state !== "readable") return;
        const { buffer: s37, byteOffset: f11, byteLength: c13 } = t13;
        if (_e3(s37)) throw new TypeError("chunk's buffer is detached and so cannot be enqueued");
        const d6 = fe4(s37);
        if (e12._pendingPullIntos.length > 0) {
          const p13 = e12._pendingPullIntos.peek();
          if (_e3(p13.buffer)) throw new TypeError("The BYOB request's buffer has been detached and so cannot be filled with an enqueued chunk");
          Pr(e12), p13.buffer = fe4(p13.buffer), p13.readerType === "none" && Bn(e12, p13);
        }
        if (mn(r8)) if (_i(e12), gt3(r8) === 0) wt3(e12, d6, f11, c13);
        else {
          e12._pendingPullIntos.length > 0 && je4(e12);
          const p13 = new Uint8Array(d6, f11, c13);
          pr(r8, p13, false);
        }
        else Br(r8) ? (wt3(e12, d6, f11, c13), Er(e12)) : wt3(e12, d6, f11, c13);
        Be4(e12);
      }
      n4(Tt3, "ReadableByteStreamControllerEnqueue");
      function Z4(e12, t13) {
        const r8 = e12._controlledReadableByteStream;
        r8._state === "readable" && (En(e12), Se3(e12), Rt3(e12), lo(r8, t13));
      }
      n4(Z4, "ReadableByteStreamControllerError");
      function In(e12, t13) {
        const r8 = e12._queue.shift();
        e12._queueTotalSize -= r8.byteLength, qn(e12);
        const s37 = new Uint8Array(r8.buffer, r8.byteOffset, r8.byteLength);
        t13._chunkSteps(s37);
      }
      n4(In, "ReadableByteStreamControllerFillReadRequestFromQueue");
      function vr2(e12) {
        if (e12._byobRequest === null && e12._pendingPullIntos.length > 0) {
          const t13 = e12._pendingPullIntos.peek(), r8 = new Uint8Array(t13.buffer, t13.byteOffset + t13.bytesFilled, t13.byteLength - t13.bytesFilled), s37 = Object.create(ve3.prototype);
          Pi(s37, e12, r8), e12._byobRequest = s37;
        }
        return e12._byobRequest;
      }
      n4(vr2, "ReadableByteStreamControllerGetBYOBRequest");
      function Fn(e12) {
        const t13 = e12._controlledReadableByteStream._state;
        return t13 === "errored" ? null : t13 === "closed" ? 0 : e12._strategyHWM - e12._queueTotalSize;
      }
      n4(Fn, "ReadableByteStreamControllerGetDesiredSize");
      function Ct3(e12, t13) {
        const r8 = e12._pendingPullIntos.peek();
        if (e12._controlledReadableByteStream._state === "closed") {
          if (t13 !== 0) throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
        } else {
          if (t13 === 0) throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
          if (r8.bytesFilled + t13 > r8.byteLength) throw new RangeError("bytesWritten out of range");
        }
        r8.buffer = fe4(r8.buffer), On(e12, t13);
      }
      n4(Ct3, "ReadableByteStreamControllerRespond");
      function Pt2(e12, t13) {
        const r8 = e12._pendingPullIntos.peek();
        if (e12._controlledReadableByteStream._state === "closed") {
          if (t13.byteLength !== 0) throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
        } else if (t13.byteLength === 0) throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
        if (r8.byteOffset + r8.bytesFilled !== t13.byteOffset) throw new RangeError("The region specified by view does not match byobRequest");
        if (r8.bufferByteLength !== t13.buffer.byteLength) throw new RangeError("The buffer of view has different capacity than byobRequest");
        if (r8.bytesFilled + t13.byteLength > r8.byteLength) throw new RangeError("The region specified by view is larger than byobRequest");
        const f11 = t13.byteLength;
        r8.buffer = fe4(t13.buffer), On(e12, f11);
      }
      n4(Pt2, "ReadableByteStreamControllerRespondWithNewView");
      function zn(e12, t13, r8, s37, f11, c13, d6) {
        t13._controlledReadableByteStream = e12, t13._pullAgain = false, t13._pulling = false, t13._byobRequest = null, t13._queue = t13._queueTotalSize = void 0, Se3(t13), t13._closeRequested = false, t13._started = false, t13._strategyHWM = c13, t13._pullAlgorithm = s37, t13._cancelAlgorithm = f11, t13._autoAllocateChunkSize = d6, t13._pendingPullIntos = new M5(), e12._readableStreamController = t13;
        const p13 = r8();
        g9(T4(p13), () => (t13._started = true, Be4(t13), null), (R13) => (Z4(t13, R13), null));
      }
      n4(zn, "SetUpReadableByteStreamController");
      function Ci(e12, t13, r8) {
        const s37 = Object.create(ce3.prototype);
        let f11, c13, d6;
        t13.start !== void 0 ? f11 = n4(() => t13.start(s37), "startAlgorithm") : f11 = n4(() => {
        }, "startAlgorithm"), t13.pull !== void 0 ? c13 = n4(() => t13.pull(s37), "pullAlgorithm") : c13 = n4(() => T4(void 0), "pullAlgorithm"), t13.cancel !== void 0 ? d6 = n4((R13) => t13.cancel(R13), "cancelAlgorithm") : d6 = n4(() => T4(void 0), "cancelAlgorithm");
        const p13 = t13.autoAllocateChunkSize;
        if (p13 === 0) throw new TypeError("autoAllocateChunkSize must be greater than 0");
        zn(e12, s37, f11, c13, d6, r8, p13);
      }
      n4(Ci, "SetUpReadableByteStreamControllerFromUnderlyingSource");
      function Pi(e12, t13, r8) {
        e12._associatedReadableByteStreamController = t13, e12._view = r8;
      }
      n4(Pi, "SetUpReadableStreamBYOBRequest");
      function Ar(e12) {
        return new TypeError(`ReadableStreamBYOBRequest.prototype.${e12} can only be used on a ReadableStreamBYOBRequest`);
      }
      n4(Ar, "byobRequestBrandCheckException");
      function nt2(e12) {
        return new TypeError(`ReadableByteStreamController.prototype.${e12} can only be used on a ReadableByteStreamController`);
      }
      n4(nt2, "byteStreamControllerBrandCheckException");
      function Ei(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.mode;
        return { mode: r8 === void 0 ? void 0 : vi(r8, `${t13} has member 'mode' that`) };
      }
      n4(Ei, "convertReaderOptions");
      function vi(e12, t13) {
        if (e12 = `${e12}`, e12 !== "byob") throw new TypeError(`${t13} '${e12}' is not a valid enumeration value for ReadableStreamReaderMode`);
        return e12;
      }
      n4(vi, "convertReadableStreamReaderMode");
      function Ai(e12, t13) {
        var r8;
        ne4(e12, t13);
        const s37 = (r8 = e12?.min) !== null && r8 !== void 0 ? r8 : 1;
        return { min: mr2(s37, `${t13} has member 'min' that`) };
      }
      n4(Ai, "convertByobReadOptions");
      function jn(e12) {
        return new we3(e12);
      }
      n4(jn, "AcquireReadableStreamBYOBReader");
      function Ln(e12, t13) {
        e12._reader._readIntoRequests.push(t13);
      }
      n4(Ln, "ReadableStreamAddReadIntoRequest");
      function Bi(e12, t13, r8) {
        const f11 = e12._reader._readIntoRequests.shift();
        r8 ? f11._closeSteps(t13) : f11._chunkSteps(t13);
      }
      n4(Bi, "ReadableStreamFulfillReadIntoRequest");
      function Dn(e12) {
        return e12._reader._readIntoRequests.length;
      }
      n4(Dn, "ReadableStreamGetNumReadIntoRequests");
      function Br(e12) {
        const t13 = e12._reader;
        return !(t13 === void 0 || !We4(t13));
      }
      n4(Br, "ReadableStreamHasBYOBReader");
      class we3 {
        static {
          n4(this, "ReadableStreamBYOBReader");
        }
        constructor(t13) {
          if (le4(t13, 1, "ReadableStreamBYOBReader"), br(t13, "First parameter"), Ce4(t13)) throw new TypeError("This stream has already been locked for exclusive reading by another reader");
          if (!Ae4(t13._readableStreamController)) throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
          sn(this, t13), this._readIntoRequests = new M5();
        }
        get closed() {
          return We4(this) ? this._closedPromise : b4(Et2("closed"));
        }
        cancel(t13 = void 0) {
          return We4(this) ? this._ownerReadableStream === void 0 ? b4(yt2("cancel")) : lr2(this, t13) : b4(Et2("cancel"));
        }
        read(t13, r8 = {}) {
          if (!We4(this)) return b4(Et2("read"));
          if (!ArrayBuffer.isView(t13)) return b4(new TypeError("view must be an array buffer view"));
          if (t13.byteLength === 0) return b4(new TypeError("view must have non-zero byteLength"));
          if (t13.buffer.byteLength === 0) return b4(new TypeError("view's buffer must have non-zero byteLength"));
          if (_e3(t13.buffer)) return b4(new TypeError("view's buffer has been detached"));
          let s37;
          try {
            s37 = Ai(r8, "options");
          } catch (y3) {
            return b4(y3);
          }
          const f11 = s37.min;
          if (f11 === 0) return b4(new TypeError("options.min must be greater than 0"));
          if (yi(t13)) {
            if (f11 > t13.byteLength) return b4(new RangeError("options.min must be less than or equal to view's byteLength"));
          } else if (f11 > t13.length) return b4(new RangeError("options.min must be less than or equal to view's length"));
          if (this._ownerReadableStream === void 0) return b4(yt2("read from"));
          let c13, d6;
          const p13 = A4((y3, C5) => {
            c13 = y3, d6 = C5;
          });
          return $n(this, t13, f11, { _chunkSteps: n4((y3) => c13({ value: y3, done: false }), "_chunkSteps"), _closeSteps: n4((y3) => c13({ value: y3, done: true }), "_closeSteps"), _errorSteps: n4((y3) => d6(y3), "_errorSteps") }), p13;
        }
        releaseLock() {
          if (!We4(this)) throw Et2("releaseLock");
          this._ownerReadableStream !== void 0 && Wi(this);
        }
      }
      Object.defineProperties(we3.prototype, { cancel: { enumerable: true }, read: { enumerable: true }, releaseLock: { enumerable: true }, closed: { enumerable: true } }), h8(we3.prototype.cancel, "cancel"), h8(we3.prototype.read, "read"), h8(we3.prototype.releaseLock, "releaseLock"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(we3.prototype, Symbol.toStringTag, { value: "ReadableStreamBYOBReader", configurable: true });
      function We4(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_readIntoRequests") ? false : e12 instanceof we3;
      }
      n4(We4, "IsReadableStreamBYOBReader");
      function $n(e12, t13, r8, s37) {
        const f11 = e12._ownerReadableStream;
        f11._disturbed = true, f11._state === "errored" ? s37._errorSteps(f11._storedError) : Si(f11._readableStreamController, t13, r8, s37);
      }
      n4($n, "ReadableStreamBYOBReaderRead");
      function Wi(e12) {
        ue4(e12);
        const t13 = new TypeError("Reader was released");
        Mn(e12, t13);
      }
      n4(Wi, "ReadableStreamBYOBReaderRelease");
      function Mn(e12, t13) {
        const r8 = e12._readIntoRequests;
        e12._readIntoRequests = new M5(), r8.forEach((s37) => {
          s37._errorSteps(t13);
        });
      }
      n4(Mn, "ReadableStreamBYOBReaderErrorReadIntoRequests");
      function Et2(e12) {
        return new TypeError(`ReadableStreamBYOBReader.prototype.${e12} can only be used on a ReadableStreamBYOBReader`);
      }
      n4(Et2, "byobReaderBrandCheckException");
      function ot2(e12, t13) {
        const { highWaterMark: r8 } = e12;
        if (r8 === void 0) return t13;
        if (Sn(r8) || r8 < 0) throw new RangeError("Invalid highWaterMark");
        return r8;
      }
      n4(ot2, "ExtractHighWaterMark");
      function vt3(e12) {
        const { size: t13 } = e12;
        return t13 || (() => 1);
      }
      n4(vt3, "ExtractSizeAlgorithm");
      function At2(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.highWaterMark, s37 = e12?.size;
        return { highWaterMark: r8 === void 0 ? void 0 : hr2(r8), size: s37 === void 0 ? void 0 : ki(s37, `${t13} has member 'size' that`) };
      }
      n4(At2, "convertQueuingStrategy");
      function ki(e12, t13) {
        return G3(e12, t13), (r8) => hr2(e12(r8));
      }
      n4(ki, "convertQueuingStrategySize");
      function qi(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.abort, s37 = e12?.close, f11 = e12?.start, c13 = e12?.type, d6 = e12?.write;
        return { abort: r8 === void 0 ? void 0 : Oi(r8, e12, `${t13} has member 'abort' that`), close: s37 === void 0 ? void 0 : Ii(s37, e12, `${t13} has member 'close' that`), start: f11 === void 0 ? void 0 : Fi(f11, e12, `${t13} has member 'start' that`), write: d6 === void 0 ? void 0 : zi(d6, e12, `${t13} has member 'write' that`), type: c13 };
      }
      n4(qi, "convertUnderlyingSink");
      function Oi(e12, t13, r8) {
        return G3(e12, r8), (s37) => z4(e12, t13, [s37]);
      }
      n4(Oi, "convertUnderlyingSinkAbortCallback");
      function Ii(e12, t13, r8) {
        return G3(e12, r8), () => z4(e12, t13, []);
      }
      n4(Ii, "convertUnderlyingSinkCloseCallback");
      function Fi(e12, t13, r8) {
        return G3(e12, r8), (s37) => O3(e12, t13, [s37]);
      }
      n4(Fi, "convertUnderlyingSinkStartCallback");
      function zi(e12, t13, r8) {
        return G3(e12, r8), (s37, f11) => z4(e12, t13, [s37, f11]);
      }
      n4(zi, "convertUnderlyingSinkWriteCallback");
      function Un(e12, t13) {
        if (!Le3(e12)) throw new TypeError(`${t13} is not a WritableStream.`);
      }
      n4(Un, "assertWritableStream");
      function ji(e12) {
        if (typeof e12 != "object" || e12 === null) return false;
        try {
          return typeof e12.aborted == "boolean";
        } catch {
          return false;
        }
      }
      n4(ji, "isAbortSignal");
      const Li = typeof AbortController == "function";
      function Di() {
        if (Li) return new AbortController();
      }
      n4(Di, "createAbortController");
      class Re4 {
        static {
          n4(this, "WritableStream");
        }
        constructor(t13 = {}, r8 = {}) {
          t13 === void 0 ? t13 = null : cn(t13, "First parameter");
          const s37 = At2(r8, "Second parameter"), f11 = qi(t13, "First parameter");
          if (Nn(this), f11.type !== void 0) throw new RangeError("Invalid type is specified");
          const d6 = vt3(s37), p13 = ot2(s37, 1);
          Xi(this, f11, p13, d6);
        }
        get locked() {
          if (!Le3(this)) throw Ot3("locked");
          return De4(this);
        }
        abort(t13 = void 0) {
          return Le3(this) ? De4(this) ? b4(new TypeError("Cannot abort a stream that already has a writer")) : Bt3(this, t13) : b4(Ot3("abort"));
        }
        close() {
          return Le3(this) ? De4(this) ? b4(new TypeError("Cannot close a stream that already has a writer")) : oe3(this) ? b4(new TypeError("Cannot close an already-closing stream")) : Hn(this) : b4(Ot3("close"));
        }
        getWriter() {
          if (!Le3(this)) throw Ot3("getWriter");
          return xn(this);
        }
      }
      Object.defineProperties(Re4.prototype, { abort: { enumerable: true }, close: { enumerable: true }, getWriter: { enumerable: true }, locked: { enumerable: true } }), h8(Re4.prototype.abort, "abort"), h8(Re4.prototype.close, "close"), h8(Re4.prototype.getWriter, "getWriter"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(Re4.prototype, Symbol.toStringTag, { value: "WritableStream", configurable: true });
      function xn(e12) {
        return new de4(e12);
      }
      n4(xn, "AcquireWritableStreamDefaultWriter");
      function $i(e12, t13, r8, s37, f11 = 1, c13 = () => 1) {
        const d6 = Object.create(Re4.prototype);
        Nn(d6);
        const p13 = Object.create($e3.prototype);
        return Kn(d6, p13, e12, t13, r8, s37, f11, c13), d6;
      }
      n4($i, "CreateWritableStream");
      function Nn(e12) {
        e12._state = "writable", e12._storedError = void 0, e12._writer = void 0, e12._writableStreamController = void 0, e12._writeRequests = new M5(), e12._inFlightWriteRequest = void 0, e12._closeRequest = void 0, e12._inFlightCloseRequest = void 0, e12._pendingAbortRequest = void 0, e12._backpressure = false;
      }
      n4(Nn, "InitializeWritableStream");
      function Le3(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_writableStreamController") ? false : e12 instanceof Re4;
      }
      n4(Le3, "IsWritableStream");
      function De4(e12) {
        return e12._writer !== void 0;
      }
      n4(De4, "IsWritableStreamLocked");
      function Bt3(e12, t13) {
        var r8;
        if (e12._state === "closed" || e12._state === "errored") return T4(void 0);
        e12._writableStreamController._abortReason = t13, (r8 = e12._writableStreamController._abortController) === null || r8 === void 0 || r8.abort(t13);
        const s37 = e12._state;
        if (s37 === "closed" || s37 === "errored") return T4(void 0);
        if (e12._pendingAbortRequest !== void 0) return e12._pendingAbortRequest._promise;
        let f11 = false;
        s37 === "erroring" && (f11 = true, t13 = void 0);
        const c13 = A4((d6, p13) => {
          e12._pendingAbortRequest = { _promise: void 0, _resolve: d6, _reject: p13, _reason: t13, _wasAlreadyErroring: f11 };
        });
        return e12._pendingAbortRequest._promise = c13, f11 || kr2(e12, t13), c13;
      }
      n4(Bt3, "WritableStreamAbort");
      function Hn(e12) {
        const t13 = e12._state;
        if (t13 === "closed" || t13 === "errored") return b4(new TypeError(`The stream (in ${t13} state) is not in the writable state and cannot be closed`));
        const r8 = A4((f11, c13) => {
          const d6 = { _resolve: f11, _reject: c13 };
          e12._closeRequest = d6;
        }), s37 = e12._writer;
        return s37 !== void 0 && e12._backpressure && t13 === "writable" && Dr(s37), ea(e12._writableStreamController), r8;
      }
      n4(Hn, "WritableStreamClose");
      function Mi(e12) {
        return A4((r8, s37) => {
          const f11 = { _resolve: r8, _reject: s37 };
          e12._writeRequests.push(f11);
        });
      }
      n4(Mi, "WritableStreamAddWriteRequest");
      function Wr(e12, t13) {
        if (e12._state === "writable") {
          kr2(e12, t13);
          return;
        }
        qr(e12);
      }
      n4(Wr, "WritableStreamDealWithRejection");
      function kr2(e12, t13) {
        const r8 = e12._writableStreamController;
        e12._state = "erroring", e12._storedError = t13;
        const s37 = e12._writer;
        s37 !== void 0 && Qn(s37, t13), !Vi(e12) && r8._started && qr(e12);
      }
      n4(kr2, "WritableStreamStartErroring");
      function qr(e12) {
        e12._state = "errored", e12._writableStreamController[an]();
        const t13 = e12._storedError;
        if (e12._writeRequests.forEach((f11) => {
          f11._reject(t13);
        }), e12._writeRequests = new M5(), e12._pendingAbortRequest === void 0) {
          Wt2(e12);
          return;
        }
        const r8 = e12._pendingAbortRequest;
        if (e12._pendingAbortRequest = void 0, r8._wasAlreadyErroring) {
          r8._reject(t13), Wt2(e12);
          return;
        }
        const s37 = e12._writableStreamController[pt2](r8._reason);
        g9(s37, () => (r8._resolve(), Wt2(e12), null), (f11) => (r8._reject(f11), Wt2(e12), null));
      }
      n4(qr, "WritableStreamFinishErroring");
      function Ui(e12) {
        e12._inFlightWriteRequest._resolve(void 0), e12._inFlightWriteRequest = void 0;
      }
      n4(Ui, "WritableStreamFinishInFlightWrite");
      function xi(e12, t13) {
        e12._inFlightWriteRequest._reject(t13), e12._inFlightWriteRequest = void 0, Wr(e12, t13);
      }
      n4(xi, "WritableStreamFinishInFlightWriteWithError");
      function Ni(e12) {
        e12._inFlightCloseRequest._resolve(void 0), e12._inFlightCloseRequest = void 0, e12._state === "erroring" && (e12._storedError = void 0, e12._pendingAbortRequest !== void 0 && (e12._pendingAbortRequest._resolve(), e12._pendingAbortRequest = void 0)), e12._state = "closed";
        const r8 = e12._writer;
        r8 !== void 0 && to(r8);
      }
      n4(Ni, "WritableStreamFinishInFlightClose");
      function Hi(e12, t13) {
        e12._inFlightCloseRequest._reject(t13), e12._inFlightCloseRequest = void 0, e12._pendingAbortRequest !== void 0 && (e12._pendingAbortRequest._reject(t13), e12._pendingAbortRequest = void 0), Wr(e12, t13);
      }
      n4(Hi, "WritableStreamFinishInFlightCloseWithError");
      function oe3(e12) {
        return !(e12._closeRequest === void 0 && e12._inFlightCloseRequest === void 0);
      }
      n4(oe3, "WritableStreamCloseQueuedOrInFlight");
      function Vi(e12) {
        return !(e12._inFlightWriteRequest === void 0 && e12._inFlightCloseRequest === void 0);
      }
      n4(Vi, "WritableStreamHasOperationMarkedInFlight");
      function Qi(e12) {
        e12._inFlightCloseRequest = e12._closeRequest, e12._closeRequest = void 0;
      }
      n4(Qi, "WritableStreamMarkCloseRequestInFlight");
      function Yi(e12) {
        e12._inFlightWriteRequest = e12._writeRequests.shift();
      }
      n4(Yi, "WritableStreamMarkFirstWriteRequestInFlight");
      function Wt2(e12) {
        e12._closeRequest !== void 0 && (e12._closeRequest._reject(e12._storedError), e12._closeRequest = void 0);
        const t13 = e12._writer;
        t13 !== void 0 && jr(t13, e12._storedError);
      }
      n4(Wt2, "WritableStreamRejectCloseAndClosedPromiseIfNeeded");
      function Or2(e12, t13) {
        const r8 = e12._writer;
        r8 !== void 0 && t13 !== e12._backpressure && (t13 ? sa(r8) : Dr(r8)), e12._backpressure = t13;
      }
      n4(Or2, "WritableStreamUpdateBackpressure");
      class de4 {
        static {
          n4(this, "WritableStreamDefaultWriter");
        }
        constructor(t13) {
          if (le4(t13, 1, "WritableStreamDefaultWriter"), Un(t13, "First parameter"), De4(t13)) throw new TypeError("This stream has already been locked for exclusive writing by another writer");
          this._ownerWritableStream = t13, t13._writer = this;
          const r8 = t13._state;
          if (r8 === "writable") !oe3(t13) && t13._backpressure ? Ft2(this) : ro(this), It2(this);
          else if (r8 === "erroring") Lr(this, t13._storedError), It2(this);
          else if (r8 === "closed") ro(this), ia(this);
          else {
            const s37 = t13._storedError;
            Lr(this, s37), eo(this, s37);
          }
        }
        get closed() {
          return ke4(this) ? this._closedPromise : b4(qe3("closed"));
        }
        get desiredSize() {
          if (!ke4(this)) throw qe3("desiredSize");
          if (this._ownerWritableStream === void 0) throw at3("desiredSize");
          return Ji(this);
        }
        get ready() {
          return ke4(this) ? this._readyPromise : b4(qe3("ready"));
        }
        abort(t13 = void 0) {
          return ke4(this) ? this._ownerWritableStream === void 0 ? b4(at3("abort")) : Gi(this, t13) : b4(qe3("abort"));
        }
        close() {
          if (!ke4(this)) return b4(qe3("close"));
          const t13 = this._ownerWritableStream;
          return t13 === void 0 ? b4(at3("close")) : oe3(t13) ? b4(new TypeError("Cannot close an already-closing stream")) : Vn(this);
        }
        releaseLock() {
          if (!ke4(this)) throw qe3("releaseLock");
          this._ownerWritableStream !== void 0 && Yn(this);
        }
        write(t13 = void 0) {
          return ke4(this) ? this._ownerWritableStream === void 0 ? b4(at3("write to")) : Gn(this, t13) : b4(qe3("write"));
        }
      }
      Object.defineProperties(de4.prototype, { abort: { enumerable: true }, close: { enumerable: true }, releaseLock: { enumerable: true }, write: { enumerable: true }, closed: { enumerable: true }, desiredSize: { enumerable: true }, ready: { enumerable: true } }), h8(de4.prototype.abort, "abort"), h8(de4.prototype.close, "close"), h8(de4.prototype.releaseLock, "releaseLock"), h8(de4.prototype.write, "write"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(de4.prototype, Symbol.toStringTag, { value: "WritableStreamDefaultWriter", configurable: true });
      function ke4(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_ownerWritableStream") ? false : e12 instanceof de4;
      }
      n4(ke4, "IsWritableStreamDefaultWriter");
      function Gi(e12, t13) {
        const r8 = e12._ownerWritableStream;
        return Bt3(r8, t13);
      }
      n4(Gi, "WritableStreamDefaultWriterAbort");
      function Vn(e12) {
        const t13 = e12._ownerWritableStream;
        return Hn(t13);
      }
      n4(Vn, "WritableStreamDefaultWriterClose");
      function Zi(e12) {
        const t13 = e12._ownerWritableStream, r8 = t13._state;
        return oe3(t13) || r8 === "closed" ? T4(void 0) : r8 === "errored" ? b4(t13._storedError) : Vn(e12);
      }
      n4(Zi, "WritableStreamDefaultWriterCloseWithErrorPropagation");
      function Ki(e12, t13) {
        e12._closedPromiseState === "pending" ? jr(e12, t13) : aa(e12, t13);
      }
      n4(Ki, "WritableStreamDefaultWriterEnsureClosedPromiseRejected");
      function Qn(e12, t13) {
        e12._readyPromiseState === "pending" ? no(e12, t13) : ua(e12, t13);
      }
      n4(Qn, "WritableStreamDefaultWriterEnsureReadyPromiseRejected");
      function Ji(e12) {
        const t13 = e12._ownerWritableStream, r8 = t13._state;
        return r8 === "errored" || r8 === "erroring" ? null : r8 === "closed" ? 0 : Jn(t13._writableStreamController);
      }
      n4(Ji, "WritableStreamDefaultWriterGetDesiredSize");
      function Yn(e12) {
        const t13 = e12._ownerWritableStream, r8 = new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");
        Qn(e12, r8), Ki(e12, r8), t13._writer = void 0, e12._ownerWritableStream = void 0;
      }
      n4(Yn, "WritableStreamDefaultWriterRelease");
      function Gn(e12, t13) {
        const r8 = e12._ownerWritableStream, s37 = r8._writableStreamController, f11 = ta(s37, t13);
        if (r8 !== e12._ownerWritableStream) return b4(at3("write to"));
        const c13 = r8._state;
        if (c13 === "errored") return b4(r8._storedError);
        if (oe3(r8) || c13 === "closed") return b4(new TypeError("The stream is closing or closed and cannot be written to"));
        if (c13 === "erroring") return b4(r8._storedError);
        const d6 = Mi(r8);
        return ra(s37, t13, f11), d6;
      }
      n4(Gn, "WritableStreamDefaultWriterWrite");
      const Zn = {};
      class $e3 {
        static {
          n4(this, "WritableStreamDefaultController");
        }
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get abortReason() {
          if (!Ir(this)) throw zr("abortReason");
          return this._abortReason;
        }
        get signal() {
          if (!Ir(this)) throw zr("signal");
          if (this._abortController === void 0) throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
          return this._abortController.signal;
        }
        error(t13 = void 0) {
          if (!Ir(this)) throw zr("error");
          this._controlledWritableStream._state === "writable" && Xn(this, t13);
        }
        [pt2](t13) {
          const r8 = this._abortAlgorithm(t13);
          return kt2(this), r8;
        }
        [an]() {
          Se3(this);
        }
      }
      Object.defineProperties($e3.prototype, { abortReason: { enumerable: true }, signal: { enumerable: true }, error: { enumerable: true } }), typeof Symbol.toStringTag == "symbol" && Object.defineProperty($e3.prototype, Symbol.toStringTag, { value: "WritableStreamDefaultController", configurable: true });
      function Ir(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_controlledWritableStream") ? false : e12 instanceof $e3;
      }
      n4(Ir, "IsWritableStreamDefaultController");
      function Kn(e12, t13, r8, s37, f11, c13, d6, p13) {
        t13._controlledWritableStream = e12, e12._writableStreamController = t13, t13._queue = void 0, t13._queueTotalSize = void 0, Se3(t13), t13._abortReason = void 0, t13._abortController = Di(), t13._started = false, t13._strategySizeAlgorithm = p13, t13._strategyHWM = d6, t13._writeAlgorithm = s37, t13._closeAlgorithm = f11, t13._abortAlgorithm = c13;
        const R13 = Fr(t13);
        Or2(e12, R13);
        const y3 = r8(), C5 = T4(y3);
        g9(C5, () => (t13._started = true, qt3(t13), null), (P3) => (t13._started = true, Wr(e12, P3), null));
      }
      n4(Kn, "SetUpWritableStreamDefaultController");
      function Xi(e12, t13, r8, s37) {
        const f11 = Object.create($e3.prototype);
        let c13, d6, p13, R13;
        t13.start !== void 0 ? c13 = n4(() => t13.start(f11), "startAlgorithm") : c13 = n4(() => {
        }, "startAlgorithm"), t13.write !== void 0 ? d6 = n4((y3) => t13.write(y3, f11), "writeAlgorithm") : d6 = n4(() => T4(void 0), "writeAlgorithm"), t13.close !== void 0 ? p13 = n4(() => t13.close(), "closeAlgorithm") : p13 = n4(() => T4(void 0), "closeAlgorithm"), t13.abort !== void 0 ? R13 = n4((y3) => t13.abort(y3), "abortAlgorithm") : R13 = n4(() => T4(void 0), "abortAlgorithm"), Kn(e12, f11, c13, d6, p13, R13, r8, s37);
      }
      n4(Xi, "SetUpWritableStreamDefaultControllerFromUnderlyingSink");
      function kt2(e12) {
        e12._writeAlgorithm = void 0, e12._closeAlgorithm = void 0, e12._abortAlgorithm = void 0, e12._strategySizeAlgorithm = void 0;
      }
      n4(kt2, "WritableStreamDefaultControllerClearAlgorithms");
      function ea(e12) {
        Rr(e12, Zn, 0), qt3(e12);
      }
      n4(ea, "WritableStreamDefaultControllerClose");
      function ta(e12, t13) {
        try {
          return e12._strategySizeAlgorithm(t13);
        } catch (r8) {
          return it(e12, r8), 1;
        }
      }
      n4(ta, "WritableStreamDefaultControllerGetChunkSize");
      function Jn(e12) {
        return e12._strategyHWM - e12._queueTotalSize;
      }
      n4(Jn, "WritableStreamDefaultControllerGetDesiredSize");
      function ra(e12, t13, r8) {
        try {
          Rr(e12, t13, r8);
        } catch (f11) {
          it(e12, f11);
          return;
        }
        const s37 = e12._controlledWritableStream;
        if (!oe3(s37) && s37._state === "writable") {
          const f11 = Fr(e12);
          Or2(s37, f11);
        }
        qt3(e12);
      }
      n4(ra, "WritableStreamDefaultControllerWrite");
      function qt3(e12) {
        const t13 = e12._controlledWritableStream;
        if (!e12._started || t13._inFlightWriteRequest !== void 0) return;
        if (t13._state === "erroring") {
          qr(t13);
          return;
        }
        if (e12._queue.length === 0) return;
        const s37 = pi(e12);
        s37 === Zn ? na(e12) : oa(e12, s37);
      }
      n4(qt3, "WritableStreamDefaultControllerAdvanceQueueIfNeeded");
      function it(e12, t13) {
        e12._controlledWritableStream._state === "writable" && Xn(e12, t13);
      }
      n4(it, "WritableStreamDefaultControllerErrorIfNeeded");
      function na(e12) {
        const t13 = e12._controlledWritableStream;
        Qi(t13), wr(e12);
        const r8 = e12._closeAlgorithm();
        kt2(e12), g9(r8, () => (Ni(t13), null), (s37) => (Hi(t13, s37), null));
      }
      n4(na, "WritableStreamDefaultControllerProcessClose");
      function oa(e12, t13) {
        const r8 = e12._controlledWritableStream;
        Yi(r8);
        const s37 = e12._writeAlgorithm(t13);
        g9(s37, () => {
          Ui(r8);
          const f11 = r8._state;
          if (wr(e12), !oe3(r8) && f11 === "writable") {
            const c13 = Fr(e12);
            Or2(r8, c13);
          }
          return qt3(e12), null;
        }, (f11) => (r8._state === "writable" && kt2(e12), xi(r8, f11), null));
      }
      n4(oa, "WritableStreamDefaultControllerProcessWrite");
      function Fr(e12) {
        return Jn(e12) <= 0;
      }
      n4(Fr, "WritableStreamDefaultControllerGetBackpressure");
      function Xn(e12, t13) {
        const r8 = e12._controlledWritableStream;
        kt2(e12), kr2(r8, t13);
      }
      n4(Xn, "WritableStreamDefaultControllerError");
      function Ot3(e12) {
        return new TypeError(`WritableStream.prototype.${e12} can only be used on a WritableStream`);
      }
      n4(Ot3, "streamBrandCheckException$2");
      function zr(e12) {
        return new TypeError(`WritableStreamDefaultController.prototype.${e12} can only be used on a WritableStreamDefaultController`);
      }
      n4(zr, "defaultControllerBrandCheckException$2");
      function qe3(e12) {
        return new TypeError(`WritableStreamDefaultWriter.prototype.${e12} can only be used on a WritableStreamDefaultWriter`);
      }
      n4(qe3, "defaultWriterBrandCheckException");
      function at3(e12) {
        return new TypeError("Cannot " + e12 + " a stream using a released writer");
      }
      n4(at3, "defaultWriterLockException");
      function It2(e12) {
        e12._closedPromise = A4((t13, r8) => {
          e12._closedPromise_resolve = t13, e12._closedPromise_reject = r8, e12._closedPromiseState = "pending";
        });
      }
      n4(It2, "defaultWriterClosedPromiseInitialize");
      function eo(e12, t13) {
        It2(e12), jr(e12, t13);
      }
      n4(eo, "defaultWriterClosedPromiseInitializeAsRejected");
      function ia(e12) {
        It2(e12), to(e12);
      }
      n4(ia, "defaultWriterClosedPromiseInitializeAsResolved");
      function jr(e12, t13) {
        e12._closedPromise_reject !== void 0 && (Q3(e12._closedPromise), e12._closedPromise_reject(t13), e12._closedPromise_resolve = void 0, e12._closedPromise_reject = void 0, e12._closedPromiseState = "rejected");
      }
      n4(jr, "defaultWriterClosedPromiseReject");
      function aa(e12, t13) {
        eo(e12, t13);
      }
      n4(aa, "defaultWriterClosedPromiseResetToRejected");
      function to(e12) {
        e12._closedPromise_resolve !== void 0 && (e12._closedPromise_resolve(void 0), e12._closedPromise_resolve = void 0, e12._closedPromise_reject = void 0, e12._closedPromiseState = "resolved");
      }
      n4(to, "defaultWriterClosedPromiseResolve");
      function Ft2(e12) {
        e12._readyPromise = A4((t13, r8) => {
          e12._readyPromise_resolve = t13, e12._readyPromise_reject = r8;
        }), e12._readyPromiseState = "pending";
      }
      n4(Ft2, "defaultWriterReadyPromiseInitialize");
      function Lr(e12, t13) {
        Ft2(e12), no(e12, t13);
      }
      n4(Lr, "defaultWriterReadyPromiseInitializeAsRejected");
      function ro(e12) {
        Ft2(e12), Dr(e12);
      }
      n4(ro, "defaultWriterReadyPromiseInitializeAsResolved");
      function no(e12, t13) {
        e12._readyPromise_reject !== void 0 && (Q3(e12._readyPromise), e12._readyPromise_reject(t13), e12._readyPromise_resolve = void 0, e12._readyPromise_reject = void 0, e12._readyPromiseState = "rejected");
      }
      n4(no, "defaultWriterReadyPromiseReject");
      function sa(e12) {
        Ft2(e12);
      }
      n4(sa, "defaultWriterReadyPromiseReset");
      function ua(e12, t13) {
        Lr(e12, t13);
      }
      n4(ua, "defaultWriterReadyPromiseResetToRejected");
      function Dr(e12) {
        e12._readyPromise_resolve !== void 0 && (e12._readyPromise_resolve(void 0), e12._readyPromise_resolve = void 0, e12._readyPromise_reject = void 0, e12._readyPromiseState = "fulfilled");
      }
      n4(Dr, "defaultWriterReadyPromiseResolve");
      function la() {
        if (typeof globalThis < "u") return globalThis;
        if (typeof self < "u") return self;
        if (typeof n3 < "u") return n3;
      }
      n4(la, "getGlobals");
      const $r2 = la();
      function fa(e12) {
        if (!(typeof e12 == "function" || typeof e12 == "object") || e12.name !== "DOMException") return false;
        try {
          return new e12(), true;
        } catch {
          return false;
        }
      }
      n4(fa, "isDOMExceptionConstructor");
      function ca() {
        const e12 = $r2?.DOMException;
        return fa(e12) ? e12 : void 0;
      }
      n4(ca, "getFromGlobal");
      function da() {
        const e12 = n4(function(r8, s37) {
          this.message = r8 || "", this.name = s37 || "Error", Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
        }, "DOMException");
        return h8(e12, "DOMException"), e12.prototype = Object.create(Error.prototype), Object.defineProperty(e12.prototype, "constructor", { value: e12, writable: true, configurable: true }), e12;
      }
      n4(da, "createPolyfill");
      const ha = ca() || da();
      function oo(e12, t13, r8, s37, f11, c13) {
        const d6 = ze4(e12), p13 = xn(t13);
        e12._disturbed = true;
        let R13 = false, y3 = T4(void 0);
        return A4((C5, P3) => {
          let B3;
          if (c13 !== void 0) {
            if (B3 = n4(() => {
              const _3 = c13.reason !== void 0 ? c13.reason : new ha("Aborted", "AbortError"), v5 = [];
              s37 || v5.push(() => t13._state === "writable" ? Bt3(t13, _3) : T4(void 0)), f11 || v5.push(() => e12._state === "readable" ? X4(e12, _3) : T4(void 0)), x3(() => Promise.all(v5.map((W4) => W4())), true, _3);
            }, "abortAlgorithm"), c13.aborted) {
              B3();
              return;
            }
            c13.addEventListener("abort", B3);
          }
          function ee4() {
            return A4((_3, v5) => {
              function W4(Y5) {
                Y5 ? _3() : q3(Ne4(), W4, v5);
              }
              n4(W4, "next"), W4(false);
            });
          }
          n4(ee4, "pipeLoop");
          function Ne4() {
            return R13 ? T4(true) : q3(p13._readyPromise, () => A4((_3, v5) => {
              et2(d6, { _chunkSteps: n4((W4) => {
                y3 = q3(Gn(p13, W4), void 0, l9), _3(false);
              }, "_chunkSteps"), _closeSteps: n4(() => _3(true), "_closeSteps"), _errorSteps: v5 });
            }));
          }
          if (n4(Ne4, "pipeStep"), me4(e12, d6._closedPromise, (_3) => (s37 ? K4(true, _3) : x3(() => Bt3(t13, _3), true, _3), null)), me4(t13, p13._closedPromise, (_3) => (f11 ? K4(true, _3) : x3(() => X4(e12, _3), true, _3), null)), U6(e12, d6._closedPromise, () => (r8 ? K4() : x3(() => Zi(p13)), null)), oe3(t13) || t13._state === "closed") {
            const _3 = new TypeError("the destination writable stream closed before all data could be piped to it");
            f11 ? K4(true, _3) : x3(() => X4(e12, _3), true, _3);
          }
          Q3(ee4());
          function Ee4() {
            const _3 = y3;
            return q3(y3, () => _3 !== y3 ? Ee4() : void 0);
          }
          n4(Ee4, "waitForWritesToFinish");
          function me4(_3, v5, W4) {
            _3._state === "errored" ? W4(_3._storedError) : I5(v5, W4);
          }
          n4(me4, "isOrBecomesErrored");
          function U6(_3, v5, W4) {
            _3._state === "closed" ? W4() : V5(v5, W4);
          }
          n4(U6, "isOrBecomesClosed");
          function x3(_3, v5, W4) {
            if (R13) return;
            R13 = true, t13._state === "writable" && !oe3(t13) ? V5(Ee4(), Y5) : Y5();
            function Y5() {
              return g9(_3(), () => be3(v5, W4), (He3) => be3(true, He3)), null;
            }
            n4(Y5, "doTheRest");
          }
          n4(x3, "shutdownWithAction");
          function K4(_3, v5) {
            R13 || (R13 = true, t13._state === "writable" && !oe3(t13) ? V5(Ee4(), () => be3(_3, v5)) : be3(_3, v5));
          }
          n4(K4, "shutdown");
          function be3(_3, v5) {
            return Yn(p13), ue4(d6), c13 !== void 0 && c13.removeEventListener("abort", B3), _3 ? P3(v5) : C5(void 0), null;
          }
          n4(be3, "finalize");
        });
      }
      n4(oo, "ReadableStreamPipeTo");
      class he3 {
        static {
          n4(this, "ReadableStreamDefaultController");
        }
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get desiredSize() {
          if (!zt3(this)) throw Lt3("desiredSize");
          return Mr(this);
        }
        close() {
          if (!zt3(this)) throw Lt3("close");
          if (!Ue3(this)) throw new TypeError("The stream is not in a state that permits close");
          Oe4(this);
        }
        enqueue(t13 = void 0) {
          if (!zt3(this)) throw Lt3("enqueue");
          if (!Ue3(this)) throw new TypeError("The stream is not in a state that permits enqueue");
          return Me4(this, t13);
        }
        error(t13 = void 0) {
          if (!zt3(this)) throw Lt3("error");
          J3(this, t13);
        }
        [ar2](t13) {
          Se3(this);
          const r8 = this._cancelAlgorithm(t13);
          return jt3(this), r8;
        }
        [sr](t13) {
          const r8 = this._controlledReadableStream;
          if (this._queue.length > 0) {
            const s37 = wr(this);
            this._closeRequested && this._queue.length === 0 ? (jt3(this), lt2(r8)) : st3(this), t13._chunkSteps(s37);
          } else hn(r8, t13), st3(this);
        }
        [ur2]() {
        }
      }
      Object.defineProperties(he3.prototype, { close: { enumerable: true }, enqueue: { enumerable: true }, error: { enumerable: true }, desiredSize: { enumerable: true } }), h8(he3.prototype.close, "close"), h8(he3.prototype.enqueue, "enqueue"), h8(he3.prototype.error, "error"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(he3.prototype, Symbol.toStringTag, { value: "ReadableStreamDefaultController", configurable: true });
      function zt3(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_controlledReadableStream") ? false : e12 instanceof he3;
      }
      n4(zt3, "IsReadableStreamDefaultController");
      function st3(e12) {
        if (!io(e12)) return;
        if (e12._pulling) {
          e12._pullAgain = true;
          return;
        }
        e12._pulling = true;
        const r8 = e12._pullAlgorithm();
        g9(r8, () => (e12._pulling = false, e12._pullAgain && (e12._pullAgain = false, st3(e12)), null), (s37) => (J3(e12, s37), null));
      }
      n4(st3, "ReadableStreamDefaultControllerCallPullIfNeeded");
      function io(e12) {
        const t13 = e12._controlledReadableStream;
        return !Ue3(e12) || !e12._started ? false : !!(Ce4(t13) && gt3(t13) > 0 || Mr(e12) > 0);
      }
      n4(io, "ReadableStreamDefaultControllerShouldCallPull");
      function jt3(e12) {
        e12._pullAlgorithm = void 0, e12._cancelAlgorithm = void 0, e12._strategySizeAlgorithm = void 0;
      }
      n4(jt3, "ReadableStreamDefaultControllerClearAlgorithms");
      function Oe4(e12) {
        if (!Ue3(e12)) return;
        const t13 = e12._controlledReadableStream;
        e12._closeRequested = true, e12._queue.length === 0 && (jt3(e12), lt2(t13));
      }
      n4(Oe4, "ReadableStreamDefaultControllerClose");
      function Me4(e12, t13) {
        if (!Ue3(e12)) return;
        const r8 = e12._controlledReadableStream;
        if (Ce4(r8) && gt3(r8) > 0) pr(r8, t13, false);
        else {
          let s37;
          try {
            s37 = e12._strategySizeAlgorithm(t13);
          } catch (f11) {
            throw J3(e12, f11), f11;
          }
          try {
            Rr(e12, t13, s37);
          } catch (f11) {
            throw J3(e12, f11), f11;
          }
        }
        st3(e12);
      }
      n4(Me4, "ReadableStreamDefaultControllerEnqueue");
      function J3(e12, t13) {
        const r8 = e12._controlledReadableStream;
        r8._state === "readable" && (Se3(e12), jt3(e12), lo(r8, t13));
      }
      n4(J3, "ReadableStreamDefaultControllerError");
      function Mr(e12) {
        const t13 = e12._controlledReadableStream._state;
        return t13 === "errored" ? null : t13 === "closed" ? 0 : e12._strategyHWM - e12._queueTotalSize;
      }
      n4(Mr, "ReadableStreamDefaultControllerGetDesiredSize");
      function ma(e12) {
        return !io(e12);
      }
      n4(ma, "ReadableStreamDefaultControllerHasBackpressure");
      function Ue3(e12) {
        const t13 = e12._controlledReadableStream._state;
        return !e12._closeRequested && t13 === "readable";
      }
      n4(Ue3, "ReadableStreamDefaultControllerCanCloseOrEnqueue");
      function ao(e12, t13, r8, s37, f11, c13, d6) {
        t13._controlledReadableStream = e12, t13._queue = void 0, t13._queueTotalSize = void 0, Se3(t13), t13._started = false, t13._closeRequested = false, t13._pullAgain = false, t13._pulling = false, t13._strategySizeAlgorithm = d6, t13._strategyHWM = c13, t13._pullAlgorithm = s37, t13._cancelAlgorithm = f11, e12._readableStreamController = t13;
        const p13 = r8();
        g9(T4(p13), () => (t13._started = true, st3(t13), null), (R13) => (J3(t13, R13), null));
      }
      n4(ao, "SetUpReadableStreamDefaultController");
      function ba(e12, t13, r8, s37) {
        const f11 = Object.create(he3.prototype);
        let c13, d6, p13;
        t13.start !== void 0 ? c13 = n4(() => t13.start(f11), "startAlgorithm") : c13 = n4(() => {
        }, "startAlgorithm"), t13.pull !== void 0 ? d6 = n4(() => t13.pull(f11), "pullAlgorithm") : d6 = n4(() => T4(void 0), "pullAlgorithm"), t13.cancel !== void 0 ? p13 = n4((R13) => t13.cancel(R13), "cancelAlgorithm") : p13 = n4(() => T4(void 0), "cancelAlgorithm"), ao(e12, f11, c13, d6, p13, r8, s37);
      }
      n4(ba, "SetUpReadableStreamDefaultControllerFromUnderlyingSource");
      function Lt3(e12) {
        return new TypeError(`ReadableStreamDefaultController.prototype.${e12} can only be used on a ReadableStreamDefaultController`);
      }
      n4(Lt3, "defaultControllerBrandCheckException$1");
      function pa(e12, t13) {
        return Ae4(e12._readableStreamController) ? ga(e12) : ya(e12);
      }
      n4(pa, "ReadableStreamTee");
      function ya(e12, t13) {
        const r8 = ze4(e12);
        let s37 = false, f11 = false, c13 = false, d6 = false, p13, R13, y3, C5, P3;
        const B3 = A4((U6) => {
          P3 = U6;
        });
        function ee4() {
          return s37 ? (f11 = true, T4(void 0)) : (s37 = true, et2(r8, { _chunkSteps: n4((x3) => {
            se4(() => {
              f11 = false;
              const K4 = x3, be3 = x3;
              c13 || Me4(y3._readableStreamController, K4), d6 || Me4(C5._readableStreamController, be3), s37 = false, f11 && ee4();
            });
          }, "_chunkSteps"), _closeSteps: n4(() => {
            s37 = false, c13 || Oe4(y3._readableStreamController), d6 || Oe4(C5._readableStreamController), (!c13 || !d6) && P3(void 0);
          }, "_closeSteps"), _errorSteps: n4(() => {
            s37 = false;
          }, "_errorSteps") }), T4(void 0));
        }
        n4(ee4, "pullAlgorithm");
        function Ne4(U6) {
          if (c13 = true, p13 = U6, d6) {
            const x3 = tt3([p13, R13]), K4 = X4(e12, x3);
            P3(K4);
          }
          return B3;
        }
        n4(Ne4, "cancel1Algorithm");
        function Ee4(U6) {
          if (d6 = true, R13 = U6, c13) {
            const x3 = tt3([p13, R13]), K4 = X4(e12, x3);
            P3(K4);
          }
          return B3;
        }
        n4(Ee4, "cancel2Algorithm");
        function me4() {
        }
        return n4(me4, "startAlgorithm"), y3 = ut2(me4, ee4, Ne4), C5 = ut2(me4, ee4, Ee4), I5(r8._closedPromise, (U6) => (J3(y3._readableStreamController, U6), J3(C5._readableStreamController, U6), (!c13 || !d6) && P3(void 0), null)), [y3, C5];
      }
      n4(ya, "ReadableStreamDefaultTee");
      function ga(e12) {
        let t13 = ze4(e12), r8 = false, s37 = false, f11 = false, c13 = false, d6 = false, p13, R13, y3, C5, P3;
        const B3 = A4((_3) => {
          P3 = _3;
        });
        function ee4(_3) {
          I5(_3._closedPromise, (v5) => (_3 !== t13 || (Z4(y3._readableStreamController, v5), Z4(C5._readableStreamController, v5), (!c13 || !d6) && P3(void 0)), null));
        }
        n4(ee4, "forwardReaderError");
        function Ne4() {
          We4(t13) && (ue4(t13), t13 = ze4(e12), ee4(t13)), et2(t13, { _chunkSteps: n4((v5) => {
            se4(() => {
              s37 = false, f11 = false;
              const W4 = v5;
              let Y5 = v5;
              if (!c13 && !d6) try {
                Y5 = Cn(v5);
              } catch (He3) {
                Z4(y3._readableStreamController, He3), Z4(C5._readableStreamController, He3), P3(X4(e12, He3));
                return;
              }
              c13 || Tt3(y3._readableStreamController, W4), d6 || Tt3(C5._readableStreamController, Y5), r8 = false, s37 ? me4() : f11 && U6();
            });
          }, "_chunkSteps"), _closeSteps: n4(() => {
            r8 = false, c13 || rt2(y3._readableStreamController), d6 || rt2(C5._readableStreamController), y3._readableStreamController._pendingPullIntos.length > 0 && Ct3(y3._readableStreamController, 0), C5._readableStreamController._pendingPullIntos.length > 0 && Ct3(C5._readableStreamController, 0), (!c13 || !d6) && P3(void 0);
          }, "_closeSteps"), _errorSteps: n4(() => {
            r8 = false;
          }, "_errorSteps") });
        }
        n4(Ne4, "pullWithDefaultReader");
        function Ee4(_3, v5) {
          ge3(t13) && (ue4(t13), t13 = jn(e12), ee4(t13));
          const W4 = v5 ? C5 : y3, Y5 = v5 ? y3 : C5;
          $n(t13, _3, 1, { _chunkSteps: n4((Ve3) => {
            se4(() => {
              s37 = false, f11 = false;
              const Qe4 = v5 ? d6 : c13;
              if (v5 ? c13 : d6) Qe4 || Pt2(W4._readableStreamController, Ve3);
              else {
                let To;
                try {
                  To = Cn(Ve3);
                } catch (Vr2) {
                  Z4(W4._readableStreamController, Vr2), Z4(Y5._readableStreamController, Vr2), P3(X4(e12, Vr2));
                  return;
                }
                Qe4 || Pt2(W4._readableStreamController, Ve3), Tt3(Y5._readableStreamController, To);
              }
              r8 = false, s37 ? me4() : f11 && U6();
            });
          }, "_chunkSteps"), _closeSteps: n4((Ve3) => {
            r8 = false;
            const Qe4 = v5 ? d6 : c13, Vt2 = v5 ? c13 : d6;
            Qe4 || rt2(W4._readableStreamController), Vt2 || rt2(Y5._readableStreamController), Ve3 !== void 0 && (Qe4 || Pt2(W4._readableStreamController, Ve3), !Vt2 && Y5._readableStreamController._pendingPullIntos.length > 0 && Ct3(Y5._readableStreamController, 0)), (!Qe4 || !Vt2) && P3(void 0);
          }, "_closeSteps"), _errorSteps: n4(() => {
            r8 = false;
          }, "_errorSteps") });
        }
        n4(Ee4, "pullWithBYOBReader");
        function me4() {
          if (r8) return s37 = true, T4(void 0);
          r8 = true;
          const _3 = vr2(y3._readableStreamController);
          return _3 === null ? Ne4() : Ee4(_3._view, false), T4(void 0);
        }
        n4(me4, "pull1Algorithm");
        function U6() {
          if (r8) return f11 = true, T4(void 0);
          r8 = true;
          const _3 = vr2(C5._readableStreamController);
          return _3 === null ? Ne4() : Ee4(_3._view, true), T4(void 0);
        }
        n4(U6, "pull2Algorithm");
        function x3(_3) {
          if (c13 = true, p13 = _3, d6) {
            const v5 = tt3([p13, R13]), W4 = X4(e12, v5);
            P3(W4);
          }
          return B3;
        }
        n4(x3, "cancel1Algorithm");
        function K4(_3) {
          if (d6 = true, R13 = _3, c13) {
            const v5 = tt3([p13, R13]), W4 = X4(e12, v5);
            P3(W4);
          }
          return B3;
        }
        n4(K4, "cancel2Algorithm");
        function be3() {
        }
        return n4(be3, "startAlgorithm"), y3 = uo(be3, me4, x3), C5 = uo(be3, U6, K4), ee4(t13), [y3, C5];
      }
      n4(ga, "ReadableByteStreamTee");
      function _a(e12) {
        return u4(e12) && typeof e12.getReader < "u";
      }
      n4(_a, "isReadableStreamLike");
      function Sa(e12) {
        return _a(e12) ? Ra(e12.getReader()) : wa(e12);
      }
      n4(Sa, "ReadableStreamFrom");
      function wa(e12) {
        let t13;
        const r8 = Tn(e12, "async"), s37 = l9;
        function f11() {
          let d6;
          try {
            d6 = di(r8);
          } catch (R13) {
            return b4(R13);
          }
          const p13 = T4(d6);
          return F5(p13, (R13) => {
            if (!u4(R13)) throw new TypeError("The promise returned by the iterator.next() method must fulfill with an object");
            if (hi(R13)) Oe4(t13._readableStreamController);
            else {
              const C5 = mi(R13);
              Me4(t13._readableStreamController, C5);
            }
          });
        }
        n4(f11, "pullAlgorithm");
        function c13(d6) {
          const p13 = r8.iterator;
          let R13;
          try {
            R13 = St2(p13, "return");
          } catch (P3) {
            return b4(P3);
          }
          if (R13 === void 0) return T4(void 0);
          let y3;
          try {
            y3 = O3(R13, p13, [d6]);
          } catch (P3) {
            return b4(P3);
          }
          const C5 = T4(y3);
          return F5(C5, (P3) => {
            if (!u4(P3)) throw new TypeError("The promise returned by the iterator.return() method must fulfill with an object");
          });
        }
        return n4(c13, "cancelAlgorithm"), t13 = ut2(s37, f11, c13, 0), t13;
      }
      n4(wa, "ReadableStreamFromIterable");
      function Ra(e12) {
        let t13;
        const r8 = l9;
        function s37() {
          let c13;
          try {
            c13 = e12.read();
          } catch (d6) {
            return b4(d6);
          }
          return F5(c13, (d6) => {
            if (!u4(d6)) throw new TypeError("The promise returned by the reader.read() method must fulfill with an object");
            if (d6.done) Oe4(t13._readableStreamController);
            else {
              const p13 = d6.value;
              Me4(t13._readableStreamController, p13);
            }
          });
        }
        n4(s37, "pullAlgorithm");
        function f11(c13) {
          try {
            return T4(e12.cancel(c13));
          } catch (d6) {
            return b4(d6);
          }
        }
        return n4(f11, "cancelAlgorithm"), t13 = ut2(r8, s37, f11, 0), t13;
      }
      n4(Ra, "ReadableStreamFromDefaultReader");
      function Ta(e12, t13) {
        ne4(e12, t13);
        const r8 = e12, s37 = r8?.autoAllocateChunkSize, f11 = r8?.cancel, c13 = r8?.pull, d6 = r8?.start, p13 = r8?.type;
        return { autoAllocateChunkSize: s37 === void 0 ? void 0 : mr2(s37, `${t13} has member 'autoAllocateChunkSize' that`), cancel: f11 === void 0 ? void 0 : Ca(f11, r8, `${t13} has member 'cancel' that`), pull: c13 === void 0 ? void 0 : Pa(c13, r8, `${t13} has member 'pull' that`), start: d6 === void 0 ? void 0 : Ea(d6, r8, `${t13} has member 'start' that`), type: p13 === void 0 ? void 0 : va(p13, `${t13} has member 'type' that`) };
      }
      n4(Ta, "convertUnderlyingDefaultOrByteSource");
      function Ca(e12, t13, r8) {
        return G3(e12, r8), (s37) => z4(e12, t13, [s37]);
      }
      n4(Ca, "convertUnderlyingSourceCancelCallback");
      function Pa(e12, t13, r8) {
        return G3(e12, r8), (s37) => z4(e12, t13, [s37]);
      }
      n4(Pa, "convertUnderlyingSourcePullCallback");
      function Ea(e12, t13, r8) {
        return G3(e12, r8), (s37) => O3(e12, t13, [s37]);
      }
      n4(Ea, "convertUnderlyingSourceStartCallback");
      function va(e12, t13) {
        if (e12 = `${e12}`, e12 !== "bytes") throw new TypeError(`${t13} '${e12}' is not a valid enumeration value for ReadableStreamType`);
        return e12;
      }
      n4(va, "convertReadableStreamType");
      function Aa(e12, t13) {
        return ne4(e12, t13), { preventCancel: !!e12?.preventCancel };
      }
      n4(Aa, "convertIteratorOptions");
      function so(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.preventAbort, s37 = e12?.preventCancel, f11 = e12?.preventClose, c13 = e12?.signal;
        return c13 !== void 0 && Ba(c13, `${t13} has member 'signal' that`), { preventAbort: !!r8, preventCancel: !!s37, preventClose: !!f11, signal: c13 };
      }
      n4(so, "convertPipeOptions");
      function Ba(e12, t13) {
        if (!ji(e12)) throw new TypeError(`${t13} is not an AbortSignal.`);
      }
      n4(Ba, "assertAbortSignal");
      function Wa(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.readable;
        dr2(r8, "readable", "ReadableWritablePair"), br(r8, `${t13} has member 'readable' that`);
        const s37 = e12?.writable;
        return dr2(s37, "writable", "ReadableWritablePair"), Un(s37, `${t13} has member 'writable' that`), { readable: r8, writable: s37 };
      }
      n4(Wa, "convertReadableWritablePair");
      class L4 {
        static {
          n4(this, "ReadableStream");
        }
        constructor(t13 = {}, r8 = {}) {
          t13 === void 0 ? t13 = null : cn(t13, "First parameter");
          const s37 = At2(r8, "Second parameter"), f11 = Ta(t13, "First parameter");
          if (Ur(this), f11.type === "bytes") {
            if (s37.size !== void 0) throw new RangeError("The strategy for a byte stream cannot have a size function");
            const c13 = ot2(s37, 0);
            Ci(this, f11, c13);
          } else {
            const c13 = vt3(s37), d6 = ot2(s37, 1);
            ba(this, f11, d6, c13);
          }
        }
        get locked() {
          if (!Te3(this)) throw Ie3("locked");
          return Ce4(this);
        }
        cancel(t13 = void 0) {
          return Te3(this) ? Ce4(this) ? b4(new TypeError("Cannot cancel a stream that already has a reader")) : X4(this, t13) : b4(Ie3("cancel"));
        }
        getReader(t13 = void 0) {
          if (!Te3(this)) throw Ie3("getReader");
          return Ei(t13, "First parameter").mode === void 0 ? ze4(this) : jn(this);
        }
        pipeThrough(t13, r8 = {}) {
          if (!Te3(this)) throw Ie3("pipeThrough");
          le4(t13, 1, "pipeThrough");
          const s37 = Wa(t13, "First parameter"), f11 = so(r8, "Second parameter");
          if (Ce4(this)) throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
          if (De4(s37.writable)) throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
          const c13 = oo(this, s37.writable, f11.preventClose, f11.preventAbort, f11.preventCancel, f11.signal);
          return Q3(c13), s37.readable;
        }
        pipeTo(t13, r8 = {}) {
          if (!Te3(this)) return b4(Ie3("pipeTo"));
          if (t13 === void 0) return b4("Parameter 1 is required in 'pipeTo'.");
          if (!Le3(t13)) return b4(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream"));
          let s37;
          try {
            s37 = so(r8, "Second parameter");
          } catch (f11) {
            return b4(f11);
          }
          return Ce4(this) ? b4(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")) : De4(t13) ? b4(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")) : oo(this, t13, s37.preventClose, s37.preventAbort, s37.preventCancel, s37.signal);
        }
        tee() {
          if (!Te3(this)) throw Ie3("tee");
          const t13 = pa(this);
          return tt3(t13);
        }
        values(t13 = void 0) {
          if (!Te3(this)) throw Ie3("values");
          const r8 = Aa(t13, "First parameter");
          return fi(this, r8.preventCancel);
        }
        [Sr](t13) {
          return this.values(t13);
        }
        static from(t13) {
          return Sa(t13);
        }
      }
      Object.defineProperties(L4, { from: { enumerable: true } }), Object.defineProperties(L4.prototype, { cancel: { enumerable: true }, getReader: { enumerable: true }, pipeThrough: { enumerable: true }, pipeTo: { enumerable: true }, tee: { enumerable: true }, values: { enumerable: true }, locked: { enumerable: true } }), h8(L4.from, "from"), h8(L4.prototype.cancel, "cancel"), h8(L4.prototype.getReader, "getReader"), h8(L4.prototype.pipeThrough, "pipeThrough"), h8(L4.prototype.pipeTo, "pipeTo"), h8(L4.prototype.tee, "tee"), h8(L4.prototype.values, "values"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(L4.prototype, Symbol.toStringTag, { value: "ReadableStream", configurable: true }), Object.defineProperty(L4.prototype, Sr, { value: L4.prototype.values, writable: true, configurable: true });
      function ut2(e12, t13, r8, s37 = 1, f11 = () => 1) {
        const c13 = Object.create(L4.prototype);
        Ur(c13);
        const d6 = Object.create(he3.prototype);
        return ao(c13, d6, e12, t13, r8, s37, f11), c13;
      }
      n4(ut2, "CreateReadableStream");
      function uo(e12, t13, r8) {
        const s37 = Object.create(L4.prototype);
        Ur(s37);
        const f11 = Object.create(ce3.prototype);
        return zn(s37, f11, e12, t13, r8, 0, void 0), s37;
      }
      n4(uo, "CreateReadableByteStream");
      function Ur(e12) {
        e12._state = "readable", e12._reader = void 0, e12._storedError = void 0, e12._disturbed = false;
      }
      n4(Ur, "InitializeReadableStream");
      function Te3(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_readableStreamController") ? false : e12 instanceof L4;
      }
      n4(Te3, "IsReadableStream");
      function Ce4(e12) {
        return e12._reader !== void 0;
      }
      n4(Ce4, "IsReadableStreamLocked");
      function X4(e12, t13) {
        if (e12._disturbed = true, e12._state === "closed") return T4(void 0);
        if (e12._state === "errored") return b4(e12._storedError);
        lt2(e12);
        const r8 = e12._reader;
        if (r8 !== void 0 && We4(r8)) {
          const f11 = r8._readIntoRequests;
          r8._readIntoRequests = new M5(), f11.forEach((c13) => {
            c13._closeSteps(void 0);
          });
        }
        const s37 = e12._readableStreamController[ar2](t13);
        return F5(s37, l9);
      }
      n4(X4, "ReadableStreamCancel");
      function lt2(e12) {
        e12._state = "closed";
        const t13 = e12._reader;
        if (t13 !== void 0 && (ln(t13), ge3(t13))) {
          const r8 = t13._readRequests;
          t13._readRequests = new M5(), r8.forEach((s37) => {
            s37._closeSteps();
          });
        }
      }
      n4(lt2, "ReadableStreamClose");
      function lo(e12, t13) {
        e12._state = "errored", e12._storedError = t13;
        const r8 = e12._reader;
        r8 !== void 0 && (cr(r8, t13), ge3(r8) ? bn(r8, t13) : Mn(r8, t13));
      }
      n4(lo, "ReadableStreamError");
      function Ie3(e12) {
        return new TypeError(`ReadableStream.prototype.${e12} can only be used on a ReadableStream`);
      }
      n4(Ie3, "streamBrandCheckException$1");
      function fo(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.highWaterMark;
        return dr2(r8, "highWaterMark", "QueuingStrategyInit"), { highWaterMark: hr2(r8) };
      }
      n4(fo, "convertQueuingStrategyInit");
      const co = n4((e12) => e12.byteLength, "byteLengthSizeFunction");
      h8(co, "size");
      class Dt3 {
        static {
          n4(this, "ByteLengthQueuingStrategy");
        }
        constructor(t13) {
          le4(t13, 1, "ByteLengthQueuingStrategy"), t13 = fo(t13, "First parameter"), this._byteLengthQueuingStrategyHighWaterMark = t13.highWaterMark;
        }
        get highWaterMark() {
          if (!mo(this)) throw ho("highWaterMark");
          return this._byteLengthQueuingStrategyHighWaterMark;
        }
        get size() {
          if (!mo(this)) throw ho("size");
          return co;
        }
      }
      Object.defineProperties(Dt3.prototype, { highWaterMark: { enumerable: true }, size: { enumerable: true } }), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(Dt3.prototype, Symbol.toStringTag, { value: "ByteLengthQueuingStrategy", configurable: true });
      function ho(e12) {
        return new TypeError(`ByteLengthQueuingStrategy.prototype.${e12} can only be used on a ByteLengthQueuingStrategy`);
      }
      n4(ho, "byteLengthBrandCheckException");
      function mo(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_byteLengthQueuingStrategyHighWaterMark") ? false : e12 instanceof Dt3;
      }
      n4(mo, "IsByteLengthQueuingStrategy");
      const bo = n4(() => 1, "countSizeFunction");
      h8(bo, "size");
      class $t3 {
        static {
          n4(this, "CountQueuingStrategy");
        }
        constructor(t13) {
          le4(t13, 1, "CountQueuingStrategy"), t13 = fo(t13, "First parameter"), this._countQueuingStrategyHighWaterMark = t13.highWaterMark;
        }
        get highWaterMark() {
          if (!yo(this)) throw po("highWaterMark");
          return this._countQueuingStrategyHighWaterMark;
        }
        get size() {
          if (!yo(this)) throw po("size");
          return bo;
        }
      }
      Object.defineProperties($t3.prototype, { highWaterMark: { enumerable: true }, size: { enumerable: true } }), typeof Symbol.toStringTag == "symbol" && Object.defineProperty($t3.prototype, Symbol.toStringTag, { value: "CountQueuingStrategy", configurable: true });
      function po(e12) {
        return new TypeError(`CountQueuingStrategy.prototype.${e12} can only be used on a CountQueuingStrategy`);
      }
      n4(po, "countBrandCheckException");
      function yo(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_countQueuingStrategyHighWaterMark") ? false : e12 instanceof $t3;
      }
      n4(yo, "IsCountQueuingStrategy");
      function ka(e12, t13) {
        ne4(e12, t13);
        const r8 = e12?.cancel, s37 = e12?.flush, f11 = e12?.readableType, c13 = e12?.start, d6 = e12?.transform, p13 = e12?.writableType;
        return { cancel: r8 === void 0 ? void 0 : Fa(r8, e12, `${t13} has member 'cancel' that`), flush: s37 === void 0 ? void 0 : qa(s37, e12, `${t13} has member 'flush' that`), readableType: f11, start: c13 === void 0 ? void 0 : Oa(c13, e12, `${t13} has member 'start' that`), transform: d6 === void 0 ? void 0 : Ia(d6, e12, `${t13} has member 'transform' that`), writableType: p13 };
      }
      n4(ka, "convertTransformer");
      function qa(e12, t13, r8) {
        return G3(e12, r8), (s37) => z4(e12, t13, [s37]);
      }
      n4(qa, "convertTransformerFlushCallback");
      function Oa(e12, t13, r8) {
        return G3(e12, r8), (s37) => O3(e12, t13, [s37]);
      }
      n4(Oa, "convertTransformerStartCallback");
      function Ia(e12, t13, r8) {
        return G3(e12, r8), (s37, f11) => z4(e12, t13, [s37, f11]);
      }
      n4(Ia, "convertTransformerTransformCallback");
      function Fa(e12, t13, r8) {
        return G3(e12, r8), (s37) => z4(e12, t13, [s37]);
      }
      n4(Fa, "convertTransformerCancelCallback");
      class Mt2 {
        static {
          n4(this, "TransformStream");
        }
        constructor(t13 = {}, r8 = {}, s37 = {}) {
          t13 === void 0 && (t13 = null);
          const f11 = At2(r8, "Second parameter"), c13 = At2(s37, "Third parameter"), d6 = ka(t13, "First parameter");
          if (d6.readableType !== void 0) throw new RangeError("Invalid readableType specified");
          if (d6.writableType !== void 0) throw new RangeError("Invalid writableType specified");
          const p13 = ot2(c13, 0), R13 = vt3(c13), y3 = ot2(f11, 1), C5 = vt3(f11);
          let P3;
          const B3 = A4((ee4) => {
            P3 = ee4;
          });
          za(this, B3, y3, C5, p13, R13), La(this, d6), d6.start !== void 0 ? P3(d6.start(this._transformStreamController)) : P3(void 0);
        }
        get readable() {
          if (!go(this)) throw Ro("readable");
          return this._readable;
        }
        get writable() {
          if (!go(this)) throw Ro("writable");
          return this._writable;
        }
      }
      Object.defineProperties(Mt2.prototype, { readable: { enumerable: true }, writable: { enumerable: true } }), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(Mt2.prototype, Symbol.toStringTag, { value: "TransformStream", configurable: true });
      function za(e12, t13, r8, s37, f11, c13) {
        function d6() {
          return t13;
        }
        n4(d6, "startAlgorithm");
        function p13(B3) {
          return Ma(e12, B3);
        }
        n4(p13, "writeAlgorithm");
        function R13(B3) {
          return Ua(e12, B3);
        }
        n4(R13, "abortAlgorithm");
        function y3() {
          return xa(e12);
        }
        n4(y3, "closeAlgorithm"), e12._writable = $i(d6, p13, y3, R13, r8, s37);
        function C5() {
          return Na(e12);
        }
        n4(C5, "pullAlgorithm");
        function P3(B3) {
          return Ha(e12, B3);
        }
        n4(P3, "cancelAlgorithm"), e12._readable = ut2(d6, C5, P3, f11, c13), e12._backpressure = void 0, e12._backpressureChangePromise = void 0, e12._backpressureChangePromise_resolve = void 0, Ut2(e12, true), e12._transformStreamController = void 0;
      }
      n4(za, "InitializeTransformStream");
      function go(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_transformStreamController") ? false : e12 instanceof Mt2;
      }
      n4(go, "IsTransformStream");
      function _o(e12, t13) {
        J3(e12._readable._readableStreamController, t13), xr(e12, t13);
      }
      n4(_o, "TransformStreamError");
      function xr(e12, t13) {
        Nt3(e12._transformStreamController), it(e12._writable._writableStreamController, t13), Nr2(e12);
      }
      n4(xr, "TransformStreamErrorWritableAndUnblockWrite");
      function Nr2(e12) {
        e12._backpressure && Ut2(e12, false);
      }
      n4(Nr2, "TransformStreamUnblockWrite");
      function Ut2(e12, t13) {
        e12._backpressureChangePromise !== void 0 && e12._backpressureChangePromise_resolve(), e12._backpressureChangePromise = A4((r8) => {
          e12._backpressureChangePromise_resolve = r8;
        }), e12._backpressure = t13;
      }
      n4(Ut2, "TransformStreamSetBackpressure");
      class Pe4 {
        static {
          n4(this, "TransformStreamDefaultController");
        }
        constructor() {
          throw new TypeError("Illegal constructor");
        }
        get desiredSize() {
          if (!xt2(this)) throw Ht2("desiredSize");
          const t13 = this._controlledTransformStream._readable._readableStreamController;
          return Mr(t13);
        }
        enqueue(t13 = void 0) {
          if (!xt2(this)) throw Ht2("enqueue");
          So(this, t13);
        }
        error(t13 = void 0) {
          if (!xt2(this)) throw Ht2("error");
          Da(this, t13);
        }
        terminate() {
          if (!xt2(this)) throw Ht2("terminate");
          $a(this);
        }
      }
      Object.defineProperties(Pe4.prototype, { enqueue: { enumerable: true }, error: { enumerable: true }, terminate: { enumerable: true }, desiredSize: { enumerable: true } }), h8(Pe4.prototype.enqueue, "enqueue"), h8(Pe4.prototype.error, "error"), h8(Pe4.prototype.terminate, "terminate"), typeof Symbol.toStringTag == "symbol" && Object.defineProperty(Pe4.prototype, Symbol.toStringTag, { value: "TransformStreamDefaultController", configurable: true });
      function xt2(e12) {
        return !u4(e12) || !Object.prototype.hasOwnProperty.call(e12, "_controlledTransformStream") ? false : e12 instanceof Pe4;
      }
      n4(xt2, "IsTransformStreamDefaultController");
      function ja(e12, t13, r8, s37, f11) {
        t13._controlledTransformStream = e12, e12._transformStreamController = t13, t13._transformAlgorithm = r8, t13._flushAlgorithm = s37, t13._cancelAlgorithm = f11, t13._finishPromise = void 0, t13._finishPromise_resolve = void 0, t13._finishPromise_reject = void 0;
      }
      n4(ja, "SetUpTransformStreamDefaultController");
      function La(e12, t13) {
        const r8 = Object.create(Pe4.prototype);
        let s37, f11, c13;
        t13.transform !== void 0 ? s37 = n4((d6) => t13.transform(d6, r8), "transformAlgorithm") : s37 = n4((d6) => {
          try {
            return So(r8, d6), T4(void 0);
          } catch (p13) {
            return b4(p13);
          }
        }, "transformAlgorithm"), t13.flush !== void 0 ? f11 = n4(() => t13.flush(r8), "flushAlgorithm") : f11 = n4(() => T4(void 0), "flushAlgorithm"), t13.cancel !== void 0 ? c13 = n4((d6) => t13.cancel(d6), "cancelAlgorithm") : c13 = n4(() => T4(void 0), "cancelAlgorithm"), ja(e12, r8, s37, f11, c13);
      }
      n4(La, "SetUpTransformStreamDefaultControllerFromTransformer");
      function Nt3(e12) {
        e12._transformAlgorithm = void 0, e12._flushAlgorithm = void 0, e12._cancelAlgorithm = void 0;
      }
      n4(Nt3, "TransformStreamDefaultControllerClearAlgorithms");
      function So(e12, t13) {
        const r8 = e12._controlledTransformStream, s37 = r8._readable._readableStreamController;
        if (!Ue3(s37)) throw new TypeError("Readable side is not in a state that permits enqueue");
        try {
          Me4(s37, t13);
        } catch (c13) {
          throw xr(r8, c13), r8._readable._storedError;
        }
        ma(s37) !== r8._backpressure && Ut2(r8, true);
      }
      n4(So, "TransformStreamDefaultControllerEnqueue");
      function Da(e12, t13) {
        _o(e12._controlledTransformStream, t13);
      }
      n4(Da, "TransformStreamDefaultControllerError");
      function wo(e12, t13) {
        const r8 = e12._transformAlgorithm(t13);
        return F5(r8, void 0, (s37) => {
          throw _o(e12._controlledTransformStream, s37), s37;
        });
      }
      n4(wo, "TransformStreamDefaultControllerPerformTransform");
      function $a(e12) {
        const t13 = e12._controlledTransformStream, r8 = t13._readable._readableStreamController;
        Oe4(r8);
        const s37 = new TypeError("TransformStream terminated");
        xr(t13, s37);
      }
      n4($a, "TransformStreamDefaultControllerTerminate");
      function Ma(e12, t13) {
        const r8 = e12._transformStreamController;
        if (e12._backpressure) {
          const s37 = e12._backpressureChangePromise;
          return F5(s37, () => {
            const f11 = e12._writable;
            if (f11._state === "erroring") throw f11._storedError;
            return wo(r8, t13);
          });
        }
        return wo(r8, t13);
      }
      n4(Ma, "TransformStreamDefaultSinkWriteAlgorithm");
      function Ua(e12, t13) {
        const r8 = e12._transformStreamController;
        if (r8._finishPromise !== void 0) return r8._finishPromise;
        const s37 = e12._readable;
        r8._finishPromise = A4((c13, d6) => {
          r8._finishPromise_resolve = c13, r8._finishPromise_reject = d6;
        });
        const f11 = r8._cancelAlgorithm(t13);
        return Nt3(r8), g9(f11, () => (s37._state === "errored" ? xe4(r8, s37._storedError) : (J3(s37._readableStreamController, t13), Hr(r8)), null), (c13) => (J3(s37._readableStreamController, c13), xe4(r8, c13), null)), r8._finishPromise;
      }
      n4(Ua, "TransformStreamDefaultSinkAbortAlgorithm");
      function xa(e12) {
        const t13 = e12._transformStreamController;
        if (t13._finishPromise !== void 0) return t13._finishPromise;
        const r8 = e12._readable;
        t13._finishPromise = A4((f11, c13) => {
          t13._finishPromise_resolve = f11, t13._finishPromise_reject = c13;
        });
        const s37 = t13._flushAlgorithm();
        return Nt3(t13), g9(s37, () => (r8._state === "errored" ? xe4(t13, r8._storedError) : (Oe4(r8._readableStreamController), Hr(t13)), null), (f11) => (J3(r8._readableStreamController, f11), xe4(t13, f11), null)), t13._finishPromise;
      }
      n4(xa, "TransformStreamDefaultSinkCloseAlgorithm");
      function Na(e12) {
        return Ut2(e12, false), e12._backpressureChangePromise;
      }
      n4(Na, "TransformStreamDefaultSourcePullAlgorithm");
      function Ha(e12, t13) {
        const r8 = e12._transformStreamController;
        if (r8._finishPromise !== void 0) return r8._finishPromise;
        const s37 = e12._writable;
        r8._finishPromise = A4((c13, d6) => {
          r8._finishPromise_resolve = c13, r8._finishPromise_reject = d6;
        });
        const f11 = r8._cancelAlgorithm(t13);
        return Nt3(r8), g9(f11, () => (s37._state === "errored" ? xe4(r8, s37._storedError) : (it(s37._writableStreamController, t13), Nr2(e12), Hr(r8)), null), (c13) => (it(s37._writableStreamController, c13), Nr2(e12), xe4(r8, c13), null)), r8._finishPromise;
      }
      n4(Ha, "TransformStreamDefaultSourceCancelAlgorithm");
      function Ht2(e12) {
        return new TypeError(`TransformStreamDefaultController.prototype.${e12} can only be used on a TransformStreamDefaultController`);
      }
      n4(Ht2, "defaultControllerBrandCheckException");
      function Hr(e12) {
        e12._finishPromise_resolve !== void 0 && (e12._finishPromise_resolve(), e12._finishPromise_resolve = void 0, e12._finishPromise_reject = void 0);
      }
      n4(Hr, "defaultControllerFinishPromiseResolve");
      function xe4(e12, t13) {
        e12._finishPromise_reject !== void 0 && (Q3(e12._finishPromise), e12._finishPromise_reject(t13), e12._finishPromise_resolve = void 0, e12._finishPromise_reject = void 0);
      }
      n4(xe4, "defaultControllerFinishPromiseReject");
      function Ro(e12) {
        return new TypeError(`TransformStream.prototype.${e12} can only be used on a TransformStream`);
      }
      n4(Ro, "streamBrandCheckException"), a12.ByteLengthQueuingStrategy = Dt3, a12.CountQueuingStrategy = $t3, a12.ReadableByteStreamController = ce3, a12.ReadableStream = L4, a12.ReadableStreamBYOBReader = we3, a12.ReadableStreamBYOBRequest = ve3, a12.ReadableStreamDefaultController = he3, a12.ReadableStreamDefaultReader = ye3, a12.TransformStream = Mt2, a12.TransformStreamDefaultController = Pe4, a12.WritableStream = Re4, a12.WritableStreamDefaultController = $e3, a12.WritableStreamDefaultWriter = de4;
    });
  }(ct2, ct2.exports)), ct2.exports;
}
function os() {
  if (Ao) return Eo;
  Ao = 1;
  const i11 = 65536;
  if (!globalThis.ReadableStream) try {
    const o6 = __require("node:process"), { emitWarning: a12 } = o6;
    try {
      o6.emitWarning = () => {
      }, Object.assign(globalThis, __require("node:stream/web")), o6.emitWarning = a12;
    } catch (l9) {
      throw o6.emitWarning = a12, l9;
    }
  } catch {
    Object.assign(globalThis, ns());
  }
  try {
    const { Blob: o6 } = __require("buffer");
    o6 && !o6.prototype.stream && (o6.prototype.stream = n4(function(l9) {
      let u4 = 0;
      const m11 = this;
      return new ReadableStream({ type: "bytes", async pull(h8) {
        const E7 = await m11.slice(u4, Math.min(m11.size, u4 + i11)).arrayBuffer();
        u4 += E7.byteLength, h8.enqueue(new Uint8Array(E7)), u4 === m11.size && h8.close();
      } });
    }, "name"));
  } catch {
  }
  return Eo;
}
async function* Qr(i11, o6 = true) {
  for (const a12 of i11) if ("stream" in a12) yield* a12.stream();
  else if (ArrayBuffer.isView(a12)) if (o6) {
    let l9 = a12.byteOffset;
    const u4 = a12.byteOffset + a12.byteLength;
    for (; l9 !== u4; ) {
      const m11 = Math.min(u4 - l9, Bo), h8 = a12.buffer.slice(l9, l9 + m11);
      l9 += h8.byteLength, yield new Uint8Array(h8);
    }
  } else yield a12;
  else {
    let l9 = 0, u4 = a12;
    for (; l9 !== u4.size; ) {
      const h8 = await u4.slice(l9, Math.min(u4.size, l9 + Bo)).arrayBuffer();
      l9 += h8.byteLength, yield new Uint8Array(h8);
    }
  }
}
function ls(i11, o6 = Ze2) {
  var a12 = `${ko()}${ko()}`.replace(/\./g, "").slice(-28).padStart(32, "-"), l9 = [], u4 = `--${a12}\r
Content-Disposition: form-data; name="`;
  return i11.forEach((m11, h8) => typeof m11 == "string" ? l9.push(u4 + Gr(h8) + `"\r
\r
${m11.replace(/\r(?!\n)|(?<!\r)\n/g, `\r
`)}\r
`) : l9.push(u4 + Gr(h8) + `"; filename="${Gr(m11.name, 1)}"\r
Content-Type: ${m11.type || "application/octet-stream"}\r
\r
`, m11, `\r
`)), l9.push(`--${a12}--`), new o6(l9, { type: "multipart/form-data; boundary=" + a12 });
}
async function Zr(i11) {
  if (i11[N3].disturbed) throw new TypeError(`body used already for: ${i11.url}`);
  if (i11[N3].disturbed = true, i11[N3].error) throw i11[N3].error;
  const { body: o6 } = i11;
  if (o6 === null) return D4.alloc(0);
  if (!(o6 instanceof ie2)) return D4.alloc(0);
  const a12 = [];
  let l9 = 0;
  try {
    for await (const u4 of o6) {
      if (i11.size > 0 && l9 + u4.length > i11.size) {
        const m11 = new te3(`content size at ${i11.url} over limit: ${i11.size}`, "max-size");
        throw o6.destroy(m11), m11;
      }
      l9 += u4.length, a12.push(u4);
    }
  } catch (u4) {
    throw u4 instanceof Kt2 ? u4 : new te3(`Invalid response body while trying to fetch ${i11.url}: ${u4.message}`, "system", u4);
  }
  if (o6.readableEnded === true || o6._readableState.ended === true) try {
    return a12.every((u4) => typeof u4 == "string") ? D4.from(a12.join("")) : D4.concat(a12, l9);
  } catch (u4) {
    throw new te3(`Could not create Buffer from response body for ${i11.url}: ${u4.message}`, "system", u4);
  }
  else throw new te3(`Premature close of server response while trying to fetch ${i11.url}`);
}
function ys(i11 = []) {
  return new ae3(i11.reduce((o6, a12, l9, u4) => (l9 % 2 === 0 && o6.push(u4.slice(l9, l9 + 2)), o6), []).filter(([o6, a12]) => {
    try {
      return er(o6), Jr(o6, String(a12)), true;
    } catch {
      return false;
    }
  }));
}
function Fo(i11, o6 = false) {
  return i11 == null || (i11 = new URL(i11), /^(about|blob|data):$/.test(i11.protocol)) ? "no-referrer" : (i11.username = "", i11.password = "", i11.hash = "", o6 && (i11.pathname = "", i11.search = ""), i11);
}
function ws(i11) {
  if (!zo.has(i11)) throw new TypeError(`Invalid referrerPolicy: ${i11}`);
  return i11;
}
function Rs(i11) {
  if (/^(http|ws)s:$/.test(i11.protocol)) return true;
  const o6 = i11.host.replace(/(^\[)|(]$)/g, ""), a12 = Ka(o6);
  return a12 === 4 && /^127\./.test(o6) || a12 === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(o6) ? true : i11.host === "localhost" || i11.host.endsWith(".localhost") ? false : i11.protocol === "file:";
}
function Ke3(i11) {
  return /^about:(blank|srcdoc)$/.test(i11) || i11.protocol === "data:" || /^(blob|filesystem):$/.test(i11.protocol) ? true : Rs(i11);
}
function Ts(i11, { referrerURLCallback: o6, referrerOriginCallback: a12 } = {}) {
  if (i11.referrer === "no-referrer" || i11.referrerPolicy === "") return null;
  const l9 = i11.referrerPolicy;
  if (i11.referrer === "about:client") return "no-referrer";
  const u4 = i11.referrer;
  let m11 = Fo(u4), h8 = Fo(u4, true);
  m11.toString().length > 4096 && (m11 = h8), o6 && (m11 = o6(m11)), a12 && (h8 = a12(h8));
  const S3 = new URL(i11.url);
  switch (l9) {
    case "no-referrer":
      return "no-referrer";
    case "origin":
      return h8;
    case "unsafe-url":
      return m11;
    case "strict-origin":
      return Ke3(m11) && !Ke3(S3) ? "no-referrer" : h8.toString();
    case "strict-origin-when-cross-origin":
      return m11.origin === S3.origin ? m11 : Ke3(m11) && !Ke3(S3) ? "no-referrer" : h8;
    case "same-origin":
      return m11.origin === S3.origin ? m11 : "no-referrer";
    case "origin-when-cross-origin":
      return m11.origin === S3.origin ? m11 : h8;
    case "no-referrer-when-downgrade":
      return Ke3(m11) && !Ke3(S3) ? "no-referrer" : m11;
    default:
      throw new TypeError(`Invalid referrerPolicy: ${l9}`);
  }
}
function Cs(i11) {
  const o6 = (i11.get("referrer-policy") || "").split(/[,\s]+/);
  let a12 = "";
  for (const l9 of o6) l9 && zo.has(l9) && (a12 = l9);
  return a12;
}
function vs() {
  if (Lo) return en;
  if (Lo = 1, !globalThis.DOMException) try {
    const { MessageChannel: i11 } = __require("worker_threads"), o6 = new i11().port1, a12 = new ArrayBuffer();
    o6.postMessage(a12, [a12, a12]);
  } catch (i11) {
    i11.constructor.name === "DOMException" && (globalThis.DOMException = i11.constructor);
  }
  return en = globalThis.DOMException, en;
}
async function Mo(i11, o6) {
  return new Promise((a12, l9) => {
    const u4 = new Xe2(i11, o6), { parsedURL: m11, options: h8 } = Es(u4);
    if (!Is.has(m11.protocol)) throw new TypeError(`node-fetch cannot load ${i11}. URL scheme "${m11.protocol.replace(/:$/, "")}" is not supported.`);
    if (m11.protocol === "data:") {
      const g9 = ts(u4.url), V5 = new H3(g9, { headers: { "Content-Type": g9.typeFull } });
      a12(V5);
      return;
    }
    const S3 = (m11.protocol === "https:" ? Qa : ft).request, { signal: E7 } = u4;
    let w8 = null;
    const A4 = n4(() => {
      const g9 = new jo("The operation was aborted.");
      l9(g9), u4.body && u4.body instanceof ie2.Readable && u4.body.destroy(g9), !(!w8 || !w8.body) && w8.body.emit("error", g9);
    }, "abort");
    if (E7 && E7.aborted) {
      A4();
      return;
    }
    const T4 = n4(() => {
      A4(), q3();
    }, "abortAndFinalize"), b4 = S3(m11.toString(), h8);
    E7 && E7.addEventListener("abort", T4);
    const q3 = n4(() => {
      b4.abort(), E7 && E7.removeEventListener("abort", T4);
    }, "finalize");
    b4.on("error", (g9) => {
      l9(new te3(`request to ${u4.url} failed, reason: ${g9.message}`, "system", g9)), q3();
    }), Fs(b4, (g9) => {
      w8 && w8.body && w8.body.destroy(g9);
    }), process.version < "v14" && b4.on("socket", (g9) => {
      let V5;
      g9.prependListener("end", () => {
        V5 = g9._eventsCount;
      }), g9.prependListener("close", (I5) => {
        if (w8 && V5 < g9._eventsCount && !I5) {
          const F5 = new Error("Premature close");
          F5.code = "ERR_STREAM_PREMATURE_CLOSE", w8.body.emit("error", F5);
        }
      });
    }), b4.on("response", (g9) => {
      b4.setTimeout(0);
      const V5 = ys(g9.rawHeaders);
      if (Xr(g9.statusCode)) {
        const O3 = V5.get("Location");
        let z4 = null;
        try {
          z4 = O3 === null ? null : new URL(O3, u4.url);
        } catch {
          if (u4.redirect !== "manual") {
            l9(new te3(`uri requested responds with an invalid redirect URL: ${O3}`, "invalid-redirect")), q3();
            return;
          }
        }
        switch (u4.redirect) {
          case "error":
            l9(new te3(`uri requested responds with a redirect, redirect mode is set to error: ${u4.url}`, "no-redirect")), q3();
            return;
          case "manual":
            break;
          case "follow": {
            if (z4 === null) break;
            if (u4.counter >= u4.follow) {
              l9(new te3(`maximum redirect reached at: ${u4.url}`, "max-redirect")), q3();
              return;
            }
            const $4 = { headers: new ae3(u4.headers), follow: u4.follow, counter: u4.counter + 1, agent: u4.agent, compress: u4.compress, method: u4.method, body: Kr(u4), signal: u4.signal, size: u4.size, referrer: u4.referrer, referrerPolicy: u4.referrerPolicy };
            if (!cs(u4.url, z4) || !ds(u4.url, z4)) for (const pt2 of ["authorization", "www-authenticate", "cookie", "cookie2"]) $4.headers.delete(pt2);
            if (g9.statusCode !== 303 && u4.body && o6.body instanceof ie2.Readable) {
              l9(new te3("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), q3();
              return;
            }
            (g9.statusCode === 303 || (g9.statusCode === 301 || g9.statusCode === 302) && u4.method === "POST") && ($4.method = "GET", $4.body = void 0, $4.headers.delete("content-length"));
            const M5 = Cs(V5);
            M5 && ($4.referrerPolicy = M5), a12(Mo(new Xe2(z4, $4))), q3();
            return;
          }
          default:
            return l9(new TypeError(`Redirect option '${u4.redirect}' is not a valid value of RequestRedirect`));
        }
      }
      E7 && g9.once("end", () => {
        E7.removeEventListener("abort", T4);
      });
      let I5 = Ge2(g9, new Qt2(), (O3) => {
        O3 && l9(O3);
      });
      process.version < "v12.10" && g9.on("aborted", T4);
      const F5 = { url: u4.url, status: g9.statusCode, statusText: g9.statusMessage, headers: V5, size: u4.size, counter: u4.counter, highWaterMark: u4.highWaterMark }, Q3 = V5.get("Content-Encoding");
      if (!u4.compress || u4.method === "HEAD" || Q3 === null || g9.statusCode === 204 || g9.statusCode === 304) {
        w8 = new H3(I5, F5), a12(w8);
        return;
      }
      const se4 = { flush: Ye3.Z_SYNC_FLUSH, finishFlush: Ye3.Z_SYNC_FLUSH };
      if (Q3 === "gzip" || Q3 === "x-gzip") {
        I5 = Ge2(I5, Ye3.createGunzip(se4), (O3) => {
          O3 && l9(O3);
        }), w8 = new H3(I5, F5), a12(w8);
        return;
      }
      if (Q3 === "deflate" || Q3 === "x-deflate") {
        const O3 = Ge2(g9, new Qt2(), (z4) => {
          z4 && l9(z4);
        });
        O3.once("data", (z4) => {
          (z4[0] & 15) === 8 ? I5 = Ge2(I5, Ye3.createInflate(), ($4) => {
            $4 && l9($4);
          }) : I5 = Ge2(I5, Ye3.createInflateRaw(), ($4) => {
            $4 && l9($4);
          }), w8 = new H3(I5, F5), a12(w8);
        }), O3.once("end", () => {
          w8 || (w8 = new H3(I5, F5), a12(w8));
        });
        return;
      }
      if (Q3 === "br") {
        I5 = Ge2(I5, Ye3.createBrotliDecompress(), (O3) => {
          O3 && l9(O3);
        }), w8 = new H3(I5, F5), a12(w8);
        return;
      }
      w8 = new H3(I5, F5), a12(w8);
    }), ps(b4, u4).catch(l9);
  });
}
function Fs(i11, o6) {
  const a12 = D4.from(`0\r
\r
`);
  let l9 = false, u4 = false, m11;
  i11.on("response", (h8) => {
    const { headers: S3 } = h8;
    l9 = S3["transfer-encoding"] === "chunked" && !S3["content-length"];
  }), i11.on("socket", (h8) => {
    const S3 = n4(() => {
      if (l9 && !u4) {
        const w8 = new Error("Premature close");
        w8.code = "ERR_STREAM_PREMATURE_CLOSE", o6(w8);
      }
    }, "onSocketClose"), E7 = n4((w8) => {
      u4 = D4.compare(w8.slice(-5), a12) === 0, !u4 && m11 && (u4 = D4.compare(m11.slice(-3), a12.slice(0, 3)) === 0 && D4.compare(w8.slice(-2), a12.slice(3)) === 0), m11 = w8;
    }, "onData");
    h8.prependListener("close", S3), h8.on("data", E7), i11.on("close", () => {
      h8.removeListener("close", S3), h8.removeListener("data", E7);
    });
  });
}
function k2(i11) {
  const o6 = Uo.get(i11);
  return console.assert(o6 != null, "'this' is expected an Event object, but got", i11), o6;
}
function xo(i11) {
  if (i11.passiveListener != null) {
    typeof console < "u" && typeof console.error == "function" && console.error("Unable to preventDefault inside passive event listener invocation.", i11.passiveListener);
    return;
  }
  i11.event.cancelable && (i11.canceled = true, typeof i11.event.preventDefault == "function" && i11.event.preventDefault());
}
function Je3(i11, o6) {
  Uo.set(this, { eventTarget: i11, event: o6, eventPhase: 2, currentTarget: i11, canceled: false, stopped: false, immediateStopped: false, passiveListener: null, timeStamp: o6.timeStamp || Date.now() }), Object.defineProperty(this, "isTrusted", { value: false, enumerable: true });
  const a12 = Object.keys(o6);
  for (let l9 = 0; l9 < a12.length; ++l9) {
    const u4 = a12[l9];
    u4 in this || Object.defineProperty(this, u4, No(u4));
  }
}
function No(i11) {
  return { get() {
    return k2(this).event[i11];
  }, set(o6) {
    k2(this).event[i11] = o6;
  }, configurable: true, enumerable: true };
}
function zs(i11) {
  return { value() {
    const o6 = k2(this).event;
    return o6[i11].apply(o6, arguments);
  }, configurable: true, enumerable: true };
}
function js(i11, o6) {
  const a12 = Object.keys(o6);
  if (a12.length === 0) return i11;
  function l9(u4, m11) {
    i11.call(this, u4, m11);
  }
  n4(l9, "CustomEvent"), l9.prototype = Object.create(i11.prototype, { constructor: { value: l9, configurable: true, writable: true } });
  for (let u4 = 0; u4 < a12.length; ++u4) {
    const m11 = a12[u4];
    if (!(m11 in i11.prototype)) {
      const S3 = typeof Object.getOwnPropertyDescriptor(o6, m11).value == "function";
      Object.defineProperty(l9.prototype, m11, S3 ? zs(m11) : No(m11));
    }
  }
  return l9;
}
function Ho(i11) {
  if (i11 == null || i11 === Object.prototype) return Je3;
  let o6 = rn.get(i11);
  return o6 == null && (o6 = js(Ho(Object.getPrototypeOf(i11)), i11), rn.set(i11, o6)), o6;
}
function Ls(i11, o6) {
  const a12 = Ho(Object.getPrototypeOf(o6));
  return new a12(i11, o6);
}
function Ds(i11) {
  return k2(i11).immediateStopped;
}
function $s(i11, o6) {
  k2(i11).eventPhase = o6;
}
function Ms(i11, o6) {
  k2(i11).currentTarget = o6;
}
function Vo(i11, o6) {
  k2(i11).passiveListener = o6;
}
function rr(i11) {
  return i11 !== null && typeof i11 == "object";
}
function bt2(i11) {
  const o6 = Qo.get(i11);
  if (o6 == null) throw new TypeError("'this' is expected an EventTarget object, but got another value.");
  return o6;
}
function Us(i11) {
  return { get() {
    let a12 = bt2(this).get(i11);
    for (; a12 != null; ) {
      if (a12.listenerType === tr) return a12.listener;
      a12 = a12.next;
    }
    return null;
  }, set(o6) {
    typeof o6 != "function" && !rr(o6) && (o6 = null);
    const a12 = bt2(this);
    let l9 = null, u4 = a12.get(i11);
    for (; u4 != null; ) u4.listenerType === tr ? l9 !== null ? l9.next = u4.next : u4.next !== null ? a12.set(i11, u4.next) : a12.delete(i11) : l9 = u4, u4 = u4.next;
    if (o6 !== null) {
      const m11 = { listener: o6, listenerType: tr, passive: false, once: false, next: null };
      l9 === null ? a12.set(i11, m11) : l9.next = m11;
    }
  }, configurable: true, enumerable: true };
}
function Zo(i11, o6) {
  Object.defineProperty(i11, `on${o6}`, Us(o6));
}
function Ko(i11) {
  function o6() {
    pe2.call(this);
  }
  n4(o6, "CustomEventTarget"), o6.prototype = Object.create(pe2.prototype, { constructor: { value: o6, configurable: true, writable: true } });
  for (let a12 = 0; a12 < i11.length; ++a12) Zo(o6.prototype, i11[a12]);
  return o6;
}
function pe2() {
  if (this instanceof pe2) {
    Qo.set(this, /* @__PURE__ */ new Map());
    return;
  }
  if (arguments.length === 1 && Array.isArray(arguments[0])) return Ko(arguments[0]);
  if (arguments.length > 0) {
    const i11 = new Array(arguments.length);
    for (let o6 = 0; o6 < arguments.length; ++o6) i11[o6] = arguments[o6];
    return Ko(i11);
  }
  throw new TypeError("Cannot call a class as a function");
}
function xs() {
  const i11 = Object.create(nr2.prototype);
  return pe2.call(i11), or.set(i11, false), i11;
}
function Ns(i11) {
  or.get(i11) === false && (or.set(i11, true), i11.dispatchEvent({ type: "abort" }));
}
function Xo(i11) {
  const o6 = Jo.get(i11);
  if (o6 == null) throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${i11 === null ? "null" : typeof i11}`);
  return o6;
}
function ti() {
  !globalThis.process?.versions?.node && !globalThis.process?.env?.DISABLE_NODE_FETCH_NATIVE_WARN && console.warn("[node-fetch-native] Node.js compatible build of `node-fetch-native` is being used in a non-Node.js environment. Please make sure you are using proper export conditions or report this issue to https://github.com/unjs/node-fetch-native. You can set `process.env.DISABLE_NODE_FETCH_NATIVE_WARN` to disable this warning.");
}
var Va, n4, Eo, ct2, rs, vo, Ao, Bo, Wo, Ze2, is, Yr, dt2, as, ss, ko, us, qo, Gr, Fe2, Zt2, Kt2, te3, Jt2, Oo, Xt2, fs, cs, ds, hs, N3, ht3, Kr, ms, Io, bs, ps, er, Jr, ae3, gs, Xr, re3, H3, _s, zo, Ss, j2, mt2, Ps, Xe2, Es, jo, en, Lo, As, Bs, tn, Ws, ks, qs, Os, Do, $o, ir2, Is, Uo, rn, Qo, Yo, Go, tr, nr2, or, nn, Jo, Hs, Vs, ei;
var init_node = __esm({
  "node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/node.mjs"() {
    init_node_fetch_native_DfbY2q_x();
    Va = Object.defineProperty;
    n4 = (i11, o6) => Va(i11, "name", { value: o6, configurable: true });
    n4(ts, "dataUriToBuffer");
    Eo = {};
    ct2 = { exports: {} };
    rs = ct2.exports;
    n4(ns, "requirePonyfill_es2018");
    n4(os, "requireStreams"), os();
    Bo = 65536;
    n4(Qr, "toIterator");
    Wo = class on {
      static {
        n4(this, "Blob");
      }
      #e = [];
      #t = "";
      #r = 0;
      #n = "transparent";
      constructor(o6 = [], a12 = {}) {
        if (typeof o6 != "object" || o6 === null) throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");
        if (typeof o6[Symbol.iterator] != "function") throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");
        if (typeof a12 != "object" && typeof a12 != "function") throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");
        a12 === null && (a12 = {});
        const l9 = new TextEncoder();
        for (const m11 of o6) {
          let h8;
          ArrayBuffer.isView(m11) ? h8 = new Uint8Array(m11.buffer.slice(m11.byteOffset, m11.byteOffset + m11.byteLength)) : m11 instanceof ArrayBuffer ? h8 = new Uint8Array(m11.slice(0)) : m11 instanceof on ? h8 = m11 : h8 = l9.encode(`${m11}`), this.#r += ArrayBuffer.isView(h8) ? h8.byteLength : h8.size, this.#e.push(h8);
        }
        this.#n = `${a12.endings === void 0 ? "transparent" : a12.endings}`;
        const u4 = a12.type === void 0 ? "" : String(a12.type);
        this.#t = /^[\x20-\x7E]*$/.test(u4) ? u4 : "";
      }
      get size() {
        return this.#r;
      }
      get type() {
        return this.#t;
      }
      async text() {
        const o6 = new TextDecoder();
        let a12 = "";
        for await (const l9 of Qr(this.#e, false)) a12 += o6.decode(l9, { stream: true });
        return a12 += o6.decode(), a12;
      }
      async arrayBuffer() {
        const o6 = new Uint8Array(this.size);
        let a12 = 0;
        for await (const l9 of Qr(this.#e, false)) o6.set(l9, a12), a12 += l9.length;
        return o6.buffer;
      }
      stream() {
        const o6 = Qr(this.#e, true);
        return new globalThis.ReadableStream({ type: "bytes", async pull(a12) {
          const l9 = await o6.next();
          l9.done ? a12.close() : a12.enqueue(l9.value);
        }, async cancel() {
          await o6.return();
        } });
      }
      slice(o6 = 0, a12 = this.size, l9 = "") {
        const { size: u4 } = this;
        let m11 = o6 < 0 ? Math.max(u4 + o6, 0) : Math.min(o6, u4), h8 = a12 < 0 ? Math.max(u4 + a12, 0) : Math.min(a12, u4);
        const S3 = Math.max(h8 - m11, 0), E7 = this.#e, w8 = [];
        let A4 = 0;
        for (const b4 of E7) {
          if (A4 >= S3) break;
          const q3 = ArrayBuffer.isView(b4) ? b4.byteLength : b4.size;
          if (m11 && q3 <= m11) m11 -= q3, h8 -= q3;
          else {
            let g9;
            ArrayBuffer.isView(b4) ? (g9 = b4.subarray(m11, Math.min(q3, h8)), A4 += g9.byteLength) : (g9 = b4.slice(m11, Math.min(q3, h8)), A4 += g9.size), h8 -= q3, w8.push(g9), m11 = 0;
          }
        }
        const T4 = new on([], { type: String(l9).toLowerCase() });
        return T4.#r = S3, T4.#e = w8, T4;
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
      static [Symbol.hasInstance](o6) {
        return o6 && typeof o6 == "object" && typeof o6.constructor == "function" && (typeof o6.stream == "function" || typeof o6.arrayBuffer == "function") && /^(Blob|File)$/.test(o6[Symbol.toStringTag]);
      }
    };
    Object.defineProperties(Wo.prototype, { size: { enumerable: true }, type: { enumerable: true }, slice: { enumerable: true } });
    Ze2 = Wo;
    is = class extends Ze2 {
      static {
        n4(this, "File");
      }
      #e = 0;
      #t = "";
      constructor(o6, a12, l9 = {}) {
        if (arguments.length < 2) throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
        super(o6, l9), l9 === null && (l9 = {});
        const u4 = l9.lastModified === void 0 ? Date.now() : Number(l9.lastModified);
        Number.isNaN(u4) || (this.#e = u4), this.#t = String(a12);
      }
      get name() {
        return this.#t;
      }
      get lastModified() {
        return this.#e;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
      static [Symbol.hasInstance](o6) {
        return !!o6 && o6 instanceof Ze2 && /^(File)$/.test(o6[Symbol.toStringTag]);
      }
    };
    Yr = is;
    ({ toStringTag: dt2, iterator: as, hasInstance: ss } = Symbol);
    ko = Math.random;
    us = "append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(",");
    qo = n4((i11, o6, a12) => (i11 += "", /^(Blob|File)$/.test(o6 && o6[dt2]) ? [(a12 = a12 !== void 0 ? a12 + "" : o6[dt2] == "File" ? o6.name : "blob", i11), o6.name !== a12 || o6[dt2] == "blob" ? new Yr([o6], a12, o6) : o6] : [i11, o6 + ""]), "f");
    Gr = n4((i11, o6) => (o6 ? i11 : i11.replace(/\r?\n|\r/g, `\r
`)).replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22"), "e$1");
    Fe2 = n4((i11, o6, a12) => {
      if (o6.length < a12) throw new TypeError(`Failed to execute '${i11}' on 'FormData': ${a12} arguments required, but only ${o6.length} present.`);
    }, "x");
    Zt2 = class {
      static {
        n4(this, "FormData");
      }
      #e = [];
      constructor(...o6) {
        if (o6.length) throw new TypeError("Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.");
      }
      get [dt2]() {
        return "FormData";
      }
      [as]() {
        return this.entries();
      }
      static [ss](o6) {
        return o6 && typeof o6 == "object" && o6[dt2] === "FormData" && !us.some((a12) => typeof o6[a12] != "function");
      }
      append(...o6) {
        Fe2("append", arguments, 2), this.#e.push(qo(...o6));
      }
      delete(o6) {
        Fe2("delete", arguments, 1), o6 += "", this.#e = this.#e.filter(([a12]) => a12 !== o6);
      }
      get(o6) {
        Fe2("get", arguments, 1), o6 += "";
        for (var a12 = this.#e, l9 = a12.length, u4 = 0; u4 < l9; u4++) if (a12[u4][0] === o6) return a12[u4][1];
        return null;
      }
      getAll(o6, a12) {
        return Fe2("getAll", arguments, 1), a12 = [], o6 += "", this.#e.forEach((l9) => l9[0] === o6 && a12.push(l9[1])), a12;
      }
      has(o6) {
        return Fe2("has", arguments, 1), o6 += "", this.#e.some((a12) => a12[0] === o6);
      }
      forEach(o6, a12) {
        Fe2("forEach", arguments, 1);
        for (var [l9, u4] of this) o6.call(a12, u4, l9, this);
      }
      set(...o6) {
        Fe2("set", arguments, 2);
        var a12 = [], l9 = true;
        o6 = qo(...o6), this.#e.forEach((u4) => {
          u4[0] === o6[0] ? l9 && (l9 = !a12.push(o6)) : a12.push(u4);
        }), l9 && a12.push(o6), this.#e = a12;
      }
      *entries() {
        yield* this.#e;
      }
      *keys() {
        for (var [o6] of this) yield o6;
      }
      *values() {
        for (var [, o6] of this) yield o6;
      }
    };
    n4(ls, "formDataToBlob");
    Kt2 = class extends Error {
      static {
        n4(this, "FetchBaseError");
      }
      constructor(o6, a12) {
        super(o6), Error.captureStackTrace(this, this.constructor), this.type = a12;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    };
    te3 = class extends Kt2 {
      static {
        n4(this, "FetchError");
      }
      constructor(o6, a12, l9) {
        super(o6, a12), l9 && (this.code = this.errno = l9.code, this.erroredSysCall = l9.syscall);
      }
    };
    Jt2 = Symbol.toStringTag;
    Oo = n4((i11) => typeof i11 == "object" && typeof i11.append == "function" && typeof i11.delete == "function" && typeof i11.get == "function" && typeof i11.getAll == "function" && typeof i11.has == "function" && typeof i11.set == "function" && typeof i11.sort == "function" && i11[Jt2] === "URLSearchParams", "isURLSearchParameters");
    Xt2 = n4((i11) => i11 && typeof i11 == "object" && typeof i11.arrayBuffer == "function" && typeof i11.type == "string" && typeof i11.stream == "function" && typeof i11.constructor == "function" && /^(Blob|File)$/.test(i11[Jt2]), "isBlob");
    fs = n4((i11) => typeof i11 == "object" && (i11[Jt2] === "AbortSignal" || i11[Jt2] === "EventTarget"), "isAbortSignal");
    cs = n4((i11, o6) => {
      const a12 = new URL(o6).hostname, l9 = new URL(i11).hostname;
      return a12 === l9 || a12.endsWith(`.${l9}`);
    }, "isDomainOrSubdomain");
    ds = n4((i11, o6) => {
      const a12 = new URL(o6).protocol, l9 = new URL(i11).protocol;
      return a12 === l9;
    }, "isSameProtocol");
    hs = Ya(ie2.pipeline);
    N3 = Symbol("Body internals");
    ht3 = class {
      static {
        n4(this, "Body");
      }
      constructor(o6, { size: a12 = 0 } = {}) {
        let l9 = null;
        o6 === null ? o6 = null : Oo(o6) ? o6 = D4.from(o6.toString()) : Xt2(o6) || D4.isBuffer(o6) || (Yt2.isAnyArrayBuffer(o6) ? o6 = D4.from(o6) : ArrayBuffer.isView(o6) ? o6 = D4.from(o6.buffer, o6.byteOffset, o6.byteLength) : o6 instanceof ie2 || (o6 instanceof Zt2 ? (o6 = ls(o6), l9 = o6.type.split("=")[1]) : o6 = D4.from(String(o6))));
        let u4 = o6;
        D4.isBuffer(o6) ? u4 = ie2.Readable.from(o6) : Xt2(o6) && (u4 = ie2.Readable.from(o6.stream())), this[N3] = { body: o6, stream: u4, boundary: l9, disturbed: false, error: null }, this.size = a12, o6 instanceof ie2 && o6.on("error", (m11) => {
          const h8 = m11 instanceof Kt2 ? m11 : new te3(`Invalid response body while trying to fetch ${this.url}: ${m11.message}`, "system", m11);
          this[N3].error = h8;
        });
      }
      get body() {
        return this[N3].stream;
      }
      get bodyUsed() {
        return this[N3].disturbed;
      }
      async arrayBuffer() {
        const { buffer: o6, byteOffset: a12, byteLength: l9 } = await Zr(this);
        return o6.slice(a12, a12 + l9);
      }
      async formData() {
        const o6 = this.headers.get("content-type");
        if (o6.startsWith("application/x-www-form-urlencoded")) {
          const l9 = new Zt2(), u4 = new URLSearchParams(await this.text());
          for (const [m11, h8] of u4) l9.append(m11, h8);
          return l9;
        }
        const { toFormData: a12 } = await Promise.resolve().then(() => (init_multipart_parser(), multipart_parser_exports));
        return a12(this.body, o6);
      }
      async blob() {
        const o6 = this.headers && this.headers.get("content-type") || this[N3].body && this[N3].body.type || "", a12 = await this.arrayBuffer();
        return new Ze2([a12], { type: o6 });
      }
      async json() {
        const o6 = await this.text();
        return JSON.parse(o6);
      }
      async text() {
        const o6 = await Zr(this);
        return new TextDecoder().decode(o6);
      }
      buffer() {
        return Zr(this);
      }
    };
    ht3.prototype.buffer = Gt2(ht3.prototype.buffer, "Please use 'response.arrayBuffer()' instead of 'response.buffer()'", "node-fetch#buffer"), Object.defineProperties(ht3.prototype, { body: { enumerable: true }, bodyUsed: { enumerable: true }, arrayBuffer: { enumerable: true }, blob: { enumerable: true }, json: { enumerable: true }, text: { enumerable: true }, data: { get: Gt2(() => {
    }, "data doesn't exist, use json(), text(), arrayBuffer(), or body instead", "https://github.com/node-fetch/node-fetch/issues/1000 (response)") } });
    n4(Zr, "consumeBody");
    Kr = n4((i11, o6) => {
      let a12, l9, { body: u4 } = i11[N3];
      if (i11.bodyUsed) throw new Error("cannot clone body after it is used");
      return u4 instanceof ie2 && typeof u4.getBoundary != "function" && (a12 = new Qt2({ highWaterMark: o6 }), l9 = new Qt2({ highWaterMark: o6 }), u4.pipe(a12), u4.pipe(l9), i11[N3].stream = a12, u4 = l9), u4;
    }, "clone");
    ms = Gt2((i11) => i11.getBoundary(), "form-data doesn't follow the spec and requires special treatment. Use alternative package", "https://github.com/node-fetch/node-fetch/issues/1167");
    Io = n4((i11, o6) => i11 === null ? null : typeof i11 == "string" ? "text/plain;charset=UTF-8" : Oo(i11) ? "application/x-www-form-urlencoded;charset=UTF-8" : Xt2(i11) ? i11.type || null : D4.isBuffer(i11) || Yt2.isAnyArrayBuffer(i11) || ArrayBuffer.isView(i11) ? null : i11 instanceof Zt2 ? `multipart/form-data; boundary=${o6[N3].boundary}` : i11 && typeof i11.getBoundary == "function" ? `multipart/form-data;boundary=${ms(i11)}` : i11 instanceof ie2 ? null : "text/plain;charset=UTF-8", "extractContentType");
    bs = n4((i11) => {
      const { body: o6 } = i11[N3];
      return o6 === null ? 0 : Xt2(o6) ? o6.size : D4.isBuffer(o6) ? o6.length : o6 && typeof o6.getLengthSync == "function" && o6.hasKnownLength && o6.hasKnownLength() ? o6.getLengthSync() : null;
    }, "getTotalBytes");
    ps = n4(async (i11, { body: o6 }) => {
      o6 === null ? i11.end() : await hs(o6, i11);
    }, "writeToStream");
    er = typeof ft.validateHeaderName == "function" ? ft.validateHeaderName : (i11) => {
      if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(i11)) {
        const o6 = new TypeError(`Header name must be a valid HTTP token [${i11}]`);
        throw Object.defineProperty(o6, "code", { value: "ERR_INVALID_HTTP_TOKEN" }), o6;
      }
    };
    Jr = typeof ft.validateHeaderValue == "function" ? ft.validateHeaderValue : (i11, o6) => {
      if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(o6)) {
        const a12 = new TypeError(`Invalid character in header content ["${i11}"]`);
        throw Object.defineProperty(a12, "code", { value: "ERR_INVALID_CHAR" }), a12;
      }
    };
    ae3 = class _ae extends URLSearchParams {
      static {
        n4(this, "Headers");
      }
      constructor(o6) {
        let a12 = [];
        if (o6 instanceof _ae) {
          const l9 = o6.raw();
          for (const [u4, m11] of Object.entries(l9)) a12.push(...m11.map((h8) => [u4, h8]));
        } else if (o6 != null) if (typeof o6 == "object" && !Yt2.isBoxedPrimitive(o6)) {
          const l9 = o6[Symbol.iterator];
          if (l9 == null) a12.push(...Object.entries(o6));
          else {
            if (typeof l9 != "function") throw new TypeError("Header pairs must be iterable");
            a12 = [...o6].map((u4) => {
              if (typeof u4 != "object" || Yt2.isBoxedPrimitive(u4)) throw new TypeError("Each header pair must be an iterable object");
              return [...u4];
            }).map((u4) => {
              if (u4.length !== 2) throw new TypeError("Each header pair must be a name/value tuple");
              return [...u4];
            });
          }
        } else throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        return a12 = a12.length > 0 ? a12.map(([l9, u4]) => (er(l9), Jr(l9, String(u4)), [String(l9).toLowerCase(), String(u4)])) : void 0, super(a12), new Proxy(this, { get(l9, u4, m11) {
          switch (u4) {
            case "append":
            case "set":
              return (h8, S3) => (er(h8), Jr(h8, String(S3)), URLSearchParams.prototype[u4].call(l9, String(h8).toLowerCase(), String(S3)));
            case "delete":
            case "has":
            case "getAll":
              return (h8) => (er(h8), URLSearchParams.prototype[u4].call(l9, String(h8).toLowerCase()));
            case "keys":
              return () => (l9.sort(), new Set(URLSearchParams.prototype.keys.call(l9)).keys());
            default:
              return Reflect.get(l9, u4, m11);
          }
        } });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      get(o6) {
        const a12 = this.getAll(o6);
        if (a12.length === 0) return null;
        let l9 = a12.join(", ");
        return /^content-encoding$/i.test(o6) && (l9 = l9.toLowerCase()), l9;
      }
      forEach(o6, a12 = void 0) {
        for (const l9 of this.keys()) Reflect.apply(o6, a12, [this.get(l9), l9, this]);
      }
      *values() {
        for (const o6 of this.keys()) yield this.get(o6);
      }
      *entries() {
        for (const o6 of this.keys()) yield [o6, this.get(o6)];
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      raw() {
        return [...this.keys()].reduce((o6, a12) => (o6[a12] = this.getAll(a12), o6), {});
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce((o6, a12) => {
          const l9 = this.getAll(a12);
          return a12 === "host" ? o6[a12] = l9[0] : o6[a12] = l9.length > 1 ? l9 : l9[0], o6;
        }, {});
      }
    };
    Object.defineProperties(ae3.prototype, ["get", "entries", "forEach", "values"].reduce((i11, o6) => (i11[o6] = { enumerable: true }, i11), {}));
    n4(ys, "fromRawHeaders");
    gs = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    Xr = n4((i11) => gs.has(i11), "isRedirect");
    re3 = Symbol("Response internals");
    H3 = class _H extends ht3 {
      static {
        n4(this, "Response");
      }
      constructor(o6 = null, a12 = {}) {
        super(o6, a12);
        const l9 = a12.status != null ? a12.status : 200, u4 = new ae3(a12.headers);
        if (o6 !== null && !u4.has("Content-Type")) {
          const m11 = Io(o6, this);
          m11 && u4.append("Content-Type", m11);
        }
        this[re3] = { type: "default", url: a12.url, status: l9, statusText: a12.statusText || "", headers: u4, counter: a12.counter, highWaterMark: a12.highWaterMark };
      }
      get type() {
        return this[re3].type;
      }
      get url() {
        return this[re3].url || "";
      }
      get status() {
        return this[re3].status;
      }
      get ok() {
        return this[re3].status >= 200 && this[re3].status < 300;
      }
      get redirected() {
        return this[re3].counter > 0;
      }
      get statusText() {
        return this[re3].statusText;
      }
      get headers() {
        return this[re3].headers;
      }
      get highWaterMark() {
        return this[re3].highWaterMark;
      }
      clone() {
        return new _H(Kr(this, this.highWaterMark), { type: this.type, url: this.url, status: this.status, statusText: this.statusText, headers: this.headers, ok: this.ok, redirected: this.redirected, size: this.size, highWaterMark: this.highWaterMark });
      }
      static redirect(o6, a12 = 302) {
        if (!Xr(a12)) throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        return new _H(null, { headers: { location: new URL(o6).toString() }, status: a12 });
      }
      static error() {
        const o6 = new _H(null, { status: 0, statusText: "" });
        return o6[re3].type = "error", o6;
      }
      static json(o6 = void 0, a12 = {}) {
        const l9 = JSON.stringify(o6);
        if (l9 === void 0) throw new TypeError("data is not JSON serializable");
        const u4 = new ae3(a12 && a12.headers);
        return u4.has("content-type") || u4.set("content-type", "application/json"), new _H(l9, { ...a12, headers: u4 });
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(H3.prototype, { type: { enumerable: true }, url: { enumerable: true }, status: { enumerable: true }, ok: { enumerable: true }, redirected: { enumerable: true }, statusText: { enumerable: true }, headers: { enumerable: true }, clone: { enumerable: true } });
    _s = n4((i11) => {
      if (i11.search) return i11.search;
      const o6 = i11.href.length - 1, a12 = i11.hash || (i11.href[o6] === "#" ? "#" : "");
      return i11.href[o6 - a12.length] === "?" ? "?" : "";
    }, "getSearch");
    n4(Fo, "stripURLForUseAsAReferrer");
    zo = /* @__PURE__ */ new Set(["", "no-referrer", "no-referrer-when-downgrade", "same-origin", "origin", "strict-origin", "origin-when-cross-origin", "strict-origin-when-cross-origin", "unsafe-url"]);
    Ss = "strict-origin-when-cross-origin";
    n4(ws, "validateReferrerPolicy");
    n4(Rs, "isOriginPotentiallyTrustworthy");
    n4(Ke3, "isUrlPotentiallyTrustworthy");
    n4(Ts, "determineRequestsReferrer");
    n4(Cs, "parseReferrerPolicyFromHeader");
    j2 = Symbol("Request internals");
    mt2 = n4((i11) => typeof i11 == "object" && typeof i11[j2] == "object", "isRequest");
    Ps = Gt2(() => {
    }, ".data is not a valid RequestInit property, use .body instead", "https://github.com/node-fetch/node-fetch/issues/1000 (request)");
    Xe2 = class _Xe extends ht3 {
      static {
        n4(this, "Request");
      }
      constructor(o6, a12 = {}) {
        let l9;
        if (mt2(o6) ? l9 = new URL(o6.url) : (l9 = new URL(o6), o6 = {}), l9.username !== "" || l9.password !== "") throw new TypeError(`${l9} is an url with embedded credentials.`);
        let u4 = a12.method || o6.method || "GET";
        if (/^(delete|get|head|options|post|put)$/i.test(u4) && (u4 = u4.toUpperCase()), !mt2(a12) && "data" in a12 && Ps(), (a12.body != null || mt2(o6) && o6.body !== null) && (u4 === "GET" || u4 === "HEAD")) throw new TypeError("Request with GET/HEAD method cannot have body");
        const m11 = a12.body ? a12.body : mt2(o6) && o6.body !== null ? Kr(o6) : null;
        super(m11, { size: a12.size || o6.size || 0 });
        const h8 = new ae3(a12.headers || o6.headers || {});
        if (m11 !== null && !h8.has("Content-Type")) {
          const w8 = Io(m11, this);
          w8 && h8.set("Content-Type", w8);
        }
        let S3 = mt2(o6) ? o6.signal : null;
        if ("signal" in a12 && (S3 = a12.signal), S3 != null && !fs(S3)) throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        let E7 = a12.referrer == null ? o6.referrer : a12.referrer;
        if (E7 === "") E7 = "no-referrer";
        else if (E7) {
          const w8 = new URL(E7);
          E7 = /^about:(\/\/)?client$/.test(w8) ? "client" : w8;
        } else E7 = void 0;
        this[j2] = { method: u4, redirect: a12.redirect || o6.redirect || "follow", headers: h8, parsedURL: l9, signal: S3, referrer: E7 }, this.follow = a12.follow === void 0 ? o6.follow === void 0 ? 20 : o6.follow : a12.follow, this.compress = a12.compress === void 0 ? o6.compress === void 0 ? true : o6.compress : a12.compress, this.counter = a12.counter || o6.counter || 0, this.agent = a12.agent || o6.agent, this.highWaterMark = a12.highWaterMark || o6.highWaterMark || 16384, this.insecureHTTPParser = a12.insecureHTTPParser || o6.insecureHTTPParser || false, this.referrerPolicy = a12.referrerPolicy || o6.referrerPolicy || "";
      }
      get method() {
        return this[j2].method;
      }
      get url() {
        return Za(this[j2].parsedURL);
      }
      get headers() {
        return this[j2].headers;
      }
      get redirect() {
        return this[j2].redirect;
      }
      get signal() {
        return this[j2].signal;
      }
      get referrer() {
        if (this[j2].referrer === "no-referrer") return "";
        if (this[j2].referrer === "client") return "about:client";
        if (this[j2].referrer) return this[j2].referrer.toString();
      }
      get referrerPolicy() {
        return this[j2].referrerPolicy;
      }
      set referrerPolicy(o6) {
        this[j2].referrerPolicy = ws(o6);
      }
      clone() {
        return new _Xe(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Xe2.prototype, { method: { enumerable: true }, url: { enumerable: true }, headers: { enumerable: true }, redirect: { enumerable: true }, clone: { enumerable: true }, signal: { enumerable: true }, referrer: { enumerable: true }, referrerPolicy: { enumerable: true } });
    Es = n4((i11) => {
      const { parsedURL: o6 } = i11[j2], a12 = new ae3(i11[j2].headers);
      a12.has("Accept") || a12.set("Accept", "*/*");
      let l9 = null;
      if (i11.body === null && /^(post|put)$/i.test(i11.method) && (l9 = "0"), i11.body !== null) {
        const S3 = bs(i11);
        typeof S3 == "number" && !Number.isNaN(S3) && (l9 = String(S3));
      }
      l9 && a12.set("Content-Length", l9), i11.referrerPolicy === "" && (i11.referrerPolicy = Ss), i11.referrer && i11.referrer !== "no-referrer" ? i11[j2].referrer = Ts(i11) : i11[j2].referrer = "no-referrer", i11[j2].referrer instanceof URL && a12.set("Referer", i11.referrer), a12.has("User-Agent") || a12.set("User-Agent", "node-fetch"), i11.compress && !a12.has("Accept-Encoding") && a12.set("Accept-Encoding", "gzip, deflate, br");
      let { agent: u4 } = i11;
      typeof u4 == "function" && (u4 = u4(o6));
      const m11 = _s(o6), h8 = { path: o6.pathname + m11, method: i11.method, headers: a12[Symbol.for("nodejs.util.inspect.custom")](), insecureHTTPParser: i11.insecureHTTPParser, agent: u4 };
      return { parsedURL: o6, options: h8 };
    }, "getNodeRequestOptions");
    jo = class extends Kt2 {
      static {
        n4(this, "AbortError");
      }
      constructor(o6, a12 = "aborted") {
        super(o6, a12);
      }
    };
    n4(vs, "requireNodeDomexception");
    As = vs();
    Bs = f2(As);
    ({ stat: tn } = Xa);
    Ws = n4((i11, o6) => Do(Po(i11), i11, o6), "blobFromSync");
    ks = n4((i11, o6) => tn(i11).then((a12) => Do(a12, i11, o6)), "blobFrom");
    qs = n4((i11, o6) => tn(i11).then((a12) => $o(a12, i11, o6)), "fileFrom");
    Os = n4((i11, o6) => $o(Po(i11), i11, o6), "fileFromSync");
    Do = n4((i11, o6, a12 = "") => new Ze2([new ir2({ path: o6, size: i11.size, lastModified: i11.mtimeMs, start: 0 })], { type: a12 }), "fromBlob");
    $o = n4((i11, o6, a12 = "") => new Yr([new ir2({ path: o6, size: i11.size, lastModified: i11.mtimeMs, start: 0 })], es(o6), { type: a12, lastModified: i11.mtimeMs }), "fromFile");
    ir2 = class _ir {
      static {
        n4(this, "BlobDataItem");
      }
      #e;
      #t;
      constructor(o6) {
        this.#e = o6.path, this.#t = o6.start, this.size = o6.size, this.lastModified = o6.lastModified;
      }
      slice(o6, a12) {
        return new _ir({ path: this.#e, lastModified: this.lastModified, size: a12 - o6, start: this.#t + o6 });
      }
      async *stream() {
        const { mtimeMs: o6 } = await tn(this.#e);
        if (o6 > this.lastModified) throw new Bs("The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.", "NotReadableError");
        yield* Ja(this.#e, { start: this.#t, end: this.#t + this.size - 1 });
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
    };
    Is = /* @__PURE__ */ new Set(["data:", "http:", "https:"]);
    n4(Mo, "fetch$1");
    n4(Fs, "fixResponseChunkedTransferBadEnding");
    Uo = /* @__PURE__ */ new WeakMap();
    rn = /* @__PURE__ */ new WeakMap();
    n4(k2, "pd");
    n4(xo, "setCancelFlag");
    n4(Je3, "Event"), Je3.prototype = { get type() {
      return k2(this).event.type;
    }, get target() {
      return k2(this).eventTarget;
    }, get currentTarget() {
      return k2(this).currentTarget;
    }, composedPath() {
      const i11 = k2(this).currentTarget;
      return i11 == null ? [] : [i11];
    }, get NONE() {
      return 0;
    }, get CAPTURING_PHASE() {
      return 1;
    }, get AT_TARGET() {
      return 2;
    }, get BUBBLING_PHASE() {
      return 3;
    }, get eventPhase() {
      return k2(this).eventPhase;
    }, stopPropagation() {
      const i11 = k2(this);
      i11.stopped = true, typeof i11.event.stopPropagation == "function" && i11.event.stopPropagation();
    }, stopImmediatePropagation() {
      const i11 = k2(this);
      i11.stopped = true, i11.immediateStopped = true, typeof i11.event.stopImmediatePropagation == "function" && i11.event.stopImmediatePropagation();
    }, get bubbles() {
      return !!k2(this).event.bubbles;
    }, get cancelable() {
      return !!k2(this).event.cancelable;
    }, preventDefault() {
      xo(k2(this));
    }, get defaultPrevented() {
      return k2(this).canceled;
    }, get composed() {
      return !!k2(this).event.composed;
    }, get timeStamp() {
      return k2(this).timeStamp;
    }, get srcElement() {
      return k2(this).eventTarget;
    }, get cancelBubble() {
      return k2(this).stopped;
    }, set cancelBubble(i11) {
      if (!i11) return;
      const o6 = k2(this);
      o6.stopped = true, typeof o6.event.cancelBubble == "boolean" && (o6.event.cancelBubble = true);
    }, get returnValue() {
      return !k2(this).canceled;
    }, set returnValue(i11) {
      i11 || xo(k2(this));
    }, initEvent() {
    } }, Object.defineProperty(Je3.prototype, "constructor", { value: Je3, configurable: true, writable: true }), typeof window < "u" && typeof window.Event < "u" && (Object.setPrototypeOf(Je3.prototype, window.Event.prototype), rn.set(window.Event.prototype, Je3));
    n4(No, "defineRedirectDescriptor");
    n4(zs, "defineCallDescriptor");
    n4(js, "defineWrapper");
    n4(Ho, "getWrapper");
    n4(Ls, "wrapEvent");
    n4(Ds, "isStopped");
    n4($s, "setEventPhase");
    n4(Ms, "setCurrentTarget");
    n4(Vo, "setPassiveListener");
    Qo = /* @__PURE__ */ new WeakMap();
    Yo = 1;
    Go = 2;
    tr = 3;
    n4(rr, "isObject");
    n4(bt2, "getListeners");
    n4(Us, "defineEventAttributeDescriptor");
    n4(Zo, "defineEventAttribute");
    n4(Ko, "defineCustomEventTarget");
    n4(pe2, "EventTarget"), pe2.prototype = { addEventListener(i11, o6, a12) {
      if (o6 == null) return;
      if (typeof o6 != "function" && !rr(o6)) throw new TypeError("'listener' should be a function or an object.");
      const l9 = bt2(this), u4 = rr(a12), h8 = (u4 ? !!a12.capture : !!a12) ? Yo : Go, S3 = { listener: o6, listenerType: h8, passive: u4 && !!a12.passive, once: u4 && !!a12.once, next: null };
      let E7 = l9.get(i11);
      if (E7 === void 0) {
        l9.set(i11, S3);
        return;
      }
      let w8 = null;
      for (; E7 != null; ) {
        if (E7.listener === o6 && E7.listenerType === h8) return;
        w8 = E7, E7 = E7.next;
      }
      w8.next = S3;
    }, removeEventListener(i11, o6, a12) {
      if (o6 == null) return;
      const l9 = bt2(this), m11 = (rr(a12) ? !!a12.capture : !!a12) ? Yo : Go;
      let h8 = null, S3 = l9.get(i11);
      for (; S3 != null; ) {
        if (S3.listener === o6 && S3.listenerType === m11) {
          h8 !== null ? h8.next = S3.next : S3.next !== null ? l9.set(i11, S3.next) : l9.delete(i11);
          return;
        }
        h8 = S3, S3 = S3.next;
      }
    }, dispatchEvent(i11) {
      if (i11 == null || typeof i11.type != "string") throw new TypeError('"event.type" should be a string.');
      const o6 = bt2(this), a12 = i11.type;
      let l9 = o6.get(a12);
      if (l9 == null) return true;
      const u4 = Ls(this, i11);
      let m11 = null;
      for (; l9 != null; ) {
        if (l9.once ? m11 !== null ? m11.next = l9.next : l9.next !== null ? o6.set(a12, l9.next) : o6.delete(a12) : m11 = l9, Vo(u4, l9.passive ? l9.listener : null), typeof l9.listener == "function") try {
          l9.listener.call(this, u4);
        } catch (h8) {
          typeof console < "u" && typeof console.error == "function" && console.error(h8);
        }
        else l9.listenerType !== tr && typeof l9.listener.handleEvent == "function" && l9.listener.handleEvent(u4);
        if (Ds(u4)) break;
        l9 = l9.next;
      }
      return Vo(u4, null), $s(u4, 0), Ms(u4, null), !u4.defaultPrevented;
    } }, Object.defineProperty(pe2.prototype, "constructor", { value: pe2, configurable: true, writable: true }), typeof window < "u" && typeof window.EventTarget < "u" && Object.setPrototypeOf(pe2.prototype, window.EventTarget.prototype);
    nr2 = class extends pe2 {
      static {
        n4(this, "AbortSignal");
      }
      constructor() {
        throw super(), new TypeError("AbortSignal cannot be constructed directly");
      }
      get aborted() {
        const o6 = or.get(this);
        if (typeof o6 != "boolean") throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        return o6;
      }
    };
    Zo(nr2.prototype, "abort");
    n4(xs, "createAbortSignal");
    n4(Ns, "abortSignal");
    or = /* @__PURE__ */ new WeakMap();
    Object.defineProperties(nr2.prototype, { aborted: { enumerable: true } }), typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(nr2.prototype, Symbol.toStringTag, { configurable: true, value: "AbortSignal" });
    nn = class {
      static {
        n4(this, "AbortController");
      }
      constructor() {
        Jo.set(this, xs());
      }
      get signal() {
        return Xo(this);
      }
      abort() {
        Ns(Xo(this));
      }
    };
    Jo = /* @__PURE__ */ new WeakMap();
    n4(Xo, "getSignal"), Object.defineProperties(nn.prototype, { signal: { enumerable: true }, abort: { enumerable: true } }), typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(nn.prototype, Symbol.toStringTag, { configurable: true, value: "AbortController" });
    Hs = Object.defineProperty;
    Vs = n4((i11, o6) => Hs(i11, "name", { value: o6, configurable: true }), "e");
    ei = Mo;
    ti();
    n4(ti, "s"), Vs(ti, "checkNodeEnvironment");
  }
});

// node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/index.mjs
var o4, r3, p4, F3, h3, n5, c3, R4, T2;
var init_dist = __esm({
  "node_modules/.pnpm/node-fetch-native@1.6.6/node_modules/node-fetch-native/dist/index.mjs"() {
    init_node();
    init_node();
    init_node_fetch_native_DfbY2q_x();
    o4 = !!globalThis.process?.env?.FORCE_NODE_FETCH;
    r3 = !o4 && globalThis.fetch || ei;
    p4 = !o4 && globalThis.Blob || Ze2;
    F3 = !o4 && globalThis.File || Yr;
    h3 = !o4 && globalThis.FormData || Zt2;
    n5 = !o4 && globalThis.Headers || ae3;
    c3 = !o4 && globalThis.Request || Xe2;
    R4 = !o4 && globalThis.Response || H3;
    T2 = !o4 && globalThis.AbortController || nn;
  }
});

// node_modules/.pnpm/destr@2.0.3/node_modules/destr/dist/index.mjs
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  const _value = value.trim();
  if (
    // eslint-disable-next-line unicorn/prefer-at
    value[0] === '"' && value.endsWith('"') && !value.includes("\\")
  ) {
    return _value.slice(1, -1);
  }
  if (_value.length <= 9) {
    const _lval = _value.toLowerCase();
    if (_lval === "true") {
      return true;
    }
    if (_lval === "false") {
      return false;
    }
    if (_lval === "undefined") {
      return void 0;
    }
    if (_lval === "null") {
      return null;
    }
    if (_lval === "nan") {
      return Number.NaN;
    }
    if (_lval === "infinity") {
      return Number.POSITIVE_INFINITY;
    }
    if (_lval === "-infinity") {
      return Number.NEGATIVE_INFINITY;
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}
var suspectProtoRx, suspectConstructorRx, JsonSigRx;
var init_dist2 = __esm({
  "node_modules/.pnpm/destr@2.0.3/node_modules/destr/dist/index.mjs"() {
    suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
    suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
    JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
  }
});

// node_modules/.pnpm/ufo@1.5.4/node_modules/ufo/dist/index.mjs
function encode(text3) {
  return encodeURI("" + text3).replace(ENC_PIPE_RE, "|");
}
function encodeQueryValue(input) {
  return encode(typeof input === "string" ? input : JSON.stringify(input)).replace(PLUS_RE, "%2B").replace(ENC_SPACE_RE, "+").replace(HASH_RE, "%23").replace(AMPERSAND_RE, "%26").replace(ENC_BACKTICK_RE, "`").replace(ENC_CARET_RE, "^").replace(SLASH_RE, "%2F");
}
function encodeQueryKey(text3) {
  return encodeQueryValue(text3).replace(EQUAL_RE, "%3D");
}
function decode(text3 = "") {
  try {
    return decodeURIComponent("" + text3);
  } catch {
    return "" + text3;
  }
}
function decodeQueryKey(text3) {
  return decode(text3.replace(PLUS_RE, " "));
}
function decodeQueryValue(text3) {
  return decode(text3.replace(PLUS_RE, " "));
}
function parseQuery(parametersString = "") {
  const object = {};
  if (parametersString[0] === "?") {
    parametersString = parametersString.slice(1);
  }
  for (const parameter of parametersString.split("&")) {
    const s37 = parameter.match(/([^=]+)=?(.*)/) || [];
    if (s37.length < 2) {
      continue;
    }
    const key = decodeQueryKey(s37[1]);
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const value = decodeQueryValue(s37[2] || "");
    if (object[key] === void 0) {
      object[key] = value;
    } else if (Array.isArray(object[key])) {
      object[key].push(value);
    } else {
      object[key] = [object[key], value];
    }
  }
  return object;
}
function encodeQueryItem(key, value) {
  if (typeof value === "number" || typeof value === "boolean") {
    value = String(value);
  }
  if (!value) {
    return encodeQueryKey(key);
  }
  if (Array.isArray(value)) {
    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join("&");
  }
  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;
}
function stringifyQuery(query2) {
  return Object.keys(query2).filter((k4) => query2[k4] !== void 0).map((k4) => encodeQueryItem(k4, query2[k4])).filter(Boolean).join("&");
}
function hasProtocol(inputString, opts = {}) {
  if (typeof opts === "boolean") {
    opts = { acceptRelative: opts };
  }
  if (opts.strict) {
    return PROTOCOL_STRICT_REGEX.test(inputString);
  }
  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);
}
function hasTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return input.endsWith("/");
  }
  return TRAILING_SLASH_RE.test(input);
}
function withoutTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || "/";
  }
  if (!hasTrailingSlash(input, true)) {
    return input || "/";
  }
  let path = input;
  let fragment = "";
  const fragmentIndex = input.indexOf("#");
  if (fragmentIndex >= 0) {
    path = input.slice(0, fragmentIndex);
    fragment = input.slice(fragmentIndex);
  }
  const [s0, ...s37] = path.split("?");
  const cleanPath = s0.endsWith("/") ? s0.slice(0, -1) : s0;
  return (cleanPath || "/") + (s37.length > 0 ? `?${s37.join("?")}` : "") + fragment;
}
function withTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return input.endsWith("/") ? input : input + "/";
  }
  if (hasTrailingSlash(input, true)) {
    return input || "/";
  }
  let path = input;
  let fragment = "";
  const fragmentIndex = input.indexOf("#");
  if (fragmentIndex >= 0) {
    path = input.slice(0, fragmentIndex);
    fragment = input.slice(fragmentIndex);
    if (!path) {
      return fragment;
    }
  }
  const [s0, ...s37] = path.split("?");
  return s0 + "/" + (s37.length > 0 ? `?${s37.join("?")}` : "") + fragment;
}
function withBase(input, base) {
  if (isEmptyURL(base) || hasProtocol(input)) {
    return input;
  }
  const _base = withoutTrailingSlash(base);
  if (input.startsWith(_base)) {
    return input;
  }
  return joinURL(_base, input);
}
function withQuery(input, query2) {
  const parsed = parseURL(input);
  const mergedQuery = { ...parseQuery(parsed.search), ...query2 };
  parsed.search = stringifyQuery(mergedQuery);
  return stringifyParsedURL(parsed);
}
function isEmptyURL(url) {
  return !url || url === "/";
}
function isNonEmptyURL(url) {
  return url && url !== "/";
}
function joinURL(base, ...input) {
  let url = base || "";
  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {
    if (url) {
      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, "");
      url = withTrailingSlash(url) + _segment;
    } else {
      url = segment;
    }
  }
  return url;
}
function parseURL(input = "", defaultProto) {
  const _specialProtoMatch = input.match(
    /^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i
  );
  if (_specialProtoMatch) {
    const [, _proto, _pathname = ""] = _specialProtoMatch;
    return {
      protocol: _proto.toLowerCase(),
      pathname: _pathname,
      href: _proto + _pathname,
      auth: "",
      host: "",
      search: "",
      hash: ""
    };
  }
  if (!hasProtocol(input, { acceptRelative: true })) {
    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);
  }
  const [, protocol = "", auth, hostAndPath = ""] = input.replace(/\\/g, "/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/) || [];
  let [, host = "", path = ""] = hostAndPath.match(/([^#/?]*)(.*)?/) || [];
  if (protocol === "file:") {
    path = path.replace(/\/(?=[A-Za-z]:)/, "");
  }
  const { pathname, search, hash } = parsePath(path);
  return {
    protocol: protocol.toLowerCase(),
    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : "",
    host,
    pathname,
    search,
    hash,
    [protocolRelative]: !protocol
  };
}
function parsePath(input = "") {
  const [pathname = "", search = "", hash = ""] = (input.match(/([^#?]*)(\?[^#]*)?(#.*)?/) || []).splice(1);
  return {
    pathname,
    search,
    hash
  };
}
function stringifyParsedURL(parsed) {
  const pathname = parsed.pathname || "";
  const search = parsed.search ? (parsed.search.startsWith("?") ? "" : "?") + parsed.search : "";
  const hash = parsed.hash || "";
  const auth = parsed.auth ? parsed.auth + "@" : "";
  const host = parsed.host || "";
  const proto = parsed.protocol || parsed[protocolRelative] ? (parsed.protocol || "") + "//" : "";
  return proto + auth + host + pathname + search + hash;
}
var r4, HASH_RE, AMPERSAND_RE, SLASH_RE, EQUAL_RE, PLUS_RE, ENC_CARET_RE, ENC_BACKTICK_RE, ENC_PIPE_RE, ENC_SPACE_RE, PROTOCOL_STRICT_REGEX, PROTOCOL_REGEX, PROTOCOL_RELATIVE_REGEX, TRAILING_SLASH_RE, JOIN_LEADING_SLASH_RE, protocolRelative;
var init_dist3 = __esm({
  "node_modules/.pnpm/ufo@1.5.4/node_modules/ufo/dist/index.mjs"() {
    r4 = String.fromCharCode;
    HASH_RE = /#/g;
    AMPERSAND_RE = /&/g;
    SLASH_RE = /\//g;
    EQUAL_RE = /=/g;
    PLUS_RE = /\+/g;
    ENC_CARET_RE = /%5e/gi;
    ENC_BACKTICK_RE = /%60/gi;
    ENC_PIPE_RE = /%7c/gi;
    ENC_SPACE_RE = /%20/gi;
    PROTOCOL_STRICT_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{1,2})/;
    PROTOCOL_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{2})?/;
    PROTOCOL_RELATIVE_REGEX = /^([/\\]\s*){2,}[^/\\]/;
    TRAILING_SLASH_RE = /\/$|\/\?|\/#/;
    JOIN_LEADING_SLASH_RE = /^\.?\//;
    protocolRelative = Symbol.for("ufo:protocolRelative");
  }
});

// node_modules/.pnpm/ofetch@1.4.1/node_modules/ofetch/dist/shared/ofetch.03887fc3.mjs
function createFetchError(ctx) {
  const errorMessage = ctx.error?.message || ctx.error?.toString() || "";
  const method = ctx.request?.method || ctx.options?.method || "GET";
  const url = ctx.request?.url || String(ctx.request) || "/";
  const requestStr = `[${method}] ${JSON.stringify(url)}`;
  const statusStr = ctx.response ? `${ctx.response.status} ${ctx.response.statusText}` : "<no response>";
  const message = `${requestStr}: ${statusStr}${errorMessage ? ` ${errorMessage}` : ""}`;
  const fetchError = new FetchError(
    message,
    ctx.error ? { cause: ctx.error } : void 0
  );
  for (const key of ["request", "options", "response"]) {
    Object.defineProperty(fetchError, key, {
      get() {
        return ctx[key];
      }
    });
  }
  for (const [key, refKey] of [
    ["data", "_data"],
    ["status", "status"],
    ["statusCode", "status"],
    ["statusText", "statusText"],
    ["statusMessage", "statusText"]
  ]) {
    Object.defineProperty(fetchError, key, {
      get() {
        return ctx.response && ctx.response[refKey];
      }
    });
  }
  return fetchError;
}
function isPayloadMethod(method = "GET") {
  return payloadMethods.has(method.toUpperCase());
}
function isJSONSerializable(value) {
  if (value === void 0) {
    return false;
  }
  const t13 = typeof value;
  if (t13 === "string" || t13 === "number" || t13 === "boolean" || t13 === null) {
    return true;
  }
  if (t13 !== "object") {
    return false;
  }
  if (Array.isArray(value)) {
    return true;
  }
  if (value.buffer) {
    return false;
  }
  return value.constructor && value.constructor.name === "Object" || typeof value.toJSON === "function";
}
function detectResponseType(_contentType = "") {
  if (!_contentType) {
    return "json";
  }
  const contentType = _contentType.split(";").shift() || "";
  if (JSON_RE.test(contentType)) {
    return "json";
  }
  if (textTypes.has(contentType) || contentType.startsWith("text/")) {
    return "text";
  }
  return "blob";
}
function resolveFetchOptions(request, input, defaults, Headers3) {
  const headers = mergeHeaders(
    input?.headers ?? request?.headers,
    defaults?.headers,
    Headers3
  );
  let query2;
  if (defaults?.query || defaults?.params || input?.params || input?.query) {
    query2 = {
      ...defaults?.params,
      ...defaults?.query,
      ...input?.params,
      ...input?.query
    };
  }
  return {
    ...defaults,
    ...input,
    query: query2,
    params: query2,
    headers
  };
}
function mergeHeaders(input, defaults, Headers3) {
  if (!defaults) {
    return new Headers3(input);
  }
  const headers = new Headers3(defaults);
  if (input) {
    for (const [key, value] of Symbol.iterator in input || Array.isArray(input) ? input : new Headers3(input)) {
      headers.set(key, value);
    }
  }
  return headers;
}
async function callHooks(context, hooks) {
  if (hooks) {
    if (Array.isArray(hooks)) {
      for (const hook of hooks) {
        await hook(context);
      }
    } else {
      await hooks(context);
    }
  }
}
function createFetch(globalOptions = {}) {
  const {
    fetch: fetch2 = globalThis.fetch,
    Headers: Headers3 = globalThis.Headers,
    AbortController: AbortController3 = globalThis.AbortController
  } = globalOptions;
  async function onError(context) {
    const isAbort = context.error && context.error.name === "AbortError" && !context.options.timeout || false;
    if (context.options.retry !== false && !isAbort) {
      let retries;
      if (typeof context.options.retry === "number") {
        retries = context.options.retry;
      } else {
        retries = isPayloadMethod(context.options.method) ? 0 : 1;
      }
      const responseCode = context.response && context.response.status || 500;
      if (retries > 0 && (Array.isArray(context.options.retryStatusCodes) ? context.options.retryStatusCodes.includes(responseCode) : retryStatusCodes.has(responseCode))) {
        const retryDelay = typeof context.options.retryDelay === "function" ? context.options.retryDelay(context) : context.options.retryDelay || 0;
        if (retryDelay > 0) {
          await new Promise((resolve) => setTimeout(resolve, retryDelay));
        }
        return $fetchRaw(context.request, {
          ...context.options,
          retry: retries - 1
        });
      }
    }
    const error = createFetchError(context);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, $fetchRaw);
    }
    throw error;
  }
  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {
    const context = {
      request: _request,
      options: resolveFetchOptions(
        _request,
        _options,
        globalOptions.defaults,
        Headers3
      ),
      response: void 0,
      error: void 0
    };
    if (context.options.method) {
      context.options.method = context.options.method.toUpperCase();
    }
    if (context.options.onRequest) {
      await callHooks(context, context.options.onRequest);
    }
    if (typeof context.request === "string") {
      if (context.options.baseURL) {
        context.request = withBase(context.request, context.options.baseURL);
      }
      if (context.options.query) {
        context.request = withQuery(context.request, context.options.query);
        delete context.options.query;
      }
      if ("query" in context.options) {
        delete context.options.query;
      }
      if ("params" in context.options) {
        delete context.options.params;
      }
    }
    if (context.options.body && isPayloadMethod(context.options.method)) {
      if (isJSONSerializable(context.options.body)) {
        context.options.body = typeof context.options.body === "string" ? context.options.body : JSON.stringify(context.options.body);
        context.options.headers = new Headers3(context.options.headers || {});
        if (!context.options.headers.has("content-type")) {
          context.options.headers.set("content-type", "application/json");
        }
        if (!context.options.headers.has("accept")) {
          context.options.headers.set("accept", "application/json");
        }
      } else if (
        // ReadableStream Body
        "pipeTo" in context.options.body && typeof context.options.body.pipeTo === "function" || // Node.js Stream Body
        typeof context.options.body.pipe === "function"
      ) {
        if (!("duplex" in context.options)) {
          context.options.duplex = "half";
        }
      }
    }
    let abortTimeout;
    if (!context.options.signal && context.options.timeout) {
      const controller = new AbortController3();
      abortTimeout = setTimeout(() => {
        const error = new Error(
          "[TimeoutError]: The operation was aborted due to timeout"
        );
        error.name = "TimeoutError";
        error.code = 23;
        controller.abort(error);
      }, context.options.timeout);
      context.options.signal = controller.signal;
    }
    try {
      context.response = await fetch2(
        context.request,
        context.options
      );
    } catch (error) {
      context.error = error;
      if (context.options.onRequestError) {
        await callHooks(
          context,
          context.options.onRequestError
        );
      }
      return await onError(context);
    } finally {
      if (abortTimeout) {
        clearTimeout(abortTimeout);
      }
    }
    const hasBody = (context.response.body || // https://github.com/unjs/ofetch/issues/324
    // https://github.com/unjs/ofetch/issues/294
    // https://github.com/JakeChampion/fetch/issues/1454
    context.response._bodyInit) && !nullBodyResponses.has(context.response.status) && context.options.method !== "HEAD";
    if (hasBody) {
      const responseType = (context.options.parseResponse ? "json" : context.options.responseType) || detectResponseType(context.response.headers.get("content-type") || "");
      switch (responseType) {
        case "json": {
          const data = await context.response.text();
          const parseFunction = context.options.parseResponse || destr;
          context.response._data = parseFunction(data);
          break;
        }
        case "stream": {
          context.response._data = context.response.body || context.response._bodyInit;
          break;
        }
        default: {
          context.response._data = await context.response[responseType]();
        }
      }
    }
    if (context.options.onResponse) {
      await callHooks(
        context,
        context.options.onResponse
      );
    }
    if (!context.options.ignoreResponseError && context.response.status >= 400 && context.response.status < 600) {
      if (context.options.onResponseError) {
        await callHooks(
          context,
          context.options.onResponseError
        );
      }
      return await onError(context);
    }
    return context.response;
  };
  const $fetch = async function $fetch2(request, options) {
    const r8 = await $fetchRaw(request, options);
    return r8._data;
  };
  $fetch.raw = $fetchRaw;
  $fetch.native = (...args) => fetch2(...args);
  $fetch.create = (defaultOptions3 = {}, customGlobalOptions = {}) => createFetch({
    ...globalOptions,
    ...customGlobalOptions,
    defaults: {
      ...globalOptions.defaults,
      ...customGlobalOptions.defaults,
      ...defaultOptions3
    }
  });
  return $fetch;
}
var FetchError, payloadMethods, textTypes, JSON_RE, retryStatusCodes, nullBodyResponses;
var init_ofetch_03887fc3 = __esm({
  "node_modules/.pnpm/ofetch@1.4.1/node_modules/ofetch/dist/shared/ofetch.03887fc3.mjs"() {
    init_dist2();
    init_dist3();
    FetchError = class extends Error {
      constructor(message, opts) {
        super(message, opts);
        this.name = "FetchError";
        if (opts?.cause && !this.cause) {
          this.cause = opts.cause;
        }
      }
    };
    payloadMethods = new Set(
      Object.freeze(["PATCH", "POST", "PUT", "DELETE"])
    );
    textTypes = /* @__PURE__ */ new Set([
      "image/svg",
      "application/xml",
      "application/xhtml",
      "application/html"
    ]);
    JSON_RE = /^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;
    retryStatusCodes = /* @__PURE__ */ new Set([
      408,
      // Request Timeout
      409,
      // Conflict
      425,
      // Too Early (Experimental)
      429,
      // Too Many Requests
      500,
      // Internal Server Error
      502,
      // Bad Gateway
      503,
      // Service Unavailable
      504
      // Gateway Timeout
    ]);
    nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);
  }
});

// node_modules/.pnpm/ofetch@1.4.1/node_modules/ofetch/dist/node.mjs
import http from "node:http";
import https from "node:https";
function createNodeFetch() {
  const useKeepAlive = JSON.parse(process.env.FETCH_KEEP_ALIVE || "false");
  if (!useKeepAlive) {
    return r3;
  }
  const agentOptions = { keepAlive: true };
  const httpAgent = new http.Agent(agentOptions);
  const httpsAgent = new https.Agent(agentOptions);
  const nodeFetchOptions = {
    agent(parsedURL) {
      return parsedURL.protocol === "http:" ? httpAgent : httpsAgent;
    }
  };
  return function nodeFetchWithKeepAlive(input, init) {
    return r3(input, { ...nodeFetchOptions, ...init });
  };
}
var fetch, Headers2, AbortController2, ofetch;
var init_node2 = __esm({
  "node_modules/.pnpm/ofetch@1.4.1/node_modules/ofetch/dist/node.mjs"() {
    init_dist();
    init_ofetch_03887fc3();
    init_dist2();
    fetch = globalThis.fetch ? (...args) => globalThis.fetch(...args) : createNodeFetch();
    Headers2 = globalThis.Headers || n5;
    AbortController2 = globalThis.AbortController || T2;
    ofetch = createFetch({ fetch, Headers: Headers2, AbortController: AbortController2 });
  }
});

// node_modules/.pnpm/@mantine+store@7.17.1_react@19.1.0/node_modules/@mantine/store/esm/store.mjs
function createStore(initialState) {
  let state2 = initialState;
  let initialized = false;
  const listeners = /* @__PURE__ */ new Set();
  return {
    getState() {
      return state2;
    },
    updateState(value) {
      state2 = typeof value === "function" ? value(state2) : value;
    },
    setState(value) {
      this.updateState(value);
      listeners.forEach((listener) => listener(state2));
    },
    initialize(value) {
      if (!initialized) {
        state2 = value;
        initialized = true;
      }
    },
    subscribe(callback) {
      listeners.add(callback);
      return () => listeners.delete(callback);
    }
  };
}
function useStore(store) {
  return (0, import_react154.useSyncExternalStore)(
    store.subscribe,
    () => store.getState(),
    () => store.getState()
  );
}
var import_react154;
var init_store = __esm({
  "node_modules/.pnpm/@mantine+store@7.17.1_react@19.1.0/node_modules/@mantine/store/esm/store.mjs"() {
    "use client";
    import_react154 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/@mantine+store@7.17.1_react@19.1.0/node_modules/@mantine/store/esm/index.mjs
var init_esm6 = __esm({
  "node_modules/.pnpm/@mantine+store@7.17.1_react@19.1.0/node_modules/@mantine/store/esm/index.mjs"() {
    init_store();
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/notifications.store.mjs
function getDistributedNotifications(data, defaultPosition, limit) {
  const queue = [];
  const notifications2 = [];
  const count = {};
  for (const item3 of data) {
    const position = item3.position || defaultPosition;
    count[position] = count[position] || 0;
    count[position] += 1;
    if (count[position] <= limit) {
      notifications2.push(item3);
    } else {
      queue.push(item3);
    }
  }
  return { notifications: notifications2, queue };
}
function updateNotificationsState(store, update) {
  const state2 = store.getState();
  const notifications2 = update([...state2.notifications, ...state2.queue]);
  const updated = getDistributedNotifications(notifications2, state2.defaultPosition, state2.limit);
  store.setState({
    notifications: updated.notifications,
    queue: updated.queue,
    limit: state2.limit,
    defaultPosition: state2.defaultPosition
  });
}
function showNotification(notification, store = notificationsStore) {
  const id5 = notification.id || randomId();
  updateNotificationsState(store, (notifications2) => {
    if (notification.id && notifications2.some((n12) => n12.id === notification.id)) {
      return notifications2;
    }
    return [...notifications2, { ...notification, id: id5 }];
  });
  return id5;
}
function hideNotification(id5, store = notificationsStore) {
  updateNotificationsState(
    store,
    (notifications2) => notifications2.filter((notification) => {
      if (notification.id === id5) {
        notification.onClose?.(notification);
        return false;
      }
      return true;
    })
  );
  return id5;
}
function updateNotification(notification, store = notificationsStore) {
  updateNotificationsState(
    store,
    (notifications2) => notifications2.map((item3) => {
      if (item3.id === notification.id) {
        return { ...item3, ...notification };
      }
      return item3;
    })
  );
  return notification.id;
}
function cleanNotifications(store = notificationsStore) {
  updateNotificationsState(store, () => []);
}
function cleanNotificationsQueue(store = notificationsStore) {
  updateNotificationsState(
    store,
    (notifications2) => notifications2.slice(0, store.getState().limit)
  );
}
var createNotificationsStore, notificationsStore, useNotifications, notifications;
var init_notifications_store = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/notifications.store.mjs"() {
    "use client";
    init_esm2();
    init_esm6();
    createNotificationsStore = () => createStore({
      notifications: [],
      queue: [],
      defaultPosition: "bottom-right",
      limit: 5
    });
    notificationsStore = createNotificationsStore();
    useNotifications = (store = notificationsStore) => useStore(store);
    notifications = {
      show: showNotification,
      hide: hideNotification,
      update: updateNotification,
      clean: cleanNotifications,
      cleanQueue: cleanNotificationsQueue,
      updateState: updateNotificationsState
    };
  }
});

// node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js
var require_factoryWithThrowingShims = __commonJS({
  "node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    function emptyFunction() {
    }
    function emptyFunctionWithReset() {
    }
    emptyFunctionWithReset.resetWarningCache = emptyFunction;
    module.exports = function() {
      function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === ReactPropTypesSecret) {
          return;
        }
        var err = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        err.name = "Invariant Violation";
        throw err;
      }
      ;
      shim.isRequired = shim;
      function getShim() {
        return shim;
      }
      ;
      var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: emptyFunctionWithReset,
        resetWarningCache: emptyFunction
      };
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js"(exports, module) {
    if (false) {
      ReactIs = null;
      throwOnDirectAccess = true;
      module.exports = null(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = require_factoryWithThrowingShims()();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(e12) {
      return e12 && e12.__esModule ? e12 : {
        "default": e12
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/hasClass.js
var require_hasClass = __commonJS({
  "node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/hasClass.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = hasClass;
    function hasClass(element, className) {
      if (element.classList) return !!className && element.classList.contains(className);
      return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
    }
    module.exports = exports["default"];
  }
});

// node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/addClass.js
var require_addClass = __commonJS({
  "node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/addClass.js"(exports, module) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = addClass;
    var _hasClass = _interopRequireDefault(require_hasClass());
    function addClass(element, className) {
      if (element.classList) element.classList.add(className);
      else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === "string") element.className = element.className + " " + className;
      else element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
    }
    module.exports = exports["default"];
  }
});

// node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/removeClass.js
var require_removeClass = __commonJS({
  "node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/cjs/removeClass.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = removeClass;
    function replaceClassName(origClass, classToRemove) {
      return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
    }
    function removeClass(element, className) {
      if (element.classList) {
        element.classList.remove(className);
      } else if (typeof element.className === "string") {
        element.className = replaceClassName(element.className, className);
      } else {
        element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/config.js
var require_config2 = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/config.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _default = {
      disabled: false
    };
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/PropTypes.js
var require_PropTypes = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/PropTypes.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.classNamesShape = exports.timeoutsShape = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timeoutsShape = false ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      enter: _propTypes.default.number,
      exit: _propTypes.default.number,
      appear: _propTypes.default.number
    }).isRequired]) : null;
    exports.timeoutsShape = timeoutsShape;
    var classNamesShape = false ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      enter: _propTypes.default.string,
      exit: _propTypes.default.string,
      active: _propTypes.default.string
    }), _propTypes.default.shape({
      enter: _propTypes.default.string,
      enterDone: _propTypes.default.string,
      enterActive: _propTypes.default.string,
      exit: _propTypes.default.string,
      exitDone: _propTypes.default.string,
      exitActive: _propTypes.default.string
    })]) : null;
    exports.classNamesShape = classNamesShape;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/TransitionGroupContext.js
var require_TransitionGroupContext = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/TransitionGroupContext.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = _react.default.createContext(null);
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/reflow.js
var require_reflow = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/reflow.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.forceReflow = void 0;
    var forceReflow = function forceReflow2(node) {
      return node.scrollTop;
    };
    exports.forceReflow = forceReflow;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/Transition.js
var require_Transition = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/Transition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _config = _interopRequireDefault(require_config2());
    var _PropTypes = require_PropTypes();
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _reflow = require_reflow();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i11;
      for (i11 = 0; i11 < sourceKeys.length; i11++) {
        key = sourceKeys[i11];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var UNMOUNTED = "unmounted";
    exports.UNMOUNTED = UNMOUNTED;
    var EXITED = "exited";
    exports.EXITED = EXITED;
    var ENTERING = "entering";
    exports.ENTERING = ENTERING;
    var ENTERED = "entered";
    exports.ENTERED = ENTERED;
    var EXITING = "exiting";
    exports.EXITING = EXITING;
    var Transition3 = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(Transition4, _React$Component);
      function Transition4(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = {
          status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
      }
      Transition4.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return {
            status: EXITED
          };
        }
        return null;
      };
      var _proto = Transition4.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status2 = this.state.status;
          if (this.props.in) {
            if (status2 !== ENTERING && status2 !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status2 === ENTERING || status2 === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== "number") {
          exit = timeout.exit;
          enter = timeout.enter;
          appear = timeout.appear !== void 0 ? timeout.appear : enter;
        }
        return {
          exit,
          enter,
          appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          if (nextStatus === ENTERING) {
            if (this.props.unmountOnExit || this.props.mountOnEnter) {
              var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
              if (node) (0, _reflow.forceReflow)(node);
            }
            this.performEnter(mounting);
          } else {
            this.performExit();
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({
            status: UNMOUNTED
          });
        }
      };
      _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [appearing] : [_reactDom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        if (!mounting && !enter || _config.default.disabled) {
          this.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(maybeNode);
          });
          return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
          status: ENTERING
        }, function() {
          _this2.props.onEntering(maybeNode, maybeAppearing);
          _this2.onTransitionEnd(enterTimeout, function() {
            _this2.safeSetState({
              status: ENTERED
            }, function() {
              _this2.props.onEntered(maybeNode, maybeAppearing);
            });
          });
        });
      };
      _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? void 0 : _reactDom.default.findDOMNode(this);
        if (!exit || _config.default.disabled) {
          this.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(maybeNode);
          });
          return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
          status: EXITING
        }, function() {
          _this3.props.onExiting(maybeNode);
          _this3.onTransitionEnd(timeouts.exit, function() {
            _this3.safeSetState({
              status: EXITED
            }, function() {
              _this3.props.onExited(maybeNode);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function() {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(timeout, handler2) {
        this.setNextCallback(handler2);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
          this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) {
          setTimeout(this.nextCallback, timeout);
        }
      };
      _proto.render = function render() {
        var status2 = this.state.status;
        if (status2 === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
        return (
          // allows for nested Transitions
          /* @__PURE__ */ _react.default.createElement(_TransitionGroupContext.default.Provider, {
            value: null
          }, typeof children === "function" ? children(status2, childProps) : _react.default.cloneElement(_react.default.Children.only(children), childProps))
        );
      };
      return Transition4;
    }(_react.default.Component);
    Transition3.contextType = _TransitionGroupContext.default;
    Transition3.propTypes = false ? {
      /**
       * A React reference to DOM element that need to transition:
       * https://stackoverflow.com/a/51127130/4671932
       *
       *   - When `nodeRef` prop is used, `node` is not passed to callback functions
       *      (e.g. `onEnter`) because user already has direct access to the node.
       *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
       *     `nodeRef` need to be provided to `Transition` with changed `key` prop
       *     (see
       *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
       */
      nodeRef: _propTypes.default.shape({
        current: typeof Element === "undefined" ? _propTypes.default.any : function(propValue, key, componentName, location, propFullName, secret) {
          var value = propValue[key];
          return _propTypes.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
      }),
      /**
       * A `function` child can be used instead of a React element. This function is
       * called with the current transition status (`'entering'`, `'entered'`,
       * `'exiting'`, `'exited'`), which can be used to apply context
       * specific props to a component.
       *
       * ```jsx
       * <Transition in={this.state.in} timeout={150}>
       *   {state => (
       *     <MyComponent className={`fade fade-${state}`} />
       *   )}
       * </Transition>
       * ```
       */
      children: _propTypes.default.oneOfType([_propTypes.default.func.isRequired, _propTypes.default.element.isRequired]).isRequired,
      /**
       * Show the component; triggers the enter or exit states
       */
      in: _propTypes.default.bool,
      /**
       * By default the child component is mounted immediately along with
       * the parent `Transition` component. If you want to "lazy mount" the component on the
       * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
       * mounted, even on "exited", unless you also specify `unmountOnExit`.
       */
      mountOnEnter: _propTypes.default.bool,
      /**
       * By default the child component stays mounted after it reaches the `'exited'` state.
       * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
       */
      unmountOnExit: _propTypes.default.bool,
      /**
       * By default the child component does not perform the enter transition when
       * it first mounts, regardless of the value of `in`. If you want this
       * behavior, set both `appear` and `in` to `true`.
       *
       * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
       * > only adds an additional enter transition. However, in the
       * > `<CSSTransition>` component that first enter transition does result in
       * > additional `.appear-*` classes, that way you can choose to style it
       * > differently.
       */
      appear: _propTypes.default.bool,
      /**
       * Enable or disable enter transitions.
       */
      enter: _propTypes.default.bool,
      /**
       * Enable or disable exit transitions.
       */
      exit: _propTypes.default.bool,
      /**
       * The duration of the transition, in milliseconds.
       * Required unless `addEndListener` is provided.
       *
       * You may specify a single timeout for all transitions:
       *
       * ```jsx
       * timeout={500}
       * ```
       *
       * or individually:
       *
       * ```jsx
       * timeout={{
       *  appear: 500,
       *  enter: 300,
       *  exit: 500,
       * }}
       * ```
       *
       * - `appear` defaults to the value of `enter`
       * - `enter` defaults to `0`
       * - `exit` defaults to `0`
       *
       * @type {number | { enter?: number, exit?: number, appear?: number }}
       */
      timeout: function timeout(props) {
        var pt2 = _PropTypes.timeoutsShape;
        if (!props.addEndListener) pt2 = pt2.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt2.apply(void 0, [props].concat(args));
      },
      /**
       * Add a custom transition end trigger. Called with the transitioning
       * DOM node and a `done` callback. Allows for more fine grained transition end
       * logic. Timeouts are still used as a fallback if provided.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * ```jsx
       * addEndListener={(node, done) => {
       *   // use the css transitionend event to mark the finish of a transition
       *   node.addEventListener('transitionend', done, false);
       * }}
       * ```
       */
      addEndListener: _propTypes.default.func,
      /**
       * Callback fired before the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEnter: _propTypes.default.func,
      /**
       * Callback fired after the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: _propTypes.default.func,
      /**
       * Callback fired after the "entered" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEntered: _propTypes.default.func,
      /**
       * Callback fired before the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExit: _propTypes.default.func,
      /**
       * Callback fired after the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExiting: _propTypes.default.func,
      /**
       * Callback fired after the "exited" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExited: _propTypes.default.func
    } : {};
    function noop3() {
    }
    Transition3.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop3,
      onEntering: noop3,
      onEntered: noop3,
      onExit: noop3,
      onExiting: noop3,
      onExited: noop3
    };
    Transition3.UNMOUNTED = UNMOUNTED;
    Transition3.EXITED = EXITED;
    Transition3.ENTERING = ENTERING;
    Transition3.ENTERED = ENTERED;
    Transition3.EXITING = EXITING;
    var _default = Transition3;
    exports.default = _default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/CSSTransition.js
var require_CSSTransition = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/CSSTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _addClass2 = _interopRequireDefault(require_addClass());
    var _removeClass = _interopRequireDefault(require_removeClass());
    var _react = _interopRequireDefault(require_react());
    var _Transition = _interopRequireDefault(require_Transition());
    var _PropTypes = require_PropTypes();
    var _reflow = require_reflow();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i11 = 1; i11 < arguments.length; i11++) {
          var source = arguments[i11];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i11;
      for (i11 = 0; i11 < sourceKeys.length; i11++) {
        key = sourceKeys[i11];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var _addClass = function addClass(node, classes30) {
      return node && classes30 && classes30.split(" ").forEach(function(c13) {
        return (0, _addClass2.default)(node, c13);
      });
    };
    var removeClass = function removeClass2(node, classes30) {
      return node && classes30 && classes30.split(" ").forEach(function(c13) {
        return (0, _removeClass.default)(node, c13);
      });
    };
    var CSSTransition = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(CSSTransition2, _React$Component);
      function CSSTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.appliedClasses = {
          appear: {},
          enter: {},
          exit: {}
        };
        _this.onEnter = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
          _this.removeClasses(node, "exit");
          _this.addClass(node, appearing ? "appear" : "enter", "base");
          if (_this.props.onEnter) {
            _this.props.onEnter(maybeNode, maybeAppearing);
          }
        };
        _this.onEntering = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
          var type = appearing ? "appear" : "enter";
          _this.addClass(node, type, "active");
          if (_this.props.onEntering) {
            _this.props.onEntering(maybeNode, maybeAppearing);
          }
        };
        _this.onEntered = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
          var type = appearing ? "appear" : "enter";
          _this.removeClasses(node, type);
          _this.addClass(node, type, "done");
          if (_this.props.onEntered) {
            _this.props.onEntered(maybeNode, maybeAppearing);
          }
        };
        _this.onExit = function(maybeNode) {
          var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
          _this.removeClasses(node, "appear");
          _this.removeClasses(node, "enter");
          _this.addClass(node, "exit", "base");
          if (_this.props.onExit) {
            _this.props.onExit(maybeNode);
          }
        };
        _this.onExiting = function(maybeNode) {
          var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
          _this.addClass(node, "exit", "active");
          if (_this.props.onExiting) {
            _this.props.onExiting(maybeNode);
          }
        };
        _this.onExited = function(maybeNode) {
          var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
          _this.removeClasses(node, "exit");
          _this.addClass(node, "exit", "done");
          if (_this.props.onExited) {
            _this.props.onExited(maybeNode);
          }
        };
        _this.resolveArguments = function(maybeNode, maybeAppearing) {
          return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
        };
        _this.getClassNames = function(type) {
          var classNames = _this.props.classNames;
          var isStringClassNames = typeof classNames === "string";
          var prefix2 = isStringClassNames && classNames ? classNames + "-" : "";
          var baseClassName = isStringClassNames ? "" + prefix2 + type : classNames[type];
          var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
          var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
          return {
            baseClassName,
            activeClassName,
            doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition2.prototype;
      _proto.addClass = function addClass(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
        if (type === "appear" && phase === "done" && doneClassName) {
          className += " " + doneClassName;
        }
        if (phase === "active") {
          if (node) (0, _reflow.forceReflow)(node);
        }
        if (className) {
          this.appliedClasses[type][phase] = className;
          _addClass(node, className);
        }
      };
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {};
        if (baseClassName) {
          removeClass(node, baseClassName);
        }
        if (activeClassName) {
          removeClass(node, activeClassName);
        }
        if (doneClassName) {
          removeClass(node, doneClassName);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, _3 = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
        return /* @__PURE__ */ _react.default.createElement(_Transition.default, _extends({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition2;
    }(_react.default.Component);
    CSSTransition.defaultProps = {
      classNames: ""
    };
    CSSTransition.propTypes = false ? _extends({}, _Transition.default.propTypes, {
      /**
       * The animation classNames applied to the component as it appears, enters,
       * exits or has finished the transition. A single name can be provided, which
       * will be suffixed for each stage, e.g. `classNames="fade"` applies:
       *
       * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
       * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
       * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
       *
       * A few details to note about how these classes are applied:
       *
       * 1. They are _joined_ with the ones that are already defined on the child
       *    component, so if you want to add some base styles, you can use
       *    `className` without worrying that it will be overridden.
       *
       * 2. If the transition component mounts with `in={false}`, no classes are
       *    applied yet. You might be expecting `*-exit-done`, but if you think
       *    about it, a component cannot finish exiting if it hasn't entered yet.
       *
       * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
       *    allows you to define different behavior for when appearing is done and
       *    when regular entering is done, using selectors like
       *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
       *    an epic entrance animation when element first appears in the DOM using
       *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
       *    simply use `fade-enter-done` for defining both cases.
       *
       * Each individual classNames can also be specified independently like:
       *
       * ```js
       * classNames={{
       *  appear: 'my-appear',
       *  appearActive: 'my-active-appear',
       *  appearDone: 'my-done-appear',
       *  enter: 'my-enter',
       *  enterActive: 'my-active-enter',
       *  enterDone: 'my-done-enter',
       *  exit: 'my-exit',
       *  exitActive: 'my-active-exit',
       *  exitDone: 'my-done-exit',
       * }}
       * ```
       *
       * If you want to set these classes using CSS Modules:
       *
       * ```js
       * import styles from './styles.css';
       * ```
       *
       * you might want to use camelCase in your CSS file, that way could simply
       * spread them instead of listing them one by one:
       *
       * ```js
       * classNames={{ ...styles }}
       * ```
       *
       * @type {string | {
       *  appear?: string,
       *  appearActive?: string,
       *  appearDone?: string,
       *  enter?: string,
       *  enterActive?: string,
       *  enterDone?: string,
       *  exit?: string,
       *  exitActive?: string,
       *  exitDone?: string,
       * }}
       */
      classNames: _PropTypes.classNamesShape,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEnter: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter-active' or
       * 'appear-active' class is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or
       * 'appear' classes are **removed** and the `done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntered: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExit: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExiting: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' classes
       * are **removed** and the `exit-done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExited: _propTypes.default.func
    }) : {};
    var _default = CSSTransition;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/ChildMapping.js
var require_ChildMapping = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/utils/ChildMapping.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getChildMapping = getChildMapping;
    exports.mergeChildMappings = mergeChildMappings;
    exports.getInitialChildMapping = getInitialChildMapping;
    exports.getNextChildMapping = getNextChildMapping;
    var _react = require_react();
    function getChildMapping(children, mapFn) {
      var mapper = function mapper2(child) {
        return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
      };
      var result = /* @__PURE__ */ Object.create(null);
      if (children) _react.Children.map(children, function(c13) {
        return c13;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
      return result;
    }
    function mergeChildMappings(prev, next) {
      prev = prev || {};
      next = next || {};
      function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
      }
      var nextKeysPending = /* @__PURE__ */ Object.create(null);
      var pendingKeys = [];
      for (var prevKey in prev) {
        if (prevKey in next) {
          if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
          }
        } else {
          pendingKeys.push(prevKey);
        }
      }
      var i11;
      var childMapping = {};
      for (var nextKey in next) {
        if (nextKeysPending[nextKey]) {
          for (i11 = 0; i11 < nextKeysPending[nextKey].length; i11++) {
            var pendingNextKey = nextKeysPending[nextKey][i11];
            childMapping[nextKeysPending[nextKey][i11]] = getValueForKey(pendingNextKey);
          }
        }
        childMapping[nextKey] = getValueForKey(nextKey);
      }
      for (i11 = 0; i11 < pendingKeys.length; i11++) {
        childMapping[pendingKeys[i11]] = getValueForKey(pendingKeys[i11]);
      }
      return childMapping;
    }
    function getProp(child, prop, props) {
      return props[prop] != null ? props[prop] : child.props[prop];
    }
    function getInitialChildMapping(props, onExited) {
      return getChildMapping(props.children, function(child) {
        return (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          appear: getProp(child, "appear", props),
          enter: getProp(child, "enter", props),
          exit: getProp(child, "exit", props)
        });
      });
    }
    function getNextChildMapping(nextProps, prevChildMapping, onExited) {
      var nextChildMapping = getChildMapping(nextProps.children);
      var children = mergeChildMappings(prevChildMapping, nextChildMapping);
      Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!(0, _react.isValidElement)(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;
        if (hasNext && (!hasPrev || isLeaving)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        } else if (!hasNext && hasPrev && !isLeaving) {
          children[key] = (0, _react.cloneElement)(child, {
            in: false
          });
        } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        }
      });
      return children;
    }
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/TransitionGroup.js
var require_TransitionGroup = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/TransitionGroup.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _ChildMapping = require_ChildMapping();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i11;
      for (i11 = 0; i11 < sourceKeys.length; i11++) {
        key = sourceKeys[i11];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i11 = 1; i11 < arguments.length; i11++) {
          var source = arguments[i11];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var values2 = Object.values || function(obj) {
      return Object.keys(obj).map(function(k4) {
        return obj[k4];
      });
    };
    var defaultProps62 = {
      component: "div",
      childFactory: function childFactory(child) {
        return child;
      }
    };
    var TransitionGroup2 = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(TransitionGroup3, _React$Component);
      function TransitionGroup3(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
        _this.state = {
          contextValue: {
            isMounting: true
          },
          handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup3.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
          contextValue: {
            isMounting: false
          }
        });
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup3.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function(state2) {
            var children = _extends({}, state2.children);
            delete children[child.key];
            return {
              children
            };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, Component3 = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var contextValue = this.state.contextValue;
        var children = values2(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component3 === null) {
          return /* @__PURE__ */ _react.default.createElement(_TransitionGroupContext.default.Provider, {
            value: contextValue
          }, children);
        }
        return /* @__PURE__ */ _react.default.createElement(_TransitionGroupContext.default.Provider, {
          value: contextValue
        }, /* @__PURE__ */ _react.default.createElement(Component3, props, children));
      };
      return TransitionGroup3;
    }(_react.default.Component);
    TransitionGroup2.propTypes = false ? {
      /**
       * `<TransitionGroup>` renders a `<div>` by default. You can change this
       * behavior by providing a `component` prop.
       * If you use React v16+ and would like to avoid a wrapping `<div>` element
       * you can pass in `component={null}`. This is useful if the wrapping div
       * borks your css styles.
       */
      component: _propTypes.default.any,
      /**
       * A set of `<Transition>` components, that are toggled `in` and out as they
       * leave. the `<TransitionGroup>` will inject specific transition props, so
       * remember to spread them through if you are wrapping the `<Transition>` as
       * with our `<Fade>` example.
       *
       * While this component is meant for multiple `Transition` or `CSSTransition`
       * children, sometimes you may want to have a single transition child with
       * content that you want to be transitioned out and in when you change it
       * (e.g. routes, images etc.) In that case you can change the `key` prop of
       * the transition child as you change its content, this will cause
       * `TransitionGroup` to transition the child out and back in.
       */
      children: _propTypes.default.node,
      /**
       * A convenience prop that enables or disables appear animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      appear: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables enter animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      enter: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables exit animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      exit: _propTypes.default.bool,
      /**
       * You may need to apply reactive updates to a child as it is exiting.
       * This is generally done by using `cloneElement` however in the case of an exiting
       * child the element has already been removed and not accessible to the consumer.
       *
       * If you do need to update a child as it leaves you can provide a `childFactory`
       * to wrap every child, even the ones that are leaving.
       *
       * @type Function(child: ReactElement) -> ReactElement
       */
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup2.defaultProps = defaultProps62;
    var _default = TransitionGroup2;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/ReplaceTransition.js
var require_ReplaceTransition = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/ReplaceTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i11;
      for (i11 = 0; i11 < sourceKeys.length; i11++) {
        key = sourceKeys[i11];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(ReplaceTransition2, _React$Component);
      function ReplaceTransition2() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle("onEnter", 0, args);
        };
        _this.handleEntering = function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle("onEntering", 0, args);
        };
        _this.handleEntered = function() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle("onEntered", 0, args);
        };
        _this.handleExit = function() {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle("onExit", 1, args);
        };
        _this.handleExiting = function() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle("onExiting", 1, args);
        };
        _this.handleExited = function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle("onExited", 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition2.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler2, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler2]) (_child$props = child.props)[handler2].apply(_child$props, originalArgs);
        if (this.props[handler2]) {
          var maybeNode = child.props.nodeRef ? void 0 : _reactDom.default.findDOMNode(this);
          this.props[handler2](maybeNode);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return /* @__PURE__ */ _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: "first",
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: "second",
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition2;
    }(_react.default.Component);
    ReplaceTransition.propTypes = false ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2) return new Error('"' + propName + '" must be exactly two transition components.');
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/SwitchTransition.js
var require_SwitchTransition = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/SwitchTransition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.modes = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _Transition = require_Transition();
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _leaveRenders;
    var _enterRenders;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    function areChildrenDifferent(oldChildren, newChildren) {
      if (oldChildren === newChildren) return false;
      if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
        return false;
      }
      return true;
    }
    var modes = {
      out: "out-in",
      in: "in-out"
    };
    exports.modes = modes;
    var callHook = function callHook2(element, name2, cb) {
      return function() {
        var _element$props;
        element.props[name2] && (_element$props = element.props)[name2].apply(_element$props, arguments);
        cb();
      };
    };
    var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
      var current = _ref.current, changeState = _ref.changeState;
      return _react.default.cloneElement(current, {
        in: false,
        onExited: callHook(current, "onExited", function() {
          changeState(_Transition.ENTERING, null);
        })
      });
    }, _leaveRenders[modes.in] = function(_ref2) {
      var current = _ref2.current, changeState = _ref2.changeState, children = _ref2.children;
      return [current, _react.default.cloneElement(children, {
        in: true,
        onEntered: callHook(children, "onEntered", function() {
          changeState(_Transition.ENTERING);
        })
      })];
    }, _leaveRenders);
    var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
      var children = _ref3.children, changeState = _ref3.changeState;
      return _react.default.cloneElement(children, {
        in: true,
        onEntered: callHook(children, "onEntered", function() {
          changeState(_Transition.ENTERED, _react.default.cloneElement(children, {
            in: true
          }));
        })
      });
    }, _enterRenders[modes.in] = function(_ref4) {
      var current = _ref4.current, children = _ref4.children, changeState = _ref4.changeState;
      return [_react.default.cloneElement(current, {
        in: false,
        onExited: callHook(current, "onExited", function() {
          changeState(_Transition.ENTERED, _react.default.cloneElement(children, {
            in: true
          }));
        })
      }), _react.default.cloneElement(children, {
        in: true
      })];
    }, _enterRenders);
    var SwitchTransition = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(SwitchTransition2, _React$Component);
      function SwitchTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.state = {
          status: _Transition.ENTERED,
          current: null
        };
        _this.appeared = false;
        _this.changeState = function(status2, current) {
          if (current === void 0) {
            current = _this.state.current;
          }
          _this.setState({
            status: status2,
            current
          });
        };
        return _this;
      }
      var _proto = SwitchTransition2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
      };
      SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state2) {
        if (props.children == null) {
          return {
            current: null
          };
        }
        if (state2.status === _Transition.ENTERING && props.mode === modes.in) {
          return {
            status: _Transition.ENTERING
          };
        }
        if (state2.current && areChildrenDifferent(state2.current, props.children)) {
          return {
            status: _Transition.EXITING
          };
        }
        return {
          current: _react.default.cloneElement(props.children, {
            in: true
          })
        };
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, mode = _this$props.mode, _this$state = this.state, status2 = _this$state.status, current = _this$state.current;
        var data = {
          children,
          current,
          changeState: this.changeState,
          status: status2
        };
        var component;
        switch (status2) {
          case _Transition.ENTERING:
            component = enterRenders[mode](data);
            break;
          case _Transition.EXITING:
            component = leaveRenders[mode](data);
            break;
          case _Transition.ENTERED:
            component = current;
        }
        return /* @__PURE__ */ _react.default.createElement(_TransitionGroupContext.default.Provider, {
          value: {
            isMounting: !this.appeared
          }
        }, component);
      };
      return SwitchTransition2;
    }(_react.default.Component);
    SwitchTransition.propTypes = false ? {
      /**
       * Transition modes.
       * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
       * `in-out`: New element transitions in first, then when complete, the current element transitions out.
       *
       * @type {'out-in'|'in-out'}
       */
      mode: _propTypes.default.oneOf([modes.in, modes.out]),
      /**
       * Any `Transition` or `CSSTransition` component.
       */
      children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])
    } : {};
    SwitchTransition.defaultProps = {
      mode: modes.out
    };
    var _default = SwitchTransition;
    exports.default = _default;
  }
});

// node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-transition-group/cjs/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.config = exports.Transition = exports.TransitionGroup = exports.SwitchTransition = exports.ReplaceTransition = exports.CSSTransition = void 0;
    var _CSSTransition = _interopRequireDefault(require_CSSTransition());
    exports.CSSTransition = _CSSTransition.default;
    var _ReplaceTransition = _interopRequireDefault(require_ReplaceTransition());
    exports.ReplaceTransition = _ReplaceTransition.default;
    var _SwitchTransition = _interopRequireDefault(require_SwitchTransition());
    exports.SwitchTransition = _SwitchTransition.default;
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    exports.TransitionGroup = _TransitionGroup.default;
    var _Transition = _interopRequireDefault(require_Transition());
    exports.Transition = _Transition.default;
    var _config = _interopRequireDefault(require_config2());
    exports.config = _config.default;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-grouped-notifications/get-grouped-notifications.mjs
function getGroupedNotifications(notifications2, defaultPosition) {
  return notifications2.reduce(
    (acc, notification) => {
      acc[notification.position || defaultPosition].push(notification);
      return acc;
    },
    positions.reduce((acc, item3) => {
      acc[item3] = [];
      return acc;
    }, {})
  );
}
var positions;
var init_get_grouped_notifications = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-grouped-notifications/get-grouped-notifications.mjs"() {
    "use client";
    positions = [
      "bottom-center",
      "bottom-left",
      "bottom-right",
      "top-center",
      "top-left",
      "top-right"
    ];
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-notification-state-styles.mjs
function getNotificationStateStyles({
  state: state2,
  maxHeight,
  position,
  transitionDuration
}) {
  const [vertical, horizontal] = position.split("-");
  const property = horizontal === "center" ? `${vertical}-center` : horizontal;
  const commonStyles = {
    opacity: 0,
    maxHeight,
    transform: transforms[property],
    transitionDuration: `${transitionDuration}ms, ${transitionDuration}ms, ${transitionDuration}ms`,
    transitionTimingFunction: "cubic-bezier(.51,.3,0,1.21), cubic-bezier(.51,.3,0,1.21), linear",
    transitionProperty: "opacity, transform, max-height"
  };
  const inState = {
    opacity: 1,
    transform: noTransform[property]
  };
  const outState = {
    opacity: 0,
    maxHeight: 0,
    transform: transforms[property]
  };
  const transitionStyles = {
    entering: inState,
    entered: inState,
    exiting: outState,
    exited: outState
  };
  return { ...commonStyles, ...transitionStyles[state2] };
}
var transforms, noTransform;
var init_get_notification_state_styles = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-notification-state-styles.mjs"() {
    "use client";
    transforms = {
      left: "translateX(-100%)",
      right: "translateX(100%)",
      "top-center": "translateY(-100%)",
      "bottom-center": "translateY(100%)"
    };
    noTransform = {
      left: "translateX(0)",
      right: "translateX(0)",
      "top-center": "translateY(0)",
      "bottom-center": "translateY(0)"
    };
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-auto-close/get-auto-close.mjs
function getAutoClose(autoClose, notificationAutoClose) {
  if (typeof notificationAutoClose === "number") {
    return notificationAutoClose;
  }
  if (notificationAutoClose === false || autoClose === false) {
    return false;
  }
  return autoClose;
}
var init_get_auto_close = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/get-auto-close/get-auto-close.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/NotificationContainer.mjs
var import_jsx_runtime126, import_react155, NotificationContainer;
var init_NotificationContainer = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/NotificationContainer.mjs"() {
    "use client";
    import_jsx_runtime126 = __toESM(require_jsx_runtime(), 1);
    import_react155 = __toESM(require_react(), 1);
    init_esm3();
    init_get_auto_close();
    NotificationContainer = (0, import_react155.forwardRef)(
      ({ data, onHide, autoClose, ...others }, ref) => {
        const { autoClose: _autoClose, message, ...notificationProps } = data;
        const autoCloseDuration = getAutoClose(autoClose, data.autoClose);
        const autoCloseTimeout = (0, import_react155.useRef)(-1);
        const cancelAutoClose = () => window.clearTimeout(autoCloseTimeout.current);
        const handleHide = () => {
          onHide(data.id);
          cancelAutoClose();
        };
        const handleAutoClose = () => {
          if (typeof autoCloseDuration === "number") {
            autoCloseTimeout.current = window.setTimeout(handleHide, autoCloseDuration);
          }
        };
        (0, import_react155.useEffect)(() => {
          data.onOpen?.(data);
        }, []);
        (0, import_react155.useEffect)(() => {
          handleAutoClose();
          return cancelAutoClose;
        }, [autoCloseDuration]);
        return /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(
          Notification,
          {
            ...others,
            ...notificationProps,
            onClose: handleHide,
            ref,
            onMouseEnter: cancelAutoClose,
            onMouseLeave: handleAutoClose,
            children: message
          }
        );
      }
    );
    NotificationContainer.displayName = "@mantine/notifications/NotificationContainer";
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/Notifications.module.css.mjs
var classes27;
var init_Notifications_module_css = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/Notifications.module.css.mjs"() {
    "use client";
    classes27 = { "root": "m_b37d9ac7", "notification": "m_5ed0edd0" };
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/Notifications.mjs
var import_jsx_runtime127, import_react156, import_react_transition_group, Transition2, defaultProps59, varsResolver28, Notifications;
var init_Notifications = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/Notifications.mjs"() {
    "use client";
    import_jsx_runtime127 = __toESM(require_jsx_runtime(), 1);
    import_react156 = __toESM(require_react(), 1);
    import_react_transition_group = __toESM(require_cjs(), 1);
    init_esm3();
    init_esm2();
    init_get_grouped_notifications();
    init_get_notification_state_styles();
    init_NotificationContainer();
    init_notifications_store();
    init_Notifications_module_css();
    Transition2 = import_react_transition_group.Transition;
    defaultProps59 = {
      position: "bottom-right",
      autoClose: 4e3,
      transitionDuration: 250,
      containerWidth: 440,
      notificationMaxHeight: 200,
      limit: 5,
      zIndex: getDefaultZIndex("overlay"),
      store: notificationsStore,
      withinPortal: true
    };
    varsResolver28 = createVarsResolver((_3, { zIndex, containerWidth }) => ({
      root: {
        "--notifications-z-index": zIndex?.toString(),
        "--notifications-container-width": rem(containerWidth)
      }
    }));
    Notifications = factory((_props, ref) => {
      const props = useProps("Notifications", defaultProps59, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        position,
        autoClose,
        transitionDuration,
        containerWidth,
        notificationMaxHeight,
        limit,
        zIndex,
        store,
        portalProps,
        withinPortal,
        ...others
      } = props;
      const theme2 = useMantineTheme();
      const data = useNotifications(store);
      const forceUpdate = useForceUpdate();
      const shouldReduceMotion = useReducedMotion();
      const refs = (0, import_react156.useRef)({});
      const previousLength = (0, import_react156.useRef)(0);
      const reduceMotion = theme2.respectReducedMotion ? shouldReduceMotion : false;
      const duration = reduceMotion ? 1 : transitionDuration;
      const getStyles = useStyles({
        name: "Notifications",
        classes: classes27,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver28
      });
      (0, import_react156.useEffect)(() => {
        store?.updateState((current) => ({
          ...current,
          limit: limit || 5,
          defaultPosition: position
        }));
      }, [limit, position]);
      useDidUpdate(() => {
        if (data.notifications.length > previousLength.current) {
          setTimeout(() => forceUpdate(), 0);
        }
        previousLength.current = data.notifications.length;
      }, [data.notifications]);
      const grouped = getGroupedNotifications(data.notifications, position);
      const groupedComponents = positions.reduce(
        (acc, pos) => {
          acc[pos] = grouped[pos].map(({ style: notificationStyle, ...notification }) => /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
            Transition2,
            {
              timeout: duration,
              onEnter: () => refs.current[notification.id].offsetHeight,
              nodeRef: { current: refs.current[notification.id] },
              children: (state2) => /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
                NotificationContainer,
                {
                  ref: (node) => {
                    refs.current[notification.id] = node;
                  },
                  data: notification,
                  onHide: (id5) => hideNotification(id5, store),
                  autoClose,
                  ...getStyles("notification", {
                    style: {
                      ...getNotificationStateStyles({
                        state: state2,
                        position: pos,
                        transitionDuration: duration,
                        maxHeight: notificationMaxHeight
                      }),
                      ...notificationStyle
                    }
                  })
                }
              )
            },
            notification.id
          ));
          return acc;
        },
        {}
      );
      return /* @__PURE__ */ (0, import_jsx_runtime127.jsxs)(OptionalPortal, { withinPortal, ...portalProps, children: [
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(Box, { ...getStyles("root"), "data-position": "top-center", ref, ...others, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["top-center"] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(Box, { ...getStyles("root"), "data-position": "top-left", ...others, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["top-left"] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          Box,
          {
            ...getStyles("root", { className: import_react_remove_scroll2.RemoveScroll.classNames.fullWidth }),
            "data-position": "top-right",
            ...others,
            children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["top-right"] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          Box,
          {
            ...getStyles("root", { className: import_react_remove_scroll2.RemoveScroll.classNames.fullWidth }),
            "data-position": "bottom-right",
            ...others,
            children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["bottom-right"] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(Box, { ...getStyles("root"), "data-position": "bottom-left", ...others, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["bottom-left"] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(Box, { ...getStyles("root"), "data-position": "bottom-center", ...others, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_transition_group.TransitionGroup, { children: groupedComponents["bottom-center"] }) })
      ] });
    });
    Notifications.classes = classes27;
    Notifications.displayName = "@mantine/notifications/Notifications";
    Notifications.show = notifications.show;
    Notifications.hide = notifications.hide;
    Notifications.update = notifications.update;
    Notifications.clean = notifications.clean;
    Notifications.cleanQueue = notifications.cleanQueue;
    Notifications.updateState = notifications.updateState;
  }
});

// node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/index.mjs
var init_esm7 = __esm({
  "node_modules/.pnpm/@mantine+notifications@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0___05027131e15b53f2b2be6a11c2376264/node_modules/@mantine/notifications/esm/index.mjs"() {
    init_notifications_store();
    init_Notifications();
  }
});

// node_modules/.pnpm/zod@3.24.3/node_modules/zod/lib/index.mjs
function setErrorMap(map) {
  overrideErrorMap = map;
}
function getErrorMap() {
  return overrideErrorMap;
}
function addIssueToContext(ctx, issueData) {
  const overrideMap = getErrorMap();
  const issue = makeIssue({
    issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [
      ctx.common.contextualErrorMap,
      // contextual error map is first priority
      ctx.schemaErrorMap,
      // then schema-bound map if available
      overrideMap,
      // then global override map
      overrideMap === errorMap ? void 0 : errorMap
      // then global default map
    ].filter((x3) => !!x3)
  });
  ctx.common.issues.push(issue);
}
function __classPrivateFieldGet2(receiver, state2, kind, f11) {
  if (kind === "a" && !f11) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state2 === "function" ? receiver !== state2 || !f11 : !state2.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f11 : kind === "a" ? f11.call(receiver) : f11 ? f11.value : state2.get(receiver);
}
function __classPrivateFieldSet2(receiver, state2, value, kind, f11) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f11) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state2 === "function" ? receiver !== state2 || !f11 : !state2.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f11.call(receiver, value) : f11 ? f11.value = value : state2.set(receiver, value), value;
}
function processCreateParams(params) {
  if (!params)
    return {};
  const { errorMap: errorMap2, invalid_type_error, required_error, description: description4 } = params;
  if (errorMap2 && (invalid_type_error || required_error)) {
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  }
  if (errorMap2)
    return { errorMap: errorMap2, description: description4 };
  const customMap = (iss, ctx) => {
    var _a, _b;
    const { message } = params;
    if (iss.code === "invalid_enum_value") {
      return { message: message !== null && message !== void 0 ? message : ctx.defaultError };
    }
    if (typeof ctx.data === "undefined") {
      return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };
    }
    if (iss.code !== "invalid_type")
      return { message: ctx.defaultError };
    return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };
  };
  return { errorMap: customMap, description: description4 };
}
function timeRegexSource(args) {
  let regex = `([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d`;
  if (args.precision) {
    regex = `${regex}\\.\\d{${args.precision}}`;
  } else if (args.precision == null) {
    regex = `${regex}(\\.\\d+)?`;
  }
  return regex;
}
function timeRegex(args) {
  return new RegExp(`^${timeRegexSource(args)}$`);
}
function datetimeRegex(args) {
  let regex = `${dateRegexSource}T${timeRegexSource(args)}`;
  const opts = [];
  opts.push(args.local ? `Z?` : `Z`);
  if (args.offset)
    opts.push(`([+-]\\d{2}:?\\d{2})`);
  regex = `${regex}(${opts.join("|")})`;
  return new RegExp(`^${regex}$`);
}
function isValidIP(ip, version) {
  if ((version === "v4" || !version) && ipv4Regex.test(ip)) {
    return true;
  }
  if ((version === "v6" || !version) && ipv6Regex.test(ip)) {
    return true;
  }
  return false;
}
function isValidJWT(jwt, alg) {
  if (!jwtRegex.test(jwt))
    return false;
  try {
    const [header] = jwt.split(".");
    const base64 = header.replace(/-/g, "+").replace(/_/g, "/").padEnd(header.length + (4 - header.length % 4) % 4, "=");
    const decoded = JSON.parse(atob(base64));
    if (typeof decoded !== "object" || decoded === null)
      return false;
    if (!decoded.typ || !decoded.alg)
      return false;
    if (alg && decoded.alg !== alg)
      return false;
    return true;
  } catch (_a) {
    return false;
  }
}
function isValidCidr(ip, version) {
  if ((version === "v4" || !version) && ipv4CidrRegex.test(ip)) {
    return true;
  }
  if ((version === "v6" || !version) && ipv6CidrRegex.test(ip)) {
    return true;
  }
  return false;
}
function floatSafeRemainder(val, step) {
  const valDecCount = (val.toString().split(".")[1] || "").length;
  const stepDecCount = (step.toString().split(".")[1] || "").length;
  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  const valInt = parseInt(val.toFixed(decCount).replace(".", ""));
  const stepInt = parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / Math.pow(10, decCount);
}
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    const newShape = {};
    for (const key in schema.shape) {
      const fieldSchema = schema.shape[key];
      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject({
      ...schema._def,
      shape: () => newShape
    });
  } else if (schema instanceof ZodArray) {
    return new ZodArray({
      ...schema._def,
      type: deepPartialify(schema.element)
    });
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map((item3) => deepPartialify(item3)));
  } else {
    return schema;
  }
}
function mergeValues(a12, b4) {
  const aType = getParsedType(a12);
  const bType = getParsedType(b4);
  if (a12 === b4) {
    return { valid: true, data: a12 };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    const bKeys = util.objectKeys(b4);
    const sharedKeys = util.objectKeys(a12).filter((key) => bKeys.indexOf(key) !== -1);
    const newObj = { ...a12, ...b4 };
    for (const key of sharedKeys) {
      const sharedValue = mergeValues(a12[key], b4[key]);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newObj[key] = sharedValue.data;
    }
    return { valid: true, data: newObj };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a12.length !== b4.length) {
      return { valid: false };
    }
    const newArray = [];
    for (let index = 0; index < a12.length; index++) {
      const itemA = a12[index];
      const itemB = b4[index];
      const sharedValue = mergeValues(itemA, itemB);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newArray.push(sharedValue.data);
    }
    return { valid: true, data: newArray };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a12 === +b4) {
    return { valid: true, data: a12 };
  } else {
    return { valid: false };
  }
}
function createZodEnum(values2, params) {
  return new ZodEnum({
    values: values2,
    typeName: ZodFirstPartyTypeKind.ZodEnum,
    ...processCreateParams(params)
  });
}
function cleanParams(params, data) {
  const p13 = typeof params === "function" ? params(data) : typeof params === "string" ? { message: params } : params;
  const p22 = typeof p13 === "string" ? { message: p13 } : p13;
  return p22;
}
function custom(check2, _params = {}, fatal) {
  if (check2)
    return ZodAny.create().superRefine((data, ctx) => {
      var _a, _b;
      const r8 = check2(data);
      if (r8 instanceof Promise) {
        return r8.then((r9) => {
          var _a2, _b2;
          if (!r9) {
            const params = cleanParams(_params, data);
            const _fatal = (_b2 = (_a2 = params.fatal) !== null && _a2 !== void 0 ? _a2 : fatal) !== null && _b2 !== void 0 ? _b2 : true;
            ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
          }
        });
      }
      if (!r8) {
        const params = cleanParams(_params, data);
        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;
        ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
      }
      return;
    });
  return ZodAny.create();
}
var util, objectUtil, ZodParsedType, getParsedType, ZodIssueCode, quotelessJson, ZodError, errorMap, overrideErrorMap, makeIssue, EMPTY_PATH, ParseStatus, INVALID, DIRTY, OK, isAborted, isDirty, isValid, isAsync, errorUtil, _ZodEnum_cache, _ZodNativeEnum_cache, ParseInputLazyPath, handleResult, ZodType, cuidRegex, cuid2Regex, ulidRegex, uuidRegex, nanoidRegex, jwtRegex, durationRegex, emailRegex, _emojiRegex, emojiRegex, ipv4Regex, ipv4CidrRegex, ipv6Regex, ipv6CidrRegex, base64Regex, base64urlRegex, dateRegexSource, dateRegex, ZodString, ZodNumber, ZodBigInt, ZodBoolean, ZodDate, ZodSymbol, ZodUndefined, ZodNull, ZodAny, ZodUnknown, ZodNever, ZodVoid, ZodArray, ZodObject, ZodUnion, getDiscriminator, ZodDiscriminatedUnion, ZodIntersection, ZodTuple, ZodRecord, ZodMap, ZodSet, ZodFunction, ZodLazy, ZodLiteral, ZodEnum, ZodNativeEnum, ZodPromise, ZodEffects, ZodOptional, ZodNullable, ZodDefault, ZodCatch, ZodNaN, BRAND, ZodBranded, ZodPipeline, ZodReadonly, late, ZodFirstPartyTypeKind, instanceOfType, stringType, numberType, nanType, bigIntType, booleanType, dateType, symbolType, undefinedType, nullType, anyType, unknownType, neverType, voidType, arrayType, objectType, strictObjectType, unionType, discriminatedUnionType, intersectionType, tupleType, recordType, mapType, setType, functionType, lazyType, literalType, enumType, nativeEnumType, promiseType, effectsType, optionalType, nullableType, preprocessType, pipelineType, ostring, onumber, oboolean, coerce, NEVER, z2;
var init_lib = __esm({
  "node_modules/.pnpm/zod@3.24.3/node_modules/zod/lib/index.mjs"() {
    (function(util2) {
      util2.assertEqual = (val) => val;
      function assertIs(_arg) {
      }
      util2.assertIs = assertIs;
      function assertNever(_x) {
        throw new Error();
      }
      util2.assertNever = assertNever;
      util2.arrayToEnum = (items3) => {
        const obj = {};
        for (const item3 of items3) {
          obj[item3] = item3;
        }
        return obj;
      };
      util2.getValidEnumValues = (obj) => {
        const validKeys = util2.objectKeys(obj).filter((k4) => typeof obj[obj[k4]] !== "number");
        const filtered = {};
        for (const k4 of validKeys) {
          filtered[k4] = obj[k4];
        }
        return util2.objectValues(filtered);
      };
      util2.objectValues = (obj) => {
        return util2.objectKeys(obj).map(function(e12) {
          return obj[e12];
        });
      };
      util2.objectKeys = typeof Object.keys === "function" ? (obj) => Object.keys(obj) : (object) => {
        const keys3 = [];
        for (const key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            keys3.push(key);
          }
        }
        return keys3;
      };
      util2.find = (arr, checker) => {
        for (const item3 of arr) {
          if (checker(item3))
            return item3;
        }
        return void 0;
      };
      util2.isInteger = typeof Number.isInteger === "function" ? (val) => Number.isInteger(val) : (val) => typeof val === "number" && isFinite(val) && Math.floor(val) === val;
      function joinValues(array, separator = " | ") {
        return array.map((val) => typeof val === "string" ? `'${val}'` : val).join(separator);
      }
      util2.joinValues = joinValues;
      util2.jsonStringifyReplacer = (_3, value) => {
        if (typeof value === "bigint") {
          return value.toString();
        }
        return value;
      };
    })(util || (util = {}));
    (function(objectUtil2) {
      objectUtil2.mergeShapes = (first, second) => {
        return {
          ...first,
          ...second
          // second overwrites first
        };
      };
    })(objectUtil || (objectUtil = {}));
    ZodParsedType = util.arrayToEnum([
      "string",
      "nan",
      "number",
      "integer",
      "float",
      "boolean",
      "date",
      "bigint",
      "symbol",
      "function",
      "undefined",
      "null",
      "array",
      "object",
      "unknown",
      "promise",
      "void",
      "never",
      "map",
      "set"
    ]);
    getParsedType = (data) => {
      const t13 = typeof data;
      switch (t13) {
        case "undefined":
          return ZodParsedType.undefined;
        case "string":
          return ZodParsedType.string;
        case "number":
          return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
        case "boolean":
          return ZodParsedType.boolean;
        case "function":
          return ZodParsedType.function;
        case "bigint":
          return ZodParsedType.bigint;
        case "symbol":
          return ZodParsedType.symbol;
        case "object":
          if (Array.isArray(data)) {
            return ZodParsedType.array;
          }
          if (data === null) {
            return ZodParsedType.null;
          }
          if (data.then && typeof data.then === "function" && data.catch && typeof data.catch === "function") {
            return ZodParsedType.promise;
          }
          if (typeof Map !== "undefined" && data instanceof Map) {
            return ZodParsedType.map;
          }
          if (typeof Set !== "undefined" && data instanceof Set) {
            return ZodParsedType.set;
          }
          if (typeof Date !== "undefined" && data instanceof Date) {
            return ZodParsedType.date;
          }
          return ZodParsedType.object;
        default:
          return ZodParsedType.unknown;
      }
    };
    ZodIssueCode = util.arrayToEnum([
      "invalid_type",
      "invalid_literal",
      "custom",
      "invalid_union",
      "invalid_union_discriminator",
      "invalid_enum_value",
      "unrecognized_keys",
      "invalid_arguments",
      "invalid_return_type",
      "invalid_date",
      "invalid_string",
      "too_small",
      "too_big",
      "invalid_intersection_types",
      "not_multiple_of",
      "not_finite"
    ]);
    quotelessJson = (obj) => {
      const json = JSON.stringify(obj, null, 2);
      return json.replace(/"([^"]+)":/g, "$1:");
    };
    ZodError = class _ZodError extends Error {
      get errors() {
        return this.issues;
      }
      constructor(issues) {
        super();
        this.issues = [];
        this.addIssue = (sub) => {
          this.issues = [...this.issues, sub];
        };
        this.addIssues = (subs = []) => {
          this.issues = [...this.issues, ...subs];
        };
        const actualProto = new.target.prototype;
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(this, actualProto);
        } else {
          this.__proto__ = actualProto;
        }
        this.name = "ZodError";
        this.issues = issues;
      }
      format(_mapper) {
        const mapper = _mapper || function(issue) {
          return issue.message;
        };
        const fieldErrors = { _errors: [] };
        const processError = (error) => {
          for (const issue of error.issues) {
            if (issue.code === "invalid_union") {
              issue.unionErrors.map(processError);
            } else if (issue.code === "invalid_return_type") {
              processError(issue.returnTypeError);
            } else if (issue.code === "invalid_arguments") {
              processError(issue.argumentsError);
            } else if (issue.path.length === 0) {
              fieldErrors._errors.push(mapper(issue));
            } else {
              let curr = fieldErrors;
              let i11 = 0;
              while (i11 < issue.path.length) {
                const el = issue.path[i11];
                const terminal = i11 === issue.path.length - 1;
                if (!terminal) {
                  curr[el] = curr[el] || { _errors: [] };
                } else {
                  curr[el] = curr[el] || { _errors: [] };
                  curr[el]._errors.push(mapper(issue));
                }
                curr = curr[el];
                i11++;
              }
            }
          }
        };
        processError(this);
        return fieldErrors;
      }
      static assert(value) {
        if (!(value instanceof _ZodError)) {
          throw new Error(`Not a ZodError: ${value}`);
        }
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(mapper = (issue) => issue.message) {
        const fieldErrors = {};
        const formErrors = [];
        for (const sub of this.issues) {
          if (sub.path.length > 0) {
            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];
            fieldErrors[sub.path[0]].push(mapper(sub));
          } else {
            formErrors.push(mapper(sub));
          }
        }
        return { formErrors, fieldErrors };
      }
      get formErrors() {
        return this.flatten();
      }
    };
    ZodError.create = (issues) => {
      const error = new ZodError(issues);
      return error;
    };
    errorMap = (issue, _ctx) => {
      let message;
      switch (issue.code) {
        case ZodIssueCode.invalid_type:
          if (issue.received === ZodParsedType.undefined) {
            message = "Required";
          } else {
            message = `Expected ${issue.expected}, received ${issue.received}`;
          }
          break;
        case ZodIssueCode.invalid_literal:
          message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;
          break;
        case ZodIssueCode.unrecognized_keys:
          message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, ", ")}`;
          break;
        case ZodIssueCode.invalid_union:
          message = `Invalid input`;
          break;
        case ZodIssueCode.invalid_union_discriminator:
          message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;
          break;
        case ZodIssueCode.invalid_enum_value:
          message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;
          break;
        case ZodIssueCode.invalid_arguments:
          message = `Invalid function arguments`;
          break;
        case ZodIssueCode.invalid_return_type:
          message = `Invalid function return type`;
          break;
        case ZodIssueCode.invalid_date:
          message = `Invalid date`;
          break;
        case ZodIssueCode.invalid_string:
          if (typeof issue.validation === "object") {
            if ("includes" in issue.validation) {
              message = `Invalid input: must include "${issue.validation.includes}"`;
              if (typeof issue.validation.position === "number") {
                message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;
              }
            } else if ("startsWith" in issue.validation) {
              message = `Invalid input: must start with "${issue.validation.startsWith}"`;
            } else if ("endsWith" in issue.validation) {
              message = `Invalid input: must end with "${issue.validation.endsWith}"`;
            } else {
              util.assertNever(issue.validation);
            }
          } else if (issue.validation !== "regex") {
            message = `Invalid ${issue.validation}`;
          } else {
            message = "Invalid";
          }
          break;
        case ZodIssueCode.too_small:
          if (issue.type === "array")
            message = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
          else if (issue.type === "string")
            message = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
          else if (issue.type === "number")
            message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
          else if (issue.type === "date")
            message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
          else
            message = "Invalid input";
          break;
        case ZodIssueCode.too_big:
          if (issue.type === "array")
            message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
          else if (issue.type === "string")
            message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
          else if (issue.type === "number")
            message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
          else if (issue.type === "bigint")
            message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
          else if (issue.type === "date")
            message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
          else
            message = "Invalid input";
          break;
        case ZodIssueCode.custom:
          message = `Invalid input`;
          break;
        case ZodIssueCode.invalid_intersection_types:
          message = `Intersection results could not be merged`;
          break;
        case ZodIssueCode.not_multiple_of:
          message = `Number must be a multiple of ${issue.multipleOf}`;
          break;
        case ZodIssueCode.not_finite:
          message = "Number must be finite";
          break;
        default:
          message = _ctx.defaultError;
          util.assertNever(issue);
      }
      return { message };
    };
    overrideErrorMap = errorMap;
    makeIssue = (params) => {
      const { data, path, errorMaps, issueData } = params;
      const fullPath = [...path, ...issueData.path || []];
      const fullIssue = {
        ...issueData,
        path: fullPath
      };
      if (issueData.message !== void 0) {
        return {
          ...issueData,
          path: fullPath,
          message: issueData.message
        };
      }
      let errorMessage = "";
      const maps = errorMaps.filter((m11) => !!m11).slice().reverse();
      for (const map of maps) {
        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;
      }
      return {
        ...issueData,
        path: fullPath,
        message: errorMessage
      };
    };
    EMPTY_PATH = [];
    ParseStatus = class _ParseStatus {
      constructor() {
        this.value = "valid";
      }
      dirty() {
        if (this.value === "valid")
          this.value = "dirty";
      }
      abort() {
        if (this.value !== "aborted")
          this.value = "aborted";
      }
      static mergeArray(status2, results) {
        const arrayValue = [];
        for (const s37 of results) {
          if (s37.status === "aborted")
            return INVALID;
          if (s37.status === "dirty")
            status2.dirty();
          arrayValue.push(s37.value);
        }
        return { status: status2.value, value: arrayValue };
      }
      static async mergeObjectAsync(status2, pairs) {
        const syncPairs = [];
        for (const pair of pairs) {
          const key = await pair.key;
          const value = await pair.value;
          syncPairs.push({
            key,
            value
          });
        }
        return _ParseStatus.mergeObjectSync(status2, syncPairs);
      }
      static mergeObjectSync(status2, pairs) {
        const finalObject = {};
        for (const pair of pairs) {
          const { key, value } = pair;
          if (key.status === "aborted")
            return INVALID;
          if (value.status === "aborted")
            return INVALID;
          if (key.status === "dirty")
            status2.dirty();
          if (value.status === "dirty")
            status2.dirty();
          if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
            finalObject[key.value] = value.value;
          }
        }
        return { status: status2.value, value: finalObject };
      }
    };
    INVALID = Object.freeze({
      status: "aborted"
    });
    DIRTY = (value) => ({ status: "dirty", value });
    OK = (value) => ({ status: "valid", value });
    isAborted = (x3) => x3.status === "aborted";
    isDirty = (x3) => x3.status === "dirty";
    isValid = (x3) => x3.status === "valid";
    isAsync = (x3) => typeof Promise !== "undefined" && x3 instanceof Promise;
    (function(errorUtil2) {
      errorUtil2.errToObj = (message) => typeof message === "string" ? { message } : message || {};
      errorUtil2.toString = (message) => typeof message === "string" ? message : message === null || message === void 0 ? void 0 : message.message;
    })(errorUtil || (errorUtil = {}));
    ParseInputLazyPath = class {
      constructor(parent, value, path, key) {
        this._cachedPath = [];
        this.parent = parent;
        this.data = value;
        this._path = path;
        this._key = key;
      }
      get path() {
        if (!this._cachedPath.length) {
          if (this._key instanceof Array) {
            this._cachedPath.push(...this._path, ...this._key);
          } else {
            this._cachedPath.push(...this._path, this._key);
          }
        }
        return this._cachedPath;
      }
    };
    handleResult = (ctx, result) => {
      if (isValid(result)) {
        return { success: true, data: result.value };
      } else {
        if (!ctx.common.issues.length) {
          throw new Error("Validation failed but no issues detected.");
        }
        return {
          success: false,
          get error() {
            if (this._error)
              return this._error;
            const error = new ZodError(ctx.common.issues);
            this._error = error;
            return this._error;
          }
        };
      }
    };
    ZodType = class {
      get description() {
        return this._def.description;
      }
      _getType(input) {
        return getParsedType(input.data);
      }
      _getOrReturnCtx(input, ctx) {
        return ctx || {
          common: input.parent.common,
          data: input.data,
          parsedType: getParsedType(input.data),
          schemaErrorMap: this._def.errorMap,
          path: input.path,
          parent: input.parent
        };
      }
      _processInputParams(input) {
        return {
          status: new ParseStatus(),
          ctx: {
            common: input.parent.common,
            data: input.data,
            parsedType: getParsedType(input.data),
            schemaErrorMap: this._def.errorMap,
            path: input.path,
            parent: input.parent
          }
        };
      }
      _parseSync(input) {
        const result = this._parse(input);
        if (isAsync(result)) {
          throw new Error("Synchronous parse encountered promise.");
        }
        return result;
      }
      _parseAsync(input) {
        const result = this._parse(input);
        return Promise.resolve(result);
      }
      parse(data, params) {
        const result = this.safeParse(data, params);
        if (result.success)
          return result.data;
        throw result.error;
      }
      safeParse(data, params) {
        var _a;
        const ctx = {
          common: {
            issues: [],
            async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,
            contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
          },
          path: (params === null || params === void 0 ? void 0 : params.path) || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data,
          parsedType: getParsedType(data)
        };
        const result = this._parseSync({ data, path: ctx.path, parent: ctx });
        return handleResult(ctx, result);
      }
      "~validate"(data) {
        var _a, _b;
        const ctx = {
          common: {
            issues: [],
            async: !!this["~standard"].async
          },
          path: [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data,
          parsedType: getParsedType(data)
        };
        if (!this["~standard"].async) {
          try {
            const result = this._parseSync({ data, path: [], parent: ctx });
            return isValid(result) ? {
              value: result.value
            } : {
              issues: ctx.common.issues
            };
          } catch (err) {
            if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes("encountered")) {
              this["~standard"].async = true;
            }
            ctx.common = {
              issues: [],
              async: true
            };
          }
        }
        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result) ? {
          value: result.value
        } : {
          issues: ctx.common.issues
        });
      }
      async parseAsync(data, params) {
        const result = await this.safeParseAsync(data, params);
        if (result.success)
          return result.data;
        throw result.error;
      }
      async safeParseAsync(data, params) {
        const ctx = {
          common: {
            issues: [],
            contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,
            async: true
          },
          path: (params === null || params === void 0 ? void 0 : params.path) || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data,
          parsedType: getParsedType(data)
        };
        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });
        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
        return handleResult(ctx, result);
      }
      refine(check2, message) {
        const getIssueProperties = (val) => {
          if (typeof message === "string" || typeof message === "undefined") {
            return { message };
          } else if (typeof message === "function") {
            return message(val);
          } else {
            return message;
          }
        };
        return this._refinement((val, ctx) => {
          const result = check2(val);
          const setError = () => ctx.addIssue({
            code: ZodIssueCode.custom,
            ...getIssueProperties(val)
          });
          if (typeof Promise !== "undefined" && result instanceof Promise) {
            return result.then((data) => {
              if (!data) {
                setError();
                return false;
              } else {
                return true;
              }
            });
          }
          if (!result) {
            setError();
            return false;
          } else {
            return true;
          }
        });
      }
      refinement(check2, refinementData) {
        return this._refinement((val, ctx) => {
          if (!check2(val)) {
            ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
            return false;
          } else {
            return true;
          }
        });
      }
      _refinement(refinement) {
        return new ZodEffects({
          schema: this,
          typeName: ZodFirstPartyTypeKind.ZodEffects,
          effect: { type: "refinement", refinement }
        });
      }
      superRefine(refinement) {
        return this._refinement(refinement);
      }
      constructor(def) {
        this.spa = this.safeParseAsync;
        this._def = def;
        this.parse = this.parse.bind(this);
        this.safeParse = this.safeParse.bind(this);
        this.parseAsync = this.parseAsync.bind(this);
        this.safeParseAsync = this.safeParseAsync.bind(this);
        this.spa = this.spa.bind(this);
        this.refine = this.refine.bind(this);
        this.refinement = this.refinement.bind(this);
        this.superRefine = this.superRefine.bind(this);
        this.optional = this.optional.bind(this);
        this.nullable = this.nullable.bind(this);
        this.nullish = this.nullish.bind(this);
        this.array = this.array.bind(this);
        this.promise = this.promise.bind(this);
        this.or = this.or.bind(this);
        this.and = this.and.bind(this);
        this.transform = this.transform.bind(this);
        this.brand = this.brand.bind(this);
        this.default = this.default.bind(this);
        this.catch = this.catch.bind(this);
        this.describe = this.describe.bind(this);
        this.pipe = this.pipe.bind(this);
        this.readonly = this.readonly.bind(this);
        this.isNullable = this.isNullable.bind(this);
        this.isOptional = this.isOptional.bind(this);
        this["~standard"] = {
          version: 1,
          vendor: "zod",
          validate: (data) => this["~validate"](data)
        };
      }
      optional() {
        return ZodOptional.create(this, this._def);
      }
      nullable() {
        return ZodNullable.create(this, this._def);
      }
      nullish() {
        return this.nullable().optional();
      }
      array() {
        return ZodArray.create(this);
      }
      promise() {
        return ZodPromise.create(this, this._def);
      }
      or(option) {
        return ZodUnion.create([this, option], this._def);
      }
      and(incoming) {
        return ZodIntersection.create(this, incoming, this._def);
      }
      transform(transform) {
        return new ZodEffects({
          ...processCreateParams(this._def),
          schema: this,
          typeName: ZodFirstPartyTypeKind.ZodEffects,
          effect: { type: "transform", transform }
        });
      }
      default(def) {
        const defaultValueFunc = typeof def === "function" ? def : () => def;
        return new ZodDefault({
          ...processCreateParams(this._def),
          innerType: this,
          defaultValue: defaultValueFunc,
          typeName: ZodFirstPartyTypeKind.ZodDefault
        });
      }
      brand() {
        return new ZodBranded({
          typeName: ZodFirstPartyTypeKind.ZodBranded,
          type: this,
          ...processCreateParams(this._def)
        });
      }
      catch(def) {
        const catchValueFunc = typeof def === "function" ? def : () => def;
        return new ZodCatch({
          ...processCreateParams(this._def),
          innerType: this,
          catchValue: catchValueFunc,
          typeName: ZodFirstPartyTypeKind.ZodCatch
        });
      }
      describe(description4) {
        const This = this.constructor;
        return new This({
          ...this._def,
          description: description4
        });
      }
      pipe(target) {
        return ZodPipeline.create(this, target);
      }
      readonly() {
        return ZodReadonly.create(this);
      }
      isOptional() {
        return this.safeParse(void 0).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    };
    cuidRegex = /^c[^\s-]{8,}$/i;
    cuid2Regex = /^[0-9a-z]+$/;
    ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;
    uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
    nanoidRegex = /^[a-z0-9_-]{21}$/i;
    jwtRegex = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/;
    durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/;
    emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
    _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
    ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;
    ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/;
    ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;
    ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;
    base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;
    base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;
    dateRegexSource = `((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))`;
    dateRegex = new RegExp(`^${dateRegexSource}$`);
    ZodString = class _ZodString extends ZodType {
      _parse(input) {
        if (this._def.coerce) {
          input.data = String(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.string) {
          const ctx2 = this._getOrReturnCtx(input);
          addIssueToContext(ctx2, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.string,
            received: ctx2.parsedType
          });
          return INVALID;
        }
        const status2 = new ParseStatus();
        let ctx = void 0;
        for (const check2 of this._def.checks) {
          if (check2.kind === "min") {
            if (input.data.length < check2.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                minimum: check2.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "max") {
            if (input.data.length > check2.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                maximum: check2.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "length") {
            const tooBig = input.data.length > check2.value;
            const tooSmall = input.data.length < check2.value;
            if (tooBig || tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              if (tooBig) {
                addIssueToContext(ctx, {
                  code: ZodIssueCode.too_big,
                  maximum: check2.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: check2.message
                });
              } else if (tooSmall) {
                addIssueToContext(ctx, {
                  code: ZodIssueCode.too_small,
                  minimum: check2.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: check2.message
                });
              }
              status2.dirty();
            }
          } else if (check2.kind === "email") {
            if (!emailRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "email",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "emoji") {
            if (!emojiRegex) {
              emojiRegex = new RegExp(_emojiRegex, "u");
            }
            if (!emojiRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "emoji",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "uuid") {
            if (!uuidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "uuid",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "nanoid") {
            if (!nanoidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "nanoid",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "cuid") {
            if (!cuidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "cuid",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "cuid2") {
            if (!cuid2Regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "cuid2",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "ulid") {
            if (!ulidRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "ulid",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "url") {
            try {
              new URL(input.data);
            } catch (_a) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "url",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "regex") {
            check2.regex.lastIndex = 0;
            const testResult = check2.regex.test(input.data);
            if (!testResult) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "regex",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "trim") {
            input.data = input.data.trim();
          } else if (check2.kind === "includes") {
            if (!input.data.includes(check2.value, check2.position)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: { includes: check2.value, position: check2.position },
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "toLowerCase") {
            input.data = input.data.toLowerCase();
          } else if (check2.kind === "toUpperCase") {
            input.data = input.data.toUpperCase();
          } else if (check2.kind === "startsWith") {
            if (!input.data.startsWith(check2.value)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: { startsWith: check2.value },
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "endsWith") {
            if (!input.data.endsWith(check2.value)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: { endsWith: check2.value },
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "datetime") {
            const regex = datetimeRegex(check2);
            if (!regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "datetime",
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "date") {
            const regex = dateRegex;
            if (!regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "date",
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "time") {
            const regex = timeRegex(check2);
            if (!regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_string,
                validation: "time",
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "duration") {
            if (!durationRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "duration",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "ip") {
            if (!isValidIP(input.data, check2.version)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "ip",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "jwt") {
            if (!isValidJWT(input.data, check2.alg)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "jwt",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "cidr") {
            if (!isValidCidr(input.data, check2.version)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "cidr",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "base64") {
            if (!base64Regex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "base64",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "base64url") {
            if (!base64urlRegex.test(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                validation: "base64url",
                code: ZodIssueCode.invalid_string,
                message: check2.message
              });
              status2.dirty();
            }
          } else {
            util.assertNever(check2);
          }
        }
        return { status: status2.value, value: input.data };
      }
      _regex(regex, validation, message) {
        return this.refinement((data) => regex.test(data), {
          validation,
          code: ZodIssueCode.invalid_string,
          ...errorUtil.errToObj(message)
        });
      }
      _addCheck(check2) {
        return new _ZodString({
          ...this._def,
          checks: [...this._def.checks, check2]
        });
      }
      email(message) {
        return this._addCheck({ kind: "email", ...errorUtil.errToObj(message) });
      }
      url(message) {
        return this._addCheck({ kind: "url", ...errorUtil.errToObj(message) });
      }
      emoji(message) {
        return this._addCheck({ kind: "emoji", ...errorUtil.errToObj(message) });
      }
      uuid(message) {
        return this._addCheck({ kind: "uuid", ...errorUtil.errToObj(message) });
      }
      nanoid(message) {
        return this._addCheck({ kind: "nanoid", ...errorUtil.errToObj(message) });
      }
      cuid(message) {
        return this._addCheck({ kind: "cuid", ...errorUtil.errToObj(message) });
      }
      cuid2(message) {
        return this._addCheck({ kind: "cuid2", ...errorUtil.errToObj(message) });
      }
      ulid(message) {
        return this._addCheck({ kind: "ulid", ...errorUtil.errToObj(message) });
      }
      base64(message) {
        return this._addCheck({ kind: "base64", ...errorUtil.errToObj(message) });
      }
      base64url(message) {
        return this._addCheck({
          kind: "base64url",
          ...errorUtil.errToObj(message)
        });
      }
      jwt(options) {
        return this._addCheck({ kind: "jwt", ...errorUtil.errToObj(options) });
      }
      ip(options) {
        return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
      }
      cidr(options) {
        return this._addCheck({ kind: "cidr", ...errorUtil.errToObj(options) });
      }
      datetime(options) {
        var _a, _b;
        if (typeof options === "string") {
          return this._addCheck({
            kind: "datetime",
            precision: null,
            offset: false,
            local: false,
            message: options
          });
        }
        return this._addCheck({
          kind: "datetime",
          precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
          offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,
          local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,
          ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
        });
      }
      date(message) {
        return this._addCheck({ kind: "date", message });
      }
      time(options) {
        if (typeof options === "string") {
          return this._addCheck({
            kind: "time",
            precision: null,
            message: options
          });
        }
        return this._addCheck({
          kind: "time",
          precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
          ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
        });
      }
      duration(message) {
        return this._addCheck({ kind: "duration", ...errorUtil.errToObj(message) });
      }
      regex(regex, message) {
        return this._addCheck({
          kind: "regex",
          regex,
          ...errorUtil.errToObj(message)
        });
      }
      includes(value, options) {
        return this._addCheck({
          kind: "includes",
          value,
          position: options === null || options === void 0 ? void 0 : options.position,
          ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
        });
      }
      startsWith(value, message) {
        return this._addCheck({
          kind: "startsWith",
          value,
          ...errorUtil.errToObj(message)
        });
      }
      endsWith(value, message) {
        return this._addCheck({
          kind: "endsWith",
          value,
          ...errorUtil.errToObj(message)
        });
      }
      min(minLength, message) {
        return this._addCheck({
          kind: "min",
          value: minLength,
          ...errorUtil.errToObj(message)
        });
      }
      max(maxLength, message) {
        return this._addCheck({
          kind: "max",
          value: maxLength,
          ...errorUtil.errToObj(message)
        });
      }
      length(len, message) {
        return this._addCheck({
          kind: "length",
          value: len,
          ...errorUtil.errToObj(message)
        });
      }
      /**
       * Equivalent to `.min(1)`
       */
      nonempty(message) {
        return this.min(1, errorUtil.errToObj(message));
      }
      trim() {
        return new _ZodString({
          ...this._def,
          checks: [...this._def.checks, { kind: "trim" }]
        });
      }
      toLowerCase() {
        return new _ZodString({
          ...this._def,
          checks: [...this._def.checks, { kind: "toLowerCase" }]
        });
      }
      toUpperCase() {
        return new _ZodString({
          ...this._def,
          checks: [...this._def.checks, { kind: "toUpperCase" }]
        });
      }
      get isDatetime() {
        return !!this._def.checks.find((ch) => ch.kind === "datetime");
      }
      get isDate() {
        return !!this._def.checks.find((ch) => ch.kind === "date");
      }
      get isTime() {
        return !!this._def.checks.find((ch) => ch.kind === "time");
      }
      get isDuration() {
        return !!this._def.checks.find((ch) => ch.kind === "duration");
      }
      get isEmail() {
        return !!this._def.checks.find((ch) => ch.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find((ch) => ch.kind === "url");
      }
      get isEmoji() {
        return !!this._def.checks.find((ch) => ch.kind === "emoji");
      }
      get isUUID() {
        return !!this._def.checks.find((ch) => ch.kind === "uuid");
      }
      get isNANOID() {
        return !!this._def.checks.find((ch) => ch.kind === "nanoid");
      }
      get isCUID() {
        return !!this._def.checks.find((ch) => ch.kind === "cuid");
      }
      get isCUID2() {
        return !!this._def.checks.find((ch) => ch.kind === "cuid2");
      }
      get isULID() {
        return !!this._def.checks.find((ch) => ch.kind === "ulid");
      }
      get isIP() {
        return !!this._def.checks.find((ch) => ch.kind === "ip");
      }
      get isCIDR() {
        return !!this._def.checks.find((ch) => ch.kind === "cidr");
      }
      get isBase64() {
        return !!this._def.checks.find((ch) => ch.kind === "base64");
      }
      get isBase64url() {
        return !!this._def.checks.find((ch) => ch.kind === "base64url");
      }
      get minLength() {
        let min = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "min") {
            if (min === null || ch.value > min)
              min = ch.value;
          }
        }
        return min;
      }
      get maxLength() {
        let max = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "max") {
            if (max === null || ch.value < max)
              max = ch.value;
          }
        }
        return max;
      }
    };
    ZodString.create = (params) => {
      var _a;
      return new ZodString({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodString,
        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
        ...processCreateParams(params)
      });
    };
    ZodNumber = class _ZodNumber extends ZodType {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
        this.step = this.multipleOf;
      }
      _parse(input) {
        if (this._def.coerce) {
          input.data = Number(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.number) {
          const ctx2 = this._getOrReturnCtx(input);
          addIssueToContext(ctx2, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.number,
            received: ctx2.parsedType
          });
          return INVALID;
        }
        let ctx = void 0;
        const status2 = new ParseStatus();
        for (const check2 of this._def.checks) {
          if (check2.kind === "int") {
            if (!util.isInteger(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.invalid_type,
                expected: "integer",
                received: "float",
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "min") {
            const tooSmall = check2.inclusive ? input.data < check2.value : input.data <= check2.value;
            if (tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                minimum: check2.value,
                type: "number",
                inclusive: check2.inclusive,
                exact: false,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "max") {
            const tooBig = check2.inclusive ? input.data > check2.value : input.data >= check2.value;
            if (tooBig) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                maximum: check2.value,
                type: "number",
                inclusive: check2.inclusive,
                exact: false,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "multipleOf") {
            if (floatSafeRemainder(input.data, check2.value) !== 0) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_multiple_of,
                multipleOf: check2.value,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "finite") {
            if (!Number.isFinite(input.data)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_finite,
                message: check2.message
              });
              status2.dirty();
            }
          } else {
            util.assertNever(check2);
          }
        }
        return { status: status2.value, value: input.data };
      }
      gte(value, message) {
        return this.setLimit("min", value, true, errorUtil.toString(message));
      }
      gt(value, message) {
        return this.setLimit("min", value, false, errorUtil.toString(message));
      }
      lte(value, message) {
        return this.setLimit("max", value, true, errorUtil.toString(message));
      }
      lt(value, message) {
        return this.setLimit("max", value, false, errorUtil.toString(message));
      }
      setLimit(kind, value, inclusive, message) {
        return new _ZodNumber({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind,
              value,
              inclusive,
              message: errorUtil.toString(message)
            }
          ]
        });
      }
      _addCheck(check2) {
        return new _ZodNumber({
          ...this._def,
          checks: [...this._def.checks, check2]
        });
      }
      int(message) {
        return this._addCheck({
          kind: "int",
          message: errorUtil.toString(message)
        });
      }
      positive(message) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: false,
          message: errorUtil.toString(message)
        });
      }
      negative(message) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: false,
          message: errorUtil.toString(message)
        });
      }
      nonpositive(message) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: true,
          message: errorUtil.toString(message)
        });
      }
      nonnegative(message) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: true,
          message: errorUtil.toString(message)
        });
      }
      multipleOf(value, message) {
        return this._addCheck({
          kind: "multipleOf",
          value,
          message: errorUtil.toString(message)
        });
      }
      finite(message) {
        return this._addCheck({
          kind: "finite",
          message: errorUtil.toString(message)
        });
      }
      safe(message) {
        return this._addCheck({
          kind: "min",
          inclusive: true,
          value: Number.MIN_SAFE_INTEGER,
          message: errorUtil.toString(message)
        })._addCheck({
          kind: "max",
          inclusive: true,
          value: Number.MAX_SAFE_INTEGER,
          message: errorUtil.toString(message)
        });
      }
      get minValue() {
        let min = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "min") {
            if (min === null || ch.value > min)
              min = ch.value;
          }
        }
        return min;
      }
      get maxValue() {
        let max = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "max") {
            if (max === null || ch.value < max)
              max = ch.value;
          }
        }
        return max;
      }
      get isInt() {
        return !!this._def.checks.find((ch) => ch.kind === "int" || ch.kind === "multipleOf" && util.isInteger(ch.value));
      }
      get isFinite() {
        let max = null, min = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "finite" || ch.kind === "int" || ch.kind === "multipleOf") {
            return true;
          } else if (ch.kind === "min") {
            if (min === null || ch.value > min)
              min = ch.value;
          } else if (ch.kind === "max") {
            if (max === null || ch.value < max)
              max = ch.value;
          }
        }
        return Number.isFinite(min) && Number.isFinite(max);
      }
    };
    ZodNumber.create = (params) => {
      return new ZodNumber({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodNumber,
        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
        ...processCreateParams(params)
      });
    };
    ZodBigInt = class _ZodBigInt extends ZodType {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
      }
      _parse(input) {
        if (this._def.coerce) {
          try {
            input.data = BigInt(input.data);
          } catch (_a) {
            return this._getInvalidInput(input);
          }
        }
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.bigint) {
          return this._getInvalidInput(input);
        }
        let ctx = void 0;
        const status2 = new ParseStatus();
        for (const check2 of this._def.checks) {
          if (check2.kind === "min") {
            const tooSmall = check2.inclusive ? input.data < check2.value : input.data <= check2.value;
            if (tooSmall) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                type: "bigint",
                minimum: check2.value,
                inclusive: check2.inclusive,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "max") {
            const tooBig = check2.inclusive ? input.data > check2.value : input.data >= check2.value;
            if (tooBig) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                type: "bigint",
                maximum: check2.value,
                inclusive: check2.inclusive,
                message: check2.message
              });
              status2.dirty();
            }
          } else if (check2.kind === "multipleOf") {
            if (input.data % check2.value !== BigInt(0)) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.not_multiple_of,
                multipleOf: check2.value,
                message: check2.message
              });
              status2.dirty();
            }
          } else {
            util.assertNever(check2);
          }
        }
        return { status: status2.value, value: input.data };
      }
      _getInvalidInput(input) {
        const ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.bigint,
          received: ctx.parsedType
        });
        return INVALID;
      }
      gte(value, message) {
        return this.setLimit("min", value, true, errorUtil.toString(message));
      }
      gt(value, message) {
        return this.setLimit("min", value, false, errorUtil.toString(message));
      }
      lte(value, message) {
        return this.setLimit("max", value, true, errorUtil.toString(message));
      }
      lt(value, message) {
        return this.setLimit("max", value, false, errorUtil.toString(message));
      }
      setLimit(kind, value, inclusive, message) {
        return new _ZodBigInt({
          ...this._def,
          checks: [
            ...this._def.checks,
            {
              kind,
              value,
              inclusive,
              message: errorUtil.toString(message)
            }
          ]
        });
      }
      _addCheck(check2) {
        return new _ZodBigInt({
          ...this._def,
          checks: [...this._def.checks, check2]
        });
      }
      positive(message) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: false,
          message: errorUtil.toString(message)
        });
      }
      negative(message) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: false,
          message: errorUtil.toString(message)
        });
      }
      nonpositive(message) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: true,
          message: errorUtil.toString(message)
        });
      }
      nonnegative(message) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: true,
          message: errorUtil.toString(message)
        });
      }
      multipleOf(value, message) {
        return this._addCheck({
          kind: "multipleOf",
          value,
          message: errorUtil.toString(message)
        });
      }
      get minValue() {
        let min = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "min") {
            if (min === null || ch.value > min)
              min = ch.value;
          }
        }
        return min;
      }
      get maxValue() {
        let max = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "max") {
            if (max === null || ch.value < max)
              max = ch.value;
          }
        }
        return max;
      }
    };
    ZodBigInt.create = (params) => {
      var _a;
      return new ZodBigInt({
        checks: [],
        typeName: ZodFirstPartyTypeKind.ZodBigInt,
        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
        ...processCreateParams(params)
      });
    };
    ZodBoolean = class extends ZodType {
      _parse(input) {
        if (this._def.coerce) {
          input.data = Boolean(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.boolean) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.boolean,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return OK(input.data);
      }
    };
    ZodBoolean.create = (params) => {
      return new ZodBoolean({
        typeName: ZodFirstPartyTypeKind.ZodBoolean,
        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
        ...processCreateParams(params)
      });
    };
    ZodDate = class _ZodDate extends ZodType {
      _parse(input) {
        if (this._def.coerce) {
          input.data = new Date(input.data);
        }
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.date) {
          const ctx2 = this._getOrReturnCtx(input);
          addIssueToContext(ctx2, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.date,
            received: ctx2.parsedType
          });
          return INVALID;
        }
        if (isNaN(input.data.getTime())) {
          const ctx2 = this._getOrReturnCtx(input);
          addIssueToContext(ctx2, {
            code: ZodIssueCode.invalid_date
          });
          return INVALID;
        }
        const status2 = new ParseStatus();
        let ctx = void 0;
        for (const check2 of this._def.checks) {
          if (check2.kind === "min") {
            if (input.data.getTime() < check2.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_small,
                message: check2.message,
                inclusive: true,
                exact: false,
                minimum: check2.value,
                type: "date"
              });
              status2.dirty();
            }
          } else if (check2.kind === "max") {
            if (input.data.getTime() > check2.value) {
              ctx = this._getOrReturnCtx(input, ctx);
              addIssueToContext(ctx, {
                code: ZodIssueCode.too_big,
                message: check2.message,
                inclusive: true,
                exact: false,
                maximum: check2.value,
                type: "date"
              });
              status2.dirty();
            }
          } else {
            util.assertNever(check2);
          }
        }
        return {
          status: status2.value,
          value: new Date(input.data.getTime())
        };
      }
      _addCheck(check2) {
        return new _ZodDate({
          ...this._def,
          checks: [...this._def.checks, check2]
        });
      }
      min(minDate, message) {
        return this._addCheck({
          kind: "min",
          value: minDate.getTime(),
          message: errorUtil.toString(message)
        });
      }
      max(maxDate, message) {
        return this._addCheck({
          kind: "max",
          value: maxDate.getTime(),
          message: errorUtil.toString(message)
        });
      }
      get minDate() {
        let min = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "min") {
            if (min === null || ch.value > min)
              min = ch.value;
          }
        }
        return min != null ? new Date(min) : null;
      }
      get maxDate() {
        let max = null;
        for (const ch of this._def.checks) {
          if (ch.kind === "max") {
            if (max === null || ch.value < max)
              max = ch.value;
          }
        }
        return max != null ? new Date(max) : null;
      }
    };
    ZodDate.create = (params) => {
      return new ZodDate({
        checks: [],
        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
        typeName: ZodFirstPartyTypeKind.ZodDate,
        ...processCreateParams(params)
      });
    };
    ZodSymbol = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.symbol) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.symbol,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return OK(input.data);
      }
    };
    ZodSymbol.create = (params) => {
      return new ZodSymbol({
        typeName: ZodFirstPartyTypeKind.ZodSymbol,
        ...processCreateParams(params)
      });
    };
    ZodUndefined = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.undefined) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.undefined,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return OK(input.data);
      }
    };
    ZodUndefined.create = (params) => {
      return new ZodUndefined({
        typeName: ZodFirstPartyTypeKind.ZodUndefined,
        ...processCreateParams(params)
      });
    };
    ZodNull = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.null) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.null,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return OK(input.data);
      }
    };
    ZodNull.create = (params) => {
      return new ZodNull({
        typeName: ZodFirstPartyTypeKind.ZodNull,
        ...processCreateParams(params)
      });
    };
    ZodAny = class extends ZodType {
      constructor() {
        super(...arguments);
        this._any = true;
      }
      _parse(input) {
        return OK(input.data);
      }
    };
    ZodAny.create = (params) => {
      return new ZodAny({
        typeName: ZodFirstPartyTypeKind.ZodAny,
        ...processCreateParams(params)
      });
    };
    ZodUnknown = class extends ZodType {
      constructor() {
        super(...arguments);
        this._unknown = true;
      }
      _parse(input) {
        return OK(input.data);
      }
    };
    ZodUnknown.create = (params) => {
      return new ZodUnknown({
        typeName: ZodFirstPartyTypeKind.ZodUnknown,
        ...processCreateParams(params)
      });
    };
    ZodNever = class extends ZodType {
      _parse(input) {
        const ctx = this._getOrReturnCtx(input);
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.never,
          received: ctx.parsedType
        });
        return INVALID;
      }
    };
    ZodNever.create = (params) => {
      return new ZodNever({
        typeName: ZodFirstPartyTypeKind.ZodNever,
        ...processCreateParams(params)
      });
    };
    ZodVoid = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.undefined) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.void,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return OK(input.data);
      }
    };
    ZodVoid.create = (params) => {
      return new ZodVoid({
        typeName: ZodFirstPartyTypeKind.ZodVoid,
        ...processCreateParams(params)
      });
    };
    ZodArray = class _ZodArray extends ZodType {
      _parse(input) {
        const { ctx, status: status2 } = this._processInputParams(input);
        const def = this._def;
        if (ctx.parsedType !== ZodParsedType.array) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.array,
            received: ctx.parsedType
          });
          return INVALID;
        }
        if (def.exactLength !== null) {
          const tooBig = ctx.data.length > def.exactLength.value;
          const tooSmall = ctx.data.length < def.exactLength.value;
          if (tooBig || tooSmall) {
            addIssueToContext(ctx, {
              code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
              minimum: tooSmall ? def.exactLength.value : void 0,
              maximum: tooBig ? def.exactLength.value : void 0,
              type: "array",
              inclusive: true,
              exact: true,
              message: def.exactLength.message
            });
            status2.dirty();
          }
        }
        if (def.minLength !== null) {
          if (ctx.data.length < def.minLength.value) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: def.minLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: def.minLength.message
            });
            status2.dirty();
          }
        }
        if (def.maxLength !== null) {
          if (ctx.data.length > def.maxLength.value) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: def.maxLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: def.maxLength.message
            });
            status2.dirty();
          }
        }
        if (ctx.common.async) {
          return Promise.all([...ctx.data].map((item3, i11) => {
            return def.type._parseAsync(new ParseInputLazyPath(ctx, item3, ctx.path, i11));
          })).then((result2) => {
            return ParseStatus.mergeArray(status2, result2);
          });
        }
        const result = [...ctx.data].map((item3, i11) => {
          return def.type._parseSync(new ParseInputLazyPath(ctx, item3, ctx.path, i11));
        });
        return ParseStatus.mergeArray(status2, result);
      }
      get element() {
        return this._def.type;
      }
      min(minLength, message) {
        return new _ZodArray({
          ...this._def,
          minLength: { value: minLength, message: errorUtil.toString(message) }
        });
      }
      max(maxLength, message) {
        return new _ZodArray({
          ...this._def,
          maxLength: { value: maxLength, message: errorUtil.toString(message) }
        });
      }
      length(len, message) {
        return new _ZodArray({
          ...this._def,
          exactLength: { value: len, message: errorUtil.toString(message) }
        });
      }
      nonempty(message) {
        return this.min(1, message);
      }
    };
    ZodArray.create = (schema, params) => {
      return new ZodArray({
        type: schema,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: ZodFirstPartyTypeKind.ZodArray,
        ...processCreateParams(params)
      });
    };
    ZodObject = class _ZodObject extends ZodType {
      constructor() {
        super(...arguments);
        this._cached = null;
        this.nonstrict = this.passthrough;
        this.augment = this.extend;
      }
      _getCached() {
        if (this._cached !== null)
          return this._cached;
        const shape = this._def.shape();
        const keys3 = util.objectKeys(shape);
        return this._cached = { shape, keys: keys3 };
      }
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.object) {
          const ctx2 = this._getOrReturnCtx(input);
          addIssueToContext(ctx2, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.object,
            received: ctx2.parsedType
          });
          return INVALID;
        }
        const { status: status2, ctx } = this._processInputParams(input);
        const { shape, keys: shapeKeys } = this._getCached();
        const extraKeys = [];
        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
          for (const key in ctx.data) {
            if (!shapeKeys.includes(key)) {
              extraKeys.push(key);
            }
          }
        }
        const pairs = [];
        for (const key of shapeKeys) {
          const keyValidator = shape[key];
          const value = ctx.data[key];
          pairs.push({
            key: { status: "valid", value: key },
            value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
            alwaysSet: key in ctx.data
          });
        }
        if (this._def.catchall instanceof ZodNever) {
          const unknownKeys = this._def.unknownKeys;
          if (unknownKeys === "passthrough") {
            for (const key of extraKeys) {
              pairs.push({
                key: { status: "valid", value: key },
                value: { status: "valid", value: ctx.data[key] }
              });
            }
          } else if (unknownKeys === "strict") {
            if (extraKeys.length > 0) {
              addIssueToContext(ctx, {
                code: ZodIssueCode.unrecognized_keys,
                keys: extraKeys
              });
              status2.dirty();
            }
          } else if (unknownKeys === "strip") ;
          else {
            throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
          }
        } else {
          const catchall = this._def.catchall;
          for (const key of extraKeys) {
            const value = ctx.data[key];
            pairs.push({
              key: { status: "valid", value: key },
              value: catchall._parse(
                new ParseInputLazyPath(ctx, value, ctx.path, key)
                //, ctx.child(key), value, getParsedType(value)
              ),
              alwaysSet: key in ctx.data
            });
          }
        }
        if (ctx.common.async) {
          return Promise.resolve().then(async () => {
            const syncPairs = [];
            for (const pair of pairs) {
              const key = await pair.key;
              const value = await pair.value;
              syncPairs.push({
                key,
                value,
                alwaysSet: pair.alwaysSet
              });
            }
            return syncPairs;
          }).then((syncPairs) => {
            return ParseStatus.mergeObjectSync(status2, syncPairs);
          });
        } else {
          return ParseStatus.mergeObjectSync(status2, pairs);
        }
      }
      get shape() {
        return this._def.shape();
      }
      strict(message) {
        errorUtil.errToObj;
        return new _ZodObject({
          ...this._def,
          unknownKeys: "strict",
          ...message !== void 0 ? {
            errorMap: (issue, ctx) => {
              var _a, _b, _c, _d;
              const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;
              if (issue.code === "unrecognized_keys")
                return {
                  message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError
                };
              return {
                message: defaultError
              };
            }
          } : {}
        });
      }
      strip() {
        return new _ZodObject({
          ...this._def,
          unknownKeys: "strip"
        });
      }
      passthrough() {
        return new _ZodObject({
          ...this._def,
          unknownKeys: "passthrough"
        });
      }
      // const AugmentFactory =
      //   <Def extends ZodObjectDef>(def: Def) =>
      //   <Augmentation extends ZodRawShape>(
      //     augmentation: Augmentation
      //   ): ZodObject<
      //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
      //     Def["unknownKeys"],
      //     Def["catchall"]
      //   > => {
      //     return new ZodObject({
      //       ...def,
      //       shape: () => ({
      //         ...def.shape(),
      //         ...augmentation,
      //       }),
      //     }) as any;
      //   };
      extend(augmentation) {
        return new _ZodObject({
          ...this._def,
          shape: () => ({
            ...this._def.shape(),
            ...augmentation
          })
        });
      }
      /**
       * Prior to zod@1.0.12 there was a bug in the
       * inferred type of merged objects. Please
       * upgrade if you are experiencing issues.
       */
      merge(merging) {
        const merged = new _ZodObject({
          unknownKeys: merging._def.unknownKeys,
          catchall: merging._def.catchall,
          shape: () => ({
            ...this._def.shape(),
            ...merging._def.shape()
          }),
          typeName: ZodFirstPartyTypeKind.ZodObject
        });
        return merged;
      }
      // merge<
      //   Incoming extends AnyZodObject,
      //   Augmentation extends Incoming["shape"],
      //   NewOutput extends {
      //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
      //       ? Augmentation[k]["_output"]
      //       : k extends keyof Output
      //       ? Output[k]
      //       : never;
      //   },
      //   NewInput extends {
      //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
      //       ? Augmentation[k]["_input"]
      //       : k extends keyof Input
      //       ? Input[k]
      //       : never;
      //   }
      // >(
      //   merging: Incoming
      // ): ZodObject<
      //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
      //   Incoming["_def"]["unknownKeys"],
      //   Incoming["_def"]["catchall"],
      //   NewOutput,
      //   NewInput
      // > {
      //   const merged: any = new ZodObject({
      //     unknownKeys: merging._def.unknownKeys,
      //     catchall: merging._def.catchall,
      //     shape: () =>
      //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
      //     typeName: ZodFirstPartyTypeKind.ZodObject,
      //   }) as any;
      //   return merged;
      // }
      setKey(key, schema) {
        return this.augment({ [key]: schema });
      }
      // merge<Incoming extends AnyZodObject>(
      //   merging: Incoming
      // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
      // ZodObject<
      //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
      //   Incoming["_def"]["unknownKeys"],
      //   Incoming["_def"]["catchall"]
      // > {
      //   // const mergedShape = objectUtil.mergeShapes(
      //   //   this._def.shape(),
      //   //   merging._def.shape()
      //   // );
      //   const merged: any = new ZodObject({
      //     unknownKeys: merging._def.unknownKeys,
      //     catchall: merging._def.catchall,
      //     shape: () =>
      //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
      //     typeName: ZodFirstPartyTypeKind.ZodObject,
      //   }) as any;
      //   return merged;
      // }
      catchall(index) {
        return new _ZodObject({
          ...this._def,
          catchall: index
        });
      }
      pick(mask) {
        const shape = {};
        util.objectKeys(mask).forEach((key) => {
          if (mask[key] && this.shape[key]) {
            shape[key] = this.shape[key];
          }
        });
        return new _ZodObject({
          ...this._def,
          shape: () => shape
        });
      }
      omit(mask) {
        const shape = {};
        util.objectKeys(this.shape).forEach((key) => {
          if (!mask[key]) {
            shape[key] = this.shape[key];
          }
        });
        return new _ZodObject({
          ...this._def,
          shape: () => shape
        });
      }
      /**
       * @deprecated
       */
      deepPartial() {
        return deepPartialify(this);
      }
      partial(mask) {
        const newShape = {};
        util.objectKeys(this.shape).forEach((key) => {
          const fieldSchema = this.shape[key];
          if (mask && !mask[key]) {
            newShape[key] = fieldSchema;
          } else {
            newShape[key] = fieldSchema.optional();
          }
        });
        return new _ZodObject({
          ...this._def,
          shape: () => newShape
        });
      }
      required(mask) {
        const newShape = {};
        util.objectKeys(this.shape).forEach((key) => {
          if (mask && !mask[key]) {
            newShape[key] = this.shape[key];
          } else {
            const fieldSchema = this.shape[key];
            let newField = fieldSchema;
            while (newField instanceof ZodOptional) {
              newField = newField._def.innerType;
            }
            newShape[key] = newField;
          }
        });
        return new _ZodObject({
          ...this._def,
          shape: () => newShape
        });
      }
      keyof() {
        return createZodEnum(util.objectKeys(this.shape));
      }
    };
    ZodObject.create = (shape, params) => {
      return new ZodObject({
        shape: () => shape,
        unknownKeys: "strip",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params)
      });
    };
    ZodObject.strictCreate = (shape, params) => {
      return new ZodObject({
        shape: () => shape,
        unknownKeys: "strict",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params)
      });
    };
    ZodObject.lazycreate = (shape, params) => {
      return new ZodObject({
        shape,
        unknownKeys: "strip",
        catchall: ZodNever.create(),
        typeName: ZodFirstPartyTypeKind.ZodObject,
        ...processCreateParams(params)
      });
    };
    ZodUnion = class extends ZodType {
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        const options = this._def.options;
        function handleResults(results) {
          for (const result of results) {
            if (result.result.status === "valid") {
              return result.result;
            }
          }
          for (const result of results) {
            if (result.result.status === "dirty") {
              ctx.common.issues.push(...result.ctx.common.issues);
              return result.result;
            }
          }
          const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_union,
            unionErrors
          });
          return INVALID;
        }
        if (ctx.common.async) {
          return Promise.all(options.map(async (option) => {
            const childCtx = {
              ...ctx,
              common: {
                ...ctx.common,
                issues: []
              },
              parent: null
            };
            return {
              result: await option._parseAsync({
                data: ctx.data,
                path: ctx.path,
                parent: childCtx
              }),
              ctx: childCtx
            };
          })).then(handleResults);
        } else {
          let dirty = void 0;
          const issues = [];
          for (const option of options) {
            const childCtx = {
              ...ctx,
              common: {
                ...ctx.common,
                issues: []
              },
              parent: null
            };
            const result = option._parseSync({
              data: ctx.data,
              path: ctx.path,
              parent: childCtx
            });
            if (result.status === "valid") {
              return result;
            } else if (result.status === "dirty" && !dirty) {
              dirty = { result, ctx: childCtx };
            }
            if (childCtx.common.issues.length) {
              issues.push(childCtx.common.issues);
            }
          }
          if (dirty) {
            ctx.common.issues.push(...dirty.ctx.common.issues);
            return dirty.result;
          }
          const unionErrors = issues.map((issues2) => new ZodError(issues2));
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_union,
            unionErrors
          });
          return INVALID;
        }
      }
      get options() {
        return this._def.options;
      }
    };
    ZodUnion.create = (types, params) => {
      return new ZodUnion({
        options: types,
        typeName: ZodFirstPartyTypeKind.ZodUnion,
        ...processCreateParams(params)
      });
    };
    getDiscriminator = (type) => {
      if (type instanceof ZodLazy) {
        return getDiscriminator(type.schema);
      } else if (type instanceof ZodEffects) {
        return getDiscriminator(type.innerType());
      } else if (type instanceof ZodLiteral) {
        return [type.value];
      } else if (type instanceof ZodEnum) {
        return type.options;
      } else if (type instanceof ZodNativeEnum) {
        return util.objectValues(type.enum);
      } else if (type instanceof ZodDefault) {
        return getDiscriminator(type._def.innerType);
      } else if (type instanceof ZodUndefined) {
        return [void 0];
      } else if (type instanceof ZodNull) {
        return [null];
      } else if (type instanceof ZodOptional) {
        return [void 0, ...getDiscriminator(type.unwrap())];
      } else if (type instanceof ZodNullable) {
        return [null, ...getDiscriminator(type.unwrap())];
      } else if (type instanceof ZodBranded) {
        return getDiscriminator(type.unwrap());
      } else if (type instanceof ZodReadonly) {
        return getDiscriminator(type.unwrap());
      } else if (type instanceof ZodCatch) {
        return getDiscriminator(type._def.innerType);
      } else {
        return [];
      }
    };
    ZodDiscriminatedUnion = class _ZodDiscriminatedUnion extends ZodType {
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.object) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.object,
            received: ctx.parsedType
          });
          return INVALID;
        }
        const discriminator = this.discriminator;
        const discriminatorValue = ctx.data[discriminator];
        const option = this.optionsMap.get(discriminatorValue);
        if (!option) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_union_discriminator,
            options: Array.from(this.optionsMap.keys()),
            path: [discriminator]
          });
          return INVALID;
        }
        if (ctx.common.async) {
          return option._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          });
        } else {
          return option._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          });
        }
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get options() {
        return this._def.options;
      }
      get optionsMap() {
        return this._def.optionsMap;
      }
      /**
       * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
       * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
       * have a different value for each object in the union.
       * @param discriminator the name of the discriminator property
       * @param types an array of object schemas
       * @param params
       */
      static create(discriminator, options, params) {
        const optionsMap = /* @__PURE__ */ new Map();
        for (const type of options) {
          const discriminatorValues = getDiscriminator(type.shape[discriminator]);
          if (!discriminatorValues.length) {
            throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
          }
          for (const value of discriminatorValues) {
            if (optionsMap.has(value)) {
              throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
            }
            optionsMap.set(value, type);
          }
        }
        return new _ZodDiscriminatedUnion({
          typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
          discriminator,
          options,
          optionsMap,
          ...processCreateParams(params)
        });
      }
    };
    ZodIntersection = class extends ZodType {
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        const handleParsed = (parsedLeft, parsedRight) => {
          if (isAborted(parsedLeft) || isAborted(parsedRight)) {
            return INVALID;
          }
          const merged = mergeValues(parsedLeft.value, parsedRight.value);
          if (!merged.valid) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.invalid_intersection_types
            });
            return INVALID;
          }
          if (isDirty(parsedLeft) || isDirty(parsedRight)) {
            status2.dirty();
          }
          return { status: status2.value, value: merged.data };
        };
        if (ctx.common.async) {
          return Promise.all([
            this._def.left._parseAsync({
              data: ctx.data,
              path: ctx.path,
              parent: ctx
            }),
            this._def.right._parseAsync({
              data: ctx.data,
              path: ctx.path,
              parent: ctx
            })
          ]).then(([left, right]) => handleParsed(left, right));
        } else {
          return handleParsed(this._def.left._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          }), this._def.right._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          }));
        }
      }
    };
    ZodIntersection.create = (left, right, params) => {
      return new ZodIntersection({
        left,
        right,
        typeName: ZodFirstPartyTypeKind.ZodIntersection,
        ...processCreateParams(params)
      });
    };
    ZodTuple = class _ZodTuple extends ZodType {
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.array) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.array,
            received: ctx.parsedType
          });
          return INVALID;
        }
        if (ctx.data.length < this._def.items.length) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          });
          return INVALID;
        }
        const rest = this._def.rest;
        if (!rest && ctx.data.length > this._def.items.length) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          });
          status2.dirty();
        }
        const items3 = [...ctx.data].map((item3, itemIndex) => {
          const schema = this._def.items[itemIndex] || this._def.rest;
          if (!schema)
            return null;
          return schema._parse(new ParseInputLazyPath(ctx, item3, ctx.path, itemIndex));
        }).filter((x3) => !!x3);
        if (ctx.common.async) {
          return Promise.all(items3).then((results) => {
            return ParseStatus.mergeArray(status2, results);
          });
        } else {
          return ParseStatus.mergeArray(status2, items3);
        }
      }
      get items() {
        return this._def.items;
      }
      rest(rest) {
        return new _ZodTuple({
          ...this._def,
          rest
        });
      }
    };
    ZodTuple.create = (schemas, params) => {
      if (!Array.isArray(schemas)) {
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
      }
      return new ZodTuple({
        items: schemas,
        typeName: ZodFirstPartyTypeKind.ZodTuple,
        rest: null,
        ...processCreateParams(params)
      });
    };
    ZodRecord = class _ZodRecord extends ZodType {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.object) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.object,
            received: ctx.parsedType
          });
          return INVALID;
        }
        const pairs = [];
        const keyType = this._def.keyType;
        const valueType = this._def.valueType;
        for (const key in ctx.data) {
          pairs.push({
            key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
            value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),
            alwaysSet: key in ctx.data
          });
        }
        if (ctx.common.async) {
          return ParseStatus.mergeObjectAsync(status2, pairs);
        } else {
          return ParseStatus.mergeObjectSync(status2, pairs);
        }
      }
      get element() {
        return this._def.valueType;
      }
      static create(first, second, third) {
        if (second instanceof ZodType) {
          return new _ZodRecord({
            keyType: first,
            valueType: second,
            typeName: ZodFirstPartyTypeKind.ZodRecord,
            ...processCreateParams(third)
          });
        }
        return new _ZodRecord({
          keyType: ZodString.create(),
          valueType: first,
          typeName: ZodFirstPartyTypeKind.ZodRecord,
          ...processCreateParams(second)
        });
      }
    };
    ZodMap = class extends ZodType {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.map) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.map,
            received: ctx.parsedType
          });
          return INVALID;
        }
        const keyType = this._def.keyType;
        const valueType = this._def.valueType;
        const pairs = [...ctx.data.entries()].map(([key, value], index) => {
          return {
            key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, "key"])),
            value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"]))
          };
        });
        if (ctx.common.async) {
          const finalMap = /* @__PURE__ */ new Map();
          return Promise.resolve().then(async () => {
            for (const pair of pairs) {
              const key = await pair.key;
              const value = await pair.value;
              if (key.status === "aborted" || value.status === "aborted") {
                return INVALID;
              }
              if (key.status === "dirty" || value.status === "dirty") {
                status2.dirty();
              }
              finalMap.set(key.value, value.value);
            }
            return { status: status2.value, value: finalMap };
          });
        } else {
          const finalMap = /* @__PURE__ */ new Map();
          for (const pair of pairs) {
            const key = pair.key;
            const value = pair.value;
            if (key.status === "aborted" || value.status === "aborted") {
              return INVALID;
            }
            if (key.status === "dirty" || value.status === "dirty") {
              status2.dirty();
            }
            finalMap.set(key.value, value.value);
          }
          return { status: status2.value, value: finalMap };
        }
      }
    };
    ZodMap.create = (keyType, valueType, params) => {
      return new ZodMap({
        valueType,
        keyType,
        typeName: ZodFirstPartyTypeKind.ZodMap,
        ...processCreateParams(params)
      });
    };
    ZodSet = class _ZodSet extends ZodType {
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.set) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.set,
            received: ctx.parsedType
          });
          return INVALID;
        }
        const def = this._def;
        if (def.minSize !== null) {
          if (ctx.data.size < def.minSize.value) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: def.minSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: def.minSize.message
            });
            status2.dirty();
          }
        }
        if (def.maxSize !== null) {
          if (ctx.data.size > def.maxSize.value) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: def.maxSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: def.maxSize.message
            });
            status2.dirty();
          }
        }
        const valueType = this._def.valueType;
        function finalizeSet(elements2) {
          const parsedSet = /* @__PURE__ */ new Set();
          for (const element of elements2) {
            if (element.status === "aborted")
              return INVALID;
            if (element.status === "dirty")
              status2.dirty();
            parsedSet.add(element.value);
          }
          return { status: status2.value, value: parsedSet };
        }
        const elements = [...ctx.data.values()].map((item3, i11) => valueType._parse(new ParseInputLazyPath(ctx, item3, ctx.path, i11)));
        if (ctx.common.async) {
          return Promise.all(elements).then((elements2) => finalizeSet(elements2));
        } else {
          return finalizeSet(elements);
        }
      }
      min(minSize, message) {
        return new _ZodSet({
          ...this._def,
          minSize: { value: minSize, message: errorUtil.toString(message) }
        });
      }
      max(maxSize, message) {
        return new _ZodSet({
          ...this._def,
          maxSize: { value: maxSize, message: errorUtil.toString(message) }
        });
      }
      size(size, message) {
        return this.min(size, message).max(size, message);
      }
      nonempty(message) {
        return this.min(1, message);
      }
    };
    ZodSet.create = (valueType, params) => {
      return new ZodSet({
        valueType,
        minSize: null,
        maxSize: null,
        typeName: ZodFirstPartyTypeKind.ZodSet,
        ...processCreateParams(params)
      });
    };
    ZodFunction = class _ZodFunction extends ZodType {
      constructor() {
        super(...arguments);
        this.validate = this.implement;
      }
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.function) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.function,
            received: ctx.parsedType
          });
          return INVALID;
        }
        function makeArgsIssue(args, error) {
          return makeIssue({
            data: args,
            path: ctx.path,
            errorMaps: [
              ctx.common.contextualErrorMap,
              ctx.schemaErrorMap,
              getErrorMap(),
              errorMap
            ].filter((x3) => !!x3),
            issueData: {
              code: ZodIssueCode.invalid_arguments,
              argumentsError: error
            }
          });
        }
        function makeReturnsIssue(returns, error) {
          return makeIssue({
            data: returns,
            path: ctx.path,
            errorMaps: [
              ctx.common.contextualErrorMap,
              ctx.schemaErrorMap,
              getErrorMap(),
              errorMap
            ].filter((x3) => !!x3),
            issueData: {
              code: ZodIssueCode.invalid_return_type,
              returnTypeError: error
            }
          });
        }
        const params = { errorMap: ctx.common.contextualErrorMap };
        const fn = ctx.data;
        if (this._def.returns instanceof ZodPromise) {
          const me4 = this;
          return OK(async function(...args) {
            const error = new ZodError([]);
            const parsedArgs = await me4._def.args.parseAsync(args, params).catch((e12) => {
              error.addIssue(makeArgsIssue(args, e12));
              throw error;
            });
            const result = await Reflect.apply(fn, this, parsedArgs);
            const parsedReturns = await me4._def.returns._def.type.parseAsync(result, params).catch((e12) => {
              error.addIssue(makeReturnsIssue(result, e12));
              throw error;
            });
            return parsedReturns;
          });
        } else {
          const me4 = this;
          return OK(function(...args) {
            const parsedArgs = me4._def.args.safeParse(args, params);
            if (!parsedArgs.success) {
              throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
            }
            const result = Reflect.apply(fn, this, parsedArgs.data);
            const parsedReturns = me4._def.returns.safeParse(result, params);
            if (!parsedReturns.success) {
              throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
            }
            return parsedReturns.data;
          });
        }
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(...items3) {
        return new _ZodFunction({
          ...this._def,
          args: ZodTuple.create(items3).rest(ZodUnknown.create())
        });
      }
      returns(returnType) {
        return new _ZodFunction({
          ...this._def,
          returns: returnType
        });
      }
      implement(func) {
        const validatedFunc = this.parse(func);
        return validatedFunc;
      }
      strictImplement(func) {
        const validatedFunc = this.parse(func);
        return validatedFunc;
      }
      static create(args, returns, params) {
        return new _ZodFunction({
          args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
          returns: returns || ZodUnknown.create(),
          typeName: ZodFirstPartyTypeKind.ZodFunction,
          ...processCreateParams(params)
        });
      }
    };
    ZodLazy = class extends ZodType {
      get schema() {
        return this._def.getter();
      }
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        const lazySchema = this._def.getter();
        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
      }
    };
    ZodLazy.create = (getter, params) => {
      return new ZodLazy({
        getter,
        typeName: ZodFirstPartyTypeKind.ZodLazy,
        ...processCreateParams(params)
      });
    };
    ZodLiteral = class extends ZodType {
      _parse(input) {
        if (input.data !== this._def.value) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            received: ctx.data,
            code: ZodIssueCode.invalid_literal,
            expected: this._def.value
          });
          return INVALID;
        }
        return { status: "valid", value: input.data };
      }
      get value() {
        return this._def.value;
      }
    };
    ZodLiteral.create = (value, params) => {
      return new ZodLiteral({
        value,
        typeName: ZodFirstPartyTypeKind.ZodLiteral,
        ...processCreateParams(params)
      });
    };
    ZodEnum = class _ZodEnum extends ZodType {
      constructor() {
        super(...arguments);
        _ZodEnum_cache.set(this, void 0);
      }
      _parse(input) {
        if (typeof input.data !== "string") {
          const ctx = this._getOrReturnCtx(input);
          const expectedValues = this._def.values;
          addIssueToContext(ctx, {
            expected: util.joinValues(expectedValues),
            received: ctx.parsedType,
            code: ZodIssueCode.invalid_type
          });
          return INVALID;
        }
        if (!__classPrivateFieldGet2(this, _ZodEnum_cache, "f")) {
          __classPrivateFieldSet2(this, _ZodEnum_cache, new Set(this._def.values), "f");
        }
        if (!__classPrivateFieldGet2(this, _ZodEnum_cache, "f").has(input.data)) {
          const ctx = this._getOrReturnCtx(input);
          const expectedValues = this._def.values;
          addIssueToContext(ctx, {
            received: ctx.data,
            code: ZodIssueCode.invalid_enum_value,
            options: expectedValues
          });
          return INVALID;
        }
        return OK(input.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        const enumValues = {};
        for (const val of this._def.values) {
          enumValues[val] = val;
        }
        return enumValues;
      }
      get Values() {
        const enumValues = {};
        for (const val of this._def.values) {
          enumValues[val] = val;
        }
        return enumValues;
      }
      get Enum() {
        const enumValues = {};
        for (const val of this._def.values) {
          enumValues[val] = val;
        }
        return enumValues;
      }
      extract(values2, newDef = this._def) {
        return _ZodEnum.create(values2, {
          ...this._def,
          ...newDef
        });
      }
      exclude(values2, newDef = this._def) {
        return _ZodEnum.create(this.options.filter((opt) => !values2.includes(opt)), {
          ...this._def,
          ...newDef
        });
      }
    };
    _ZodEnum_cache = /* @__PURE__ */ new WeakMap();
    ZodEnum.create = createZodEnum;
    ZodNativeEnum = class extends ZodType {
      constructor() {
        super(...arguments);
        _ZodNativeEnum_cache.set(this, void 0);
      }
      _parse(input) {
        const nativeEnumValues = util.getValidEnumValues(this._def.values);
        const ctx = this._getOrReturnCtx(input);
        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
          const expectedValues = util.objectValues(nativeEnumValues);
          addIssueToContext(ctx, {
            expected: util.joinValues(expectedValues),
            received: ctx.parsedType,
            code: ZodIssueCode.invalid_type
          });
          return INVALID;
        }
        if (!__classPrivateFieldGet2(this, _ZodNativeEnum_cache, "f")) {
          __classPrivateFieldSet2(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), "f");
        }
        if (!__classPrivateFieldGet2(this, _ZodNativeEnum_cache, "f").has(input.data)) {
          const expectedValues = util.objectValues(nativeEnumValues);
          addIssueToContext(ctx, {
            received: ctx.data,
            code: ZodIssueCode.invalid_enum_value,
            options: expectedValues
          });
          return INVALID;
        }
        return OK(input.data);
      }
      get enum() {
        return this._def.values;
      }
    };
    _ZodNativeEnum_cache = /* @__PURE__ */ new WeakMap();
    ZodNativeEnum.create = (values2, params) => {
      return new ZodNativeEnum({
        values: values2,
        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
        ...processCreateParams(params)
      });
    };
    ZodPromise = class extends ZodType {
      unwrap() {
        return this._def.type;
      }
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.promise,
            received: ctx.parsedType
          });
          return INVALID;
        }
        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
        return OK(promisified.then((data) => {
          return this._def.type.parseAsync(data, {
            path: ctx.path,
            errorMap: ctx.common.contextualErrorMap
          });
        }));
      }
    };
    ZodPromise.create = (schema, params) => {
      return new ZodPromise({
        type: schema,
        typeName: ZodFirstPartyTypeKind.ZodPromise,
        ...processCreateParams(params)
      });
    };
    ZodEffects = class extends ZodType {
      innerType() {
        return this._def.schema;
      }
      sourceType() {
        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
      }
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        const effect = this._def.effect || null;
        const checkCtx = {
          addIssue: (arg) => {
            addIssueToContext(ctx, arg);
            if (arg.fatal) {
              status2.abort();
            } else {
              status2.dirty();
            }
          },
          get path() {
            return ctx.path;
          }
        };
        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
        if (effect.type === "preprocess") {
          const processed = effect.transform(ctx.data, checkCtx);
          if (ctx.common.async) {
            return Promise.resolve(processed).then(async (processed2) => {
              if (status2.value === "aborted")
                return INVALID;
              const result = await this._def.schema._parseAsync({
                data: processed2,
                path: ctx.path,
                parent: ctx
              });
              if (result.status === "aborted")
                return INVALID;
              if (result.status === "dirty")
                return DIRTY(result.value);
              if (status2.value === "dirty")
                return DIRTY(result.value);
              return result;
            });
          } else {
            if (status2.value === "aborted")
              return INVALID;
            const result = this._def.schema._parseSync({
              data: processed,
              path: ctx.path,
              parent: ctx
            });
            if (result.status === "aborted")
              return INVALID;
            if (result.status === "dirty")
              return DIRTY(result.value);
            if (status2.value === "dirty")
              return DIRTY(result.value);
            return result;
          }
        }
        if (effect.type === "refinement") {
          const executeRefinement = (acc) => {
            const result = effect.refinement(acc, checkCtx);
            if (ctx.common.async) {
              return Promise.resolve(result);
            }
            if (result instanceof Promise) {
              throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
            }
            return acc;
          };
          if (ctx.common.async === false) {
            const inner = this._def.schema._parseSync({
              data: ctx.data,
              path: ctx.path,
              parent: ctx
            });
            if (inner.status === "aborted")
              return INVALID;
            if (inner.status === "dirty")
              status2.dirty();
            executeRefinement(inner.value);
            return { status: status2.value, value: inner.value };
          } else {
            return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
              if (inner.status === "aborted")
                return INVALID;
              if (inner.status === "dirty")
                status2.dirty();
              return executeRefinement(inner.value).then(() => {
                return { status: status2.value, value: inner.value };
              });
            });
          }
        }
        if (effect.type === "transform") {
          if (ctx.common.async === false) {
            const base = this._def.schema._parseSync({
              data: ctx.data,
              path: ctx.path,
              parent: ctx
            });
            if (!isValid(base))
              return base;
            const result = effect.transform(base.value, checkCtx);
            if (result instanceof Promise) {
              throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
            }
            return { status: status2.value, value: result };
          } else {
            return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {
              if (!isValid(base))
                return base;
              return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status2.value, value: result }));
            });
          }
        }
        util.assertNever(effect);
      }
    };
    ZodEffects.create = (schema, effect, params) => {
      return new ZodEffects({
        schema,
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        effect,
        ...processCreateParams(params)
      });
    };
    ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
      return new ZodEffects({
        schema,
        effect: { type: "preprocess", transform: preprocess },
        typeName: ZodFirstPartyTypeKind.ZodEffects,
        ...processCreateParams(params)
      });
    };
    ZodOptional = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType === ZodParsedType.undefined) {
          return OK(void 0);
        }
        return this._def.innerType._parse(input);
      }
      unwrap() {
        return this._def.innerType;
      }
    };
    ZodOptional.create = (type, params) => {
      return new ZodOptional({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodOptional,
        ...processCreateParams(params)
      });
    };
    ZodNullable = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType === ZodParsedType.null) {
          return OK(null);
        }
        return this._def.innerType._parse(input);
      }
      unwrap() {
        return this._def.innerType;
      }
    };
    ZodNullable.create = (type, params) => {
      return new ZodNullable({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodNullable,
        ...processCreateParams(params)
      });
    };
    ZodDefault = class extends ZodType {
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        let data = ctx.data;
        if (ctx.parsedType === ZodParsedType.undefined) {
          data = this._def.defaultValue();
        }
        return this._def.innerType._parse({
          data,
          path: ctx.path,
          parent: ctx
        });
      }
      removeDefault() {
        return this._def.innerType;
      }
    };
    ZodDefault.create = (type, params) => {
      return new ZodDefault({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodDefault,
        defaultValue: typeof params.default === "function" ? params.default : () => params.default,
        ...processCreateParams(params)
      });
    };
    ZodCatch = class extends ZodType {
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        const newCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          }
        };
        const result = this._def.innerType._parse({
          data: newCtx.data,
          path: newCtx.path,
          parent: {
            ...newCtx
          }
        });
        if (isAsync(result)) {
          return result.then((result2) => {
            return {
              status: "valid",
              value: result2.status === "valid" ? result2.value : this._def.catchValue({
                get error() {
                  return new ZodError(newCtx.common.issues);
                },
                input: newCtx.data
              })
            };
          });
        } else {
          return {
            status: "valid",
            value: result.status === "valid" ? result.value : this._def.catchValue({
              get error() {
                return new ZodError(newCtx.common.issues);
              },
              input: newCtx.data
            })
          };
        }
      }
      removeCatch() {
        return this._def.innerType;
      }
    };
    ZodCatch.create = (type, params) => {
      return new ZodCatch({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodCatch,
        catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
        ...processCreateParams(params)
      });
    };
    ZodNaN = class extends ZodType {
      _parse(input) {
        const parsedType = this._getType(input);
        if (parsedType !== ZodParsedType.nan) {
          const ctx = this._getOrReturnCtx(input);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: ZodParsedType.nan,
            received: ctx.parsedType
          });
          return INVALID;
        }
        return { status: "valid", value: input.data };
      }
    };
    ZodNaN.create = (params) => {
      return new ZodNaN({
        typeName: ZodFirstPartyTypeKind.ZodNaN,
        ...processCreateParams(params)
      });
    };
    BRAND = Symbol("zod_brand");
    ZodBranded = class extends ZodType {
      _parse(input) {
        const { ctx } = this._processInputParams(input);
        const data = ctx.data;
        return this._def.type._parse({
          data,
          path: ctx.path,
          parent: ctx
        });
      }
      unwrap() {
        return this._def.type;
      }
    };
    ZodPipeline = class _ZodPipeline extends ZodType {
      _parse(input) {
        const { status: status2, ctx } = this._processInputParams(input);
        if (ctx.common.async) {
          const handleAsync = async () => {
            const inResult = await this._def.in._parseAsync({
              data: ctx.data,
              path: ctx.path,
              parent: ctx
            });
            if (inResult.status === "aborted")
              return INVALID;
            if (inResult.status === "dirty") {
              status2.dirty();
              return DIRTY(inResult.value);
            } else {
              return this._def.out._parseAsync({
                data: inResult.value,
                path: ctx.path,
                parent: ctx
              });
            }
          };
          return handleAsync();
        } else {
          const inResult = this._def.in._parseSync({
            data: ctx.data,
            path: ctx.path,
            parent: ctx
          });
          if (inResult.status === "aborted")
            return INVALID;
          if (inResult.status === "dirty") {
            status2.dirty();
            return {
              status: "dirty",
              value: inResult.value
            };
          } else {
            return this._def.out._parseSync({
              data: inResult.value,
              path: ctx.path,
              parent: ctx
            });
          }
        }
      }
      static create(a12, b4) {
        return new _ZodPipeline({
          in: a12,
          out: b4,
          typeName: ZodFirstPartyTypeKind.ZodPipeline
        });
      }
    };
    ZodReadonly = class extends ZodType {
      _parse(input) {
        const result = this._def.innerType._parse(input);
        const freeze = (data) => {
          if (isValid(data)) {
            data.value = Object.freeze(data.value);
          }
          return data;
        };
        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);
      }
      unwrap() {
        return this._def.innerType;
      }
    };
    ZodReadonly.create = (type, params) => {
      return new ZodReadonly({
        innerType: type,
        typeName: ZodFirstPartyTypeKind.ZodReadonly,
        ...processCreateParams(params)
      });
    };
    late = {
      object: ZodObject.lazycreate
    };
    (function(ZodFirstPartyTypeKind2) {
      ZodFirstPartyTypeKind2["ZodString"] = "ZodString";
      ZodFirstPartyTypeKind2["ZodNumber"] = "ZodNumber";
      ZodFirstPartyTypeKind2["ZodNaN"] = "ZodNaN";
      ZodFirstPartyTypeKind2["ZodBigInt"] = "ZodBigInt";
      ZodFirstPartyTypeKind2["ZodBoolean"] = "ZodBoolean";
      ZodFirstPartyTypeKind2["ZodDate"] = "ZodDate";
      ZodFirstPartyTypeKind2["ZodSymbol"] = "ZodSymbol";
      ZodFirstPartyTypeKind2["ZodUndefined"] = "ZodUndefined";
      ZodFirstPartyTypeKind2["ZodNull"] = "ZodNull";
      ZodFirstPartyTypeKind2["ZodAny"] = "ZodAny";
      ZodFirstPartyTypeKind2["ZodUnknown"] = "ZodUnknown";
      ZodFirstPartyTypeKind2["ZodNever"] = "ZodNever";
      ZodFirstPartyTypeKind2["ZodVoid"] = "ZodVoid";
      ZodFirstPartyTypeKind2["ZodArray"] = "ZodArray";
      ZodFirstPartyTypeKind2["ZodObject"] = "ZodObject";
      ZodFirstPartyTypeKind2["ZodUnion"] = "ZodUnion";
      ZodFirstPartyTypeKind2["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
      ZodFirstPartyTypeKind2["ZodIntersection"] = "ZodIntersection";
      ZodFirstPartyTypeKind2["ZodTuple"] = "ZodTuple";
      ZodFirstPartyTypeKind2["ZodRecord"] = "ZodRecord";
      ZodFirstPartyTypeKind2["ZodMap"] = "ZodMap";
      ZodFirstPartyTypeKind2["ZodSet"] = "ZodSet";
      ZodFirstPartyTypeKind2["ZodFunction"] = "ZodFunction";
      ZodFirstPartyTypeKind2["ZodLazy"] = "ZodLazy";
      ZodFirstPartyTypeKind2["ZodLiteral"] = "ZodLiteral";
      ZodFirstPartyTypeKind2["ZodEnum"] = "ZodEnum";
      ZodFirstPartyTypeKind2["ZodEffects"] = "ZodEffects";
      ZodFirstPartyTypeKind2["ZodNativeEnum"] = "ZodNativeEnum";
      ZodFirstPartyTypeKind2["ZodOptional"] = "ZodOptional";
      ZodFirstPartyTypeKind2["ZodNullable"] = "ZodNullable";
      ZodFirstPartyTypeKind2["ZodDefault"] = "ZodDefault";
      ZodFirstPartyTypeKind2["ZodCatch"] = "ZodCatch";
      ZodFirstPartyTypeKind2["ZodPromise"] = "ZodPromise";
      ZodFirstPartyTypeKind2["ZodBranded"] = "ZodBranded";
      ZodFirstPartyTypeKind2["ZodPipeline"] = "ZodPipeline";
      ZodFirstPartyTypeKind2["ZodReadonly"] = "ZodReadonly";
    })(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
    instanceOfType = (cls, params = {
      message: `Input not instance of ${cls.name}`
    }) => custom((data) => data instanceof cls, params);
    stringType = ZodString.create;
    numberType = ZodNumber.create;
    nanType = ZodNaN.create;
    bigIntType = ZodBigInt.create;
    booleanType = ZodBoolean.create;
    dateType = ZodDate.create;
    symbolType = ZodSymbol.create;
    undefinedType = ZodUndefined.create;
    nullType = ZodNull.create;
    anyType = ZodAny.create;
    unknownType = ZodUnknown.create;
    neverType = ZodNever.create;
    voidType = ZodVoid.create;
    arrayType = ZodArray.create;
    objectType = ZodObject.create;
    strictObjectType = ZodObject.strictCreate;
    unionType = ZodUnion.create;
    discriminatedUnionType = ZodDiscriminatedUnion.create;
    intersectionType = ZodIntersection.create;
    tupleType = ZodTuple.create;
    recordType = ZodRecord.create;
    mapType = ZodMap.create;
    setType = ZodSet.create;
    functionType = ZodFunction.create;
    lazyType = ZodLazy.create;
    literalType = ZodLiteral.create;
    enumType = ZodEnum.create;
    nativeEnumType = ZodNativeEnum.create;
    promiseType = ZodPromise.create;
    effectsType = ZodEffects.create;
    optionalType = ZodOptional.create;
    nullableType = ZodNullable.create;
    preprocessType = ZodEffects.createWithPreprocess;
    pipelineType = ZodPipeline.create;
    ostring = () => stringType().optional();
    onumber = () => numberType().optional();
    oboolean = () => booleanType().optional();
    coerce = {
      string: (arg) => ZodString.create({ ...arg, coerce: true }),
      number: (arg) => ZodNumber.create({ ...arg, coerce: true }),
      boolean: (arg) => ZodBoolean.create({
        ...arg,
        coerce: true
      }),
      bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),
      date: (arg) => ZodDate.create({ ...arg, coerce: true })
    };
    NEVER = INVALID;
    z2 = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      defaultErrorMap: errorMap,
      setErrorMap,
      getErrorMap,
      makeIssue,
      EMPTY_PATH,
      addIssueToContext,
      ParseStatus,
      INVALID,
      DIRTY,
      OK,
      isAborted,
      isDirty,
      isValid,
      isAsync,
      get util() {
        return util;
      },
      get objectUtil() {
        return objectUtil;
      },
      ZodParsedType,
      getParsedType,
      ZodType,
      datetimeRegex,
      ZodString,
      ZodNumber,
      ZodBigInt,
      ZodBoolean,
      ZodDate,
      ZodSymbol,
      ZodUndefined,
      ZodNull,
      ZodAny,
      ZodUnknown,
      ZodNever,
      ZodVoid,
      ZodArray,
      ZodObject,
      ZodUnion,
      ZodDiscriminatedUnion,
      ZodIntersection,
      ZodTuple,
      ZodRecord,
      ZodMap,
      ZodSet,
      ZodFunction,
      ZodLazy,
      ZodLiteral,
      ZodEnum,
      ZodNativeEnum,
      ZodPromise,
      ZodEffects,
      ZodTransformer: ZodEffects,
      ZodOptional,
      ZodNullable,
      ZodDefault,
      ZodCatch,
      ZodNaN,
      BRAND,
      ZodBranded,
      ZodPipeline,
      ZodReadonly,
      custom,
      Schema: ZodType,
      ZodSchema: ZodType,
      late,
      get ZodFirstPartyTypeKind() {
        return ZodFirstPartyTypeKind;
      },
      coerce,
      any: anyType,
      array: arrayType,
      bigint: bigIntType,
      boolean: booleanType,
      date: dateType,
      discriminatedUnion: discriminatedUnionType,
      effect: effectsType,
      "enum": enumType,
      "function": functionType,
      "instanceof": instanceOfType,
      intersection: intersectionType,
      lazy: lazyType,
      literal: literalType,
      map: mapType,
      nan: nanType,
      nativeEnum: nativeEnumType,
      never: neverType,
      "null": nullType,
      nullable: nullableType,
      number: numberType,
      object: objectType,
      oboolean,
      onumber,
      optional: optionalType,
      ostring,
      pipeline: pipelineType,
      preprocess: preprocessType,
      promise: promiseType,
      record: recordType,
      set: setType,
      strictObject: strictObjectType,
      string: stringType,
      symbol: symbolType,
      transformer: effectsType,
      tuple: tupleType,
      "undefined": undefinedType,
      union: unionType,
      unknown: unknownType,
      "void": voidType,
      NEVER,
      ZodIssueCode,
      quotelessJson,
      ZodError
    });
  }
});

// dist/server/chunks/chunk-Dy3LQdoT.js
var flex, title, s2;
var init_chunk_Dy3LQdoT = __esm({
  "dist/server/chunks/chunk-Dy3LQdoT.js"() {
    "use strict";
    flex = "gAMD6";
    title = "nyS-v";
    s2 = {
      flex,
      title
    };
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/lib/SSRBase.mjs
var import_react157, R5, l2, n6, c4, i2, m2, w2, d2, E5;
var init_SSRBase = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/lib/SSRBase.mjs"() {
    import_react157 = __toESM(require_react(), 1);
    R5 = Object.defineProperty;
    l2 = Object.getOwnPropertySymbols;
    n6 = Object.prototype.hasOwnProperty;
    c4 = Object.prototype.propertyIsEnumerable;
    i2 = (e12, r8, t13) => r8 in e12 ? R5(e12, r8, { enumerable: true, configurable: true, writable: true, value: t13 }) : e12[r8] = t13;
    m2 = (e12, r8) => {
      for (var t13 in r8 || (r8 = {}))
        n6.call(r8, t13) && i2(e12, t13, r8[t13]);
      if (l2)
        for (var t13 of l2(r8))
          c4.call(r8, t13) && i2(e12, t13, r8[t13]);
      return e12;
    };
    w2 = (e12, r8) => {
      var t13 = {};
      for (var s37 in e12)
        n6.call(e12, s37) && r8.indexOf(s37) < 0 && (t13[s37] = e12[s37]);
      if (e12 != null && l2)
        for (var s37 of l2(e12))
          r8.indexOf(s37) < 0 && c4.call(e12, s37) && (t13[s37] = e12[s37]);
      return t13;
    };
    d2 = (0, import_react157.forwardRef)((e12, r8) => {
      const a12 = e12, {
        alt: t13,
        color: s37 = "currentColor",
        size: o6 = "1em",
        weight: f11 = "regular",
        mirrored: h8 = false,
        children: S3,
        weights: p13
      } = a12, u4 = w2(a12, [
        "alt",
        "color",
        "size",
        "weight",
        "mirrored",
        "children",
        "weights"
      ]);
      return /* @__PURE__ */ import_react157.default.createElement(
        "svg",
        m2({
          ref: r8,
          xmlns: "http://www.w3.org/2000/svg",
          width: o6,
          height: o6,
          fill: s37,
          viewBox: "0 0 256 256",
          transform: h8 ? "scale(-1, 1)" : void 0
        }, u4),
        !!t13 && /* @__PURE__ */ import_react157.default.createElement("title", null, t13),
        S3,
        p13.get(f11)
      );
    });
    d2.displayName = "SSRBase";
    E5 = d2;
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/ArrowUpRight.mjs
var import_react158, a2;
var init_ArrowUpRight = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/ArrowUpRight.mjs"() {
    import_react158 = __toESM(require_react(), 1);
    a2 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M204,64V168a12,12,0,0,1-24,0V93L72.49,200.49a12,12,0,0,1-17-17L163,76H88a12,12,0,0,1,0-24H192A12,12,0,0,1,204,64Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M192,64V168L88,64Z", opacity: "0.2" }), /* @__PURE__ */ import_react158.default.createElement("path", { d: "M192,56H88a8,8,0,0,0-5.66,13.66L128.69,116,58.34,186.34a8,8,0,0,0,11.32,11.32L140,127.31l46.34,46.35A8,8,0,0,0,200,168V64A8,8,0,0,0,192,56Zm-8,92.69-38.34-38.34h0L107.31,72H184Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M200,64V168a8,8,0,0,1-13.66,5.66L140,127.31,69.66,197.66a8,8,0,0,1-11.32-11.32L128.69,116,82.34,69.66A8,8,0,0,1,88,56H192A8,8,0,0,1,200,64Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M198,64V168a6,6,0,0,1-12,0V78.48L68.24,196.24a6,6,0,0,1-8.48-8.48L177.52,70H88a6,6,0,0,1,0-12H192A6,6,0,0,1,198,64Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M200,64V168a8,8,0,0,1-16,0V83.31L69.66,197.66a8,8,0,0,1-11.32-11.32L172.69,72H88a8,8,0,0,1,0-16H192A8,8,0,0,1,200,64Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react158.default.createElement(import_react158.default.Fragment, null, /* @__PURE__ */ import_react158.default.createElement("path", { d: "M196,64V168a4,4,0,0,1-8,0V73.66L66.83,194.83a4,4,0,0,1-5.66-5.66L182.34,68H88a4,4,0,0,1,0-8H192A4,4,0,0,1,196,64Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/ArrowUpRight.mjs
var import_react159, p5, f3, s3, e4, R6, w3, m3, a3, i3, l3;
var init_ArrowUpRight2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/ArrowUpRight.mjs"() {
    import_react159 = __toESM(require_react(), 1);
    init_SSRBase();
    init_ArrowUpRight();
    p5 = Object.defineProperty;
    f3 = Object.defineProperties;
    s3 = Object.getOwnPropertyDescriptors;
    e4 = Object.getOwnPropertySymbols;
    R6 = Object.prototype.hasOwnProperty;
    w3 = Object.prototype.propertyIsEnumerable;
    m3 = (o6, r8, t13) => r8 in o6 ? p5(o6, r8, { enumerable: true, configurable: true, writable: true, value: t13 }) : o6[r8] = t13;
    a3 = (o6, r8) => {
      for (var t13 in r8 || (r8 = {}))
        R6.call(r8, t13) && m3(o6, t13, r8[t13]);
      if (e4)
        for (var t13 of e4(r8))
          w3.call(r8, t13) && m3(o6, t13, r8[t13]);
      return o6;
    };
    i3 = (o6, r8) => f3(o6, s3(r8));
    l3 = (0, import_react159.forwardRef)((o6, r8) => /* @__PURE__ */ import_react159.default.createElement(E5, i3(a3({ ref: r8 }, o6), { weights: a2 })));
    l3.displayName = "ArrowUpRight";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/CaretDown.mjs
var import_react160, l4;
var init_CaretDown = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/CaretDown.mjs"() {
    import_react160 = __toESM(require_react(), 1);
    l4 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M216.49,104.49l-80,80a12,12,0,0,1-17,0l-80-80a12,12,0,0,1,17-17L128,159l71.51-71.52a12,12,0,0,1,17,17Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M208,96l-80,80L48,96Z", opacity: "0.2" }), /* @__PURE__ */ import_react160.default.createElement("path", { d: "M215.39,92.94A8,8,0,0,0,208,88H48a8,8,0,0,0-5.66,13.66l80,80a8,8,0,0,0,11.32,0l80-80A8,8,0,0,0,215.39,92.94ZM128,164.69,67.31,104H188.69Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,48,88H208a8,8,0,0,1,5.66,13.66Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M212.24,100.24l-80,80a6,6,0,0,1-8.48,0l-80-80a6,6,0,0,1,8.48-8.48L128,167.51l75.76-75.75a6,6,0,0,1,8.48,8.48Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,53.66,90.34L128,164.69l74.34-74.35a8,8,0,0,1,11.32,11.32Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react160.default.createElement(import_react160.default.Fragment, null, /* @__PURE__ */ import_react160.default.createElement("path", { d: "M210.83,98.83l-80,80a4,4,0,0,1-5.66,0l-80-80a4,4,0,0,1,5.66-5.66L128,170.34l77.17-77.17a4,4,0,1,1,5.66,5.66Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/CaretDown.mjs
var import_react161, i4, p6, s4, t5, n7, w4, a4, m4, f4, C3;
var init_CaretDown2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/CaretDown.mjs"() {
    import_react161 = __toESM(require_react(), 1);
    init_SSRBase();
    init_CaretDown();
    i4 = Object.defineProperty;
    p6 = Object.defineProperties;
    s4 = Object.getOwnPropertyDescriptors;
    t5 = Object.getOwnPropertySymbols;
    n7 = Object.prototype.hasOwnProperty;
    w4 = Object.prototype.propertyIsEnumerable;
    a4 = (r8, e12, o6) => e12 in r8 ? i4(r8, e12, { enumerable: true, configurable: true, writable: true, value: o6 }) : r8[e12] = o6;
    m4 = (r8, e12) => {
      for (var o6 in e12 || (e12 = {}))
        n7.call(e12, o6) && a4(r8, o6, e12[o6]);
      if (t5)
        for (var o6 of t5(e12))
          w4.call(e12, o6) && a4(r8, o6, e12[o6]);
      return r8;
    };
    f4 = (r8, e12) => p6(r8, s4(e12));
    C3 = (0, import_react161.forwardRef)((r8, e12) => /* @__PURE__ */ import_react161.default.createElement(E5, f4(m4({ ref: e12 }, r8), { weights: l4 })));
    C3.displayName = "CaretDown";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/ChatDots.mjs
var import_react162, t6;
var init_ChatDots = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/ChatDots.mjs"() {
    import_react162 = __toESM(require_react(), 1);
    t6 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement("path", { d: "M88,128a16,16,0,1,1,16,16A16,16,0,0,1,88,128Zm64,16a16,16,0,1,0-16-16A16,16,0,0,0,152,144Zm84-80V192a20,20,0,0,1-20,20H84.47L53,239.17l-.12.11A19.91,19.91,0,0,1,40.05,244a20.14,20.14,0,0,1-8.49-1.9A19.82,19.82,0,0,1,20,224V64A20,20,0,0,1,40,44H216A20,20,0,0,1,236,64Zm-24,4H44V215.23l28.16-24.32A11.93,11.93,0,0,1,80,188H212Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement(
          "path",
          {
            d: "M224,64V192a8,8,0,0,1-8,8H80L45.15,230.11A8,8,0,0,1,32,224V64a8,8,0,0,1,8-8H216A8,8,0,0,1,224,64Z",
            opacity: "0.2"
          }
        ), /* @__PURE__ */ import_react162.default.createElement("path", { d: "M116,128a12,12,0,1,1,12,12A12,12,0,0,1,116,128ZM84,140a12,12,0,1,0-12-12A12,12,0,0,0,84,140Zm88,0a12,12,0,1,0-12-12A12,12,0,0,0,172,140Zm60-76V192a16,16,0,0,1-16,16H83l-32.6,28.16-.09.07A15.89,15.89,0,0,1,40,240a16.13,16.13,0,0,1-6.8-1.52A15.85,15.85,0,0,1,24,224V64A16,16,0,0,1,40,48H216A16,16,0,0,1,232,64ZM40,224h0ZM216,64H40V224l34.77-30A8,8,0,0,1,80,192H216Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement("path", { d: "M216,48H40A16,16,0,0,0,24,64V224a15.84,15.84,0,0,0,9.25,14.5A16.05,16.05,0,0,0,40,240a15.89,15.89,0,0,0,10.25-3.78l.09-.07L83,208H216a16,16,0,0,0,16-16V64A16,16,0,0,0,216,48ZM84,140a12,12,0,1,1,12-12A12,12,0,0,1,84,140Zm44,0a12,12,0,1,1,12-12A12,12,0,0,1,128,140Zm44,0a12,12,0,1,1,12-12A12,12,0,0,1,172,140Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement("path", { d: "M138,128a10,10,0,1,1-10-10A10,10,0,0,1,138,128ZM84,118a10,10,0,1,0,10,10A10,10,0,0,0,84,118Zm88,0a10,10,0,1,0,10,10A10,10,0,0,0,172,118Zm58-54V192a14,14,0,0,1-14,14H82.23L49.07,234.64l-.06.05A13.87,13.87,0,0,1,40,238a14.11,14.11,0,0,1-5.95-1.33A13.88,13.88,0,0,1,26,224V64A14,14,0,0,1,40,50H216A14,14,0,0,1,230,64Zm-12,0a2,2,0,0,0-2-2H40a2,2,0,0,0-2,2V224a2,2,0,0,0,3.26,1.55l34.82-30.08A6,6,0,0,1,80,194H216a2,2,0,0,0,2-2Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement("path", { d: "M116,128a12,12,0,1,1,12,12A12,12,0,0,1,116,128ZM84,140a12,12,0,1,0-12-12A12,12,0,0,0,84,140Zm88,0a12,12,0,1,0-12-12A12,12,0,0,0,172,140Zm60-76V192a16,16,0,0,1-16,16H83l-32.6,28.16-.09.07A15.89,15.89,0,0,1,40,240a16.13,16.13,0,0,1-6.8-1.52A15.85,15.85,0,0,1,24,224V64A16,16,0,0,1,40,48H216A16,16,0,0,1,232,64ZM40,224h0ZM216,64H40V224l34.77-30A8,8,0,0,1,80,192H216Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react162.default.createElement(import_react162.default.Fragment, null, /* @__PURE__ */ import_react162.default.createElement("path", { d: "M136,128a8,8,0,1,1-8-8A8,8,0,0,1,136,128Zm-52-8a8,8,0,1,0,8,8A8,8,0,0,0,84,120Zm88,0a8,8,0,1,0,8,8A8,8,0,0,0,172,120Zm56-56V192a12,12,0,0,1-12,12H81.49L47.76,233.13l0,0A11.89,11.89,0,0,1,40,236a12.17,12.17,0,0,1-5.1-1.14A11.89,11.89,0,0,1,28,224V64A12,12,0,0,1,40,52H216A12,12,0,0,1,228,64Zm-8,0a4,4,0,0,0-4-4H40a4,4,0,0,0-4,4V224a4,4,0,0,0,6.56,3.08L77.38,197A4,4,0,0,1,80,196H216a4,4,0,0,0,4-4Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/ChatDots.mjs
var import_react163, f5, i5, p7, r5, c7, h4, a6, m5, s5, w5;
var init_ChatDots2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/ChatDots.mjs"() {
    import_react163 = __toESM(require_react(), 1);
    init_SSRBase();
    init_ChatDots();
    f5 = Object.defineProperty;
    i5 = Object.defineProperties;
    p7 = Object.getOwnPropertyDescriptors;
    r5 = Object.getOwnPropertySymbols;
    c7 = Object.prototype.hasOwnProperty;
    h4 = Object.prototype.propertyIsEnumerable;
    a6 = (o6, t13, e12) => t13 in o6 ? f5(o6, t13, { enumerable: true, configurable: true, writable: true, value: e12 }) : o6[t13] = e12;
    m5 = (o6, t13) => {
      for (var e12 in t13 || (t13 = {}))
        c7.call(t13, e12) && a6(o6, e12, t13[e12]);
      if (r5)
        for (var e12 of r5(t13))
          h4.call(t13, e12) && a6(o6, e12, t13[e12]);
      return o6;
    };
    s5 = (o6, t13) => i5(o6, p7(t13));
    w5 = (0, import_react163.forwardRef)((o6, t13) => /* @__PURE__ */ import_react163.default.createElement(E5, s5(m5({ ref: t13 }, o6), { weights: t6 })));
    w5.displayName = "ChatDots";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/Check.mjs
var import_react164, t7;
var init_Check = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/Check.mjs"() {
    import_react164 = __toESM(require_react(), 1);
    t7 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement("path", { d: "M232.49,80.49l-128,128a12,12,0,0,1-17,0l-56-56a12,12,0,1,1,17-17L96,183,215.51,63.51a12,12,0,0,1,17,17Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement(
          "path",
          {
            d: "M232,56V200a16,16,0,0,1-16,16H40a16,16,0,0,1-16-16V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56Z",
            opacity: "0.2"
          }
        ), /* @__PURE__ */ import_react164.default.createElement("path", { d: "M205.66,85.66l-96,96a8,8,0,0,1-11.32,0l-40-40a8,8,0,0,1,11.32-11.32L104,164.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM205.66,85.66l-96,96a8,8,0,0,1-11.32,0l-40-40a8,8,0,0,1,11.32-11.32L104,164.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement("path", { d: "M228.24,76.24l-128,128a6,6,0,0,1-8.48,0l-56-56a6,6,0,0,1,8.48-8.48L96,191.51,219.76,67.76a6,6,0,0,1,8.48,8.48Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement("path", { d: "M229.66,77.66l-128,128a8,8,0,0,1-11.32,0l-56-56a8,8,0,0,1,11.32-11.32L96,188.69,218.34,66.34a8,8,0,0,1,11.32,11.32Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement("path", { d: "M226.83,74.83l-128,128a4,4,0,0,1-5.66,0l-56-56a4,4,0,0,1,5.66-5.66L96,194.34,221.17,69.17a4,4,0,1,1,5.66,5.66Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/Check.mjs
var import_react165, f6, i6, p8, t8, s6, h5, m6, a7, c8, n8;
var init_Check2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/Check.mjs"() {
    import_react165 = __toESM(require_react(), 1);
    init_SSRBase();
    init_Check();
    f6 = Object.defineProperty;
    i6 = Object.defineProperties;
    p8 = Object.getOwnPropertyDescriptors;
    t8 = Object.getOwnPropertySymbols;
    s6 = Object.prototype.hasOwnProperty;
    h5 = Object.prototype.propertyIsEnumerable;
    m6 = (r8, e12, o6) => e12 in r8 ? f6(r8, e12, { enumerable: true, configurable: true, writable: true, value: o6 }) : r8[e12] = o6;
    a7 = (r8, e12) => {
      for (var o6 in e12 || (e12 = {}))
        s6.call(e12, o6) && m6(r8, o6, e12[o6]);
      if (t8)
        for (var o6 of t8(e12))
          h5.call(e12, o6) && m6(r8, o6, e12[o6]);
      return r8;
    };
    c8 = (r8, e12) => i6(r8, p8(e12));
    n8 = (0, import_react165.forwardRef)((r8, e12) => /* @__PURE__ */ import_react165.default.createElement(E5, c8(a7({ ref: e12 }, r8), { weights: t7 })));
    n8.displayName = "Check";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/InstagramLogo.mjs
var import_react166, t9;
var init_InstagramLogo = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/InstagramLogo.mjs"() {
    import_react166 = __toESM(require_react(), 1);
    t9 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement("path", { d: "M128,80a48,48,0,1,0,48,48A48.05,48.05,0,0,0,128,80Zm0,72a24,24,0,1,1,24-24A24,24,0,0,1,128,152ZM176,20H80A60.07,60.07,0,0,0,20,80v96a60.07,60.07,0,0,0,60,60h96a60.07,60.07,0,0,0,60-60V80A60.07,60.07,0,0,0,176,20Zm36,156a36,36,0,0,1-36,36H80a36,36,0,0,1-36-36V80A36,36,0,0,1,80,44h96a36,36,0,0,1,36,36ZM196,76a16,16,0,1,1-16-16A16,16,0,0,1,196,76Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement(
          "path",
          {
            d: "M176,32H80A48,48,0,0,0,32,80v96a48,48,0,0,0,48,48h96a48,48,0,0,0,48-48V80A48,48,0,0,0,176,32ZM128,168a40,40,0,1,1,40-40A40,40,0,0,1,128,168Z",
            opacity: "0.2"
          }
        ), /* @__PURE__ */ import_react166.default.createElement("path", { d: "M176,24H80A56.06,56.06,0,0,0,24,80v96a56.06,56.06,0,0,0,56,56h96a56.06,56.06,0,0,0,56-56V80A56.06,56.06,0,0,0,176,24Zm40,152a40,40,0,0,1-40,40H80a40,40,0,0,1-40-40V80A40,40,0,0,1,80,40h96a40,40,0,0,1,40,40ZM128,80a48,48,0,1,0,48,48A48.05,48.05,0,0,0,128,80Zm0,80a32,32,0,1,1,32-32A32,32,0,0,1,128,160Zm64-84a12,12,0,1,1-12-12A12,12,0,0,1,192,76Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement("path", { d: "M176,24H80A56.06,56.06,0,0,0,24,80v96a56.06,56.06,0,0,0,56,56h96a56.06,56.06,0,0,0,56-56V80A56.06,56.06,0,0,0,176,24ZM128,176a48,48,0,1,1,48-48A48.05,48.05,0,0,1,128,176Zm60-96a12,12,0,1,1,12-12A12,12,0,0,1,188,80Zm-28,48a32,32,0,1,1-32-32A32,32,0,0,1,160,128Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement("path", { d: "M128,82a46,46,0,1,0,46,46A46.06,46.06,0,0,0,128,82Zm0,80a34,34,0,1,1,34-34A34,34,0,0,1,128,162ZM176,26H80A54.06,54.06,0,0,0,26,80v96a54.06,54.06,0,0,0,54,54h96a54.06,54.06,0,0,0,54-54V80A54.06,54.06,0,0,0,176,26Zm42,150a42,42,0,0,1-42,42H80a42,42,0,0,1-42-42V80A42,42,0,0,1,80,38h96a42,42,0,0,1,42,42ZM190,76a10,10,0,1,1-10-10A10,10,0,0,1,190,76Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement("path", { d: "M128,80a48,48,0,1,0,48,48A48.05,48.05,0,0,0,128,80Zm0,80a32,32,0,1,1,32-32A32,32,0,0,1,128,160ZM176,24H80A56.06,56.06,0,0,0,24,80v96a56.06,56.06,0,0,0,56,56h96a56.06,56.06,0,0,0,56-56V80A56.06,56.06,0,0,0,176,24Zm40,152a40,40,0,0,1-40,40H80a40,40,0,0,1-40-40V80A40,40,0,0,1,80,40h96a40,40,0,0,1,40,40ZM192,76a12,12,0,1,1-12-12A12,12,0,0,1,192,76Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react166.default.createElement(import_react166.default.Fragment, null, /* @__PURE__ */ import_react166.default.createElement("path", { d: "M128,84a44,44,0,1,0,44,44A44.05,44.05,0,0,0,128,84Zm0,80a36,36,0,1,1,36-36A36,36,0,0,1,128,164ZM176,28H80A52.06,52.06,0,0,0,28,80v96a52.06,52.06,0,0,0,52,52h96a52.06,52.06,0,0,0,52-52V80A52.06,52.06,0,0,0,176,28Zm44,148a44.05,44.05,0,0,1-44,44H80a44.05,44.05,0,0,1-44-44V80A44.05,44.05,0,0,1,80,36h96a44.05,44.05,0,0,1,44,44ZM188,76a8,8,0,1,1-8-8A8,8,0,0,1,188,76Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/InstagramLogo.mjs
var import_react167, f7, g5, i7, t10, p9, n9, e7, m7, s7, l5;
var init_InstagramLogo2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/InstagramLogo.mjs"() {
    import_react167 = __toESM(require_react(), 1);
    init_SSRBase();
    init_InstagramLogo();
    f7 = Object.defineProperty;
    g5 = Object.defineProperties;
    i7 = Object.getOwnPropertyDescriptors;
    t10 = Object.getOwnPropertySymbols;
    p9 = Object.prototype.hasOwnProperty;
    n9 = Object.prototype.propertyIsEnumerable;
    e7 = (r8, o6, a12) => o6 in r8 ? f7(r8, o6, { enumerable: true, configurable: true, writable: true, value: a12 }) : r8[o6] = a12;
    m7 = (r8, o6) => {
      for (var a12 in o6 || (o6 = {}))
        p9.call(o6, a12) && e7(r8, a12, o6[a12]);
      if (t10)
        for (var a12 of t10(o6))
          n9.call(o6, a12) && e7(r8, a12, o6[a12]);
      return r8;
    };
    s7 = (r8, o6) => g5(r8, i7(o6));
    l5 = (0, import_react167.forwardRef)((r8, o6) => /* @__PURE__ */ import_react167.default.createElement(E5, s7(m7({ ref: o6 }, r8), { weights: t9 })));
    l5.displayName = "InstagramLogo";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/TelegramLogo.mjs
var import_react168, l6;
var init_TelegramLogo = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/TelegramLogo.mjs"() {
    import_react168 = __toESM(require_react(), 1);
    l6 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement("path", { d: "M231.49,23.16a13,13,0,0,0-13.23-2.26L15.6,100.21a18.22,18.22,0,0,0,3.12,34.86L68,144.74V200a20,20,0,0,0,34.4,13.88l22.67-23.51L162.35,223a20,20,0,0,0,32.7-10.54L235.67,35.91A13,13,0,0,0,231.49,23.16ZM139.41,77.52,77.22,122.09l-34.43-6.75ZM92,190.06V161.35l15,13.15Zm81.16,10.52L99.28,135.81,205.59,59.63Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement(
          "path",
          {
            d: "M223.41,32.09,80,134.87,21,123.3A6.23,6.23,0,0,1,20,111.38L222.63,32.07A1,1,0,0,1,223.41,32.09ZM80,200a8,8,0,0,0,13.76,5.56l30.61-31.76L80,134.87Z",
            opacity: "0.2"
          }
        ), /* @__PURE__ */ import_react168.default.createElement("path", { d: "M228.88,26.19a9,9,0,0,0-9.16-1.57L17.06,103.93a14.22,14.22,0,0,0,2.43,27.21L72,141.45V200a15.92,15.92,0,0,0,10,14.83,15.91,15.91,0,0,0,17.51-3.73l25.32-26.26L165,220a15.88,15.88,0,0,0,10.51,4,16.3,16.3,0,0,0,5-.79,15.85,15.85,0,0,0,10.67-11.63L231.77,35A9,9,0,0,0,228.88,26.19ZM78.15,126.35l-49.61-9.73,139.2-54.48ZM88,200V152.52l24.79,21.74Zm87.53,8L92.85,135.5l119-85.29Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement("path", { d: "M228.88,26.19a9,9,0,0,0-9.16-1.57L17.06,103.93a14.22,14.22,0,0,0,2.43,27.21L72,141.45V200a15.92,15.92,0,0,0,10,14.83,15.91,15.91,0,0,0,17.51-3.73l25.32-26.26L165,220a15.88,15.88,0,0,0,10.51,4,16.3,16.3,0,0,0,5-.79,15.85,15.85,0,0,0,10.67-11.63L231.77,35A9,9,0,0,0,228.88,26.19ZM175.53,208,92.85,135.5l119-85.29Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement("path", { d: "M227.57,27.7a7,7,0,0,0-7.13-1.22L17.78,105.79a12.23,12.23,0,0,0,2.1,23.39L74,139.81V200a14,14,0,0,0,24.08,9.71l26.64-27.63,41.58,36.45a13.9,13.9,0,0,0,9.2,3.49,14.33,14.33,0,0,0,4.36-.69,13.86,13.86,0,0,0,9.34-10.17L229.82,34.57A7,7,0,0,0,227.57,27.7ZM22.05,117.37h0a.46.46,0,0,1,0-.32.51.51,0,0,1,.15-.08L181.91,54.45l-103.3,74L22.2,117.41Zm67.39,84A2,2,0,0,1,86,200V148.11l29.69,26Zm88.07,7.08a1.93,1.93,0,0,1-1.34,1.44,2,2,0,0,1-2-.4L89.64,135.34,215,45.5Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement("path", { d: "M228.88,26.19a9,9,0,0,0-9.16-1.57L17.06,103.93a14.22,14.22,0,0,0,2.43,27.21L72,141.45V200a15.92,15.92,0,0,0,10,14.83,15.91,15.91,0,0,0,17.51-3.73l25.32-26.26L165,220a15.88,15.88,0,0,0,10.51,4,16.3,16.3,0,0,0,5-.79,15.85,15.85,0,0,0,10.67-11.63L231.77,35A9,9,0,0,0,228.88,26.19Zm-61.14,36L78.15,126.35l-49.6-9.73ZM88,200V152.52l24.79,21.74Zm87.53,8L92.85,135.5l119-85.29Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, /* @__PURE__ */ import_react168.default.createElement("path", { d: "M226.27,29.22a5,5,0,0,0-5.1-.87L18.51,107.66a10.22,10.22,0,0,0,1.75,19.56L76,138.16V200a12,12,0,0,0,7.51,11.13A12.1,12.1,0,0,0,88,212a12,12,0,0,0,8.62-3.68l28-29,43,37.71a12,12,0,0,0,7.89,3,12.47,12.47,0,0,0,3.74-.59,11.87,11.87,0,0,0,8-8.72L227.87,34.12A5,5,0,0,0,226.27,29.22ZM20,117.38a2.13,2.13,0,0,1,1.42-2.27L196.07,46.76l-117,83.85L21.81,119.37A2.12,2.12,0,0,1,20,117.38Zm70.87,85.38A4,4,0,0,1,84,200V143.7L118.58,174Zm88.58,6.14a4,4,0,0,1-6.57,2.09L86.43,135.18,218.13,40.8Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/TelegramLogo.mjs
var import_react169, g6, i8, p10, m8, s8, l7, a9, t11, f8, w6;
var init_TelegramLogo2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/TelegramLogo.mjs"() {
    import_react169 = __toESM(require_react(), 1);
    init_SSRBase();
    init_TelegramLogo();
    g6 = Object.defineProperty;
    i8 = Object.defineProperties;
    p10 = Object.getOwnPropertyDescriptors;
    m8 = Object.getOwnPropertySymbols;
    s8 = Object.prototype.hasOwnProperty;
    l7 = Object.prototype.propertyIsEnumerable;
    a9 = (o6, e12, r8) => e12 in o6 ? g6(o6, e12, { enumerable: true, configurable: true, writable: true, value: r8 }) : o6[e12] = r8;
    t11 = (o6, e12) => {
      for (var r8 in e12 || (e12 = {}))
        s8.call(e12, r8) && a9(o6, r8, e12[r8]);
      if (m8)
        for (var r8 of m8(e12))
          l7.call(e12, r8) && a9(o6, r8, e12[r8]);
      return o6;
    };
    f8 = (o6, e12) => i8(o6, p10(e12));
    w6 = (0, import_react169.forwardRef)((o6, e12) => /* @__PURE__ */ import_react169.default.createElement(E5, f8(t11({ ref: e12 }, o6), { weights: l6 })));
    w6.displayName = "TelegramLogo";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/WhatsappLogo.mjs
var import_react170, e9;
var init_WhatsappLogo = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/defs/WhatsappLogo.mjs"() {
    import_react170 = __toESM(require_react(), 1);
    e9 = /* @__PURE__ */ new Map([
      [
        "bold",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement("path", { d: "M187.3,159.06A36.09,36.09,0,0,1,152,188a84.09,84.09,0,0,1-84-84A36.09,36.09,0,0,1,96.94,68.7,12,12,0,0,1,110,75.1l11.48,23a12,12,0,0,1-.75,12l-8.52,12.78a44.56,44.56,0,0,0,20.91,20.91l12.78-8.52a12,12,0,0,1,12-.75l23,11.48A12,12,0,0,1,187.3,159.06ZM236,128A108,108,0,0,1,78.77,224.15L46.34,235A20,20,0,0,1,21,209.66l10.81-32.43A108,108,0,1,1,236,128Zm-24,0A84,84,0,1,0,55.27,170.06a12,12,0,0,1,1,9.81l-9.93,29.79,29.79-9.93a12.1,12.1,0,0,1,3.8-.62,12,12,0,0,1,6,1.62A84,84,0,0,0,212,128Z" }))
      ],
      [
        "duotone",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement(
          "path",
          {
            d: "M128,32A96,96,0,0,0,44.89,176.07L32.42,213.46a8,8,0,0,0,10.12,10.12l37.39-12.47A96,96,0,1,0,128,32Zm24,152a80,80,0,0,1-80-80,32,32,0,0,1,32-32l16,32-12.32,18.47a48.19,48.19,0,0,0,25.85,25.85L152,136l32,16A32,32,0,0,1,152,184Z",
            opacity: "0.2"
          }
        ), /* @__PURE__ */ import_react170.default.createElement("path", { d: "M187.58,144.84l-32-16a8,8,0,0,0-8,.5l-14.69,9.8a40.55,40.55,0,0,1-16-16l9.8-14.69a8,8,0,0,0,.5-8l-16-32A8,8,0,0,0,104,64a40,40,0,0,0-40,40,88.1,88.1,0,0,0,88,88,40,40,0,0,0,40-40A8,8,0,0,0,187.58,144.84ZM152,176a72.08,72.08,0,0,1-72-72A24,24,0,0,1,99.29,80.46l11.48,23L101,118a8,8,0,0,0-.73,7.51,56.47,56.47,0,0,0,30.15,30.15A8,8,0,0,0,138,155l14.62-9.74,23,11.48A24,24,0,0,1,152,176ZM128,24A104,104,0,0,0,36.18,176.88L24.83,210.93a16,16,0,0,0,20.24,20.24l34.05-11.35A104,104,0,1,0,128,24Zm0,192a87.87,87.87,0,0,1-44.06-11.81,8,8,0,0,0-6.54-.67L40,216,52.47,178.6a8,8,0,0,0-.66-6.54A88,88,0,1,1,128,216Z" }))
      ],
      [
        "fill",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement("path", { d: "M152.58,145.23l23,11.48A24,24,0,0,1,152,176a72.08,72.08,0,0,1-72-72A24,24,0,0,1,99.29,80.46l11.48,23L101,118a8,8,0,0,0-.73,7.51,56.47,56.47,0,0,0,30.15,30.15A8,8,0,0,0,138,155ZM232,128A104,104,0,0,1,79.12,219.82L45.07,231.17a16,16,0,0,1-20.24-20.24l11.35-34.05A104,104,0,1,1,232,128Zm-40,24a8,8,0,0,0-4.42-7.16l-32-16a8,8,0,0,0-8,.5l-14.69,9.8a40.55,40.55,0,0,1-16-16l9.8-14.69a8,8,0,0,0,.5-8l-16-32A8,8,0,0,0,104,64a40,40,0,0,0-40,40,88.1,88.1,0,0,0,88,88A40,40,0,0,0,192,152Z" }))
      ],
      [
        "light",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement("path", { d: "M186.68,146.63l-32-16a6,6,0,0,0-6,.38L133,141.46A42.49,42.49,0,0,1,114.54,123L125,107.33a6,6,0,0,0,.38-6l-16-32A6,6,0,0,0,104,66a38,38,0,0,0-38,38,86.1,86.1,0,0,0,86,86,38,38,0,0,0,38-38A6,6,0,0,0,186.68,146.63ZM152,178a74.09,74.09,0,0,1-74-74,26,26,0,0,1,22.42-25.75l12.66,25.32-10.39,15.58a6,6,0,0,0-.54,5.63,54.43,54.43,0,0,0,29.07,29.07,6,6,0,0,0,5.63-.54l15.58-10.39,25.32,12.66A26,26,0,0,1,152,178ZM128,26A102,102,0,0,0,38.35,176.69L26.73,211.56a14,14,0,0,0,17.71,17.71l34.87-11.62A102,102,0,1,0,128,26Zm0,192a90,90,0,0,1-45.06-12.08,6.09,6.09,0,0,0-3-.81,6.2,6.2,0,0,0-1.9.31L40.65,217.88a2,2,0,0,1-2.53-2.53L50.58,178a6,6,0,0,0-.5-4.91A90,90,0,1,1,128,218Z" }))
      ],
      [
        "regular",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement("path", { d: "M187.58,144.84l-32-16a8,8,0,0,0-8,.5l-14.69,9.8a40.55,40.55,0,0,1-16-16l9.8-14.69a8,8,0,0,0,.5-8l-16-32A8,8,0,0,0,104,64a40,40,0,0,0-40,40,88.1,88.1,0,0,0,88,88,40,40,0,0,0,40-40A8,8,0,0,0,187.58,144.84ZM152,176a72.08,72.08,0,0,1-72-72A24,24,0,0,1,99.29,80.46l11.48,23L101,118a8,8,0,0,0-.73,7.51,56.47,56.47,0,0,0,30.15,30.15A8,8,0,0,0,138,155l14.61-9.74,23,11.48A24,24,0,0,1,152,176ZM128,24A104,104,0,0,0,36.18,176.88L24.83,210.93a16,16,0,0,0,20.24,20.24l34.05-11.35A104,104,0,1,0,128,24Zm0,192a87.87,87.87,0,0,1-44.06-11.81,8,8,0,0,0-6.54-.67L40,216,52.47,178.6a8,8,0,0,0-.66-6.54A88,88,0,1,1,128,216Z" }))
      ],
      [
        "thin",
        /* @__PURE__ */ import_react170.default.createElement(import_react170.default.Fragment, null, /* @__PURE__ */ import_react170.default.createElement("path", { d: "M185.79,148.42l-32-16a4,4,0,0,0-4,.25l-16.64,11.1a44.56,44.56,0,0,1-20.91-20.91l11.1-16.64a4,4,0,0,0,.25-4l-16-32A4,4,0,0,0,104,68a36,36,0,0,0-36,36,84.09,84.09,0,0,0,84,84,36,36,0,0,0,36-36A4,4,0,0,0,185.79,148.42ZM152,180a76.08,76.08,0,0,1-76-76,28,28,0,0,1,25.58-27.9l13.8,27.61-11,16.54A4,4,0,0,0,104,124a52.43,52.43,0,0,0,28,28,4,4,0,0,0,3.76-.37l16.54-11,27.61,13.8A28,28,0,0,1,152,180ZM128,28A100,100,0,0,0,40.53,176.5l-11.9,35.69a12,12,0,0,0,15.18,15.18l35.69-11.9A100,100,0,1,0,128,28Zm0,192a92,92,0,0,1-46.07-12.35,4.05,4.05,0,0,0-2-.54,3.93,3.93,0,0,0-1.27.21L41.28,219.78a4,4,0,0,1-5.06-5.06l12.46-37.38a4,4,0,0,0-.33-3.27A92,92,0,1,1,128,220Z" }))
      ]
    ]);
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/WhatsappLogo.mjs
var import_react171, s9, f9, i9, e10, c11, g7, r6, p11, m9, n10;
var init_WhatsappLogo2 = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/WhatsappLogo.mjs"() {
    import_react171 = __toESM(require_react(), 1);
    init_SSRBase();
    init_WhatsappLogo();
    s9 = Object.defineProperty;
    f9 = Object.defineProperties;
    i9 = Object.getOwnPropertyDescriptors;
    e10 = Object.getOwnPropertySymbols;
    c11 = Object.prototype.hasOwnProperty;
    g7 = Object.prototype.propertyIsEnumerable;
    r6 = (a12, o6, t13) => o6 in a12 ? s9(a12, o6, { enumerable: true, configurable: true, writable: true, value: t13 }) : a12[o6] = t13;
    p11 = (a12, o6) => {
      for (var t13 in o6 || (o6 = {}))
        c11.call(o6, t13) && r6(a12, t13, o6[t13]);
      if (e10)
        for (var t13 of e10(o6))
          g7.call(o6, t13) && r6(a12, t13, o6[t13]);
      return a12;
    };
    m9 = (a12, o6) => f9(a12, i9(o6));
    n10 = (0, import_react171.forwardRef)((a12, o6) => /* @__PURE__ */ import_react171.default.createElement(E5, m9(p11({ ref: o6 }, a12), { weights: e9 })));
    n10.displayName = "WhatsappLogo";
  }
});

// node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/index.mjs
var init_ssr = __esm({
  "node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@phosphor-icons/react/dist/ssr/index.mjs"() {
    init_ArrowUpRight2();
    init_CaretDown2();
    init_ChatDots2();
    init_Check2();
    init_InstagramLogo2();
    init_TelegramLogo2();
    init_WhatsappLogo2();
  }
});

// dist/server/chunks/chunk-DLmw-jEj.js
var list, s10;
var init_chunk_DLmw_jEj = __esm({
  "dist/server/chunks/chunk-DLmw-jEj.js"() {
    "use strict";
    list = "vVoue";
    s10 = {
      list
    };
  }
});

// dist/server/chunks/chunk-Bxs9cBFL.js
var root, docs, meta, text, disclamer, s11;
var init_chunk_Bxs9cBFL = __esm({
  "dist/server/chunks/chunk-Bxs9cBFL.js"() {
    "use strict";
    root = "vDXJ4";
    docs = "_2x-Gq";
    meta = "CtELj";
    text = "_7qTdS";
    disclamer = "u74TF";
    s11 = {
      root,
      docs,
      meta,
      text,
      disclamer
    };
  }
});

// dist/server/chunks/chunk-BmkqR2v-.js
var section, s12;
var init_chunk_BmkqR2v = __esm({
  "dist/server/chunks/chunk-BmkqR2v-.js"() {
    "use strict";
    section = "psroN";
    s12 = {
      section
    };
  }
});

// dist/server/chunks/chunk-BDst9g7C.js
var top, owner, s13;
var init_chunk_BDst9g7C = __esm({
  "dist/server/chunks/chunk-BDst9g7C.js"() {
    "use strict";
    top = "_2bRLP";
    owner = "EKfGy";
    s13 = {
      top,
      owner
    };
  }
});

// dist/server/chunks/chunk-BxoQfonb.js
var footer, topWrapper, contacts, menu, docs2, divider, items, s14;
var init_chunk_BxoQfonb = __esm({
  "dist/server/chunks/chunk-BxoQfonb.js"() {
    "use strict";
    footer = "umA3y";
    topWrapper = "CzxOQ";
    contacts = "iETuD";
    menu = "c--TE";
    docs2 = "smU66";
    divider = "KJpgu";
    items = "t2inC";
    s14 = {
      footer,
      topWrapper,
      contacts,
      menu,
      docs: docs2,
      divider,
      items
    };
  }
});

// dist/server/chunks/chunk-WsihrUVn.js
var app, main, footer2, s15;
var init_chunk_WsihrUVn = __esm({
  "dist/server/chunks/chunk-WsihrUVn.js"() {
    "use strict";
    app = "KZX-2";
    main = "EprN3";
    footer2 = "_9hgQx";
    s15 = {
      app,
      main,
      footer: footer2
    };
  }
});

// node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/nprogress.store.mjs
function getIntervalProgressValue(currentProgress) {
  let next = 0.5;
  if (currentProgress >= 0 && currentProgress <= 20) {
    next = 10;
  } else if (currentProgress >= 20 && currentProgress <= 50) {
    next = 4;
  } else if (currentProgress >= 50 && currentProgress <= 80) {
    next = 2;
  } else if (currentProgress >= 80 && currentProgress <= 99) {
    next = 1;
  } else if (currentProgress >= 99 && currentProgress <= 100) {
    next = 0;
  }
  return currentProgress + next;
}
function updateNavigationProgressStateAction(update, store) {
  const state2 = store.getState();
  store.setState({ ...state2, ...update(store.getState()) });
}
function decrementNavigationProgressAction(store) {
  updateNavigationProgressStateAction(
    (state2) => ({ progress: Math.max(state2.progress - state2.step, 0) }),
    store
  );
}
function setNavigationProgressAction(value, store) {
  updateNavigationProgressStateAction(
    () => ({ progress: clamp(value, 0, 100), mounted: true }),
    store
  );
}
function cleanupNavigationProgressAction(store) {
  updateNavigationProgressStateAction((state2) => {
    window.clearInterval(state2.interval);
    state2.timeouts.forEach((timeout) => window.clearTimeout(timeout));
    return { timeouts: [] };
  }, store);
}
function completeNavigationProgressAction(store) {
  cleanupNavigationProgressAction(store);
  updateNavigationProgressStateAction((state2) => {
    const mountedTimeout = window.setTimeout(() => {
      updateNavigationProgressStateAction(() => ({ mounted: false }), store);
    }, 50);
    const resetTimeout = window.setTimeout(() => {
      updateNavigationProgressStateAction(() => ({ progress: 0 }), store);
    }, state2.stepInterval + 50);
    return { progress: 100, timeouts: [mountedTimeout, resetTimeout] };
  }, store);
}
function startNavigationProgressAction(store) {
  updateNavigationProgressStateAction(
    (s37) => ({ progress: getIntervalProgressValue(s37.progress), mounted: true }),
    store
  );
  updateNavigationProgressStateAction((state2) => {
    window.clearInterval(state2.interval);
    const interval = window.setInterval(() => {
      updateNavigationProgressStateAction(
        (s37) => ({ progress: getIntervalProgressValue(s37.progress), mounted: true }),
        store
      );
    }, state2.stepInterval);
    return { interval, mounted: true };
  }, store);
}
function stopNavigationProgressAction(store) {
  updateNavigationProgressStateAction((state2) => {
    window.clearInterval(state2.interval);
    return { interval: -1 };
  }, store);
}
function resetNavigationProgressAction(store) {
  cleanupNavigationProgressAction(store);
  stopNavigationProgressAction(store);
  updateNavigationProgressStateAction(() => ({ progress: 0, mounted: false }), store);
}
function incrementNavigationProgressAction(store) {
  updateNavigationProgressStateAction((state2) => {
    const nextValue = Math.min(state2.progress + state2.step, 100);
    const nextMounted = nextValue !== 100 && nextValue !== 0;
    if (!nextMounted) {
      const timeout = window.setTimeout(
        () => resetNavigationProgressAction(store),
        state2.stepInterval + 50
      );
      return {
        progress: nextValue,
        mounted: nextMounted,
        timeouts: [...state2.timeouts, timeout]
      };
    }
    return {
      progress: nextValue,
      mounted: nextMounted
    };
  }, store);
}
function createNprogress() {
  const store = createNprogressStore();
  const actions = {
    start: () => startNavigationProgressAction(store),
    stop: () => stopNavigationProgressAction(store),
    reset: () => resetNavigationProgressAction(store),
    set: (value) => setNavigationProgressAction(value, store),
    increment: () => incrementNavigationProgressAction(store),
    decrement: () => decrementNavigationProgressAction(store),
    complete: () => completeNavigationProgressAction(store),
    cleanup: () => cleanupNavigationProgressAction(store)
  };
  return [store, actions];
}
var createNprogressStore, useNprogress, nprogressStore, nprogress, startNavigationProgress, stopNavigationProgress, resetNavigationProgress, setNavigationProgress, incrementNavigationProgress, decrementNavigationProgress, completeNavigationProgress, cleanupNavigationProgress;
var init_nprogress_store = __esm({
  "node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/nprogress.store.mjs"() {
    "use client";
    init_esm2();
    init_esm6();
    createNprogressStore = () => createStore({
      mounted: false,
      progress: 0,
      interval: 0,
      step: 1,
      stepInterval: 100,
      timeouts: []
    });
    useNprogress = (store) => useStore(store);
    [nprogressStore, nprogress] = createNprogress();
    ({
      start: startNavigationProgress,
      stop: stopNavigationProgress,
      reset: resetNavigationProgress,
      set: setNavigationProgress,
      increment: incrementNavigationProgress,
      decrement: decrementNavigationProgress,
      complete: completeNavigationProgress,
      cleanup: cleanupNavigationProgress
    } = nprogress);
  }
});

// node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/NavigationProgress.module.css.mjs
var classes28;
var init_NavigationProgress_module_css = __esm({
  "node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/NavigationProgress.module.css.mjs"() {
    "use client";
    classes28 = { "root": "m_8f2832ae", "section": "m_7a0fe999" };
  }
});

// node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/NavigationProgress.mjs
function NavigationProgress({
  initialProgress = 0,
  color: color3,
  size = 3,
  stepInterval = 500,
  withinPortal = true,
  portalProps,
  zIndex = getDefaultZIndex("max"),
  store = nprogressStore,
  ...others
}) {
  store.initialize({
    mounted: false,
    progress: initialProgress,
    interval: -1,
    step: 1,
    stepInterval,
    timeouts: []
  });
  const state2 = useNprogress(store);
  (0, import_react172.useEffect)(() => () => resetNavigationProgressAction(store), [store]);
  return /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(OptionalPortal, { ...portalProps, withinPortal, children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
    Progress,
    {
      radius: 0,
      value: state2.progress,
      size,
      color: color3,
      classNames: classes28,
      "data-mounted": state2.mounted || void 0,
      __vars: { "--nprogress-z-index": zIndex?.toString() },
      ...others
    }
  ) });
}
var import_jsx_runtime128, import_react172;
var init_NavigationProgress = __esm({
  "node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/NavigationProgress.mjs"() {
    "use client";
    import_jsx_runtime128 = __toESM(require_jsx_runtime(), 1);
    import_react172 = __toESM(require_react(), 1);
    init_esm3();
    init_nprogress_store();
    init_NavigationProgress_module_css();
    NavigationProgress.displayName = "@mantine/nprogress/NavigationProgress";
  }
});

// node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/index.mjs
var init_esm8 = __esm({
  "node_modules/.pnpm/@mantine+nprogress@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@typ_9fd76221de707ab55ee94c05f6246174/node_modules/@mantine/nprogress/esm/index.mjs"() {
    init_NavigationProgress();
  }
});

// dist/server/chunks/chunk-DeA7MPa2.js
function getConfig(payload, params) {
  return typeof payload === "function" ? payload(params) : payload;
}
function MantineProvider2({
  children
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(MantineProvider, { theme, children: [
    /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Notifications, {}),
    children
  ] });
}
function getServerScope(values2) {
  return I({
    values: values2
  });
}
function HACK_injectValues(scope, values2) {
  Object.assign(scope.values.sidMap, values2);
}
function HACK_runScopeWatchers(scope, linksToRun) {
  if (linksToRun.length) {
    linksToRun.forEach((nodeId) => {
      const links = scope.additionalLinks[nodeId];
      if (links) {
        links.forEach((link) => {
          if (link.meta.watchOp === "store") {
            o({
              target: link,
              params: null,
              scope
            });
          }
        });
      }
    });
  }
}
function HACK_updateScopeRefs(tscope, values2) {
  var _a, _b, _c, _d, _e3;
  const scope = tscope;
  const linksToRun = [];
  for (const id5 in scope.reg) {
    if (Object.hasOwnProperty.call(scope.reg, id5)) {
      const ref = scope.reg[id5];
      const nodeId = (_a = ref == null ? void 0 : ref.meta) == null ? void 0 : _a.id;
      if (nodeId && scope.additionalLinks[nodeId]) {
        linksToRun.push(nodeId);
      }
      if (!ref.meta || !((_b = ref.meta) == null ? void 0 : _b.named) && ((_c = ref.meta) == null ? void 0 : _c.derived)) {
        delete scope.reg[id5];
      } else {
        const sid = (_d = ref == null ? void 0 : ref.meta) == null ? void 0 : _d.sid;
        if (sid && sid in values2) {
          const serialize2 = (_e3 = ref == null ? void 0 : ref.meta) == null ? void 0 : _e3.serialize;
          const read = serialize2 && serialize2 !== "ignore" ? serialize2 == null ? void 0 : serialize2.read : null;
          ref.current = read ? read(values2[sid]) : values2[sid];
        }
      }
    }
  }
  queueMicrotask(() => {
    HACK_runScopeWatchers(scope, linksToRun);
  });
}
function INTERNAL_getClientScope(values2) {
  if (!values2 || values2 === prevValues) return currentScope;
  prevValues = values2;
  HACK_injectValues(currentScope, values2);
  HACK_updateScopeRefs(currentScope, values2);
  return currentScope;
}
function Wrapper({
  children
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(MantineProvider2, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(NavigationProgress, { color: "violet" }),
    /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(ScopeProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(EffectorProvider, { children }) })
  ] });
}
var import_jsx_runtime129, React5, import_react173, onBeforeRender, import2, API, createRequestInstance, createRequestFx, createCommonRequestFx, atom, SvgCognitiveLogo, HeadDefault, subscribeToNewsMutation, SubscribeToNewsModel, SubscribeToNewsSchema, SubscribeToNews, OWNER_INFO, CONTACTS, MENU, DOCS, List2, MetaInfo, Section, Top, Footer, RootLayout, theme, isClient, currentScope, prevValues, getScope, ScopeContext, ScopeUpdateContext, ScopeProvider, useScope, EffectorProvider, import6;
var init_chunk_DeA7MPa2 = __esm({
  "dist/server/chunks/chunk-DeA7MPa2.js"() {
    "use strict";
    init_effector();
    import_jsx_runtime129 = __toESM(require_jsx_runtime(), 1);
    init_esm3();
    init_clsx();
    React5 = __toESM(require_react(), 1);
    import_react173 = __toESM(require_react(), 1);
    init_esm4();
    init_effector_react();
    init_esm5();
    init_core();
    init_node2();
    init_esm7();
    init_lib();
    init_chunk_Dy3LQdoT();
    init_ssr();
    init_chunk_DLmw_jEj();
    init_chunk_Bxs9cBFL();
    init_chunk_BmkqR2v();
    init_chunk_BDst9g7C();
    init_chunk_BxoQfonb();
    init_chunk_WsihrUVn();
    init_esm8();
    init_usePageContext();
    onBeforeRender = async (pageContext) => {
      const {
        pageInitiated: pageInitiated2
      } = pageContext.config;
      const scope = I();
      if (pageInitiated2) {
        await C(pageInitiated2, {
          scope,
          params: pageContext
        });
      }
      return {
        pageContext: {
          scope,
          scopeValues: q(scope)
        }
      };
    };
    import2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      onBeforeRender
    }, Symbol.toStringTag, { value: "Module" }));
    API = {
      surveys: {
        mainPage: "/surveys/main-page",
        comments: "/surveys/comments"
      },
      blog: {
        posts: "/posts",
        postById: (id5) => `/posts/${id5}`
      },
      faq: {
        list: "/posts"
      },
      news: {
        subscribe: "/users/subscribe"
      }
    };
    createRequestInstance = ({
      baseURL,
      headers,
      payload,
      withTokenInHeaders
    }) => v((params) => {
      const {
        url,
        ...fetchOptions
      } = getConfig(payload, params);
      const newHeaders = new Headers(headers);
      if (withTokenInHeaders) {
        newHeaders.append("Authorization", `Token ${JSON.parse(localStorage.getItem("$userId") ?? "")}`);
      }
      return ofetch(url, {
        ...fetchOptions,
        headers: newHeaders,
        baseURL
      });
    }, {
      name: "createRequestInstance",
      sid: "-2cl3s"
    });
    createRequestFx = (params) => (payload) => createRequestInstance({
      ...params,
      payload
    });
    createCommonRequestFx = createRequestFx({
      baseURL: "https://api.dev.cognitivelab.ru/api/v1"
    });
    atom = (factory2) => factory2();
    SvgCognitiveLogo = (props) => /* @__PURE__ */ React5.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 260 46", ...props }, /* @__PURE__ */ React5.createElement("g", { clipPath: "url(#a)" }, /* @__PURE__ */ React5.createElement("path", { fill: "#F3F0FF", d: "M0 8.98A8.922 8.922 0 0 1 8.922.06h242.773a8.921 8.921 0 0 1 8.922 8.921v28.04a8.921 8.921 0 0 1-8.922 8.921H8.922A8.922 8.922 0 0 1 0 37.02V8.98Z" }), /* @__PURE__ */ React5.createElement("path", { fill: "#7950F2", d: "M7.127 22.78c0-1.49.267-2.947.8-4.37a12.676 12.676 0 0 1 2.401-3.922c1.045-1.17 2.313-2.1 3.802-2.788 1.512-.711 3.213-1.067 5.103-1.067 2.267 0 4.246.494 5.936 1.48 1.69.964 2.945 2.248 3.768 3.854l-4.969 3.648c-.289-.803-.711-1.422-1.267-1.858a4.478 4.478 0 0 0-1.768-.895 6.466 6.466 0 0 0-1.834-.275c-.934 0-1.745.195-2.434.585a4.989 4.989 0 0 0-1.668 1.48 7.28 7.28 0 0 0-.967 2.064c-.2.757-.3 1.514-.3 2.271 0 .849.122 1.664.367 2.444.244.78.6 1.48 1.067 2.099a5.116 5.116 0 0 0 1.7 1.41c.69.345 1.457.517 2.302.517.6 0 1.212-.092 1.834-.276a5.052 5.052 0 0 0 1.7-.963c.512-.436.901-1.021 1.168-1.755l5.303 3.269c-.467 1.193-1.245 2.214-2.335 3.063a12.277 12.277 0 0 1-3.702 1.961 13.547 13.547 0 0 1-4.102.654c-1.756 0-3.368-.356-4.835-1.067a12.767 12.767 0 0 1-3.769-2.89 13.888 13.888 0 0 1-2.434-4.061 12.835 12.835 0 0 1-.867-4.611ZM41.799 35.41c-1.801 0-3.435-.344-4.903-1.032a12.422 12.422 0 0 1-3.801-2.822 13.547 13.547 0 0 1-2.435-3.992 13.1 13.1 0 0 1-.834-4.611c0-1.629.3-3.177.9-4.646a12.845 12.845 0 0 1 2.502-3.923 11.902 11.902 0 0 1 3.835-2.753c1.49-.665 3.113-.998 4.87-.998 1.8 0 3.434.356 4.901 1.067a11.365 11.365 0 0 1 3.769 2.822 12.898 12.898 0 0 1 2.401 4.026c.578 1.468.867 2.983.867 4.543 0 1.605-.3 3.142-.9 4.61a12.46 12.46 0 0 1-2.502 3.958 12.225 12.225 0 0 1-3.801 2.753c-1.468.665-3.09.998-4.87.998Zm-5.37-12.388c0 .826.112 1.629.334 2.409a6.793 6.793 0 0 0 1 2.064 5.15 5.15 0 0 0 1.668 1.445c.69.345 1.5.517 2.434.517.934 0 1.746-.184 2.435-.551a4.597 4.597 0 0 0 1.667-1.48 6.643 6.643 0 0 0 .968-2.099 8.626 8.626 0 0 0 0-4.749 6.365 6.365 0 0 0-1.001-2.03 4.58 4.58 0 0 0-1.7-1.445c-.69-.344-1.49-.516-2.402-.516-.934 0-1.745.183-2.434.55a4.99 4.99 0 0 0-1.668 1.48 6.315 6.315 0 0 0-1 2.065c-.2.757-.3 1.537-.3 2.34ZM66.865 35.376c-1.533 0-3-.276-4.401-.826a11.135 11.135 0 0 1-3.669-2.478c-1.067-1.101-1.912-2.42-2.534-3.957-.6-1.56-.9-3.338-.9-5.334 0-1.72.31-3.315.933-4.783a12.189 12.189 0 0 1 2.568-3.855 11.89 11.89 0 0 1 3.868-2.615c1.468-.62 3.057-.929 4.77-.929 2.133 0 4.068.482 5.802 1.445 1.734.94 3.024 2.237 3.868 3.889l-4.835 3.82a5.449 5.449 0 0 0-2.101-2.306c-.934-.596-1.923-.895-2.968-.895-.778 0-1.49.16-2.135.482a5.367 5.367 0 0 0-1.7 1.342c-.467.574-.834 1.262-1.101 2.065-.244.78-.367 1.64-.367 2.58 0 .964.133 1.836.4 2.616s.634 1.457 1.101 2.03a5.47 5.47 0 0 0 1.734 1.308c.667.298 1.412.447 2.234.447a6.127 6.127 0 0 0 3.002-.791c.956-.55 1.823-1.32 2.601-2.306v6.538c-1.779 1.675-3.835 2.513-6.17 2.513Zm5.837-8.363h-4.37v-4.817h9.74v13.007h-5.37v-8.19ZM87.784 23.194v12.01h-6.503V10.77h5.07l9.504 12.423V10.77h6.502v24.432h-5.168l-9.405-12.01ZM106.423 35.203V10.771h6.504v24.432h-6.504ZM135.45 16.621h-6.804v18.582h-6.503V16.621h-6.837v-5.85h20.144v5.85ZM137.818 35.203V10.771h6.504v24.432h-6.504ZM152.972 10.771l4.635 16.69 4.569-16.69h6.837l-8.171 24.432h-6.47l-8.271-24.432h6.871ZM187.684 29.353v5.85h-16.875V10.771h16.575v5.85h-10.072v3.441h8.605V25.5h-8.605v3.854h10.372ZM193.265 35.203V10.771h3.002v21.68h13.206v2.752h-16.208ZM219.945 10.771h2.533l9.673 24.432h-3.202l-2.801-7.157h-9.939l-2.768 7.157h-3.202l9.706-24.432Zm5.535 14.866-4.268-11.287-4.403 11.287h8.671ZM253.486 28.906c0 1.262-.312 2.363-.934 3.304-.622.94-1.467 1.674-2.535 2.202-1.044.528-2.201.791-3.468.791H235.31V10.771h11.773c1.111 0 2.067.31 2.868.93a5.617 5.617 0 0 1 1.867 2.34c.444.94.668 1.926.668 2.959a6.708 6.708 0 0 1-.902 3.372 5.378 5.378 0 0 1-2.5 2.305c1.356.413 2.423 1.182 3.201 2.306.801 1.101 1.201 2.409 1.201 3.923Zm-3.035-.55c0-.758-.167-1.457-.5-2.1a3.968 3.968 0 0 0-1.3-1.548c-.534-.39-1.158-.585-1.869-.585h-8.47v8.396h8.237a3.44 3.44 0 0 0 1.968-.585c.6-.39 1.066-.894 1.4-1.514.356-.642.534-1.33.534-2.065Zm-12.139-14.9v8.155h7.537c.711 0 1.333-.184 1.867-.55.556-.368.989-.861 1.3-1.48a4.21 4.21 0 0 0 .501-2.03c0-.78-.155-1.47-.466-2.065a3.612 3.612 0 0 0-1.235-1.48 2.95 2.95 0 0 0-1.767-.55h-7.737Z" })), /* @__PURE__ */ React5.createElement("defs", null, /* @__PURE__ */ React5.createElement("clipPath", { id: "a" }, /* @__PURE__ */ React5.createElement("path", { fill: "#fff", d: "M0 .059h260V45.94H0z" }))));
    HeadDefault = () => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(import_jsx_runtime129.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("meta", { name: "viewport", content: "width=device-width, initial-scale=1, maximum-scale=1" }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("meta", { name: "description", content: "Cognitive Lab" }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("link", { rel: "icon", href: "/logo.svg" }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("script", { dangerouslySetInnerHTML: {
        __html: `
            (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
            m[i].l=1*new Date();
            for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
            k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
            (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");
            ym(101022771, "init", {
            clickmap:true,
            trackLinks:true,
            accurateTrackBounce:true,
            webvisor:true
        })
            `
      } }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(ColorSchemeScript, {})
    ] });
    subscribeToNewsMutation = we({
      sid: "1fueyv",
      fn: () => Nr({
        effect: createCommonRequestFx((body) => ({
          url: API.news.subscribe,
          method: "POST",
          body
        }))
      }),
      name: "subscribeToNewsMutation",
      method: "createMutation"
    });
    SubscribeToNewsModel = atom(() => {
      const formSubmitted = p2({
        name: "formSubmitted",
        sid: "snl680"
      });
      const showSuccessToastFx = v(() => {
        notifications.show({
          title: "\u0423\u0441\u043F\u0435\u0448\u043D\u043E!",
          message: "\u0412\u044B \u043F\u043E\u0434\u043F\u0438\u0441\u0430\u043B\u0438\u0441\u044C \u043D\u0430 \u0440\u0430\u0441\u0441\u044B\u043B\u043A\u0443 CognitiveLab"
        });
      }, {
        name: "showSuccessToastFx",
        sid: "-e5l6ul"
      });
      M({
        and: [{
          clock: formSubmitted,
          target: subscribeToNewsMutation.start
        }],
        or: {
          sid: "-gb2pg1"
        }
      });
      M({
        and: [{
          clock: subscribeToNewsMutation.finished.success,
          target: showSuccessToastFx
        }],
        or: {
          sid: "-fws20n"
        }
      });
      return {
        formSubmitted
      };
    });
    SubscribeToNewsSchema = z2.object({
      email: z2.string().min(1, {
        message: "\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u043F\u043E\u043B\u0435"
      }).email("\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043F\u043E\u0447\u0442\u0443 \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 info@mail.org")
    });
    SubscribeToNews = () => {
      const form = useForm({
        mode: "controlled",
        initialValues: {
          email: ""
        },
        validate: zodResolver(SubscribeToNewsSchema)
      });
      const [onFormSubmit, isLoading, isSucceeded] = c2([SubscribeToNewsModel.formSubmitted, subscribeToNewsMutation.$pending, subscribeToNewsMutation.$succeeded]);
      (0, import_react173.useEffect)(() => {
        if (isLoading || !isSucceeded) return;
        form.reset();
      }, [isLoading, isSucceeded]);
      const onSubmit = form.onSubmit((data) => {
        onFormSubmit(data);
      });
      return /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)("form", { onSubmit, children: [
        /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Title, { className: s2.title, order: 6, children: "\u041D\u043E\u0432\u043E\u0441\u0442\u0438 \u043D\u0430 \u043F\u043E\u0447\u0442\u0443" }),
        /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Flex, { className: s2.flex, gap: "sm", children: [
          /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(FocusTrap, { active: Boolean(form.errors.email), children: /* @__PURE__ */ (0, import_react173.createElement)(TextInput, { inputMode: "email", placeholder: "info@mail.ru", ...form.getInputProps("email"), key: form.key("email") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Button, { loading: isLoading, disabled: isLoading, fullWidth: true, type: "submit", children: "\u041F\u043E\u0434\u043F\u0438\u0441\u0430\u0442\u044C\u0441\u044F" })
        ] })
      ] });
    };
    OWNER_INFO = [{
      id: 0,
      label: "\u0418\u041F \u041C\u0435\u0440\u0435\u043D\u043A\u043E\u0432 \u0414\u0430\u043D\u0438\u0438\u043B \u041D\u0438\u043A\u043E\u043B\u0430\u0435\u0432\u0438\u0447"
    }, {
      id: 1,
      label: "\u0418\u041D\u041D: 781304623016"
    }, {
      id: 2,
      label: "\u041E\u0413\u0420\u041D\u0418\u041F: 322784700181787"
    }];
    CONTACTS = [{
      id: 0,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/help", children: "\u041D\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u0432 \u0441\u043B\u0443\u0436\u0431\u0443 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438" }),
      icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(w5, { size: 24 })
    }, {
      id: 1,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { rel: "noopener noreferrer", target: "_blank", href: "https://api.whatsapp.com/send/?phone=79043330809", children: "\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430 \u0432 WhatsApp" }),
      icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(n10, { size: 24 })
    }, {
      id: 2,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { rel: "noopener noreferrer", target: "_blank", href: "https://t.me/cognitivelab_ru", children: "\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430 \u0432 Telegram" }),
      icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(w6, { size: 24 })
    }, {
      id: 3,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { rel: "noopener noreferrer", target: "_blank", href: "https://www.instagram.com/cognitivelab.ru", children: "\u041D\u043E\u0432\u043E\u0441\u0442\u0438 \u0432 Instagram*" }),
      icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(l5, { size: 24 })
    }];
    MENU = [{
      id: 4,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/", children: "\u0413\u043B\u0430\u0432\u043D\u0430\u044F" })
    }, {
      id: 3,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/#tariffs", children: "\u0422\u0430\u0440\u0438\u0444\u044B" })
    }, {
      id: 0,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/types", children: "\u0422\u0438\u043F\u044B \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438" })
    }, {
      id: 1,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/blog", children: "\u0411\u043B\u043E\u0433" })
    }, {
      id: 2,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { href: "/faq", children: "\u041E\u0442\u0432\u0435\u0442\u044B \u043D\u0430 \u0432\u043E\u043F\u0440\u043E\u0441\u044B" })
    }];
    DOCS = [{
      id: 0,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { rel: "noopener noreferrer", target: "_blank", href: "https://storage.yandexcloud.net/cognitive-lab-public/%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0%20%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B4%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8.pdf", children: "\u041F\u043E\u043B\u0438\u0442\u0438\u043A\u0430 \u043A\u043E\u043D\u0444\u0438\u0434\u0435\u043D\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u0438" })
    }, {
      id: 1,
      label: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("a", { target: "_blank", href: "https://storage.yandexcloud.net/cognitive-lab-public/%D0%94%D0%BE%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%20%D0%BE%D1%84%D0%B5%D1%80%D1%82%D1%8B.pdf", rel: "noreferrer", children: "\u041F\u0443\u0431\u043B\u0438\u0447\u043D\u0430\u044F \u043E\u0444\u0435\u0440\u0442\u0430" })
    }, {
      id: 2,
      label: `\xA9 ${(/* @__PURE__ */ new Date()).getFullYear()} CognitiveLab \u2022 Cognitive Lab \u2022 \u041A\u043E\u0433\u043D\u0438\u0442\u0438\u0432\u041B\u0430\u0431`
    }];
    List2 = ({
      data,
      className
    }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("ul", { className: clsx_default(s10.list, className), children: data == null ? void 0 : data.map((item3) => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)("li", { children: [
      item3.icon,
      item3.label
    ] }, item3.id)) });
    MetaInfo = ({
      className
    }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Flex, { className: s11.root, children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(List2, { className: clsx_default(className, s11.docs), data: DOCS }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Box, { className: s11.text, children: [
        /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Text, { c: "gray.6", className: s11.disclamer, children: "\u0412\u0441\u0435 \u0442\u0435\u043A\u0441\u0442\u043E\u0432\u044B\u0435 \u0438 \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B \u0441\u0430\u0439\u0442\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043D\u044B \u0438\u0441\u043A\u043B\u044E\u0447\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u043C \u0430\u0432\u0442\u043E\u0440\u0441\u043A\u0438\u043C \u043F\u0440\u0430\u0432\u043E\u043C. \u0417\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E \u043B\u044E\u0431\u043E\u0435 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435." }),
        /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Text, { c: "gray.6", className: s11.meta, children: "*Instagram \u2014 \u043F\u0440\u043E\u0435\u043A\u0442 Meta Platforms Inc., \u0434\u0435\u044F\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043A\u043E\u0442\u043E\u0440\u043E\u0439 \u0432 \u0420\u043E\u0441\u0441\u0438\u0438 \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u0430." })
      ] })
    ] });
    Section = ({
      title: title8,
      children
    }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)("section", { className: s12.section, children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("h2", { children: title8 }),
      children
    ] });
    Top = () => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Box, { className: s13.top, children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(SvgCognitiveLogo, { width: 200, height: 35 }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("p", { children: "\u0422\u0435\u0445\u043D\u043E\u043B\u043E\u0433\u0438\u0438 \u0441\u0430\u043C\u043E\u043F\u043E\u0437\u043D\u0430\u043D\u0438\u044F" }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(List2, { className: s13.owner, data: OWNER_INFO })
    ] });
    Footer = ({
      className
    }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("footer", { className: clsx_default(className, s14.footer), children: /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Container, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Box, { className: s14.topWrapper, children: [
        /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Top, {}),
        /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Flex, { className: s14.items, children: [
          /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Section, { title: "\u041C\u0435\u043D\u044E", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(List2, { className: s14.menu, data: MENU }) }),
          /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)(Section, { title: "\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u044B", children: [
            /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(List2, { className: s14.contacts, data: CONTACTS }),
            /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(SubscribeToNews, {})
          ] })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Divider, { className: s14.divider }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(MetaInfo, { className: s14.docs })
    ] }) });
    RootLayout = ({
      children
    }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)("div", { className: s15.app, children: [
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("main", { className: s15.main, id: "page-content", children }),
      /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(Footer, { className: s15.footer })
    ] });
    theme = createTheme({
      fontFamily: "Raleway, sans-serif",
      fontFamilyMonospace: "Monaco, Courier, monospace",
      headings: {
        fontFamily: "Raleway, Montserrat, system-ui, sans-serif"
      },
      primaryColor: "violet",
      other: {},
      spacing: {
        xxs: "4px",
        xs: "8px",
        sm: "12px",
        md: "16px",
        lg: "20px",
        xl: "24px",
        "2xl": "28px",
        "3xl": "32px",
        "4xl": "36px",
        "5xl": "40px"
      },
      radius: {
        xxs: "4px",
        xs: "8px",
        sm: "12px",
        md: "16px",
        lg: "20px",
        xl: "24px",
        "2xl": "28px",
        "3xl": "32px",
        "4xl": "36px",
        "5xl": "40px"
      },
      cursorType: "pointer",
      components: {
        Container: Container.extend({
          vars: () => ({
            root: {
              "--container-size": "1470px"
            }
          })
        }),
        Button: Button.extend({
          classNames: (theme2, props) => {
            if (props.variant === "rainbow") {
              return {
                root: "mantine-button-rainbow"
              };
            }
            return {};
          },
          styles: {
            root: {
              transition: "0.1s ease-in"
            }
          },
          vars: (theme2, props) => {
            const root5 = {};
            if (props.variant === void 0) {
              root5["--button-bg"] = "var(--mantine-color-dark-7)";
              root5["--button-color"] = "var(--mantine-color-white)";
            }
            if (props.variant === "default") {
              root5["--button-bd"] = "1px solid currentColor";
              root5["--button-hover-color"] = "var(--mantine-color-violet-7)";
              root5["--button-hover"] = "transparent";
              root5["--button-bg"] = "transparent";
            }
            if (props.variant === "white") {
              root5["--button-bg"] = "var(--mantine-color-white)";
              root5["--button-hover"] = "var(--mantine-color-dark-7)";
              root5["--button-hover-color"] = "var(--mantine-color-white)";
            }
            if (props.variant === "subtle") {
              root5["--button-color"] = "var(--mantine-color-dark-7)";
            }
            if (props.size === "xs") {
              root5["--button-height"] = "32px";
            }
            if (props.size === "sm") {
              root5["--button-height"] = "40px";
            }
            if (props.size === "md") {
              root5["--button-height"] = "48px";
            }
            if (props.size === "lg") {
              root5["--button-height"] = "56px";
              root5["--button-fz"] = "var(--mantine-font-size-md)";
            }
            if (props.size === "xl") {
              root5["--button-height"] = "64px";
            }
            return {
              root: root5
            };
          }
        })
      }
    });
    isClient = typeof document !== "undefined";
    currentScope = I();
    getScope = isClient ? INTERNAL_getClientScope : getServerScope;
    ScopeContext = (0, import_react173.createContext)(void 0);
    ScopeUpdateContext = (0, import_react173.createContext)(() => {
    });
    ScopeProvider = ({
      children
    }) => {
      const pageContext = usePageContext();
      const [scope, setScope] = (0, import_react173.useState)("scope" in pageContext ? pageContext.scope : getScope());
      const update = (0, import_react173.useCallback)((values2) => {
        setScope(getScope(values2));
      }, []);
      (0, import_react173.useEffect)(() => {
        if (!pageContext.isHydration) {
          setScope(getScope());
        }
      }, [pageContext]);
      return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(ScopeContext.Provider, { value: scope, children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(ScopeUpdateContext.Provider, { value: update, children }) });
    };
    useScope = () => (0, import_react173.useContext)(ScopeContext);
    EffectorProvider = ({
      children
    }) => {
      const pageContext = usePageContext();
      const scope = useScope();
      (0, import_react173.useEffect)(() => {
        const firePageStarted = async () => {
          const {
            pageStarted
          } = pageContext.config;
          if (pageStarted) {
            await C(pageStarted, {
              scope,
              params: pageContext
            });
          }
        };
        firePageStarted().catch(() => {
          throw new Error("Page start failed");
        });
      }, [pageContext]);
      return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(L2, { value: scope, children });
    };
    import6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Wrapper
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/server/chunks/chunk-DEazhzVf.js
var picture, s16;
var init_chunk_DEazhzVf = __esm({
  "dist/server/chunks/chunk-DEazhzVf.js"() {
    "use strict";
    picture = "eUYrA";
    s16 = {
      picture
    };
  }
});

// dist/server/chunks/chunk-BE_yAshe.js
var box, title2, s17;
var init_chunk_BE_yAshe = __esm({
  "dist/server/chunks/chunk-BE_yAshe.js"() {
    "use strict";
    box = "_00GiJ";
    title2 = "_9nAId";
    s17 = {
      box,
      title: title2
    };
  }
});

// dist/server/chunks/chunk-BwkHABA3.js
var box2, text2, title3, subtitle, ai, description, image, s18;
var init_chunk_BwkHABA3 = __esm({
  "dist/server/chunks/chunk-BwkHABA3.js"() {
    "use strict";
    box2 = "Xu6G1";
    text2 = "Y1d0N";
    title3 = "bu2Rn";
    subtitle = "gb8-n";
    ai = "glSwv";
    description = "gBt8H";
    image = "_8nIT2";
    s18 = {
      box: box2,
      text: text2,
      title: title3,
      subtitle,
      ai,
      description,
      image
    };
  }
});

// dist/server/chunks/chunk-Bc-wI8j8.js
var grid, description2, image2, s19;
var init_chunk_Bc_wI8j8 = __esm({
  "dist/server/chunks/chunk-Bc-wI8j8.js"() {
    "use strict";
    grid = "z9Uac";
    description2 = "YrmH6";
    image2 = "_28Q3-";
    s19 = {
      grid,
      description: description2,
      image: image2
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react174, LayoutGroupContext;
var init_LayoutGroupContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/LayoutGroupContext.mjs"() {
    "use client";
    import_react174 = __toESM(require_react(), 1);
    LayoutGroupContext = (0, import_react174.createContext)({});
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-constant.mjs
function useConstant(init) {
  const ref = (0, import_react175.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}
var import_react175;
var init_use_constant = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-constant.mjs"() {
    import_react175 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser3;
var init_is_browser = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs"() {
    isBrowser3 = typeof window !== "undefined";
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react176, useIsomorphicLayoutEffect;
var init_use_isomorphic_effect2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"() {
    import_react176 = __toESM(require_react(), 1);
    init_is_browser();
    useIsomorphicLayoutEffect = isBrowser3 ? import_react176.useLayoutEffect : import_react176.useEffect;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/PresenceContext.mjs
var import_react177, PresenceContext;
var init_PresenceContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/PresenceContext.mjs"() {
    "use client";
    import_react177 = __toESM(require_react(), 1);
    PresenceContext = /* @__PURE__ */ (0, import_react177.createContext)(null);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react178, MotionConfigContext;
var init_MotionConfigContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionConfigContext.mjs"() {
    "use client";
    import_react178 = __toESM(require_react(), 1);
    MotionConfigContext = (0, import_react178.createContext)({
      transformPagePoint: (p13) => p13,
      isStatic: false,
      reducedMotion: "never"
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence(subscribe = true) {
  const context = (0, import_react179.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  const { isPresent, onExitComplete, register } = context;
  const id5 = (0, import_react179.useId)();
  (0, import_react179.useEffect)(() => {
    if (subscribe) {
      return register(id5);
    }
  }, [subscribe]);
  const safeToRemove = (0, import_react179.useCallback)(() => subscribe && onExitComplete && onExitComplete(id5), [id5, onExitComplete, subscribe]);
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}
var import_react179;
var init_use_presence = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs"() {
    import_react179 = __toESM(require_react(), 1);
    init_PresenceContext();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/order.mjs
var stepsOrder;
var init_order = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/order.mjs"() {
    stepsOrder = [
      "read",
      // Read
      "resolveKeyframes",
      // Write/Read/Write/Read
      "update",
      // Compute
      "preRender",
      // Compute
      "render",
      // Write
      "postRender"
      // Compute
    ];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/stats/buffer.mjs
var statsBuffer;
var init_buffer = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/stats/buffer.mjs"() {
    statsBuffer = {
      value: null,
      addProjectionMetrics: null
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/render-step.mjs
function createRenderStep(runNextFrame, stepName) {
  let thisFrame = /* @__PURE__ */ new Set();
  let nextFrame = /* @__PURE__ */ new Set();
  let isProcessing = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  let latestFrameData = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  let numCalls = 0;
  function triggerCallback(callback) {
    if (toKeepAlive.has(callback)) {
      step.schedule(callback);
      runNextFrame();
    }
    numCalls++;
    callback(latestFrameData);
  }
  const step = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing;
      const queue = addToCurrentFrame ? thisFrame : nextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (!queue.has(callback))
        queue.add(callback);
      return callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      nextFrame.delete(callback);
      toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData3) => {
      latestFrameData = frameData3;
      if (isProcessing) {
        flushNextFrame = true;
        return;
      }
      isProcessing = true;
      [thisFrame, nextFrame] = [nextFrame, thisFrame];
      thisFrame.forEach(triggerCallback);
      if (stepName && statsBuffer.value) {
        statsBuffer.value.frameloop[stepName].push(numCalls);
      }
      numCalls = 0;
      thisFrame.clear();
      isProcessing = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData3);
      }
    }
  };
  return step;
}
var init_render_step = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/render-step.mjs"() {
    init_buffer();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/global-config.mjs
var MotionGlobalConfig;
var init_global_config = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/global-config.mjs"() {
    MotionGlobalConfig = {
      skipAnimations: false,
      useManualTiming: false
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/batcher.mjs
function createRenderBatcher(scheduleNextBatch, allowKeepAlive) {
  let runNextFrame = false;
  let useDefaultElapsed = true;
  const state2 = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  const flagRunNextFrame = () => runNextFrame = true;
  const steps = stepsOrder.reduce((acc, key) => {
    acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : void 0);
    return acc;
  }, {});
  const { read, resolveKeyframes, update, preRender, render, postRender } = steps;
  const processBatch = () => {
    const timestamp = MotionGlobalConfig.useManualTiming ? state2.timestamp : performance.now();
    runNextFrame = false;
    if (!MotionGlobalConfig.useManualTiming) {
      state2.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp - state2.timestamp, maxElapsed), 1);
    }
    state2.timestamp = timestamp;
    state2.isProcessing = true;
    read.process(state2);
    resolveKeyframes.process(state2);
    update.process(state2);
    preRender.process(state2);
    render.process(state2);
    postRender.process(state2);
    state2.isProcessing = false;
    if (runNextFrame && allowKeepAlive) {
      useDefaultElapsed = false;
      scheduleNextBatch(processBatch);
    }
  };
  const wake = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!state2.isProcessing) {
      scheduleNextBatch(processBatch);
    }
  };
  const schedule = stepsOrder.reduce((acc, key) => {
    const step = steps[key];
    acc[key] = (process2, keepAlive = false, immediate = false) => {
      if (!runNextFrame)
        wake();
      return step.schedule(process2, keepAlive, immediate);
    };
    return acc;
  }, {});
  const cancel = (process2) => {
    for (let i11 = 0; i11 < stepsOrder.length; i11++) {
      steps[stepsOrder[i11]].cancel(process2);
    }
  };
  return { schedule, cancel, state: state2, steps };
}
var maxElapsed;
var init_batcher = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/batcher.mjs"() {
    init_order();
    init_render_step();
    init_global_config();
    maxElapsed = 40;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs
var noop;
var init_noop = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs"() {
    noop = /* @__NO_SIDE_EFFECTS__ */ (any) => any;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/frame.mjs
var frame, cancelFrame, frameData, frameSteps;
var init_frame = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/frame.mjs"() {
    init_batcher();
    init_noop();
    ({ schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : noop, true));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/LazyContext.mjs
var import_react180, LazyContext;
var init_LazyContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/LazyContext.mjs"() {
    "use client";
    import_react180 = __toESM(require_react(), 1);
    LazyContext = (0, import_react180.createContext)({ strict: false });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs
var featureProps, featureDefinitions;
var init_definitions = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs"() {
    featureProps = {
      animation: [
        "animate",
        "variants",
        "whileHover",
        "whileTap",
        "exit",
        "whileInView",
        "whileFocus",
        "whileDrag"
      ],
      exit: ["exit"],
      drag: ["drag", "dragControls"],
      focus: ["whileFocus"],
      hover: ["whileHover", "onHoverStart", "onHoverEnd"],
      tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
      pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
      inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
      layout: ["layout", "layoutId"]
    };
    featureDefinitions = {};
    for (const key in featureProps) {
      featureDefinitions[key] = {
        isEnabled: (props) => featureProps[key].some((name2) => !!props[name2])
      };
    }
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/load-features.mjs
function loadFeatures(features) {
  for (const key in features) {
    featureDefinitions[key] = {
      ...featureDefinitions[key],
      ...features[key]
    };
  }
}
var init_load_features = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/load-features.mjs"() {
    init_definitions();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/valid-prop.mjs
function isValidMotionProp(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || key.startsWith("onLayout") || validMotionProps.has(key);
}
var validMotionProps;
var init_valid_prop = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/valid-prop.mjs"() {
    validMotionProps = /* @__PURE__ */ new Set([
      "animate",
      "exit",
      "variants",
      "initial",
      "style",
      "values",
      "variants",
      "transition",
      "transformTemplate",
      "custom",
      "inherit",
      "onBeforeLayoutMeasure",
      "onAnimationStart",
      "onAnimationComplete",
      "onUpdate",
      "onDragStart",
      "onDrag",
      "onDragEnd",
      "onMeasureDragConstraints",
      "onDirectionLock",
      "onDragTransitionEnd",
      "_dragX",
      "_dragY",
      "onHoverStart",
      "onHoverEnd",
      "onViewportEnter",
      "onViewportLeave",
      "globalTapTarget",
      "ignoreStrict",
      "viewport"
    ]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/filter-props.mjs
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = (key) => key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
}
function filterProps2(props, isDom, forwardMotionProps) {
  const filteredProps = {};
  for (const key in props) {
    if (key === "values" && typeof props.values === "object")
      continue;
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}
var shouldForward;
var init_filter_props2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/filter-props.mjs"() {
    init_valid_prop();
    shouldForward = (key) => !isValidMotionProp(key);
    try {
      loadExternalIsValidProp(__require("@emotion/is-prop-valid").default);
    } catch {
    }
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-proxy.mjs
function createDOMMotionComponentProxy(componentFactory) {
  if (typeof Proxy === "undefined") {
    return componentFactory;
  }
  const componentCache = /* @__PURE__ */ new Map();
  const deprecatedFactoryFunction = (...args) => {
    if (false) {
      warnOnce(false, "motion() is deprecated. Use motion.create() instead.");
    }
    return componentFactory(...args);
  };
  return new Proxy(deprecatedFactoryFunction, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => {
      if (key === "create")
        return componentFactory;
      if (!componentCache.has(key)) {
        componentCache.set(key, componentFactory(key));
      }
      return componentCache.get(key);
    }
  });
}
var init_create_proxy = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-proxy.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react181, MotionContext;
var init_MotionContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/index.mjs"() {
    "use client";
    import_react181 = __toESM(require_react(), 1);
    MotionContext = /* @__PURE__ */ (0, import_react181.createContext)({});
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v5) {
  return v5 !== null && typeof v5 === "object" && typeof v5.start === "function";
}
var init_is_animation_controls = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs
function isVariantLabel(v5) {
  return typeof v5 === "string" || Array.isArray(v5);
}
var init_is_variant_label = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs
var variantPriorityOrder, variantProps;
var init_variant_props = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs"() {
    variantPriorityOrder = [
      "animate",
      "whileInView",
      "whileFocus",
      "whileHover",
      "whileTap",
      "whileDrag",
      "exit"
    ];
    variantProps = ["initial", ...variantPriorityOrder];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs
function isControllingVariants(props) {
  return isAnimationControls(props.animate) || variantProps.some((name2) => isVariantLabel(props[name2]));
}
function isVariantNode(props) {
  return Boolean(isControllingVariants(props) || props.variants);
}
var init_is_controlling_variants = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs"() {
    init_is_animation_controls();
    init_is_variant_label();
    init_variant_props();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (isControllingVariants(props)) {
    const { initial, animate } = props;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate) ? animate : void 0
    };
  }
  return props.inherit !== false ? context : {};
}
var init_utils7 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/utils.mjs"() {
    init_is_controlling_variants();
    init_is_variant_label();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  const { initial, animate } = getCurrentTreeVariants(props, (0, import_react182.useContext)(MotionContext));
  return (0, import_react182.useMemo)(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}
var import_react182;
var init_create = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/create.mjs"() {
    import_react182 = __toESM(require_react(), 1);
    init_MotionContext();
    init_utils7();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/symbol.mjs
var motionComponentSymbol;
var init_symbol = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/symbol.mjs"() {
    motionComponentSymbol = Symbol.for("motionComponentSymbol");
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return ref && typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}
var init_is_ref_object = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-ref-object.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement, externalRef) {
  return (0, import_react183.useCallback)(
    (instance) => {
      if (instance) {
        visualState.onMount && visualState.onMount(instance);
      }
      if (visualElement) {
        if (instance) {
          visualElement.mount(instance);
        } else {
          visualElement.unmount();
        }
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}
var import_react183;
var init_use_motion_ref = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-motion-ref.mjs"() {
    import_react183 = __toESM(require_react(), 1);
    init_is_ref_object();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var camelToDash;
var init_camel_to_dash = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs"() {
    camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs
var optimizedAppearDataId, optimizedAppearDataAttribute;
var init_data_id = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs"() {
    init_camel_to_dash();
    optimizedAppearDataId = "framerAppearId";
    optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react184, SwitchLayoutGroupContext;
var init_SwitchLayoutGroupContext = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs"() {
    "use client";
    import_react184 = __toESM(require_react(), 1);
    SwitchLayoutGroupContext = (0, import_react184.createContext)({});
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/microtask.mjs
var microtask, cancelMicrotask;
var init_microtask = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/microtask.mjs"() {
    init_batcher();
    ({ schedule: microtask, cancel: cancelMicrotask } = /* @__PURE__ */ createRenderBatcher(queueMicrotask, false));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component3, visualState, props, createVisualElement, ProjectionNodeConstructor) {
  const { visualElement: parent } = (0, import_react185.useContext)(MotionContext);
  const lazyContext = (0, import_react185.useContext)(LazyContext);
  const presenceContext = (0, import_react185.useContext)(PresenceContext);
  const reducedMotionConfig = (0, import_react185.useContext)(MotionConfigContext).reducedMotion;
  const visualElementRef = (0, import_react185.useRef)(null);
  createVisualElement = createVisualElement || lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component3, {
      visualState,
      parent,
      props,
      presenceContext,
      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,
      reducedMotionConfig
    });
  }
  const visualElement = visualElementRef.current;
  const initialLayoutGroupConfig = (0, import_react185.useContext)(SwitchLayoutGroupContext);
  if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === "html" || visualElement.type === "svg")) {
    createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);
  }
  const isMounted = (0, import_react185.useRef)(false);
  (0, import_react185.useInsertionEffect)(() => {
    if (visualElement && isMounted.current) {
      visualElement.update(props, presenceContext);
    }
  });
  const optimisedAppearId = props[optimizedAppearDataAttribute];
  const wantsHandoff = (0, import_react185.useRef)(Boolean(optimisedAppearId) && !window.MotionHandoffIsComplete?.(optimisedAppearId) && window.MotionHasOptimisedAnimation?.(optimisedAppearId));
  useIsomorphicLayoutEffect(() => {
    if (!visualElement)
      return;
    isMounted.current = true;
    window.MotionIsMounted = true;
    visualElement.updateFeatures();
    microtask.render(visualElement.render);
    if (wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
  });
  (0, import_react185.useEffect)(() => {
    if (!visualElement)
      return;
    if (!wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
    if (wantsHandoff.current) {
      queueMicrotask(() => {
        window.MotionHandoffMarkAsComplete?.(optimisedAppearId);
      });
      wantsHandoff.current = false;
    }
  });
  return visualElement;
}
function createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {
  const { layoutId, layout: layout3, drag: drag3, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade } = props;
  visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props["data-framer-portal-id"] ? void 0 : getClosestProjectingNode(visualElement.parent));
  visualElement.projection.setOptions({
    layoutId,
    layout: layout3,
    alwaysMeasureLayout: Boolean(drag3) || dragConstraints && isRefObject(dragConstraints),
    visualElement,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout3 === "string" ? layout3 : "both",
    initialPromotionConfig,
    crossfade: layoutCrossfade,
    layoutScroll,
    layoutRoot
  });
}
function getClosestProjectingNode(visualElement) {
  if (!visualElement)
    return void 0;
  return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode(visualElement.parent);
}
var import_react185;
var init_use_visual_element = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-element.mjs"() {
    import_react185 = __toESM(require_react(), 1);
    init_data_id();
    init_LazyContext();
    init_MotionConfigContext();
    init_MotionContext();
    init_PresenceContext();
    init_SwitchLayoutGroupContext();
    init_is_ref_object();
    init_use_isomorphic_effect2();
    init_microtask();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs
var warning, invariant;
var init_errors = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs"() {
    warning = () => {
    };
    invariant = () => {
    };
    if (false) {
      warning = (check2, message) => {
        if (!check2 && typeof console !== "undefined") {
          console.warn(message);
        }
      };
      invariant = (check2, message) => {
        if (!check2) {
          throw new Error(message);
        }
      };
    }
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/index.mjs
function createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component: Component3 }) {
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    let MeasureLayout3;
    const configAndProps = {
      ...(0, import_react186.useContext)(MotionConfigContext),
      ...props,
      layoutId: useLayoutId(props)
    };
    const { isStatic } = configAndProps;
    const context = useCreateMotionContext(props);
    const visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser3) {
      useStrictMode(configAndProps, preloadedFeatures);
      const layoutProjection = getProjectionFunctionality(configAndProps);
      MeasureLayout3 = layoutProjection.MeasureLayout;
      context.visualElement = useVisualElement(Component3, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);
    }
    return (0, import_jsx_runtime130.jsxs)(MotionContext.Provider, { value: context, children: [MeasureLayout3 && context.visualElement ? (0, import_jsx_runtime130.jsx)(MeasureLayout3, { visualElement: context.visualElement, ...configAndProps }) : null, useRender(Component3, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] });
  }
  MotionComponent.displayName = `motion.${typeof Component3 === "string" ? Component3 : `create(${Component3.displayName ?? Component3.name ?? ""})`}`;
  const ForwardRefMotionComponent = (0, import_react186.forwardRef)(MotionComponent);
  ForwardRefMotionComponent[motionComponentSymbol] = Component3;
  return ForwardRefMotionComponent;
}
function useLayoutId({ layoutId }) {
  const layoutGroupId = (0, import_react186.useContext)(LayoutGroupContext).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}
function useStrictMode(configAndProps, preloadedFeatures) {
  const isStrict = (0, import_react186.useContext)(LazyContext).strict;
  if (false) {
    const strictMessage = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);
  }
}
function getProjectionFunctionality(props) {
  const { drag: drag3, layout: layout3 } = featureDefinitions;
  if (!drag3 && !layout3)
    return {};
  const combined = { ...drag3, ...layout3 };
  return {
    MeasureLayout: drag3?.isEnabled(props) || layout3?.isEnabled(props) ? combined.MeasureLayout : void 0,
    ProjectionNode: combined.ProjectionNode
  };
}
var import_jsx_runtime130, import_react186;
var init_motion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/index.mjs"() {
    "use client";
    import_jsx_runtime130 = __toESM(require_jsx_runtime(), 1);
    import_react186 = __toESM(require_react(), 1);
    init_LayoutGroupContext();
    init_LazyContext();
    init_MotionConfigContext();
    init_MotionContext();
    init_create();
    init_is_browser();
    init_definitions();
    init_load_features();
    init_symbol();
    init_use_motion_ref();
    init_use_visual_element();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
var checkStringStartsWith, isCSSVariableName, startsAsVariableToken, isCSSVariableToken, singleCssVariableRegex;
var init_is_css_variable = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs"() {
    checkStringStartsWith = (token) => (key) => typeof key === "string" && key.startsWith(token);
    isCSSVariableName = /* @__PURE__ */ checkStringStartsWith("--");
    startsAsVariableToken = /* @__PURE__ */ checkStringStartsWith("var(--");
    isCSSVariableToken = (value) => {
      const startsWithToken = startsAsVariableToken(value);
      if (!startsWithToken)
        return false;
      return singleCssVariableRegex.test(value.split("/*")[0].trim());
    };
    singleCssVariableRegex = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs
function addScaleCorrector(correctors) {
  for (const key in correctors) {
    scaleCorrectors[key] = correctors[key];
    if (isCSSVariableName(key)) {
      scaleCorrectors[key].isCSSVariable = true;
    }
  }
}
var scaleCorrectors;
var init_scale_correction = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs"() {
    init_is_css_variable();
    scaleCorrectors = {};
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-transform.mjs
var transformPropOrder, transformProps;
var init_keys_transform = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-transform.mjs"() {
    transformPropOrder = [
      "transformPerspective",
      "x",
      "y",
      "z",
      "translateX",
      "translateY",
      "translateZ",
      "scale",
      "scaleX",
      "scaleY",
      "rotate",
      "rotateX",
      "rotateY",
      "rotateZ",
      "skew",
      "skewX",
      "skewY"
    ];
    transformProps = new Set(transformPropOrder);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, { layout: layout3, layoutId }) {
  return transformProps.has(key) || key.startsWith("origin") || (layout3 || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}
var init_is_forced_motion_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs"() {
    init_scale_correction();
    init_keys_transform();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue;
var init_is_motion_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/utils/is-motion-value.mjs"() {
    isMotionValue = (value) => Boolean(value && value.getVelocity);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType;
var init_get_as_type = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs"() {
    getValueAsType = (value, type) => {
      return type && typeof value === "number" ? type.transform(value) : value;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/clamp.mjs
var clamp2;
var init_clamp2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/clamp.mjs"() {
    clamp2 = (min, max, v5) => {
      if (v5 > max)
        return max;
      if (v5 < min)
        return min;
      return v5;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/index.mjs
var number, alpha2, scale;
var init_numbers = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/index.mjs"() {
    init_clamp2();
    number = {
      test: (v5) => typeof v5 === "number",
      parse: parseFloat,
      transform: (v5) => v5
    };
    alpha2 = {
      ...number,
      transform: (v5) => clamp2(0, 1, v5)
    };
    scale = {
      ...number,
      default: 1
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/units.mjs
var createUnitType, degrees, percent, px2, vh, vw, progressPercentage;
var init_units = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/units.mjs"() {
    createUnitType = (unit) => ({
      test: (v5) => typeof v5 === "string" && v5.endsWith(unit) && v5.split(" ").length === 1,
      parse: parseFloat,
      transform: (v5) => `${v5}${unit}`
    });
    degrees = /* @__PURE__ */ createUnitType("deg");
    percent = /* @__PURE__ */ createUnitType("%");
    px2 = /* @__PURE__ */ createUnitType("px");
    vh = /* @__PURE__ */ createUnitType("vh");
    vw = /* @__PURE__ */ createUnitType("vw");
    progressPercentage = {
      ...percent,
      parse: (v5) => percent.parse(v5) / 100,
      transform: (v5) => percent.transform(v5 * 100)
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number-browser.mjs
var browserNumberValueTypes;
var init_number_browser = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number-browser.mjs"() {
    init_units();
    browserNumberValueTypes = {
      // Border props
      borderWidth: px2,
      borderTopWidth: px2,
      borderRightWidth: px2,
      borderBottomWidth: px2,
      borderLeftWidth: px2,
      borderRadius: px2,
      radius: px2,
      borderTopLeftRadius: px2,
      borderTopRightRadius: px2,
      borderBottomRightRadius: px2,
      borderBottomLeftRadius: px2,
      // Positioning props
      width: px2,
      maxWidth: px2,
      height: px2,
      maxHeight: px2,
      top: px2,
      right: px2,
      bottom: px2,
      left: px2,
      // Spacing props
      padding: px2,
      paddingTop: px2,
      paddingRight: px2,
      paddingBottom: px2,
      paddingLeft: px2,
      margin: px2,
      marginTop: px2,
      marginRight: px2,
      marginBottom: px2,
      marginLeft: px2,
      // Misc
      backgroundPositionX: px2,
      backgroundPositionY: px2
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/transform.mjs
var transformValueTypes;
var init_transform = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/transform.mjs"() {
    init_numbers();
    init_units();
    transformValueTypes = {
      rotate: degrees,
      rotateX: degrees,
      rotateY: degrees,
      rotateZ: degrees,
      scale,
      scaleX: scale,
      scaleY: scale,
      scaleZ: scale,
      skew: degrees,
      skewX: degrees,
      skewY: degrees,
      distance: px2,
      translateX: px2,
      translateY: px2,
      translateZ: px2,
      x: px2,
      y: px2,
      z: px2,
      perspective: px2,
      transformPerspective: px2,
      opacity: alpha2,
      originX: progressPercentage,
      originY: progressPercentage,
      originZ: px2
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int;
var init_type_int = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-int.mjs"() {
    init_numbers();
    int = {
      ...number,
      transform: Math.round
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes;
var init_number = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number.mjs"() {
    init_numbers();
    init_units();
    init_number_browser();
    init_transform();
    init_type_int();
    numberValueTypes = {
      ...browserNumberValueTypes,
      ...transformValueTypes,
      zIndex: int,
      size: px2,
      // SVG
      fillOpacity: alpha2,
      strokeOpacity: alpha2,
      numOctaves: int
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs
function buildTransform(latestValues, transform, transformTemplate) {
  let transformString = "";
  let transformIsDefault = true;
  for (let i11 = 0; i11 < numTransforms; i11++) {
    const key = transformPropOrder[i11];
    const value = latestValues[key];
    if (value === void 0)
      continue;
    let valueIsDefault = true;
    if (typeof value === "number") {
      valueIsDefault = value === (key.startsWith("scale") ? 1 : 0);
    } else {
      valueIsDefault = parseFloat(value) === 0;
    }
    if (!valueIsDefault || transformTemplate) {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (!valueIsDefault) {
        transformIsDefault = false;
        const transformName = translateAlias[key] || key;
        transformString += `${transformName}(${valueAsType}) `;
      }
      if (transformTemplate) {
        transform[key] = valueAsType;
      }
    }
  }
  transformString = transformString.trim();
  if (transformTemplate) {
    transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
  } else if (transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
var translateAlias, numTransforms;
var init_build_transform = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs"() {
    init_get_as_type();
    init_number();
    init_keys_transform();
    translateAlias = {
      x: "translateX",
      y: "translateY",
      z: "translateZ",
      transformPerspective: "perspective"
    };
    numTransforms = transformPropOrder.length;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state2, latestValues, transformTemplate) {
  const { style, vars, transformOrigin } = state2;
  let hasTransform3 = false;
  let hasTransformOrigin = false;
  for (const key in latestValues) {
    const value = latestValues[key];
    if (transformProps.has(key)) {
      hasTransform3 = true;
      continue;
    } else if (isCSSVariableName(key)) {
      vars[key] = value;
      continue;
    } else {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (key.startsWith("origin")) {
        hasTransformOrigin = true;
        transformOrigin[key] = valueAsType;
      } else {
        style[key] = valueAsType;
      }
    }
  }
  if (!latestValues.transform) {
    if (hasTransform3 || transformTemplate) {
      style.transform = buildTransform(latestValues, state2.transform, transformTemplate);
    } else if (style.transform) {
      style.transform = "none";
    }
  }
  if (hasTransformOrigin) {
    const { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}
var init_build_styles = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs"() {
    init_is_css_variable();
    init_get_as_type();
    init_number();
    init_build_transform();
    init_keys_transform();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState;
var init_create_render_state = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/create-render-state.mjs"() {
    createHtmlRenderState = () => ({
      style: {},
      transform: {},
      transformOrigin: {},
      vars: {}
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (const key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues({ transformTemplate }, visualState) {
  return (0, import_react187.useMemo)(() => {
    const state2 = createHtmlRenderState();
    buildHTMLStyles(state2, visualState, transformTemplate);
    return Object.assign({}, state2.vars, state2.style);
  }, [visualState]);
}
function useStyle(props, visualState) {
  const styleProp = props.style || {};
  const style = {};
  copyRawValuesOnly(style, styleProp, props);
  Object.assign(style, useInitialMotionValues(props, visualState));
  return style;
}
function useHTMLProps(props, visualState) {
  const htmlProps = {};
  const style = useStyle(props, visualState);
  if (props.drag && props.dragListener !== false) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`;
  }
  if (props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap)) {
    htmlProps.tabIndex = 0;
  }
  htmlProps.style = style;
  return htmlProps;
}
var import_react187;
var init_use_props2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/use-props.mjs"() {
    import_react187 = __toESM(require_react(), 1);
    init_is_forced_motion_value();
    init_is_motion_value();
    init_build_styles();
    init_create_render_state();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements;
var init_lowercase_elements = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/lowercase-elements.mjs"() {
    lowercaseSVGElements = [
      "animate",
      "circle",
      "defs",
      "desc",
      "ellipse",
      "g",
      "image",
      "line",
      "filter",
      "marker",
      "mask",
      "metadata",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "rect",
      "stop",
      "switch",
      "symbol",
      "svg",
      "text",
      "tspan",
      "use",
      "view"
    ];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component3) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component3 !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component3.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component3) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/u.test(Component3)
  ) {
    return true;
  }
  return false;
}
var init_is_svg_component = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs"() {
    init_lowercase_elements();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs
function buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {
  attrs.pathLength = 1;
  const keys3 = useDashCase ? dashKeys : camelKeys;
  attrs[keys3.offset] = px2.transform(-offset);
  const pathLength = px2.transform(length);
  const pathSpacing = px2.transform(spacing);
  attrs[keys3.array] = `${pathLength} ${pathSpacing}`;
}
var dashKeys, camelKeys;
var init_path2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs"() {
    init_units();
    dashKeys = {
      offset: "stroke-dashoffset",
      array: "stroke-dasharray"
    };
    camelKeys = {
      offset: "strokeDashoffset",
      array: "strokeDasharray"
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset, size) {
  return typeof origin === "string" ? origin : px2.transform(offset + size * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return `${pxOriginX} ${pxOriginY}`;
}
var init_transform_origin = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/transform-origin.mjs"() {
    init_units();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state2, {
  attrX,
  attrY,
  attrScale,
  originX,
  originY,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, isSVGTag3, transformTemplate) {
  buildHTMLStyles(state2, latest, transformTemplate);
  if (isSVGTag3) {
    if (state2.style.viewBox) {
      state2.attrs.viewBox = state2.style.viewBox;
    }
    return;
  }
  state2.attrs = state2.style;
  state2.style = {};
  const { attrs, style, dimensions } = state2;
  if (attrs.transform) {
    if (dimensions)
      style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {
    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (attrScale !== void 0)
    attrs.scale = attrScale;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}
var init_build_attrs = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs"() {
    init_build_styles();
    init_path2();
    init_transform_origin();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState;
var init_create_render_state2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/create-render-state.mjs"() {
    init_create_render_state();
    createSvgRenderState = () => ({
      ...createHtmlRenderState(),
      attrs: {}
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs
var isSVGTag;
var init_is_svg_tag = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs"() {
    isSVGTag = (tag) => typeof tag === "string" && tag.toLowerCase() === "svg";
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState, _isStatic, Component3) {
  const visualProps = (0, import_react188.useMemo)(() => {
    const state2 = createSvgRenderState();
    buildSVGAttrs(state2, visualState, isSVGTag(Component3), props.transformTemplate);
    return {
      ...state2.attrs,
      style: { ...state2.style }
    };
  }, [visualState]);
  if (props.style) {
    const rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}
var import_react188;
var init_use_props3 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/use-props.mjs"() {
    import_react188 = __toESM(require_react(), 1);
    init_use_props2();
    init_build_attrs();
    init_create_render_state2();
    init_is_svg_tag();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps = false) {
  const useRender = (Component3, props, ref, { latestValues }, isStatic) => {
    const useVisualProps = isSVGComponent(Component3) ? useSVGProps : useHTMLProps;
    const visualProps = useVisualProps(props, latestValues, isStatic, Component3);
    const filteredProps = filterProps2(props, typeof Component3 === "string", forwardMotionProps);
    const elementProps = Component3 !== import_react189.Fragment ? { ...filteredProps, ...visualProps, ref } : {};
    const { children } = props;
    const renderedChildren = (0, import_react189.useMemo)(() => isMotionValue(children) ? children.get() : children, [children]);
    return (0, import_react189.createElement)(Component3, {
      ...elementProps,
      children: renderedChildren
    });
  };
  return useRender;
}
var import_react189;
var init_use_render = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs"() {
    import_react189 = __toESM(require_react(), 1);
    init_use_props2();
    init_filter_props2();
    init_is_svg_component();
    init_use_props3();
    init_is_motion_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs
function getValueState(visualElement) {
  const state2 = [{}, {}];
  visualElement?.values.forEach((value, key) => {
    state2[0][key] = value.get();
    state2[1][key] = value.getVelocity();
  });
  return state2;
}
function resolveVariantFromProps(props, definition, custom2, visualElement) {
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom2 !== void 0 ? custom2 : props.custom, current, velocity);
  }
  if (typeof definition === "string") {
    definition = props.variants && props.variants[definition];
  }
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom2 !== void 0 ? custom2 : props.custom, current, velocity);
  }
  return definition;
}
var init_resolve_variants = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget;
var init_is_keyframes_target = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs"() {
    isKeyframesTarget = (v5) => {
      return Array.isArray(v5);
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue, resolveFinalValueInKeyframes;
var init_resolve_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/resolve-value.mjs"() {
    init_is_keyframes_target();
    isCustomValue = (v5) => {
      return Boolean(v5 && typeof v5 === "object" && v5.mix && v5.toValue);
    };
    resolveFinalValueInKeyframes = (v5) => {
      return isKeyframesTarget(v5) ? v5[v5.length - 1] || 0 : v5;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  const unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}
var init_resolve_motion_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/utils/resolve-motion-value.mjs"() {
    init_resolve_value();
    init_is_motion_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState({ scrapeMotionValuesFromProps: scrapeMotionValuesFromProps5, createRenderState, onUpdate }, props, context, presenceContext) {
  const state2 = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps5),
    renderState: createRenderState()
  };
  if (onUpdate) {
    state2.onMount = (instance) => onUpdate({ props, current: instance, ...state2 });
    state2.onUpdate = (visualElement) => onUpdate(visualElement);
  }
  return state2;
}
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  const values2 = {};
  const motionValues = scrapeMotionValues(props, {});
  for (const key in motionValues) {
    values2[key] = resolveMotionValue(motionValues[key]);
  }
  let { initial, animate } = props;
  const isControllingVariants$1 = isControllingVariants(props);
  const isVariantNode$1 = isVariantNode(props);
  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {
    if (initial === void 0)
      initial = context.initial;
    if (animate === void 0)
      animate = context.animate;
  }
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;
  const variantToSet = isInitialAnimationBlocked ? animate : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    const list3 = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    for (let i11 = 0; i11 < list3.length; i11++) {
      const resolved = resolveVariantFromProps(props, list3[i11]);
      if (resolved) {
        const { transitionEnd, transition, ...target } = resolved;
        for (const key in target) {
          let valueTarget = target[key];
          if (Array.isArray(valueTarget)) {
            const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
            valueTarget = valueTarget[index];
          }
          if (valueTarget !== null) {
            values2[key] = valueTarget;
          }
        }
        for (const key in transitionEnd) {
          values2[key] = transitionEnd[key];
        }
      }
    }
  }
  return values2;
}
var import_react190, makeUseVisualState;
var init_use_visual_state = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-state.mjs"() {
    import_react190 = __toESM(require_react(), 1);
    init_is_animation_controls();
    init_MotionContext();
    init_PresenceContext();
    init_is_controlling_variants();
    init_resolve_variants();
    init_use_constant();
    init_resolve_motion_value();
    makeUseVisualState = (config) => (props, isStatic) => {
      const context = (0, import_react190.useContext)(MotionContext);
      const presenceContext = (0, import_react190.useContext)(PresenceContext);
      const make = () => makeState(config, props, context, presenceContext);
      return isStatic ? make() : useConstant(make);
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props, prevProps, visualElement) {
  const { style } = props;
  const newValues = {};
  for (const key in style) {
    if (isMotionValue(style[key]) || prevProps.style && isMotionValue(prevProps.style[key]) || isForcedMotionValue(key, props) || visualElement?.getValue(key)?.liveStyle !== void 0) {
      newValues[key] = style[key];
    }
  }
  return newValues;
}
var init_scrape_motion_values = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs"() {
    init_is_forced_motion_value();
    init_is_motion_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig;
var init_config_motion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/config-motion.mjs"() {
    init_use_visual_state();
    init_scrape_motion_values();
    init_create_render_state();
    htmlMotionConfig = {
      useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps,
        createRenderState: createHtmlRenderState
      })
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/measure.mjs
function updateSVGDimensions(instance, renderState) {
  try {
    renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
  } catch (e12) {
    renderState.dimensions = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
  }
}
var init_measure = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/measure.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (const key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}
var init_render = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes;
var init_camel_case_attrs = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs"() {
    camelCaseAttributes = /* @__PURE__ */ new Set([
      "baseFrequency",
      "diffuseConstant",
      "kernelMatrix",
      "kernelUnitLength",
      "keySplines",
      "keyTimes",
      "limitingConeAngle",
      "markerHeight",
      "markerWidth",
      "numOctaves",
      "targetX",
      "targetY",
      "surfaceScale",
      "specularConstant",
      "specularExponent",
      "stdDeviation",
      "tableValues",
      "viewBox",
      "gradientTransform",
      "pathLength",
      "startOffset",
      "textLength",
      "lengthAdjust"
    ]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (const key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}
var init_render2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs"() {
    init_camel_to_dash();
    init_render();
    init_camel_case_attrs();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props, prevProps, visualElement) {
  const newValues = scrapeMotionValuesFromProps(props, prevProps, visualElement);
  for (const key in props) {
    if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {
      const targetKey = transformPropOrder.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}
var init_scrape_motion_values2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs"() {
    init_is_motion_value();
    init_keys_transform();
    init_scrape_motion_values();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/config-motion.mjs
var layoutProps, svgMotionConfig;
var init_config_motion2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/config-motion.mjs"() {
    init_use_visual_state();
    init_keys_transform();
    init_build_attrs();
    init_create_render_state2();
    init_is_svg_tag();
    init_measure();
    init_render2();
    init_scrape_motion_values2();
    init_frame();
    layoutProps = ["x", "y", "width", "height", "cx", "cy", "r"];
    svgMotionConfig = {
      useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
        createRenderState: createSvgRenderState,
        onUpdate: ({ props, prevProps, current, renderState, latestValues }) => {
          if (!current)
            return;
          let hasTransform3 = !!props.drag;
          if (!hasTransform3) {
            for (const key in latestValues) {
              if (transformProps.has(key)) {
                hasTransform3 = true;
                break;
              }
            }
          }
          if (!hasTransform3)
            return;
          let needsMeasure = !prevProps;
          if (prevProps) {
            for (let i11 = 0; i11 < layoutProps.length; i11++) {
              const key = layoutProps[i11];
              if (props[key] !== prevProps[key]) {
                needsMeasure = true;
              }
            }
          }
          if (!needsMeasure)
            return;
          frame.read(() => {
            updateSVGDimensions(current, renderState);
            frame.render(() => {
              buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);
              renderSVG(current, renderState);
            });
          });
        }
      })
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-factory.mjs
function createMotionComponentFactory(preloadedFeatures, createVisualElement) {
  return function createMotionComponent3(Component3, { forwardMotionProps } = { forwardMotionProps: false }) {
    const baseConfig = isSVGComponent(Component3) ? svgMotionConfig : htmlMotionConfig;
    const config = {
      ...baseConfig,
      preloadedFeatures,
      useRender: createUseRender(forwardMotionProps),
      createVisualElement,
      Component: Component3
    };
    return createRendererMotionComponent(config);
  };
}
var init_create_factory = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-factory.mjs"() {
    init_motion();
    init_use_render();
    init_is_svg_component();
    init_config_motion();
    init_config_motion2();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs
function resolveVariant(visualElement, definition, custom2) {
  const props = visualElement.getProps();
  return resolveVariantFromProps(props, definition, custom2 !== void 0 ? custom2 : props.custom, visualElement);
}
var init_resolve_dynamic_variants = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs"() {
    init_resolve_variants();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-position.mjs
var positionalKeys;
var init_keys_position = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-position.mjs"() {
    init_keys_transform();
    positionalKeys = /* @__PURE__ */ new Set([
      "width",
      "height",
      "top",
      "left",
      "right",
      "bottom",
      ...transformPropOrder
    ]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/sync-time.mjs
function clearTime() {
  now = void 0;
}
var now, time;
var init_sync_time = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/frameloop/sync-time.mjs"() {
    init_frame();
    init_global_config();
    time = {
      now: () => {
        if (now === void 0) {
          time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());
        }
        return now;
      },
      set: (newTime) => {
        now = newTime;
        queueMicrotask(clearTime);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/array.mjs
function addUniqueItem(arr, item3) {
  if (arr.indexOf(item3) === -1)
    arr.push(item3);
}
function removeItem(arr, item3) {
  const index = arr.indexOf(item3);
  if (index > -1)
    arr.splice(index, 1);
}
var init_array = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/array.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/subscription-manager.mjs
var SubscriptionManager;
var init_subscription_manager = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/subscription-manager.mjs"() {
    init_array();
    SubscriptionManager = class {
      constructor() {
        this.subscriptions = [];
      }
      add(handler2) {
        addUniqueItem(this.subscriptions, handler2);
        return () => removeItem(this.subscriptions, handler2);
      }
      notify(a12, b4, c13) {
        const numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions)
          return;
        if (numSubscriptions === 1) {
          this.subscriptions[0](a12, b4, c13);
        } else {
          for (let i11 = 0; i11 < numSubscriptions; i11++) {
            const handler2 = this.subscriptions[i11];
            handler2 && handler2(a12, b4, c13);
          }
        }
      }
      getSize() {
        return this.subscriptions.length;
      }
      clear() {
        this.subscriptions.length = 0;
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}
var init_velocity_per_second = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/velocity-per-second.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/value/index.mjs
function motionValue(init, options) {
  return new MotionValue(init, options);
}
var MAX_VELOCITY_DELTA, isFloat, collectMotionValues, MotionValue;
var init_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/value/index.mjs"() {
    init_sync_time();
    init_frame();
    init_subscription_manager();
    init_velocity_per_second();
    MAX_VELOCITY_DELTA = 30;
    isFloat = (value) => {
      return !isNaN(parseFloat(value));
    };
    collectMotionValues = {
      current: void 0
    };
    MotionValue = class {
      /**
       * @param init - The initiating value
       * @param config - Optional configuration options
       *
       * -  `transformer`: A function to transform incoming values with.
       */
      constructor(init, options = {}) {
        this.version = "12.7.4";
        this.canTrackVelocity = null;
        this.events = {};
        this.updateAndNotify = (v5, render = true) => {
          const currentTime = time.now();
          if (this.updatedAt !== currentTime) {
            this.setPrevFrameValue();
          }
          this.prev = this.current;
          this.setCurrent(v5);
          if (this.current !== this.prev && this.events.change) {
            this.events.change.notify(this.current);
          }
          if (render && this.events.renderRequest) {
            this.events.renderRequest.notify(this.current);
          }
        };
        this.hasAnimated = false;
        this.setCurrent(init);
        this.owner = options.owner;
      }
      setCurrent(current) {
        this.current = current;
        this.updatedAt = time.now();
        if (this.canTrackVelocity === null && current !== void 0) {
          this.canTrackVelocity = isFloat(this.current);
        }
      }
      setPrevFrameValue(prevFrameValue = this.current) {
        this.prevFrameValue = prevFrameValue;
        this.prevUpdatedAt = this.updatedAt;
      }
      /**
       * Adds a function that will be notified when the `MotionValue` is updated.
       *
       * It returns a function that, when called, will cancel the subscription.
       *
       * When calling `onChange` inside a React component, it should be wrapped with the
       * `useEffect` hook. As it returns an unsubscribe function, this should be returned
       * from the `useEffect` function to ensure you don't add duplicate subscribers..
       *
       * ```jsx
       * export const MyComponent = () => {
       *   const x = useMotionValue(0)
       *   const y = useMotionValue(0)
       *   const opacity = useMotionValue(1)
       *
       *   useEffect(() => {
       *     function updateOpacity() {
       *       const maxXY = Math.max(x.get(), y.get())
       *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
       *       opacity.set(newOpacity)
       *     }
       *
       *     const unsubscribeX = x.on("change", updateOpacity)
       *     const unsubscribeY = y.on("change", updateOpacity)
       *
       *     return () => {
       *       unsubscribeX()
       *       unsubscribeY()
       *     }
       *   }, [])
       *
       *   return <motion.div style={{ x }} />
       * }
       * ```
       *
       * @param subscriber - A function that receives the latest value.
       * @returns A function that, when called, will cancel this subscription.
       *
       * @deprecated
       */
      onChange(subscription) {
        if (false) {
          warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on("change", callback).`);
        }
        return this.on("change", subscription);
      }
      on(eventName, callback) {
        if (!this.events[eventName]) {
          this.events[eventName] = new SubscriptionManager();
        }
        const unsubscribe = this.events[eventName].add(callback);
        if (eventName === "change") {
          return () => {
            unsubscribe();
            frame.read(() => {
              if (!this.events.change.getSize()) {
                this.stop();
              }
            });
          };
        }
        return unsubscribe;
      }
      clearListeners() {
        for (const eventManagers in this.events) {
          this.events[eventManagers].clear();
        }
      }
      /**
       * Attaches a passive effect to the `MotionValue`.
       */
      attach(passiveEffect, stopPassiveEffect) {
        this.passiveEffect = passiveEffect;
        this.stopPassiveEffect = stopPassiveEffect;
      }
      /**
       * Sets the state of the `MotionValue`.
       *
       * @remarks
       *
       * ```jsx
       * const x = useMotionValue(0)
       * x.set(10)
       * ```
       *
       * @param latest - Latest value to set.
       * @param render - Whether to notify render subscribers. Defaults to `true`
       *
       * @public
       */
      set(v5, render = true) {
        if (!render || !this.passiveEffect) {
          this.updateAndNotify(v5, render);
        } else {
          this.passiveEffect(v5, this.updateAndNotify);
        }
      }
      setWithVelocity(prev, current, delta) {
        this.set(current);
        this.prev = void 0;
        this.prevFrameValue = prev;
        this.prevUpdatedAt = this.updatedAt - delta;
      }
      /**
       * Set the state of the `MotionValue`, stopping any active animations,
       * effects, and resets velocity to `0`.
       */
      jump(v5, endAnimation = true) {
        this.updateAndNotify(v5);
        this.prev = v5;
        this.prevUpdatedAt = this.prevFrameValue = void 0;
        endAnimation && this.stop();
        if (this.stopPassiveEffect)
          this.stopPassiveEffect();
      }
      /**
       * Returns the latest state of `MotionValue`
       *
       * @returns - The latest state of `MotionValue`
       *
       * @public
       */
      get() {
        if (collectMotionValues.current) {
          collectMotionValues.current.push(this);
        }
        return this.current;
      }
      /**
       * @public
       */
      getPrevious() {
        return this.prev;
      }
      /**
       * Returns the latest velocity of `MotionValue`
       *
       * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
       *
       * @public
       */
      getVelocity() {
        const currentTime = time.now();
        if (!this.canTrackVelocity || this.prevFrameValue === void 0 || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {
          return 0;
        }
        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);
        return velocityPerSecond(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);
      }
      /**
       * Registers a new animation to control this `MotionValue`. Only one
       * animation can drive a `MotionValue` at one time.
       *
       * ```jsx
       * value.start()
       * ```
       *
       * @param animation - A function that starts the provided animation
       */
      start(startAnimation) {
        this.stop();
        return new Promise((resolve) => {
          this.hasAnimated = true;
          this.animation = startAnimation(resolve);
          if (this.events.animationStart) {
            this.events.animationStart.notify();
          }
        }).then(() => {
          if (this.events.animationComplete) {
            this.events.animationComplete.notify();
          }
          this.clearAnimation();
        });
      }
      /**
       * Stop the currently active animation.
       *
       * @public
       */
      stop() {
        if (this.animation) {
          this.animation.stop();
          if (this.events.animationCancel) {
            this.events.animationCancel.notify();
          }
        }
        this.clearAnimation();
      }
      /**
       * Returns `true` if this value is currently animating.
       *
       * @public
       */
      isAnimating() {
        return !!this.animation;
      }
      clearAnimation() {
        delete this.animation;
      }
      /**
       * Destroy and clean up subscribers to this `MotionValue`.
       *
       * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
       * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
       * created a `MotionValue` via the `motionValue` function.
       *
       * @public
       */
      destroy() {
        this.clearListeners();
        this.stop();
        if (this.stopPassiveEffect) {
          this.stopPassiveEffect();
        }
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement, key, value) {
  if (visualElement.hasValue(key)) {
    visualElement.getValue(key).set(value);
  } else {
    visualElement.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement, definition) {
  const resolved = resolveVariant(visualElement, definition);
  let { transitionEnd = {}, transition = {}, ...target } = resolved || {};
  target = { ...target, ...transitionEnd };
  for (const key in target) {
    const value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement, key, value);
  }
}
var init_setters = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs"() {
    init_resolve_value();
    init_resolve_dynamic_variants();
    init_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs
function isWillChangeMotionValue(value) {
  return Boolean(isMotionValue(value) && value.add);
}
var init_is = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs"() {
    init_is_motion_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs
function addValueToWillChange(visualElement, key) {
  const willChange = visualElement.getValue("willChange");
  if (isWillChangeMotionValue(willChange)) {
    return willChange.add(key);
  } else if (!willChange && MotionGlobalConfig.WillChange) {
    const newWillChange = new MotionGlobalConfig.WillChange("auto");
    visualElement.addValue("willChange", newWillChange);
    newWillChange.add(key);
  }
}
var init_add_will_change = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs"() {
    init_is();
    init_global_config();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs
function getOptimisedAppearId(visualElement) {
  return visualElement.props[optimizedAppearDataAttribute];
}
var init_get_appear_id = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs"() {
    init_data_id();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState;
var init_use_instant_transition_state = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-instant-transition-state.mjs"() {
    instantAnimationState = {
      current: false
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/cubic-bezier.mjs
function binarySubdivide(x3, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i11 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - x3;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i11 < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop;
  const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t13) => t13 === 0 || t13 === 1 ? t13 : calcBezier(getTForX(t13), mY1, mY2);
}
var calcBezier, subdivisionPrecision, subdivisionMaxIterations;
var init_cubic_bezier = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/cubic-bezier.mjs"() {
    init_noop();
    calcBezier = (t13, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t13 + (3 * a22 - 6 * a1)) * t13 + 3 * a1) * t13;
    subdivisionPrecision = 1e-7;
    subdivisionMaxIterations = 12;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/mirror.mjs
var mirrorEasing;
var init_mirror = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/mirror.mjs"() {
    mirrorEasing = (easing) => (p13) => p13 <= 0.5 ? easing(2 * p13) / 2 : (2 - easing(2 * (1 - p13))) / 2;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/reverse.mjs
var reverseEasing;
var init_reverse = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/reverse.mjs"() {
    reverseEasing = (easing) => (p13) => 1 - easing(1 - p13);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/back.mjs
var backOut, backIn, backInOut;
var init_back = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/back.mjs"() {
    init_cubic_bezier();
    init_mirror();
    init_reverse();
    backOut = /* @__PURE__ */ cubicBezier(0.33, 1.53, 0.69, 0.99);
    backIn = /* @__PURE__ */ reverseEasing(backOut);
    backInOut = /* @__PURE__ */ mirrorEasing(backIn);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/anticipate.mjs
var anticipate;
var init_anticipate = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/anticipate.mjs"() {
    init_back();
    anticipate = (p13) => (p13 *= 2) < 1 ? 0.5 * backIn(p13) : 0.5 * (2 - Math.pow(2, -10 * (p13 - 1)));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/circ.mjs
var circIn, circOut, circInOut;
var init_circ = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/circ.mjs"() {
    init_mirror();
    init_reverse();
    circIn = (p13) => 1 - Math.sin(Math.acos(p13));
    circOut = reverseEasing(circIn);
    circInOut = mirrorEasing(circIn);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString;
var init_is_zero_value_string = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-zero-value-string.mjs"() {
    isZeroValueString = (v5) => /^0[^.\s]+$/u.test(v5);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-none.mjs
function isNone(value) {
  if (typeof value === "number") {
    return value === 0;
  } else if (value !== null) {
    return value === "none" || value === "0" || isZeroValueString(value);
  } else {
    return true;
  }
}
var init_is_none = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-none.mjs"() {
    init_is_zero_value_string();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/sanitize.mjs
var sanitize;
var init_sanitize = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/sanitize.mjs"() {
    sanitize = (v5) => Math.round(v5 * 1e5) / 1e5;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/float-regex.mjs
var floatRegex;
var init_float_regex = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/float-regex.mjs"() {
    floatRegex = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/is-nullish.mjs
function isNullish2(v5) {
  return v5 == null;
}
var init_is_nullish = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/is-nullish.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/single-color-regex.mjs
var singleColorRegex;
var init_single_color_regex = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/single-color-regex.mjs"() {
    singleColorRegex = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/utils.mjs
var isColorString, splitColor;
var init_utils8 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/utils.mjs"() {
    init_float_regex();
    init_is_nullish();
    init_single_color_regex();
    isColorString = (type, testProp) => (v5) => {
      return Boolean(typeof v5 === "string" && singleColorRegex.test(v5) && v5.startsWith(type) || testProp && !isNullish2(v5) && Object.prototype.hasOwnProperty.call(v5, testProp));
    };
    splitColor = (aName, bName, cName) => (v5) => {
      if (typeof v5 !== "string")
        return v5;
      const [a12, b4, c13, alpha4] = v5.match(floatRegex);
      return {
        [aName]: parseFloat(a12),
        [bName]: parseFloat(b4),
        [cName]: parseFloat(c13),
        alpha: alpha4 !== void 0 ? parseFloat(alpha4) : 1
      };
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/rgba.mjs
var clampRgbUnit, rgbUnit, rgba2;
var init_rgba2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/rgba.mjs"() {
    init_clamp2();
    init_numbers();
    init_sanitize();
    init_utils8();
    clampRgbUnit = (v5) => clamp2(0, 255, v5);
    rgbUnit = {
      ...number,
      transform: (v5) => Math.round(clampRgbUnit(v5))
    };
    rgba2 = {
      test: /* @__PURE__ */ isColorString("rgb", "red"),
      parse: /* @__PURE__ */ splitColor("red", "green", "blue"),
      transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha2.transform(alpha$1)) + ")"
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hex.mjs
function parseHex(v5) {
  let r8 = "";
  let g9 = "";
  let b4 = "";
  let a12 = "";
  if (v5.length > 5) {
    r8 = v5.substring(1, 3);
    g9 = v5.substring(3, 5);
    b4 = v5.substring(5, 7);
    a12 = v5.substring(7, 9);
  } else {
    r8 = v5.substring(1, 2);
    g9 = v5.substring(2, 3);
    b4 = v5.substring(3, 4);
    a12 = v5.substring(4, 5);
    r8 += r8;
    g9 += g9;
    b4 += b4;
    a12 += a12;
  }
  return {
    red: parseInt(r8, 16),
    green: parseInt(g9, 16),
    blue: parseInt(b4, 16),
    alpha: a12 ? parseInt(a12, 16) / 255 : 1
  };
}
var hex;
var init_hex = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hex.mjs"() {
    init_rgba2();
    init_utils8();
    hex = {
      test: /* @__PURE__ */ isColorString("#"),
      parse: parseHex,
      transform: rgba2.transform
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hsla.mjs
var hsla;
var init_hsla = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hsla.mjs"() {
    init_numbers();
    init_units();
    init_sanitize();
    init_utils8();
    hsla = {
      test: /* @__PURE__ */ isColorString("hsl", "hue"),
      parse: /* @__PURE__ */ splitColor("hue", "saturation", "lightness"),
      transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
        return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha2.transform(alpha$1)) + ")";
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/index.mjs
var color;
var init_color = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/index.mjs"() {
    init_hex();
    init_hsla();
    init_rgba2();
    color = {
      test: (v5) => rgba2.test(v5) || hex.test(v5) || hsla.test(v5),
      parse: (v5) => {
        if (rgba2.test(v5)) {
          return rgba2.parse(v5);
        } else if (hsla.test(v5)) {
          return hsla.parse(v5);
        } else {
          return hex.parse(v5);
        }
      },
      transform: (v5) => {
        return typeof v5 === "string" ? v5 : v5.hasOwnProperty("red") ? rgba2.transform(v5) : hsla.transform(v5);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/color-regex.mjs
var colorRegex;
var init_color_regex = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/color-regex.mjs"() {
    colorRegex = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/index.mjs
function test(v5) {
  return isNaN(v5) && typeof v5 === "string" && (v5.match(floatRegex)?.length || 0) + (v5.match(colorRegex)?.length || 0) > 0;
}
function analyseComplexValue(value) {
  const originalValue = value.toString();
  const values2 = [];
  const indexes = {
    color: [],
    number: [],
    var: []
  };
  const types = [];
  let i11 = 0;
  const tokenised = originalValue.replace(complexRegex, (parsedValue) => {
    if (color.test(parsedValue)) {
      indexes.color.push(i11);
      types.push(COLOR_TOKEN);
      values2.push(color.parse(parsedValue));
    } else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {
      indexes.var.push(i11);
      types.push(VAR_TOKEN);
      values2.push(parsedValue);
    } else {
      indexes.number.push(i11);
      types.push(NUMBER_TOKEN);
      values2.push(parseFloat(parsedValue));
    }
    ++i11;
    return SPLIT_TOKEN;
  });
  const split = tokenised.split(SPLIT_TOKEN);
  return { values: values2, split, indexes, types };
}
function parseComplexValue(v5) {
  return analyseComplexValue(v5).values;
}
function createTransformer(source) {
  const { split, types } = analyseComplexValue(source);
  const numSections = split.length;
  return (v5) => {
    let output = "";
    for (let i11 = 0; i11 < numSections; i11++) {
      output += split[i11];
      if (v5[i11] !== void 0) {
        const type = types[i11];
        if (type === NUMBER_TOKEN) {
          output += sanitize(v5[i11]);
        } else if (type === COLOR_TOKEN) {
          output += color.transform(v5[i11]);
        } else {
          output += v5[i11];
        }
      }
    }
    return output;
  };
}
function getAnimatableNone(v5) {
  const parsed = parseComplexValue(v5);
  const transformer = createTransformer(v5);
  return transformer(parsed.map(convertNumbersToZero));
}
var NUMBER_TOKEN, COLOR_TOKEN, VAR_TOKEN, VAR_FUNCTION_TOKEN, SPLIT_TOKEN, complexRegex, convertNumbersToZero, complex;
var init_complex = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/index.mjs"() {
    init_color();
    init_color_regex();
    init_float_regex();
    init_sanitize();
    NUMBER_TOKEN = "number";
    COLOR_TOKEN = "color";
    VAR_TOKEN = "var";
    VAR_FUNCTION_TOKEN = "var(";
    SPLIT_TOKEN = "${}";
    complexRegex = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
    convertNumbersToZero = (v5) => typeof v5 === "number" ? 0 : v5;
    complex = {
      test,
      parse: parseComplexValue,
      createTransformer,
      getAnimatableNone
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/filter.mjs
function applyDefaultFilter(v5) {
  const [name2, value] = v5.slice(0, -1).split("(");
  if (name2 === "drop-shadow")
    return v5;
  const [number4] = value.match(floatRegex) || [];
  if (!number4)
    return v5;
  const unit = value.replace(number4, "");
  let defaultValue2 = maxDefaults.has(name2) ? 1 : 0;
  if (number4 !== value)
    defaultValue2 *= 100;
  return name2 + "(" + defaultValue2 + unit + ")";
}
var maxDefaults, functionRegex, filter;
var init_filter = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/filter.mjs"() {
    init_complex();
    init_float_regex();
    maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
    functionRegex = /\b([a-z-]*)\(.*?\)/gu;
    filter = {
      ...complex,
      getAnimatableNone: (v5) => {
        const functions = v5.match(functionRegex);
        return functions ? functions.map(applyDefaultFilter).join(" ") : v5;
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes, getDefaultValueType;
var init_defaults = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/defaults.mjs"() {
    init_color();
    init_filter();
    init_number();
    defaultValueTypes = {
      ...numberValueTypes,
      // Color props
      color,
      backgroundColor: color,
      outlineColor: color,
      fill: color,
      stroke: color,
      // Border props
      borderColor: color,
      borderTopColor: color,
      borderRightColor: color,
      borderBottomColor: color,
      borderLeftColor: color,
      filter,
      WebkitFilter: filter
    };
    getDefaultValueType = (key) => defaultValueTypes[key];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  let defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}
var init_animatable_none = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs"() {
    init_complex();
    init_filter();
    init_defaults();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs
function makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name2) {
  let i11 = 0;
  let animatableTemplate = void 0;
  while (i11 < unresolvedKeyframes.length && !animatableTemplate) {
    const keyframe = unresolvedKeyframes[i11];
    if (typeof keyframe === "string" && !invalidTemplates.has(keyframe) && analyseComplexValue(keyframe).values.length) {
      animatableTemplate = unresolvedKeyframes[i11];
    }
    i11++;
  }
  if (animatableTemplate && name2) {
    for (const noneIndex of noneKeyframeIndexes) {
      unresolvedKeyframes[noneIndex] = getAnimatableNone2(name2, animatableTemplate);
    }
  }
}
var invalidTemplates;
var init_make_none_animatable = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs"() {
    init_complex();
    init_animatable_none();
    invalidTemplates = /* @__PURE__ */ new Set(["auto", "none", "0"]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/parse-transform.mjs
function defaultTransformValue(name2) {
  return name2.includes("scale") ? 1 : 0;
}
function parseValueFromTransform(transform, name2) {
  if (!transform || transform === "none") {
    return defaultTransformValue(name2);
  }
  const matrix3dMatch = transform.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let parsers;
  let match;
  if (matrix3dMatch) {
    parsers = matrix3dParsers;
    match = matrix3dMatch;
  } else {
    const matrix2dMatch = transform.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    parsers = matrix2dParsers;
    match = matrix2dMatch;
  }
  if (!match) {
    return defaultTransformValue(name2);
  }
  const valueParser = parsers[name2];
  const values2 = match[1].split(",").map(convertTransformToNumber);
  return typeof valueParser === "function" ? valueParser(values2) : values2[valueParser];
}
function convertTransformToNumber(value) {
  return parseFloat(value.trim());
}
var radToDeg, rotate, matrix2dParsers, rebaseAngle, rotateZ, scaleX, scaleY, matrix3dParsers, readTransformValue;
var init_parse_transform = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/parse-transform.mjs"() {
    radToDeg = (rad) => rad * 180 / Math.PI;
    rotate = (v5) => {
      const angle = radToDeg(Math.atan2(v5[1], v5[0]));
      return rebaseAngle(angle);
    };
    matrix2dParsers = {
      x: 4,
      y: 5,
      translateX: 4,
      translateY: 5,
      scaleX: 0,
      scaleY: 3,
      scale: (v5) => (Math.abs(v5[0]) + Math.abs(v5[3])) / 2,
      rotate,
      rotateZ: rotate,
      skewX: (v5) => radToDeg(Math.atan(v5[1])),
      skewY: (v5) => radToDeg(Math.atan(v5[2])),
      skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[2])) / 2
    };
    rebaseAngle = (angle) => {
      angle = angle % 360;
      if (angle < 0)
        angle += 360;
      return angle;
    };
    rotateZ = rotate;
    scaleX = (v5) => Math.sqrt(v5[0] * v5[0] + v5[1] * v5[1]);
    scaleY = (v5) => Math.sqrt(v5[4] * v5[4] + v5[5] * v5[5]);
    matrix3dParsers = {
      x: 12,
      y: 13,
      z: 14,
      translateX: 12,
      translateY: 13,
      translateZ: 14,
      scaleX,
      scaleY,
      scale: (v5) => (scaleX(v5) + scaleY(v5)) / 2,
      rotateX: (v5) => rebaseAngle(radToDeg(Math.atan2(v5[6], v5[5]))),
      rotateY: (v5) => rebaseAngle(radToDeg(Math.atan2(-v5[2], v5[0]))),
      rotateZ,
      rotate: rotateZ,
      skewX: (v5) => radToDeg(Math.atan(v5[4])),
      skewY: (v5) => radToDeg(Math.atan(v5[1])),
      skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[4])) / 2
    };
    readTransformValue = (instance, name2) => {
      const { transform = "none" } = getComputedStyle(instance);
      return parseValueFromTransform(transform, name2);
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
function removeNonTranslationalTransform(visualElement) {
  const removedTransforms = [];
  nonTranslationalTransformKeys.forEach((key) => {
    const value = visualElement.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  return removedTransforms;
}
var isNumOrPxType, transformKeys, nonTranslationalTransformKeys, positionalValues;
var init_unit_conversion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs"() {
    init_numbers();
    init_units();
    init_keys_transform();
    init_parse_transform();
    isNumOrPxType = (v5) => v5 === number || v5 === px2;
    transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
    nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));
    positionalValues = {
      // Dimensions
      width: ({ x: x3 }, { paddingLeft = "0", paddingRight = "0" }) => x3.max - x3.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
      height: ({ y: y3 }, { paddingTop = "0", paddingBottom = "0" }) => y3.max - y3.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
      top: (_bbox, { top: top2 }) => parseFloat(top2),
      left: (_bbox, { left }) => parseFloat(left),
      bottom: ({ y: y3 }, { top: top2 }) => parseFloat(top2) + (y3.max - y3.min),
      right: ({ x: x3 }, { left }) => parseFloat(left) + (x3.max - x3.min),
      // Transform
      x: (_bbox, { transform }) => parseValueFromTransform(transform, "x"),
      y: (_bbox, { transform }) => parseValueFromTransform(transform, "y")
    };
    positionalValues.translateX = positionalValues.x;
    positionalValues.translateY = positionalValues.y;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/KeyframesResolver.mjs
function measureAllKeyframes() {
  if (anyNeedsMeasurement) {
    const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);
    const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));
    const transformsToRestore = /* @__PURE__ */ new Map();
    elementsToMeasure.forEach((element) => {
      const removedTransforms = removeNonTranslationalTransform(element);
      if (!removedTransforms.length)
        return;
      transformsToRestore.set(element, removedTransforms);
      element.render();
    });
    resolversToMeasure.forEach((resolver) => resolver.measureInitialState());
    elementsToMeasure.forEach((element) => {
      element.render();
      const restore = transformsToRestore.get(element);
      if (restore) {
        restore.forEach(([key, value]) => {
          element.getValue(key)?.set(value);
        });
      }
    });
    resolversToMeasure.forEach((resolver) => resolver.measureEndState());
    resolversToMeasure.forEach((resolver) => {
      if (resolver.suspendedScrollY !== void 0) {
        window.scrollTo(0, resolver.suspendedScrollY);
      }
    });
  }
  anyNeedsMeasurement = false;
  isScheduled = false;
  toResolve.forEach((resolver) => resolver.complete());
  toResolve.clear();
}
function readAllKeyframes() {
  toResolve.forEach((resolver) => {
    resolver.readKeyframes();
    if (resolver.needsMeasurement) {
      anyNeedsMeasurement = true;
    }
  });
}
function flushKeyframeResolvers() {
  readAllKeyframes();
  measureAllKeyframes();
}
var toResolve, isScheduled, anyNeedsMeasurement, KeyframeResolver;
var init_KeyframesResolver = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/KeyframesResolver.mjs"() {
    init_unit_conversion();
    init_frame();
    toResolve = /* @__PURE__ */ new Set();
    isScheduled = false;
    anyNeedsMeasurement = false;
    KeyframeResolver = class {
      constructor(unresolvedKeyframes, onComplete, name2, motionValue3, element, isAsync2 = false) {
        this.isComplete = false;
        this.isAsync = false;
        this.needsMeasurement = false;
        this.isScheduled = false;
        this.unresolvedKeyframes = [...unresolvedKeyframes];
        this.onComplete = onComplete;
        this.name = name2;
        this.motionValue = motionValue3;
        this.element = element;
        this.isAsync = isAsync2;
      }
      scheduleResolve() {
        this.isScheduled = true;
        if (this.isAsync) {
          toResolve.add(this);
          if (!isScheduled) {
            isScheduled = true;
            frame.read(readAllKeyframes);
            frame.resolveKeyframes(measureAllKeyframes);
          }
        } else {
          this.readKeyframes();
          this.complete();
        }
      }
      readKeyframes() {
        const { unresolvedKeyframes, name: name2, element, motionValue: motionValue3 } = this;
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          if (unresolvedKeyframes[i11] === null) {
            if (i11 === 0) {
              const currentValue = motionValue3?.get();
              const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
              if (currentValue !== void 0) {
                unresolvedKeyframes[0] = currentValue;
              } else if (element && name2) {
                const valueAsRead = element.readValue(name2, finalKeyframe);
                if (valueAsRead !== void 0 && valueAsRead !== null) {
                  unresolvedKeyframes[0] = valueAsRead;
                }
              }
              if (unresolvedKeyframes[0] === void 0) {
                unresolvedKeyframes[0] = finalKeyframe;
              }
              if (motionValue3 && currentValue === void 0) {
                motionValue3.set(unresolvedKeyframes[0]);
              }
            } else {
              unresolvedKeyframes[i11] = unresolvedKeyframes[i11 - 1];
            }
          }
        }
      }
      setFinalKeyframe() {
      }
      measureInitialState() {
      }
      renderEndStyles() {
      }
      measureEndState() {
      }
      complete() {
        this.isComplete = true;
        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);
        toResolve.delete(this);
      }
      cancel() {
        if (!this.isComplete) {
          this.isScheduled = false;
          toResolve.delete(this);
        }
      }
      resume() {
        if (!this.isComplete)
          this.scheduleResolve();
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString;
var init_is_numerical_string = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/is-numerical-string.mjs"() {
    isNumericalString = (v5) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v5);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function parseCSSVariable(current) {
  const match = splitCSSVariableRegex.exec(current);
  if (!match)
    return [,];
  const [, token1, token2, fallback] = match;
  return [`--${token1 ?? token2}`, fallback];
}
function getVariableValue(current, element, depth = 1) {
  invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);
  const [token, fallback] = parseCSSVariable(current);
  if (!token)
    return;
  const resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    const trimmed = resolved.trim();
    return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;
  }
  return isCSSVariableToken(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}
var splitCSSVariableRegex, maxDepth;
var init_css_variables_conversion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs"() {
    init_is_numerical_string();
    init_is_css_variable();
    init_errors();
    splitCSSVariableRegex = // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
    /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
    maxDepth = 4;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType;
var init_test = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/test.mjs"() {
    testValueType = (v5) => (type) => type.test(v5);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto;
var init_type_auto = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-auto.mjs"() {
    auto = {
      test: (v5) => v5 === "auto",
      parse: (v5) => v5
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes, findDimensionValueType;
var init_dimensions = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/dimensions.mjs"() {
    init_numbers();
    init_units();
    init_test();
    init_type_auto();
    dimensionValueTypes = [number, px2, percent, degrees, vw, vh, auto];
    findDimensionValueType = (v5) => dimensionValueTypes.find(testValueType(v5));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs
var DOMKeyframesResolver;
var init_DOMKeyframesResolver = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs"() {
    init_is_none();
    init_keys_position();
    init_make_none_animatable();
    init_KeyframesResolver();
    init_css_variables_conversion();
    init_is_css_variable();
    init_unit_conversion();
    init_dimensions();
    DOMKeyframesResolver = class extends KeyframeResolver {
      constructor(unresolvedKeyframes, onComplete, name2, motionValue3, element) {
        super(unresolvedKeyframes, onComplete, name2, motionValue3, element, true);
      }
      readKeyframes() {
        const { unresolvedKeyframes, element, name: name2 } = this;
        if (!element || !element.current)
          return;
        super.readKeyframes();
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          let keyframe = unresolvedKeyframes[i11];
          if (typeof keyframe === "string") {
            keyframe = keyframe.trim();
            if (isCSSVariableToken(keyframe)) {
              const resolved = getVariableValue(keyframe, element.current);
              if (resolved !== void 0) {
                unresolvedKeyframes[i11] = resolved;
              }
              if (i11 === unresolvedKeyframes.length - 1) {
                this.finalKeyframe = keyframe;
              }
            }
          }
        }
        this.resolveNoneKeyframes();
        if (!positionalKeys.has(name2) || unresolvedKeyframes.length !== 2) {
          return;
        }
        const [origin, target] = unresolvedKeyframes;
        const originType = findDimensionValueType(origin);
        const targetType = findDimensionValueType(target);
        if (originType === targetType)
          return;
        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {
          for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
            const value = unresolvedKeyframes[i11];
            if (typeof value === "string") {
              unresolvedKeyframes[i11] = parseFloat(value);
            }
          }
        } else {
          this.needsMeasurement = true;
        }
      }
      resolveNoneKeyframes() {
        const { unresolvedKeyframes, name: name2 } = this;
        const noneKeyframeIndexes = [];
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          if (isNone(unresolvedKeyframes[i11])) {
            noneKeyframeIndexes.push(i11);
          }
        }
        if (noneKeyframeIndexes.length) {
          makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name2);
        }
      }
      measureInitialState() {
        const { element, unresolvedKeyframes, name: name2 } = this;
        if (!element || !element.current)
          return;
        if (name2 === "height") {
          this.suspendedScrollY = window.pageYOffset;
        }
        this.measuredOrigin = positionalValues[name2](element.measureViewportBox(), window.getComputedStyle(element.current));
        unresolvedKeyframes[0] = this.measuredOrigin;
        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
        if (measureKeyframe !== void 0) {
          element.getValue(name2, measureKeyframe).jump(measureKeyframe, false);
        }
      }
      measureEndState() {
        const { element, name: name2, unresolvedKeyframes } = this;
        if (!element || !element.current)
          return;
        const value = element.getValue(name2);
        value && value.jump(this.measuredOrigin, false);
        const finalKeyframeIndex = unresolvedKeyframes.length - 1;
        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];
        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name2](element.measureViewportBox(), window.getComputedStyle(element.current));
        if (finalKeyframe !== null && this.finalKeyframe === void 0) {
          this.finalKeyframe = finalKeyframe;
        }
        if (this.removedTransforms?.length) {
          this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {
            element.getValue(unsetTransformName).set(unsetTransformValue);
          });
        }
        this.resolveNoneKeyframes();
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable;
var init_is_animatable = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animatable.mjs"() {
    init_complex();
    isAnimatable = (value, name2) => {
      if (name2 === "zIndex")
        return false;
      if (typeof value === "number" || Array.isArray(value))
        return true;
      if (typeof value === "string" && // It's animatable if we have a string
      (complex.test(value) || value === "0") && // And it contains numbers and/or colors
      !value.startsWith("url(")) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/is-generator.mjs
function isGenerator(type) {
  return typeof type === "function" && "applyToOptions" in type;
}
var init_is_generator = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/is-generator.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/can-animate.mjs
function hasKeyframesChanged(keyframes3) {
  const current = keyframes3[0];
  if (keyframes3.length === 1)
    return true;
  for (let i11 = 0; i11 < keyframes3.length; i11++) {
    if (keyframes3[i11] !== current)
      return true;
  }
}
function canAnimate(keyframes3, name2, type, velocity) {
  const originKeyframe = keyframes3[0];
  if (originKeyframe === null)
    return false;
  if (name2 === "display" || name2 === "visibility")
    return true;
  const targetKeyframe = keyframes3[keyframes3.length - 1];
  const isOriginAnimatable = isAnimatable(originKeyframe, name2);
  const isTargetAnimatable = isAnimatable(targetKeyframe, name2);
  warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name2} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`);
  if (!isOriginAnimatable || !isTargetAnimatable) {
    return false;
  }
  return hasKeyframesChanged(keyframes3) || (type === "spring" || isGenerator(type)) && velocity;
}
var init_can_animate = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/can-animate.mjs"() {
    init_is_animatable();
    init_errors();
    init_is_generator();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs
function getFinalKeyframe(keyframes3, { repeat, repeatType = "loop" }, finalKeyframe) {
  const resolvedKeyframes = keyframes3.filter(isNotNull);
  const index = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;
  return !index || finalKeyframe === void 0 ? resolvedKeyframes[index] : finalKeyframe;
}
var isNotNull;
var init_get_final_keyframe = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs"() {
    isNotNull = (value) => value !== null;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/BaseAnimation.mjs
var MAX_RESOLVE_DELAY, BaseAnimation;
var init_BaseAnimation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/BaseAnimation.mjs"() {
    init_KeyframesResolver();
    init_use_instant_transition_state();
    init_can_animate();
    init_get_final_keyframe();
    init_sync_time();
    MAX_RESOLVE_DELAY = 40;
    BaseAnimation = class {
      constructor({ autoplay = true, delay: delay3 = 0, type = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", ...options }) {
        this.isStopped = false;
        this.hasAttemptedResolve = false;
        this.createdAt = time.now();
        this.options = {
          autoplay,
          delay: delay3,
          type,
          repeat,
          repeatDelay,
          repeatType,
          ...options
        };
        this.updateFinishedPromise();
      }
      /**
       * This method uses the createdAt and resolvedAt to calculate the
       * animation startTime. *Ideally*, we would use the createdAt time as t=0
       * as the following frame would then be the first frame of the animation in
       * progress, which would feel snappier.
       *
       * However, if there's a delay (main thread work) between the creation of
       * the animation and the first commited frame, we prefer to use resolvedAt
       * to avoid a sudden jump into the animation.
       */
      calcStartTime() {
        if (!this.resolvedAt)
          return this.createdAt;
        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY ? this.resolvedAt : this.createdAt;
      }
      /**
       * A getter for resolved data. If keyframes are not yet resolved, accessing
       * this.resolved will synchronously flush all pending keyframe resolvers.
       * This is a deoptimisation, but at its worst still batches read/writes.
       */
      get resolved() {
        if (!this._resolved && !this.hasAttemptedResolve) {
          flushKeyframeResolvers();
        }
        return this._resolved;
      }
      /**
       * A method to be called when the keyframes resolver completes. This method
       * will check if its possible to run the animation and, if not, skip it.
       * Otherwise, it will call initPlayback on the implementing class.
       */
      onKeyframesResolved(keyframes3, finalKeyframe) {
        this.resolvedAt = time.now();
        this.hasAttemptedResolve = true;
        const { name: name2, type, velocity, delay: delay3, onComplete, onUpdate, isGenerator: isGenerator3 } = this.options;
        if (!isGenerator3 && !canAnimate(keyframes3, name2, type, velocity)) {
          if (instantAnimationState.current || !delay3) {
            onUpdate && onUpdate(getFinalKeyframe(keyframes3, this.options, finalKeyframe));
            onComplete && onComplete();
            this.resolveFinishedPromise();
            return;
          } else {
            this.options.duration = 0;
          }
        }
        const resolvedAnimation = this.initPlayback(keyframes3, finalKeyframe);
        if (resolvedAnimation === false)
          return;
        this._resolved = {
          keyframes: keyframes3,
          finalKeyframe,
          ...resolvedAnimation
        };
        this.onPostResolved();
      }
      onPostResolved() {
      }
      /**
       * Allows the returned animation to be awaited or promise-chained. Currently
       * resolves when the animation finishes at all but in a future update could/should
       * reject if its cancels.
       */
      then(resolve, reject) {
        return this.currentFinishedPromise.then(resolve, reject);
      }
      flatten() {
        if (!this.options.allowFlatten)
          return;
        this.options.type = "keyframes";
        this.options.ease = "linear";
      }
      updateFinishedPromise() {
        this.currentFinishedPromise = new Promise((resolve) => {
          this.resolveFinishedPromise = resolve;
        });
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/number.mjs
var mixNumber;
var init_number2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/number.mjs"() {
    mixNumber = (from, to, progress3) => {
      return from + (to - from) * progress3;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p13, q3, t13) {
  if (t13 < 0)
    t13 += 1;
  if (t13 > 1)
    t13 -= 1;
  if (t13 < 1 / 6)
    return p13 + (q3 - p13) * 6 * t13;
  if (t13 < 1 / 2)
    return q3;
  if (t13 < 2 / 3)
    return p13 + (q3 - p13) * (2 / 3 - t13) * 6;
  return p13;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha4 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q3 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p13 = 2 * lightness - q3;
    red = hueToRgb(p13, q3, hue + 1 / 3);
    green = hueToRgb(p13, q3, hue);
    blue = hueToRgb(p13, q3, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha4
  };
}
var init_hsla_to_rgba = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/hsla-to-rgba.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/immediate.mjs
function mixImmediate(a12, b4) {
  return (p13) => p13 > 0 ? b4 : a12;
}
var init_immediate = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/immediate.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/color.mjs
function asRGBA(color3) {
  const type = getColorType(color3);
  warning(Boolean(type), `'${color3}' is not an animatable color. Use the equivalent color code instead.`);
  if (!Boolean(type))
    return false;
  let model = type.parse(color3);
  if (type === hsla) {
    model = hslaToRgba(model);
  }
  return model;
}
var mixLinearColor, colorTypes, getColorType, mixColor;
var init_color2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/color.mjs"() {
    init_number2();
    init_hsla_to_rgba();
    init_hex();
    init_rgba2();
    init_hsla();
    init_immediate();
    init_errors();
    mixLinearColor = (from, to, v5) => {
      const fromExpo = from * from;
      const expo = v5 * (to * to - fromExpo) + fromExpo;
      return expo < 0 ? 0 : Math.sqrt(expo);
    };
    colorTypes = [hex, rgba2, hsla];
    getColorType = (v5) => colorTypes.find((type) => type.test(v5));
    mixColor = (from, to) => {
      const fromRGBA = asRGBA(from);
      const toRGBA = asRGBA(to);
      if (!fromRGBA || !toRGBA) {
        return mixImmediate(from, to);
      }
      const blended = { ...fromRGBA };
      return (v5) => {
        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v5);
        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v5);
        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v5);
        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v5);
        return rgba2.transform(blended);
      };
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/pipe.mjs
var combineFunctions, pipe;
var init_pipe = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/pipe.mjs"() {
    combineFunctions = (a12, b4) => (v5) => b4(a12(v5));
    pipe = (...transformers) => transformers.reduce(combineFunctions);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/visibility.mjs
function mixVisibility(origin, target) {
  if (invisibleValues.has(origin)) {
    return (p13) => p13 <= 0 ? origin : target;
  } else {
    return (p13) => p13 >= 1 ? target : origin;
  }
}
var invisibleValues;
var init_visibility = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/visibility.mjs"() {
    invisibleValues = /* @__PURE__ */ new Set(["none", "hidden"]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/complex.mjs
function mixNumber2(a12, b4) {
  return (p13) => mixNumber(a12, b4, p13);
}
function getMixer(a12) {
  if (typeof a12 === "number") {
    return mixNumber2;
  } else if (typeof a12 === "string") {
    return isCSSVariableToken(a12) ? mixImmediate : color.test(a12) ? mixColor : mixComplex;
  } else if (Array.isArray(a12)) {
    return mixArray;
  } else if (typeof a12 === "object") {
    return color.test(a12) ? mixColor : mixObject;
  }
  return mixImmediate;
}
function mixArray(a12, b4) {
  const output = [...a12];
  const numValues = output.length;
  const blendValue = a12.map((v5, i11) => getMixer(v5)(v5, b4[i11]));
  return (p13) => {
    for (let i11 = 0; i11 < numValues; i11++) {
      output[i11] = blendValue[i11](p13);
    }
    return output;
  };
}
function mixObject(a12, b4) {
  const output = { ...a12, ...b4 };
  const blendValue = {};
  for (const key in output) {
    if (a12[key] !== void 0 && b4[key] !== void 0) {
      blendValue[key] = getMixer(a12[key])(a12[key], b4[key]);
    }
  }
  return (v5) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v5);
    }
    return output;
  };
}
function matchOrder(origin, target) {
  const orderedOrigin = [];
  const pointers = { color: 0, var: 0, number: 0 };
  for (let i11 = 0; i11 < target.values.length; i11++) {
    const type = target.types[i11];
    const originIndex = origin.indexes[type][pointers[type]];
    const originValue = origin.values[originIndex] ?? 0;
    orderedOrigin[i11] = originValue;
    pointers[type]++;
  }
  return orderedOrigin;
}
var mixComplex;
var init_complex2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/complex.mjs"() {
    init_number2();
    init_color2();
    init_pipe();
    init_color();
    init_complex();
    init_is_css_variable();
    init_visibility();
    init_immediate();
    init_errors();
    mixComplex = (origin, target) => {
      const template = complex.createTransformer(target);
      const originStats = analyseComplexValue(origin);
      const targetStats = analyseComplexValue(target);
      const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;
      if (canInterpolate) {
        if (invisibleValues.has(origin) && !targetStats.values.length || invisibleValues.has(target) && !originStats.values.length) {
          return mixVisibility(origin, target);
        }
        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);
      } else {
        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
        return mixImmediate(origin, target);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/index.mjs
function mix(from, to, p13) {
  if (typeof from === "number" && typeof to === "number" && typeof p13 === "number") {
    return mixNumber(from, to, p13);
  }
  const mixer = getMixer(from);
  return mixer(from, to);
}
var init_mix = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/index.mjs"() {
    init_complex2();
    init_number2();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/velocity.mjs
function calcGeneratorVelocity(resolveValue, t13, current) {
  const prevT = Math.max(t13 - velocitySampleDuration, 0);
  return velocityPerSecond(current - resolveValue(prevT), t13 - prevT);
}
var velocitySampleDuration;
var init_velocity = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/velocity.mjs"() {
    init_velocity_per_second();
    velocitySampleDuration = 5;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/defaults.mjs
var springDefaults;
var init_defaults2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/defaults.mjs"() {
    springDefaults = {
      // Default spring physics
      stiffness: 100,
      damping: 10,
      mass: 1,
      velocity: 0,
      // Default duration/bounce-based options
      duration: 800,
      // in ms
      bounce: 0.3,
      visualDuration: 0.3,
      // in seconds
      // Rest thresholds
      restSpeed: {
        granular: 0.01,
        default: 2
      },
      restDelta: {
        granular: 5e-3,
        default: 0.5
      },
      // Limits
      minDuration: 0.01,
      // in seconds
      maxDuration: 10,
      // in seconds
      minDamping: 0.05,
      maxDamping: 1
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/time-conversion.mjs
var secondsToMilliseconds, millisecondsToSeconds;
var init_time_conversion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/time-conversion.mjs"() {
    secondsToMilliseconds = /* @__NO_SIDE_EFFECTS__ */ (seconds) => seconds * 1e3;
    millisecondsToSeconds = /* @__NO_SIDE_EFFECTS__ */ (milliseconds) => milliseconds / 1e3;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/find.mjs
function findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass }) {
  let envelope;
  let derivative;
  warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp2(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);
  duration = clamp2(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a12 = exponentialDecay - velocity;
      const b4 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c13 = Math.exp(-delta);
      return safeMin - a12 / b4 * c13;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d6 = delta * velocity + velocity;
      const e12 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f11 = Math.exp(-delta);
      const g9 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d6 - e12) * f11) / g9;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b4 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a12 * b4;
    };
    derivative = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b4 = (velocity - undampedFreq2) * (duration * duration);
      return a12 * b4;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = secondsToMilliseconds(duration);
  if (isNaN(undampedFreq)) {
    return {
      stiffness: springDefaults.stiffness,
      damping: springDefaults.damping,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i11 = 1; i11 < rootIterations; i11++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}
var safeMin, rootIterations;
var init_find = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/find.mjs"() {
    init_clamp2();
    init_defaults2();
    init_errors();
    init_time_conversion();
    safeMin = 1e-3;
    rootIterations = 12;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs
function calcGeneratorDuration(generator) {
  let duration = 0;
  const timeStep = 50;
  let state2 = generator.next(duration);
  while (!state2.done && duration < maxGeneratorDuration) {
    duration += timeStep;
    state2 = generator.next(duration);
  }
  return duration >= maxGeneratorDuration ? Infinity : duration;
}
var maxGeneratorDuration;
var init_calc_duration = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs"() {
    maxGeneratorDuration = 2e4;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs
function createGeneratorEasing(options, scale3 = 100, createGenerator) {
  const generator = createGenerator({ ...options, keyframes: [0, scale3] });
  const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);
  return {
    type: "keyframes",
    ease: (progress3) => {
      return generator.next(duration * progress3).value / scale3;
    },
    duration: millisecondsToSeconds(duration)
  };
}
var init_create_generator_easing = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs"() {
    init_calc_duration();
    init_time_conversion();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/flags.mjs
var supportsFlags;
var init_flags = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/flags.mjs"() {
    supportsFlags = {};
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/memo.mjs
// @__NO_SIDE_EFFECTS__
function memo(callback) {
  let result;
  return () => {
    if (result === void 0)
      result = callback();
    return result;
  };
}
var init_memo = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/memo.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/memo.mjs
function memoSupports(callback, supportsFlag) {
  const memoized = memo(callback);
  return () => supportsFlags[supportsFlag] ?? memoized();
}
var init_memo2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/memo.mjs"() {
    init_flags();
    init_memo();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/linear-easing.mjs
var supportsLinearEasing;
var init_linear_easing = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/linear-easing.mjs"() {
    init_memo2();
    supportsLinearEasing = /* @__PURE__ */ memoSupports(() => {
      try {
        document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
      } catch (e12) {
        return false;
      }
      return true;
    }, "linearEasing");
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/linear.mjs
var generateLinearEasing;
var init_linear = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/linear.mjs"() {
    generateLinearEasing = (easing, duration, resolution = 10) => {
      let points = "";
      const numPoints = Math.max(Math.round(duration / resolution), 2);
      for (let i11 = 0; i11 < numPoints; i11++) {
        points += easing(i11 / (numPoints - 1)) + ", ";
      }
      return `linear(${points.substring(0, points.length - 2)})`;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/index.mjs
function isSpringType(options, keys3) {
  return keys3.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = {
    velocity: springDefaults.velocity,
    stiffness: springDefaults.stiffness,
    damping: springDefaults.damping,
    mass: springDefaults.mass,
    isResolvedFromDuration: false,
    ...options
  };
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    if (options.visualDuration) {
      const visualDuration = options.visualDuration;
      const root5 = 2 * Math.PI / (visualDuration * 1.2);
      const stiffness = root5 * root5;
      const damping = 2 * clamp2(0.05, 1, 1 - (options.bounce || 0)) * Math.sqrt(stiffness);
      springOptions = {
        ...springOptions,
        mass: springDefaults.mass,
        stiffness,
        damping
      };
    } else {
      const derived = findSpring(options);
      springOptions = {
        ...springOptions,
        ...derived,
        mass: springDefaults.mass
      };
      springOptions.isResolvedFromDuration = true;
    }
  }
  return springOptions;
}
function spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {
  const options = typeof optionsOrVisualDuration !== "object" ? {
    visualDuration: optionsOrVisualDuration,
    keyframes: [0, 1],
    bounce
  } : optionsOrVisualDuration;
  let { restSpeed, restDelta } = options;
  const origin = options.keyframes[0];
  const target = options.keyframes[options.keyframes.length - 1];
  const state2 = { done: false, value: origin };
  const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration } = getSpringOptions({
    ...options,
    velocity: -millisecondsToSeconds(options.velocity || 0)
  });
  const initialVelocity = velocity || 0;
  const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
  const initialDelta = target - origin;
  const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? springDefaults.restSpeed.granular : springDefaults.restSpeed.default);
  restDelta || (restDelta = isGranularScale ? springDefaults.restDelta.granular : springDefaults.restDelta.default);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
    resolveSpring = (t13) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t13);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t13) + initialDelta * Math.cos(angularFreq * t13));
    };
  } else if (dampingRatio === 1) {
    resolveSpring = (t13) => target - Math.exp(-undampedAngularFreq * t13) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t13);
  } else {
    const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t13) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t13);
      const freqForT = Math.min(dampedAngularFreq * t13, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  const generator = {
    calculatedDuration: isResolvedFromDuration ? duration || null : null,
    next: (t13) => {
      const current = resolveSpring(t13);
      if (!isResolvedFromDuration) {
        let currentVelocity = 0;
        if (dampingRatio < 1) {
          currentVelocity = t13 === 0 ? secondsToMilliseconds(initialVelocity) : calcGeneratorVelocity(resolveSpring, t13, current);
        }
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state2.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state2.done = t13 >= duration;
      }
      state2.value = state2.done ? target : current;
      return state2;
    },
    toString: () => {
      const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);
      const easing = generateLinearEasing((progress3) => generator.next(calculatedDuration * progress3).value, calculatedDuration, 30);
      return calculatedDuration + "ms " + easing;
    },
    toTransition: () => {
    }
  };
  return generator;
}
var durationKeys, physicsKeys;
var init_spring = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/index.mjs"() {
    init_clamp2();
    init_velocity();
    init_defaults2();
    init_find();
    init_time_conversion();
    init_create_generator_easing();
    init_linear_easing();
    init_calc_duration();
    init_linear();
    durationKeys = ["duration", "bounce"];
    physicsKeys = ["stiffness", "damping", "mass"];
    spring.applyToOptions = (options) => {
      const generatorOptions = createGeneratorEasing(options, 100, spring);
      options.ease = supportsLinearEasing() ? generatorOptions.ease : "easeOut";
      options.duration = secondsToMilliseconds(generatorOptions.duration);
      options.type = "keyframes";
      return options;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/inertia.mjs
function inertia({ keyframes: keyframes3, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed }) {
  const origin = keyframes3[0];
  const state2 = {
    done: false,
    value: origin
  };
  const isOutOfBounds = (v5) => min !== void 0 && v5 < min || max !== void 0 && v5 > max;
  const nearestBoundary = (v5) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v5) < Math.abs(max - v5) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = origin + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - origin;
  const calcDelta = (t13) => -amplitude * Math.exp(-t13 / timeConstant);
  const calcLatest = (t13) => target + calcDelta(t13);
  const applyFriction = (t13) => {
    const delta = calcDelta(t13);
    const latest = calcLatest(t13);
    state2.done = Math.abs(delta) <= restDelta;
    state2.value = state2.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t13) => {
    if (!isOutOfBounds(state2.value))
      return;
    timeReachedBoundary = t13;
    spring$1 = spring({
      keyframes: [state2.value, nearestBoundary(state2.value)],
      velocity: calcGeneratorVelocity(calcLatest, t13, state2.value),
      // TODO: This should be passing * 1000
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return {
    calculatedDuration: null,
    next: (t13) => {
      let hasUpdatedFrame = false;
      if (!spring$1 && timeReachedBoundary === void 0) {
        hasUpdatedFrame = true;
        applyFriction(t13);
        checkCatchBoundary(t13);
      }
      if (timeReachedBoundary !== void 0 && t13 >= timeReachedBoundary) {
        return spring$1.next(t13 - timeReachedBoundary);
      } else {
        !hasUpdatedFrame && applyFriction(t13);
        return state2;
      }
    }
  };
}
var init_inertia = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/inertia.mjs"() {
    init_spring();
    init_velocity();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/ease.mjs
var easeIn, easeOut, easeInOut;
var init_ease = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/ease.mjs"() {
    init_cubic_bezier();
    easeIn = /* @__PURE__ */ cubicBezier(0.42, 0, 1, 1);
    easeOut = /* @__PURE__ */ cubicBezier(0, 0, 0.58, 1);
    easeInOut = /* @__PURE__ */ cubicBezier(0.42, 0, 0.58, 1);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-easing-array.mjs
var isEasingArray;
var init_is_easing_array = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-easing-array.mjs"() {
    isEasingArray = (ease3) => {
      return Array.isArray(ease3) && typeof ease3[0] !== "number";
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/is-bezier-definition.mjs
var isBezierDefinition;
var init_is_bezier_definition = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/is-bezier-definition.mjs"() {
    isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === "number";
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/map.mjs
var easingLookup, easingDefinitionToFunction;
var init_map = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/map.mjs"() {
    init_anticipate();
    init_back();
    init_circ();
    init_cubic_bezier();
    init_ease();
    init_is_bezier_definition();
    init_errors();
    init_noop();
    easingLookup = {
      linear: noop,
      easeIn,
      easeInOut,
      easeOut,
      circIn,
      circInOut,
      circOut,
      backIn,
      backInOut,
      backOut,
      anticipate
    };
    easingDefinitionToFunction = (definition) => {
      if (isBezierDefinition(definition)) {
        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);
        const [x1, y1, x22, y22] = definition;
        return cubicBezier(x1, y1, x22, y22);
      } else if (typeof definition === "string") {
        invariant(easingLookup[definition] !== void 0, `Invalid easing type '${definition}'`);
        return easingLookup[definition];
      }
      return definition;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/progress.mjs
var progress;
var init_progress = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-utils/dist/es/progress.mjs"() {
    progress = /* @__NO_SIDE_EFFECTS__ */ (from, to, value) => {
      const toFromDifference = to - from;
      return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/interpolate.mjs
function createMixers(output, ease3, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || mix;
  const numMixers = output.length - 1;
  for (let i11 = 0; i11 < numMixers; i11++) {
    let mixer = mixerFactory(output[i11], output[i11 + 1]);
    if (ease3) {
      const easingFunction = Array.isArray(ease3) ? ease3[i11] || noop : ease3;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate(input, output, { clamp: isClamp = true, ease: ease3, mixer } = {}) {
  const inputLength = input.length;
  invariant(inputLength === output.length, "Both input and output ranges must be the same length");
  if (inputLength === 1)
    return () => output[0];
  if (inputLength === 2 && output[0] === output[1])
    return () => output[1];
  const isZeroDeltaRange = input[0] === input[1];
  if (input[0] > input[inputLength - 1]) {
    input = [...input].reverse();
    output = [...output].reverse();
  }
  const mixers = createMixers(output, ease3, mixer);
  const numMixers = mixers.length;
  const interpolator = (v5) => {
    if (isZeroDeltaRange && v5 < input[0])
      return output[0];
    let i11 = 0;
    if (numMixers > 1) {
      for (; i11 < input.length - 2; i11++) {
        if (v5 < input[i11 + 1])
          break;
      }
    }
    const progressInRange = progress(input[i11], input[i11 + 1], v5);
    return mixers[i11](progressInRange);
  };
  return isClamp ? (v5) => interpolator(clamp2(input[0], input[inputLength - 1], v5)) : interpolator;
}
var init_interpolate = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/interpolate.mjs"() {
    init_clamp2();
    init_mix();
    init_pipe();
    init_errors();
    init_noop();
    init_progress();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/fill.mjs
function fillOffset(offset, remaining) {
  const min = offset[offset.length - 1];
  for (let i11 = 1; i11 <= remaining; i11++) {
    const offsetProgress = progress(0, remaining, i11);
    offset.push(mixNumber(min, 1, offsetProgress));
  }
}
var init_fill = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/fill.mjs"() {
    init_number2();
    init_progress();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/default.mjs
function defaultOffset(arr) {
  const offset = [0];
  fillOffset(offset, arr.length - 1);
  return offset;
}
var init_default = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/default.mjs"() {
    init_fill();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/time.mjs
function convertOffsetToTimes(offset, duration) {
  return offset.map((o6) => o6 * duration);
}
var init_time = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/time.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/keyframes.mjs
function defaultEasing(values2, easing) {
  return values2.map(() => easing || easeInOut).splice(0, values2.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease: ease3 = "easeInOut" }) {
  const easingFunctions = isEasingArray(ease3) ? ease3.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease3);
  const state2 = {
    done: false,
    value: keyframeValues[0]
  };
  const absoluteTimes = convertOffsetToTimes(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues),
    duration
  );
  const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t13) => {
      state2.value = mapTimeToKeyframe(t13);
      state2.done = t13 >= duration;
      return state2;
    }
  };
}
var init_keyframes = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/keyframes.mjs"() {
    init_ease();
    init_is_easing_array();
    init_map();
    init_interpolate();
    init_default();
    init_time();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs
var frameloopDriver;
var init_driver_frameloop = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs"() {
    init_frame();
    init_sync_time();
    frameloopDriver = (update) => {
      const passTimestamp = ({ timestamp }) => update(timestamp);
      return {
        start: () => frame.update(passTimestamp, true),
        stop: () => cancelFrame(passTimestamp),
        /**
         * If we're processing this frame we can use the
         * framelocked timestamp to keep things in sync.
         */
        now: () => frameData.isProcessing ? frameData.timestamp : time.now()
      };
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/stats/animation-count.mjs
var activeAnimations;
var init_animation_count = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/stats/animation-count.mjs"() {
    activeAnimations = {
      layout: 0,
      mainThread: 0,
      waapi: 0
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs
var generators, percentToProgress, MainThreadAnimation;
var init_MainThreadAnimation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs"() {
    init_KeyframesResolver();
    init_clamp2();
    init_mix();
    init_pipe();
    init_inertia();
    init_keyframes();
    init_spring();
    init_BaseAnimation();
    init_driver_frameloop();
    init_get_final_keyframe();
    init_calc_duration();
    init_animation_count();
    init_time_conversion();
    init_is_generator();
    generators = {
      decay: inertia,
      inertia,
      tween: keyframes,
      keyframes,
      spring
    };
    percentToProgress = (percent3) => percent3 / 100;
    MainThreadAnimation = class extends BaseAnimation {
      constructor(options) {
        super(options);
        this.holdTime = null;
        this.cancelTime = null;
        this.currentTime = 0;
        this.playbackSpeed = 1;
        this.pendingPlayState = "running";
        this.startTime = null;
        this.state = "idle";
        this.stop = () => {
          this.resolver.cancel();
          this.isStopped = true;
          if (this.state === "idle")
            return;
          this.teardown();
          const { onStop } = this.options;
          onStop && onStop();
        };
        const { name: name2, motionValue: motionValue3, element, keyframes: keyframes3 } = this.options;
        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;
        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);
        this.resolver = new KeyframeResolver$1(keyframes3, onResolved, name2, motionValue3, element);
        this.resolver.scheduleResolve();
      }
      flatten() {
        super.flatten();
        if (this._resolved) {
          Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));
        }
      }
      initPlayback(keyframes$1) {
        const { type = "keyframes", repeat = 0, repeatDelay = 0, repeatType, velocity = 0 } = this.options;
        const generatorFactory = isGenerator(type) ? type : generators[type] || keyframes;
        let mapPercentToKeyframes;
        let mirroredGenerator;
        if (false) {
          invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);
        }
        if (generatorFactory !== keyframes && typeof keyframes$1[0] !== "number") {
          mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));
          keyframes$1 = [0, 100];
        }
        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });
        if (repeatType === "mirror") {
          mirroredGenerator = generatorFactory({
            ...this.options,
            keyframes: [...keyframes$1].reverse(),
            velocity: -velocity
          });
        }
        if (generator.calculatedDuration === null) {
          generator.calculatedDuration = calcGeneratorDuration(generator);
        }
        const { calculatedDuration } = generator;
        const resolvedDuration = calculatedDuration + repeatDelay;
        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;
        return {
          generator,
          mirroredGenerator,
          mapPercentToKeyframes,
          calculatedDuration,
          resolvedDuration,
          totalDuration
        };
      }
      onPostResolved() {
        const { autoplay = true } = this.options;
        activeAnimations.mainThread++;
        this.play();
        if (this.pendingPlayState === "paused" || !autoplay) {
          this.pause();
        } else {
          this.state = this.pendingPlayState;
        }
      }
      tick(timestamp, sample = false) {
        const { resolved } = this;
        if (!resolved) {
          const { keyframes: keyframes4 } = this.options;
          return { done: true, value: keyframes4[keyframes4.length - 1] };
        }
        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes: keyframes3, calculatedDuration, totalDuration, resolvedDuration } = resolved;
        if (this.startTime === null)
          return generator.next(0);
        const { delay: delay3, repeat, repeatType, repeatDelay, onUpdate } = this.options;
        if (this.speed > 0) {
          this.startTime = Math.min(this.startTime, timestamp);
        } else if (this.speed < 0) {
          this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);
        }
        if (sample) {
          this.currentTime = timestamp;
        } else if (this.holdTime !== null) {
          this.currentTime = this.holdTime;
        } else {
          this.currentTime = Math.round(timestamp - this.startTime) * this.speed;
        }
        const timeWithoutDelay = this.currentTime - delay3 * (this.speed >= 0 ? 1 : -1);
        const isInDelayPhase = this.speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
        this.currentTime = Math.max(timeWithoutDelay, 0);
        if (this.state === "finished" && this.holdTime === null) {
          this.currentTime = totalDuration;
        }
        let elapsed = this.currentTime;
        let frameGenerator = generator;
        if (repeat) {
          const progress3 = Math.min(this.currentTime, totalDuration) / resolvedDuration;
          let currentIteration = Math.floor(progress3);
          let iterationProgress = progress3 % 1;
          if (!iterationProgress && progress3 >= 1) {
            iterationProgress = 1;
          }
          iterationProgress === 1 && currentIteration--;
          currentIteration = Math.min(currentIteration, repeat + 1);
          const isOddIteration = Boolean(currentIteration % 2);
          if (isOddIteration) {
            if (repeatType === "reverse") {
              iterationProgress = 1 - iterationProgress;
              if (repeatDelay) {
                iterationProgress -= repeatDelay / resolvedDuration;
              }
            } else if (repeatType === "mirror") {
              frameGenerator = mirroredGenerator;
            }
          }
          elapsed = clamp2(0, 1, iterationProgress) * resolvedDuration;
        }
        const state2 = isInDelayPhase ? { done: false, value: keyframes3[0] } : frameGenerator.next(elapsed);
        if (mapPercentToKeyframes) {
          state2.value = mapPercentToKeyframes(state2.value);
        }
        let { done } = state2;
        if (!isInDelayPhase && calculatedDuration !== null) {
          done = this.speed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;
        }
        const isAnimationFinished = this.holdTime === null && (this.state === "finished" || this.state === "running" && done);
        if (isAnimationFinished && finalKeyframe !== void 0) {
          state2.value = getFinalKeyframe(keyframes3, this.options, finalKeyframe);
        }
        if (onUpdate) {
          onUpdate(state2.value);
        }
        if (isAnimationFinished) {
          this.finish();
        }
        return state2;
      }
      get duration() {
        const { resolved } = this;
        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;
      }
      get time() {
        return millisecondsToSeconds(this.currentTime);
      }
      set time(newTime) {
        newTime = secondsToMilliseconds(newTime);
        this.currentTime = newTime;
        if (this.holdTime !== null || this.speed === 0) {
          this.holdTime = newTime;
        } else if (this.driver) {
          this.startTime = this.driver.now() - newTime / this.speed;
        }
      }
      get speed() {
        return this.playbackSpeed;
      }
      set speed(newSpeed) {
        const hasChanged = this.playbackSpeed !== newSpeed;
        this.playbackSpeed = newSpeed;
        if (hasChanged) {
          this.time = millisecondsToSeconds(this.currentTime);
        }
      }
      play() {
        if (!this.resolver.isScheduled) {
          this.resolver.resume();
        }
        if (!this._resolved) {
          this.pendingPlayState = "running";
          return;
        }
        if (this.isStopped)
          return;
        const { driver = frameloopDriver, onPlay, startTime } = this.options;
        if (!this.driver) {
          this.driver = driver((timestamp) => this.tick(timestamp));
        }
        onPlay && onPlay();
        const now3 = this.driver.now();
        if (this.holdTime !== null) {
          this.startTime = now3 - this.holdTime;
        } else if (!this.startTime) {
          this.startTime = startTime ?? this.calcStartTime();
        } else if (this.state === "finished") {
          this.startTime = now3;
        }
        if (this.state === "finished") {
          this.updateFinishedPromise();
        }
        this.cancelTime = this.startTime;
        this.holdTime = null;
        this.state = "running";
        this.driver.start();
      }
      pause() {
        if (!this._resolved) {
          this.pendingPlayState = "paused";
          return;
        }
        this.state = "paused";
        this.holdTime = this.currentTime ?? 0;
      }
      complete() {
        if (this.state !== "running") {
          this.play();
        }
        this.pendingPlayState = this.state = "finished";
        this.holdTime = null;
      }
      finish() {
        this.teardown();
        this.state = "finished";
        const { onComplete } = this.options;
        onComplete && onComplete();
      }
      cancel() {
        if (this.cancelTime !== null) {
          this.tick(this.cancelTime);
        }
        this.teardown();
        this.updateFinishedPromise();
      }
      teardown() {
        this.state = "idle";
        this.stopDriver();
        this.resolveFinishedPromise();
        this.updateFinishedPromise();
        this.startTime = this.cancelTime = null;
        this.resolver.cancel();
        activeAnimations.mainThread--;
      }
      stopDriver() {
        if (!this.driver)
          return;
        this.driver.stop();
        this.driver = void 0;
      }
      sample(time3) {
        this.startTime = 0;
        return this.tick(time3, true);
      }
      get finished() {
        return this.currentFinishedPromise;
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs
var acceleratedValues;
var init_accelerated_values = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs"() {
    acceleratedValues = /* @__PURE__ */ new Set([
      "opacity",
      "clipPath",
      "filter",
      "transform"
      // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
      // or until we implement support for linear() easing.
      // "background-color"
    ]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs
var supportsWaapi;
var init_supports_waapi = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs"() {
    init_memo();
    supportsWaapi = /* @__PURE__ */ memo(() => Object.hasOwnProperty.call(Element.prototype, "animate"));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs
var cubicBezierAsString;
var init_cubic_bezier2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs"() {
    cubicBezierAsString = ([a12, b4, c13, d6]) => `cubic-bezier(${a12}, ${b4}, ${c13}, ${d6})`;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/supported.mjs
var supportedWaapiEasing;
var init_supported = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/supported.mjs"() {
    init_cubic_bezier2();
    supportedWaapiEasing = {
      linear: "linear",
      ease: "ease",
      easeIn: "ease-in",
      easeOut: "ease-out",
      easeInOut: "ease-in-out",
      circIn: /* @__PURE__ */ cubicBezierAsString([0, 0.65, 0.55, 1]),
      circOut: /* @__PURE__ */ cubicBezierAsString([0.55, 0, 1, 0.45]),
      backIn: /* @__PURE__ */ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
      backOut: /* @__PURE__ */ cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs
function mapEasingToNativeEasing(easing, duration) {
  if (!easing) {
    return void 0;
  } else if (typeof easing === "function" && supportsLinearEasing()) {
    return generateLinearEasing(easing, duration);
  } else if (isBezierDefinition(easing)) {
    return cubicBezierAsString(easing);
  } else if (Array.isArray(easing)) {
    return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) || supportedWaapiEasing.easeOut);
  } else {
    return supportedWaapiEasing[easing];
  }
}
var init_map_easing = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs"() {
    init_is_bezier_definition();
    init_linear_easing();
    init_linear();
    init_cubic_bezier2();
    init_supported();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs
function startWaapiAnimation(element, valueName, keyframes3, { delay: delay3 = 0, duration = 300, repeat = 0, repeatType = "loop", ease: ease3 = "easeInOut", times } = {}, pseudoElement = void 0) {
  const keyframeOptions = {
    [valueName]: keyframes3
  };
  if (times)
    keyframeOptions.offset = times;
  const easing = mapEasingToNativeEasing(ease3, duration);
  if (Array.isArray(easing))
    keyframeOptions.easing = easing;
  if (statsBuffer.value) {
    activeAnimations.waapi++;
  }
  const animation = element.animate(keyframeOptions, {
    delay: delay3,
    duration,
    easing: !Array.isArray(easing) ? easing : "linear",
    fill: "both",
    iterations: repeat + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal",
    pseudoElement
  });
  if (statsBuffer.value) {
    animation.finished.finally(() => {
      activeAnimations.waapi--;
    });
  }
  return animation;
}
var init_start_waapi_animation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs"() {
    init_animation_count();
    init_buffer();
    init_map_easing();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs
function attachTimeline(animation, timeline) {
  animation.timeline = timeline;
  animation.onfinish = null;
}
var init_attach_timeline = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs
function isWaapiSupportedEasing(easing) {
  return Boolean(typeof easing === "function" && supportsLinearEasing() || !easing || typeof easing === "string" && (easing in supportedWaapiEasing || supportsLinearEasing()) || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));
}
var init_is_supported = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs"() {
    init_is_bezier_definition();
    init_linear_easing();
    init_supported();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs
function requiresPregeneratedKeyframes(options) {
  return isGenerator(options.type) || options.type === "spring" || !isWaapiSupportedEasing(options.ease);
}
function pregenerateKeyframes(keyframes3, options) {
  const sampleAnimation = new MainThreadAnimation({
    ...options,
    keyframes: keyframes3,
    repeat: 0,
    delay: 0,
    isGenerator: true
  });
  let state2 = { done: false, value: keyframes3[0] };
  const pregeneratedKeyframes = [];
  let t13 = 0;
  while (!state2.done && t13 < maxDuration) {
    state2 = sampleAnimation.sample(t13);
    pregeneratedKeyframes.push(state2.value);
    t13 += sampleDelta;
  }
  return {
    times: void 0,
    keyframes: pregeneratedKeyframes,
    duration: t13 - sampleDelta,
    ease: "linear"
  };
}
function isUnsupportedEase(key) {
  return key in unsupportedEasingFunctions;
}
var sampleDelta, maxDuration, unsupportedEasingFunctions, AcceleratedAnimation;
var init_AcceleratedAnimation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs"() {
    init_anticipate();
    init_back();
    init_circ();
    init_DOMKeyframesResolver();
    init_BaseAnimation();
    init_MainThreadAnimation();
    init_accelerated_values();
    init_get_final_keyframe();
    init_supports_waapi();
    init_linear_easing();
    init_start_waapi_animation();
    init_attach_timeline();
    init_time_conversion();
    init_noop();
    init_is_generator();
    init_is_supported();
    sampleDelta = 10;
    maxDuration = 2e4;
    unsupportedEasingFunctions = {
      anticipate,
      backInOut,
      circInOut
    };
    AcceleratedAnimation = class extends BaseAnimation {
      constructor(options) {
        super(options);
        const { name: name2, motionValue: motionValue3, element, keyframes: keyframes3 } = this.options;
        this.resolver = new DOMKeyframesResolver(keyframes3, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name2, motionValue3, element);
        this.resolver.scheduleResolve();
      }
      initPlayback(keyframes3, finalKeyframe) {
        let { duration = 300, times, ease: ease3, type, motionValue: motionValue3, name: name2, startTime } = this.options;
        if (!motionValue3.owner || !motionValue3.owner.current) {
          return false;
        }
        if (typeof ease3 === "string" && supportsLinearEasing() && isUnsupportedEase(ease3)) {
          ease3 = unsupportedEasingFunctions[ease3];
        }
        if (requiresPregeneratedKeyframes(this.options)) {
          const { onComplete, onUpdate, motionValue: motionValue4, element, ...options } = this.options;
          const pregeneratedAnimation = pregenerateKeyframes(keyframes3, options);
          keyframes3 = pregeneratedAnimation.keyframes;
          if (keyframes3.length === 1) {
            keyframes3[1] = keyframes3[0];
          }
          duration = pregeneratedAnimation.duration;
          times = pregeneratedAnimation.times;
          ease3 = pregeneratedAnimation.ease;
          type = "keyframes";
        }
        const animation = startWaapiAnimation(motionValue3.owner.current, name2, keyframes3, { ...this.options, duration, times, ease: ease3 });
        animation.startTime = startTime ?? this.calcStartTime();
        if (this.pendingTimeline) {
          attachTimeline(animation, this.pendingTimeline);
          this.pendingTimeline = void 0;
        } else {
          animation.onfinish = () => {
            const { onComplete } = this.options;
            motionValue3.set(getFinalKeyframe(keyframes3, this.options, finalKeyframe));
            onComplete && onComplete();
            this.cancel();
            this.resolveFinishedPromise();
          };
        }
        return {
          animation,
          duration,
          times,
          type,
          ease: ease3,
          keyframes: keyframes3
        };
      }
      get duration() {
        const { resolved } = this;
        if (!resolved)
          return 0;
        const { duration } = resolved;
        return millisecondsToSeconds(duration);
      }
      get time() {
        const { resolved } = this;
        if (!resolved)
          return 0;
        const { animation } = resolved;
        return millisecondsToSeconds(animation.currentTime || 0);
      }
      set time(newTime) {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.currentTime = secondsToMilliseconds(newTime);
      }
      get speed() {
        const { resolved } = this;
        if (!resolved)
          return 1;
        const { animation } = resolved;
        return animation.playbackRate;
      }
      get finished() {
        return this.resolved.animation.finished;
      }
      set speed(newSpeed) {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.playbackRate = newSpeed;
      }
      get state() {
        const { resolved } = this;
        if (!resolved)
          return "idle";
        const { animation } = resolved;
        return animation.playState;
      }
      get startTime() {
        const { resolved } = this;
        if (!resolved)
          return null;
        const { animation } = resolved;
        return animation.startTime;
      }
      /**
       * Replace the default DocumentTimeline with another AnimationTimeline.
       * Currently used for scroll animations.
       */
      attachTimeline(timeline) {
        if (!this._resolved) {
          this.pendingTimeline = timeline;
        } else {
          const { resolved } = this;
          if (!resolved)
            return noop;
          const { animation } = resolved;
          attachTimeline(animation, timeline);
        }
        return noop;
      }
      play() {
        if (this.isStopped)
          return;
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        if (animation.playState === "finished") {
          this.updateFinishedPromise();
        }
        animation.play();
      }
      pause() {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.pause();
      }
      stop() {
        this.resolver.cancel();
        this.isStopped = true;
        if (this.state === "idle")
          return;
        this.resolveFinishedPromise();
        this.updateFinishedPromise();
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation, keyframes: keyframes3, duration, type, ease: ease3, times } = resolved;
        if (animation.playState === "idle" || animation.playState === "finished") {
          return;
        }
        if (this.time) {
          const { motionValue: motionValue3, onUpdate, onComplete, element, ...options } = this.options;
          const sampleAnimation = new MainThreadAnimation({
            ...options,
            keyframes: keyframes3,
            duration,
            type,
            ease: ease3,
            times,
            isGenerator: true
          });
          const sampleTime = secondsToMilliseconds(this.time);
          motionValue3.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);
        }
        const { onStop } = this.options;
        onStop && onStop();
        this.cancel();
      }
      complete() {
        const { resolved } = this;
        if (!resolved)
          return;
        resolved.animation.finish();
      }
      cancel() {
        const { resolved } = this;
        if (!resolved)
          return;
        resolved.animation.cancel();
      }
      static supports(options) {
        const { motionValue: motionValue3, name: name2, repeatDelay, repeatType, damping, type } = options;
        if (!motionValue3 || !motionValue3.owner || !(motionValue3.owner.current instanceof HTMLElement)) {
          return false;
        }
        const { onUpdate, transformTemplate } = motionValue3.owner.getProps();
        return supportsWaapi() && name2 && acceleratedValues.has(name2) && (name2 !== "transform" || !transformTemplate) && /**
         * If we're outputting values to onUpdate then we can't use WAAPI as there's
         * no way to read the value from WAAPI every frame.
         */
        !onUpdate && !repeatDelay && repeatType !== "mirror" && damping !== 0 && type !== "inertia";
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring, criticallyDampedSpring, keyframesTransition, ease, getDefaultTransition;
var init_default_transitions = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs"() {
    init_keys_transform();
    underDampedSpring = {
      type: "spring",
      stiffness: 500,
      damping: 25,
      restSpeed: 10
    };
    criticallyDampedSpring = (target) => ({
      type: "spring",
      stiffness: 550,
      damping: target === 0 ? 2 * Math.sqrt(550) : 30,
      restSpeed: 10
    });
    keyframesTransition = {
      type: "keyframes",
      duration: 0.8
    };
    ease = {
      type: "keyframes",
      ease: [0.25, 0.1, 0.35, 1],
      duration: 0.3
    };
    getDefaultTransition = (valueKey, { keyframes: keyframes3 }) => {
      if (keyframes3.length > 2) {
        return keyframesTransition;
      } else if (transformProps.has(valueKey)) {
        return valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes3[1]) : underDampedSpring;
      }
      return ease;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}
var init_is_transition_defined = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/get-value-transition.mjs
function getValueTransition(transition, key) {
  return transition?.[key] ?? transition?.["default"] ?? transition;
}
var init_get_value_transition = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/get-value-transition.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/scroll-timeline.mjs
var supportsScrollTimeline;
var init_scroll_timeline = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/scroll-timeline.mjs"() {
    init_memo();
    supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== void 0);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/GroupAnimation.mjs
var GroupAnimation;
var init_GroupAnimation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/GroupAnimation.mjs"() {
    init_scroll_timeline();
    GroupAnimation = class {
      constructor(animations3) {
        this.stop = () => this.runAll("stop");
        this.animations = animations3.filter(Boolean);
      }
      get finished() {
        return Promise.all(this.animations.map((animation) => animation.finished));
      }
      /**
       * TODO: Filter out cancelled or stopped animations before returning
       */
      getAll(propName) {
        return this.animations[0][propName];
      }
      setAll(propName, newValue) {
        for (let i11 = 0; i11 < this.animations.length; i11++) {
          this.animations[i11][propName] = newValue;
        }
      }
      attachTimeline(timeline, fallback) {
        const subscriptions = this.animations.map((animation) => {
          if (supportsScrollTimeline() && animation.attachTimeline) {
            return animation.attachTimeline(timeline);
          } else if (typeof fallback === "function") {
            return fallback(animation);
          }
        });
        return () => {
          subscriptions.forEach((cancel, i11) => {
            cancel && cancel();
            this.animations[i11].stop();
          });
        };
      }
      get time() {
        return this.getAll("time");
      }
      set time(time3) {
        this.setAll("time", time3);
      }
      get speed() {
        return this.getAll("speed");
      }
      set speed(speed) {
        this.setAll("speed", speed);
      }
      get startTime() {
        return this.getAll("startTime");
      }
      get duration() {
        let max = 0;
        for (let i11 = 0; i11 < this.animations.length; i11++) {
          max = Math.max(max, this.animations[i11].duration);
        }
        return max;
      }
      runAll(methodName) {
        this.animations.forEach((controls) => controls[methodName]());
      }
      flatten() {
        this.runAll("flatten");
      }
      play() {
        this.runAll("play");
      }
      pause() {
        this.runAll("pause");
      }
      cancel() {
        this.runAll("cancel");
      }
      complete() {
        this.runAll("complete");
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs
var GroupAnimationWithThen;
var init_GroupAnimationWithThen = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs"() {
    init_GroupAnimation();
    GroupAnimationWithThen = class extends GroupAnimation {
      then(onResolve, _onReject) {
        return this.finished.finally(onResolve).then(() => {
        });
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs
var animateMotionValue;
var init_motion_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs"() {
    init_use_instant_transition_state();
    init_AcceleratedAnimation();
    init_MainThreadAnimation();
    init_get_final_keyframe();
    init_default_transitions();
    init_is_transition_defined();
    init_get_value_transition();
    init_time_conversion();
    init_global_config();
    init_frame();
    init_GroupAnimationWithThen();
    animateMotionValue = (name2, value, target, transition = {}, element, isHandoff) => (onComplete) => {
      const valueTransition = getValueTransition(transition, name2) || {};
      const delay3 = valueTransition.delay || transition.delay || 0;
      let { elapsed = 0 } = transition;
      elapsed = elapsed - secondsToMilliseconds(delay3);
      let options = {
        keyframes: Array.isArray(target) ? target : [null, target],
        ease: "easeOut",
        velocity: value.getVelocity(),
        ...valueTransition,
        delay: -elapsed,
        onUpdate: (v5) => {
          value.set(v5);
          valueTransition.onUpdate && valueTransition.onUpdate(v5);
        },
        onComplete: () => {
          onComplete();
          valueTransition.onComplete && valueTransition.onComplete();
        },
        name: name2,
        motionValue: value,
        element: isHandoff ? void 0 : element
      };
      if (!isTransitionDefined(valueTransition)) {
        options = {
          ...options,
          ...getDefaultTransition(name2, options)
        };
      }
      if (options.duration) {
        options.duration = secondsToMilliseconds(options.duration);
      }
      if (options.repeatDelay) {
        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);
      }
      if (options.from !== void 0) {
        options.keyframes[0] = options.from;
      }
      let shouldSkip = false;
      if (options.type === false || options.duration === 0 && !options.repeatDelay) {
        options.duration = 0;
        if (options.delay === 0) {
          shouldSkip = true;
        }
      }
      if (instantAnimationState.current || MotionGlobalConfig.skipAnimations) {
        shouldSkip = true;
        options.duration = 0;
        options.delay = 0;
      }
      options.allowFlatten = !valueTransition.type && !valueTransition.ease;
      if (shouldSkip && !isHandoff && value.get() !== void 0) {
        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);
        if (finalKeyframe !== void 0) {
          frame.update(() => {
            options.onUpdate(finalKeyframe);
            options.onComplete();
          });
          return new GroupAnimationWithThen([]);
        }
      }
      if (!isHandoff && AcceleratedAnimation.supports(options)) {
        return new AcceleratedAnimation(options);
      } else {
        return new MainThreadAnimation(options);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs
function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}
function animateTarget(visualElement, targetAndTransition, { delay: delay3 = 0, transitionOverride, type } = {}) {
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;
  if (transitionOverride)
    transition = transitionOverride;
  const animations3 = [];
  const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];
  for (const key in target) {
    const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);
    const valueTarget = target[key];
    if (valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    const valueTransition = {
      delay: delay3,
      ...getValueTransition(transition || {}, key)
    };
    let isHandoff = false;
    if (window.MotionHandoffAnimation) {
      const appearId = getOptimisedAppearId(visualElement);
      if (appearId) {
        const startTime = window.MotionHandoffAnimation(appearId, key, frame);
        if (startTime !== null) {
          valueTransition.startTime = startTime;
          isHandoff = true;
        }
      }
    }
    addValueToWillChange(visualElement, key);
    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key) ? { type: false } : valueTransition, visualElement, isHandoff));
    const animation = value.animation;
    if (animation) {
      animations3.push(animation);
    }
  }
  if (transitionEnd) {
    Promise.all(animations3).then(() => {
      frame.update(() => {
        transitionEnd && setTarget(visualElement, transitionEnd);
      });
    });
  }
  return animations3;
}
var init_visual_element_target = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs"() {
    init_keys_position();
    init_setters();
    init_add_will_change();
    init_get_appear_id();
    init_motion_value();
    init_get_value_transition();
    init_frame();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs
function animateVariant(visualElement, variant, options = {}) {
  const resolved = resolveVariant(visualElement, variant, options.type === "exit" ? visualElement.presenceContext?.custom : void 0);
  let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  const getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve();
  const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    const { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve();
  const { when } = transition;
  if (when) {
    const [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else {
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
  }
}
function animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  const animations3 = [];
  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
  const generateStaggerDuration = staggerDirection === 1 ? (i11 = 0) => i11 * staggerChildren : (i11 = 0) => maxStaggerDuration - i11 * staggerChildren;
  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i11) => {
    child.notify("AnimationStart", variant);
    animations3.push(animateVariant(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i11)
    }).then(() => child.notify("AnimationComplete", variant)));
  });
  return Promise.all(animations3);
}
function sortByTreeOrder(a12, b4) {
  return a12.sortNodePosition(b4);
}
var init_visual_element_variant = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs"() {
    init_resolve_dynamic_variants();
    init_visual_element_target();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element.mjs
function animateVisualElement(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    const animations3 = definition.map((variant) => animateVariant(visualElement, variant, options));
    animation = Promise.all(animations3);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement, definition, options);
  } else {
    const resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => {
    visualElement.notify("AnimationComplete", definition);
  });
}
var init_visual_element = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element.mjs"() {
    init_resolve_dynamic_variants();
    init_visual_element_target();
    init_visual_element_variant();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  const prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (let i11 = 0; i11 < prevLength; i11++) {
    if (prev[i11] !== next[i11])
      return false;
  }
  return true;
}
var init_shallow_compare = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/shallow-compare.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/get-variant-context.mjs
function getVariantContext(visualElement) {
  if (!visualElement)
    return void 0;
  if (!visualElement.isControllingVariants) {
    const context2 = visualElement.parent ? getVariantContext(visualElement.parent) || {} : {};
    if (visualElement.props.initial !== void 0) {
      context2.initial = visualElement.props.initial;
    }
    return context2;
  }
  const context = {};
  for (let i11 = 0; i11 < numVariantProps; i11++) {
    const name2 = variantProps[i11];
    const prop = visualElement.props[name2];
    if (isVariantLabel(prop) || prop === false) {
      context[name2] = prop;
    }
  }
  return context;
}
var numVariantProps;
var init_get_variant_context = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/get-variant-context.mjs"() {
    init_is_variant_label();
    init_variant_props();
    numVariantProps = variantProps.length;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/animation-state.mjs
function animateList(visualElement) {
  return (animations3) => Promise.all(animations3.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
  let animate = animateList(visualElement);
  let state2 = createState();
  let isInitialRender = true;
  const buildResolvedTypeValues = (type) => (acc, definition) => {
    const resolved = resolveVariant(visualElement, definition, type === "exit" ? visualElement.presenceContext?.custom : void 0);
    if (resolved) {
      const { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate = makeAnimator(visualElement);
  }
  function animateChanges(changedActiveType) {
    const { props } = visualElement;
    const context = getVariantContext(visualElement.parent) || {};
    const animations3 = [];
    const removedKeys = /* @__PURE__ */ new Set();
    let encounteredKeys = {};
    let removedVariantIndex = Infinity;
    for (let i11 = 0; i11 < numAnimationTypes; i11++) {
      const type = reversePriorityOrder[i11];
      const typeState = state2[type];
      const prop = props[type] !== void 0 ? props[type] : context[type];
      const propIsVariant = isVariantLabel(prop);
      const activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i11;
      let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = { ...encounteredKeys };
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        continue;
      }
      const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i11 > removedVariantIndex && propIsVariant;
      let handledRemovedValues = false;
      const definitionList = Array.isArray(prop) ? prop : [prop];
      let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});
      if (activeDelta === false)
        resolvedValues = {};
      const { prevResolvedValues = {} } = typeState;
      const allKeys = {
        ...prevResolvedValues,
        ...resolvedValues
      };
      const markToAnimate = (key) => {
        shouldAnimateType = true;
        if (removedKeys.has(key)) {
          handledRemovedValues = true;
          removedKeys.delete(key);
        }
        typeState.needsAnimating[key] = true;
        const motionValue3 = visualElement.getValue(key);
        if (motionValue3)
          motionValue3.liveStyle = false;
      };
      for (const key in allKeys) {
        const next = resolvedValues[key];
        const prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        let valueHasChanged = false;
        if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
          valueHasChanged = !shallowCompare(next, prev);
        } else {
          valueHasChanged = next !== prev;
        }
        if (valueHasChanged) {
          if (next !== void 0 && next !== null) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = { ...encounteredKeys, ...resolvedValues };
      }
      if (isInitialRender && visualElement.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      const willAnimateViaParent = isInherited && variantDidChange;
      const needsAnimating = !willAnimateViaParent || handledRemovedValues;
      if (shouldAnimateType && needsAnimating) {
        animations3.push(...definitionList.map((animation) => ({
          animation,
          options: { type }
        })));
      }
    }
    if (removedKeys.size) {
      const fallbackAnimation = {};
      if (typeof props.initial !== "boolean") {
        const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial) ? props.initial[0] : props.initial);
        if (initialTransition && initialTransition.transition) {
          fallbackAnimation.transition = initialTransition.transition;
        }
      }
      removedKeys.forEach((key) => {
        const fallbackTarget = visualElement.getBaseTarget(key);
        const motionValue3 = visualElement.getValue(key);
        if (motionValue3)
          motionValue3.liveStyle = true;
        fallbackAnimation[key] = fallbackTarget ?? null;
      });
      animations3.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations3.length);
    if (isInitialRender && (props.initial === false || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate(animations3) : Promise.resolve();
  }
  function setActive(type, isActive) {
    if (state2[type].isActive === isActive)
      return Promise.resolve();
    visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));
    state2[type].isActive = isActive;
    const animations3 = animateChanges(type);
    for (const key in state2) {
      state2[key].protectedKeys = {};
    }
    return animations3;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state2,
    reset: () => {
      state2 = createState();
      isInitialRender = true;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (Array.isArray(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive = false) {
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  return {
    animate: createTypeState(true),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState()
  };
}
var reversePriorityOrder, numAnimationTypes;
var init_animation_state = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/animation-state.mjs"() {
    init_visual_element();
    init_is_animation_controls();
    init_is_keyframes_target();
    init_shallow_compare();
    init_get_variant_context();
    init_is_variant_label();
    init_resolve_dynamic_variants();
    init_variant_props();
    reversePriorityOrder = [...variantPriorityOrder].reverse();
    numAnimationTypes = variantPriorityOrder.length;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/Feature.mjs
var Feature;
var init_Feature = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/Feature.mjs"() {
    Feature = class {
      constructor(node) {
        this.isMounted = false;
        this.node = node;
      }
      update() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/index.mjs
var AnimationFeature;
var init_animation = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/index.mjs"() {
    init_is_animation_controls();
    init_animation_state();
    init_Feature();
    AnimationFeature = class extends Feature {
      /**
       * We dynamically generate the AnimationState manager as it contains a reference
       * to the underlying animation library. We only want to load that if we load this,
       * so people can optionally code split it out using the `m` component.
       */
      constructor(node) {
        super(node);
        node.animationState || (node.animationState = createAnimationState(node));
      }
      updateAnimationControlsSubscription() {
        const { animate } = this.node.getProps();
        if (isAnimationControls(animate)) {
          this.unmountControls = animate.subscribe(this.node);
        }
      }
      /**
       * Subscribe any provided AnimationControls to the component's VisualElement
       */
      mount() {
        this.updateAnimationControlsSubscription();
      }
      update() {
        const { animate } = this.node.getProps();
        const { animate: prevAnimate } = this.node.prevProps || {};
        if (animate !== prevAnimate) {
          this.updateAnimationControlsSubscription();
        }
      }
      unmount() {
        this.node.animationState.reset();
        this.unmountControls?.();
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/exit.mjs
var id, ExitAnimationFeature;
var init_exit = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/exit.mjs"() {
    init_Feature();
    id = 0;
    ExitAnimationFeature = class extends Feature {
      constructor() {
        super(...arguments);
        this.id = id++;
      }
      update() {
        if (!this.node.presenceContext)
          return;
        const { isPresent, onExitComplete } = this.node.presenceContext;
        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
        if (!this.node.animationState || isPresent === prevIsPresent) {
          return;
        }
        const exitAnimation = this.node.animationState.setActive("exit", !isPresent);
        if (onExitComplete && !isPresent) {
          exitAnimation.then(() => {
            onExitComplete(this.id);
          });
        }
      }
      mount() {
        const { register, onExitComplete } = this.node.presenceContext || {};
        if (onExitComplete) {
          onExitComplete(this.id);
        }
        if (register) {
          this.unmount = register(this.id);
        }
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animations.mjs
var animations;
var init_animations = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animations.mjs"() {
    init_animation();
    init_exit();
    animations = {
      animation: {
        Feature: AnimationFeature
      },
      exit: {
        Feature: ExitAnimationFeature
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/add-dom-event.mjs
function addDomEvent(target, eventName, handler2, options = { passive: true }) {
  target.addEventListener(eventName, handler2, options);
  return () => target.removeEventListener(eventName, handler2);
}
var init_add_dom_event = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/add-dom-event.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs
var isPrimaryPointer;
var init_is_primary_pointer = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs"() {
    isPrimaryPointer = (event) => {
      if (event.pointerType === "mouse") {
        return typeof event.button !== "number" || event.button <= 0;
      } else {
        return event.isPrimary !== false;
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/event-info.mjs
function extractEventInfo(event) {
  return {
    point: {
      x: event.pageX,
      y: event.pageY
    }
  };
}
var addPointerInfo;
var init_event_info = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/event-info.mjs"() {
    init_is_primary_pointer();
    addPointerInfo = (handler2) => {
      return (event) => isPrimaryPointer(event) && handler2(event, extractEventInfo(event));
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/add-pointer-event.mjs
function addPointerEvent(target, eventName, handler2, options) {
  return addDomEvent(target, eventName, addPointerInfo(handler2), options);
}
var init_add_pointer_event = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/events/add-pointer-event.mjs"() {
    init_add_dom_event();
    init_event_info();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox({ top: top2, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top2, max: bottom }
  };
}
function convertBoxToBoundingBox({ x: x3, y: y3 }) {
  return { top: y3.min, right: x3.max, bottom: y3.max, left: x3.min };
}
function transformBoxPoints(point2, transformPoint3) {
  if (!transformPoint3)
    return point2;
  const topLeft = transformPoint3({ x: point2.left, y: point2.top });
  const bottomRight = transformPoint3({ x: point2.right, y: point2.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}
var init_conversion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta(delta, source, target, origin = 0.5) {
  delta.origin = origin;
  delta.originPoint = mixNumber(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  delta.translate = mixNumber(target.min, target.max, delta.origin) - delta.originPoint;
  if (delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX || isNaN(delta.scale)) {
    delta.scale = 1;
  }
  if (delta.translate >= TRANSLATE_MIN && delta.translate <= TRANSLATE_MAX || isNaN(delta.translate)) {
    delta.translate = 0;
  }
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : void 0);
  calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : void 0);
}
function calcRelativeAxis(target, relative2, parent) {
  target.min = parent.min + relative2.min;
  target.max = target.min + calcLength(relative2);
}
function calcRelativeBox(target, relative2, parent) {
  calcRelativeAxis(target.x, relative2.x, parent.x);
  calcRelativeAxis(target.y, relative2.y, parent.y);
}
function calcRelativeAxisPosition(target, layout3, parent) {
  target.min = layout3.min - parent.min;
  target.max = target.min + calcLength(layout3);
}
function calcRelativePosition(target, layout3, parent) {
  calcRelativeAxisPosition(target.x, layout3.x, parent.x);
  calcRelativeAxisPosition(target.y, layout3.y, parent.y);
}
var SCALE_PRECISION, SCALE_MIN, SCALE_MAX, TRANSLATE_PRECISION, TRANSLATE_MIN, TRANSLATE_MAX;
var init_delta_calc = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-calc.mjs"() {
    init_number2();
    SCALE_PRECISION = 1e-4;
    SCALE_MIN = 1 - SCALE_PRECISION;
    SCALE_MAX = 1 + SCALE_PRECISION;
    TRANSLATE_PRECISION = 0.01;
    TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;
    TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta, createDelta, createAxis, createBox;
var init_models = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs"() {
    createAxisDelta = () => ({
      translate: 0,
      scale: 1,
      origin: 0,
      originPoint: 0
    });
    createDelta = () => ({
      x: createAxisDelta(),
      y: createAxisDelta()
    });
    createAxis = () => ({ min: 0, max: 0 });
    createBox = () => ({
      x: createAxis(),
      y: createAxis()
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}
var init_each_axis = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/each-axis.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale3) {
  return scale3 === void 0 || scale3 === 1;
}
function hasScale({ scale: scale3, scaleX: scaleX3, scaleY: scaleY3 }) {
  return !isIdentityScale(scale3) || !isIdentityScale(scaleX3) || !isIdentityScale(scaleY3);
}
function hasTransform(values2) {
  return hasScale(values2) || has2DTranslate(values2) || values2.z || values2.rotate || values2.rotateX || values2.rotateY || values2.skewX || values2.skewY;
}
function has2DTranslate(values2) {
  return is2DTranslate(values2.x) || is2DTranslate(values2.y);
}
function is2DTranslate(value) {
  return value && value !== "0%";
}
var init_has_transform = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point2, scale3, originPoint) {
  const distanceFromOrigin = point2 - originPoint;
  const scaled = scale3 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point2, translate, scale3, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point2 = scalePoint(point2, boxScale, originPoint);
  }
  return scalePoint(point2, scale3, originPoint) + translate;
}
function applyAxisDelta(axis, translate = 0, scale3 = 1, originPoint, boxScale) {
  axis.min = applyPointDelta(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale3, originPoint, boxScale);
}
function applyBoxDelta(box3, { x: x3, y: y3 }) {
  applyAxisDelta(box3.x, x3.translate, x3.scale, x3.originPoint);
  applyAxisDelta(box3.y, y3.translate, y3.scale, y3.originPoint);
}
function applyTreeDeltas(box3, treeScale, treePath, isSharedTransition = false) {
  const treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  let node;
  let delta;
  for (let i11 = 0; i11 < treeLength; i11++) {
    node = treePath[i11];
    delta = node.projectionDelta;
    const { visualElement } = node.options;
    if (visualElement && visualElement.props.style && visualElement.props.style.display === "contents") {
      continue;
    }
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox(box3, {
        x: -node.scroll.offset.x,
        y: -node.scroll.offset.y
      });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box3, delta);
    }
    if (isSharedTransition && hasTransform(node.latestValues)) {
      transformBox(box3, node.latestValues);
    }
  }
  if (treeScale.x < TREE_SCALE_SNAP_MAX && treeScale.x > TREE_SCALE_SNAP_MIN) {
    treeScale.x = 1;
  }
  if (treeScale.y < TREE_SCALE_SNAP_MAX && treeScale.y > TREE_SCALE_SNAP_MIN) {
    treeScale.y = 1;
  }
}
function translateAxis(axis, distance3) {
  axis.min = axis.min + distance3;
  axis.max = axis.max + distance3;
}
function transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {
  const originPoint = mixNumber(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);
}
function transformBox(box3, transform) {
  transformAxis(box3.x, transform.x, transform.scaleX, transform.scale, transform.originX);
  transformAxis(box3.y, transform.y, transform.scaleY, transform.scale, transform.originY);
}
var TREE_SCALE_SNAP_MIN, TREE_SCALE_SNAP_MAX;
var init_delta_apply = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs"() {
    init_number2();
    init_has_transform();
    TREE_SCALE_SNAP_MIN = 0.999999999999;
    TREE_SCALE_SNAP_MAX = 1.0000000000001;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint3) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint3));
}
function measurePageBox(element, rootProjectionNode3, transformPagePoint) {
  const viewportBox = measureViewportBox(element, transformPagePoint);
  const { scroll: scroll2 } = rootProjectionNode3;
  if (scroll2) {
    translateAxis(viewportBox.x, scroll2.offset.x);
    translateAxis(viewportBox.y, scroll2.offset.y);
  }
  return viewportBox;
}
var init_measure2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs"() {
    init_conversion();
    init_delta_apply();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/get-context-window.mjs
var getContextWindow;
var init_get_context_window = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/get-context-window.mjs"() {
    getContextWindow = ({ current }) => {
      return current ? current.ownerDocument.defaultView : null;
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/distance.mjs
function distance2D(a12, b4) {
  const xDelta = distance(a12.x, b4.x);
  const yDelta = distance(a12.y, b4.y);
  return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}
var distance;
var init_distance = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/distance.mjs"() {
    distance = (a12, b4) => Math.abs(a12 - b4);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/PanSession.mjs
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a12, b4) {
  return { x: a12.x - b4.x, y: a12.y - b4.y };
}
function getPanInfo({ point: point2 }, history) {
  return {
    point: point2,
    delta: subtractPoint(point2, lastDevicePoint(history)),
    offset: subtractPoint(point2, startDevicePoint(history)),
    velocity: getVelocity(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  let i11 = history.length - 1;
  let timestampedPoint = null;
  const lastPoint = lastDevicePoint(history);
  while (i11 >= 0) {
    timestampedPoint = history[i11];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i11--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  const time3 = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);
  if (time3 === 0) {
    return { x: 0, y: 0 };
  }
  const currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time3,
    y: (lastPoint.y - timestampedPoint.y) / time3
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}
var PanSession;
var init_PanSession = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/PanSession.mjs"() {
    init_add_pointer_event();
    init_event_info();
    init_distance();
    init_pipe();
    init_frame();
    init_is_primary_pointer();
    init_time_conversion();
    PanSession = class {
      constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {
        this.startEvent = null;
        this.lastMoveEvent = null;
        this.lastMoveEventInfo = null;
        this.handlers = {};
        this.contextWindow = window;
        this.updatePoint = () => {
          if (!(this.lastMoveEvent && this.lastMoveEventInfo))
            return;
          const info2 = getPanInfo(this.lastMoveEventInfo, this.history);
          const isPanStarted = this.startEvent !== null;
          const isDistancePastThreshold = distance2D(info2.offset, { x: 0, y: 0 }) >= 3;
          if (!isPanStarted && !isDistancePastThreshold)
            return;
          const { point: point3 } = info2;
          const { timestamp: timestamp2 } = frameData;
          this.history.push({ ...point3, timestamp: timestamp2 });
          const { onStart, onMove } = this.handlers;
          if (!isPanStarted) {
            onStart && onStart(this.lastMoveEvent, info2);
            this.startEvent = this.lastMoveEvent;
          }
          onMove && onMove(this.lastMoveEvent, info2);
        };
        this.handlePointerMove = (event2, info2) => {
          this.lastMoveEvent = event2;
          this.lastMoveEventInfo = transformPoint(info2, this.transformPagePoint);
          frame.update(this.updatePoint, true);
        };
        this.handlePointerUp = (event2, info2) => {
          this.end();
          const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;
          if (this.dragSnapToOrigin)
            resumeAnimation && resumeAnimation();
          if (!(this.lastMoveEvent && this.lastMoveEventInfo))
            return;
          const panInfo = getPanInfo(event2.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint(info2, this.transformPagePoint), this.history);
          if (this.startEvent && onEnd) {
            onEnd(event2, panInfo);
          }
          onSessionEnd && onSessionEnd(event2, panInfo);
        };
        if (!isPrimaryPointer(event))
          return;
        this.dragSnapToOrigin = dragSnapToOrigin;
        this.handlers = handlers;
        this.transformPagePoint = transformPagePoint;
        this.contextWindow = contextWindow || window;
        const info = extractEventInfo(event);
        const initialInfo = transformPoint(info, this.transformPagePoint);
        const { point: point2 } = initialInfo;
        const { timestamp } = frameData;
        this.history = [{ ...point2, timestamp }];
        const { onSessionStart } = handlers;
        onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
        this.removeListeners = pipe(addPointerEvent(this.contextWindow, "pointermove", this.handlePointerMove), addPointerEvent(this.contextWindow, "pointerup", this.handlePointerUp), addPointerEvent(this.contextWindow, "pointercancel", this.handlePointerUp));
      }
      updateHandlers(handlers) {
        this.handlers = handlers;
      }
      end() {
        this.removeListeners && this.removeListeners();
        cancelFrame(this.updatePoint);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point2, { min, max }, elastic) {
  if (min !== void 0 && point2 < min) {
    point2 = elastic ? mixNumber(min, point2, elastic.min) : Math.max(point2, min);
  } else if (max !== void 0 && point2 > max) {
    point2 = elastic ? mixNumber(max, point2, elastic.max) : Math.min(point2, max);
  }
  return point2;
}
function calcRelativeAxisConstraints(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, { top: top2, left, bottom, right }) {
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top2, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  let min = constraintsAxis.min - layoutAxis.min;
  let max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    [min, max] = [max, min];
  }
  return { min, max };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  let origin = 0.5;
  const sourceLength = calcLength(source);
  const targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp2(0, 1, origin);
}
function rebaseAxisConstraints(layout3, constraints) {
  const relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout3.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout3.min;
  }
  return relativeConstraints;
}
function resolveDragElastic(dragElastic = defaultElastic) {
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label3) {
  return typeof dragElastic === "number" ? dragElastic : dragElastic[label3] || 0;
}
var defaultElastic;
var init_constraints = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"() {
    init_delta_calc();
    init_clamp2();
    init_number2();
    init_progress();
    defaultElastic = 0.35;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/is-active.mjs
function isDragActive() {
  return isDragging.x || isDragging.y;
}
var isDragging;
var init_is_active = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/is-active.mjs"() {
    isDragging = {
      x: false,
      y: false
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/set-active.mjs
function setDragLock(axis) {
  if (axis === "x" || axis === "y") {
    if (isDragging[axis]) {
      return null;
    } else {
      isDragging[axis] = true;
      return () => {
        isDragging[axis] = false;
      };
    }
  } else {
    if (isDragging.x || isDragging.y) {
      return null;
    } else {
      isDragging.x = isDragging.y = true;
      return () => {
        isDragging.x = isDragging.y = false;
      };
    }
  }
}
var init_set_active = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/set-active.mjs"() {
    init_is_active();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
function shouldDrag(direction, drag3, currentDirection) {
  return (drag3 === true || drag3 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset, lockThreshold = 10) {
  let direction = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}
var elementDragControls, VisualElementDragControls;
var init_VisualElementDragControls = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs"() {
    init_motion_value();
    init_add_dom_event();
    init_add_pointer_event();
    init_event_info();
    init_conversion();
    init_delta_calc();
    init_models();
    init_each_axis();
    init_measure2();
    init_get_context_window();
    init_is_ref_object();
    init_number2();
    init_units();
    init_add_will_change();
    init_PanSession();
    init_constraints();
    init_frame();
    init_errors();
    init_set_active();
    elementDragControls = /* @__PURE__ */ new WeakMap();
    VisualElementDragControls = class {
      constructor(visualElement) {
        this.openDragLock = null;
        this.isDragging = false;
        this.currentDirection = null;
        this.originPoint = { x: 0, y: 0 };
        this.constraints = false;
        this.hasMutatedConstraints = false;
        this.elastic = createBox();
        this.visualElement = visualElement;
      }
      start(originEvent, { snapToCursor = false } = {}) {
        const { presenceContext } = this.visualElement;
        if (presenceContext && presenceContext.isPresent === false)
          return;
        const onSessionStart = (event) => {
          const { dragSnapToOrigin: dragSnapToOrigin2 } = this.getProps();
          dragSnapToOrigin2 ? this.pauseAnimation() : this.stopAnimation();
          if (snapToCursor) {
            this.snapToCursor(extractEventInfo(event).point);
          }
        };
        const onStart = (event, info) => {
          const { drag: drag3, dragPropagation, onDragStart } = this.getProps();
          if (drag3 && !dragPropagation) {
            if (this.openDragLock)
              this.openDragLock();
            this.openDragLock = setDragLock(drag3);
            if (!this.openDragLock)
              return;
          }
          this.isDragging = true;
          this.currentDirection = null;
          this.resolveConstraints();
          if (this.visualElement.projection) {
            this.visualElement.projection.isAnimationBlocked = true;
            this.visualElement.projection.target = void 0;
          }
          eachAxis((axis) => {
            let current = this.getAxisMotionValue(axis).get() || 0;
            if (percent.test(current)) {
              const { projection } = this.visualElement;
              if (projection && projection.layout) {
                const measuredAxis = projection.layout.layoutBox[axis];
                if (measuredAxis) {
                  const length = calcLength(measuredAxis);
                  current = length * (parseFloat(current) / 100);
                }
              }
            }
            this.originPoint[axis] = current;
          });
          if (onDragStart) {
            frame.postRender(() => onDragStart(event, info));
          }
          addValueToWillChange(this.visualElement, "transform");
          const { animationState } = this.visualElement;
          animationState && animationState.setActive("whileDrag", true);
        };
        const onMove = (event, info) => {
          const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
          if (!dragPropagation && !this.openDragLock)
            return;
          const { offset } = info;
          if (dragDirectionLock && this.currentDirection === null) {
            this.currentDirection = getCurrentDirection(offset);
            if (this.currentDirection !== null) {
              onDirectionLock && onDirectionLock(this.currentDirection);
            }
            return;
          }
          this.updateAxis("x", info.point, offset);
          this.updateAxis("y", info.point, offset);
          this.visualElement.render();
          onDrag && onDrag(event, info);
        };
        const onSessionEnd = (event, info) => this.stop(event, info);
        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === "paused" && this.getAxisMotionValue(axis).animation?.play());
        const { dragSnapToOrigin } = this.getProps();
        this.panSession = new PanSession(originEvent, {
          onSessionStart,
          onStart,
          onMove,
          onSessionEnd,
          resumeAnimation
        }, {
          transformPagePoint: this.visualElement.getTransformPagePoint(),
          dragSnapToOrigin,
          contextWindow: getContextWindow(this.visualElement)
        });
      }
      stop(event, info) {
        const isDragging3 = this.isDragging;
        this.cancel();
        if (!isDragging3)
          return;
        const { velocity } = info;
        this.startAnimation(velocity);
        const { onDragEnd } = this.getProps();
        if (onDragEnd) {
          frame.postRender(() => onDragEnd(event, info));
        }
      }
      cancel() {
        this.isDragging = false;
        const { projection, animationState } = this.visualElement;
        if (projection) {
          projection.isAnimationBlocked = false;
        }
        this.panSession && this.panSession.end();
        this.panSession = void 0;
        const { dragPropagation } = this.getProps();
        if (!dragPropagation && this.openDragLock) {
          this.openDragLock();
          this.openDragLock = null;
        }
        animationState && animationState.setActive("whileDrag", false);
      }
      updateAxis(axis, _point, offset) {
        const { drag: drag3 } = this.getProps();
        if (!offset || !shouldDrag(axis, drag3, this.currentDirection))
          return;
        const axisValue = this.getAxisMotionValue(axis);
        let next = this.originPoint[axis] + offset[axis];
        if (this.constraints && this.constraints[axis]) {
          next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
        }
        axisValue.set(next);
      }
      resolveConstraints() {
        const { dragConstraints, dragElastic } = this.getProps();
        const layout3 = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(false) : this.visualElement.projection?.layout;
        const prevConstraints = this.constraints;
        if (dragConstraints && isRefObject(dragConstraints)) {
          if (!this.constraints) {
            this.constraints = this.resolveRefConstraints();
          }
        } else {
          if (dragConstraints && layout3) {
            this.constraints = calcRelativeConstraints(layout3.layoutBox, dragConstraints);
          } else {
            this.constraints = false;
          }
        }
        this.elastic = resolveDragElastic(dragElastic);
        if (prevConstraints !== this.constraints && layout3 && this.constraints && !this.hasMutatedConstraints) {
          eachAxis((axis) => {
            if (this.constraints !== false && this.getAxisMotionValue(axis)) {
              this.constraints[axis] = rebaseAxisConstraints(layout3.layoutBox[axis], this.constraints[axis]);
            }
          });
        }
      }
      resolveRefConstraints() {
        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
        if (!constraints || !isRefObject(constraints))
          return false;
        const constraintsElement = constraints.current;
        invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
        const { projection } = this.visualElement;
        if (!projection || !projection.layout)
          return false;
        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);
        if (onMeasureDragConstraints) {
          const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
          this.hasMutatedConstraints = !!userConstraints;
          if (userConstraints) {
            measuredConstraints = convertBoundingBoxToBox(userConstraints);
          }
        }
        return measuredConstraints;
      }
      startAnimation(velocity) {
        const { drag: drag3, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps();
        const constraints = this.constraints || {};
        const momentumAnimations = eachAxis((axis) => {
          if (!shouldDrag(axis, drag3, this.currentDirection)) {
            return;
          }
          let transition = constraints && constraints[axis] || {};
          if (dragSnapToOrigin)
            transition = { min: 0, max: 0 };
          const bounceStiffness = dragElastic ? 200 : 1e6;
          const bounceDamping = dragElastic ? 40 : 1e7;
          const inertia3 = {
            type: "inertia",
            velocity: dragMomentum ? velocity[axis] : 0,
            bounceStiffness,
            bounceDamping,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...dragTransition,
            ...transition
          };
          return this.startAxisValueAnimation(axis, inertia3);
        });
        return Promise.all(momentumAnimations).then(onDragTransitionEnd);
      }
      startAxisValueAnimation(axis, transition) {
        const axisValue = this.getAxisMotionValue(axis);
        addValueToWillChange(this.visualElement, axis);
        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));
      }
      stopAnimation() {
        eachAxis((axis) => this.getAxisMotionValue(axis).stop());
      }
      pauseAnimation() {
        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());
      }
      getAnimationState(axis) {
        return this.getAxisMotionValue(axis).animation?.state;
      }
      /**
       * Drag works differently depending on which props are provided.
       *
       * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
       * - Otherwise, we apply the delta to the x/y motion values.
       */
      getAxisMotionValue(axis) {
        const dragKey = `_drag${axis.toUpperCase()}`;
        const props = this.visualElement.getProps();
        const externalMotionValue = props[dragKey];
        return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : void 0) || 0);
      }
      snapToCursor(point2) {
        eachAxis((axis) => {
          const { drag: drag3 } = this.getProps();
          if (!shouldDrag(axis, drag3, this.currentDirection))
            return;
          const { projection } = this.visualElement;
          const axisValue = this.getAxisMotionValue(axis);
          if (projection && projection.layout) {
            const { min, max } = projection.layout.layoutBox[axis];
            axisValue.set(point2[axis] - mixNumber(min, max, 0.5));
          }
        });
      }
      /**
       * When the viewport resizes we want to check if the measured constraints
       * have changed and, if so, reposition the element within those new constraints
       * relative to where it was before the resize.
       */
      scalePositionWithinConstraints() {
        if (!this.visualElement.current)
          return;
        const { drag: drag3, dragConstraints } = this.getProps();
        const { projection } = this.visualElement;
        if (!isRefObject(dragConstraints) || !projection || !this.constraints)
          return;
        this.stopAnimation();
        const boxProgress = { x: 0, y: 0 };
        eachAxis((axis) => {
          const axisValue = this.getAxisMotionValue(axis);
          if (axisValue && this.constraints !== false) {
            const latest = axisValue.get();
            boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, this.constraints[axis]);
          }
        });
        const { transformTemplate } = this.visualElement.getProps();
        this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
        projection.root && projection.root.updateScroll();
        projection.updateLayout();
        this.resolveConstraints();
        eachAxis((axis) => {
          if (!shouldDrag(axis, drag3, null))
            return;
          const axisValue = this.getAxisMotionValue(axis);
          const { min, max } = this.constraints[axis];
          axisValue.set(mixNumber(min, max, boxProgress[axis]));
        });
      }
      addListeners() {
        if (!this.visualElement.current)
          return;
        elementDragControls.set(this.visualElement, this);
        const element = this.visualElement.current;
        const stopPointerListener = addPointerEvent(element, "pointerdown", (event) => {
          const { drag: drag3, dragListener = true } = this.getProps();
          drag3 && dragListener && this.start(event);
        });
        const measureDragConstraints = () => {
          const { dragConstraints } = this.getProps();
          if (isRefObject(dragConstraints) && dragConstraints.current) {
            this.constraints = this.resolveRefConstraints();
          }
        };
        const { projection } = this.visualElement;
        const stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
        if (projection && !projection.layout) {
          projection.root && projection.root.updateScroll();
          projection.updateLayout();
        }
        frame.read(measureDragConstraints);
        const stopResizeListener = addDomEvent(window, "resize", () => this.scalePositionWithinConstraints());
        const stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged }) => {
          if (this.isDragging && hasLayoutChanged) {
            eachAxis((axis) => {
              const motionValue3 = this.getAxisMotionValue(axis);
              if (!motionValue3)
                return;
              this.originPoint[axis] += delta[axis].translate;
              motionValue3.set(motionValue3.get() + delta[axis].translate);
            });
            this.visualElement.render();
          }
        });
        return () => {
          stopResizeListener();
          stopPointerListener();
          stopMeasureLayoutListener();
          stopLayoutUpdateListener && stopLayoutUpdateListener();
        };
      }
      getProps() {
        const props = this.visualElement.getProps();
        const { drag: drag3 = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true } = props;
        return {
          ...props,
          drag: drag3,
          dragDirectionLock,
          dragPropagation,
          dragConstraints,
          dragElastic,
          dragMomentum
        };
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/index.mjs
var DragGesture;
var init_drag = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/index.mjs"() {
    init_Feature();
    init_VisualElementDragControls();
    init_noop();
    DragGesture = class extends Feature {
      constructor(node) {
        super(node);
        this.removeGroupControls = noop;
        this.removeListeners = noop;
        this.controls = new VisualElementDragControls(node);
      }
      mount() {
        const { dragControls } = this.node.getProps();
        if (dragControls) {
          this.removeGroupControls = dragControls.subscribe(this.controls);
        }
        this.removeListeners = this.controls.addListeners() || noop;
      }
      unmount() {
        this.removeGroupControls();
        this.removeListeners();
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs
var asyncHandler, PanGesture;
var init_pan = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs"() {
    init_add_pointer_event();
    init_Feature();
    init_get_context_window();
    init_PanSession();
    init_noop();
    init_frame();
    asyncHandler = (handler2) => (event, info) => {
      if (handler2) {
        frame.postRender(() => handler2(event, info));
      }
    };
    PanGesture = class extends Feature {
      constructor() {
        super(...arguments);
        this.removePointerDownListener = noop;
      }
      onPointerDown(pointerDownEvent) {
        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {
          transformPagePoint: this.node.getTransformPagePoint(),
          contextWindow: getContextWindow(this.node)
        });
      }
      createPanHandlers() {
        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
        return {
          onSessionStart: asyncHandler(onPanSessionStart),
          onStart: asyncHandler(onPanStart),
          onMove: onPan,
          onEnd: (event, info) => {
            delete this.session;
            if (onPanEnd) {
              frame.postRender(() => onPanEnd(event, info));
            }
          }
        };
      }
      mount() {
        this.removePointerDownListener = addPointerEvent(this.node.current, "pointerdown", (event) => this.onPointerDown(event));
      }
      update() {
        this.session && this.session.updateHandlers(this.createPanHandlers());
      }
      unmount() {
        this.removePointerDownListener();
        this.session && this.session.end();
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState;
var init_state = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/state.mjs"() {
    globalProjectionState = {
      /**
       * Global flag as to whether the tree has animated since the last time
       * we resized the window
       */
      hasAnimatedSinceResize: true,
      /**
       * We set this to true once, on the first update. Any nodes added to the tree beyond that
       * update will be given a `data-projection-id` attribute.
       */
      hasEverUpdated: false
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius;
var init_scale_border_radius = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"() {
    init_units();
    correctBorderRadius = {
      correct: (latest, node) => {
        if (!node.target)
          return latest;
        if (typeof latest === "string") {
          if (px2.test(latest)) {
            latest = parseFloat(latest);
          } else {
            return latest;
          }
        }
        const x3 = pixelsToPercent(latest, node.target.x);
        const y3 = pixelsToPercent(latest, node.target.y);
        return `${x3}% ${y3}%`;
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var correctBoxShadow;
var init_scale_box_shadow = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs"() {
    init_number2();
    init_complex();
    correctBoxShadow = {
      correct: (latest, { treeScale, projectionDelta }) => {
        const original = latest;
        const shadow = complex.parse(latest);
        if (shadow.length > 5)
          return original;
        const template = complex.createTransformer(latest);
        const offset = typeof shadow[0] !== "number" ? 1 : 0;
        const xScale = projectionDelta.x.scale * treeScale.x;
        const yScale = projectionDelta.y.scale * treeScale.y;
        shadow[0 + offset] /= xScale;
        shadow[1 + offset] /= yScale;
        const averageScale = mixNumber(xScale, yScale, 0.5);
        if (typeof shadow[2 + offset] === "number")
          shadow[2 + offset] /= averageScale;
        if (typeof shadow[3 + offset] === "number")
          shadow[3 + offset] /= averageScale;
        return template(shadow);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
function MeasureLayout(props) {
  const [isPresent, safeToRemove] = usePresence();
  const layoutGroup = (0, import_react191.useContext)(LayoutGroupContext);
  return (0, import_jsx_runtime131.jsx)(MeasureLayoutWithContext, { ...props, layoutGroup, switchLayoutGroup: (0, import_react191.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove });
}
var import_jsx_runtime131, import_react191, MeasureLayoutWithContext, defaultScaleCorrectors;
var init_MeasureLayout = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"() {
    "use client";
    import_jsx_runtime131 = __toESM(require_jsx_runtime(), 1);
    import_react191 = __toESM(require_react(), 1);
    init_use_presence();
    init_LayoutGroupContext();
    init_SwitchLayoutGroupContext();
    init_state();
    init_scale_border_radius();
    init_scale_box_shadow();
    init_scale_correction();
    init_frame();
    init_microtask();
    MeasureLayoutWithContext = class extends import_react191.Component {
      /**
       * This only mounts projection nodes for components that
       * need measuring, we might want to do it for all components
       * in order to incorporate transforms
       */
      componentDidMount() {
        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;
        const { projection } = visualElement;
        addScaleCorrector(defaultScaleCorrectors);
        if (projection) {
          if (layoutGroup.group)
            layoutGroup.group.add(projection);
          if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {
            switchLayoutGroup.register(projection);
          }
          projection.root.didUpdate();
          projection.addEventListener("animationComplete", () => {
            this.safeToRemove();
          });
          projection.setOptions({
            ...projection.options,
            onExitComplete: () => this.safeToRemove()
          });
        }
        globalProjectionState.hasEverUpdated = true;
      }
      getSnapshotBeforeUpdate(prevProps) {
        const { layoutDependency, visualElement, drag: drag3, isPresent } = this.props;
        const projection = visualElement.projection;
        if (!projection)
          return null;
        projection.isPresent = isPresent;
        if (drag3 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 || prevProps.isPresent !== isPresent) {
          projection.willUpdate();
        } else {
          this.safeToRemove();
        }
        if (prevProps.isPresent !== isPresent) {
          if (isPresent) {
            projection.promote();
          } else if (!projection.relegate()) {
            frame.postRender(() => {
              const stack2 = projection.getStack();
              if (!stack2 || !stack2.members.length) {
                this.safeToRemove();
              }
            });
          }
        }
        return null;
      }
      componentDidUpdate() {
        const { projection } = this.props.visualElement;
        if (projection) {
          projection.root.didUpdate();
          microtask.postRender(() => {
            if (!projection.currentAnimation && projection.isLead()) {
              this.safeToRemove();
            }
          });
        }
      }
      componentWillUnmount() {
        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props;
        const { projection } = visualElement;
        if (projection) {
          projection.scheduleCheckAfterUnmount();
          if (layoutGroup && layoutGroup.group)
            layoutGroup.group.remove(projection);
          if (promoteContext && promoteContext.deregister)
            promoteContext.deregister(projection);
        }
      }
      safeToRemove() {
        const { safeToRemove } = this.props;
        safeToRemove && safeToRemove();
      }
      render() {
        return null;
      }
    };
    defaultScaleCorrectors = {
      borderRadius: {
        ...correctBorderRadius,
        applyTo: [
          "borderTopLeftRadius",
          "borderTopRightRadius",
          "borderBottomLeftRadius",
          "borderBottomRightRadius"
        ]
      },
      borderTopLeftRadius: correctBorderRadius,
      borderTopRightRadius: correctBorderRadius,
      borderBottomLeftRadius: correctBorderRadius,
      borderBottomRightRadius: correctBorderRadius,
      boxShadow: correctBoxShadow
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs
function animateSingleValue(value, keyframes3, options) {
  const motionValue$1 = isMotionValue(value) ? value : motionValue(value);
  motionValue$1.start(animateMotionValue("", motionValue$1, keyframes3, options));
  return motionValue$1.animation;
}
var init_single_value = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs"() {
    init_is_motion_value();
    init_motion_value();
    init_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs
function isSVGElement(element) {
  return element instanceof SVGElement && element.tagName !== "svg";
}
var init_is_svg_element = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth;
var init_compare_by_depth = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/compare-by-depth.mjs"() {
    compareByDepth = (a12, b4) => a12.depth - b4.depth;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree;
var init_flat_tree = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/flat-tree.mjs"() {
    init_compare_by_depth();
    init_array();
    FlatTree = class {
      constructor() {
        this.children = [];
        this.isDirty = false;
      }
      add(child) {
        addUniqueItem(this.children, child);
        this.isDirty = true;
      }
      remove(child) {
        removeItem(this.children, child);
        this.isDirty = true;
      }
      forEach(callback) {
        this.isDirty && this.children.sort(compareByDepth);
        this.isDirty = false;
        this.children.forEach(callback);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/delay.mjs
function delay(callback, timeout) {
  const start = time.now();
  const checkElapsed = ({ timestamp }) => {
    const elapsed = timestamp - start;
    if (elapsed >= timeout) {
      cancelFrame(checkElapsed);
      callback(elapsed - timeout);
    }
  };
  frame.read(checkElapsed, true);
  return () => cancelFrame(checkElapsed);
}
var init_delay = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/delay.mjs"() {
    init_sync_time();
    init_frame();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/animation/mix-values.mjs
function mixValues(target, follow, lead, progress3, shouldCrossfadeOpacity, isOnlyMember) {
  if (shouldCrossfadeOpacity) {
    target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress3));
    target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress3));
  } else if (isOnlyMember) {
    target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress3);
  }
  for (let i11 = 0; i11 < numBorders; i11++) {
    const borderLabel = `border${borders[i11]}Radius`;
    let followRadius = getRadius2(follow, borderLabel);
    let leadRadius = getRadius2(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    const canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress3), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress3);
  }
}
function getRadius2(values2, radiusName) {
  return values2[radiusName] !== void 0 ? values2[radiusName] : values2.borderRadius;
}
function compress(min, max, easing) {
  return (p13) => {
    if (p13 < min)
      return 0;
    if (p13 > max)
      return 1;
    return easing(progress(min, max, p13));
  };
}
var borders, numBorders, asNumber, isPx, easeCrossfadeIn, easeCrossfadeOut;
var init_mix_values = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/animation/mix-values.mjs"() {
    init_circ();
    init_number2();
    init_units();
    init_progress();
    init_noop();
    borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
    numBorders = borders.length;
    asNumber = (value) => typeof value === "string" ? parseFloat(value) : value;
    isPx = (value) => typeof value === "number" || px2.test(value);
    easeCrossfadeIn = /* @__PURE__ */ compress(0, 0.5, circOut);
    easeCrossfadeOut = /* @__PURE__ */ compress(0.5, 0.95, noop);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box3, originBox) {
  copyAxisInto(box3.x, originBox.x);
  copyAxisInto(box3.y, originBox.y);
}
function copyAxisDeltaInto(delta, originDelta) {
  delta.translate = originDelta.translate;
  delta.scale = originDelta.scale;
  delta.originPoint = originDelta.originPoint;
  delta.origin = originDelta.origin;
}
var init_copy = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/copy.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point2, translate, scale3, originPoint, boxScale) {
  point2 -= translate;
  point2 = scalePoint(point2, 1 / scale3, originPoint);
  if (boxScale !== void 0) {
    point2 = scalePoint(point2, 1 / boxScale, originPoint);
  }
  return point2;
}
function removeAxisDelta(axis, translate = 0, scale3 = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  let originPoint = mixNumber(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale3, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms2, [key, scaleKey, originKey], origin, sourceAxis) {
  removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
function removeBoxTransforms(box3, transforms2, originBox, sourceBox) {
  removeAxisTransforms(box3.x, transforms2, xKeys, originBox ? originBox.x : void 0, sourceBox ? sourceBox.x : void 0);
  removeAxisTransforms(box3.y, transforms2, yKeys, originBox ? originBox.y : void 0, sourceBox ? sourceBox.y : void 0);
}
var xKeys, yKeys;
var init_delta_remove = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-remove.mjs"() {
    init_number2();
    init_units();
    init_delta_apply();
    xKeys = ["x", "scaleX", "originX"];
    yKeys = ["y", "scaleY", "originY"];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function axisEquals(a12, b4) {
  return a12.min === b4.min && a12.max === b4.max;
}
function boxEquals(a12, b4) {
  return axisEquals(a12.x, b4.x) && axisEquals(a12.y, b4.y);
}
function axisEqualsRounded(a12, b4) {
  return Math.round(a12.min) === Math.round(b4.min) && Math.round(a12.max) === Math.round(b4.max);
}
function boxEqualsRounded(a12, b4) {
  return axisEqualsRounded(a12.x, b4.x) && axisEqualsRounded(a12.y, b4.y);
}
function aspectRatio(box3) {
  return calcLength(box3.x) / calcLength(box3.y);
}
function axisDeltaEquals(a12, b4) {
  return a12.translate === b4.translate && a12.scale === b4.scale && a12.originPoint === b4.originPoint;
}
var init_utils9 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/utils.mjs"() {
    init_delta_calc();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack;
var init_stack = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/shared/stack.mjs"() {
    init_array();
    NodeStack = class {
      constructor() {
        this.members = [];
      }
      add(node) {
        addUniqueItem(this.members, node);
        node.scheduleRender();
      }
      remove(node) {
        removeItem(this.members, node);
        if (node === this.prevLead) {
          this.prevLead = void 0;
        }
        if (node === this.lead) {
          const prevLead = this.members[this.members.length - 1];
          if (prevLead) {
            this.promote(prevLead);
          }
        }
      }
      relegate(node) {
        const indexOfNode = this.members.findIndex((member) => node === member);
        if (indexOfNode === 0)
          return false;
        let prevLead;
        for (let i11 = indexOfNode; i11 >= 0; i11--) {
          const member = this.members[i11];
          if (member.isPresent !== false) {
            prevLead = member;
            break;
          }
        }
        if (prevLead) {
          this.promote(prevLead);
          return true;
        } else {
          return false;
        }
      }
      promote(node, preserveFollowOpacity) {
        const prevLead = this.lead;
        if (node === prevLead)
          return;
        this.prevLead = prevLead;
        this.lead = node;
        node.show();
        if (prevLead) {
          prevLead.instance && prevLead.scheduleRender();
          node.scheduleRender();
          node.resumeFrom = prevLead;
          if (preserveFollowOpacity) {
            node.resumeFrom.preserveOpacity = true;
          }
          if (prevLead.snapshot) {
            node.snapshot = prevLead.snapshot;
            node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          }
          if (node.root && node.root.isUpdating) {
            node.isLayoutDirty = true;
          }
          const { crossfade } = node.options;
          if (crossfade === false) {
            prevLead.hide();
          }
        }
      }
      exitAnimationComplete() {
        this.members.forEach((node) => {
          const { options, resumingFrom } = node;
          options.onExitComplete && options.onExitComplete();
          if (resumingFrom) {
            resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
          }
        });
      }
      scheduleRender() {
        this.members.forEach((node) => {
          node.instance && node.scheduleRender(false);
        });
      }
      /**
       * Clear any leads that have been removed this render to prevent them from being
       * used in future animations and to prevent memory leaks
       */
      removeLeadSnapshot() {
        if (this.lead && this.lead.snapshot) {
          this.lead.snapshot = void 0;
        }
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/transform.mjs
function buildProjectionTransform(delta, treeScale, latestTransform) {
  let transform = "";
  const xTranslate = delta.x.translate / treeScale.x;
  const yTranslate = delta.y.translate / treeScale.y;
  const zTranslate = latestTransform?.z || 0;
  if (xTranslate || yTranslate || zTranslate) {
    transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;
  }
  if (treeScale.x !== 1 || treeScale.y !== 1) {
    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;
  }
  if (latestTransform) {
    const { transformPerspective, rotate: rotate3, rotateX, rotateY, skewX, skewY } = latestTransform;
    if (transformPerspective)
      transform = `perspective(${transformPerspective}px) ${transform}`;
    if (rotate3)
      transform += `rotate(${rotate3}deg) `;
    if (rotateX)
      transform += `rotateX(${rotateX}deg) `;
    if (rotateY)
      transform += `rotateY(${rotateY}deg) `;
    if (skewX)
      transform += `skewX(${skewX}deg) `;
    if (skewY)
      transform += `skewY(${skewY}deg) `;
  }
  const elementScaleX = delta.x.scale * treeScale.x;
  const elementScaleY = delta.y.scale * treeScale.y;
  if (elementScaleX !== 1 || elementScaleY !== 1) {
    transform += `scale(${elementScaleX}, ${elementScaleY})`;
  }
  return transform || "none";
}
var init_transform2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/transform.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/create-projection-node.mjs
function resetDistortingTransform(key, visualElement, values2, sharedAnimationValues) {
  const { latestValues } = visualElement;
  if (latestValues[key]) {
    values2[key] = latestValues[key];
    visualElement.setStaticValue(key, 0);
    if (sharedAnimationValues) {
      sharedAnimationValues[key] = 0;
    }
  }
}
function cancelTreeOptimisedTransformAnimations(projectionNode) {
  projectionNode.hasCheckedOptimisedAppear = true;
  if (projectionNode.root === projectionNode)
    return;
  const { visualElement } = projectionNode.options;
  if (!visualElement)
    return;
  const appearId = getOptimisedAppearId(visualElement);
  if (window.MotionHasOptimisedAnimation(appearId, "transform")) {
    const { layout: layout3, layoutId } = projectionNode.options;
    window.MotionCancelOptimisedAnimation(appearId, "transform", frame, !(layout3 || layoutId));
  }
  const { parent } = projectionNode;
  if (parent && !parent.hasCheckedOptimisedAppear) {
    cancelTreeOptimisedTransformAnimations(parent);
  }
}
function createProjectionNode2({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
  return class ProjectionNode {
    constructor(latestValues = {}, parent = defaultParent?.()) {
      this.id = id2++;
      this.animationId = 0;
      this.children = /* @__PURE__ */ new Set();
      this.options = {};
      this.isTreeAnimating = false;
      this.isAnimationBlocked = false;
      this.isLayoutDirty = false;
      this.isProjectionDirty = false;
      this.isSharedProjectionDirty = false;
      this.isTransformDirty = false;
      this.updateManuallyBlocked = false;
      this.updateBlockedByResize = false;
      this.isUpdating = false;
      this.isSVG = false;
      this.needsReset = false;
      this.shouldResetTransform = false;
      this.hasCheckedOptimisedAppear = false;
      this.treeScale = { x: 1, y: 1 };
      this.eventHandlers = /* @__PURE__ */ new Map();
      this.hasTreeAnimated = false;
      this.updateScheduled = false;
      this.scheduleUpdate = () => this.update();
      this.projectionUpdateScheduled = false;
      this.checkUpdateFailed = () => {
        if (this.isUpdating) {
          this.isUpdating = false;
          this.clearAllSnapshots();
        }
      };
      this.updateProjection = () => {
        this.projectionUpdateScheduled = false;
        if (statsBuffer.value) {
          metrics.nodes = metrics.calculatedTargetDeltas = metrics.calculatedProjections = 0;
        }
        this.nodes.forEach(propagateDirtyNodes);
        this.nodes.forEach(resolveTargetDelta);
        this.nodes.forEach(calcProjection);
        this.nodes.forEach(cleanDirtyNodes);
        if (statsBuffer.addProjectionMetrics) {
          statsBuffer.addProjectionMetrics(metrics);
        }
      };
      this.resolvedRelativeTargetAt = 0;
      this.hasProjected = false;
      this.isVisible = true;
      this.animationProgress = 0;
      this.sharedNodes = /* @__PURE__ */ new Map();
      this.latestValues = latestValues;
      this.root = parent ? parent.root || parent : this;
      this.path = parent ? [...parent.path, parent] : [];
      this.parent = parent;
      this.depth = parent ? parent.depth + 1 : 0;
      for (let i11 = 0; i11 < this.path.length; i11++) {
        this.path[i11].shouldResetTransform = true;
      }
      if (this.root === this)
        this.nodes = new FlatTree();
    }
    addEventListener(name2, handler2) {
      if (!this.eventHandlers.has(name2)) {
        this.eventHandlers.set(name2, new SubscriptionManager());
      }
      return this.eventHandlers.get(name2).add(handler2);
    }
    notifyListeners(name2, ...args) {
      const subscriptionManager = this.eventHandlers.get(name2);
      subscriptionManager && subscriptionManager.notify(...args);
    }
    hasListeners(name2) {
      return this.eventHandlers.has(name2);
    }
    /**
     * Lifecycles
     */
    mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = isSVGElement(instance);
      this.instance = instance;
      const { layoutId, layout: layout3, visualElement } = this.options;
      if (visualElement && !visualElement.current) {
        visualElement.mount(instance);
      }
      this.root.nodes.add(this);
      this.parent && this.parent.children.add(this);
      if (isLayoutDirty && (layout3 || layoutId)) {
        this.isLayoutDirty = true;
      }
      if (attachResizeListener) {
        let cancelDelay;
        const resizeUnblockUpdate = () => this.root.updateBlockedByResize = false;
        attachResizeListener(instance, () => {
          this.root.updateBlockedByResize = true;
          cancelDelay && cancelDelay();
          cancelDelay = delay(resizeUnblockUpdate, 250);
          if (globalProjectionState.hasAnimatedSinceResize) {
            globalProjectionState.hasAnimatedSinceResize = false;
            this.nodes.forEach(finishAnimation);
          }
        });
      }
      if (layoutId) {
        this.root.registerSharedNode(layoutId, this);
      }
      if (this.options.animate !== false && visualElement && (layoutId || layout3)) {
        this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout }) => {
          if (this.isTreeAnimationBlocked()) {
            this.target = void 0;
            this.relativeTarget = void 0;
            return;
          }
          const layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition;
          const { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps();
          const hasTargetChanged = !this.targetLayout || !boxEqualsRounded(this.targetLayout, newLayout);
          const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;
          if (this.options.layoutRoot || this.resumeFrom || hasOnlyRelativeTargetChanged || hasLayoutChanged && (hasTargetChanged || !this.currentAnimation)) {
            if (this.resumeFrom) {
              this.resumingFrom = this.resumeFrom;
              this.resumingFrom.resumingFrom = void 0;
            }
            this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
            const animationOptions = {
              ...getValueTransition(layoutTransition, "layout"),
              onPlay: onLayoutAnimationStart,
              onComplete: onLayoutAnimationComplete
            };
            if (visualElement.shouldReduceMotion || this.options.layoutRoot) {
              animationOptions.delay = 0;
              animationOptions.type = false;
            }
            this.startAnimation(animationOptions);
          } else {
            if (!hasLayoutChanged) {
              finishAnimation(this);
            }
            if (this.isLead() && this.options.onExitComplete) {
              this.options.onExitComplete();
            }
          }
          this.targetLayout = newLayout;
        });
      }
    }
    unmount() {
      this.options.layoutId && this.willUpdate();
      this.root.nodes.remove(this);
      const stack2 = this.getStack();
      stack2 && stack2.remove(this);
      this.parent && this.parent.children.delete(this);
      this.instance = void 0;
      cancelFrame(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = true;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = false;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || false;
    }
    // Note: currently only running on root node
    startUpdate() {
      if (this.isUpdateBlocked())
        return;
      this.isUpdating = true;
      this.nodes && this.nodes.forEach(resetSkewAndRotation);
      this.animationId++;
    }
    getTransformTemplate() {
      const { visualElement } = this.options;
      return visualElement && visualElement.getProps().transformTemplate;
    }
    willUpdate(shouldNotifyListeners = true) {
      this.root.hasTreeAnimated = true;
      if (this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear) {
        cancelTreeOptimisedTransformAnimations(this);
      }
      !this.root.isUpdating && this.root.startUpdate();
      if (this.isLayoutDirty)
        return;
      this.isLayoutDirty = true;
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        node.shouldResetTransform = true;
        node.updateScroll("snapshot");
        if (node.options.layoutRoot) {
          node.willUpdate(false);
        }
      }
      const { layoutId, layout: layout3 } = this.options;
      if (layoutId === void 0 && !layout3)
        return;
      const transformTemplate = this.getTransformTemplate();
      this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      this.updateSnapshot();
      shouldNotifyListeners && this.notifyListeners("willUpdate");
    }
    update() {
      this.updateScheduled = false;
      const updateWasBlocked = this.isUpdateBlocked();
      if (updateWasBlocked) {
        this.unblockUpdate();
        this.clearAllSnapshots();
        this.nodes.forEach(clearMeasurements);
        return;
      }
      if (!this.isUpdating) {
        this.nodes.forEach(clearIsLayoutDirty);
      }
      this.isUpdating = false;
      this.nodes.forEach(resetTransformStyle);
      this.nodes.forEach(updateLayout);
      this.nodes.forEach(notifyLayoutUpdate);
      this.clearAllSnapshots();
      const now3 = time.now();
      frameData.delta = clamp2(0, 1e3 / 60, now3 - frameData.timestamp);
      frameData.timestamp = now3;
      frameData.isProcessing = true;
      frameSteps.update.process(frameData);
      frameSteps.preRender.process(frameData);
      frameSteps.render.process(frameData);
      frameData.isProcessing = false;
    }
    didUpdate() {
      if (!this.updateScheduled) {
        this.updateScheduled = true;
        microtask.read(this.scheduleUpdate);
      }
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot);
      this.sharedNodes.forEach(removeLeadSnapshots);
    }
    scheduleUpdateProjection() {
      if (!this.projectionUpdateScheduled) {
        this.projectionUpdateScheduled = true;
        frame.preRender(this.updateProjection, false, true);
      }
    }
    scheduleCheckAfterUnmount() {
      frame.postRender(() => {
        if (this.isLayoutDirty) {
          this.root.didUpdate();
        } else {
          this.root.checkUpdateFailed();
        }
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      if (this.snapshot || !this.instance)
        return;
      this.snapshot = this.measure();
      if (this.snapshot && !calcLength(this.snapshot.measuredBox.x) && !calcLength(this.snapshot.measuredBox.y)) {
        this.snapshot = void 0;
      }
    }
    updateLayout() {
      if (!this.instance)
        return;
      this.updateScroll();
      if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
        return;
      }
      if (this.resumeFrom && !this.resumeFrom.instance) {
        for (let i11 = 0; i11 < this.path.length; i11++) {
          const node = this.path[i11];
          node.updateScroll();
        }
      }
      const prevLayout = this.layout;
      this.layout = this.measure(false);
      this.layoutCorrected = createBox();
      this.isLayoutDirty = false;
      this.projectionDelta = void 0;
      this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement } = this.options;
      visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : void 0);
    }
    updateScroll(phase = "measure") {
      let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase) {
        needsMeasurement = false;
      }
      if (needsMeasurement) {
        const isRoot = checkIsScrollRoot(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase,
          isRoot,
          offset: measureScroll(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : isRoot
        };
      }
    }
    resetTransform() {
      if (!resetTransform)
        return;
      const isResetRequested = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout;
      const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
      const transformTemplate = this.getTransformTemplate();
      const transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
        resetTransform(this.instance, transformTemplateValue);
        this.shouldResetTransform = false;
        this.scheduleRender();
      }
    }
    measure(removeTransform = true) {
      const pageBox = this.measurePageBox();
      let layoutBox = this.removeElementScroll(pageBox);
      if (removeTransform) {
        layoutBox = this.removeTransform(layoutBox);
      }
      roundBox(layoutBox);
      return {
        animationId: this.root.animationId,
        measuredBox: pageBox,
        layoutBox,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      const { visualElement } = this.options;
      if (!visualElement)
        return createBox();
      const box3 = visualElement.measureViewportBox();
      const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);
      if (!wasInScrollRoot) {
        const { scroll: scroll2 } = this.root;
        if (scroll2) {
          translateAxis(box3.x, scroll2.offset.x);
          translateAxis(box3.y, scroll2.offset.y);
        }
      }
      return box3;
    }
    removeElementScroll(box3) {
      const boxWithoutScroll = createBox();
      copyBoxInto(boxWithoutScroll, box3);
      if (this.scroll?.wasRoot) {
        return boxWithoutScroll;
      }
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        const { scroll: scroll2, options } = node;
        if (node !== this.root && scroll2 && options.layoutScroll) {
          if (scroll2.wasRoot) {
            copyBoxInto(boxWithoutScroll, box3);
          }
          translateAxis(boxWithoutScroll.x, scroll2.offset.x);
          translateAxis(boxWithoutScroll.y, scroll2.offset.y);
        }
      }
      return boxWithoutScroll;
    }
    applyTransform(box3, transformOnly = false) {
      const withTransforms = createBox();
      copyBoxInto(withTransforms, box3);
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
          transformBox(withTransforms, {
            x: -node.scroll.offset.x,
            y: -node.scroll.offset.y
          });
        }
        if (!hasTransform(node.latestValues))
          continue;
        transformBox(withTransforms, node.latestValues);
      }
      if (hasTransform(this.latestValues)) {
        transformBox(withTransforms, this.latestValues);
      }
      return withTransforms;
    }
    removeTransform(box3) {
      const boxWithoutTransform = createBox();
      copyBoxInto(boxWithoutTransform, box3);
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        if (!node.instance)
          continue;
        if (!hasTransform(node.latestValues))
          continue;
        hasScale(node.latestValues) && node.updateSnapshot();
        const sourceBox = createBox();
        const nodeBox = node.measurePageBox();
        copyBoxInto(sourceBox, nodeBox);
        removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : void 0, sourceBox);
      }
      if (hasTransform(this.latestValues)) {
        removeBoxTransforms(boxWithoutTransform, this.latestValues);
      }
      return boxWithoutTransform;
    }
    setTargetDelta(delta) {
      this.targetDelta = delta;
      this.root.scheduleUpdateProjection();
      this.isProjectionDirty = true;
    }
    setOptions(options) {
      this.options = {
        ...this.options,
        ...options,
        crossfade: options.crossfade !== void 0 ? options.crossfade : true
      };
    }
    clearMeasurements() {
      this.scroll = void 0;
      this.layout = void 0;
      this.snapshot = void 0;
      this.prevTransformTemplateValue = void 0;
      this.targetDelta = void 0;
      this.target = void 0;
      this.isLayoutDirty = false;
    }
    forceRelativeParentToResolveTarget() {
      if (!this.relativeParent)
        return;
      if (this.relativeParent.resolvedRelativeTargetAt !== frameData.timestamp) {
        this.relativeParent.resolveTargetDelta(true);
      }
    }
    resolveTargetDelta(forceRecalculation = false) {
      const lead = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);
      this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);
      this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      const canSkip = !(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || this.parent?.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize);
      if (canSkip)
        return;
      const { layout: layout3, layoutId } = this.options;
      if (!this.layout || !(layout3 || layoutId))
        return;
      this.resolvedRelativeTargetAt = frameData.timestamp;
      if (!this.targetDelta && !this.relativeTarget) {
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && relativeParent.layout && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox();
          this.relativeTargetOrigin = createBox();
          calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (!this.relativeTarget && !this.targetDelta)
        return;
      if (!this.target) {
        this.target = createBox();
        this.targetWithTransforms = createBox();
      }
      if (this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target) {
        this.forceRelativeParentToResolveTarget();
        calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
      } else if (this.targetDelta) {
        if (Boolean(this.resumingFrom)) {
          this.target = this.applyTransform(this.layout.layoutBox);
        } else {
          copyBoxInto(this.target, this.layout.layoutBox);
        }
        applyBoxDelta(this.target, this.targetDelta);
      } else {
        copyBoxInto(this.target, this.layout.layoutBox);
      }
      if (this.attemptToResolveRelativeTarget) {
        this.attemptToResolveRelativeTarget = false;
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox();
          this.relativeTargetOrigin = createBox();
          calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (statsBuffer.value) {
        metrics.calculatedTargetDeltas++;
      }
    }
    getClosestProjectingParent() {
      if (!this.parent || hasScale(this.parent.latestValues) || has2DTranslate(this.parent.latestValues)) {
        return void 0;
      }
      if (this.parent.isProjecting()) {
        return this.parent;
      } else {
        return this.parent.getClosestProjectingParent();
      }
    }
    isProjecting() {
      return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      const lead = this.getLead();
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      let canSkip = true;
      if (this.isProjectionDirty || this.parent?.isProjectionDirty) {
        canSkip = false;
      }
      if (isShared && (this.isSharedProjectionDirty || this.isTransformDirty)) {
        canSkip = false;
      }
      if (this.resolvedRelativeTargetAt === frameData.timestamp) {
        canSkip = false;
      }
      if (canSkip)
        return;
      const { layout: layout3, layoutId } = this.options;
      this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation);
      if (!this.isTreeAnimating) {
        this.targetDelta = this.relativeTarget = void 0;
      }
      if (!this.layout || !(layout3 || layoutId))
        return;
      copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
      const prevTreeScaleX = this.treeScale.x;
      const prevTreeScaleY = this.treeScale.y;
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);
      if (lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {
        lead.target = lead.layout.layoutBox;
        lead.targetWithTransforms = createBox();
      }
      const { target } = lead;
      if (!target) {
        if (this.prevProjectionDelta) {
          this.createProjectionDeltas();
          this.scheduleRender();
        }
        return;
      }
      if (!this.projectionDelta || !this.prevProjectionDelta) {
        this.createProjectionDeltas();
      } else {
        copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);
        copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);
      }
      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
      if (this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY || !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) || !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {
        this.hasProjected = true;
        this.scheduleRender();
        this.notifyListeners("projectionUpdate", target);
      }
      if (statsBuffer.value) {
        metrics.calculatedProjections++;
      }
    }
    hide() {
      this.isVisible = false;
    }
    show() {
      this.isVisible = true;
    }
    scheduleRender(notifyAll2 = true) {
      this.options.visualElement?.scheduleRender();
      if (notifyAll2) {
        const stack2 = this.getStack();
        stack2 && stack2.scheduleRender();
      }
      if (this.resumingFrom && !this.resumingFrom.instance) {
        this.resumingFrom = void 0;
      }
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = createDelta();
      this.projectionDelta = createDelta();
      this.projectionDeltaWithTransform = createDelta();
    }
    setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {
      const snapshot = this.snapshot;
      const snapshotLatestValues = snapshot ? snapshot.latestValues : {};
      const mixedValues = { ...this.latestValues };
      const targetDelta = createDelta();
      if (!this.relativeParent || !this.relativeParent.options.layoutRoot) {
        this.relativeTarget = this.relativeTargetOrigin = void 0;
      }
      this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      const relativeLayout = createBox();
      const snapshotSource = snapshot ? snapshot.source : void 0;
      const layoutSource = this.layout ? this.layout.source : void 0;
      const isSharedLayoutAnimation = snapshotSource !== layoutSource;
      const stack2 = this.getStack();
      const isOnlyMember = !stack2 || stack2.members.length <= 1;
      const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
      this.animationProgress = 0;
      let prevRelativeTarget;
      this.mixTargetDelta = (latest) => {
        const progress3 = latest / 1e3;
        mixAxisDelta(targetDelta.x, delta.x, progress3);
        mixAxisDelta(targetDelta.y, delta.y, progress3);
        this.setTargetDelta(targetDelta);
        if (this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout) {
          calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);
          mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress3);
          if (prevRelativeTarget && boxEquals(this.relativeTarget, prevRelativeTarget)) {
            this.isProjectionDirty = false;
          }
          if (!prevRelativeTarget)
            prevRelativeTarget = createBox();
          copyBoxInto(prevRelativeTarget, this.relativeTarget);
        }
        if (isSharedLayoutAnimation) {
          this.animationValues = mixedValues;
          mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress3, shouldCrossfadeOpacity, isOnlyMember);
        }
        this.root.scheduleUpdateProjection();
        this.scheduleRender();
        this.animationProgress = progress3;
      };
      this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(options) {
      this.notifyListeners("animationStart");
      this.currentAnimation && this.currentAnimation.stop();
      if (this.resumingFrom && this.resumingFrom.currentAnimation) {
        this.resumingFrom.currentAnimation.stop();
      }
      if (this.pendingAnimation) {
        cancelFrame(this.pendingAnimation);
        this.pendingAnimation = void 0;
      }
      this.pendingAnimation = frame.update(() => {
        globalProjectionState.hasAnimatedSinceResize = true;
        activeAnimations.layout++;
        this.currentAnimation = animateSingleValue(0, animationTarget, {
          ...options,
          onUpdate: (latest) => {
            this.mixTargetDelta(latest);
            options.onUpdate && options.onUpdate(latest);
          },
          onStop: () => {
            activeAnimations.layout--;
          },
          onComplete: () => {
            activeAnimations.layout--;
            options.onComplete && options.onComplete();
            this.completeAnimation();
          }
        });
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = this.currentAnimation;
        }
        this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      if (this.resumingFrom) {
        this.resumingFrom.currentAnimation = void 0;
        this.resumingFrom.preserveOpacity = void 0;
      }
      const stack2 = this.getStack();
      stack2 && stack2.exitAnimationComplete();
      this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
      this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      if (this.currentAnimation) {
        this.mixTargetDelta && this.mixTargetDelta(animationTarget);
        this.currentAnimation.stop();
      }
      this.completeAnimation();
    }
    applyTransformsToTarget() {
      const lead = this.getLead();
      let { targetWithTransforms, target, layout: layout3, latestValues } = lead;
      if (!targetWithTransforms || !target || !layout3)
        return;
      if (this !== lead && this.layout && layout3 && shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout3.layoutBox)) {
        target = this.target || createBox();
        const xLength = calcLength(this.layout.layoutBox.x);
        target.x.min = lead.target.x.min;
        target.x.max = target.x.min + xLength;
        const yLength = calcLength(this.layout.layoutBox.y);
        target.y.min = lead.target.y.min;
        target.y.max = target.y.min + yLength;
      }
      copyBoxInto(targetWithTransforms, target);
      transformBox(targetWithTransforms, latestValues);
      calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
    }
    registerSharedNode(layoutId, node) {
      if (!this.sharedNodes.has(layoutId)) {
        this.sharedNodes.set(layoutId, new NodeStack());
      }
      const stack2 = this.sharedNodes.get(layoutId);
      stack2.add(node);
      const config = node.options.initialPromotionConfig;
      node.promote({
        transition: config ? config.transition : void 0,
        preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : void 0
      });
    }
    isLead() {
      const stack2 = this.getStack();
      return stack2 ? stack2.lead === this : true;
    }
    getLead() {
      const { layoutId } = this.options;
      return layoutId ? this.getStack()?.lead || this : this;
    }
    getPrevLead() {
      const { layoutId } = this.options;
      return layoutId ? this.getStack()?.prevLead : void 0;
    }
    getStack() {
      const { layoutId } = this.options;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    }
    promote({ needsReset, transition, preserveFollowOpacity } = {}) {
      const stack2 = this.getStack();
      if (stack2)
        stack2.promote(this, preserveFollowOpacity);
      if (needsReset) {
        this.projectionDelta = void 0;
        this.needsReset = true;
      }
      if (transition)
        this.setOptions({ transition });
    }
    relegate() {
      const stack2 = this.getStack();
      if (stack2) {
        return stack2.relegate(this);
      } else {
        return false;
      }
    }
    resetSkewAndRotation() {
      const { visualElement } = this.options;
      if (!visualElement)
        return;
      let hasDistortingTransform = false;
      const { latestValues } = visualElement;
      if (latestValues.z || latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ || latestValues.skewX || latestValues.skewY) {
        hasDistortingTransform = true;
      }
      if (!hasDistortingTransform)
        return;
      const resetValues = {};
      if (latestValues.z) {
        resetDistortingTransform("z", visualElement, resetValues, this.animationValues);
      }
      for (let i11 = 0; i11 < transformAxes.length; i11++) {
        resetDistortingTransform(`rotate${transformAxes[i11]}`, visualElement, resetValues, this.animationValues);
        resetDistortingTransform(`skew${transformAxes[i11]}`, visualElement, resetValues, this.animationValues);
      }
      visualElement.render();
      for (const key in resetValues) {
        visualElement.setStaticValue(key, resetValues[key]);
        if (this.animationValues) {
          this.animationValues[key] = resetValues[key];
        }
      }
      visualElement.scheduleRender();
    }
    getProjectionStyles(styleProp) {
      if (!this.instance || this.isSVG)
        return void 0;
      if (!this.isVisible) {
        return hiddenVisibility;
      }
      const styles = {
        visibility: ""
      };
      const transformTemplate = this.getTransformTemplate();
      if (this.needsReset) {
        this.needsReset = false;
        styles.opacity = "";
        styles.pointerEvents = resolveMotionValue(styleProp?.pointerEvents) || "";
        styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
        return styles;
      }
      const lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        const emptyStyles = {};
        if (this.options.layoutId) {
          emptyStyles.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1;
          emptyStyles.pointerEvents = resolveMotionValue(styleProp?.pointerEvents) || "";
        }
        if (this.hasProjected && !hasTransform(this.latestValues)) {
          emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
          this.hasProjected = false;
        }
        return emptyStyles;
      }
      const valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget();
      styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
      if (transformTemplate) {
        styles.transform = transformTemplate(valuesToRender, styles.transform);
      }
      const { x: x3, y: y3 } = this.projectionDelta;
      styles.transformOrigin = `${x3.origin * 100}% ${y3.origin * 100}% 0`;
      if (lead.animationValues) {
        styles.opacity = lead === this ? valuesToRender.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
      } else {
        styles.opacity = lead === this ? valuesToRender.opacity !== void 0 ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== void 0 ? valuesToRender.opacityExit : 0;
      }
      for (const key in scaleCorrectors) {
        if (valuesToRender[key] === void 0)
          continue;
        const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];
        const corrected = styles.transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
        if (applyTo) {
          const num2 = applyTo.length;
          for (let i11 = 0; i11 < num2; i11++) {
            styles[applyTo[i11]] = corrected;
          }
        } else {
          if (isCSSVariable) {
            this.options.visualElement.renderState.vars[key] = corrected;
          } else {
            styles[key] = corrected;
          }
        }
      }
      if (this.options.layoutId) {
        styles.pointerEvents = lead === this ? resolveMotionValue(styleProp?.pointerEvents) || "" : "none";
      }
      return styles;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((node) => node.currentAnimation?.stop());
      this.root.nodes.forEach(clearMeasurements);
      this.root.sharedNodes.clear();
    }
  };
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  const snapshot = node.resumeFrom?.snapshot || node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    const { layoutBox: layout3, measuredBox: measuredLayout } = node.layout;
    const { animationType } = node.options;
    const isShared = snapshot.source !== node.layout.source;
    if (animationType === "size") {
      eachAxis((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength(axisSnapshot);
        axisSnapshot.min = layout3[axis].min;
        axisSnapshot.max = axisSnapshot.min + length;
      });
    } else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout3)) {
      eachAxis((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength(layout3[axis]);
        axisSnapshot.max = axisSnapshot.min + length;
        if (node.relativeTarget && !node.currentAnimation) {
          node.isProjectionDirty = true;
          node.relativeTarget[axis].max = node.relativeTarget[axis].min + length;
        }
      });
    }
    const layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout3, snapshot.layoutBox);
    const visualDelta = createDelta();
    if (isShared) {
      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);
    } else {
      calcBoxDelta(visualDelta, layout3, snapshot.layoutBox);
    }
    const hasLayoutChanged = !isDeltaZero(layoutDelta);
    let hasRelativeLayoutChanged = false;
    if (!node.resumeFrom) {
      const relativeParent = node.getClosestProjectingParent();
      if (relativeParent && !relativeParent.resumeFrom) {
        const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
        if (parentSnapshot && parentLayout) {
          const relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
          const relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout3, parentLayout.layoutBox);
          if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {
            hasRelativeLayoutChanged = true;
          }
          if (relativeParent.options.layoutRoot) {
            node.relativeTarget = relativeLayout;
            node.relativeTargetOrigin = relativeSnapshot;
            node.relativeParent = relativeParent;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout3,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeLayoutChanged
    });
  } else if (node.isLead()) {
    const { onExitComplete } = node.options;
    onExitComplete && onExitComplete();
  }
  node.options.transition = void 0;
}
function propagateDirtyNodes(node) {
  if (statsBuffer.value) {
    metrics.nodes++;
  }
  if (!node.parent)
    return;
  if (!node.isProjecting()) {
    node.isProjectionDirty = node.parent.isProjectionDirty;
  }
  node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty));
  node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);
}
function cleanDirtyNodes(node) {
  node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = false;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function clearIsLayoutDirty(node) {
  node.isLayoutDirty = false;
}
function resetTransformStyle(node) {
  const { visualElement } = node.options;
  if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {
    visualElement.notify("BeforeLayoutMeasure");
  }
  node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
  node.isProjectionDirty = true;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetSkewAndRotation(node) {
  node.resetSkewAndRotation();
}
function removeLeadSnapshots(stack2) {
  stack2.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p13) {
  output.translate = mixNumber(delta.translate, 0, p13);
  output.scale = mixNumber(delta.scale, 1, p13);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p13) {
  output.min = mixNumber(from.min, to.min, p13);
  output.max = mixNumber(from.max, to.max, p13);
}
function mixBox(output, from, to, p13) {
  mixAxis(output.x, from.x, to.x, p13);
  mixAxis(output.y, from.y, to.y, p13);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
function roundAxis(axis) {
  axis.min = roundPoint(axis.min);
  axis.max = roundPoint(axis.max);
}
function roundBox(box3) {
  roundAxis(box3.x);
  roundAxis(box3.y);
}
function shouldAnimatePositionOnly(animationType, snapshot, layout3) {
  return animationType === "position" || animationType === "preserve-aspect" && !isNear(aspectRatio(snapshot), aspectRatio(layout3), 0.2);
}
function checkNodeWasScrollRoot(node) {
  return node !== node.root && node.scroll?.wasRoot;
}
var metrics, transformAxes, hiddenVisibility, animationTarget, id2, defaultLayoutTransition, userAgentContains, roundPoint;
var init_create_projection_node = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/create-projection-node.mjs"() {
    init_single_value();
    init_get_appear_id();
    init_is_svg_element();
    init_flat_tree();
    init_clamp2();
    init_delay();
    init_number2();
    init_resolve_motion_value();
    init_mix_values();
    init_copy();
    init_delta_apply();
    init_delta_calc();
    init_delta_remove();
    init_models();
    init_utils9();
    init_stack();
    init_scale_correction();
    init_transform2();
    init_each_axis();
    init_has_transform();
    init_state();
    init_buffer();
    init_subscription_manager();
    init_get_value_transition();
    init_frame();
    init_sync_time();
    init_microtask();
    init_animation_count();
    init_noop();
    metrics = {
      nodes: 0,
      calculatedTargetDeltas: 0,
      calculatedProjections: 0
    };
    transformAxes = ["", "X", "Y", "Z"];
    hiddenVisibility = { visibility: "hidden" };
    animationTarget = 1e3;
    id2 = 0;
    defaultLayoutTransition = {
      duration: 0.45,
      ease: [0.4, 0, 0.1, 1]
    };
    userAgentContains = (string) => typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(string);
    roundPoint = userAgentContains("applewebkit/") && !userAgentContains("chrome/") ? Math.round : noop;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode;
var init_DocumentProjectionNode = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs"() {
    init_create_projection_node();
    init_add_dom_event();
    DocumentProjectionNode = createProjectionNode2({
      attachResizeListener: (ref, notify) => addDomEvent(ref, "resize", notify),
      measureScroll: () => ({
        x: document.documentElement.scrollLeft || document.body.scrollLeft,
        y: document.documentElement.scrollTop || document.body.scrollTop
      }),
      checkIsScrollRoot: () => true
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode, HTMLProjectionNode;
var init_HTMLProjectionNode = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs"() {
    init_create_projection_node();
    init_DocumentProjectionNode();
    rootProjectionNode = {
      current: void 0
    };
    HTMLProjectionNode = createProjectionNode2({
      measureScroll: (instance) => ({
        x: instance.scrollLeft,
        y: instance.scrollTop
      }),
      defaultParent: () => {
        if (!rootProjectionNode.current) {
          const documentNode = new DocumentProjectionNode({});
          documentNode.mount(window);
          documentNode.setOptions({ layoutScroll: true });
          rootProjectionNode.current = documentNode;
        }
        return rootProjectionNode.current;
      },
      resetTransform: (instance, value) => {
        instance.style.transform = value !== void 0 ? value : "none";
      },
      checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === "fixed")
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/drag.mjs
var drag;
var init_drag2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/drag.mjs"() {
    init_drag();
    init_pan();
    init_MeasureLayout();
    init_HTMLProjectionNode();
    drag = {
      pan: {
        Feature: PanGesture
      },
      drag: {
        Feature: DragGesture,
        ProjectionNode: HTMLProjectionNode,
        MeasureLayout
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs
function resolveElements(elementOrSelector, scope, selectorCache) {
  if (elementOrSelector instanceof EventTarget) {
    return [elementOrSelector];
  } else if (typeof elementOrSelector === "string") {
    let root5 = document;
    if (scope) {
      root5 = scope.current;
    }
    const elements = selectorCache?.[elementOrSelector] ?? root5.querySelectorAll(elementOrSelector);
    return elements ? Array.from(elements) : [];
  }
  return Array.from(elementOrSelector);
}
var init_resolve_elements = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/setup.mjs
function setupGesture(elementOrSelector, options) {
  const elements = resolveElements(elementOrSelector);
  const gestureAbortController = new AbortController();
  const eventOptions = {
    passive: true,
    ...options,
    signal: gestureAbortController.signal
  };
  const cancel = () => gestureAbortController.abort();
  return [elements, eventOptions, cancel];
}
var init_setup = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/setup.mjs"() {
    init_resolve_elements();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/hover.mjs
function isValidHover(event) {
  return !(event.pointerType === "touch" || isDragActive());
}
function hover(elementOrSelector, onHoverStart, options = {}) {
  const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);
  const onPointerEnter = (enterEvent) => {
    if (!isValidHover(enterEvent))
      return;
    const { target } = enterEvent;
    const onHoverEnd = onHoverStart(target, enterEvent);
    if (typeof onHoverEnd !== "function" || !target)
      return;
    const onPointerLeave = (leaveEvent) => {
      if (!isValidHover(leaveEvent))
        return;
      onHoverEnd(leaveEvent);
      target.removeEventListener("pointerleave", onPointerLeave);
    };
    target.addEventListener("pointerleave", onPointerLeave, eventOptions);
  };
  elements.forEach((element) => {
    element.addEventListener("pointerenter", onPointerEnter, eventOptions);
  });
  return cancel;
}
var init_hover = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/hover.mjs"() {
    init_is_active();
    init_setup();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/hover.mjs
function handleHoverEvent(node, event, lifecycle) {
  const { props } = node;
  if (node.animationState && props.whileHover) {
    node.animationState.setActive("whileHover", lifecycle === "Start");
  }
  const eventName = "onHover" + lifecycle;
  const callback = props[eventName];
  if (callback) {
    frame.postRender(() => callback(event, extractEventInfo(event)));
  }
}
var HoverGesture;
var init_hover2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/hover.mjs"() {
    init_event_info();
    init_Feature();
    init_hover();
    init_frame();
    HoverGesture = class extends Feature {
      mount() {
        const { current } = this.node;
        if (!current)
          return;
        this.unmount = hover(current, (_element, startEvent) => {
          handleHoverEvent(this.node, startEvent, "Start");
          return (endEvent) => handleHoverEvent(this.node, endEvent, "End");
        });
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/focus.mjs
var FocusGesture;
var init_focus = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/focus.mjs"() {
    init_add_dom_event();
    init_Feature();
    init_pipe();
    FocusGesture = class extends Feature {
      constructor() {
        super(...arguments);
        this.isActive = false;
      }
      onFocus() {
        let isFocusVisible = false;
        try {
          isFocusVisible = this.node.current.matches(":focus-visible");
        } catch (e12) {
          isFocusVisible = true;
        }
        if (!isFocusVisible || !this.node.animationState)
          return;
        this.node.animationState.setActive("whileFocus", true);
        this.isActive = true;
      }
      onBlur() {
        if (!this.isActive || !this.node.animationState)
          return;
        this.node.animationState.setActive("whileFocus", false);
        this.isActive = false;
      }
      mount() {
        this.unmount = pipe(addDomEvent(this.node.current, "focus", () => this.onFocus()), addDomEvent(this.node.current, "blur", () => this.onBlur()));
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild;
var init_is_node_or_child = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs"() {
    isNodeOrChild = (parent, child) => {
      if (!child) {
        return false;
      } else if (parent === child) {
        return true;
      } else {
        return isNodeOrChild(parent, child.parentElement);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs
function isElementKeyboardAccessible(element) {
  return focusableElements.has(element.tagName) || element.tabIndex !== -1;
}
var focusableElements;
var init_is_keyboard_accessible = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs"() {
    focusableElements = /* @__PURE__ */ new Set([
      "BUTTON",
      "INPUT",
      "SELECT",
      "TEXTAREA",
      "A"
    ]);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/state.mjs
var isPressing;
var init_state2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/state.mjs"() {
    isPressing = /* @__PURE__ */ new WeakSet();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/keyboard.mjs
function filterEvents(callback) {
  return (event) => {
    if (event.key !== "Enter")
      return;
    callback(event);
  };
}
function firePointerEvent(target, type) {
  target.dispatchEvent(new PointerEvent("pointer" + type, { isPrimary: true, bubbles: true }));
}
var enableKeyboardPress;
var init_keyboard = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/keyboard.mjs"() {
    init_state2();
    enableKeyboardPress = (focusEvent, eventOptions) => {
      const element = focusEvent.currentTarget;
      if (!element)
        return;
      const handleKeydown = filterEvents(() => {
        if (isPressing.has(element))
          return;
        firePointerEvent(element, "down");
        const handleKeyup = filterEvents(() => {
          firePointerEvent(element, "up");
        });
        const handleBlur = () => firePointerEvent(element, "cancel");
        element.addEventListener("keyup", handleKeyup, eventOptions);
        element.addEventListener("blur", handleBlur, eventOptions);
      });
      element.addEventListener("keydown", handleKeydown, eventOptions);
      element.addEventListener("blur", () => element.removeEventListener("keydown", handleKeydown), eventOptions);
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/index.mjs
function isValidPressEvent(event) {
  return isPrimaryPointer(event) && !isDragActive();
}
function press(targetOrSelector, onPressStart, options = {}) {
  const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);
  const startPress = (startEvent) => {
    const target = startEvent.currentTarget;
    if (!isValidPressEvent(startEvent) || isPressing.has(target))
      return;
    isPressing.add(target);
    const onPressEnd = onPressStart(target, startEvent);
    const onPointerEnd = (endEvent, success) => {
      window.removeEventListener("pointerup", onPointerUp);
      window.removeEventListener("pointercancel", onPointerCancel);
      if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {
        return;
      }
      isPressing.delete(target);
      if (typeof onPressEnd === "function") {
        onPressEnd(endEvent, { success });
      }
    };
    const onPointerUp = (upEvent) => {
      onPointerEnd(upEvent, target === window || target === document || options.useGlobalTarget || isNodeOrChild(target, upEvent.target));
    };
    const onPointerCancel = (cancelEvent) => {
      onPointerEnd(cancelEvent, false);
    };
    window.addEventListener("pointerup", onPointerUp, eventOptions);
    window.addEventListener("pointercancel", onPointerCancel, eventOptions);
  };
  targets.forEach((target) => {
    const pointerDownTarget = options.useGlobalTarget ? window : target;
    pointerDownTarget.addEventListener("pointerdown", startPress, eventOptions);
    if (target instanceof HTMLElement) {
      target.addEventListener("focus", (event) => enableKeyboardPress(event, eventOptions));
      if (!isElementKeyboardAccessible(target) && !target.hasAttribute("tabindex")) {
        target.tabIndex = 0;
      }
    }
  });
  return cancelEvents;
}
var init_press = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/index.mjs"() {
    init_is_active();
    init_is_node_or_child();
    init_is_primary_pointer();
    init_setup();
    init_is_keyboard_accessible();
    init_keyboard();
    init_state2();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/press.mjs
function handlePressEvent(node, event, lifecycle) {
  const { props } = node;
  if (node.current instanceof HTMLButtonElement && node.current.disabled) {
    return;
  }
  if (node.animationState && props.whileTap) {
    node.animationState.setActive("whileTap", lifecycle === "Start");
  }
  const eventName = "onTap" + (lifecycle === "End" ? "" : lifecycle);
  const callback = props[eventName];
  if (callback) {
    frame.postRender(() => callback(event, extractEventInfo(event)));
  }
}
var PressGesture;
var init_press2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/press.mjs"() {
    init_event_info();
    init_Feature();
    init_press();
    init_frame();
    PressGesture = class extends Feature {
      mount() {
        const { current } = this.node;
        if (!current)
          return;
        this.unmount = press(current, (_element, startEvent) => {
          handlePressEvent(this.node, startEvent, "Start");
          return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? "End" : "Cancel");
        }, { useGlobalTarget: this.node.props.globalTapTarget });
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/observers.mjs
function initIntersectionObserver({ root: root5, ...options }) {
  const lookupRoot = root5 || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  const rootObservers = observers.get(lookupRoot);
  const key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root: root5, ...options });
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  const rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return () => {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}
var observerCallbacks, observers, fireObserverCallback, fireAllObserverCallbacks;
var init_observers = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/observers.mjs"() {
    observerCallbacks = /* @__PURE__ */ new WeakMap();
    observers = /* @__PURE__ */ new WeakMap();
    fireObserverCallback = (entry) => {
      const callback = observerCallbacks.get(entry.target);
      callback && callback(entry);
    };
    fireAllObserverCallbacks = (entries) => {
      entries.forEach(fireObserverCallback);
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name2) => viewport[name2] !== prevViewport[name2];
}
var thresholdNames, InViewFeature;
var init_viewport = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs"() {
    init_Feature();
    init_observers();
    thresholdNames = {
      some: 0,
      all: 1
    };
    InViewFeature = class extends Feature {
      constructor() {
        super(...arguments);
        this.hasEnteredView = false;
        this.isInView = false;
      }
      startObserver() {
        this.unmount();
        const { viewport = {} } = this.node.getProps();
        const { root: root5, margin: rootMargin, amount = "some", once } = viewport;
        const options = {
          root: root5 ? root5.current : void 0,
          rootMargin,
          threshold: typeof amount === "number" ? amount : thresholdNames[amount]
        };
        const onIntersectionUpdate = (entry) => {
          const { isIntersecting } = entry;
          if (this.isInView === isIntersecting)
            return;
          this.isInView = isIntersecting;
          if (once && !isIntersecting && this.hasEnteredView) {
            return;
          } else if (isIntersecting) {
            this.hasEnteredView = true;
          }
          if (this.node.animationState) {
            this.node.animationState.setActive("whileInView", isIntersecting);
          }
          const { onViewportEnter, onViewportLeave } = this.node.getProps();
          const callback = isIntersecting ? onViewportEnter : onViewportLeave;
          callback && callback(entry);
        };
        return observeIntersection(this.node.current, options, onIntersectionUpdate);
      }
      mount() {
        this.startObserver();
      }
      update() {
        if (typeof IntersectionObserver === "undefined")
          return;
        const { props, prevProps } = this.node;
        const hasOptionsChanged = ["amount", "margin", "root"].some(hasViewportOptionChanged(props, prevProps));
        if (hasOptionsChanged) {
          this.startObserver();
        }
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations;
var init_gestures = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/gestures.mjs"() {
    init_hover2();
    init_focus();
    init_press2();
    init_viewport();
    gestureAnimations = {
      inView: {
        Feature: InViewFeature
      },
      tap: {
        Feature: PressGesture
      },
      focus: {
        Feature: FocusGesture
      },
      hover: {
        Feature: HoverGesture
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout.mjs
var layout;
var init_layout = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout.mjs"() {
    init_HTMLProjectionNode();
    init_MeasureLayout();
    layout = {
      layout: {
        ProjectionNode: HTMLProjectionNode,
        MeasureLayout
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs
var prefersReducedMotion, hasReducedMotionListener;
var init_state3 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs"() {
    prefersReducedMotion = { current: null };
    hasReducedMotionListener = { current: false };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs
function initPrefersReducedMotion() {
  hasReducedMotionListener.current = true;
  if (!isBrowser3)
    return;
  if (window.matchMedia) {
    const motionMediaQuery = window.matchMedia("(prefers-reduced-motion)");
    const setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;
    motionMediaQuery.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
var init_reduced_motion = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs"() {
    init_is_browser();
    init_state3();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes, findValueType;
var init_find2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/find.mjs"() {
    init_color();
    init_complex();
    init_dimensions();
    init_test();
    valueTypes = [...dimensionValueTypes, color, complex];
    findValueType = (v5) => valueTypes.find(testValueType(v5));
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs
var visualElementStore;
var init_store2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs"() {
    visualElementStore = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  for (const key in next) {
    const nextValue = next[key];
    const prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
      if (false) {
        warnOnce(nextValue.version === "12.7.4", `Attempting to mix Motion versions ${nextValue.version} with 12.7.4 may not work as expected.`);
      }
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue, { owner: element }));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        const existingValue = element.getValue(key);
        if (existingValue.liveStyle === true) {
          existingValue.jump(nextValue);
        } else if (!existingValue.hasAnimated) {
          existingValue.set(nextValue);
        }
      } else {
        const latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
    }
  }
  for (const key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}
var init_motion_values = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs"() {
    init_is_motion_value();
    init_value();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs
var propEventHandlers, VisualElement;
var init_VisualElement = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs"() {
    init_definitions();
    init_models();
    init_is_numerical_string();
    init_is_zero_value_string();
    init_reduced_motion();
    init_state3();
    init_complex();
    init_is_motion_value();
    init_animatable_none();
    init_find2();
    init_keys_transform();
    init_store2();
    init_is_controlling_variants();
    init_KeyframesResolver();
    init_motion_values();
    init_resolve_variants();
    init_sync_time();
    init_frame();
    init_value();
    init_subscription_manager();
    propEventHandlers = [
      "AnimationStart",
      "AnimationComplete",
      "Update",
      "BeforeLayoutMeasure",
      "LayoutMeasure",
      "LayoutAnimationStart",
      "LayoutAnimationComplete"
    ];
    VisualElement = class {
      /**
       * This method takes React props and returns found MotionValues. For example, HTML
       * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
       *
       * This isn't an abstract method as it needs calling in the constructor, but it is
       * intended to be one.
       */
      scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {
        return {};
      }
      constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState }, options = {}) {
        this.current = null;
        this.children = /* @__PURE__ */ new Set();
        this.isVariantNode = false;
        this.isControllingVariants = false;
        this.shouldReduceMotion = null;
        this.values = /* @__PURE__ */ new Map();
        this.KeyframeResolver = KeyframeResolver;
        this.features = {};
        this.valueSubscriptions = /* @__PURE__ */ new Map();
        this.prevMotionValues = {};
        this.events = {};
        this.propEventSubscriptions = {};
        this.notifyUpdate = () => this.notify("Update", this.latestValues);
        this.render = () => {
          if (!this.current)
            return;
          this.triggerBuild();
          this.renderInstance(this.current, this.renderState, this.props.style, this.projection);
        };
        this.renderScheduledAt = 0;
        this.scheduleRender = () => {
          const now3 = time.now();
          if (this.renderScheduledAt < now3) {
            this.renderScheduledAt = now3;
            frame.render(this.render, false, true);
          }
        };
        const { latestValues, renderState, onUpdate } = visualState;
        this.onUpdate = onUpdate;
        this.latestValues = latestValues;
        this.baseTarget = { ...latestValues };
        this.initialValues = props.initial ? { ...latestValues } : {};
        this.renderState = renderState;
        this.parent = parent;
        this.props = props;
        this.presenceContext = presenceContext;
        this.depth = parent ? parent.depth + 1 : 0;
        this.reducedMotionConfig = reducedMotionConfig;
        this.options = options;
        this.blockInitialAnimation = Boolean(blockInitialAnimation);
        this.isControllingVariants = isControllingVariants(props);
        this.isVariantNode = isVariantNode(props);
        if (this.isVariantNode) {
          this.variantChildren = /* @__PURE__ */ new Set();
        }
        this.manuallyAnimateOnMount = Boolean(parent && parent.current);
        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);
        for (const key in initialMotionValues) {
          const value = initialMotionValues[key];
          if (latestValues[key] !== void 0 && isMotionValue(value)) {
            value.set(latestValues[key], false);
          }
        }
      }
      mount(instance) {
        this.current = instance;
        visualElementStore.set(instance, this);
        if (this.projection && !this.projection.instance) {
          this.projection.mount(instance);
        }
        if (this.parent && this.isVariantNode && !this.isControllingVariants) {
          this.removeFromVariantTree = this.parent.addVariantChild(this);
        }
        this.values.forEach((value, key) => this.bindToMotionValue(key, value));
        if (!hasReducedMotionListener.current) {
          initPrefersReducedMotion();
        }
        this.shouldReduceMotion = this.reducedMotionConfig === "never" ? false : this.reducedMotionConfig === "always" ? true : prefersReducedMotion.current;
        if (false) {
          warnOnce(this.shouldReduceMotion !== true, "You have Reduced Motion enabled on your device. Animations may not appear as expected.");
        }
        if (this.parent)
          this.parent.children.add(this);
        this.update(this.props, this.presenceContext);
      }
      unmount() {
        this.projection && this.projection.unmount();
        cancelFrame(this.notifyUpdate);
        cancelFrame(this.render);
        this.valueSubscriptions.forEach((remove) => remove());
        this.valueSubscriptions.clear();
        this.removeFromVariantTree && this.removeFromVariantTree();
        this.parent && this.parent.children.delete(this);
        for (const key in this.events) {
          this.events[key].clear();
        }
        for (const key in this.features) {
          const feature = this.features[key];
          if (feature) {
            feature.unmount();
            feature.isMounted = false;
          }
        }
        this.current = null;
      }
      bindToMotionValue(key, value) {
        if (this.valueSubscriptions.has(key)) {
          this.valueSubscriptions.get(key)();
        }
        const valueIsTransform = transformProps.has(key);
        if (valueIsTransform && this.onBindTransform) {
          this.onBindTransform();
        }
        const removeOnChange = value.on("change", (latestValue) => {
          this.latestValues[key] = latestValue;
          this.props.onUpdate && frame.preRender(this.notifyUpdate);
          if (valueIsTransform && this.projection) {
            this.projection.isTransformDirty = true;
          }
        });
        const removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
        let removeSyncCheck;
        if (window.MotionCheckAppearSync) {
          removeSyncCheck = window.MotionCheckAppearSync(this, key, value);
        }
        this.valueSubscriptions.set(key, () => {
          removeOnChange();
          removeOnRenderRequest();
          if (removeSyncCheck)
            removeSyncCheck();
          if (value.owner)
            value.stop();
        });
      }
      sortNodePosition(other) {
        if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {
          return 0;
        }
        return this.sortInstanceNodePosition(this.current, other.current);
      }
      updateFeatures() {
        let key = "animation";
        for (key in featureDefinitions) {
          const featureDefinition = featureDefinitions[key];
          if (!featureDefinition)
            continue;
          const { isEnabled, Feature: FeatureConstructor } = featureDefinition;
          if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {
            this.features[key] = new FeatureConstructor(this);
          }
          if (this.features[key]) {
            const feature = this.features[key];
            if (feature.isMounted) {
              feature.update();
            } else {
              feature.mount();
              feature.isMounted = true;
            }
          }
        }
      }
      triggerBuild() {
        this.build(this.renderState, this.latestValues, this.props);
      }
      /**
       * Measure the current viewport box with or without transforms.
       * Only measures axis-aligned boxes, rotate and skew must be manually
       * removed with a re-render to work.
       */
      measureViewportBox() {
        return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
      }
      getStaticValue(key) {
        return this.latestValues[key];
      }
      setStaticValue(key, value) {
        this.latestValues[key] = value;
      }
      /**
       * Update the provided props. Ensure any newly-added motion values are
       * added to our map, old ones removed, and listeners updated.
       */
      update(props, presenceContext) {
        if (props.transformTemplate || this.props.transformTemplate) {
          this.scheduleRender();
        }
        this.prevProps = this.props;
        this.props = props;
        this.prevPresenceContext = this.presenceContext;
        this.presenceContext = presenceContext;
        for (let i11 = 0; i11 < propEventHandlers.length; i11++) {
          const key = propEventHandlers[i11];
          if (this.propEventSubscriptions[key]) {
            this.propEventSubscriptions[key]();
            delete this.propEventSubscriptions[key];
          }
          const listenerName = "on" + key;
          const listener = props[listenerName];
          if (listener) {
            this.propEventSubscriptions[key] = this.on(key, listener);
          }
        }
        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);
        if (this.handleChildMotionValue) {
          this.handleChildMotionValue();
        }
        this.onUpdate && this.onUpdate(this);
      }
      getProps() {
        return this.props;
      }
      /**
       * Returns the variant definition with a given name.
       */
      getVariant(name2) {
        return this.props.variants ? this.props.variants[name2] : void 0;
      }
      /**
       * Returns the defined default transition on this component.
       */
      getDefaultTransition() {
        return this.props.transition;
      }
      getTransformPagePoint() {
        return this.props.transformPagePoint;
      }
      getClosestVariantNode() {
        return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
      }
      /**
       * Add a child visual element to our set of children.
       */
      addVariantChild(child) {
        const closestVariantNode = this.getClosestVariantNode();
        if (closestVariantNode) {
          closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);
          return () => closestVariantNode.variantChildren.delete(child);
        }
      }
      /**
       * Add a motion value and bind it to this visual element.
       */
      addValue(key, value) {
        const existingValue = this.values.get(key);
        if (value !== existingValue) {
          if (existingValue)
            this.removeValue(key);
          this.bindToMotionValue(key, value);
          this.values.set(key, value);
          this.latestValues[key] = value.get();
        }
      }
      /**
       * Remove a motion value and unbind any active subscriptions.
       */
      removeValue(key) {
        this.values.delete(key);
        const unsubscribe = this.valueSubscriptions.get(key);
        if (unsubscribe) {
          unsubscribe();
          this.valueSubscriptions.delete(key);
        }
        delete this.latestValues[key];
        this.removeValueFromRenderState(key, this.renderState);
      }
      /**
       * Check whether we have a motion value for this key
       */
      hasValue(key) {
        return this.values.has(key);
      }
      getValue(key, defaultValue2) {
        if (this.props.values && this.props.values[key]) {
          return this.props.values[key];
        }
        let value = this.values.get(key);
        if (value === void 0 && defaultValue2 !== void 0) {
          value = motionValue(defaultValue2 === null ? void 0 : defaultValue2, { owner: this });
          this.addValue(key, value);
        }
        return value;
      }
      /**
       * If we're trying to animate to a previously unencountered value,
       * we need to check for it in our state and as a last resort read it
       * directly from the instance (which might have performance implications).
       */
      readValue(key, target) {
        let value = this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : this.getBaseTargetFromProps(this.props, key) ?? this.readValueFromInstance(this.current, key, this.options);
        if (value !== void 0 && value !== null) {
          if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
            value = parseFloat(value);
          } else if (!findValueType(value) && complex.test(target)) {
            value = getAnimatableNone2(key, target);
          }
          this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);
        }
        return isMotionValue(value) ? value.get() : value;
      }
      /**
       * Set the base target to later animate back to. This is currently
       * only hydrated on creation and when we first read a value.
       */
      setBaseTarget(key, value) {
        this.baseTarget[key] = value;
      }
      /**
       * Find the base target for a value thats been removed from all animation
       * props.
       */
      getBaseTarget(key) {
        const { initial } = this.props;
        let valueFromInitial;
        if (typeof initial === "string" || typeof initial === "object") {
          const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);
          if (variant) {
            valueFromInitial = variant[key];
          }
        }
        if (initial && valueFromInitial !== void 0) {
          return valueFromInitial;
        }
        const target = this.getBaseTargetFromProps(this.props, key);
        if (target !== void 0 && !isMotionValue(target))
          return target;
        return this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
      }
      on(eventName, callback) {
        if (!this.events[eventName]) {
          this.events[eventName] = new SubscriptionManager();
        }
        return this.events[eventName].add(callback);
      }
      notify(eventName, ...args) {
        if (this.events[eventName]) {
          this.events[eventName].notify(...args);
        }
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs
var DOMVisualElement;
var init_DOMVisualElement = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs"() {
    init_is_motion_value();
    init_VisualElement();
    init_DOMKeyframesResolver();
    DOMVisualElement = class extends VisualElement {
      constructor() {
        super(...arguments);
        this.KeyframeResolver = DOMKeyframesResolver;
      }
      sortInstanceNodePosition(a12, b4) {
        return a12.compareDocumentPosition(b4) & 2 ? 1 : -1;
      }
      getBaseTargetFromProps(props, key) {
        return props.style ? props.style[key] : void 0;
      }
      removeValueFromRenderState(key, { vars, style }) {
        delete vars[key];
        delete style[key];
      }
      handleChildMotionValue() {
        if (this.childSubscription) {
          this.childSubscription();
          delete this.childSubscription;
        }
        const { children } = this.props;
        if (isMotionValue(children)) {
          this.childSubscription = children.on("change", (latest) => {
            if (this.current) {
              this.current.textContent = `${latest}`;
            }
          });
        }
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var HTMLVisualElement;
var init_HTMLVisualElement = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs"() {
    init_measure2();
    init_DOMVisualElement();
    init_is_css_variable();
    init_build_styles();
    init_keys_transform();
    init_parse_transform();
    init_render();
    init_scrape_motion_values();
    HTMLVisualElement = class extends DOMVisualElement {
      constructor() {
        super(...arguments);
        this.type = "html";
        this.renderInstance = renderHTML;
      }
      readValueFromInstance(instance, key) {
        if (transformProps.has(key)) {
          return readTransformValue(instance, key);
        } else {
          const computedStyle = getComputedStyle2(instance);
          const value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
          return typeof value === "string" ? value.trim() : value;
        }
      }
      measureInstanceViewportBox(instance, { transformPagePoint }) {
        return measureViewportBox(instance, transformPagePoint);
      }
      build(renderState, latestValues, props) {
        buildHTMLStyles(renderState, latestValues, props.transformTemplate);
      }
      scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return scrapeMotionValuesFromProps(props, prevProps, visualElement);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs
var SVGVisualElement;
var init_SVGVisualElement = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"() {
    init_models();
    init_DOMVisualElement();
    init_camel_to_dash();
    init_defaults();
    init_keys_transform();
    init_build_attrs();
    init_camel_case_attrs();
    init_is_svg_tag();
    init_measure();
    init_render2();
    init_scrape_motion_values2();
    init_frame();
    SVGVisualElement = class extends DOMVisualElement {
      constructor() {
        super(...arguments);
        this.type = "svg";
        this.isSVGTag = false;
        this.measureInstanceViewportBox = createBox;
        this.updateDimensions = () => {
          if (this.current && !this.renderState.dimensions) {
            updateSVGDimensions(this.current, this.renderState);
          }
        };
      }
      getBaseTargetFromProps(props, key) {
        return props[key];
      }
      readValueFromInstance(instance, key) {
        if (transformProps.has(key)) {
          const defaultType = getDefaultValueType(key);
          return defaultType ? defaultType.default || 0 : 0;
        }
        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
        return instance.getAttribute(key);
      }
      scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return scrapeMotionValuesFromProps2(props, prevProps, visualElement);
      }
      onBindTransform() {
        if (this.current && !this.renderState.dimensions) {
          frame.postRender(this.updateDimensions);
        }
      }
      build(renderState, latestValues, props) {
        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);
      }
      renderInstance(instance, renderState, styleProp, projection) {
        renderSVG(instance, renderState, styleProp, projection);
      }
      mount(instance) {
        this.isSVGTag = isSVGTag(instance.tagName);
        super.mount(instance);
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/create-visual-element.mjs
var import_react192, createDomVisualElement;
var init_create_visual_element = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/create-visual-element.mjs"() {
    import_react192 = __toESM(require_react(), 1);
    init_HTMLVisualElement();
    init_SVGVisualElement();
    init_is_svg_component();
    createDomVisualElement = (Component3, options) => {
      return isSVGComponent(Component3) ? new SVGVisualElement(options) : new HTMLVisualElement(options, {
        allowProjection: Component3 !== import_react192.Fragment
      });
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/create.mjs
var createMotionComponent;
var init_create2 = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/create.mjs"() {
    init_animations();
    init_drag2();
    init_gestures();
    init_layout();
    init_create_factory();
    init_create_visual_element();
    createMotionComponent = /* @__PURE__ */ createMotionComponentFactory({
      ...animations,
      ...gestureAnimations,
      ...drag,
      ...layout
    }, createDomVisualElement);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/proxy.mjs
var motion;
var init_proxy = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/proxy.mjs"() {
    init_create_proxy();
    init_create2();
    motion = /* @__PURE__ */ createDOMMotionComponentProxy(createMotionComponent);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-motion-value-event.mjs
function useMotionValueEvent(value, event, callback) {
  (0, import_react193.useInsertionEffect)(() => value.on(event, callback), [value, event, callback]);
}
var import_react193;
var init_use_motion_value_event = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/utils/use-motion-value-event.mjs"() {
    import_react193 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/observe.mjs
function observeTimeline(update, timeline) {
  let prevProgress;
  const onFrame = () => {
    const { currentTime } = timeline;
    const percentage = currentTime === null ? 0 : currentTime.value;
    const progress3 = percentage / 100;
    if (prevProgress !== progress3) {
      update(progress3);
    }
    prevProgress = progress3;
  };
  frame.update(onFrame, true);
  return () => cancelFrame(onFrame);
}
var init_observe = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/observe.mjs"() {
    init_frame();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/handle-element.mjs
function getElementSize(target, borderBoxSize) {
  if (borderBoxSize) {
    const { inlineSize, blockSize } = borderBoxSize[0];
    return { width: inlineSize, height: blockSize };
  } else if (target instanceof SVGElement && "getBBox" in target) {
    return target.getBBox();
  } else {
    return {
      width: target.offsetWidth,
      height: target.offsetHeight
    };
  }
}
function notifyTarget({ target, contentRect, borderBoxSize }) {
  resizeHandlers.get(target)?.forEach((handler2) => {
    handler2({
      target,
      contentSize: contentRect,
      get size() {
        return getElementSize(target, borderBoxSize);
      }
    });
  });
}
function notifyAll(entries) {
  entries.forEach(notifyTarget);
}
function createResizeObserver() {
  if (typeof ResizeObserver === "undefined")
    return;
  observer = new ResizeObserver(notifyAll);
}
function resizeElement(target, handler2) {
  if (!observer)
    createResizeObserver();
  const elements = resolveElements(target);
  elements.forEach((element) => {
    let elementHandlers = resizeHandlers.get(element);
    if (!elementHandlers) {
      elementHandlers = /* @__PURE__ */ new Set();
      resizeHandlers.set(element, elementHandlers);
    }
    elementHandlers.add(handler2);
    observer?.observe(element);
  });
  return () => {
    elements.forEach((element) => {
      const elementHandlers = resizeHandlers.get(element);
      elementHandlers?.delete(handler2);
      if (!elementHandlers?.size) {
        observer?.unobserve(element);
      }
    });
  };
}
var resizeHandlers, observer;
var init_handle_element = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/handle-element.mjs"() {
    init_resolve_elements();
    resizeHandlers = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/handle-window.mjs
function createWindowResizeHandler() {
  windowResizeHandler = () => {
    const size = {
      width: window.innerWidth,
      height: window.innerHeight
    };
    const info = {
      target: window,
      size,
      contentSize: size
    };
    windowCallbacks.forEach((callback) => callback(info));
  };
  window.addEventListener("resize", windowResizeHandler);
}
function resizeWindow(callback) {
  windowCallbacks.add(callback);
  if (!windowResizeHandler)
    createWindowResizeHandler();
  return () => {
    windowCallbacks.delete(callback);
    if (!windowCallbacks.size && windowResizeHandler) {
      windowResizeHandler = void 0;
    }
  };
}
var windowCallbacks, windowResizeHandler;
var init_handle_window = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/handle-window.mjs"() {
    windowCallbacks = /* @__PURE__ */ new Set();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/index.mjs
function resize(a12, b4) {
  return typeof a12 === "function" ? resizeWindow(a12) : resizeElement(a12, b4);
}
var init_resize = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/resize/index.mjs"() {
    init_handle_element();
    init_handle_window();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/info.mjs
function updateAxisInfo(element, axisName, info, time3) {
  const axis = info[axisName];
  const { length, position } = keys2[axisName];
  const prev = axis.current;
  const prevTime = info.time;
  axis.current = element[`scroll${position}`];
  axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];
  axis.offset.length = 0;
  axis.offset[0] = 0;
  axis.offset[1] = axis.scrollLength;
  axis.progress = progress(0, axis.scrollLength, axis.current);
  const elapsed = time3 - prevTime;
  axis.velocity = elapsed > maxElapsed2 ? 0 : velocityPerSecond(axis.current - prev, elapsed);
}
function updateScrollInfo(element, info, time3) {
  updateAxisInfo(element, "x", info, time3);
  updateAxisInfo(element, "y", info, time3);
  info.time = time3;
}
var maxElapsed2, createAxisInfo, createScrollInfo, keys2;
var init_info = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/info.mjs"() {
    init_progress();
    init_velocity_per_second();
    maxElapsed2 = 50;
    createAxisInfo = () => ({
      current: 0,
      offset: [],
      progress: 0,
      scrollLength: 0,
      targetOffset: 0,
      targetLength: 0,
      containerLength: 0,
      velocity: 0
    });
    createScrollInfo = () => ({
      time: 0,
      x: createAxisInfo(),
      y: createAxisInfo()
    });
    keys2 = {
      x: {
        length: "Width",
        position: "Left"
      },
      y: {
        length: "Height",
        position: "Top"
      }
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs
function calcInset(element, container5) {
  const inset = { x: 0, y: 0 };
  let current = element;
  while (current && current !== container5) {
    if (current instanceof HTMLElement) {
      inset.x += current.offsetLeft;
      inset.y += current.offsetTop;
      current = current.offsetParent;
    } else if (current.tagName === "svg") {
      const svgBoundingBox = current.getBoundingClientRect();
      current = current.parentElement;
      const parentBoundingBox = current.getBoundingClientRect();
      inset.x += svgBoundingBox.left - parentBoundingBox.left;
      inset.y += svgBoundingBox.top - parentBoundingBox.top;
    } else if (current instanceof SVGGraphicsElement) {
      const { x: x3, y: y3 } = current.getBBox();
      inset.x += x3;
      inset.y += y3;
      let svg = null;
      let parent = current.parentNode;
      while (!svg) {
        if (parent.tagName === "svg") {
          svg = parent;
        }
        parent = current.parentNode;
      }
      current = svg;
    } else {
      break;
    }
  }
  return inset;
}
var init_inset = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs"() {
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs
function resolveEdge(edge, length, inset = 0) {
  let delta = 0;
  if (edge in namedEdges) {
    edge = namedEdges[edge];
  }
  if (typeof edge === "string") {
    const asNumber3 = parseFloat(edge);
    if (edge.endsWith("px")) {
      delta = asNumber3;
    } else if (edge.endsWith("%")) {
      edge = asNumber3 / 100;
    } else if (edge.endsWith("vw")) {
      delta = asNumber3 / 100 * document.documentElement.clientWidth;
    } else if (edge.endsWith("vh")) {
      delta = asNumber3 / 100 * document.documentElement.clientHeight;
    } else {
      edge = asNumber3;
    }
  }
  if (typeof edge === "number") {
    delta = length * edge;
  }
  return inset + delta;
}
var namedEdges;
var init_edge = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs"() {
    namedEdges = {
      start: 0,
      center: 0.5,
      end: 1
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs
function resolveOffset(offset, containerLength, targetLength, targetInset) {
  let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset2;
  let targetPoint = 0;
  let containerPoint = 0;
  if (typeof offset === "number") {
    offsetDefinition = [offset, offset];
  } else if (typeof offset === "string") {
    offset = offset.trim();
    if (offset.includes(" ")) {
      offsetDefinition = offset.split(" ");
    } else {
      offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];
    }
  }
  targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);
  containerPoint = resolveEdge(offsetDefinition[1], containerLength);
  return targetPoint - containerPoint;
}
var defaultOffset2;
var init_offset = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs"() {
    init_edge();
    defaultOffset2 = [0, 0];
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs
var ScrollOffset;
var init_presets = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs"() {
    ScrollOffset = {
      Enter: [
        [0, 1],
        [1, 1]
      ],
      Exit: [
        [0, 0],
        [1, 0]
      ],
      Any: [
        [1, 0],
        [0, 1]
      ],
      All: [
        [0, 0],
        [1, 1]
      ]
    };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs
function getTargetSize(target) {
  return "getBBox" in target && target.tagName !== "svg" ? target.getBBox() : { width: target.clientWidth, height: target.clientHeight };
}
function resolveOffsets(container5, info, options) {
  const { offset: offsetDefinition = ScrollOffset.All } = options;
  const { target = container5, axis = "y" } = options;
  const lengthLabel = axis === "y" ? "height" : "width";
  const inset = target !== container5 ? calcInset(target, container5) : point;
  const targetSize = target === container5 ? { width: container5.scrollWidth, height: container5.scrollHeight } : getTargetSize(target);
  const containerSize = {
    width: container5.clientWidth,
    height: container5.clientHeight
  };
  info[axis].offset.length = 0;
  let hasChanged = !info[axis].interpolate;
  const numOffsets = offsetDefinition.length;
  for (let i11 = 0; i11 < numOffsets; i11++) {
    const offset = resolveOffset(offsetDefinition[i11], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);
    if (!hasChanged && offset !== info[axis].interpolatorOffsets[i11]) {
      hasChanged = true;
    }
    info[axis].offset[i11] = offset;
  }
  if (hasChanged) {
    info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });
    info[axis].interpolatorOffsets = [...info[axis].offset];
  }
  info[axis].progress = clamp2(0, 1, info[axis].interpolate(info[axis].current));
}
var point;
var init_offsets = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs"() {
    init_clamp2();
    init_interpolate();
    init_default();
    init_inset();
    init_offset();
    init_presets();
    point = { x: 0, y: 0 };
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs
function measure(container5, target = container5, info) {
  info.x.targetOffset = 0;
  info.y.targetOffset = 0;
  if (target !== container5) {
    let node = target;
    while (node && node !== container5) {
      info.x.targetOffset += node.offsetLeft;
      info.y.targetOffset += node.offsetTop;
      node = node.offsetParent;
    }
  }
  info.x.targetLength = target === container5 ? target.scrollWidth : target.clientWidth;
  info.y.targetLength = target === container5 ? target.scrollHeight : target.clientHeight;
  info.x.containerLength = container5.clientWidth;
  info.y.containerLength = container5.clientHeight;
  if (false) {
    if (container5 && target && target !== container5) {
      warnOnce(getComputedStyle(container5).position !== "static", "Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.");
    }
  }
}
function createOnScrollHandler(element, onScroll, info, options = {}) {
  return {
    measure: () => measure(element, options.target, info),
    update: (time3) => {
      updateScrollInfo(element, info, time3);
      if (options.offset || options.target) {
        resolveOffsets(element, info, options);
      }
    },
    notify: () => onScroll(info)
  };
}
var init_on_scroll_handler = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs"() {
    init_info();
    init_offsets();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/track.mjs
function scrollInfo(onScroll, { container: container5 = document.documentElement, ...options } = {}) {
  let containerHandlers = onScrollHandlers.get(container5);
  if (!containerHandlers) {
    containerHandlers = /* @__PURE__ */ new Set();
    onScrollHandlers.set(container5, containerHandlers);
  }
  const info = createScrollInfo();
  const containerHandler = createOnScrollHandler(container5, onScroll, info, options);
  containerHandlers.add(containerHandler);
  if (!scrollListeners.has(container5)) {
    const measureAll = () => {
      for (const handler2 of containerHandlers)
        handler2.measure();
    };
    const updateAll = () => {
      for (const handler2 of containerHandlers) {
        handler2.update(frameData.timestamp);
      }
    };
    const notifyAll2 = () => {
      for (const handler2 of containerHandlers)
        handler2.notify();
    };
    const listener2 = () => {
      frame.read(measureAll, false, true);
      frame.read(updateAll, false, true);
      frame.update(notifyAll2, false, true);
    };
    scrollListeners.set(container5, listener2);
    const target = getEventTarget(container5);
    window.addEventListener("resize", listener2, { passive: true });
    if (container5 !== document.documentElement) {
      resizeListeners.set(container5, resize(container5, listener2));
    }
    target.addEventListener("scroll", listener2, { passive: true });
  }
  const listener = scrollListeners.get(container5);
  frame.read(listener, false, true);
  return () => {
    cancelFrame(listener);
    const currentHandlers = onScrollHandlers.get(container5);
    if (!currentHandlers)
      return;
    currentHandlers.delete(containerHandler);
    if (currentHandlers.size)
      return;
    const scrollListener = scrollListeners.get(container5);
    scrollListeners.delete(container5);
    if (scrollListener) {
      getEventTarget(container5).removeEventListener("scroll", scrollListener);
      resizeListeners.get(container5)?.();
      window.removeEventListener("resize", scrollListener);
    }
  };
}
var scrollListeners, resizeListeners, onScrollHandlers, getEventTarget;
var init_track = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/track.mjs"() {
    init_resize();
    init_info();
    init_on_scroll_handler();
    init_frame();
    scrollListeners = /* @__PURE__ */ new WeakMap();
    resizeListeners = /* @__PURE__ */ new WeakMap();
    onScrollHandlers = /* @__PURE__ */ new WeakMap();
    getEventTarget = (element) => element === document.documentElement ? window : element;
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/index.mjs
function scrollTimelineFallback({ source, container: container5, axis = "y" }) {
  if (source)
    container5 = source;
  const currentTime = { value: 0 };
  const cancel = scrollInfo((info) => {
    currentTime.value = info[axis].progress * 100;
  }, { container: container5, axis });
  return { currentTime, cancel };
}
function getTimeline({ source, container: container5 = document.documentElement, axis = "y" } = {}) {
  if (source)
    container5 = source;
  if (!timelineCache.has(container5)) {
    timelineCache.set(container5, {});
  }
  const elementCache = timelineCache.get(container5);
  if (!elementCache[axis]) {
    elementCache[axis] = supportsScrollTimeline() ? new ScrollTimeline({ source: container5, axis }) : scrollTimelineFallback({ source: container5, axis });
  }
  return elementCache[axis];
}
function isOnScrollWithInfo(onScroll) {
  return onScroll.length === 2;
}
function needsElementTracking(options) {
  return options && (options.target || options.offset);
}
function scrollFunction(onScroll, options) {
  if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {
    return scrollInfo((info) => {
      onScroll(info[options.axis].progress, info);
    }, options);
  } else {
    return observeTimeline(onScroll, getTimeline(options));
  }
}
function scrollAnimation(animation, options) {
  animation.flatten();
  if (needsElementTracking(options)) {
    animation.pause();
    return scrollInfo((info) => {
      animation.time = animation.duration * info[options.axis].progress;
    }, options);
  } else {
    const timeline = getTimeline(options);
    if (animation.attachTimeline) {
      return animation.attachTimeline(timeline, (valueAnimation) => {
        valueAnimation.pause();
        return observeTimeline((progress3) => {
          valueAnimation.time = valueAnimation.duration * progress3;
        }, timeline);
      });
    } else {
      return noop;
    }
  }
}
function scroll(onScroll, { axis = "y", ...options } = {}) {
  const optionsWithDefaults = { axis, ...options };
  return typeof onScroll === "function" ? scrollFunction(onScroll, optionsWithDefaults) : scrollAnimation(onScroll, optionsWithDefaults);
}
var timelineCache;
var init_scroll = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/index.mjs"() {
    init_observe();
    init_track();
    init_noop();
    init_scroll_timeline();
    timelineCache = /* @__PURE__ */ new Map();
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-scroll.mjs
function refWarning(name2, ref) {
  warning(Boolean(!ref || ref.current), `You have defined a ${name2} options but the provided ref is not yet hydrated, probably because it's defined higher up the tree. Try calling useScroll() in the same component as the ref, or setting its \`layoutEffect: false\` option.`);
}
function useScroll({ container: container5, target, layoutEffect = true, ...options } = {}) {
  const values2 = useConstant(createScrollMotionValues);
  const useLifecycleEffect = layoutEffect ? useIsomorphicLayoutEffect : import_react194.useEffect;
  useLifecycleEffect(() => {
    refWarning("target", target);
    refWarning("container", container5);
    return scroll((_progress, { x: x3, y: y3 }) => {
      values2.scrollX.set(x3.current);
      values2.scrollXProgress.set(x3.progress);
      values2.scrollY.set(y3.current);
      values2.scrollYProgress.set(y3.progress);
    }, {
      ...options,
      container: container5?.current || void 0,
      target: target?.current || void 0
    });
  }, [container5, target, JSON.stringify(options.offset)]);
  return values2;
}
var import_react194, createScrollMotionValues;
var init_use_scroll = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/value/use-scroll.mjs"() {
    import_react194 = __toESM(require_react(), 1);
    init_scroll();
    init_use_constant();
    init_use_isomorphic_effect2();
    init_errors();
    init_value();
    createScrollMotionValues = () => ({
      scrollX: motionValue(0),
      scrollY: motionValue(0),
      scrollXProgress: motionValue(0),
      scrollYProgress: motionValue(0)
    });
  }
});

// node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion/lib/react.mjs
var init_react = __esm({
  "node_modules/.pnpm/motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion/lib/react.mjs"() {
    "use client";
    init_proxy();
    init_use_motion_value_event();
    init_use_scroll();
  }
});

// dist/server/chunks/chunk-BYxqvYEl.js
var relative, letters, s20;
var init_chunk_BYxqvYEl = __esm({
  "dist/server/chunks/chunk-BYxqvYEl.js"() {
    "use strict";
    relative = "OTHxU";
    letters = "qhwkn";
    s20 = {
      relative,
      letters
    };
  }
});

// dist/server/chunks/chunk-DsLj9Oyk.js
var paper, paperTitle, paperText, s21;
var init_chunk_DsLj9Oyk = __esm({
  "dist/server/chunks/chunk-DsLj9Oyk.js"() {
    "use strict";
    paper = "_3yAXu";
    paperTitle = "-g5nH";
    paperText = "pAWV7";
    s21 = {
      paper,
      paperTitle,
      paperText
    };
  }
});

// dist/server/chunks/chunk-BFJ-iPUC.js
var section2, flex2, spinning, s22;
var init_chunk_BFJ_iPUC = __esm({
  "dist/server/chunks/chunk-BFJ-iPUC.js"() {
    "use strict";
    section2 = "-n3t4";
    flex2 = "rccf8";
    spinning = "WOfw0";
    s22 = {
      section: section2,
      flex: flex2,
      spinning
    };
  }
});

// dist/server/chunks/chunk-BD_HY7OV.js
var card, description3, cardTop, s23;
var init_chunk_BD_HY7OV = __esm({
  "dist/server/chunks/chunk-BD_HY7OV.js"() {
    "use strict";
    card = "Uem9L";
    description3 = "LZM4m";
    cardTop = "JNlkJ";
    s23 = {
      card,
      description: description3,
      cardTop
    };
  }
});

// dist/server/chunks/chunk-Bn7F6R0K.js
var cards, s24;
var init_chunk_Bn7F6R0K = __esm({
  "dist/server/chunks/chunk-Bn7F6R0K.js"() {
    "use strict";
    cards = "qpwS-";
    s24 = {
      cards
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react195, LayoutGroupContext2;
var init_LayoutGroupContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs"() {
    "use client";
    import_react195 = __toESM(require_react(), 1);
    LayoutGroupContext2 = (0, import_react195.createContext)({});
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-constant.mjs
function useConstant2(init) {
  const ref = (0, import_react196.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}
var import_react196;
var init_use_constant2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-constant.mjs"() {
    import_react196 = __toESM(require_react(), 1);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser4;
var init_is_browser2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-browser.mjs"() {
    isBrowser4 = typeof window !== "undefined";
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react197, useIsomorphicLayoutEffect2;
var init_use_isomorphic_effect3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"() {
    import_react197 = __toESM(require_react(), 1);
    init_is_browser2();
    useIsomorphicLayoutEffect2 = isBrowser4 ? import_react197.useLayoutEffect : import_react197.useEffect;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react198, PresenceContext2;
var init_PresenceContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/PresenceContext.mjs"() {
    "use client";
    import_react198 = __toESM(require_react(), 1);
    PresenceContext2 = /* @__PURE__ */ (0, import_react198.createContext)(null);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react199, MotionConfigContext2;
var init_MotionConfigContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs"() {
    "use client";
    import_react199 = __toESM(require_react(), 1);
    MotionConfigContext2 = (0, import_react199.createContext)({
      transformPagePoint: (p13) => p13,
      isStatic: false,
      reducedMotion: "never"
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence2(subscribe = true) {
  const context = (0, import_react200.useContext)(PresenceContext2);
  if (context === null)
    return [true, null];
  const { isPresent, onExitComplete, register } = context;
  const id5 = (0, import_react200.useId)();
  (0, import_react200.useEffect)(() => {
    if (subscribe) {
      return register(id5);
    }
  }, [subscribe]);
  const safeToRemove = (0, import_react200.useCallback)(() => subscribe && onExitComplete && onExitComplete(id5), [id5, onExitComplete, subscribe]);
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}
var import_react200;
var init_use_presence2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs"() {
    import_react200 = __toESM(require_react(), 1);
    init_PresenceContext2();
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/array.mjs
function addUniqueItem2(arr, item3) {
  if (arr.indexOf(item3) === -1)
    arr.push(item3);
}
function removeItem2(arr, item3) {
  const index = arr.indexOf(item3);
  if (index > -1)
    arr.splice(index, 1);
}
var init_array2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/array.mjs"() {
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/errors.mjs
var warning2, invariant2;
var init_errors2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/errors.mjs"() {
    warning2 = () => {
    };
    invariant2 = () => {
    };
    if (false) {
      warning2 = (check2, message) => {
        if (!check2 && typeof console !== "undefined") {
          console.warn(message);
        }
      };
      invariant2 = (check2, message) => {
        if (!check2) {
          throw new Error(message);
        }
      };
    }
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/global-config.mjs
var MotionGlobalConfig2;
var init_global_config2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/global-config.mjs"() {
    MotionGlobalConfig2 = {
      skipAnimations: false,
      useManualTiming: false
    };
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/memo.mjs
// @__NO_SIDE_EFFECTS__
function memo2(callback) {
  let result;
  return () => {
    if (result === void 0)
      result = callback();
    return result;
  };
}
var init_memo3 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/memo.mjs"() {
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/noop.mjs
var noop2;
var init_noop2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/noop.mjs"() {
    noop2 = /* @__NO_SIDE_EFFECTS__ */ (any) => any;
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/progress.mjs
var progress2;
var init_progress2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/progress.mjs"() {
    progress2 = /* @__NO_SIDE_EFFECTS__ */ (from, to, value) => {
      const toFromDifference = to - from;
      return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
    };
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/subscription-manager.mjs
var SubscriptionManager2;
var init_subscription_manager2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/subscription-manager.mjs"() {
    init_array2();
    SubscriptionManager2 = class {
      constructor() {
        this.subscriptions = [];
      }
      add(handler2) {
        addUniqueItem2(this.subscriptions, handler2);
        return () => removeItem2(this.subscriptions, handler2);
      }
      notify(a12, b4, c13) {
        const numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions)
          return;
        if (numSubscriptions === 1) {
          this.subscriptions[0](a12, b4, c13);
        } else {
          for (let i11 = 0; i11 < numSubscriptions; i11++) {
            const handler2 = this.subscriptions[i11];
            handler2 && handler2(a12, b4, c13);
          }
        }
      }
      getSize() {
        return this.subscriptions.length;
      }
      clear() {
        this.subscriptions.length = 0;
      }
    };
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/time-conversion.mjs
var secondsToMilliseconds2, millisecondsToSeconds2;
var init_time_conversion2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/time-conversion.mjs"() {
    secondsToMilliseconds2 = /* @__NO_SIDE_EFFECTS__ */ (seconds) => seconds * 1e3;
    millisecondsToSeconds2 = /* @__NO_SIDE_EFFECTS__ */ (milliseconds) => milliseconds / 1e3;
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/velocity-per-second.mjs
function velocityPerSecond2(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}
var init_velocity_per_second2 = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/velocity-per-second.mjs"() {
  }
});

// node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/index.mjs
var init_es = __esm({
  "node_modules/.pnpm/motion-utils@12.7.2/node_modules/motion-utils/dist/es/index.mjs"() {
    init_array2();
    init_errors2();
    init_global_config2();
    init_memo3();
    init_noop2();
    init_progress2();
    init_subscription_manager2();
    init_time_conversion2();
    init_velocity_per_second2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs
var supportsScrollTimeline2;
var init_scroll_timeline2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs"() {
    init_es();
    supportsScrollTimeline2 = /* @__PURE__ */ memo2(() => window.ScrollTimeline !== void 0);
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs
var GroupAnimation2;
var init_GroupAnimation2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs"() {
    init_scroll_timeline2();
    GroupAnimation2 = class {
      constructor(animations3) {
        this.stop = () => this.runAll("stop");
        this.animations = animations3.filter(Boolean);
      }
      get finished() {
        return Promise.all(this.animations.map((animation) => animation.finished));
      }
      /**
       * TODO: Filter out cancelled or stopped animations before returning
       */
      getAll(propName) {
        return this.animations[0][propName];
      }
      setAll(propName, newValue) {
        for (let i11 = 0; i11 < this.animations.length; i11++) {
          this.animations[i11][propName] = newValue;
        }
      }
      attachTimeline(timeline, fallback) {
        const subscriptions = this.animations.map((animation) => {
          if (supportsScrollTimeline2() && animation.attachTimeline) {
            return animation.attachTimeline(timeline);
          } else if (typeof fallback === "function") {
            return fallback(animation);
          }
        });
        return () => {
          subscriptions.forEach((cancel, i11) => {
            cancel && cancel();
            this.animations[i11].stop();
          });
        };
      }
      get time() {
        return this.getAll("time");
      }
      set time(time3) {
        this.setAll("time", time3);
      }
      get speed() {
        return this.getAll("speed");
      }
      set speed(speed) {
        this.setAll("speed", speed);
      }
      get startTime() {
        return this.getAll("startTime");
      }
      get duration() {
        let max = 0;
        for (let i11 = 0; i11 < this.animations.length; i11++) {
          max = Math.max(max, this.animations[i11].duration);
        }
        return max;
      }
      runAll(methodName) {
        this.animations.forEach((controls) => controls[methodName]());
      }
      flatten() {
        this.runAll("flatten");
      }
      play() {
        this.runAll("play");
      }
      pause() {
        this.runAll("pause");
      }
      cancel() {
        this.runAll("cancel");
      }
      complete() {
        this.runAll("complete");
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs
var GroupAnimationWithThen2;
var init_GroupAnimationWithThen2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs"() {
    init_GroupAnimation2();
    GroupAnimationWithThen2 = class extends GroupAnimation2 {
      then(onResolve, _onReject) {
        return this.finished.finally(onResolve).then(() => {
        });
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/stats/animation-count.mjs
var activeAnimations2;
var init_animation_count2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/stats/animation-count.mjs"() {
    activeAnimations2 = {
      layout: 0,
      mainThread: 0,
      waapi: 0
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/stats/buffer.mjs
var statsBuffer2;
var init_buffer2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/stats/buffer.mjs"() {
    statsBuffer2 = {
      value: null,
      addProjectionMetrics: null
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs
var isBezierDefinition2;
var init_is_bezier_definition2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs"() {
    isBezierDefinition2 = (easing) => Array.isArray(easing) && typeof easing[0] === "number";
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/flags.mjs
var supportsFlags2;
var init_flags2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/flags.mjs"() {
    supportsFlags2 = {};
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/memo.mjs
function memoSupports2(callback, supportsFlag) {
  const memoized = memo2(callback);
  return () => supportsFlags2[supportsFlag] ?? memoized();
}
var init_memo4 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/memo.mjs"() {
    init_es();
    init_flags2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs
var supportsLinearEasing2;
var init_linear_easing2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs"() {
    init_memo4();
    supportsLinearEasing2 = /* @__PURE__ */ memoSupports2(() => {
      try {
        document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
      } catch (e12) {
        return false;
      }
      return true;
    }, "linearEasing");
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs
var generateLinearEasing2;
var init_linear2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs"() {
    generateLinearEasing2 = (easing, duration, resolution = 10) => {
      let points = "";
      const numPoints = Math.max(Math.round(duration / resolution), 2);
      for (let i11 = 0; i11 < numPoints; i11++) {
        points += easing(i11 / (numPoints - 1)) + ", ";
      }
      return `linear(${points.substring(0, points.length - 2)})`;
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs
var cubicBezierAsString2;
var init_cubic_bezier3 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs"() {
    cubicBezierAsString2 = ([a12, b4, c13, d6]) => `cubic-bezier(${a12}, ${b4}, ${c13}, ${d6})`;
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs
var supportedWaapiEasing2;
var init_supported2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs"() {
    init_cubic_bezier3();
    supportedWaapiEasing2 = {
      linear: "linear",
      ease: "ease",
      easeIn: "ease-in",
      easeOut: "ease-out",
      easeInOut: "ease-in-out",
      circIn: /* @__PURE__ */ cubicBezierAsString2([0, 0.65, 0.55, 1]),
      circOut: /* @__PURE__ */ cubicBezierAsString2([0.55, 0, 1, 0.45]),
      backIn: /* @__PURE__ */ cubicBezierAsString2([0.31, 0.01, 0.66, -0.59]),
      backOut: /* @__PURE__ */ cubicBezierAsString2([0.33, 1.53, 0.69, 0.99])
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs
function mapEasingToNativeEasing2(easing, duration) {
  if (!easing) {
    return void 0;
  } else if (typeof easing === "function" && supportsLinearEasing2()) {
    return generateLinearEasing2(easing, duration);
  } else if (isBezierDefinition2(easing)) {
    return cubicBezierAsString2(easing);
  } else if (Array.isArray(easing)) {
    return easing.map((segmentEasing) => mapEasingToNativeEasing2(segmentEasing, duration) || supportedWaapiEasing2.easeOut);
  } else {
    return supportedWaapiEasing2[easing];
  }
}
var init_map_easing2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs"() {
    init_is_bezier_definition2();
    init_linear_easing2();
    init_linear2();
    init_cubic_bezier3();
    init_supported2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs
function startWaapiAnimation2(element, valueName, keyframes3, { delay: delay3 = 0, duration = 300, repeat = 0, repeatType = "loop", ease: ease3 = "easeInOut", times } = {}, pseudoElement = void 0) {
  const keyframeOptions = {
    [valueName]: keyframes3
  };
  if (times)
    keyframeOptions.offset = times;
  const easing = mapEasingToNativeEasing2(ease3, duration);
  if (Array.isArray(easing))
    keyframeOptions.easing = easing;
  if (statsBuffer2.value) {
    activeAnimations2.waapi++;
  }
  const animation = element.animate(keyframeOptions, {
    delay: delay3,
    duration,
    easing: !Array.isArray(easing) ? easing : "linear",
    fill: "both",
    iterations: repeat + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal",
    pseudoElement
  });
  if (statsBuffer2.value) {
    animation.finished.finally(() => {
      activeAnimations2.waapi--;
    });
  }
  return animation;
}
var init_start_waapi_animation2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs"() {
    init_animation_count2();
    init_buffer2();
    init_map_easing2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs
function isGenerator2(type) {
  return typeof type === "function" && "applyToOptions" in type;
}
var init_is_generator2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs"() {
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs
function getValueTransition2(transition, key) {
  return transition?.[key] ?? transition?.["default"] ?? transition;
}
var init_get_value_transition2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs"() {
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs
function calcGeneratorDuration2(generator) {
  let duration = 0;
  const timeStep = 50;
  let state2 = generator.next(duration);
  while (!state2.done && duration < maxGeneratorDuration2) {
    duration += timeStep;
    state2 = generator.next(duration);
  }
  return duration >= maxGeneratorDuration2 ? Infinity : duration;
}
var maxGeneratorDuration2;
var init_calc_duration2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs"() {
    maxGeneratorDuration2 = 2e4;
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs
function createGeneratorEasing2(options, scale3 = 100, createGenerator) {
  const generator = createGenerator({ ...options, keyframes: [0, scale3] });
  const duration = Math.min(calcGeneratorDuration2(generator), maxGeneratorDuration2);
  return {
    type: "keyframes",
    ease: (progress3) => {
      return generator.next(duration * progress3).value / scale3;
    },
    duration: millisecondsToSeconds2(duration)
  };
}
var init_create_generator_easing2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs"() {
    init_es();
    init_calc_duration2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs
function isWaapiSupportedEasing2(easing) {
  return Boolean(typeof easing === "function" && supportsLinearEasing2() || !easing || typeof easing === "string" && (easing in supportedWaapiEasing2 || supportsLinearEasing2()) || isBezierDefinition2(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing2));
}
var init_is_supported2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs"() {
    init_is_bezier_definition2();
    init_linear_easing2();
    init_supported2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs
function attachTimeline2(animation, timeline) {
  animation.timeline = timeline;
  animation.onfinish = null;
}
var init_attach_timeline2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs"() {
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/order.mjs
var stepsOrder2;
var init_order2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/order.mjs"() {
    stepsOrder2 = [
      "read",
      // Read
      "resolveKeyframes",
      // Write/Read/Write/Read
      "update",
      // Compute
      "preRender",
      // Compute
      "render",
      // Write
      "postRender"
      // Compute
    ];
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/render-step.mjs
function createRenderStep2(runNextFrame, stepName) {
  let thisFrame = /* @__PURE__ */ new Set();
  let nextFrame = /* @__PURE__ */ new Set();
  let isProcessing = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  let latestFrameData = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  let numCalls = 0;
  function triggerCallback(callback) {
    if (toKeepAlive.has(callback)) {
      step.schedule(callback);
      runNextFrame();
    }
    numCalls++;
    callback(latestFrameData);
  }
  const step = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing;
      const queue = addToCurrentFrame ? thisFrame : nextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (!queue.has(callback))
        queue.add(callback);
      return callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      nextFrame.delete(callback);
      toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData3) => {
      latestFrameData = frameData3;
      if (isProcessing) {
        flushNextFrame = true;
        return;
      }
      isProcessing = true;
      [thisFrame, nextFrame] = [nextFrame, thisFrame];
      thisFrame.forEach(triggerCallback);
      if (stepName && statsBuffer2.value) {
        statsBuffer2.value.frameloop[stepName].push(numCalls);
      }
      numCalls = 0;
      thisFrame.clear();
      isProcessing = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData3);
      }
    }
  };
  return step;
}
var init_render_step2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/render-step.mjs"() {
    init_buffer2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/batcher.mjs
function createRenderBatcher2(scheduleNextBatch, allowKeepAlive) {
  let runNextFrame = false;
  let useDefaultElapsed = true;
  const state2 = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  const flagRunNextFrame = () => runNextFrame = true;
  const steps = stepsOrder2.reduce((acc, key) => {
    acc[key] = createRenderStep2(flagRunNextFrame, allowKeepAlive ? key : void 0);
    return acc;
  }, {});
  const { read, resolveKeyframes, update, preRender, render, postRender } = steps;
  const processBatch = () => {
    const timestamp = MotionGlobalConfig2.useManualTiming ? state2.timestamp : performance.now();
    runNextFrame = false;
    if (!MotionGlobalConfig2.useManualTiming) {
      state2.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp - state2.timestamp, maxElapsed3), 1);
    }
    state2.timestamp = timestamp;
    state2.isProcessing = true;
    read.process(state2);
    resolveKeyframes.process(state2);
    update.process(state2);
    preRender.process(state2);
    render.process(state2);
    postRender.process(state2);
    state2.isProcessing = false;
    if (runNextFrame && allowKeepAlive) {
      useDefaultElapsed = false;
      scheduleNextBatch(processBatch);
    }
  };
  const wake = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!state2.isProcessing) {
      scheduleNextBatch(processBatch);
    }
  };
  const schedule = stepsOrder2.reduce((acc, key) => {
    const step = steps[key];
    acc[key] = (process2, keepAlive = false, immediate = false) => {
      if (!runNextFrame)
        wake();
      return step.schedule(process2, keepAlive, immediate);
    };
    return acc;
  }, {});
  const cancel = (process2) => {
    for (let i11 = 0; i11 < stepsOrder2.length; i11++) {
      steps[stepsOrder2[i11]].cancel(process2);
    }
  };
  return { schedule, cancel, state: state2, steps };
}
var maxElapsed3;
var init_batcher2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/batcher.mjs"() {
    init_es();
    init_order2();
    init_render_step2();
    maxElapsed3 = 40;
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/microtask.mjs
var microtask2, cancelMicrotask2;
var init_microtask2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/microtask.mjs"() {
    init_batcher2();
    ({ schedule: microtask2, cancel: cancelMicrotask2 } = /* @__PURE__ */ createRenderBatcher2(queueMicrotask, false));
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/frame.mjs
var frame2, cancelFrame2, frameData2, frameSteps2;
var init_frame2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/frame.mjs"() {
    init_es();
    init_batcher2();
    ({ schedule: frame2, cancel: cancelFrame2, state: frameData2, steps: frameSteps2 } = /* @__PURE__ */ createRenderBatcher2(typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : noop2, true));
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/sync-time.mjs
function clearTime2() {
  now2 = void 0;
}
var now2, time2;
var init_sync_time2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/frameloop/sync-time.mjs"() {
    init_es();
    init_frame2();
    time2 = {
      now: () => {
        if (now2 === void 0) {
          time2.set(frameData2.isProcessing || MotionGlobalConfig2.useManualTiming ? frameData2.timestamp : performance.now());
        }
        return now2;
      },
      set: (newTime) => {
        now2 = newTime;
        queueMicrotask(clearTime2);
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs
function isDragActive2() {
  return isDragging2.x || isDragging2.y;
}
var isDragging2;
var init_is_active2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs"() {
    isDragging2 = {
      x: false,
      y: false
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs
function setDragLock2(axis) {
  if (axis === "x" || axis === "y") {
    if (isDragging2[axis]) {
      return null;
    } else {
      isDragging2[axis] = true;
      return () => {
        isDragging2[axis] = false;
      };
    }
  } else {
    if (isDragging2.x || isDragging2.y) {
      return null;
    } else {
      isDragging2.x = isDragging2.y = true;
      return () => {
        isDragging2.x = isDragging2.y = false;
      };
    }
  }
}
var init_set_active2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs"() {
    init_is_active2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs
function resolveElements2(elementOrSelector, scope, selectorCache) {
  if (elementOrSelector instanceof EventTarget) {
    return [elementOrSelector];
  } else if (typeof elementOrSelector === "string") {
    let root5 = document;
    if (scope) {
      root5 = scope.current;
    }
    const elements = selectorCache?.[elementOrSelector] ?? root5.querySelectorAll(elementOrSelector);
    return elements ? Array.from(elements) : [];
  }
  return Array.from(elementOrSelector);
}
var init_resolve_elements2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs"() {
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/setup.mjs
function setupGesture2(elementOrSelector, options) {
  const elements = resolveElements2(elementOrSelector);
  const gestureAbortController = new AbortController();
  const eventOptions = {
    passive: true,
    ...options,
    signal: gestureAbortController.signal
  };
  const cancel = () => gestureAbortController.abort();
  return [elements, eventOptions, cancel];
}
var init_setup2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/setup.mjs"() {
    init_resolve_elements2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/hover.mjs
function isValidHover2(event) {
  return !(event.pointerType === "touch" || isDragActive2());
}
function hover2(elementOrSelector, onHoverStart, options = {}) {
  const [elements, eventOptions, cancel] = setupGesture2(elementOrSelector, options);
  const onPointerEnter = (enterEvent) => {
    if (!isValidHover2(enterEvent))
      return;
    const { target } = enterEvent;
    const onHoverEnd = onHoverStart(target, enterEvent);
    if (typeof onHoverEnd !== "function" || !target)
      return;
    const onPointerLeave = (leaveEvent) => {
      if (!isValidHover2(leaveEvent))
        return;
      onHoverEnd(leaveEvent);
      target.removeEventListener("pointerleave", onPointerLeave);
    };
    target.addEventListener("pointerleave", onPointerLeave, eventOptions);
  };
  elements.forEach((element) => {
    element.addEventListener("pointerenter", onPointerEnter, eventOptions);
  });
  return cancel;
}
var init_hover3 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/hover.mjs"() {
    init_is_active2();
    init_setup2();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild2;
var init_is_node_or_child2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs"() {
    isNodeOrChild2 = (parent, child) => {
      if (!child) {
        return false;
      } else if (parent === child) {
        return true;
      } else {
        return isNodeOrChild2(parent, child.parentElement);
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs
var isPrimaryPointer2;
var init_is_primary_pointer2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs"() {
    isPrimaryPointer2 = (event) => {
      if (event.pointerType === "mouse") {
        return typeof event.button !== "number" || event.button <= 0;
      } else {
        return event.isPrimary !== false;
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs
function isElementKeyboardAccessible2(element) {
  return focusableElements2.has(element.tagName) || element.tabIndex !== -1;
}
var focusableElements2;
var init_is_keyboard_accessible2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs"() {
    focusableElements2 = /* @__PURE__ */ new Set([
      "BUTTON",
      "INPUT",
      "SELECT",
      "TEXTAREA",
      "A"
    ]);
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs
var isPressing2;
var init_state4 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs"() {
    isPressing2 = /* @__PURE__ */ new WeakSet();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs
function filterEvents2(callback) {
  return (event) => {
    if (event.key !== "Enter")
      return;
    callback(event);
  };
}
function firePointerEvent2(target, type) {
  target.dispatchEvent(new PointerEvent("pointer" + type, { isPrimary: true, bubbles: true }));
}
var enableKeyboardPress2;
var init_keyboard2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs"() {
    init_state4();
    enableKeyboardPress2 = (focusEvent, eventOptions) => {
      const element = focusEvent.currentTarget;
      if (!element)
        return;
      const handleKeydown = filterEvents2(() => {
        if (isPressing2.has(element))
          return;
        firePointerEvent2(element, "down");
        const handleKeyup = filterEvents2(() => {
          firePointerEvent2(element, "up");
        });
        const handleBlur = () => firePointerEvent2(element, "cancel");
        element.addEventListener("keyup", handleKeyup, eventOptions);
        element.addEventListener("blur", handleBlur, eventOptions);
      });
      element.addEventListener("keydown", handleKeydown, eventOptions);
      element.addEventListener("blur", () => element.removeEventListener("keydown", handleKeydown), eventOptions);
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/index.mjs
function isValidPressEvent2(event) {
  return isPrimaryPointer2(event) && !isDragActive2();
}
function press2(targetOrSelector, onPressStart, options = {}) {
  const [targets, eventOptions, cancelEvents] = setupGesture2(targetOrSelector, options);
  const startPress = (startEvent) => {
    const target = startEvent.currentTarget;
    if (!isValidPressEvent2(startEvent) || isPressing2.has(target))
      return;
    isPressing2.add(target);
    const onPressEnd = onPressStart(target, startEvent);
    const onPointerEnd = (endEvent, success) => {
      window.removeEventListener("pointerup", onPointerUp);
      window.removeEventListener("pointercancel", onPointerCancel);
      if (!isValidPressEvent2(endEvent) || !isPressing2.has(target)) {
        return;
      }
      isPressing2.delete(target);
      if (typeof onPressEnd === "function") {
        onPressEnd(endEvent, { success });
      }
    };
    const onPointerUp = (upEvent) => {
      onPointerEnd(upEvent, target === window || target === document || options.useGlobalTarget || isNodeOrChild2(target, upEvent.target));
    };
    const onPointerCancel = (cancelEvent) => {
      onPointerEnd(cancelEvent, false);
    };
    window.addEventListener("pointerup", onPointerUp, eventOptions);
    window.addEventListener("pointercancel", onPointerCancel, eventOptions);
  };
  targets.forEach((target) => {
    const pointerDownTarget = options.useGlobalTarget ? window : target;
    pointerDownTarget.addEventListener("pointerdown", startPress, eventOptions);
    if (target instanceof HTMLElement) {
      target.addEventListener("focus", (event) => enableKeyboardPress2(event, eventOptions));
      if (!isElementKeyboardAccessible2(target) && !target.hasAttribute("tabindex")) {
        target.tabIndex = 0;
      }
    }
  });
  return cancelEvents;
}
var init_press3 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/gestures/press/index.mjs"() {
    init_is_active2();
    init_is_node_or_child2();
    init_is_primary_pointer2();
    init_setup2();
    init_is_keyboard_accessible2();
    init_keyboard2();
    init_state4();
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/value/index.mjs
function motionValue2(init, options) {
  return new MotionValue2(init, options);
}
var MAX_VELOCITY_DELTA2, isFloat2, collectMotionValues2, MotionValue2;
var init_value2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/value/index.mjs"() {
    init_es();
    init_sync_time2();
    init_frame2();
    MAX_VELOCITY_DELTA2 = 30;
    isFloat2 = (value) => {
      return !isNaN(parseFloat(value));
    };
    collectMotionValues2 = {
      current: void 0
    };
    MotionValue2 = class {
      /**
       * @param init - The initiating value
       * @param config - Optional configuration options
       *
       * -  `transformer`: A function to transform incoming values with.
       */
      constructor(init, options = {}) {
        this.version = "12.7.4";
        this.canTrackVelocity = null;
        this.events = {};
        this.updateAndNotify = (v5, render = true) => {
          const currentTime = time2.now();
          if (this.updatedAt !== currentTime) {
            this.setPrevFrameValue();
          }
          this.prev = this.current;
          this.setCurrent(v5);
          if (this.current !== this.prev && this.events.change) {
            this.events.change.notify(this.current);
          }
          if (render && this.events.renderRequest) {
            this.events.renderRequest.notify(this.current);
          }
        };
        this.hasAnimated = false;
        this.setCurrent(init);
        this.owner = options.owner;
      }
      setCurrent(current) {
        this.current = current;
        this.updatedAt = time2.now();
        if (this.canTrackVelocity === null && current !== void 0) {
          this.canTrackVelocity = isFloat2(this.current);
        }
      }
      setPrevFrameValue(prevFrameValue = this.current) {
        this.prevFrameValue = prevFrameValue;
        this.prevUpdatedAt = this.updatedAt;
      }
      /**
       * Adds a function that will be notified when the `MotionValue` is updated.
       *
       * It returns a function that, when called, will cancel the subscription.
       *
       * When calling `onChange` inside a React component, it should be wrapped with the
       * `useEffect` hook. As it returns an unsubscribe function, this should be returned
       * from the `useEffect` function to ensure you don't add duplicate subscribers..
       *
       * ```jsx
       * export const MyComponent = () => {
       *   const x = useMotionValue(0)
       *   const y = useMotionValue(0)
       *   const opacity = useMotionValue(1)
       *
       *   useEffect(() => {
       *     function updateOpacity() {
       *       const maxXY = Math.max(x.get(), y.get())
       *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
       *       opacity.set(newOpacity)
       *     }
       *
       *     const unsubscribeX = x.on("change", updateOpacity)
       *     const unsubscribeY = y.on("change", updateOpacity)
       *
       *     return () => {
       *       unsubscribeX()
       *       unsubscribeY()
       *     }
       *   }, [])
       *
       *   return <motion.div style={{ x }} />
       * }
       * ```
       *
       * @param subscriber - A function that receives the latest value.
       * @returns A function that, when called, will cancel this subscription.
       *
       * @deprecated
       */
      onChange(subscription) {
        if (false) {
          warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on("change", callback).`);
        }
        return this.on("change", subscription);
      }
      on(eventName, callback) {
        if (!this.events[eventName]) {
          this.events[eventName] = new SubscriptionManager2();
        }
        const unsubscribe = this.events[eventName].add(callback);
        if (eventName === "change") {
          return () => {
            unsubscribe();
            frame2.read(() => {
              if (!this.events.change.getSize()) {
                this.stop();
              }
            });
          };
        }
        return unsubscribe;
      }
      clearListeners() {
        for (const eventManagers in this.events) {
          this.events[eventManagers].clear();
        }
      }
      /**
       * Attaches a passive effect to the `MotionValue`.
       */
      attach(passiveEffect, stopPassiveEffect) {
        this.passiveEffect = passiveEffect;
        this.stopPassiveEffect = stopPassiveEffect;
      }
      /**
       * Sets the state of the `MotionValue`.
       *
       * @remarks
       *
       * ```jsx
       * const x = useMotionValue(0)
       * x.set(10)
       * ```
       *
       * @param latest - Latest value to set.
       * @param render - Whether to notify render subscribers. Defaults to `true`
       *
       * @public
       */
      set(v5, render = true) {
        if (!render || !this.passiveEffect) {
          this.updateAndNotify(v5, render);
        } else {
          this.passiveEffect(v5, this.updateAndNotify);
        }
      }
      setWithVelocity(prev, current, delta) {
        this.set(current);
        this.prev = void 0;
        this.prevFrameValue = prev;
        this.prevUpdatedAt = this.updatedAt - delta;
      }
      /**
       * Set the state of the `MotionValue`, stopping any active animations,
       * effects, and resets velocity to `0`.
       */
      jump(v5, endAnimation = true) {
        this.updateAndNotify(v5);
        this.prev = v5;
        this.prevUpdatedAt = this.prevFrameValue = void 0;
        endAnimation && this.stop();
        if (this.stopPassiveEffect)
          this.stopPassiveEffect();
      }
      /**
       * Returns the latest state of `MotionValue`
       *
       * @returns - The latest state of `MotionValue`
       *
       * @public
       */
      get() {
        if (collectMotionValues2.current) {
          collectMotionValues2.current.push(this);
        }
        return this.current;
      }
      /**
       * @public
       */
      getPrevious() {
        return this.prev;
      }
      /**
       * Returns the latest velocity of `MotionValue`
       *
       * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
       *
       * @public
       */
      getVelocity() {
        const currentTime = time2.now();
        if (!this.canTrackVelocity || this.prevFrameValue === void 0 || currentTime - this.updatedAt > MAX_VELOCITY_DELTA2) {
          return 0;
        }
        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA2);
        return velocityPerSecond2(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);
      }
      /**
       * Registers a new animation to control this `MotionValue`. Only one
       * animation can drive a `MotionValue` at one time.
       *
       * ```jsx
       * value.start()
       * ```
       *
       * @param animation - A function that starts the provided animation
       */
      start(startAnimation) {
        this.stop();
        return new Promise((resolve) => {
          this.hasAnimated = true;
          this.animation = startAnimation(resolve);
          if (this.events.animationStart) {
            this.events.animationStart.notify();
          }
        }).then(() => {
          if (this.events.animationComplete) {
            this.events.animationComplete.notify();
          }
          this.clearAnimation();
        });
      }
      /**
       * Stop the currently active animation.
       *
       * @public
       */
      stop() {
        if (this.animation) {
          this.animation.stop();
          if (this.events.animationCancel) {
            this.events.animationCancel.notify();
          }
        }
        this.clearAnimation();
      }
      /**
       * Returns `true` if this value is currently animating.
       *
       * @public
       */
      isAnimating() {
        return !!this.animation;
      }
      clearAnimation() {
        delete this.animation;
      }
      /**
       * Destroy and clean up subscribers to this `MotionValue`.
       *
       * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
       * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
       * created a `MotionValue` via the `motionValue` function.
       *
       * @public
       */
      destroy() {
        this.clearListeners();
        this.stop();
        if (this.stopPassiveEffect) {
          this.stopPassiveEffect();
        }
      }
    };
  }
});

// node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/index.mjs
var init_es2 = __esm({
  "node_modules/.pnpm/motion-dom@12.7.4/node_modules/motion-dom/dist/es/index.mjs"() {
    init_GroupAnimationWithThen2();
    init_get_value_transition2();
    init_calc_duration2();
    init_create_generator_easing2();
    init_is_generator2();
    init_is_supported2();
    init_start_waapi_animation2();
    init_attach_timeline2();
    init_linear2();
    init_microtask2();
    init_sync_time2();
    init_set_active2();
    init_hover3();
    init_press3();
    init_is_primary_pointer2();
    init_animation_count2();
    init_buffer2();
    init_is_bezier_definition2();
    init_linear_easing2();
    init_value2();
    init_frame2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react201, LazyContext2;
var init_LazyContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/LazyContext.mjs"() {
    "use client";
    import_react201 = __toESM(require_react(), 1);
    LazyContext2 = (0, import_react201.createContext)({ strict: false });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var featureProps2, featureDefinitions2;
var init_definitions2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/definitions.mjs"() {
    featureProps2 = {
      animation: [
        "animate",
        "variants",
        "whileHover",
        "whileTap",
        "exit",
        "whileInView",
        "whileFocus",
        "whileDrag"
      ],
      exit: ["exit"],
      drag: ["drag", "dragControls"],
      focus: ["whileFocus"],
      hover: ["whileHover", "onHoverStart", "onHoverEnd"],
      tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
      pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
      inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
      layout: ["layout", "layoutId"]
    };
    featureDefinitions2 = {};
    for (const key in featureProps2) {
      featureDefinitions2[key] = {
        isEnabled: (props) => featureProps2[key].some((name2) => !!props[name2])
      };
    }
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/load-features.mjs
function loadFeatures2(features) {
  for (const key in features) {
    featureDefinitions2[key] = {
      ...featureDefinitions2[key],
      ...features[key]
    };
  }
}
var init_load_features2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/load-features.mjs"() {
    init_definitions2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
function isValidMotionProp2(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || key.startsWith("onLayout") || validMotionProps2.has(key);
}
var validMotionProps2;
var init_valid_prop2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs"() {
    validMotionProps2 = /* @__PURE__ */ new Set([
      "animate",
      "exit",
      "variants",
      "initial",
      "style",
      "values",
      "variants",
      "transition",
      "transformTemplate",
      "custom",
      "inherit",
      "onBeforeLayoutMeasure",
      "onAnimationStart",
      "onAnimationComplete",
      "onUpdate",
      "onDragStart",
      "onDrag",
      "onDragEnd",
      "onMeasureDragConstraints",
      "onDirectionLock",
      "onDragTransitionEnd",
      "_dragX",
      "_dragY",
      "onHoverStart",
      "onHoverEnd",
      "onViewportEnter",
      "onViewportLeave",
      "globalTapTarget",
      "ignoreStrict",
      "viewport"
    ]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
function loadExternalIsValidProp2(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward2 = (key) => key.startsWith("on") ? !isValidMotionProp2(key) : isValidProp(key);
}
function filterProps3(props, isDom, forwardMotionProps) {
  const filteredProps = {};
  for (const key in props) {
    if (key === "values" && typeof props.values === "object")
      continue;
    if (shouldForward2(key) || forwardMotionProps === true && isValidMotionProp2(key) || !isDom && !isValidMotionProp2(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}
var shouldForward2;
var init_filter_props3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs"() {
    init_valid_prop2();
    shouldForward2 = (key) => !isValidMotionProp2(key);
    try {
      loadExternalIsValidProp2(__require("@emotion/is-prop-valid").default);
    } catch {
    }
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs
function createDOMMotionComponentProxy2(componentFactory) {
  if (typeof Proxy === "undefined") {
    return componentFactory;
  }
  const componentCache = /* @__PURE__ */ new Map();
  const deprecatedFactoryFunction = (...args) => {
    if (false) {
      warnOnce(false, "motion() is deprecated. Use motion.create() instead.");
    }
    return componentFactory(...args);
  };
  return new Proxy(deprecatedFactoryFunction, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => {
      if (key === "create")
        return componentFactory;
      if (!componentCache.has(key)) {
        componentCache.set(key, componentFactory(key));
      }
      return componentCache.get(key);
    }
  });
}
var init_create_proxy2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react202, MotionContext2;
var init_MotionContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs"() {
    "use client";
    import_react202 = __toESM(require_react(), 1);
    MotionContext2 = /* @__PURE__ */ (0, import_react202.createContext)({});
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls2(v5) {
  return v5 !== null && typeof v5 === "object" && typeof v5.start === "function";
}
var init_is_animation_controls2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs
function isVariantLabel2(v5) {
  return typeof v5 === "string" || Array.isArray(v5);
}
var init_is_variant_label2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs
var variantPriorityOrder2, variantProps2;
var init_variant_props2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs"() {
    variantPriorityOrder2 = [
      "animate",
      "whileInView",
      "whileFocus",
      "whileHover",
      "whileTap",
      "whileDrag",
      "exit"
    ];
    variantProps2 = ["initial", ...variantPriorityOrder2];
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs
function isControllingVariants2(props) {
  return isAnimationControls2(props.animate) || variantProps2.some((name2) => isVariantLabel2(props[name2]));
}
function isVariantNode2(props) {
  return Boolean(isControllingVariants2(props) || props.variants);
}
var init_is_controlling_variants2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs"() {
    init_is_animation_controls2();
    init_is_variant_label2();
    init_variant_props2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants2(props, context) {
  if (isControllingVariants2(props)) {
    const { initial, animate } = props;
    return {
      initial: initial === false || isVariantLabel2(initial) ? initial : void 0,
      animate: isVariantLabel2(animate) ? animate : void 0
    };
  }
  return props.inherit !== false ? context : {};
}
var init_utils10 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs"() {
    init_is_controlling_variants2();
    init_is_variant_label2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext2(props) {
  const { initial, animate } = getCurrentTreeVariants2(props, (0, import_react203.useContext)(MotionContext2));
  return (0, import_react203.useMemo)(() => ({ initial, animate }), [variantLabelsAsDependency2(initial), variantLabelsAsDependency2(animate)]);
}
function variantLabelsAsDependency2(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}
var import_react203;
var init_create3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs"() {
    import_react203 = __toESM(require_react(), 1);
    init_MotionContext2();
    init_utils10();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs
var motionComponentSymbol2;
var init_symbol2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs"() {
    motionComponentSymbol2 = Symbol.for("motionComponentSymbol");
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject2(ref) {
  return ref && typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}
var init_is_ref_object2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef2(visualState, visualElement, externalRef) {
  return (0, import_react204.useCallback)(
    (instance) => {
      if (instance) {
        visualState.onMount && visualState.onMount(instance);
      }
      if (visualElement) {
        if (instance) {
          visualElement.mount(instance);
        } else {
          visualElement.unmount();
        }
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject2(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}
var import_react204;
var init_use_motion_ref2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs"() {
    import_react204 = __toESM(require_react(), 1);
    init_is_ref_object2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var camelToDash2;
var init_camel_to_dash2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs"() {
    camelToDash2 = (str) => str.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs
var optimizedAppearDataId2, optimizedAppearDataAttribute2;
var init_data_id2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs"() {
    init_camel_to_dash2();
    optimizedAppearDataId2 = "framerAppearId";
    optimizedAppearDataAttribute2 = "data-" + camelToDash2(optimizedAppearDataId2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react205, SwitchLayoutGroupContext2;
var init_SwitchLayoutGroupContext2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs"() {
    "use client";
    import_react205 = __toESM(require_react(), 1);
    SwitchLayoutGroupContext2 = (0, import_react205.createContext)({});
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement2(Component3, visualState, props, createVisualElement, ProjectionNodeConstructor) {
  const { visualElement: parent } = (0, import_react206.useContext)(MotionContext2);
  const lazyContext = (0, import_react206.useContext)(LazyContext2);
  const presenceContext = (0, import_react206.useContext)(PresenceContext2);
  const reducedMotionConfig = (0, import_react206.useContext)(MotionConfigContext2).reducedMotion;
  const visualElementRef = (0, import_react206.useRef)(null);
  createVisualElement = createVisualElement || lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component3, {
      visualState,
      parent,
      props,
      presenceContext,
      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,
      reducedMotionConfig
    });
  }
  const visualElement = visualElementRef.current;
  const initialLayoutGroupConfig = (0, import_react206.useContext)(SwitchLayoutGroupContext2);
  if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === "html" || visualElement.type === "svg")) {
    createProjectionNode3(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);
  }
  const isMounted = (0, import_react206.useRef)(false);
  (0, import_react206.useInsertionEffect)(() => {
    if (visualElement && isMounted.current) {
      visualElement.update(props, presenceContext);
    }
  });
  const optimisedAppearId = props[optimizedAppearDataAttribute2];
  const wantsHandoff = (0, import_react206.useRef)(Boolean(optimisedAppearId) && !window.MotionHandoffIsComplete?.(optimisedAppearId) && window.MotionHasOptimisedAnimation?.(optimisedAppearId));
  useIsomorphicLayoutEffect2(() => {
    if (!visualElement)
      return;
    isMounted.current = true;
    window.MotionIsMounted = true;
    visualElement.updateFeatures();
    microtask2.render(visualElement.render);
    if (wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
  });
  (0, import_react206.useEffect)(() => {
    if (!visualElement)
      return;
    if (!wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
    if (wantsHandoff.current) {
      queueMicrotask(() => {
        window.MotionHandoffMarkAsComplete?.(optimisedAppearId);
      });
      wantsHandoff.current = false;
    }
  });
  return visualElement;
}
function createProjectionNode3(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {
  const { layoutId, layout: layout3, drag: drag3, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade } = props;
  visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props["data-framer-portal-id"] ? void 0 : getClosestProjectingNode2(visualElement.parent));
  visualElement.projection.setOptions({
    layoutId,
    layout: layout3,
    alwaysMeasureLayout: Boolean(drag3) || dragConstraints && isRefObject2(dragConstraints),
    visualElement,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout3 === "string" ? layout3 : "both",
    initialPromotionConfig,
    crossfade: layoutCrossfade,
    layoutScroll,
    layoutRoot
  });
}
function getClosestProjectingNode2(visualElement) {
  if (!visualElement)
    return void 0;
  return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode2(visualElement.parent);
}
var import_react206;
var init_use_visual_element2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs"() {
    init_es2();
    import_react206 = __toESM(require_react(), 1);
    init_data_id2();
    init_LazyContext2();
    init_MotionConfigContext2();
    init_MotionContext2();
    init_PresenceContext2();
    init_SwitchLayoutGroupContext2();
    init_is_ref_object2();
    init_use_isomorphic_effect3();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/index.mjs
function createRendererMotionComponent2({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component: Component3 }) {
  preloadedFeatures && loadFeatures2(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    let MeasureLayout3;
    const configAndProps = {
      ...(0, import_react207.useContext)(MotionConfigContext2),
      ...props,
      layoutId: useLayoutId2(props)
    };
    const { isStatic } = configAndProps;
    const context = useCreateMotionContext2(props);
    const visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser4) {
      useStrictMode2(configAndProps, preloadedFeatures);
      const layoutProjection = getProjectionFunctionality2(configAndProps);
      MeasureLayout3 = layoutProjection.MeasureLayout;
      context.visualElement = useVisualElement2(Component3, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);
    }
    return (0, import_jsx_runtime132.jsxs)(MotionContext2.Provider, { value: context, children: [MeasureLayout3 && context.visualElement ? (0, import_jsx_runtime132.jsx)(MeasureLayout3, { visualElement: context.visualElement, ...configAndProps }) : null, useRender(Component3, props, useMotionRef2(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] });
  }
  MotionComponent.displayName = `motion.${typeof Component3 === "string" ? Component3 : `create(${Component3.displayName ?? Component3.name ?? ""})`}`;
  const ForwardRefMotionComponent = (0, import_react207.forwardRef)(MotionComponent);
  ForwardRefMotionComponent[motionComponentSymbol2] = Component3;
  return ForwardRefMotionComponent;
}
function useLayoutId2({ layoutId }) {
  const layoutGroupId = (0, import_react207.useContext)(LayoutGroupContext2).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}
function useStrictMode2(configAndProps, preloadedFeatures) {
  const isStrict = (0, import_react207.useContext)(LazyContext2).strict;
  if (false) {
    const strictMessage = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    configAndProps.ignoreStrict ? warning2(false, strictMessage) : invariant2(false, strictMessage);
  }
}
function getProjectionFunctionality2(props) {
  const { drag: drag3, layout: layout3 } = featureDefinitions2;
  if (!drag3 && !layout3)
    return {};
  const combined = { ...drag3, ...layout3 };
  return {
    MeasureLayout: drag3?.isEnabled(props) || layout3?.isEnabled(props) ? combined.MeasureLayout : void 0,
    ProjectionNode: combined.ProjectionNode
  };
}
var import_jsx_runtime132, import_react207;
var init_motion2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/index.mjs"() {
    "use client";
    import_jsx_runtime132 = __toESM(require_jsx_runtime(), 1);
    import_react207 = __toESM(require_react(), 1);
    init_LayoutGroupContext2();
    init_LazyContext2();
    init_MotionConfigContext2();
    init_MotionContext2();
    init_create3();
    init_is_browser2();
    init_definitions2();
    init_load_features2();
    init_symbol2();
    init_use_motion_ref2();
    init_use_visual_element2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
var checkStringStartsWith2, isCSSVariableName2, startsAsVariableToken2, isCSSVariableToken2, singleCssVariableRegex2;
var init_is_css_variable2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs"() {
    checkStringStartsWith2 = (token) => (key) => typeof key === "string" && key.startsWith(token);
    isCSSVariableName2 = /* @__PURE__ */ checkStringStartsWith2("--");
    startsAsVariableToken2 = /* @__PURE__ */ checkStringStartsWith2("var(--");
    isCSSVariableToken2 = (value) => {
      const startsWithToken = startsAsVariableToken2(value);
      if (!startsWithToken)
        return false;
      return singleCssVariableRegex2.test(value.split("/*")[0].trim());
    };
    singleCssVariableRegex2 = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
function addScaleCorrector2(correctors) {
  for (const key in correctors) {
    scaleCorrectors2[key] = correctors[key];
    if (isCSSVariableName2(key)) {
      scaleCorrectors2[key].isCSSVariable = true;
    }
  }
}
var scaleCorrectors2;
var init_scale_correction2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs"() {
    init_is_css_variable2();
    scaleCorrectors2 = {};
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs
var transformPropOrder2, transformProps2;
var init_keys_transform2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs"() {
    transformPropOrder2 = [
      "transformPerspective",
      "x",
      "y",
      "z",
      "translateX",
      "translateY",
      "translateZ",
      "scale",
      "scaleX",
      "scaleY",
      "rotate",
      "rotateX",
      "rotateY",
      "rotateZ",
      "skew",
      "skewX",
      "skewY"
    ];
    transformProps2 = new Set(transformPropOrder2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue2(key, { layout: layout3, layoutId }) {
  return transformProps2.has(key) || key.startsWith("origin") || (layout3 || layoutId !== void 0) && (!!scaleCorrectors2[key] || key === "opacity");
}
var init_is_forced_motion_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs"() {
    init_scale_correction2();
    init_keys_transform2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue2;
var init_is_motion_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"() {
    isMotionValue2 = (value) => Boolean(value && value.getVelocity);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType2;
var init_get_as_type2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs"() {
    getValueAsType2 = (value, type) => {
      return type && typeof value === "number" ? type.transform(value) : value;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/clamp.mjs
var clamp3;
var init_clamp3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/clamp.mjs"() {
    clamp3 = (min, max, v5) => {
      if (v5 > max)
        return max;
      if (v5 < min)
        return min;
      return v5;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/numbers/index.mjs
var number2, alpha3, scale2;
var init_numbers2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/numbers/index.mjs"() {
    init_clamp3();
    number2 = {
      test: (v5) => typeof v5 === "number",
      parse: parseFloat,
      transform: (v5) => v5
    };
    alpha3 = {
      ...number2,
      transform: (v5) => clamp3(0, 1, v5)
    };
    scale2 = {
      ...number2,
      default: 1
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs
var createUnitType2, degrees2, percent2, px3, vh2, vw2, progressPercentage2;
var init_units2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs"() {
    createUnitType2 = (unit) => ({
      test: (v5) => typeof v5 === "string" && v5.endsWith(unit) && v5.split(" ").length === 1,
      parse: parseFloat,
      transform: (v5) => `${v5}${unit}`
    });
    degrees2 = /* @__PURE__ */ createUnitType2("deg");
    percent2 = /* @__PURE__ */ createUnitType2("%");
    px3 = /* @__PURE__ */ createUnitType2("px");
    vh2 = /* @__PURE__ */ createUnitType2("vh");
    vw2 = /* @__PURE__ */ createUnitType2("vw");
    progressPercentage2 = {
      ...percent2,
      parse: (v5) => percent2.parse(v5) / 100,
      transform: (v5) => percent2.transform(v5 * 100)
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs
var browserNumberValueTypes2;
var init_number_browser2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs"() {
    init_units2();
    browserNumberValueTypes2 = {
      // Border props
      borderWidth: px3,
      borderTopWidth: px3,
      borderRightWidth: px3,
      borderBottomWidth: px3,
      borderLeftWidth: px3,
      borderRadius: px3,
      radius: px3,
      borderTopLeftRadius: px3,
      borderTopRightRadius: px3,
      borderBottomRightRadius: px3,
      borderBottomLeftRadius: px3,
      // Positioning props
      width: px3,
      maxWidth: px3,
      height: px3,
      maxHeight: px3,
      top: px3,
      right: px3,
      bottom: px3,
      left: px3,
      // Spacing props
      padding: px3,
      paddingTop: px3,
      paddingRight: px3,
      paddingBottom: px3,
      paddingLeft: px3,
      margin: px3,
      marginTop: px3,
      marginRight: px3,
      marginBottom: px3,
      marginLeft: px3,
      // Misc
      backgroundPositionX: px3,
      backgroundPositionY: px3
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs
var transformValueTypes2;
var init_transform3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs"() {
    init_numbers2();
    init_units2();
    transformValueTypes2 = {
      rotate: degrees2,
      rotateX: degrees2,
      rotateY: degrees2,
      rotateZ: degrees2,
      scale: scale2,
      scaleX: scale2,
      scaleY: scale2,
      scaleZ: scale2,
      skew: degrees2,
      skewX: degrees2,
      skewY: degrees2,
      distance: px3,
      translateX: px3,
      translateY: px3,
      translateZ: px3,
      x: px3,
      y: px3,
      z: px3,
      perspective: px3,
      transformPerspective: px3,
      opacity: alpha3,
      originX: progressPercentage2,
      originY: progressPercentage2,
      originZ: px3
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int2;
var init_type_int2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs"() {
    init_numbers2();
    int2 = {
      ...number2,
      transform: Math.round
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes2;
var init_number3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs"() {
    init_numbers2();
    init_units2();
    init_number_browser2();
    init_transform3();
    init_type_int2();
    numberValueTypes2 = {
      ...browserNumberValueTypes2,
      ...transformValueTypes2,
      zIndex: int2,
      size: px3,
      // SVG
      fillOpacity: alpha3,
      strokeOpacity: alpha3,
      numOctaves: int2
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
function buildTransform2(latestValues, transform, transformTemplate) {
  let transformString = "";
  let transformIsDefault = true;
  for (let i11 = 0; i11 < numTransforms2; i11++) {
    const key = transformPropOrder2[i11];
    const value = latestValues[key];
    if (value === void 0)
      continue;
    let valueIsDefault = true;
    if (typeof value === "number") {
      valueIsDefault = value === (key.startsWith("scale") ? 1 : 0);
    } else {
      valueIsDefault = parseFloat(value) === 0;
    }
    if (!valueIsDefault || transformTemplate) {
      const valueAsType = getValueAsType2(value, numberValueTypes2[key]);
      if (!valueIsDefault) {
        transformIsDefault = false;
        const transformName = translateAlias2[key] || key;
        transformString += `${transformName}(${valueAsType}) `;
      }
      if (transformTemplate) {
        transform[key] = valueAsType;
      }
    }
  }
  transformString = transformString.trim();
  if (transformTemplate) {
    transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
  } else if (transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
var translateAlias2, numTransforms2;
var init_build_transform2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs"() {
    init_get_as_type2();
    init_number3();
    init_keys_transform2();
    translateAlias2 = {
      x: "translateX",
      y: "translateY",
      z: "translateZ",
      transformPerspective: "perspective"
    };
    numTransforms2 = transformPropOrder2.length;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles2(state2, latestValues, transformTemplate) {
  const { style, vars, transformOrigin } = state2;
  let hasTransform3 = false;
  let hasTransformOrigin = false;
  for (const key in latestValues) {
    const value = latestValues[key];
    if (transformProps2.has(key)) {
      hasTransform3 = true;
      continue;
    } else if (isCSSVariableName2(key)) {
      vars[key] = value;
      continue;
    } else {
      const valueAsType = getValueAsType2(value, numberValueTypes2[key]);
      if (key.startsWith("origin")) {
        hasTransformOrigin = true;
        transformOrigin[key] = valueAsType;
      } else {
        style[key] = valueAsType;
      }
    }
  }
  if (!latestValues.transform) {
    if (hasTransform3 || transformTemplate) {
      style.transform = buildTransform2(latestValues, state2.transform, transformTemplate);
    } else if (style.transform) {
      style.transform = "none";
    }
  }
  if (hasTransformOrigin) {
    const { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}
var init_build_styles2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"() {
    init_is_css_variable2();
    init_get_as_type2();
    init_number3();
    init_build_transform2();
    init_keys_transform2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState2;
var init_create_render_state3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs"() {
    createHtmlRenderState2 = () => ({
      style: {},
      transform: {},
      transformOrigin: {},
      vars: {}
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly2(target, source, props) {
  for (const key in source) {
    if (!isMotionValue2(source[key]) && !isForcedMotionValue2(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues2({ transformTemplate }, visualState) {
  return (0, import_react208.useMemo)(() => {
    const state2 = createHtmlRenderState2();
    buildHTMLStyles2(state2, visualState, transformTemplate);
    return Object.assign({}, state2.vars, state2.style);
  }, [visualState]);
}
function useStyle2(props, visualState) {
  const styleProp = props.style || {};
  const style = {};
  copyRawValuesOnly2(style, styleProp, props);
  Object.assign(style, useInitialMotionValues2(props, visualState));
  return style;
}
function useHTMLProps2(props, visualState) {
  const htmlProps = {};
  const style = useStyle2(props, visualState);
  if (props.drag && props.dragListener !== false) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`;
  }
  if (props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap)) {
    htmlProps.tabIndex = 0;
  }
  htmlProps.style = style;
  return htmlProps;
}
var import_react208;
var init_use_props4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/use-props.mjs"() {
    import_react208 = __toESM(require_react(), 1);
    init_is_forced_motion_value2();
    init_is_motion_value2();
    init_build_styles2();
    init_create_render_state3();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements2;
var init_lowercase_elements2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs"() {
    lowercaseSVGElements2 = [
      "animate",
      "circle",
      "defs",
      "desc",
      "ellipse",
      "g",
      "image",
      "line",
      "filter",
      "marker",
      "mask",
      "metadata",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "rect",
      "stop",
      "switch",
      "symbol",
      "svg",
      "text",
      "tspan",
      "use",
      "view"
    ];
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent2(Component3) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component3 !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component3.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements2.indexOf(Component3) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/u.test(Component3)
  ) {
    return true;
  }
  return false;
}
var init_is_svg_component2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs"() {
    init_lowercase_elements2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
function buildSVGPath2(attrs, length, spacing = 1, offset = 0, useDashCase = true) {
  attrs.pathLength = 1;
  const keys3 = useDashCase ? dashKeys2 : camelKeys2;
  attrs[keys3.offset] = px3.transform(-offset);
  const pathLength = px3.transform(length);
  const pathSpacing = px3.transform(spacing);
  attrs[keys3.array] = `${pathLength} ${pathSpacing}`;
}
var dashKeys2, camelKeys2;
var init_path3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"() {
    init_units2();
    dashKeys2 = {
      offset: "stroke-dashoffset",
      array: "stroke-dasharray"
    };
    camelKeys2 = {
      offset: "strokeDashoffset",
      array: "strokeDasharray"
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin3(origin, offset, size) {
  return typeof origin === "string" ? origin : px3.transform(offset + size * origin);
}
function calcSVGTransformOrigin2(dimensions, originX, originY) {
  const pxOriginX = calcOrigin3(originX, dimensions.x, dimensions.width);
  const pxOriginY = calcOrigin3(originY, dimensions.y, dimensions.height);
  return `${pxOriginX} ${pxOriginY}`;
}
var init_transform_origin2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs"() {
    init_units2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs2(state2, {
  attrX,
  attrY,
  attrScale,
  originX,
  originY,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, isSVGTag3, transformTemplate) {
  buildHTMLStyles2(state2, latest, transformTemplate);
  if (isSVGTag3) {
    if (state2.style.viewBox) {
      state2.attrs.viewBox = state2.style.viewBox;
    }
    return;
  }
  state2.attrs = state2.style;
  state2.style = {};
  const { attrs, style, dimensions } = state2;
  if (attrs.transform) {
    if (dimensions)
      style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style.transform)) {
    style.transformOrigin = calcSVGTransformOrigin2(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (attrScale !== void 0)
    attrs.scale = attrScale;
  if (pathLength !== void 0) {
    buildSVGPath2(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}
var init_build_attrs2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs"() {
    init_build_styles2();
    init_path3();
    init_transform_origin2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState2;
var init_create_render_state4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs"() {
    init_create_render_state3();
    createSvgRenderState2 = () => ({
      ...createHtmlRenderState2(),
      attrs: {}
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs
var isSVGTag2;
var init_is_svg_tag2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs"() {
    isSVGTag2 = (tag) => typeof tag === "string" && tag.toLowerCase() === "svg";
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps2(props, visualState, _isStatic, Component3) {
  const visualProps = (0, import_react209.useMemo)(() => {
    const state2 = createSvgRenderState2();
    buildSVGAttrs2(state2, visualState, isSVGTag2(Component3), props.transformTemplate);
    return {
      ...state2.attrs,
      style: { ...state2.style }
    };
  }, [visualState]);
  if (props.style) {
    const rawStyles = {};
    copyRawValuesOnly2(rawStyles, props.style, props);
    visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}
var import_react209;
var init_use_props5 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/use-props.mjs"() {
    import_react209 = __toESM(require_react(), 1);
    init_use_props4();
    init_build_attrs2();
    init_create_render_state4();
    init_is_svg_tag2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender2(forwardMotionProps = false) {
  const useRender = (Component3, props, ref, { latestValues }, isStatic) => {
    const useVisualProps = isSVGComponent2(Component3) ? useSVGProps2 : useHTMLProps2;
    const visualProps = useVisualProps(props, latestValues, isStatic, Component3);
    const filteredProps = filterProps3(props, typeof Component3 === "string", forwardMotionProps);
    const elementProps = Component3 !== import_react210.Fragment ? { ...filteredProps, ...visualProps, ref } : {};
    const { children } = props;
    const renderedChildren = (0, import_react210.useMemo)(() => isMotionValue2(children) ? children.get() : children, [children]);
    return (0, import_react210.createElement)(Component3, {
      ...elementProps,
      children: renderedChildren
    });
  };
  return useRender;
}
var import_react210;
var init_use_render2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"() {
    import_react210 = __toESM(require_react(), 1);
    init_use_props4();
    init_filter_props3();
    init_is_svg_component2();
    init_use_props5();
    init_is_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs
function getValueState2(visualElement) {
  const state2 = [{}, {}];
  visualElement?.values.forEach((value, key) => {
    state2[0][key] = value.get();
    state2[1][key] = value.getVelocity();
  });
  return state2;
}
function resolveVariantFromProps2(props, definition, custom2, visualElement) {
  if (typeof definition === "function") {
    const [current, velocity] = getValueState2(visualElement);
    definition = definition(custom2 !== void 0 ? custom2 : props.custom, current, velocity);
  }
  if (typeof definition === "string") {
    definition = props.variants && props.variants[definition];
  }
  if (typeof definition === "function") {
    const [current, velocity] = getValueState2(visualElement);
    definition = definition(custom2 !== void 0 ? custom2 : props.custom, current, velocity);
  }
  return definition;
}
var init_resolve_variants2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget2;
var init_is_keyframes_target2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs"() {
    isKeyframesTarget2 = (v5) => {
      return Array.isArray(v5);
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue2, resolveFinalValueInKeyframes2;
var init_resolve_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/resolve-value.mjs"() {
    init_is_keyframes_target2();
    isCustomValue2 = (v5) => {
      return Boolean(v5 && typeof v5 === "object" && v5.mix && v5.toValue);
    };
    resolveFinalValueInKeyframes2 = (v5) => {
      return isKeyframesTarget2(v5) ? v5[v5.length - 1] || 0 : v5;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue2(value) {
  const unwrappedValue = isMotionValue2(value) ? value.get() : value;
  return isCustomValue2(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}
var init_resolve_motion_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs"() {
    init_resolve_value2();
    init_is_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState2({ scrapeMotionValuesFromProps: scrapeMotionValuesFromProps5, createRenderState, onUpdate }, props, context, presenceContext) {
  const state2 = {
    latestValues: makeLatestValues2(props, context, presenceContext, scrapeMotionValuesFromProps5),
    renderState: createRenderState()
  };
  if (onUpdate) {
    state2.onMount = (instance) => onUpdate({ props, current: instance, ...state2 });
    state2.onUpdate = (visualElement) => onUpdate(visualElement);
  }
  return state2;
}
function makeLatestValues2(props, context, presenceContext, scrapeMotionValues) {
  const values2 = {};
  const motionValues = scrapeMotionValues(props, {});
  for (const key in motionValues) {
    values2[key] = resolveMotionValue2(motionValues[key]);
  }
  let { initial, animate } = props;
  const isControllingVariants$1 = isControllingVariants2(props);
  const isVariantNode$1 = isVariantNode2(props);
  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {
    if (initial === void 0)
      initial = context.initial;
    if (animate === void 0)
      animate = context.animate;
  }
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;
  const variantToSet = isInitialAnimationBlocked ? animate : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls2(variantToSet)) {
    const list3 = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    for (let i11 = 0; i11 < list3.length; i11++) {
      const resolved = resolveVariantFromProps2(props, list3[i11]);
      if (resolved) {
        const { transitionEnd, transition, ...target } = resolved;
        for (const key in target) {
          let valueTarget = target[key];
          if (Array.isArray(valueTarget)) {
            const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
            valueTarget = valueTarget[index];
          }
          if (valueTarget !== null) {
            values2[key] = valueTarget;
          }
        }
        for (const key in transitionEnd) {
          values2[key] = transitionEnd[key];
        }
      }
    }
  }
  return values2;
}
var import_react211, makeUseVisualState2;
var init_use_visual_state2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs"() {
    import_react211 = __toESM(require_react(), 1);
    init_is_animation_controls2();
    init_MotionContext2();
    init_PresenceContext2();
    init_is_controlling_variants2();
    init_resolve_variants2();
    init_use_constant2();
    init_resolve_motion_value2();
    makeUseVisualState2 = (config) => (props, isStatic) => {
      const context = (0, import_react211.useContext)(MotionContext2);
      const presenceContext = (0, import_react211.useContext)(PresenceContext2);
      const make = () => makeState2(config, props, context, presenceContext);
      return isStatic ? make() : useConstant2(make);
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps3(props, prevProps, visualElement) {
  const { style } = props;
  const newValues = {};
  for (const key in style) {
    if (isMotionValue2(style[key]) || prevProps.style && isMotionValue2(prevProps.style[key]) || isForcedMotionValue2(key, props) || visualElement?.getValue(key)?.liveStyle !== void 0) {
      newValues[key] = style[key];
    }
  }
  return newValues;
}
var init_scrape_motion_values3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs"() {
    init_is_forced_motion_value2();
    init_is_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig2;
var init_config_motion3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/config-motion.mjs"() {
    init_use_visual_state2();
    init_scrape_motion_values3();
    init_create_render_state3();
    htmlMotionConfig2 = {
      useVisualState: makeUseVisualState2({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps3,
        createRenderState: createHtmlRenderState2
      })
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs
function updateSVGDimensions2(instance, renderState) {
  try {
    renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
  } catch (e12) {
    renderState.dimensions = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
  }
}
var init_measure3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML2(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (const key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}
var init_render3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/render.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes2;
var init_camel_case_attrs2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs"() {
    camelCaseAttributes2 = /* @__PURE__ */ new Set([
      "baseFrequency",
      "diffuseConstant",
      "kernelMatrix",
      "kernelUnitLength",
      "keySplines",
      "keyTimes",
      "limitingConeAngle",
      "markerHeight",
      "markerWidth",
      "numOctaves",
      "targetX",
      "targetY",
      "surfaceScale",
      "specularConstant",
      "specularExponent",
      "stdDeviation",
      "tableValues",
      "viewBox",
      "gradientTransform",
      "pathLength",
      "startOffset",
      "textLength",
      "lengthAdjust"
    ]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG2(element, renderState, _styleProp, projection) {
  renderHTML2(element, renderState, void 0, projection);
  for (const key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes2.has(key) ? camelToDash2(key) : key, renderState.attrs[key]);
  }
}
var init_render4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs"() {
    init_camel_to_dash2();
    init_render3();
    init_camel_case_attrs2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps4(props, prevProps, visualElement) {
  const newValues = scrapeMotionValuesFromProps3(props, prevProps, visualElement);
  for (const key in props) {
    if (isMotionValue2(props[key]) || isMotionValue2(prevProps[key])) {
      const targetKey = transformPropOrder2.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}
var init_scrape_motion_values4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs"() {
    init_is_motion_value2();
    init_keys_transform2();
    init_scrape_motion_values3();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var layoutProps2, svgMotionConfig2;
var init_config_motion4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs"() {
    init_es2();
    init_use_visual_state2();
    init_keys_transform2();
    init_build_attrs2();
    init_create_render_state4();
    init_is_svg_tag2();
    init_measure3();
    init_render4();
    init_scrape_motion_values4();
    layoutProps2 = ["x", "y", "width", "height", "cx", "cy", "r"];
    svgMotionConfig2 = {
      useVisualState: makeUseVisualState2({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps4,
        createRenderState: createSvgRenderState2,
        onUpdate: ({ props, prevProps, current, renderState, latestValues }) => {
          if (!current)
            return;
          let hasTransform3 = !!props.drag;
          if (!hasTransform3) {
            for (const key in latestValues) {
              if (transformProps2.has(key)) {
                hasTransform3 = true;
                break;
              }
            }
          }
          if (!hasTransform3)
            return;
          let needsMeasure = !prevProps;
          if (prevProps) {
            for (let i11 = 0; i11 < layoutProps2.length; i11++) {
              const key = layoutProps2[i11];
              if (props[key] !== prevProps[key]) {
                needsMeasure = true;
              }
            }
          }
          if (!needsMeasure)
            return;
          frame2.read(() => {
            updateSVGDimensions2(current, renderState);
            frame2.render(() => {
              buildSVGAttrs2(renderState, latestValues, isSVGTag2(current.tagName), props.transformTemplate);
              renderSVG2(current, renderState);
            });
          });
        }
      })
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/create-factory.mjs
function createMotionComponentFactory2(preloadedFeatures, createVisualElement) {
  return function createMotionComponent3(Component3, { forwardMotionProps } = { forwardMotionProps: false }) {
    const baseConfig = isSVGComponent2(Component3) ? svgMotionConfig2 : htmlMotionConfig2;
    const config = {
      ...baseConfig,
      preloadedFeatures,
      useRender: createUseRender2(forwardMotionProps),
      createVisualElement,
      Component: Component3
    };
    return createRendererMotionComponent2(config);
  };
}
var init_create_factory2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/create-factory.mjs"() {
    init_motion2();
    init_use_render2();
    init_is_svg_component2();
    init_config_motion3();
    init_config_motion4();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs
function resolveVariant2(visualElement, definition, custom2) {
  const props = visualElement.getProps();
  return resolveVariantFromProps2(props, definition, custom2 !== void 0 ? custom2 : props.custom, visualElement);
}
var init_resolve_dynamic_variants2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs"() {
    init_resolve_variants2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs
var positionalKeys2;
var init_keys_position2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs"() {
    init_keys_transform2();
    positionalKeys2 = /* @__PURE__ */ new Set([
      "width",
      "height",
      "top",
      "left",
      "right",
      "bottom",
      ...transformPropOrder2
    ]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue2(visualElement, key, value) {
  if (visualElement.hasValue(key)) {
    visualElement.getValue(key).set(value);
  } else {
    visualElement.addValue(key, motionValue2(value));
  }
}
function setTarget2(visualElement, definition) {
  const resolved = resolveVariant2(visualElement, definition);
  let { transitionEnd = {}, transition = {}, ...target } = resolved || {};
  target = { ...target, ...transitionEnd };
  for (const key in target) {
    const value = resolveFinalValueInKeyframes2(target[key]);
    setMotionValue2(visualElement, key, value);
  }
}
var init_setters2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/setters.mjs"() {
    init_es2();
    init_resolve_value2();
    init_resolve_dynamic_variants2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs
function isWillChangeMotionValue2(value) {
  return Boolean(isMotionValue2(value) && value.add);
}
var init_is2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs"() {
    init_is_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs
function addValueToWillChange2(visualElement, key) {
  const willChange = visualElement.getValue("willChange");
  if (isWillChangeMotionValue2(willChange)) {
    return willChange.add(key);
  } else if (!willChange && MotionGlobalConfig2.WillChange) {
    const newWillChange = new MotionGlobalConfig2.WillChange("auto");
    visualElement.addValue("willChange", newWillChange);
    newWillChange.add(key);
  }
}
var init_add_will_change2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs"() {
    init_es();
    init_is2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs
function getOptimisedAppearId2(visualElement) {
  return visualElement.props[optimizedAppearDataAttribute2];
}
var init_get_appear_id2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs"() {
    init_data_id2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState2;
var init_use_instant_transition_state2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs"() {
    instantAnimationState2 = {
      current: false
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs
function binarySubdivide2(x3, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i11 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier2(currentT, mX1, mX2) - x3;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision2 && ++i11 < subdivisionMaxIterations2);
  return currentT;
}
function cubicBezier2(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop2;
  const getTForX = (aX) => binarySubdivide2(aX, 0, 1, mX1, mX2);
  return (t13) => t13 === 0 || t13 === 1 ? t13 : calcBezier2(getTForX(t13), mY1, mY2);
}
var calcBezier2, subdivisionPrecision2, subdivisionMaxIterations2;
var init_cubic_bezier4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs"() {
    init_es();
    calcBezier2 = (t13, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t13 + (3 * a22 - 6 * a1)) * t13 + 3 * a1) * t13;
    subdivisionPrecision2 = 1e-7;
    subdivisionMaxIterations2 = 12;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs
var mirrorEasing2;
var init_mirror2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs"() {
    mirrorEasing2 = (easing) => (p13) => p13 <= 0.5 ? easing(2 * p13) / 2 : (2 - easing(2 * (1 - p13))) / 2;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs
var reverseEasing2;
var init_reverse2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs"() {
    reverseEasing2 = (easing) => (p13) => 1 - easing(1 - p13);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/back.mjs
var backOut2, backIn2, backInOut2;
var init_back2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/back.mjs"() {
    init_cubic_bezier4();
    init_mirror2();
    init_reverse2();
    backOut2 = /* @__PURE__ */ cubicBezier2(0.33, 1.53, 0.69, 0.99);
    backIn2 = /* @__PURE__ */ reverseEasing2(backOut2);
    backInOut2 = /* @__PURE__ */ mirrorEasing2(backIn2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/anticipate.mjs
var anticipate2;
var init_anticipate2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/anticipate.mjs"() {
    init_back2();
    anticipate2 = (p13) => (p13 *= 2) < 1 ? 0.5 * backIn2(p13) : 0.5 * (2 - Math.pow(2, -10 * (p13 - 1)));
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/circ.mjs
var circIn2, circOut2, circInOut2;
var init_circ2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/circ.mjs"() {
    init_mirror2();
    init_reverse2();
    circIn2 = (p13) => 1 - Math.sin(Math.acos(p13));
    circOut2 = reverseEasing2(circIn2);
    circInOut2 = mirrorEasing2(circIn2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString2;
var init_is_zero_value_string2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs"() {
    isZeroValueString2 = (v5) => /^0[^.\s]+$/u.test(v5);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs
function isNone2(value) {
  if (typeof value === "number") {
    return value === 0;
  } else if (value !== null) {
    return value === "none" || value === "0" || isZeroValueString2(value);
  } else {
    return true;
  }
}
var init_is_none2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-none.mjs"() {
    init_is_zero_value_string2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs
var sanitize2;
var init_sanitize2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs"() {
    sanitize2 = (v5) => Math.round(v5 * 1e5) / 1e5;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs
var floatRegex2;
var init_float_regex2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs"() {
    floatRegex2 = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs
function isNullish3(v5) {
  return v5 == null;
}
var init_is_nullish2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs
var singleColorRegex2;
var init_single_color_regex2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs"() {
    singleColorRegex2 = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/utils.mjs
var isColorString2, splitColor2;
var init_utils11 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/utils.mjs"() {
    init_float_regex2();
    init_is_nullish2();
    init_single_color_regex2();
    isColorString2 = (type, testProp) => (v5) => {
      return Boolean(typeof v5 === "string" && singleColorRegex2.test(v5) && v5.startsWith(type) || testProp && !isNullish3(v5) && Object.prototype.hasOwnProperty.call(v5, testProp));
    };
    splitColor2 = (aName, bName, cName) => (v5) => {
      if (typeof v5 !== "string")
        return v5;
      const [a12, b4, c13, alpha4] = v5.match(floatRegex2);
      return {
        [aName]: parseFloat(a12),
        [bName]: parseFloat(b4),
        [cName]: parseFloat(c13),
        alpha: alpha4 !== void 0 ? parseFloat(alpha4) : 1
      };
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs
var clampRgbUnit2, rgbUnit2, rgba3;
var init_rgba3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/rgba.mjs"() {
    init_clamp3();
    init_numbers2();
    init_sanitize2();
    init_utils11();
    clampRgbUnit2 = (v5) => clamp3(0, 255, v5);
    rgbUnit2 = {
      ...number2,
      transform: (v5) => Math.round(clampRgbUnit2(v5))
    };
    rgba3 = {
      test: /* @__PURE__ */ isColorString2("rgb", "red"),
      parse: /* @__PURE__ */ splitColor2("red", "green", "blue"),
      transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit2.transform(red) + ", " + rgbUnit2.transform(green) + ", " + rgbUnit2.transform(blue) + ", " + sanitize2(alpha3.transform(alpha$1)) + ")"
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/hex.mjs
function parseHex2(v5) {
  let r8 = "";
  let g9 = "";
  let b4 = "";
  let a12 = "";
  if (v5.length > 5) {
    r8 = v5.substring(1, 3);
    g9 = v5.substring(3, 5);
    b4 = v5.substring(5, 7);
    a12 = v5.substring(7, 9);
  } else {
    r8 = v5.substring(1, 2);
    g9 = v5.substring(2, 3);
    b4 = v5.substring(3, 4);
    a12 = v5.substring(4, 5);
    r8 += r8;
    g9 += g9;
    b4 += b4;
    a12 += a12;
  }
  return {
    red: parseInt(r8, 16),
    green: parseInt(g9, 16),
    blue: parseInt(b4, 16),
    alpha: a12 ? parseInt(a12, 16) / 255 : 1
  };
}
var hex2;
var init_hex2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/hex.mjs"() {
    init_rgba3();
    init_utils11();
    hex2 = {
      test: /* @__PURE__ */ isColorString2("#"),
      parse: parseHex2,
      transform: rgba3.transform
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/hsla.mjs
var hsla2;
var init_hsla2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/hsla.mjs"() {
    init_numbers2();
    init_units2();
    init_sanitize2();
    init_utils11();
    hsla2 = {
      test: /* @__PURE__ */ isColorString2("hsl", "hue"),
      parse: /* @__PURE__ */ splitColor2("hue", "saturation", "lightness"),
      transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
        return "hsla(" + Math.round(hue) + ", " + percent2.transform(sanitize2(saturation)) + ", " + percent2.transform(sanitize2(lightness)) + ", " + sanitize2(alpha3.transform(alpha$1)) + ")";
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/index.mjs
var color2;
var init_color3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/color/index.mjs"() {
    init_hex2();
    init_hsla2();
    init_rgba3();
    color2 = {
      test: (v5) => rgba3.test(v5) || hex2.test(v5) || hsla2.test(v5),
      parse: (v5) => {
        if (rgba3.test(v5)) {
          return rgba3.parse(v5);
        } else if (hsla2.test(v5)) {
          return hsla2.parse(v5);
        } else {
          return hex2.parse(v5);
        }
      },
      transform: (v5) => {
        return typeof v5 === "string" ? v5 : v5.hasOwnProperty("red") ? rgba3.transform(v5) : hsla2.transform(v5);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs
var colorRegex2;
var init_color_regex2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs"() {
    colorRegex2 = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/complex/index.mjs
function test2(v5) {
  return isNaN(v5) && typeof v5 === "string" && (v5.match(floatRegex2)?.length || 0) + (v5.match(colorRegex2)?.length || 0) > 0;
}
function analyseComplexValue2(value) {
  const originalValue = value.toString();
  const values2 = [];
  const indexes = {
    color: [],
    number: [],
    var: []
  };
  const types = [];
  let i11 = 0;
  const tokenised = originalValue.replace(complexRegex2, (parsedValue) => {
    if (color2.test(parsedValue)) {
      indexes.color.push(i11);
      types.push(COLOR_TOKEN2);
      values2.push(color2.parse(parsedValue));
    } else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN2)) {
      indexes.var.push(i11);
      types.push(VAR_TOKEN2);
      values2.push(parsedValue);
    } else {
      indexes.number.push(i11);
      types.push(NUMBER_TOKEN2);
      values2.push(parseFloat(parsedValue));
    }
    ++i11;
    return SPLIT_TOKEN2;
  });
  const split = tokenised.split(SPLIT_TOKEN2);
  return { values: values2, split, indexes, types };
}
function parseComplexValue2(v5) {
  return analyseComplexValue2(v5).values;
}
function createTransformer2(source) {
  const { split, types } = analyseComplexValue2(source);
  const numSections = split.length;
  return (v5) => {
    let output = "";
    for (let i11 = 0; i11 < numSections; i11++) {
      output += split[i11];
      if (v5[i11] !== void 0) {
        const type = types[i11];
        if (type === NUMBER_TOKEN2) {
          output += sanitize2(v5[i11]);
        } else if (type === COLOR_TOKEN2) {
          output += color2.transform(v5[i11]);
        } else {
          output += v5[i11];
        }
      }
    }
    return output;
  };
}
function getAnimatableNone3(v5) {
  const parsed = parseComplexValue2(v5);
  const transformer = createTransformer2(v5);
  return transformer(parsed.map(convertNumbersToZero2));
}
var NUMBER_TOKEN2, COLOR_TOKEN2, VAR_TOKEN2, VAR_FUNCTION_TOKEN2, SPLIT_TOKEN2, complexRegex2, convertNumbersToZero2, complex2;
var init_complex3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/complex/index.mjs"() {
    init_color3();
    init_color_regex2();
    init_float_regex2();
    init_sanitize2();
    NUMBER_TOKEN2 = "number";
    COLOR_TOKEN2 = "color";
    VAR_TOKEN2 = "var";
    VAR_FUNCTION_TOKEN2 = "var(";
    SPLIT_TOKEN2 = "${}";
    complexRegex2 = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
    convertNumbersToZero2 = (v5) => typeof v5 === "number" ? 0 : v5;
    complex2 = {
      test: test2,
      parse: parseComplexValue2,
      createTransformer: createTransformer2,
      getAnimatableNone: getAnimatableNone3
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs
function applyDefaultFilter2(v5) {
  const [name2, value] = v5.slice(0, -1).split("(");
  if (name2 === "drop-shadow")
    return v5;
  const [number4] = value.match(floatRegex2) || [];
  if (!number4)
    return v5;
  const unit = value.replace(number4, "");
  let defaultValue2 = maxDefaults2.has(name2) ? 1 : 0;
  if (number4 !== value)
    defaultValue2 *= 100;
  return name2 + "(" + defaultValue2 + unit + ")";
}
var maxDefaults2, functionRegex2, filter2;
var init_filter2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs"() {
    init_complex3();
    init_float_regex2();
    maxDefaults2 = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
    functionRegex2 = /\b([a-z-]*)\(.*?\)/gu;
    filter2 = {
      ...complex2,
      getAnimatableNone: (v5) => {
        const functions = v5.match(functionRegex2);
        return functions ? functions.map(applyDefaultFilter2).join(" ") : v5;
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes2, getDefaultValueType2;
var init_defaults3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs"() {
    init_color3();
    init_filter2();
    init_number3();
    defaultValueTypes2 = {
      ...numberValueTypes2,
      // Color props
      color: color2,
      backgroundColor: color2,
      outlineColor: color2,
      fill: color2,
      stroke: color2,
      // Border props
      borderColor: color2,
      borderTopColor: color2,
      borderRightColor: color2,
      borderBottomColor: color2,
      borderLeftColor: color2,
      filter: filter2,
      WebkitFilter: filter2
    };
    getDefaultValueType2 = (key) => defaultValueTypes2[key];
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone4(key, value) {
  let defaultValueType = getDefaultValueType2(key);
  if (defaultValueType !== filter2)
    defaultValueType = complex2;
  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}
var init_animatable_none2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs"() {
    init_complex3();
    init_filter2();
    init_defaults3();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs
function makeNoneKeyframesAnimatable2(unresolvedKeyframes, noneKeyframeIndexes, name2) {
  let i11 = 0;
  let animatableTemplate = void 0;
  while (i11 < unresolvedKeyframes.length && !animatableTemplate) {
    const keyframe = unresolvedKeyframes[i11];
    if (typeof keyframe === "string" && !invalidTemplates2.has(keyframe) && analyseComplexValue2(keyframe).values.length) {
      animatableTemplate = unresolvedKeyframes[i11];
    }
    i11++;
  }
  if (animatableTemplate && name2) {
    for (const noneIndex of noneKeyframeIndexes) {
      unresolvedKeyframes[noneIndex] = getAnimatableNone4(name2, animatableTemplate);
    }
  }
}
var invalidTemplates2;
var init_make_none_animatable2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs"() {
    init_complex3();
    init_animatable_none2();
    invalidTemplates2 = /* @__PURE__ */ new Set(["auto", "none", "0"]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs
function defaultTransformValue2(name2) {
  return name2.includes("scale") ? 1 : 0;
}
function parseValueFromTransform2(transform, name2) {
  if (!transform || transform === "none") {
    return defaultTransformValue2(name2);
  }
  const matrix3dMatch = transform.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let parsers;
  let match;
  if (matrix3dMatch) {
    parsers = matrix3dParsers2;
    match = matrix3dMatch;
  } else {
    const matrix2dMatch = transform.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    parsers = matrix2dParsers2;
    match = matrix2dMatch;
  }
  if (!match) {
    return defaultTransformValue2(name2);
  }
  const valueParser = parsers[name2];
  const values2 = match[1].split(",").map(convertTransformToNumber2);
  return typeof valueParser === "function" ? valueParser(values2) : values2[valueParser];
}
function convertTransformToNumber2(value) {
  return parseFloat(value.trim());
}
var radToDeg2, rotate2, matrix2dParsers2, rebaseAngle2, rotateZ2, scaleX2, scaleY2, matrix3dParsers2, readTransformValue2;
var init_parse_transform2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs"() {
    radToDeg2 = (rad) => rad * 180 / Math.PI;
    rotate2 = (v5) => {
      const angle = radToDeg2(Math.atan2(v5[1], v5[0]));
      return rebaseAngle2(angle);
    };
    matrix2dParsers2 = {
      x: 4,
      y: 5,
      translateX: 4,
      translateY: 5,
      scaleX: 0,
      scaleY: 3,
      scale: (v5) => (Math.abs(v5[0]) + Math.abs(v5[3])) / 2,
      rotate: rotate2,
      rotateZ: rotate2,
      skewX: (v5) => radToDeg2(Math.atan(v5[1])),
      skewY: (v5) => radToDeg2(Math.atan(v5[2])),
      skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[2])) / 2
    };
    rebaseAngle2 = (angle) => {
      angle = angle % 360;
      if (angle < 0)
        angle += 360;
      return angle;
    };
    rotateZ2 = rotate2;
    scaleX2 = (v5) => Math.sqrt(v5[0] * v5[0] + v5[1] * v5[1]);
    scaleY2 = (v5) => Math.sqrt(v5[4] * v5[4] + v5[5] * v5[5]);
    matrix3dParsers2 = {
      x: 12,
      y: 13,
      z: 14,
      translateX: 12,
      translateY: 13,
      translateZ: 14,
      scaleX: scaleX2,
      scaleY: scaleY2,
      scale: (v5) => (scaleX2(v5) + scaleY2(v5)) / 2,
      rotateX: (v5) => rebaseAngle2(radToDeg2(Math.atan2(v5[6], v5[5]))),
      rotateY: (v5) => rebaseAngle2(radToDeg2(Math.atan2(-v5[2], v5[0]))),
      rotateZ: rotateZ2,
      rotate: rotateZ2,
      skewX: (v5) => radToDeg2(Math.atan(v5[4])),
      skewY: (v5) => radToDeg2(Math.atan(v5[1])),
      skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[4])) / 2
    };
    readTransformValue2 = (instance, name2) => {
      const { transform = "none" } = getComputedStyle(instance);
      return parseValueFromTransform2(transform, name2);
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
function removeNonTranslationalTransform2(visualElement) {
  const removedTransforms = [];
  nonTranslationalTransformKeys2.forEach((key) => {
    const value = visualElement.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  return removedTransforms;
}
var isNumOrPxType2, transformKeys2, nonTranslationalTransformKeys2, positionalValues2;
var init_unit_conversion2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs"() {
    init_numbers2();
    init_units2();
    init_keys_transform2();
    init_parse_transform2();
    isNumOrPxType2 = (v5) => v5 === number2 || v5 === px3;
    transformKeys2 = /* @__PURE__ */ new Set(["x", "y", "z"]);
    nonTranslationalTransformKeys2 = transformPropOrder2.filter((key) => !transformKeys2.has(key));
    positionalValues2 = {
      // Dimensions
      width: ({ x: x3 }, { paddingLeft = "0", paddingRight = "0" }) => x3.max - x3.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
      height: ({ y: y3 }, { paddingTop = "0", paddingBottom = "0" }) => y3.max - y3.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
      top: (_bbox, { top: top2 }) => parseFloat(top2),
      left: (_bbox, { left }) => parseFloat(left),
      bottom: ({ y: y3 }, { top: top2 }) => parseFloat(top2) + (y3.max - y3.min),
      right: ({ x: x3 }, { left }) => parseFloat(left) + (x3.max - x3.min),
      // Transform
      x: (_bbox, { transform }) => parseValueFromTransform2(transform, "x"),
      y: (_bbox, { transform }) => parseValueFromTransform2(transform, "y")
    };
    positionalValues2.translateX = positionalValues2.x;
    positionalValues2.translateY = positionalValues2.y;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs
function measureAllKeyframes2() {
  if (anyNeedsMeasurement2) {
    const resolversToMeasure = Array.from(toResolve2).filter((resolver) => resolver.needsMeasurement);
    const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));
    const transformsToRestore = /* @__PURE__ */ new Map();
    elementsToMeasure.forEach((element) => {
      const removedTransforms = removeNonTranslationalTransform2(element);
      if (!removedTransforms.length)
        return;
      transformsToRestore.set(element, removedTransforms);
      element.render();
    });
    resolversToMeasure.forEach((resolver) => resolver.measureInitialState());
    elementsToMeasure.forEach((element) => {
      element.render();
      const restore = transformsToRestore.get(element);
      if (restore) {
        restore.forEach(([key, value]) => {
          element.getValue(key)?.set(value);
        });
      }
    });
    resolversToMeasure.forEach((resolver) => resolver.measureEndState());
    resolversToMeasure.forEach((resolver) => {
      if (resolver.suspendedScrollY !== void 0) {
        window.scrollTo(0, resolver.suspendedScrollY);
      }
    });
  }
  anyNeedsMeasurement2 = false;
  isScheduled2 = false;
  toResolve2.forEach((resolver) => resolver.complete());
  toResolve2.clear();
}
function readAllKeyframes2() {
  toResolve2.forEach((resolver) => {
    resolver.readKeyframes();
    if (resolver.needsMeasurement) {
      anyNeedsMeasurement2 = true;
    }
  });
}
function flushKeyframeResolvers2() {
  readAllKeyframes2();
  measureAllKeyframes2();
}
var toResolve2, isScheduled2, anyNeedsMeasurement2, KeyframeResolver2;
var init_KeyframesResolver2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs"() {
    init_es2();
    init_unit_conversion2();
    toResolve2 = /* @__PURE__ */ new Set();
    isScheduled2 = false;
    anyNeedsMeasurement2 = false;
    KeyframeResolver2 = class {
      constructor(unresolvedKeyframes, onComplete, name2, motionValue3, element, isAsync2 = false) {
        this.isComplete = false;
        this.isAsync = false;
        this.needsMeasurement = false;
        this.isScheduled = false;
        this.unresolvedKeyframes = [...unresolvedKeyframes];
        this.onComplete = onComplete;
        this.name = name2;
        this.motionValue = motionValue3;
        this.element = element;
        this.isAsync = isAsync2;
      }
      scheduleResolve() {
        this.isScheduled = true;
        if (this.isAsync) {
          toResolve2.add(this);
          if (!isScheduled2) {
            isScheduled2 = true;
            frame2.read(readAllKeyframes2);
            frame2.resolveKeyframes(measureAllKeyframes2);
          }
        } else {
          this.readKeyframes();
          this.complete();
        }
      }
      readKeyframes() {
        const { unresolvedKeyframes, name: name2, element, motionValue: motionValue3 } = this;
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          if (unresolvedKeyframes[i11] === null) {
            if (i11 === 0) {
              const currentValue = motionValue3?.get();
              const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
              if (currentValue !== void 0) {
                unresolvedKeyframes[0] = currentValue;
              } else if (element && name2) {
                const valueAsRead = element.readValue(name2, finalKeyframe);
                if (valueAsRead !== void 0 && valueAsRead !== null) {
                  unresolvedKeyframes[0] = valueAsRead;
                }
              }
              if (unresolvedKeyframes[0] === void 0) {
                unresolvedKeyframes[0] = finalKeyframe;
              }
              if (motionValue3 && currentValue === void 0) {
                motionValue3.set(unresolvedKeyframes[0]);
              }
            } else {
              unresolvedKeyframes[i11] = unresolvedKeyframes[i11 - 1];
            }
          }
        }
      }
      setFinalKeyframe() {
      }
      measureInitialState() {
      }
      renderEndStyles() {
      }
      measureEndState() {
      }
      complete() {
        this.isComplete = true;
        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);
        toResolve2.delete(this);
      }
      cancel() {
        if (!this.isComplete) {
          this.isScheduled = false;
          toResolve2.delete(this);
        }
      }
      resume() {
        if (!this.isComplete)
          this.scheduleResolve();
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString2;
var init_is_numerical_string2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs"() {
    isNumericalString2 = (v5) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v5);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function parseCSSVariable2(current) {
  const match = splitCSSVariableRegex2.exec(current);
  if (!match)
    return [,];
  const [, token1, token2, fallback] = match;
  return [`--${token1 ?? token2}`, fallback];
}
function getVariableValue2(current, element, depth = 1) {
  invariant2(depth <= maxDepth2, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);
  const [token, fallback] = parseCSSVariable2(current);
  if (!token)
    return;
  const resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    const trimmed = resolved.trim();
    return isNumericalString2(trimmed) ? parseFloat(trimmed) : trimmed;
  }
  return isCSSVariableToken2(fallback) ? getVariableValue2(fallback, element, depth + 1) : fallback;
}
var splitCSSVariableRegex2, maxDepth2;
var init_css_variables_conversion2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs"() {
    init_es();
    init_is_numerical_string2();
    init_is_css_variable2();
    splitCSSVariableRegex2 = // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
    /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
    maxDepth2 = 4;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType2;
var init_test2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs"() {
    testValueType2 = (v5) => (type) => type.test(v5);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto2;
var init_type_auto2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs"() {
    auto2 = {
      test: (v5) => v5 === "auto",
      parse: (v5) => v5
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes2, findDimensionValueType2;
var init_dimensions2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs"() {
    init_numbers2();
    init_units2();
    init_test2();
    init_type_auto2();
    dimensionValueTypes2 = [number2, px3, percent2, degrees2, vw2, vh2, auto2];
    findDimensionValueType2 = (v5) => dimensionValueTypes2.find(testValueType2(v5));
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs
var DOMKeyframesResolver2;
var init_DOMKeyframesResolver2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs"() {
    init_is_none2();
    init_keys_position2();
    init_make_none_animatable2();
    init_KeyframesResolver2();
    init_css_variables_conversion2();
    init_is_css_variable2();
    init_unit_conversion2();
    init_dimensions2();
    DOMKeyframesResolver2 = class extends KeyframeResolver2 {
      constructor(unresolvedKeyframes, onComplete, name2, motionValue3, element) {
        super(unresolvedKeyframes, onComplete, name2, motionValue3, element, true);
      }
      readKeyframes() {
        const { unresolvedKeyframes, element, name: name2 } = this;
        if (!element || !element.current)
          return;
        super.readKeyframes();
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          let keyframe = unresolvedKeyframes[i11];
          if (typeof keyframe === "string") {
            keyframe = keyframe.trim();
            if (isCSSVariableToken2(keyframe)) {
              const resolved = getVariableValue2(keyframe, element.current);
              if (resolved !== void 0) {
                unresolvedKeyframes[i11] = resolved;
              }
              if (i11 === unresolvedKeyframes.length - 1) {
                this.finalKeyframe = keyframe;
              }
            }
          }
        }
        this.resolveNoneKeyframes();
        if (!positionalKeys2.has(name2) || unresolvedKeyframes.length !== 2) {
          return;
        }
        const [origin, target] = unresolvedKeyframes;
        const originType = findDimensionValueType2(origin);
        const targetType = findDimensionValueType2(target);
        if (originType === targetType)
          return;
        if (isNumOrPxType2(originType) && isNumOrPxType2(targetType)) {
          for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
            const value = unresolvedKeyframes[i11];
            if (typeof value === "string") {
              unresolvedKeyframes[i11] = parseFloat(value);
            }
          }
        } else {
          this.needsMeasurement = true;
        }
      }
      resolveNoneKeyframes() {
        const { unresolvedKeyframes, name: name2 } = this;
        const noneKeyframeIndexes = [];
        for (let i11 = 0; i11 < unresolvedKeyframes.length; i11++) {
          if (isNone2(unresolvedKeyframes[i11])) {
            noneKeyframeIndexes.push(i11);
          }
        }
        if (noneKeyframeIndexes.length) {
          makeNoneKeyframesAnimatable2(unresolvedKeyframes, noneKeyframeIndexes, name2);
        }
      }
      measureInitialState() {
        const { element, unresolvedKeyframes, name: name2 } = this;
        if (!element || !element.current)
          return;
        if (name2 === "height") {
          this.suspendedScrollY = window.pageYOffset;
        }
        this.measuredOrigin = positionalValues2[name2](element.measureViewportBox(), window.getComputedStyle(element.current));
        unresolvedKeyframes[0] = this.measuredOrigin;
        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
        if (measureKeyframe !== void 0) {
          element.getValue(name2, measureKeyframe).jump(measureKeyframe, false);
        }
      }
      measureEndState() {
        const { element, name: name2, unresolvedKeyframes } = this;
        if (!element || !element.current)
          return;
        const value = element.getValue(name2);
        value && value.jump(this.measuredOrigin, false);
        const finalKeyframeIndex = unresolvedKeyframes.length - 1;
        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];
        unresolvedKeyframes[finalKeyframeIndex] = positionalValues2[name2](element.measureViewportBox(), window.getComputedStyle(element.current));
        if (finalKeyframe !== null && this.finalKeyframe === void 0) {
          this.finalKeyframe = finalKeyframe;
        }
        if (this.removedTransforms?.length) {
          this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {
            element.getValue(unsetTransformName).set(unsetTransformValue);
          });
        }
        this.resolveNoneKeyframes();
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable2;
var init_is_animatable2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs"() {
    init_complex3();
    isAnimatable2 = (value, name2) => {
      if (name2 === "zIndex")
        return false;
      if (typeof value === "number" || Array.isArray(value))
        return true;
      if (typeof value === "string" && // It's animatable if we have a string
      (complex2.test(value) || value === "0") && // And it contains numbers and/or colors
      !value.startsWith("url(")) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs
function hasKeyframesChanged2(keyframes3) {
  const current = keyframes3[0];
  if (keyframes3.length === 1)
    return true;
  for (let i11 = 0; i11 < keyframes3.length; i11++) {
    if (keyframes3[i11] !== current)
      return true;
  }
}
function canAnimate2(keyframes3, name2, type, velocity) {
  const originKeyframe = keyframes3[0];
  if (originKeyframe === null)
    return false;
  if (name2 === "display" || name2 === "visibility")
    return true;
  const targetKeyframe = keyframes3[keyframes3.length - 1];
  const isOriginAnimatable = isAnimatable2(originKeyframe, name2);
  const isTargetAnimatable = isAnimatable2(targetKeyframe, name2);
  warning2(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name2} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`);
  if (!isOriginAnimatable || !isTargetAnimatable) {
    return false;
  }
  return hasKeyframesChanged2(keyframes3) || (type === "spring" || isGenerator2(type)) && velocity;
}
var init_can_animate2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs"() {
    init_es2();
    init_es();
    init_is_animatable2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs
function getFinalKeyframe2(keyframes3, { repeat, repeatType = "loop" }, finalKeyframe) {
  const resolvedKeyframes = keyframes3.filter(isNotNull2);
  const index = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;
  return !index || finalKeyframe === void 0 ? resolvedKeyframes[index] : finalKeyframe;
}
var isNotNull2;
var init_get_final_keyframe2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs"() {
    isNotNull2 = (value) => value !== null;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs
var MAX_RESOLVE_DELAY2, BaseAnimation2;
var init_BaseAnimation2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs"() {
    init_es2();
    init_KeyframesResolver2();
    init_use_instant_transition_state2();
    init_can_animate2();
    init_get_final_keyframe2();
    MAX_RESOLVE_DELAY2 = 40;
    BaseAnimation2 = class {
      constructor({ autoplay = true, delay: delay3 = 0, type = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", ...options }) {
        this.isStopped = false;
        this.hasAttemptedResolve = false;
        this.createdAt = time2.now();
        this.options = {
          autoplay,
          delay: delay3,
          type,
          repeat,
          repeatDelay,
          repeatType,
          ...options
        };
        this.updateFinishedPromise();
      }
      /**
       * This method uses the createdAt and resolvedAt to calculate the
       * animation startTime. *Ideally*, we would use the createdAt time as t=0
       * as the following frame would then be the first frame of the animation in
       * progress, which would feel snappier.
       *
       * However, if there's a delay (main thread work) between the creation of
       * the animation and the first commited frame, we prefer to use resolvedAt
       * to avoid a sudden jump into the animation.
       */
      calcStartTime() {
        if (!this.resolvedAt)
          return this.createdAt;
        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY2 ? this.resolvedAt : this.createdAt;
      }
      /**
       * A getter for resolved data. If keyframes are not yet resolved, accessing
       * this.resolved will synchronously flush all pending keyframe resolvers.
       * This is a deoptimisation, but at its worst still batches read/writes.
       */
      get resolved() {
        if (!this._resolved && !this.hasAttemptedResolve) {
          flushKeyframeResolvers2();
        }
        return this._resolved;
      }
      /**
       * A method to be called when the keyframes resolver completes. This method
       * will check if its possible to run the animation and, if not, skip it.
       * Otherwise, it will call initPlayback on the implementing class.
       */
      onKeyframesResolved(keyframes3, finalKeyframe) {
        this.resolvedAt = time2.now();
        this.hasAttemptedResolve = true;
        const { name: name2, type, velocity, delay: delay3, onComplete, onUpdate, isGenerator: isGenerator3 } = this.options;
        if (!isGenerator3 && !canAnimate2(keyframes3, name2, type, velocity)) {
          if (instantAnimationState2.current || !delay3) {
            onUpdate && onUpdate(getFinalKeyframe2(keyframes3, this.options, finalKeyframe));
            onComplete && onComplete();
            this.resolveFinishedPromise();
            return;
          } else {
            this.options.duration = 0;
          }
        }
        const resolvedAnimation = this.initPlayback(keyframes3, finalKeyframe);
        if (resolvedAnimation === false)
          return;
        this._resolved = {
          keyframes: keyframes3,
          finalKeyframe,
          ...resolvedAnimation
        };
        this.onPostResolved();
      }
      onPostResolved() {
      }
      /**
       * Allows the returned animation to be awaited or promise-chained. Currently
       * resolves when the animation finishes at all but in a future update could/should
       * reject if its cancels.
       */
      then(resolve, reject) {
        return this.currentFinishedPromise.then(resolve, reject);
      }
      flatten() {
        if (!this.options.allowFlatten)
          return;
        this.options.type = "keyframes";
        this.options.ease = "linear";
      }
      updateFinishedPromise() {
        this.currentFinishedPromise = new Promise((resolve) => {
          this.resolveFinishedPromise = resolve;
        });
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/number.mjs
var mixNumber3;
var init_number4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/number.mjs"() {
    mixNumber3 = (from, to, progress3) => {
      return from + (to - from) * progress3;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb2(p13, q3, t13) {
  if (t13 < 0)
    t13 += 1;
  if (t13 > 1)
    t13 -= 1;
  if (t13 < 1 / 6)
    return p13 + (q3 - p13) * 6 * t13;
  if (t13 < 1 / 2)
    return q3;
  if (t13 < 2 / 3)
    return p13 + (q3 - p13) * (2 / 3 - t13) * 6;
  return p13;
}
function hslaToRgba2({ hue, saturation, lightness, alpha: alpha4 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q3 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p13 = 2 * lightness - q3;
    red = hueToRgb2(p13, q3, hue + 1 / 3);
    green = hueToRgb2(p13, q3, hue);
    blue = hueToRgb2(p13, q3, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha4
  };
}
var init_hsla_to_rgba2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/immediate.mjs
function mixImmediate2(a12, b4) {
  return (p13) => p13 > 0 ? b4 : a12;
}
var init_immediate2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/immediate.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/color.mjs
function asRGBA2(color3) {
  const type = getColorType2(color3);
  warning2(Boolean(type), `'${color3}' is not an animatable color. Use the equivalent color code instead.`);
  if (!Boolean(type))
    return false;
  let model = type.parse(color3);
  if (type === hsla2) {
    model = hslaToRgba2(model);
  }
  return model;
}
var mixLinearColor2, colorTypes2, getColorType2, mixColor2;
var init_color4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/color.mjs"() {
    init_number4();
    init_es();
    init_hsla_to_rgba2();
    init_hex2();
    init_rgba3();
    init_hsla2();
    init_immediate2();
    mixLinearColor2 = (from, to, v5) => {
      const fromExpo = from * from;
      const expo = v5 * (to * to - fromExpo) + fromExpo;
      return expo < 0 ? 0 : Math.sqrt(expo);
    };
    colorTypes2 = [hex2, rgba3, hsla2];
    getColorType2 = (v5) => colorTypes2.find((type) => type.test(v5));
    mixColor2 = (from, to) => {
      const fromRGBA = asRGBA2(from);
      const toRGBA = asRGBA2(to);
      if (!fromRGBA || !toRGBA) {
        return mixImmediate2(from, to);
      }
      const blended = { ...fromRGBA };
      return (v5) => {
        blended.red = mixLinearColor2(fromRGBA.red, toRGBA.red, v5);
        blended.green = mixLinearColor2(fromRGBA.green, toRGBA.green, v5);
        blended.blue = mixLinearColor2(fromRGBA.blue, toRGBA.blue, v5);
        blended.alpha = mixNumber3(fromRGBA.alpha, toRGBA.alpha, v5);
        return rgba3.transform(blended);
      };
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/pipe.mjs
var combineFunctions2, pipe2;
var init_pipe2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/pipe.mjs"() {
    combineFunctions2 = (a12, b4) => (v5) => b4(a12(v5));
    pipe2 = (...transformers) => transformers.reduce(combineFunctions2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/visibility.mjs
function mixVisibility2(origin, target) {
  if (invisibleValues2.has(origin)) {
    return (p13) => p13 <= 0 ? origin : target;
  } else {
    return (p13) => p13 >= 1 ? target : origin;
  }
}
var invisibleValues2;
var init_visibility2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/visibility.mjs"() {
    invisibleValues2 = /* @__PURE__ */ new Set(["none", "hidden"]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/complex.mjs
function mixNumber4(a12, b4) {
  return (p13) => mixNumber3(a12, b4, p13);
}
function getMixer2(a12) {
  if (typeof a12 === "number") {
    return mixNumber4;
  } else if (typeof a12 === "string") {
    return isCSSVariableToken2(a12) ? mixImmediate2 : color2.test(a12) ? mixColor2 : mixComplex2;
  } else if (Array.isArray(a12)) {
    return mixArray2;
  } else if (typeof a12 === "object") {
    return color2.test(a12) ? mixColor2 : mixObject2;
  }
  return mixImmediate2;
}
function mixArray2(a12, b4) {
  const output = [...a12];
  const numValues = output.length;
  const blendValue = a12.map((v5, i11) => getMixer2(v5)(v5, b4[i11]));
  return (p13) => {
    for (let i11 = 0; i11 < numValues; i11++) {
      output[i11] = blendValue[i11](p13);
    }
    return output;
  };
}
function mixObject2(a12, b4) {
  const output = { ...a12, ...b4 };
  const blendValue = {};
  for (const key in output) {
    if (a12[key] !== void 0 && b4[key] !== void 0) {
      blendValue[key] = getMixer2(a12[key])(a12[key], b4[key]);
    }
  }
  return (v5) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v5);
    }
    return output;
  };
}
function matchOrder2(origin, target) {
  const orderedOrigin = [];
  const pointers = { color: 0, var: 0, number: 0 };
  for (let i11 = 0; i11 < target.values.length; i11++) {
    const type = target.types[i11];
    const originIndex = origin.indexes[type][pointers[type]];
    const originValue = origin.values[originIndex] ?? 0;
    orderedOrigin[i11] = originValue;
    pointers[type]++;
  }
  return orderedOrigin;
}
var mixComplex2;
var init_complex4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/complex.mjs"() {
    init_number4();
    init_color4();
    init_pipe2();
    init_es();
    init_color3();
    init_complex3();
    init_is_css_variable2();
    init_visibility2();
    init_immediate2();
    mixComplex2 = (origin, target) => {
      const template = complex2.createTransformer(target);
      const originStats = analyseComplexValue2(origin);
      const targetStats = analyseComplexValue2(target);
      const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;
      if (canInterpolate) {
        if (invisibleValues2.has(origin) && !targetStats.values.length || invisibleValues2.has(target) && !originStats.values.length) {
          return mixVisibility2(origin, target);
        }
        return pipe2(mixArray2(matchOrder2(originStats, targetStats), targetStats.values), template);
      } else {
        warning2(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
        return mixImmediate2(origin, target);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/index.mjs
function mix2(from, to, p13) {
  if (typeof from === "number" && typeof to === "number" && typeof p13 === "number") {
    return mixNumber3(from, to, p13);
  }
  const mixer = getMixer2(from);
  return mixer(from, to);
}
var init_mix2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/mix/index.mjs"() {
    init_complex4();
    init_number4();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs
function calcGeneratorVelocity2(resolveValue, t13, current) {
  const prevT = Math.max(t13 - velocitySampleDuration2, 0);
  return velocityPerSecond2(current - resolveValue(prevT), t13 - prevT);
}
var velocitySampleDuration2;
var init_velocity2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs"() {
    init_es();
    velocitySampleDuration2 = 5;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs
var springDefaults2;
var init_defaults4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs"() {
    springDefaults2 = {
      // Default spring physics
      stiffness: 100,
      damping: 10,
      mass: 1,
      velocity: 0,
      // Default duration/bounce-based options
      duration: 800,
      // in ms
      bounce: 0.3,
      visualDuration: 0.3,
      // in seconds
      // Rest thresholds
      restSpeed: {
        granular: 0.01,
        default: 2
      },
      restDelta: {
        granular: 5e-3,
        default: 0.5
      },
      // Limits
      minDuration: 0.01,
      // in seconds
      maxDuration: 10,
      // in seconds
      minDamping: 0.05,
      maxDamping: 1
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs
function findSpring2({ duration = springDefaults2.duration, bounce = springDefaults2.bounce, velocity = springDefaults2.velocity, mass = springDefaults2.mass }) {
  let envelope;
  let derivative;
  warning2(duration <= secondsToMilliseconds2(springDefaults2.maxDuration), "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp3(springDefaults2.minDamping, springDefaults2.maxDamping, dampingRatio);
  duration = clamp3(springDefaults2.minDuration, springDefaults2.maxDuration, millisecondsToSeconds2(duration));
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a12 = exponentialDecay - velocity;
      const b4 = calcAngularFreq2(undampedFreq2, dampingRatio);
      const c13 = Math.exp(-delta);
      return safeMin2 - a12 / b4 * c13;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d6 = delta * velocity + velocity;
      const e12 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f11 = Math.exp(-delta);
      const g9 = calcAngularFreq2(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin2 > 0 ? -1 : 1;
      return factor * ((d6 - e12) * f11) / g9;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b4 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin2 + a12 * b4;
    };
    derivative = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b4 = (velocity - undampedFreq2) * (duration * duration);
      return a12 * b4;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot2(envelope, derivative, initialGuess);
  duration = secondsToMilliseconds2(duration);
  if (isNaN(undampedFreq)) {
    return {
      stiffness: springDefaults2.stiffness,
      damping: springDefaults2.damping,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
function approximateRoot2(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i11 = 1; i11 < rootIterations2; i11++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq2(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}
var safeMin2, rootIterations2;
var init_find3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs"() {
    init_es();
    init_clamp3();
    init_defaults4();
    safeMin2 = 1e-3;
    rootIterations2 = 12;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs
function isSpringType2(options, keys3) {
  return keys3.some((key) => options[key] !== void 0);
}
function getSpringOptions2(options) {
  let springOptions = {
    velocity: springDefaults2.velocity,
    stiffness: springDefaults2.stiffness,
    damping: springDefaults2.damping,
    mass: springDefaults2.mass,
    isResolvedFromDuration: false,
    ...options
  };
  if (!isSpringType2(options, physicsKeys2) && isSpringType2(options, durationKeys2)) {
    if (options.visualDuration) {
      const visualDuration = options.visualDuration;
      const root5 = 2 * Math.PI / (visualDuration * 1.2);
      const stiffness = root5 * root5;
      const damping = 2 * clamp3(0.05, 1, 1 - (options.bounce || 0)) * Math.sqrt(stiffness);
      springOptions = {
        ...springOptions,
        mass: springDefaults2.mass,
        stiffness,
        damping
      };
    } else {
      const derived = findSpring2(options);
      springOptions = {
        ...springOptions,
        ...derived,
        mass: springDefaults2.mass
      };
      springOptions.isResolvedFromDuration = true;
    }
  }
  return springOptions;
}
function spring2(optionsOrVisualDuration = springDefaults2.visualDuration, bounce = springDefaults2.bounce) {
  const options = typeof optionsOrVisualDuration !== "object" ? {
    visualDuration: optionsOrVisualDuration,
    keyframes: [0, 1],
    bounce
  } : optionsOrVisualDuration;
  let { restSpeed, restDelta } = options;
  const origin = options.keyframes[0];
  const target = options.keyframes[options.keyframes.length - 1];
  const state2 = { done: false, value: origin };
  const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration } = getSpringOptions2({
    ...options,
    velocity: -millisecondsToSeconds2(options.velocity || 0)
  });
  const initialVelocity = velocity || 0;
  const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
  const initialDelta = target - origin;
  const undampedAngularFreq = millisecondsToSeconds2(Math.sqrt(stiffness / mass));
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? springDefaults2.restSpeed.granular : springDefaults2.restSpeed.default);
  restDelta || (restDelta = isGranularScale ? springDefaults2.restDelta.granular : springDefaults2.restDelta.default);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = calcAngularFreq2(undampedAngularFreq, dampingRatio);
    resolveSpring = (t13) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t13);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t13) + initialDelta * Math.cos(angularFreq * t13));
    };
  } else if (dampingRatio === 1) {
    resolveSpring = (t13) => target - Math.exp(-undampedAngularFreq * t13) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t13);
  } else {
    const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t13) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t13);
      const freqForT = Math.min(dampedAngularFreq * t13, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  const generator = {
    calculatedDuration: isResolvedFromDuration ? duration || null : null,
    next: (t13) => {
      const current = resolveSpring(t13);
      if (!isResolvedFromDuration) {
        let currentVelocity = 0;
        if (dampingRatio < 1) {
          currentVelocity = t13 === 0 ? secondsToMilliseconds2(initialVelocity) : calcGeneratorVelocity2(resolveSpring, t13, current);
        }
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state2.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state2.done = t13 >= duration;
      }
      state2.value = state2.done ? target : current;
      return state2;
    },
    toString: () => {
      const calculatedDuration = Math.min(calcGeneratorDuration2(generator), maxGeneratorDuration2);
      const easing = generateLinearEasing2((progress3) => generator.next(calculatedDuration * progress3).value, calculatedDuration, 30);
      return calculatedDuration + "ms " + easing;
    },
    toTransition: () => {
    }
  };
  return generator;
}
var durationKeys2, physicsKeys2;
var init_spring2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs"() {
    init_es2();
    init_es();
    init_clamp3();
    init_velocity2();
    init_defaults4();
    init_find3();
    durationKeys2 = ["duration", "bounce"];
    physicsKeys2 = ["stiffness", "damping", "mass"];
    spring2.applyToOptions = (options) => {
      const generatorOptions = createGeneratorEasing2(options, 100, spring2);
      options.ease = supportsLinearEasing2() ? generatorOptions.ease : "easeOut";
      options.duration = secondsToMilliseconds2(generatorOptions.duration);
      options.type = "keyframes";
      return options;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs
function inertia2({ keyframes: keyframes3, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed }) {
  const origin = keyframes3[0];
  const state2 = {
    done: false,
    value: origin
  };
  const isOutOfBounds = (v5) => min !== void 0 && v5 < min || max !== void 0 && v5 > max;
  const nearestBoundary = (v5) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v5) < Math.abs(max - v5) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = origin + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - origin;
  const calcDelta = (t13) => -amplitude * Math.exp(-t13 / timeConstant);
  const calcLatest = (t13) => target + calcDelta(t13);
  const applyFriction = (t13) => {
    const delta = calcDelta(t13);
    const latest = calcLatest(t13);
    state2.done = Math.abs(delta) <= restDelta;
    state2.value = state2.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t13) => {
    if (!isOutOfBounds(state2.value))
      return;
    timeReachedBoundary = t13;
    spring$1 = spring2({
      keyframes: [state2.value, nearestBoundary(state2.value)],
      velocity: calcGeneratorVelocity2(calcLatest, t13, state2.value),
      // TODO: This should be passing * 1000
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return {
    calculatedDuration: null,
    next: (t13) => {
      let hasUpdatedFrame = false;
      if (!spring$1 && timeReachedBoundary === void 0) {
        hasUpdatedFrame = true;
        applyFriction(t13);
        checkCatchBoundary(t13);
      }
      if (timeReachedBoundary !== void 0 && t13 >= timeReachedBoundary) {
        return spring$1.next(t13 - timeReachedBoundary);
      } else {
        !hasUpdatedFrame && applyFriction(t13);
        return state2;
      }
    }
  };
}
var init_inertia2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs"() {
    init_spring2();
    init_velocity2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/ease.mjs
var easeIn2, easeOut2, easeInOut2;
var init_ease2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/ease.mjs"() {
    init_cubic_bezier4();
    easeIn2 = /* @__PURE__ */ cubicBezier2(0.42, 0, 1, 1);
    easeOut2 = /* @__PURE__ */ cubicBezier2(0, 0, 0.58, 1);
    easeInOut2 = /* @__PURE__ */ cubicBezier2(0.42, 0, 0.58, 1);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs
var isEasingArray2;
var init_is_easing_array2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs"() {
    isEasingArray2 = (ease3) => {
      return Array.isArray(ease3) && typeof ease3[0] !== "number";
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/utils/map.mjs
var easingLookup2, easingDefinitionToFunction2;
var init_map2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/easing/utils/map.mjs"() {
    init_es2();
    init_es();
    init_anticipate2();
    init_back2();
    init_circ2();
    init_cubic_bezier4();
    init_ease2();
    easingLookup2 = {
      linear: noop2,
      easeIn: easeIn2,
      easeInOut: easeInOut2,
      easeOut: easeOut2,
      circIn: circIn2,
      circInOut: circInOut2,
      circOut: circOut2,
      backIn: backIn2,
      backInOut: backInOut2,
      backOut: backOut2,
      anticipate: anticipate2
    };
    easingDefinitionToFunction2 = (definition) => {
      if (isBezierDefinition2(definition)) {
        invariant2(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);
        const [x1, y1, x22, y22] = definition;
        return cubicBezier2(x1, y1, x22, y22);
      } else if (typeof definition === "string") {
        invariant2(easingLookup2[definition] !== void 0, `Invalid easing type '${definition}'`);
        return easingLookup2[definition];
      }
      return definition;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/interpolate.mjs
function createMixers2(output, ease3, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || mix2;
  const numMixers = output.length - 1;
  for (let i11 = 0; i11 < numMixers; i11++) {
    let mixer = mixerFactory(output[i11], output[i11 + 1]);
    if (ease3) {
      const easingFunction = Array.isArray(ease3) ? ease3[i11] || noop2 : ease3;
      mixer = pipe2(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate2(input, output, { clamp: isClamp = true, ease: ease3, mixer } = {}) {
  const inputLength = input.length;
  invariant2(inputLength === output.length, "Both input and output ranges must be the same length");
  if (inputLength === 1)
    return () => output[0];
  if (inputLength === 2 && output[0] === output[1])
    return () => output[1];
  const isZeroDeltaRange = input[0] === input[1];
  if (input[0] > input[inputLength - 1]) {
    input = [...input].reverse();
    output = [...output].reverse();
  }
  const mixers = createMixers2(output, ease3, mixer);
  const numMixers = mixers.length;
  const interpolator = (v5) => {
    if (isZeroDeltaRange && v5 < input[0])
      return output[0];
    let i11 = 0;
    if (numMixers > 1) {
      for (; i11 < input.length - 2; i11++) {
        if (v5 < input[i11 + 1])
          break;
      }
    }
    const progressInRange = progress2(input[i11], input[i11 + 1], v5);
    return mixers[i11](progressInRange);
  };
  return isClamp ? (v5) => interpolator(clamp3(input[0], input[inputLength - 1], v5)) : interpolator;
}
var init_interpolate2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/interpolate.mjs"() {
    init_es();
    init_clamp3();
    init_mix2();
    init_pipe2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/fill.mjs
function fillOffset2(offset, remaining) {
  const min = offset[offset.length - 1];
  for (let i11 = 1; i11 <= remaining; i11++) {
    const offsetProgress = progress2(0, remaining, i11);
    offset.push(mixNumber3(min, 1, offsetProgress));
  }
}
var init_fill2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/fill.mjs"() {
    init_es();
    init_number4();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/default.mjs
function defaultOffset3(arr) {
  const offset = [0];
  fillOffset2(offset, arr.length - 1);
  return offset;
}
var init_default2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/default.mjs"() {
    init_fill2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/time.mjs
function convertOffsetToTimes2(offset, duration) {
  return offset.map((o6) => o6 * duration);
}
var init_time2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/offsets/time.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs
function defaultEasing2(values2, easing) {
  return values2.map(() => easing || easeInOut2).splice(0, values2.length - 1);
}
function keyframes2({ duration = 300, keyframes: keyframeValues, times, ease: ease3 = "easeInOut" }) {
  const easingFunctions = isEasingArray2(ease3) ? ease3.map(easingDefinitionToFunction2) : easingDefinitionToFunction2(ease3);
  const state2 = {
    done: false,
    value: keyframeValues[0]
  };
  const absoluteTimes = convertOffsetToTimes2(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset3(keyframeValues),
    duration
  );
  const mapTimeToKeyframe = interpolate2(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing2(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t13) => {
      state2.value = mapTimeToKeyframe(t13);
      state2.done = t13 >= duration;
      return state2;
    }
  };
}
var init_keyframes2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs"() {
    init_ease2();
    init_is_easing_array2();
    init_map2();
    init_interpolate2();
    init_default2();
    init_time2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs
var frameloopDriver2;
var init_driver_frameloop2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs"() {
    init_es2();
    frameloopDriver2 = (update) => {
      const passTimestamp = ({ timestamp }) => update(timestamp);
      return {
        start: () => frame2.update(passTimestamp, true),
        stop: () => cancelFrame2(passTimestamp),
        /**
         * If we're processing this frame we can use the
         * framelocked timestamp to keep things in sync.
         */
        now: () => frameData2.isProcessing ? frameData2.timestamp : time2.now()
      };
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs
var generators2, percentToProgress2, MainThreadAnimation2;
var init_MainThreadAnimation2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs"() {
    init_es2();
    init_es();
    init_KeyframesResolver2();
    init_clamp3();
    init_mix2();
    init_pipe2();
    init_inertia2();
    init_keyframes2();
    init_spring2();
    init_BaseAnimation2();
    init_driver_frameloop2();
    init_get_final_keyframe2();
    generators2 = {
      decay: inertia2,
      inertia: inertia2,
      tween: keyframes2,
      keyframes: keyframes2,
      spring: spring2
    };
    percentToProgress2 = (percent3) => percent3 / 100;
    MainThreadAnimation2 = class extends BaseAnimation2 {
      constructor(options) {
        super(options);
        this.holdTime = null;
        this.cancelTime = null;
        this.currentTime = 0;
        this.playbackSpeed = 1;
        this.pendingPlayState = "running";
        this.startTime = null;
        this.state = "idle";
        this.stop = () => {
          this.resolver.cancel();
          this.isStopped = true;
          if (this.state === "idle")
            return;
          this.teardown();
          const { onStop } = this.options;
          onStop && onStop();
        };
        const { name: name2, motionValue: motionValue3, element, keyframes: keyframes3 } = this.options;
        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver2;
        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);
        this.resolver = new KeyframeResolver$1(keyframes3, onResolved, name2, motionValue3, element);
        this.resolver.scheduleResolve();
      }
      flatten() {
        super.flatten();
        if (this._resolved) {
          Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));
        }
      }
      initPlayback(keyframes$1) {
        const { type = "keyframes", repeat = 0, repeatDelay = 0, repeatType, velocity = 0 } = this.options;
        const generatorFactory = isGenerator2(type) ? type : generators2[type] || keyframes2;
        let mapPercentToKeyframes;
        let mirroredGenerator;
        if (false) {
          invariant2(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);
        }
        if (generatorFactory !== keyframes2 && typeof keyframes$1[0] !== "number") {
          mapPercentToKeyframes = pipe2(percentToProgress2, mix2(keyframes$1[0], keyframes$1[1]));
          keyframes$1 = [0, 100];
        }
        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });
        if (repeatType === "mirror") {
          mirroredGenerator = generatorFactory({
            ...this.options,
            keyframes: [...keyframes$1].reverse(),
            velocity: -velocity
          });
        }
        if (generator.calculatedDuration === null) {
          generator.calculatedDuration = calcGeneratorDuration2(generator);
        }
        const { calculatedDuration } = generator;
        const resolvedDuration = calculatedDuration + repeatDelay;
        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;
        return {
          generator,
          mirroredGenerator,
          mapPercentToKeyframes,
          calculatedDuration,
          resolvedDuration,
          totalDuration
        };
      }
      onPostResolved() {
        const { autoplay = true } = this.options;
        activeAnimations2.mainThread++;
        this.play();
        if (this.pendingPlayState === "paused" || !autoplay) {
          this.pause();
        } else {
          this.state = this.pendingPlayState;
        }
      }
      tick(timestamp, sample = false) {
        const { resolved } = this;
        if (!resolved) {
          const { keyframes: keyframes4 } = this.options;
          return { done: true, value: keyframes4[keyframes4.length - 1] };
        }
        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes: keyframes3, calculatedDuration, totalDuration, resolvedDuration } = resolved;
        if (this.startTime === null)
          return generator.next(0);
        const { delay: delay3, repeat, repeatType, repeatDelay, onUpdate } = this.options;
        if (this.speed > 0) {
          this.startTime = Math.min(this.startTime, timestamp);
        } else if (this.speed < 0) {
          this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);
        }
        if (sample) {
          this.currentTime = timestamp;
        } else if (this.holdTime !== null) {
          this.currentTime = this.holdTime;
        } else {
          this.currentTime = Math.round(timestamp - this.startTime) * this.speed;
        }
        const timeWithoutDelay = this.currentTime - delay3 * (this.speed >= 0 ? 1 : -1);
        const isInDelayPhase = this.speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
        this.currentTime = Math.max(timeWithoutDelay, 0);
        if (this.state === "finished" && this.holdTime === null) {
          this.currentTime = totalDuration;
        }
        let elapsed = this.currentTime;
        let frameGenerator = generator;
        if (repeat) {
          const progress3 = Math.min(this.currentTime, totalDuration) / resolvedDuration;
          let currentIteration = Math.floor(progress3);
          let iterationProgress = progress3 % 1;
          if (!iterationProgress && progress3 >= 1) {
            iterationProgress = 1;
          }
          iterationProgress === 1 && currentIteration--;
          currentIteration = Math.min(currentIteration, repeat + 1);
          const isOddIteration = Boolean(currentIteration % 2);
          if (isOddIteration) {
            if (repeatType === "reverse") {
              iterationProgress = 1 - iterationProgress;
              if (repeatDelay) {
                iterationProgress -= repeatDelay / resolvedDuration;
              }
            } else if (repeatType === "mirror") {
              frameGenerator = mirroredGenerator;
            }
          }
          elapsed = clamp3(0, 1, iterationProgress) * resolvedDuration;
        }
        const state2 = isInDelayPhase ? { done: false, value: keyframes3[0] } : frameGenerator.next(elapsed);
        if (mapPercentToKeyframes) {
          state2.value = mapPercentToKeyframes(state2.value);
        }
        let { done } = state2;
        if (!isInDelayPhase && calculatedDuration !== null) {
          done = this.speed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;
        }
        const isAnimationFinished = this.holdTime === null && (this.state === "finished" || this.state === "running" && done);
        if (isAnimationFinished && finalKeyframe !== void 0) {
          state2.value = getFinalKeyframe2(keyframes3, this.options, finalKeyframe);
        }
        if (onUpdate) {
          onUpdate(state2.value);
        }
        if (isAnimationFinished) {
          this.finish();
        }
        return state2;
      }
      get duration() {
        const { resolved } = this;
        return resolved ? millisecondsToSeconds2(resolved.calculatedDuration) : 0;
      }
      get time() {
        return millisecondsToSeconds2(this.currentTime);
      }
      set time(newTime) {
        newTime = secondsToMilliseconds2(newTime);
        this.currentTime = newTime;
        if (this.holdTime !== null || this.speed === 0) {
          this.holdTime = newTime;
        } else if (this.driver) {
          this.startTime = this.driver.now() - newTime / this.speed;
        }
      }
      get speed() {
        return this.playbackSpeed;
      }
      set speed(newSpeed) {
        const hasChanged = this.playbackSpeed !== newSpeed;
        this.playbackSpeed = newSpeed;
        if (hasChanged) {
          this.time = millisecondsToSeconds2(this.currentTime);
        }
      }
      play() {
        if (!this.resolver.isScheduled) {
          this.resolver.resume();
        }
        if (!this._resolved) {
          this.pendingPlayState = "running";
          return;
        }
        if (this.isStopped)
          return;
        const { driver = frameloopDriver2, onPlay, startTime } = this.options;
        if (!this.driver) {
          this.driver = driver((timestamp) => this.tick(timestamp));
        }
        onPlay && onPlay();
        const now3 = this.driver.now();
        if (this.holdTime !== null) {
          this.startTime = now3 - this.holdTime;
        } else if (!this.startTime) {
          this.startTime = startTime ?? this.calcStartTime();
        } else if (this.state === "finished") {
          this.startTime = now3;
        }
        if (this.state === "finished") {
          this.updateFinishedPromise();
        }
        this.cancelTime = this.startTime;
        this.holdTime = null;
        this.state = "running";
        this.driver.start();
      }
      pause() {
        if (!this._resolved) {
          this.pendingPlayState = "paused";
          return;
        }
        this.state = "paused";
        this.holdTime = this.currentTime ?? 0;
      }
      complete() {
        if (this.state !== "running") {
          this.play();
        }
        this.pendingPlayState = this.state = "finished";
        this.holdTime = null;
      }
      finish() {
        this.teardown();
        this.state = "finished";
        const { onComplete } = this.options;
        onComplete && onComplete();
      }
      cancel() {
        if (this.cancelTime !== null) {
          this.tick(this.cancelTime);
        }
        this.teardown();
        this.updateFinishedPromise();
      }
      teardown() {
        this.state = "idle";
        this.stopDriver();
        this.resolveFinishedPromise();
        this.updateFinishedPromise();
        this.startTime = this.cancelTime = null;
        this.resolver.cancel();
        activeAnimations2.mainThread--;
      }
      stopDriver() {
        if (!this.driver)
          return;
        this.driver.stop();
        this.driver = void 0;
      }
      sample(time3) {
        this.startTime = 0;
        return this.tick(time3, true);
      }
      get finished() {
        return this.currentFinishedPromise;
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs
var acceleratedValues2;
var init_accelerated_values2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs"() {
    acceleratedValues2 = /* @__PURE__ */ new Set([
      "opacity",
      "clipPath",
      "filter",
      "transform"
      // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
      // or until we implement support for linear() easing.
      // "background-color"
    ]);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs
var supportsWaapi2;
var init_supports_waapi2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs"() {
    init_es();
    supportsWaapi2 = /* @__PURE__ */ memo2(() => Object.hasOwnProperty.call(Element.prototype, "animate"));
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs
function requiresPregeneratedKeyframes2(options) {
  return isGenerator2(options.type) || options.type === "spring" || !isWaapiSupportedEasing2(options.ease);
}
function pregenerateKeyframes2(keyframes3, options) {
  const sampleAnimation = new MainThreadAnimation2({
    ...options,
    keyframes: keyframes3,
    repeat: 0,
    delay: 0,
    isGenerator: true
  });
  let state2 = { done: false, value: keyframes3[0] };
  const pregeneratedKeyframes = [];
  let t13 = 0;
  while (!state2.done && t13 < maxDuration2) {
    state2 = sampleAnimation.sample(t13);
    pregeneratedKeyframes.push(state2.value);
    t13 += sampleDelta2;
  }
  return {
    times: void 0,
    keyframes: pregeneratedKeyframes,
    duration: t13 - sampleDelta2,
    ease: "linear"
  };
}
function isUnsupportedEase2(key) {
  return key in unsupportedEasingFunctions2;
}
var sampleDelta2, maxDuration2, unsupportedEasingFunctions2, AcceleratedAnimation2;
var init_AcceleratedAnimation2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs"() {
    init_es2();
    init_es();
    init_anticipate2();
    init_back2();
    init_circ2();
    init_DOMKeyframesResolver2();
    init_BaseAnimation2();
    init_MainThreadAnimation2();
    init_accelerated_values2();
    init_get_final_keyframe2();
    init_supports_waapi2();
    sampleDelta2 = 10;
    maxDuration2 = 2e4;
    unsupportedEasingFunctions2 = {
      anticipate: anticipate2,
      backInOut: backInOut2,
      circInOut: circInOut2
    };
    AcceleratedAnimation2 = class extends BaseAnimation2 {
      constructor(options) {
        super(options);
        const { name: name2, motionValue: motionValue3, element, keyframes: keyframes3 } = this.options;
        this.resolver = new DOMKeyframesResolver2(keyframes3, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name2, motionValue3, element);
        this.resolver.scheduleResolve();
      }
      initPlayback(keyframes3, finalKeyframe) {
        let { duration = 300, times, ease: ease3, type, motionValue: motionValue3, name: name2, startTime } = this.options;
        if (!motionValue3.owner || !motionValue3.owner.current) {
          return false;
        }
        if (typeof ease3 === "string" && supportsLinearEasing2() && isUnsupportedEase2(ease3)) {
          ease3 = unsupportedEasingFunctions2[ease3];
        }
        if (requiresPregeneratedKeyframes2(this.options)) {
          const { onComplete, onUpdate, motionValue: motionValue4, element, ...options } = this.options;
          const pregeneratedAnimation = pregenerateKeyframes2(keyframes3, options);
          keyframes3 = pregeneratedAnimation.keyframes;
          if (keyframes3.length === 1) {
            keyframes3[1] = keyframes3[0];
          }
          duration = pregeneratedAnimation.duration;
          times = pregeneratedAnimation.times;
          ease3 = pregeneratedAnimation.ease;
          type = "keyframes";
        }
        const animation = startWaapiAnimation2(motionValue3.owner.current, name2, keyframes3, { ...this.options, duration, times, ease: ease3 });
        animation.startTime = startTime ?? this.calcStartTime();
        if (this.pendingTimeline) {
          attachTimeline2(animation, this.pendingTimeline);
          this.pendingTimeline = void 0;
        } else {
          animation.onfinish = () => {
            const { onComplete } = this.options;
            motionValue3.set(getFinalKeyframe2(keyframes3, this.options, finalKeyframe));
            onComplete && onComplete();
            this.cancel();
            this.resolveFinishedPromise();
          };
        }
        return {
          animation,
          duration,
          times,
          type,
          ease: ease3,
          keyframes: keyframes3
        };
      }
      get duration() {
        const { resolved } = this;
        if (!resolved)
          return 0;
        const { duration } = resolved;
        return millisecondsToSeconds2(duration);
      }
      get time() {
        const { resolved } = this;
        if (!resolved)
          return 0;
        const { animation } = resolved;
        return millisecondsToSeconds2(animation.currentTime || 0);
      }
      set time(newTime) {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.currentTime = secondsToMilliseconds2(newTime);
      }
      get speed() {
        const { resolved } = this;
        if (!resolved)
          return 1;
        const { animation } = resolved;
        return animation.playbackRate;
      }
      get finished() {
        return this.resolved.animation.finished;
      }
      set speed(newSpeed) {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.playbackRate = newSpeed;
      }
      get state() {
        const { resolved } = this;
        if (!resolved)
          return "idle";
        const { animation } = resolved;
        return animation.playState;
      }
      get startTime() {
        const { resolved } = this;
        if (!resolved)
          return null;
        const { animation } = resolved;
        return animation.startTime;
      }
      /**
       * Replace the default DocumentTimeline with another AnimationTimeline.
       * Currently used for scroll animations.
       */
      attachTimeline(timeline) {
        if (!this._resolved) {
          this.pendingTimeline = timeline;
        } else {
          const { resolved } = this;
          if (!resolved)
            return noop2;
          const { animation } = resolved;
          attachTimeline2(animation, timeline);
        }
        return noop2;
      }
      play() {
        if (this.isStopped)
          return;
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        if (animation.playState === "finished") {
          this.updateFinishedPromise();
        }
        animation.play();
      }
      pause() {
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation } = resolved;
        animation.pause();
      }
      stop() {
        this.resolver.cancel();
        this.isStopped = true;
        if (this.state === "idle")
          return;
        this.resolveFinishedPromise();
        this.updateFinishedPromise();
        const { resolved } = this;
        if (!resolved)
          return;
        const { animation, keyframes: keyframes3, duration, type, ease: ease3, times } = resolved;
        if (animation.playState === "idle" || animation.playState === "finished") {
          return;
        }
        if (this.time) {
          const { motionValue: motionValue3, onUpdate, onComplete, element, ...options } = this.options;
          const sampleAnimation = new MainThreadAnimation2({
            ...options,
            keyframes: keyframes3,
            duration,
            type,
            ease: ease3,
            times,
            isGenerator: true
          });
          const sampleTime = secondsToMilliseconds2(this.time);
          motionValue3.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta2).value, sampleAnimation.sample(sampleTime).value, sampleDelta2);
        }
        const { onStop } = this.options;
        onStop && onStop();
        this.cancel();
      }
      complete() {
        const { resolved } = this;
        if (!resolved)
          return;
        resolved.animation.finish();
      }
      cancel() {
        const { resolved } = this;
        if (!resolved)
          return;
        resolved.animation.cancel();
      }
      static supports(options) {
        const { motionValue: motionValue3, name: name2, repeatDelay, repeatType, damping, type } = options;
        if (!motionValue3 || !motionValue3.owner || !(motionValue3.owner.current instanceof HTMLElement)) {
          return false;
        }
        const { onUpdate, transformTemplate } = motionValue3.owner.getProps();
        return supportsWaapi2() && name2 && acceleratedValues2.has(name2) && (name2 !== "transform" || !transformTemplate) && /**
         * If we're outputting values to onUpdate then we can't use WAAPI as there's
         * no way to read the value from WAAPI every frame.
         */
        !onUpdate && !repeatDelay && repeatType !== "mirror" && damping !== 0 && type !== "inertia";
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring2, criticallyDampedSpring2, keyframesTransition2, ease2, getDefaultTransition2;
var init_default_transitions2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs"() {
    init_keys_transform2();
    underDampedSpring2 = {
      type: "spring",
      stiffness: 500,
      damping: 25,
      restSpeed: 10
    };
    criticallyDampedSpring2 = (target) => ({
      type: "spring",
      stiffness: 550,
      damping: target === 0 ? 2 * Math.sqrt(550) : 30,
      restSpeed: 10
    });
    keyframesTransition2 = {
      type: "keyframes",
      duration: 0.8
    };
    ease2 = {
      type: "keyframes",
      ease: [0.25, 0.1, 0.35, 1],
      duration: 0.3
    };
    getDefaultTransition2 = (valueKey, { keyframes: keyframes3 }) => {
      if (keyframes3.length > 2) {
        return keyframesTransition2;
      } else if (transformProps2.has(valueKey)) {
        return valueKey.startsWith("scale") ? criticallyDampedSpring2(keyframes3[1]) : underDampedSpring2;
      }
      return ease2;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs
function isTransitionDefined2({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}
var init_is_transition_defined2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs
var animateMotionValue2;
var init_motion_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs"() {
    init_es2();
    init_es();
    init_use_instant_transition_state2();
    init_AcceleratedAnimation2();
    init_MainThreadAnimation2();
    init_get_final_keyframe2();
    init_default_transitions2();
    init_is_transition_defined2();
    animateMotionValue2 = (name2, value, target, transition = {}, element, isHandoff) => (onComplete) => {
      const valueTransition = getValueTransition2(transition, name2) || {};
      const delay3 = valueTransition.delay || transition.delay || 0;
      let { elapsed = 0 } = transition;
      elapsed = elapsed - secondsToMilliseconds2(delay3);
      let options = {
        keyframes: Array.isArray(target) ? target : [null, target],
        ease: "easeOut",
        velocity: value.getVelocity(),
        ...valueTransition,
        delay: -elapsed,
        onUpdate: (v5) => {
          value.set(v5);
          valueTransition.onUpdate && valueTransition.onUpdate(v5);
        },
        onComplete: () => {
          onComplete();
          valueTransition.onComplete && valueTransition.onComplete();
        },
        name: name2,
        motionValue: value,
        element: isHandoff ? void 0 : element
      };
      if (!isTransitionDefined2(valueTransition)) {
        options = {
          ...options,
          ...getDefaultTransition2(name2, options)
        };
      }
      if (options.duration) {
        options.duration = secondsToMilliseconds2(options.duration);
      }
      if (options.repeatDelay) {
        options.repeatDelay = secondsToMilliseconds2(options.repeatDelay);
      }
      if (options.from !== void 0) {
        options.keyframes[0] = options.from;
      }
      let shouldSkip = false;
      if (options.type === false || options.duration === 0 && !options.repeatDelay) {
        options.duration = 0;
        if (options.delay === 0) {
          shouldSkip = true;
        }
      }
      if (instantAnimationState2.current || MotionGlobalConfig2.skipAnimations) {
        shouldSkip = true;
        options.duration = 0;
        options.delay = 0;
      }
      options.allowFlatten = !valueTransition.type && !valueTransition.ease;
      if (shouldSkip && !isHandoff && value.get() !== void 0) {
        const finalKeyframe = getFinalKeyframe2(options.keyframes, valueTransition);
        if (finalKeyframe !== void 0) {
          frame2.update(() => {
            options.onUpdate(finalKeyframe);
            options.onComplete();
          });
          return new GroupAnimationWithThen2([]);
        }
      }
      if (!isHandoff && AcceleratedAnimation2.supports(options)) {
        return new AcceleratedAnimation2(options);
      } else {
        return new MainThreadAnimation2(options);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs
function shouldBlockAnimation2({ protectedKeys, needsAnimating }, key) {
  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}
function animateTarget2(visualElement, targetAndTransition, { delay: delay3 = 0, transitionOverride, type } = {}) {
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;
  if (transitionOverride)
    transition = transitionOverride;
  const animations3 = [];
  const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];
  for (const key in target) {
    const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);
    const valueTarget = target[key];
    if (valueTarget === void 0 || animationTypeState && shouldBlockAnimation2(animationTypeState, key)) {
      continue;
    }
    const valueTransition = {
      delay: delay3,
      ...getValueTransition2(transition || {}, key)
    };
    let isHandoff = false;
    if (window.MotionHandoffAnimation) {
      const appearId = getOptimisedAppearId2(visualElement);
      if (appearId) {
        const startTime = window.MotionHandoffAnimation(appearId, key, frame2);
        if (startTime !== null) {
          valueTransition.startTime = startTime;
          isHandoff = true;
        }
      }
    }
    addValueToWillChange2(visualElement, key);
    value.start(animateMotionValue2(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys2.has(key) ? { type: false } : valueTransition, visualElement, isHandoff));
    const animation = value.animation;
    if (animation) {
      animations3.push(animation);
    }
  }
  if (transitionEnd) {
    Promise.all(animations3).then(() => {
      frame2.update(() => {
        transitionEnd && setTarget2(visualElement, transitionEnd);
      });
    });
  }
  return animations3;
}
var init_visual_element_target2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs"() {
    init_es2();
    init_keys_position2();
    init_setters2();
    init_add_will_change2();
    init_get_appear_id2();
    init_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs
function animateVariant2(visualElement, variant, options = {}) {
  const resolved = resolveVariant2(visualElement, variant, options.type === "exit" ? visualElement.presenceContext?.custom : void 0);
  let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  const getAnimation = resolved ? () => Promise.all(animateTarget2(visualElement, resolved, options)) : () => Promise.resolve();
  const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    const { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren2(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve();
  const { when } = transition;
  if (when) {
    const [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else {
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
  }
}
function animateChildren2(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  const animations3 = [];
  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
  const generateStaggerDuration = staggerDirection === 1 ? (i11 = 0) => i11 * staggerChildren : (i11 = 0) => maxStaggerDuration - i11 * staggerChildren;
  Array.from(visualElement.variantChildren).sort(sortByTreeOrder2).forEach((child, i11) => {
    child.notify("AnimationStart", variant);
    animations3.push(animateVariant2(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i11)
    }).then(() => child.notify("AnimationComplete", variant)));
  });
  return Promise.all(animations3);
}
function sortByTreeOrder2(a12, b4) {
  return a12.sortNodePosition(b4);
}
var init_visual_element_variant2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs"() {
    init_resolve_dynamic_variants2();
    init_visual_element_target2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs
function animateVisualElement2(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    const animations3 = definition.map((variant) => animateVariant2(visualElement, variant, options));
    animation = Promise.all(animations3);
  } else if (typeof definition === "string") {
    animation = animateVariant2(visualElement, definition, options);
  } else {
    const resolvedDefinition = typeof definition === "function" ? resolveVariant2(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget2(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => {
    visualElement.notify("AnimationComplete", definition);
  });
}
var init_visual_element2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs"() {
    init_resolve_dynamic_variants2();
    init_visual_element_target2();
    init_visual_element_variant2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare2(next, prev) {
  if (!Array.isArray(prev))
    return false;
  const prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (let i11 = 0; i11 < prevLength; i11++) {
    if (prev[i11] !== next[i11])
      return false;
  }
  return true;
}
var init_shallow_compare2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs
function getVariantContext2(visualElement) {
  if (!visualElement)
    return void 0;
  if (!visualElement.isControllingVariants) {
    const context2 = visualElement.parent ? getVariantContext2(visualElement.parent) || {} : {};
    if (visualElement.props.initial !== void 0) {
      context2.initial = visualElement.props.initial;
    }
    return context2;
  }
  const context = {};
  for (let i11 = 0; i11 < numVariantProps2; i11++) {
    const name2 = variantProps2[i11];
    const prop = visualElement.props[name2];
    if (isVariantLabel2(prop) || prop === false) {
      context[name2] = prop;
    }
  }
  return context;
}
var numVariantProps2;
var init_get_variant_context2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs"() {
    init_is_variant_label2();
    init_variant_props2();
    numVariantProps2 = variantProps2.length;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
function animateList2(visualElement) {
  return (animations3) => Promise.all(animations3.map(({ animation, options }) => animateVisualElement2(visualElement, animation, options)));
}
function createAnimationState2(visualElement) {
  let animate = animateList2(visualElement);
  let state2 = createState2();
  let isInitialRender = true;
  const buildResolvedTypeValues = (type) => (acc, definition) => {
    const resolved = resolveVariant2(visualElement, definition, type === "exit" ? visualElement.presenceContext?.custom : void 0);
    if (resolved) {
      const { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate = makeAnimator(visualElement);
  }
  function animateChanges(changedActiveType) {
    const { props } = visualElement;
    const context = getVariantContext2(visualElement.parent) || {};
    const animations3 = [];
    const removedKeys = /* @__PURE__ */ new Set();
    let encounteredKeys = {};
    let removedVariantIndex = Infinity;
    for (let i11 = 0; i11 < numAnimationTypes2; i11++) {
      const type = reversePriorityOrder2[i11];
      const typeState = state2[type];
      const prop = props[type] !== void 0 ? props[type] : context[type];
      const propIsVariant = isVariantLabel2(prop);
      const activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i11;
      let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = { ...encounteredKeys };
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls2(prop) || typeof prop === "boolean"
      ) {
        continue;
      }
      const variantDidChange = checkVariantsDidChange2(typeState.prevProp, prop);
      let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i11 > removedVariantIndex && propIsVariant;
      let handledRemovedValues = false;
      const definitionList = Array.isArray(prop) ? prop : [prop];
      let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});
      if (activeDelta === false)
        resolvedValues = {};
      const { prevResolvedValues = {} } = typeState;
      const allKeys = {
        ...prevResolvedValues,
        ...resolvedValues
      };
      const markToAnimate = (key) => {
        shouldAnimateType = true;
        if (removedKeys.has(key)) {
          handledRemovedValues = true;
          removedKeys.delete(key);
        }
        typeState.needsAnimating[key] = true;
        const motionValue3 = visualElement.getValue(key);
        if (motionValue3)
          motionValue3.liveStyle = false;
      };
      for (const key in allKeys) {
        const next = resolvedValues[key];
        const prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        let valueHasChanged = false;
        if (isKeyframesTarget2(next) && isKeyframesTarget2(prev)) {
          valueHasChanged = !shallowCompare2(next, prev);
        } else {
          valueHasChanged = next !== prev;
        }
        if (valueHasChanged) {
          if (next !== void 0 && next !== null) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = { ...encounteredKeys, ...resolvedValues };
      }
      if (isInitialRender && visualElement.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      const willAnimateViaParent = isInherited && variantDidChange;
      const needsAnimating = !willAnimateViaParent || handledRemovedValues;
      if (shouldAnimateType && needsAnimating) {
        animations3.push(...definitionList.map((animation) => ({
          animation,
          options: { type }
        })));
      }
    }
    if (removedKeys.size) {
      const fallbackAnimation = {};
      if (typeof props.initial !== "boolean") {
        const initialTransition = resolveVariant2(visualElement, Array.isArray(props.initial) ? props.initial[0] : props.initial);
        if (initialTransition && initialTransition.transition) {
          fallbackAnimation.transition = initialTransition.transition;
        }
      }
      removedKeys.forEach((key) => {
        const fallbackTarget = visualElement.getBaseTarget(key);
        const motionValue3 = visualElement.getValue(key);
        if (motionValue3)
          motionValue3.liveStyle = true;
        fallbackAnimation[key] = fallbackTarget ?? null;
      });
      animations3.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations3.length);
    if (isInitialRender && (props.initial === false || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate(animations3) : Promise.resolve();
  }
  function setActive(type, isActive) {
    if (state2[type].isActive === isActive)
      return Promise.resolve();
    visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));
    state2[type].isActive = isActive;
    const animations3 = animateChanges(type);
    for (const key in state2) {
      state2[key].protectedKeys = {};
    }
    return animations3;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state2,
    reset: () => {
      state2 = createState2();
      isInitialRender = true;
    }
  };
}
function checkVariantsDidChange2(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (Array.isArray(next)) {
    return !shallowCompare2(next, prev);
  }
  return false;
}
function createTypeState2(isActive = false) {
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState2() {
  return {
    animate: createTypeState2(true),
    whileInView: createTypeState2(),
    whileHover: createTypeState2(),
    whileTap: createTypeState2(),
    whileDrag: createTypeState2(),
    whileFocus: createTypeState2(),
    exit: createTypeState2()
  };
}
var reversePriorityOrder2, numAnimationTypes2;
var init_animation_state2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs"() {
    init_visual_element2();
    init_is_animation_controls2();
    init_is_keyframes_target2();
    init_shallow_compare2();
    init_get_variant_context2();
    init_is_variant_label2();
    init_resolve_dynamic_variants2();
    init_variant_props2();
    reversePriorityOrder2 = [...variantPriorityOrder2].reverse();
    numAnimationTypes2 = variantPriorityOrder2.length;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/Feature.mjs
var Feature2;
var init_Feature2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/Feature.mjs"() {
    Feature2 = class {
      constructor(node) {
        this.isMounted = false;
        this.node = node;
      }
      update() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs
var AnimationFeature2;
var init_animation2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs"() {
    init_is_animation_controls2();
    init_animation_state2();
    init_Feature2();
    AnimationFeature2 = class extends Feature2 {
      /**
       * We dynamically generate the AnimationState manager as it contains a reference
       * to the underlying animation library. We only want to load that if we load this,
       * so people can optionally code split it out using the `m` component.
       */
      constructor(node) {
        super(node);
        node.animationState || (node.animationState = createAnimationState2(node));
      }
      updateAnimationControlsSubscription() {
        const { animate } = this.node.getProps();
        if (isAnimationControls2(animate)) {
          this.unmountControls = animate.subscribe(this.node);
        }
      }
      /**
       * Subscribe any provided AnimationControls to the component's VisualElement
       */
      mount() {
        this.updateAnimationControlsSubscription();
      }
      update() {
        const { animate } = this.node.getProps();
        const { animate: prevAnimate } = this.node.prevProps || {};
        if (animate !== prevAnimate) {
          this.updateAnimationControlsSubscription();
        }
      }
      unmount() {
        this.node.animationState.reset();
        this.unmountControls?.();
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs
var id3, ExitAnimationFeature2;
var init_exit2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs"() {
    init_Feature2();
    id3 = 0;
    ExitAnimationFeature2 = class extends Feature2 {
      constructor() {
        super(...arguments);
        this.id = id3++;
      }
      update() {
        if (!this.node.presenceContext)
          return;
        const { isPresent, onExitComplete } = this.node.presenceContext;
        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
        if (!this.node.animationState || isPresent === prevIsPresent) {
          return;
        }
        const exitAnimation = this.node.animationState.setActive("exit", !isPresent);
        if (onExitComplete && !isPresent) {
          exitAnimation.then(() => {
            onExitComplete(this.id);
          });
        }
      }
      mount() {
        const { register, onExitComplete } = this.node.presenceContext || {};
        if (onExitComplete) {
          onExitComplete(this.id);
        }
        if (register) {
          this.unmount = register(this.id);
        }
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations2;
var init_animations2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/animations.mjs"() {
    init_animation2();
    init_exit2();
    animations2 = {
      animation: {
        Feature: AnimationFeature2
      },
      exit: {
        Feature: ExitAnimationFeature2
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/add-dom-event.mjs
function addDomEvent2(target, eventName, handler2, options = { passive: true }) {
  target.addEventListener(eventName, handler2, options);
  return () => target.removeEventListener(eventName, handler2);
}
var init_add_dom_event2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/add-dom-event.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/event-info.mjs
function extractEventInfo2(event) {
  return {
    point: {
      x: event.pageX,
      y: event.pageY
    }
  };
}
var addPointerInfo2;
var init_event_info2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/event-info.mjs"() {
    init_es2();
    addPointerInfo2 = (handler2) => {
      return (event) => isPrimaryPointer2(event) && handler2(event, extractEventInfo2(event));
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs
function addPointerEvent2(target, eventName, handler2, options) {
  return addDomEvent2(target, eventName, addPointerInfo2(handler2), options);
}
var init_add_pointer_event2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs"() {
    init_add_dom_event2();
    init_event_info2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox2({ top: top2, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top2, max: bottom }
  };
}
function convertBoxToBoundingBox2({ x: x3, y: y3 }) {
  return { top: y3.min, right: x3.max, bottom: y3.max, left: x3.min };
}
function transformBoxPoints2(point2, transformPoint3) {
  if (!transformPoint3)
    return point2;
  const topLeft = transformPoint3({ x: point2.left, y: point2.top });
  const bottomRight = transformPoint3({ x: point2.right, y: point2.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}
var init_conversion2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength2(axis) {
  return axis.max - axis.min;
}
function isNear2(value, target, maxDistance) {
  return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta2(delta, source, target, origin = 0.5) {
  delta.origin = origin;
  delta.originPoint = mixNumber3(source.min, source.max, delta.origin);
  delta.scale = calcLength2(target) / calcLength2(source);
  delta.translate = mixNumber3(target.min, target.max, delta.origin) - delta.originPoint;
  if (delta.scale >= SCALE_MIN2 && delta.scale <= SCALE_MAX2 || isNaN(delta.scale)) {
    delta.scale = 1;
  }
  if (delta.translate >= TRANSLATE_MIN2 && delta.translate <= TRANSLATE_MAX2 || isNaN(delta.translate)) {
    delta.translate = 0;
  }
}
function calcBoxDelta2(delta, source, target, origin) {
  calcAxisDelta2(delta.x, source.x, target.x, origin ? origin.originX : void 0);
  calcAxisDelta2(delta.y, source.y, target.y, origin ? origin.originY : void 0);
}
function calcRelativeAxis2(target, relative2, parent) {
  target.min = parent.min + relative2.min;
  target.max = target.min + calcLength2(relative2);
}
function calcRelativeBox2(target, relative2, parent) {
  calcRelativeAxis2(target.x, relative2.x, parent.x);
  calcRelativeAxis2(target.y, relative2.y, parent.y);
}
function calcRelativeAxisPosition2(target, layout3, parent) {
  target.min = layout3.min - parent.min;
  target.max = target.min + calcLength2(layout3);
}
function calcRelativePosition2(target, layout3, parent) {
  calcRelativeAxisPosition2(target.x, layout3.x, parent.x);
  calcRelativeAxisPosition2(target.y, layout3.y, parent.y);
}
var SCALE_PRECISION2, SCALE_MIN2, SCALE_MAX2, TRANSLATE_PRECISION2, TRANSLATE_MIN2, TRANSLATE_MAX2;
var init_delta_calc2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs"() {
    init_number4();
    SCALE_PRECISION2 = 1e-4;
    SCALE_MIN2 = 1 - SCALE_PRECISION2;
    SCALE_MAX2 = 1 + SCALE_PRECISION2;
    TRANSLATE_PRECISION2 = 0.01;
    TRANSLATE_MIN2 = 0 - TRANSLATE_PRECISION2;
    TRANSLATE_MAX2 = 0 + TRANSLATE_PRECISION2;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta2, createDelta2, createAxis2, createBox2;
var init_models2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/models.mjs"() {
    createAxisDelta2 = () => ({
      translate: 0,
      scale: 1,
      origin: 0,
      originPoint: 0
    });
    createDelta2 = () => ({
      x: createAxisDelta2(),
      y: createAxisDelta2()
    });
    createAxis2 = () => ({ min: 0, max: 0 });
    createBox2 = () => ({
      x: createAxis2(),
      y: createAxis2()
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis2(callback) {
  return [callback("x"), callback("y")];
}
var init_each_axis2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale2(scale3) {
  return scale3 === void 0 || scale3 === 1;
}
function hasScale2({ scale: scale3, scaleX: scaleX3, scaleY: scaleY3 }) {
  return !isIdentityScale2(scale3) || !isIdentityScale2(scaleX3) || !isIdentityScale2(scaleY3);
}
function hasTransform2(values2) {
  return hasScale2(values2) || has2DTranslate2(values2) || values2.z || values2.rotate || values2.rotateX || values2.rotateY || values2.skewX || values2.skewY;
}
function has2DTranslate2(values2) {
  return is2DTranslate2(values2.x) || is2DTranslate2(values2.y);
}
function is2DTranslate2(value) {
  return value && value !== "0%";
}
var init_has_transform2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint2(point2, scale3, originPoint) {
  const distanceFromOrigin = point2 - originPoint;
  const scaled = scale3 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta2(point2, translate, scale3, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point2 = scalePoint2(point2, boxScale, originPoint);
  }
  return scalePoint2(point2, scale3, originPoint) + translate;
}
function applyAxisDelta2(axis, translate = 0, scale3 = 1, originPoint, boxScale) {
  axis.min = applyPointDelta2(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = applyPointDelta2(axis.max, translate, scale3, originPoint, boxScale);
}
function applyBoxDelta2(box3, { x: x3, y: y3 }) {
  applyAxisDelta2(box3.x, x3.translate, x3.scale, x3.originPoint);
  applyAxisDelta2(box3.y, y3.translate, y3.scale, y3.originPoint);
}
function applyTreeDeltas2(box3, treeScale, treePath, isSharedTransition = false) {
  const treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  let node;
  let delta;
  for (let i11 = 0; i11 < treeLength; i11++) {
    node = treePath[i11];
    delta = node.projectionDelta;
    const { visualElement } = node.options;
    if (visualElement && visualElement.props.style && visualElement.props.style.display === "contents") {
      continue;
    }
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox2(box3, {
        x: -node.scroll.offset.x,
        y: -node.scroll.offset.y
      });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta2(box3, delta);
    }
    if (isSharedTransition && hasTransform2(node.latestValues)) {
      transformBox2(box3, node.latestValues);
    }
  }
  if (treeScale.x < TREE_SCALE_SNAP_MAX2 && treeScale.x > TREE_SCALE_SNAP_MIN2) {
    treeScale.x = 1;
  }
  if (treeScale.y < TREE_SCALE_SNAP_MAX2 && treeScale.y > TREE_SCALE_SNAP_MIN2) {
    treeScale.y = 1;
  }
}
function translateAxis2(axis, distance3) {
  axis.min = axis.min + distance3;
  axis.max = axis.max + distance3;
}
function transformAxis2(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {
  const originPoint = mixNumber3(axis.min, axis.max, axisOrigin);
  applyAxisDelta2(axis, axisTranslate, axisScale, originPoint, boxScale);
}
function transformBox2(box3, transform) {
  transformAxis2(box3.x, transform.x, transform.scaleX, transform.scale, transform.originX);
  transformAxis2(box3.y, transform.y, transform.scaleY, transform.scale, transform.originY);
}
var TREE_SCALE_SNAP_MIN2, TREE_SCALE_SNAP_MAX2;
var init_delta_apply2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs"() {
    init_number4();
    init_has_transform2();
    TREE_SCALE_SNAP_MIN2 = 0.999999999999;
    TREE_SCALE_SNAP_MAX2 = 1.0000000000001;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox2(instance, transformPoint3) {
  return convertBoundingBoxToBox2(transformBoxPoints2(instance.getBoundingClientRect(), transformPoint3));
}
function measurePageBox2(element, rootProjectionNode3, transformPagePoint) {
  const viewportBox = measureViewportBox2(element, transformPagePoint);
  const { scroll: scroll2 } = rootProjectionNode3;
  if (scroll2) {
    translateAxis2(viewportBox.x, scroll2.offset.x);
    translateAxis2(viewportBox.y, scroll2.offset.y);
  }
  return viewportBox;
}
var init_measure4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/utils/measure.mjs"() {
    init_conversion2();
    init_delta_apply2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/get-context-window.mjs
var getContextWindow2;
var init_get_context_window2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/get-context-window.mjs"() {
    getContextWindow2 = ({ current }) => {
      return current ? current.ownerDocument.defaultView : null;
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/distance.mjs
function distance2D2(a12, b4) {
  const xDelta = distance2(a12.x, b4.x);
  const yDelta = distance2(a12.y, b4.y);
  return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}
var distance2;
var init_distance2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/distance.mjs"() {
    distance2 = (a12, b4) => Math.abs(a12 - b4);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs
function transformPoint2(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint2(a12, b4) {
  return { x: a12.x - b4.x, y: a12.y - b4.y };
}
function getPanInfo2({ point: point2 }, history) {
  return {
    point: point2,
    delta: subtractPoint2(point2, lastDevicePoint2(history)),
    offset: subtractPoint2(point2, startDevicePoint2(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint2(history) {
  return history[0];
}
function lastDevicePoint2(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  let i11 = history.length - 1;
  let timestampedPoint = null;
  const lastPoint = lastDevicePoint2(history);
  while (i11 >= 0) {
    timestampedPoint = history[i11];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds2(timeDelta)) {
      break;
    }
    i11--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  const time3 = millisecondsToSeconds2(lastPoint.timestamp - timestampedPoint.timestamp);
  if (time3 === 0) {
    return { x: 0, y: 0 };
  }
  const currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time3,
    y: (lastPoint.y - timestampedPoint.y) / time3
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}
var PanSession2;
var init_PanSession2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"() {
    init_es2();
    init_es();
    init_add_pointer_event2();
    init_event_info2();
    init_distance2();
    init_pipe2();
    PanSession2 = class {
      constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {
        this.startEvent = null;
        this.lastMoveEvent = null;
        this.lastMoveEventInfo = null;
        this.handlers = {};
        this.contextWindow = window;
        this.updatePoint = () => {
          if (!(this.lastMoveEvent && this.lastMoveEventInfo))
            return;
          const info2 = getPanInfo2(this.lastMoveEventInfo, this.history);
          const isPanStarted = this.startEvent !== null;
          const isDistancePastThreshold = distance2D2(info2.offset, { x: 0, y: 0 }) >= 3;
          if (!isPanStarted && !isDistancePastThreshold)
            return;
          const { point: point3 } = info2;
          const { timestamp: timestamp2 } = frameData2;
          this.history.push({ ...point3, timestamp: timestamp2 });
          const { onStart, onMove } = this.handlers;
          if (!isPanStarted) {
            onStart && onStart(this.lastMoveEvent, info2);
            this.startEvent = this.lastMoveEvent;
          }
          onMove && onMove(this.lastMoveEvent, info2);
        };
        this.handlePointerMove = (event2, info2) => {
          this.lastMoveEvent = event2;
          this.lastMoveEventInfo = transformPoint2(info2, this.transformPagePoint);
          frame2.update(this.updatePoint, true);
        };
        this.handlePointerUp = (event2, info2) => {
          this.end();
          const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;
          if (this.dragSnapToOrigin)
            resumeAnimation && resumeAnimation();
          if (!(this.lastMoveEvent && this.lastMoveEventInfo))
            return;
          const panInfo = getPanInfo2(event2.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint2(info2, this.transformPagePoint), this.history);
          if (this.startEvent && onEnd) {
            onEnd(event2, panInfo);
          }
          onSessionEnd && onSessionEnd(event2, panInfo);
        };
        if (!isPrimaryPointer2(event))
          return;
        this.dragSnapToOrigin = dragSnapToOrigin;
        this.handlers = handlers;
        this.transformPagePoint = transformPagePoint;
        this.contextWindow = contextWindow || window;
        const info = extractEventInfo2(event);
        const initialInfo = transformPoint2(info, this.transformPagePoint);
        const { point: point2 } = initialInfo;
        const { timestamp } = frameData2;
        this.history = [{ ...point2, timestamp }];
        const { onSessionStart } = handlers;
        onSessionStart && onSessionStart(event, getPanInfo2(initialInfo, this.history));
        this.removeListeners = pipe2(addPointerEvent2(this.contextWindow, "pointermove", this.handlePointerMove), addPointerEvent2(this.contextWindow, "pointerup", this.handlePointerUp), addPointerEvent2(this.contextWindow, "pointercancel", this.handlePointerUp));
      }
      updateHandlers(handlers) {
        this.handlers = handlers;
      }
      end() {
        this.removeListeners && this.removeListeners();
        cancelFrame2(this.updatePoint);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints2(point2, { min, max }, elastic) {
  if (min !== void 0 && point2 < min) {
    point2 = elastic ? mixNumber3(min, point2, elastic.min) : Math.max(point2, min);
  } else if (max !== void 0 && point2 > max) {
    point2 = elastic ? mixNumber3(max, point2, elastic.max) : Math.min(point2, max);
  }
  return point2;
}
function calcRelativeAxisConstraints2(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints2(layoutBox, { top: top2, left, bottom, right }) {
  return {
    x: calcRelativeAxisConstraints2(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints2(layoutBox.y, top2, bottom)
  };
}
function calcViewportAxisConstraints2(layoutAxis, constraintsAxis) {
  let min = constraintsAxis.min - layoutAxis.min;
  let max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    [min, max] = [max, min];
  }
  return { min, max };
}
function calcViewportConstraints2(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints2(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints2(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin4(source, target) {
  let origin = 0.5;
  const sourceLength = calcLength2(source);
  const targetLength = calcLength2(target);
  if (targetLength > sourceLength) {
    origin = progress2(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress2(source.min, source.max - targetLength, target.min);
  }
  return clamp3(0, 1, origin);
}
function rebaseAxisConstraints2(layout3, constraints) {
  const relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout3.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout3.min;
  }
  return relativeConstraints;
}
function resolveDragElastic2(dragElastic = defaultElastic2) {
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic2;
  }
  return {
    x: resolveAxisElastic2(dragElastic, "left", "right"),
    y: resolveAxisElastic2(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic2(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic2(dragElastic, minLabel),
    max: resolvePointElastic2(dragElastic, maxLabel)
  };
}
function resolvePointElastic2(dragElastic, label3) {
  return typeof dragElastic === "number" ? dragElastic : dragElastic[label3] || 0;
}
var defaultElastic2;
var init_constraints2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"() {
    init_es();
    init_delta_calc2();
    init_clamp3();
    init_number4();
    defaultElastic2 = 0.35;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
function shouldDrag2(direction, drag3, currentDirection) {
  return (drag3 === true || drag3 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection2(offset, lockThreshold = 10) {
  let direction = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}
var elementDragControls2, VisualElementDragControls2;
var init_VisualElementDragControls2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs"() {
    init_es2();
    init_es();
    init_motion_value2();
    init_add_dom_event2();
    init_add_pointer_event2();
    init_event_info2();
    init_conversion2();
    init_delta_calc2();
    init_models2();
    init_each_axis2();
    init_measure4();
    init_get_context_window2();
    init_is_ref_object2();
    init_number4();
    init_units2();
    init_add_will_change2();
    init_PanSession2();
    init_constraints2();
    elementDragControls2 = /* @__PURE__ */ new WeakMap();
    VisualElementDragControls2 = class {
      constructor(visualElement) {
        this.openDragLock = null;
        this.isDragging = false;
        this.currentDirection = null;
        this.originPoint = { x: 0, y: 0 };
        this.constraints = false;
        this.hasMutatedConstraints = false;
        this.elastic = createBox2();
        this.visualElement = visualElement;
      }
      start(originEvent, { snapToCursor = false } = {}) {
        const { presenceContext } = this.visualElement;
        if (presenceContext && presenceContext.isPresent === false)
          return;
        const onSessionStart = (event) => {
          const { dragSnapToOrigin: dragSnapToOrigin2 } = this.getProps();
          dragSnapToOrigin2 ? this.pauseAnimation() : this.stopAnimation();
          if (snapToCursor) {
            this.snapToCursor(extractEventInfo2(event).point);
          }
        };
        const onStart = (event, info) => {
          const { drag: drag3, dragPropagation, onDragStart } = this.getProps();
          if (drag3 && !dragPropagation) {
            if (this.openDragLock)
              this.openDragLock();
            this.openDragLock = setDragLock2(drag3);
            if (!this.openDragLock)
              return;
          }
          this.isDragging = true;
          this.currentDirection = null;
          this.resolveConstraints();
          if (this.visualElement.projection) {
            this.visualElement.projection.isAnimationBlocked = true;
            this.visualElement.projection.target = void 0;
          }
          eachAxis2((axis) => {
            let current = this.getAxisMotionValue(axis).get() || 0;
            if (percent2.test(current)) {
              const { projection } = this.visualElement;
              if (projection && projection.layout) {
                const measuredAxis = projection.layout.layoutBox[axis];
                if (measuredAxis) {
                  const length = calcLength2(measuredAxis);
                  current = length * (parseFloat(current) / 100);
                }
              }
            }
            this.originPoint[axis] = current;
          });
          if (onDragStart) {
            frame2.postRender(() => onDragStart(event, info));
          }
          addValueToWillChange2(this.visualElement, "transform");
          const { animationState } = this.visualElement;
          animationState && animationState.setActive("whileDrag", true);
        };
        const onMove = (event, info) => {
          const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
          if (!dragPropagation && !this.openDragLock)
            return;
          const { offset } = info;
          if (dragDirectionLock && this.currentDirection === null) {
            this.currentDirection = getCurrentDirection2(offset);
            if (this.currentDirection !== null) {
              onDirectionLock && onDirectionLock(this.currentDirection);
            }
            return;
          }
          this.updateAxis("x", info.point, offset);
          this.updateAxis("y", info.point, offset);
          this.visualElement.render();
          onDrag && onDrag(event, info);
        };
        const onSessionEnd = (event, info) => this.stop(event, info);
        const resumeAnimation = () => eachAxis2((axis) => this.getAnimationState(axis) === "paused" && this.getAxisMotionValue(axis).animation?.play());
        const { dragSnapToOrigin } = this.getProps();
        this.panSession = new PanSession2(originEvent, {
          onSessionStart,
          onStart,
          onMove,
          onSessionEnd,
          resumeAnimation
        }, {
          transformPagePoint: this.visualElement.getTransformPagePoint(),
          dragSnapToOrigin,
          contextWindow: getContextWindow2(this.visualElement)
        });
      }
      stop(event, info) {
        const isDragging3 = this.isDragging;
        this.cancel();
        if (!isDragging3)
          return;
        const { velocity } = info;
        this.startAnimation(velocity);
        const { onDragEnd } = this.getProps();
        if (onDragEnd) {
          frame2.postRender(() => onDragEnd(event, info));
        }
      }
      cancel() {
        this.isDragging = false;
        const { projection, animationState } = this.visualElement;
        if (projection) {
          projection.isAnimationBlocked = false;
        }
        this.panSession && this.panSession.end();
        this.panSession = void 0;
        const { dragPropagation } = this.getProps();
        if (!dragPropagation && this.openDragLock) {
          this.openDragLock();
          this.openDragLock = null;
        }
        animationState && animationState.setActive("whileDrag", false);
      }
      updateAxis(axis, _point, offset) {
        const { drag: drag3 } = this.getProps();
        if (!offset || !shouldDrag2(axis, drag3, this.currentDirection))
          return;
        const axisValue = this.getAxisMotionValue(axis);
        let next = this.originPoint[axis] + offset[axis];
        if (this.constraints && this.constraints[axis]) {
          next = applyConstraints2(next, this.constraints[axis], this.elastic[axis]);
        }
        axisValue.set(next);
      }
      resolveConstraints() {
        const { dragConstraints, dragElastic } = this.getProps();
        const layout3 = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(false) : this.visualElement.projection?.layout;
        const prevConstraints = this.constraints;
        if (dragConstraints && isRefObject2(dragConstraints)) {
          if (!this.constraints) {
            this.constraints = this.resolveRefConstraints();
          }
        } else {
          if (dragConstraints && layout3) {
            this.constraints = calcRelativeConstraints2(layout3.layoutBox, dragConstraints);
          } else {
            this.constraints = false;
          }
        }
        this.elastic = resolveDragElastic2(dragElastic);
        if (prevConstraints !== this.constraints && layout3 && this.constraints && !this.hasMutatedConstraints) {
          eachAxis2((axis) => {
            if (this.constraints !== false && this.getAxisMotionValue(axis)) {
              this.constraints[axis] = rebaseAxisConstraints2(layout3.layoutBox[axis], this.constraints[axis]);
            }
          });
        }
      }
      resolveRefConstraints() {
        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
        if (!constraints || !isRefObject2(constraints))
          return false;
        const constraintsElement = constraints.current;
        invariant2(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
        const { projection } = this.visualElement;
        if (!projection || !projection.layout)
          return false;
        const constraintsBox = measurePageBox2(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
        let measuredConstraints = calcViewportConstraints2(projection.layout.layoutBox, constraintsBox);
        if (onMeasureDragConstraints) {
          const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox2(measuredConstraints));
          this.hasMutatedConstraints = !!userConstraints;
          if (userConstraints) {
            measuredConstraints = convertBoundingBoxToBox2(userConstraints);
          }
        }
        return measuredConstraints;
      }
      startAnimation(velocity) {
        const { drag: drag3, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps();
        const constraints = this.constraints || {};
        const momentumAnimations = eachAxis2((axis) => {
          if (!shouldDrag2(axis, drag3, this.currentDirection)) {
            return;
          }
          let transition = constraints && constraints[axis] || {};
          if (dragSnapToOrigin)
            transition = { min: 0, max: 0 };
          const bounceStiffness = dragElastic ? 200 : 1e6;
          const bounceDamping = dragElastic ? 40 : 1e7;
          const inertia3 = {
            type: "inertia",
            velocity: dragMomentum ? velocity[axis] : 0,
            bounceStiffness,
            bounceDamping,
            timeConstant: 750,
            restDelta: 1,
            restSpeed: 10,
            ...dragTransition,
            ...transition
          };
          return this.startAxisValueAnimation(axis, inertia3);
        });
        return Promise.all(momentumAnimations).then(onDragTransitionEnd);
      }
      startAxisValueAnimation(axis, transition) {
        const axisValue = this.getAxisMotionValue(axis);
        addValueToWillChange2(this.visualElement, axis);
        return axisValue.start(animateMotionValue2(axis, axisValue, 0, transition, this.visualElement, false));
      }
      stopAnimation() {
        eachAxis2((axis) => this.getAxisMotionValue(axis).stop());
      }
      pauseAnimation() {
        eachAxis2((axis) => this.getAxisMotionValue(axis).animation?.pause());
      }
      getAnimationState(axis) {
        return this.getAxisMotionValue(axis).animation?.state;
      }
      /**
       * Drag works differently depending on which props are provided.
       *
       * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
       * - Otherwise, we apply the delta to the x/y motion values.
       */
      getAxisMotionValue(axis) {
        const dragKey = `_drag${axis.toUpperCase()}`;
        const props = this.visualElement.getProps();
        const externalMotionValue = props[dragKey];
        return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : void 0) || 0);
      }
      snapToCursor(point2) {
        eachAxis2((axis) => {
          const { drag: drag3 } = this.getProps();
          if (!shouldDrag2(axis, drag3, this.currentDirection))
            return;
          const { projection } = this.visualElement;
          const axisValue = this.getAxisMotionValue(axis);
          if (projection && projection.layout) {
            const { min, max } = projection.layout.layoutBox[axis];
            axisValue.set(point2[axis] - mixNumber3(min, max, 0.5));
          }
        });
      }
      /**
       * When the viewport resizes we want to check if the measured constraints
       * have changed and, if so, reposition the element within those new constraints
       * relative to where it was before the resize.
       */
      scalePositionWithinConstraints() {
        if (!this.visualElement.current)
          return;
        const { drag: drag3, dragConstraints } = this.getProps();
        const { projection } = this.visualElement;
        if (!isRefObject2(dragConstraints) || !projection || !this.constraints)
          return;
        this.stopAnimation();
        const boxProgress = { x: 0, y: 0 };
        eachAxis2((axis) => {
          const axisValue = this.getAxisMotionValue(axis);
          if (axisValue && this.constraints !== false) {
            const latest = axisValue.get();
            boxProgress[axis] = calcOrigin4({ min: latest, max: latest }, this.constraints[axis]);
          }
        });
        const { transformTemplate } = this.visualElement.getProps();
        this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
        projection.root && projection.root.updateScroll();
        projection.updateLayout();
        this.resolveConstraints();
        eachAxis2((axis) => {
          if (!shouldDrag2(axis, drag3, null))
            return;
          const axisValue = this.getAxisMotionValue(axis);
          const { min, max } = this.constraints[axis];
          axisValue.set(mixNumber3(min, max, boxProgress[axis]));
        });
      }
      addListeners() {
        if (!this.visualElement.current)
          return;
        elementDragControls2.set(this.visualElement, this);
        const element = this.visualElement.current;
        const stopPointerListener = addPointerEvent2(element, "pointerdown", (event) => {
          const { drag: drag3, dragListener = true } = this.getProps();
          drag3 && dragListener && this.start(event);
        });
        const measureDragConstraints = () => {
          const { dragConstraints } = this.getProps();
          if (isRefObject2(dragConstraints) && dragConstraints.current) {
            this.constraints = this.resolveRefConstraints();
          }
        };
        const { projection } = this.visualElement;
        const stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
        if (projection && !projection.layout) {
          projection.root && projection.root.updateScroll();
          projection.updateLayout();
        }
        frame2.read(measureDragConstraints);
        const stopResizeListener = addDomEvent2(window, "resize", () => this.scalePositionWithinConstraints());
        const stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged }) => {
          if (this.isDragging && hasLayoutChanged) {
            eachAxis2((axis) => {
              const motionValue3 = this.getAxisMotionValue(axis);
              if (!motionValue3)
                return;
              this.originPoint[axis] += delta[axis].translate;
              motionValue3.set(motionValue3.get() + delta[axis].translate);
            });
            this.visualElement.render();
          }
        });
        return () => {
          stopResizeListener();
          stopPointerListener();
          stopMeasureLayoutListener();
          stopLayoutUpdateListener && stopLayoutUpdateListener();
        };
      }
      getProps() {
        const props = this.visualElement.getProps();
        const { drag: drag3 = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic2, dragMomentum = true } = props;
        return {
          ...props,
          drag: drag3,
          dragDirectionLock,
          dragPropagation,
          dragConstraints,
          dragElastic,
          dragMomentum
        };
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/index.mjs
var DragGesture2;
var init_drag3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/drag/index.mjs"() {
    init_Feature2();
    init_es();
    init_VisualElementDragControls2();
    DragGesture2 = class extends Feature2 {
      constructor(node) {
        super(node);
        this.removeGroupControls = noop2;
        this.removeListeners = noop2;
        this.controls = new VisualElementDragControls2(node);
      }
      mount() {
        const { dragControls } = this.node.getProps();
        if (dragControls) {
          this.removeGroupControls = dragControls.subscribe(this.controls);
        }
        this.removeListeners = this.controls.addListeners() || noop2;
      }
      unmount() {
        this.removeGroupControls();
        this.removeListeners();
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/pan/index.mjs
var asyncHandler2, PanGesture2;
var init_pan2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/pan/index.mjs"() {
    init_es2();
    init_es();
    init_add_pointer_event2();
    init_Feature2();
    init_get_context_window2();
    init_PanSession2();
    asyncHandler2 = (handler2) => (event, info) => {
      if (handler2) {
        frame2.postRender(() => handler2(event, info));
      }
    };
    PanGesture2 = class extends Feature2 {
      constructor() {
        super(...arguments);
        this.removePointerDownListener = noop2;
      }
      onPointerDown(pointerDownEvent) {
        this.session = new PanSession2(pointerDownEvent, this.createPanHandlers(), {
          transformPagePoint: this.node.getTransformPagePoint(),
          contextWindow: getContextWindow2(this.node)
        });
      }
      createPanHandlers() {
        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
        return {
          onSessionStart: asyncHandler2(onPanSessionStart),
          onStart: asyncHandler2(onPanStart),
          onMove: onPan,
          onEnd: (event, info) => {
            delete this.session;
            if (onPanEnd) {
              frame2.postRender(() => onPanEnd(event, info));
            }
          }
        };
      }
      mount() {
        this.removePointerDownListener = addPointerEvent2(this.node.current, "pointerdown", (event) => this.onPointerDown(event));
      }
      update() {
        this.session && this.session.updateHandlers(this.createPanHandlers());
      }
      unmount() {
        this.removePointerDownListener();
        this.session && this.session.end();
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState2;
var init_state5 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/state.mjs"() {
    globalProjectionState2 = {
      /**
       * Global flag as to whether the tree has animated since the last time
       * we resized the window
       */
      hasAnimatedSinceResize: true,
      /**
       * We set this to true once, on the first update. Any nodes added to the tree beyond that
       * update will be given a `data-projection-id` attribute.
       */
      hasEverUpdated: false
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent2(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius2;
var init_scale_border_radius2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"() {
    init_units2();
    correctBorderRadius2 = {
      correct: (latest, node) => {
        if (!node.target)
          return latest;
        if (typeof latest === "string") {
          if (px3.test(latest)) {
            latest = parseFloat(latest);
          } else {
            return latest;
          }
        }
        const x3 = pixelsToPercent2(latest, node.target.x);
        const y3 = pixelsToPercent2(latest, node.target.y);
        return `${x3}% ${y3}%`;
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var correctBoxShadow2;
var init_scale_box_shadow2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs"() {
    init_number4();
    init_complex3();
    correctBoxShadow2 = {
      correct: (latest, { treeScale, projectionDelta }) => {
        const original = latest;
        const shadow = complex2.parse(latest);
        if (shadow.length > 5)
          return original;
        const template = complex2.createTransformer(latest);
        const offset = typeof shadow[0] !== "number" ? 1 : 0;
        const xScale = projectionDelta.x.scale * treeScale.x;
        const yScale = projectionDelta.y.scale * treeScale.y;
        shadow[0 + offset] /= xScale;
        shadow[1 + offset] /= yScale;
        const averageScale = mixNumber3(xScale, yScale, 0.5);
        if (typeof shadow[2 + offset] === "number")
          shadow[2 + offset] /= averageScale;
        if (typeof shadow[3 + offset] === "number")
          shadow[3 + offset] /= averageScale;
        return template(shadow);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
function MeasureLayout2(props) {
  const [isPresent, safeToRemove] = usePresence2();
  const layoutGroup = (0, import_react212.useContext)(LayoutGroupContext2);
  return (0, import_jsx_runtime133.jsx)(MeasureLayoutWithContext2, { ...props, layoutGroup, switchLayoutGroup: (0, import_react212.useContext)(SwitchLayoutGroupContext2), isPresent, safeToRemove });
}
var import_jsx_runtime133, import_react212, MeasureLayoutWithContext2, defaultScaleCorrectors2;
var init_MeasureLayout2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"() {
    "use client";
    import_jsx_runtime133 = __toESM(require_jsx_runtime(), 1);
    init_es2();
    import_react212 = __toESM(require_react(), 1);
    init_use_presence2();
    init_LayoutGroupContext2();
    init_SwitchLayoutGroupContext2();
    init_state5();
    init_scale_border_radius2();
    init_scale_box_shadow2();
    init_scale_correction2();
    MeasureLayoutWithContext2 = class extends import_react212.Component {
      /**
       * This only mounts projection nodes for components that
       * need measuring, we might want to do it for all components
       * in order to incorporate transforms
       */
      componentDidMount() {
        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;
        const { projection } = visualElement;
        addScaleCorrector2(defaultScaleCorrectors2);
        if (projection) {
          if (layoutGroup.group)
            layoutGroup.group.add(projection);
          if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {
            switchLayoutGroup.register(projection);
          }
          projection.root.didUpdate();
          projection.addEventListener("animationComplete", () => {
            this.safeToRemove();
          });
          projection.setOptions({
            ...projection.options,
            onExitComplete: () => this.safeToRemove()
          });
        }
        globalProjectionState2.hasEverUpdated = true;
      }
      getSnapshotBeforeUpdate(prevProps) {
        const { layoutDependency, visualElement, drag: drag3, isPresent } = this.props;
        const projection = visualElement.projection;
        if (!projection)
          return null;
        projection.isPresent = isPresent;
        if (drag3 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 || prevProps.isPresent !== isPresent) {
          projection.willUpdate();
        } else {
          this.safeToRemove();
        }
        if (prevProps.isPresent !== isPresent) {
          if (isPresent) {
            projection.promote();
          } else if (!projection.relegate()) {
            frame2.postRender(() => {
              const stack2 = projection.getStack();
              if (!stack2 || !stack2.members.length) {
                this.safeToRemove();
              }
            });
          }
        }
        return null;
      }
      componentDidUpdate() {
        const { projection } = this.props.visualElement;
        if (projection) {
          projection.root.didUpdate();
          microtask2.postRender(() => {
            if (!projection.currentAnimation && projection.isLead()) {
              this.safeToRemove();
            }
          });
        }
      }
      componentWillUnmount() {
        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props;
        const { projection } = visualElement;
        if (projection) {
          projection.scheduleCheckAfterUnmount();
          if (layoutGroup && layoutGroup.group)
            layoutGroup.group.remove(projection);
          if (promoteContext && promoteContext.deregister)
            promoteContext.deregister(projection);
        }
      }
      safeToRemove() {
        const { safeToRemove } = this.props;
        safeToRemove && safeToRemove();
      }
      render() {
        return null;
      }
    };
    defaultScaleCorrectors2 = {
      borderRadius: {
        ...correctBorderRadius2,
        applyTo: [
          "borderTopLeftRadius",
          "borderTopRightRadius",
          "borderBottomLeftRadius",
          "borderBottomRightRadius"
        ]
      },
      borderTopLeftRadius: correctBorderRadius2,
      borderTopRightRadius: correctBorderRadius2,
      borderBottomLeftRadius: correctBorderRadius2,
      borderBottomRightRadius: correctBorderRadius2,
      boxShadow: correctBoxShadow2
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs
function animateSingleValue2(value, keyframes3, options) {
  const motionValue$1 = isMotionValue2(value) ? value : motionValue2(value);
  motionValue$1.start(animateMotionValue2("", motionValue$1, keyframes3, options));
  return motionValue$1.animation;
}
var init_single_value2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs"() {
    init_es2();
    init_is_motion_value2();
    init_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs
function isSVGElement2(element) {
  return element instanceof SVGElement && element.tagName !== "svg";
}
var init_is_svg_element2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth2;
var init_compare_by_depth2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs"() {
    compareByDepth2 = (a12, b4) => a12.depth - b4.depth;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree2;
var init_flat_tree2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs"() {
    init_es();
    init_compare_by_depth2();
    FlatTree2 = class {
      constructor() {
        this.children = [];
        this.isDirty = false;
      }
      add(child) {
        addUniqueItem2(this.children, child);
        this.isDirty = true;
      }
      remove(child) {
        removeItem2(this.children, child);
        this.isDirty = true;
      }
      forEach(callback) {
        this.isDirty && this.children.sort(compareByDepth2);
        this.isDirty = false;
        this.children.forEach(callback);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/delay.mjs
function delay2(callback, timeout) {
  const start = time2.now();
  const checkElapsed = ({ timestamp }) => {
    const elapsed = timestamp - start;
    if (elapsed >= timeout) {
      cancelFrame2(checkElapsed);
      callback(elapsed - timeout);
    }
  };
  frame2.read(checkElapsed, true);
  return () => cancelFrame2(checkElapsed);
}
var init_delay2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/delay.mjs"() {
    init_es2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
function mixValues2(target, follow, lead, progress3, shouldCrossfadeOpacity, isOnlyMember) {
  if (shouldCrossfadeOpacity) {
    target.opacity = mixNumber3(0, lead.opacity ?? 1, easeCrossfadeIn2(progress3));
    target.opacityExit = mixNumber3(follow.opacity ?? 1, 0, easeCrossfadeOut2(progress3));
  } else if (isOnlyMember) {
    target.opacity = mixNumber3(follow.opacity ?? 1, lead.opacity ?? 1, progress3);
  }
  for (let i11 = 0; i11 < numBorders2; i11++) {
    const borderLabel = `border${borders2[i11]}Radius`;
    let followRadius = getRadius3(follow, borderLabel);
    let leadRadius = getRadius3(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    const canMix = followRadius === 0 || leadRadius === 0 || isPx2(followRadius) === isPx2(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mixNumber3(asNumber2(followRadius), asNumber2(leadRadius), progress3), 0);
      if (percent2.test(leadRadius) || percent2.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mixNumber3(follow.rotate || 0, lead.rotate || 0, progress3);
  }
}
function getRadius3(values2, radiusName) {
  return values2[radiusName] !== void 0 ? values2[radiusName] : values2.borderRadius;
}
function compress2(min, max, easing) {
  return (p13) => {
    if (p13 < min)
      return 0;
    if (p13 > max)
      return 1;
    return easing(progress2(min, max, p13));
  };
}
var borders2, numBorders2, asNumber2, isPx2, easeCrossfadeIn2, easeCrossfadeOut2;
var init_mix_values2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs"() {
    init_es();
    init_circ2();
    init_number4();
    init_units2();
    borders2 = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
    numBorders2 = borders2.length;
    asNumber2 = (value) => typeof value === "string" ? parseFloat(value) : value;
    isPx2 = (value) => typeof value === "number" || px3.test(value);
    easeCrossfadeIn2 = /* @__PURE__ */ compress2(0, 0.5, circOut2);
    easeCrossfadeOut2 = /* @__PURE__ */ compress2(0.5, 0.95, noop2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto2(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto2(box3, originBox) {
  copyAxisInto2(box3.x, originBox.x);
  copyAxisInto2(box3.y, originBox.y);
}
function copyAxisDeltaInto2(delta, originDelta) {
  delta.translate = originDelta.translate;
  delta.scale = originDelta.scale;
  delta.originPoint = originDelta.originPoint;
  delta.origin = originDelta.origin;
}
var init_copy2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta2(point2, translate, scale3, originPoint, boxScale) {
  point2 -= translate;
  point2 = scalePoint2(point2, 1 / scale3, originPoint);
  if (boxScale !== void 0) {
    point2 = scalePoint2(point2, 1 / boxScale, originPoint);
  }
  return point2;
}
function removeAxisDelta2(axis, translate = 0, scale3 = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
  if (percent2.test(translate)) {
    translate = parseFloat(translate);
    const relativeProgress = mixNumber3(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  let originPoint = mixNumber3(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta2(axis.min, translate, scale3, originPoint, boxScale);
  axis.max = removePointDelta2(axis.max, translate, scale3, originPoint, boxScale);
}
function removeAxisTransforms2(axis, transforms2, [key, scaleKey, originKey], origin, sourceAxis) {
  removeAxisDelta2(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
function removeBoxTransforms2(box3, transforms2, originBox, sourceBox) {
  removeAxisTransforms2(box3.x, transforms2, xKeys2, originBox ? originBox.x : void 0, sourceBox ? sourceBox.x : void 0);
  removeAxisTransforms2(box3.y, transforms2, yKeys2, originBox ? originBox.y : void 0, sourceBox ? sourceBox.y : void 0);
}
var xKeys2, yKeys2;
var init_delta_remove2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs"() {
    init_number4();
    init_units2();
    init_delta_apply2();
    xKeys2 = ["x", "scaleX", "originX"];
    yKeys2 = ["y", "scaleY", "originY"];
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero2(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero2(delta) {
  return isAxisDeltaZero2(delta.x) && isAxisDeltaZero2(delta.y);
}
function axisEquals2(a12, b4) {
  return a12.min === b4.min && a12.max === b4.max;
}
function boxEquals2(a12, b4) {
  return axisEquals2(a12.x, b4.x) && axisEquals2(a12.y, b4.y);
}
function axisEqualsRounded2(a12, b4) {
  return Math.round(a12.min) === Math.round(b4.min) && Math.round(a12.max) === Math.round(b4.max);
}
function boxEqualsRounded2(a12, b4) {
  return axisEqualsRounded2(a12.x, b4.x) && axisEqualsRounded2(a12.y, b4.y);
}
function aspectRatio2(box3) {
  return calcLength2(box3.x) / calcLength2(box3.y);
}
function axisDeltaEquals2(a12, b4) {
  return a12.translate === b4.translate && a12.scale === b4.scale && a12.originPoint === b4.originPoint;
}
var init_utils12 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs"() {
    init_delta_calc2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack2;
var init_stack2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/shared/stack.mjs"() {
    init_es();
    NodeStack2 = class {
      constructor() {
        this.members = [];
      }
      add(node) {
        addUniqueItem2(this.members, node);
        node.scheduleRender();
      }
      remove(node) {
        removeItem2(this.members, node);
        if (node === this.prevLead) {
          this.prevLead = void 0;
        }
        if (node === this.lead) {
          const prevLead = this.members[this.members.length - 1];
          if (prevLead) {
            this.promote(prevLead);
          }
        }
      }
      relegate(node) {
        const indexOfNode = this.members.findIndex((member) => node === member);
        if (indexOfNode === 0)
          return false;
        let prevLead;
        for (let i11 = indexOfNode; i11 >= 0; i11--) {
          const member = this.members[i11];
          if (member.isPresent !== false) {
            prevLead = member;
            break;
          }
        }
        if (prevLead) {
          this.promote(prevLead);
          return true;
        } else {
          return false;
        }
      }
      promote(node, preserveFollowOpacity) {
        const prevLead = this.lead;
        if (node === prevLead)
          return;
        this.prevLead = prevLead;
        this.lead = node;
        node.show();
        if (prevLead) {
          prevLead.instance && prevLead.scheduleRender();
          node.scheduleRender();
          node.resumeFrom = prevLead;
          if (preserveFollowOpacity) {
            node.resumeFrom.preserveOpacity = true;
          }
          if (prevLead.snapshot) {
            node.snapshot = prevLead.snapshot;
            node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          }
          if (node.root && node.root.isUpdating) {
            node.isLayoutDirty = true;
          }
          const { crossfade } = node.options;
          if (crossfade === false) {
            prevLead.hide();
          }
        }
      }
      exitAnimationComplete() {
        this.members.forEach((node) => {
          const { options, resumingFrom } = node;
          options.onExitComplete && options.onExitComplete();
          if (resumingFrom) {
            resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
          }
        });
      }
      scheduleRender() {
        this.members.forEach((node) => {
          node.instance && node.scheduleRender(false);
        });
      }
      /**
       * Clear any leads that have been removed this render to prevent them from being
       * used in future animations and to prevent memory leaks
       */
      removeLeadSnapshot() {
        if (this.lead && this.lead.snapshot) {
          this.lead.snapshot = void 0;
        }
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/transform.mjs
function buildProjectionTransform2(delta, treeScale, latestTransform) {
  let transform = "";
  const xTranslate = delta.x.translate / treeScale.x;
  const yTranslate = delta.y.translate / treeScale.y;
  const zTranslate = latestTransform?.z || 0;
  if (xTranslate || yTranslate || zTranslate) {
    transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;
  }
  if (treeScale.x !== 1 || treeScale.y !== 1) {
    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;
  }
  if (latestTransform) {
    const { transformPerspective, rotate: rotate3, rotateX, rotateY, skewX, skewY } = latestTransform;
    if (transformPerspective)
      transform = `perspective(${transformPerspective}px) ${transform}`;
    if (rotate3)
      transform += `rotate(${rotate3}deg) `;
    if (rotateX)
      transform += `rotateX(${rotateX}deg) `;
    if (rotateY)
      transform += `rotateY(${rotateY}deg) `;
    if (skewX)
      transform += `skewX(${skewX}deg) `;
    if (skewY)
      transform += `skewY(${skewY}deg) `;
  }
  const elementScaleX = delta.x.scale * treeScale.x;
  const elementScaleY = delta.y.scale * treeScale.y;
  if (elementScaleX !== 1 || elementScaleY !== 1) {
    transform += `scale(${elementScaleX}, ${elementScaleY})`;
  }
  return transform || "none";
}
var init_transform4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/styles/transform.mjs"() {
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
function resetDistortingTransform2(key, visualElement, values2, sharedAnimationValues) {
  const { latestValues } = visualElement;
  if (latestValues[key]) {
    values2[key] = latestValues[key];
    visualElement.setStaticValue(key, 0);
    if (sharedAnimationValues) {
      sharedAnimationValues[key] = 0;
    }
  }
}
function cancelTreeOptimisedTransformAnimations2(projectionNode) {
  projectionNode.hasCheckedOptimisedAppear = true;
  if (projectionNode.root === projectionNode)
    return;
  const { visualElement } = projectionNode.options;
  if (!visualElement)
    return;
  const appearId = getOptimisedAppearId2(visualElement);
  if (window.MotionHasOptimisedAnimation(appearId, "transform")) {
    const { layout: layout3, layoutId } = projectionNode.options;
    window.MotionCancelOptimisedAnimation(appearId, "transform", frame2, !(layout3 || layoutId));
  }
  const { parent } = projectionNode;
  if (parent && !parent.hasCheckedOptimisedAppear) {
    cancelTreeOptimisedTransformAnimations2(parent);
  }
}
function createProjectionNode4({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
  return class ProjectionNode {
    constructor(latestValues = {}, parent = defaultParent?.()) {
      this.id = id4++;
      this.animationId = 0;
      this.children = /* @__PURE__ */ new Set();
      this.options = {};
      this.isTreeAnimating = false;
      this.isAnimationBlocked = false;
      this.isLayoutDirty = false;
      this.isProjectionDirty = false;
      this.isSharedProjectionDirty = false;
      this.isTransformDirty = false;
      this.updateManuallyBlocked = false;
      this.updateBlockedByResize = false;
      this.isUpdating = false;
      this.isSVG = false;
      this.needsReset = false;
      this.shouldResetTransform = false;
      this.hasCheckedOptimisedAppear = false;
      this.treeScale = { x: 1, y: 1 };
      this.eventHandlers = /* @__PURE__ */ new Map();
      this.hasTreeAnimated = false;
      this.updateScheduled = false;
      this.scheduleUpdate = () => this.update();
      this.projectionUpdateScheduled = false;
      this.checkUpdateFailed = () => {
        if (this.isUpdating) {
          this.isUpdating = false;
          this.clearAllSnapshots();
        }
      };
      this.updateProjection = () => {
        this.projectionUpdateScheduled = false;
        if (statsBuffer2.value) {
          metrics2.nodes = metrics2.calculatedTargetDeltas = metrics2.calculatedProjections = 0;
        }
        this.nodes.forEach(propagateDirtyNodes2);
        this.nodes.forEach(resolveTargetDelta2);
        this.nodes.forEach(calcProjection2);
        this.nodes.forEach(cleanDirtyNodes2);
        if (statsBuffer2.addProjectionMetrics) {
          statsBuffer2.addProjectionMetrics(metrics2);
        }
      };
      this.resolvedRelativeTargetAt = 0;
      this.hasProjected = false;
      this.isVisible = true;
      this.animationProgress = 0;
      this.sharedNodes = /* @__PURE__ */ new Map();
      this.latestValues = latestValues;
      this.root = parent ? parent.root || parent : this;
      this.path = parent ? [...parent.path, parent] : [];
      this.parent = parent;
      this.depth = parent ? parent.depth + 1 : 0;
      for (let i11 = 0; i11 < this.path.length; i11++) {
        this.path[i11].shouldResetTransform = true;
      }
      if (this.root === this)
        this.nodes = new FlatTree2();
    }
    addEventListener(name2, handler2) {
      if (!this.eventHandlers.has(name2)) {
        this.eventHandlers.set(name2, new SubscriptionManager2());
      }
      return this.eventHandlers.get(name2).add(handler2);
    }
    notifyListeners(name2, ...args) {
      const subscriptionManager = this.eventHandlers.get(name2);
      subscriptionManager && subscriptionManager.notify(...args);
    }
    hasListeners(name2) {
      return this.eventHandlers.has(name2);
    }
    /**
     * Lifecycles
     */
    mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = isSVGElement2(instance);
      this.instance = instance;
      const { layoutId, layout: layout3, visualElement } = this.options;
      if (visualElement && !visualElement.current) {
        visualElement.mount(instance);
      }
      this.root.nodes.add(this);
      this.parent && this.parent.children.add(this);
      if (isLayoutDirty && (layout3 || layoutId)) {
        this.isLayoutDirty = true;
      }
      if (attachResizeListener) {
        let cancelDelay;
        const resizeUnblockUpdate = () => this.root.updateBlockedByResize = false;
        attachResizeListener(instance, () => {
          this.root.updateBlockedByResize = true;
          cancelDelay && cancelDelay();
          cancelDelay = delay2(resizeUnblockUpdate, 250);
          if (globalProjectionState2.hasAnimatedSinceResize) {
            globalProjectionState2.hasAnimatedSinceResize = false;
            this.nodes.forEach(finishAnimation2);
          }
        });
      }
      if (layoutId) {
        this.root.registerSharedNode(layoutId, this);
      }
      if (this.options.animate !== false && visualElement && (layoutId || layout3)) {
        this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout }) => {
          if (this.isTreeAnimationBlocked()) {
            this.target = void 0;
            this.relativeTarget = void 0;
            return;
          }
          const layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition2;
          const { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps();
          const hasTargetChanged = !this.targetLayout || !boxEqualsRounded2(this.targetLayout, newLayout);
          const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;
          if (this.options.layoutRoot || this.resumeFrom || hasOnlyRelativeTargetChanged || hasLayoutChanged && (hasTargetChanged || !this.currentAnimation)) {
            if (this.resumeFrom) {
              this.resumingFrom = this.resumeFrom;
              this.resumingFrom.resumingFrom = void 0;
            }
            this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
            const animationOptions = {
              ...getValueTransition2(layoutTransition, "layout"),
              onPlay: onLayoutAnimationStart,
              onComplete: onLayoutAnimationComplete
            };
            if (visualElement.shouldReduceMotion || this.options.layoutRoot) {
              animationOptions.delay = 0;
              animationOptions.type = false;
            }
            this.startAnimation(animationOptions);
          } else {
            if (!hasLayoutChanged) {
              finishAnimation2(this);
            }
            if (this.isLead() && this.options.onExitComplete) {
              this.options.onExitComplete();
            }
          }
          this.targetLayout = newLayout;
        });
      }
    }
    unmount() {
      this.options.layoutId && this.willUpdate();
      this.root.nodes.remove(this);
      const stack2 = this.getStack();
      stack2 && stack2.remove(this);
      this.parent && this.parent.children.delete(this);
      this.instance = void 0;
      cancelFrame2(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = true;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = false;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || false;
    }
    // Note: currently only running on root node
    startUpdate() {
      if (this.isUpdateBlocked())
        return;
      this.isUpdating = true;
      this.nodes && this.nodes.forEach(resetSkewAndRotation2);
      this.animationId++;
    }
    getTransformTemplate() {
      const { visualElement } = this.options;
      return visualElement && visualElement.getProps().transformTemplate;
    }
    willUpdate(shouldNotifyListeners = true) {
      this.root.hasTreeAnimated = true;
      if (this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear) {
        cancelTreeOptimisedTransformAnimations2(this);
      }
      !this.root.isUpdating && this.root.startUpdate();
      if (this.isLayoutDirty)
        return;
      this.isLayoutDirty = true;
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        node.shouldResetTransform = true;
        node.updateScroll("snapshot");
        if (node.options.layoutRoot) {
          node.willUpdate(false);
        }
      }
      const { layoutId, layout: layout3 } = this.options;
      if (layoutId === void 0 && !layout3)
        return;
      const transformTemplate = this.getTransformTemplate();
      this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      this.updateSnapshot();
      shouldNotifyListeners && this.notifyListeners("willUpdate");
    }
    update() {
      this.updateScheduled = false;
      const updateWasBlocked = this.isUpdateBlocked();
      if (updateWasBlocked) {
        this.unblockUpdate();
        this.clearAllSnapshots();
        this.nodes.forEach(clearMeasurements2);
        return;
      }
      if (!this.isUpdating) {
        this.nodes.forEach(clearIsLayoutDirty2);
      }
      this.isUpdating = false;
      this.nodes.forEach(resetTransformStyle2);
      this.nodes.forEach(updateLayout2);
      this.nodes.forEach(notifyLayoutUpdate2);
      this.clearAllSnapshots();
      const now3 = time2.now();
      frameData2.delta = clamp3(0, 1e3 / 60, now3 - frameData2.timestamp);
      frameData2.timestamp = now3;
      frameData2.isProcessing = true;
      frameSteps2.update.process(frameData2);
      frameSteps2.preRender.process(frameData2);
      frameSteps2.render.process(frameData2);
      frameData2.isProcessing = false;
    }
    didUpdate() {
      if (!this.updateScheduled) {
        this.updateScheduled = true;
        microtask2.read(this.scheduleUpdate);
      }
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot2);
      this.sharedNodes.forEach(removeLeadSnapshots2);
    }
    scheduleUpdateProjection() {
      if (!this.projectionUpdateScheduled) {
        this.projectionUpdateScheduled = true;
        frame2.preRender(this.updateProjection, false, true);
      }
    }
    scheduleCheckAfterUnmount() {
      frame2.postRender(() => {
        if (this.isLayoutDirty) {
          this.root.didUpdate();
        } else {
          this.root.checkUpdateFailed();
        }
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      if (this.snapshot || !this.instance)
        return;
      this.snapshot = this.measure();
      if (this.snapshot && !calcLength2(this.snapshot.measuredBox.x) && !calcLength2(this.snapshot.measuredBox.y)) {
        this.snapshot = void 0;
      }
    }
    updateLayout() {
      if (!this.instance)
        return;
      this.updateScroll();
      if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
        return;
      }
      if (this.resumeFrom && !this.resumeFrom.instance) {
        for (let i11 = 0; i11 < this.path.length; i11++) {
          const node = this.path[i11];
          node.updateScroll();
        }
      }
      const prevLayout = this.layout;
      this.layout = this.measure(false);
      this.layoutCorrected = createBox2();
      this.isLayoutDirty = false;
      this.projectionDelta = void 0;
      this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement } = this.options;
      visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : void 0);
    }
    updateScroll(phase = "measure") {
      let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase) {
        needsMeasurement = false;
      }
      if (needsMeasurement) {
        const isRoot = checkIsScrollRoot(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase,
          isRoot,
          offset: measureScroll(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : isRoot
        };
      }
    }
    resetTransform() {
      if (!resetTransform)
        return;
      const isResetRequested = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout;
      const hasProjection = this.projectionDelta && !isDeltaZero2(this.projectionDelta);
      const transformTemplate = this.getTransformTemplate();
      const transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      if (isResetRequested && (hasProjection || hasTransform2(this.latestValues) || transformTemplateHasChanged)) {
        resetTransform(this.instance, transformTemplateValue);
        this.shouldResetTransform = false;
        this.scheduleRender();
      }
    }
    measure(removeTransform = true) {
      const pageBox = this.measurePageBox();
      let layoutBox = this.removeElementScroll(pageBox);
      if (removeTransform) {
        layoutBox = this.removeTransform(layoutBox);
      }
      roundBox2(layoutBox);
      return {
        animationId: this.root.animationId,
        measuredBox: pageBox,
        layoutBox,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      const { visualElement } = this.options;
      if (!visualElement)
        return createBox2();
      const box3 = visualElement.measureViewportBox();
      const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot2);
      if (!wasInScrollRoot) {
        const { scroll: scroll2 } = this.root;
        if (scroll2) {
          translateAxis2(box3.x, scroll2.offset.x);
          translateAxis2(box3.y, scroll2.offset.y);
        }
      }
      return box3;
    }
    removeElementScroll(box3) {
      const boxWithoutScroll = createBox2();
      copyBoxInto2(boxWithoutScroll, box3);
      if (this.scroll?.wasRoot) {
        return boxWithoutScroll;
      }
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        const { scroll: scroll2, options } = node;
        if (node !== this.root && scroll2 && options.layoutScroll) {
          if (scroll2.wasRoot) {
            copyBoxInto2(boxWithoutScroll, box3);
          }
          translateAxis2(boxWithoutScroll.x, scroll2.offset.x);
          translateAxis2(boxWithoutScroll.y, scroll2.offset.y);
        }
      }
      return boxWithoutScroll;
    }
    applyTransform(box3, transformOnly = false) {
      const withTransforms = createBox2();
      copyBoxInto2(withTransforms, box3);
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
          transformBox2(withTransforms, {
            x: -node.scroll.offset.x,
            y: -node.scroll.offset.y
          });
        }
        if (!hasTransform2(node.latestValues))
          continue;
        transformBox2(withTransforms, node.latestValues);
      }
      if (hasTransform2(this.latestValues)) {
        transformBox2(withTransforms, this.latestValues);
      }
      return withTransforms;
    }
    removeTransform(box3) {
      const boxWithoutTransform = createBox2();
      copyBoxInto2(boxWithoutTransform, box3);
      for (let i11 = 0; i11 < this.path.length; i11++) {
        const node = this.path[i11];
        if (!node.instance)
          continue;
        if (!hasTransform2(node.latestValues))
          continue;
        hasScale2(node.latestValues) && node.updateSnapshot();
        const sourceBox = createBox2();
        const nodeBox = node.measurePageBox();
        copyBoxInto2(sourceBox, nodeBox);
        removeBoxTransforms2(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : void 0, sourceBox);
      }
      if (hasTransform2(this.latestValues)) {
        removeBoxTransforms2(boxWithoutTransform, this.latestValues);
      }
      return boxWithoutTransform;
    }
    setTargetDelta(delta) {
      this.targetDelta = delta;
      this.root.scheduleUpdateProjection();
      this.isProjectionDirty = true;
    }
    setOptions(options) {
      this.options = {
        ...this.options,
        ...options,
        crossfade: options.crossfade !== void 0 ? options.crossfade : true
      };
    }
    clearMeasurements() {
      this.scroll = void 0;
      this.layout = void 0;
      this.snapshot = void 0;
      this.prevTransformTemplateValue = void 0;
      this.targetDelta = void 0;
      this.target = void 0;
      this.isLayoutDirty = false;
    }
    forceRelativeParentToResolveTarget() {
      if (!this.relativeParent)
        return;
      if (this.relativeParent.resolvedRelativeTargetAt !== frameData2.timestamp) {
        this.relativeParent.resolveTargetDelta(true);
      }
    }
    resolveTargetDelta(forceRecalculation = false) {
      const lead = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);
      this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);
      this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      const canSkip = !(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || this.parent?.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize);
      if (canSkip)
        return;
      const { layout: layout3, layoutId } = this.options;
      if (!this.layout || !(layout3 || layoutId))
        return;
      this.resolvedRelativeTargetAt = frameData2.timestamp;
      if (!this.targetDelta && !this.relativeTarget) {
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && relativeParent.layout && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox2();
          this.relativeTargetOrigin = createBox2();
          calcRelativePosition2(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);
          copyBoxInto2(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (!this.relativeTarget && !this.targetDelta)
        return;
      if (!this.target) {
        this.target = createBox2();
        this.targetWithTransforms = createBox2();
      }
      if (this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target) {
        this.forceRelativeParentToResolveTarget();
        calcRelativeBox2(this.target, this.relativeTarget, this.relativeParent.target);
      } else if (this.targetDelta) {
        if (Boolean(this.resumingFrom)) {
          this.target = this.applyTransform(this.layout.layoutBox);
        } else {
          copyBoxInto2(this.target, this.layout.layoutBox);
        }
        applyBoxDelta2(this.target, this.targetDelta);
      } else {
        copyBoxInto2(this.target, this.layout.layoutBox);
      }
      if (this.attemptToResolveRelativeTarget) {
        this.attemptToResolveRelativeTarget = false;
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox2();
          this.relativeTargetOrigin = createBox2();
          calcRelativePosition2(this.relativeTargetOrigin, this.target, relativeParent.target);
          copyBoxInto2(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (statsBuffer2.value) {
        metrics2.calculatedTargetDeltas++;
      }
    }
    getClosestProjectingParent() {
      if (!this.parent || hasScale2(this.parent.latestValues) || has2DTranslate2(this.parent.latestValues)) {
        return void 0;
      }
      if (this.parent.isProjecting()) {
        return this.parent;
      } else {
        return this.parent.getClosestProjectingParent();
      }
    }
    isProjecting() {
      return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      const lead = this.getLead();
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      let canSkip = true;
      if (this.isProjectionDirty || this.parent?.isProjectionDirty) {
        canSkip = false;
      }
      if (isShared && (this.isSharedProjectionDirty || this.isTransformDirty)) {
        canSkip = false;
      }
      if (this.resolvedRelativeTargetAt === frameData2.timestamp) {
        canSkip = false;
      }
      if (canSkip)
        return;
      const { layout: layout3, layoutId } = this.options;
      this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation);
      if (!this.isTreeAnimating) {
        this.targetDelta = this.relativeTarget = void 0;
      }
      if (!this.layout || !(layout3 || layoutId))
        return;
      copyBoxInto2(this.layoutCorrected, this.layout.layoutBox);
      const prevTreeScaleX = this.treeScale.x;
      const prevTreeScaleY = this.treeScale.y;
      applyTreeDeltas2(this.layoutCorrected, this.treeScale, this.path, isShared);
      if (lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {
        lead.target = lead.layout.layoutBox;
        lead.targetWithTransforms = createBox2();
      }
      const { target } = lead;
      if (!target) {
        if (this.prevProjectionDelta) {
          this.createProjectionDeltas();
          this.scheduleRender();
        }
        return;
      }
      if (!this.projectionDelta || !this.prevProjectionDelta) {
        this.createProjectionDeltas();
      } else {
        copyAxisDeltaInto2(this.prevProjectionDelta.x, this.projectionDelta.x);
        copyAxisDeltaInto2(this.prevProjectionDelta.y, this.projectionDelta.y);
      }
      calcBoxDelta2(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
      if (this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY || !axisDeltaEquals2(this.projectionDelta.x, this.prevProjectionDelta.x) || !axisDeltaEquals2(this.projectionDelta.y, this.prevProjectionDelta.y)) {
        this.hasProjected = true;
        this.scheduleRender();
        this.notifyListeners("projectionUpdate", target);
      }
      if (statsBuffer2.value) {
        metrics2.calculatedProjections++;
      }
    }
    hide() {
      this.isVisible = false;
    }
    show() {
      this.isVisible = true;
    }
    scheduleRender(notifyAll2 = true) {
      this.options.visualElement?.scheduleRender();
      if (notifyAll2) {
        const stack2 = this.getStack();
        stack2 && stack2.scheduleRender();
      }
      if (this.resumingFrom && !this.resumingFrom.instance) {
        this.resumingFrom = void 0;
      }
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = createDelta2();
      this.projectionDelta = createDelta2();
      this.projectionDeltaWithTransform = createDelta2();
    }
    setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {
      const snapshot = this.snapshot;
      const snapshotLatestValues = snapshot ? snapshot.latestValues : {};
      const mixedValues = { ...this.latestValues };
      const targetDelta = createDelta2();
      if (!this.relativeParent || !this.relativeParent.options.layoutRoot) {
        this.relativeTarget = this.relativeTargetOrigin = void 0;
      }
      this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      const relativeLayout = createBox2();
      const snapshotSource = snapshot ? snapshot.source : void 0;
      const layoutSource = this.layout ? this.layout.source : void 0;
      const isSharedLayoutAnimation = snapshotSource !== layoutSource;
      const stack2 = this.getStack();
      const isOnlyMember = !stack2 || stack2.members.length <= 1;
      const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade2));
      this.animationProgress = 0;
      let prevRelativeTarget;
      this.mixTargetDelta = (latest) => {
        const progress3 = latest / 1e3;
        mixAxisDelta2(targetDelta.x, delta.x, progress3);
        mixAxisDelta2(targetDelta.y, delta.y, progress3);
        this.setTargetDelta(targetDelta);
        if (this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout) {
          calcRelativePosition2(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);
          mixBox2(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress3);
          if (prevRelativeTarget && boxEquals2(this.relativeTarget, prevRelativeTarget)) {
            this.isProjectionDirty = false;
          }
          if (!prevRelativeTarget)
            prevRelativeTarget = createBox2();
          copyBoxInto2(prevRelativeTarget, this.relativeTarget);
        }
        if (isSharedLayoutAnimation) {
          this.animationValues = mixedValues;
          mixValues2(mixedValues, snapshotLatestValues, this.latestValues, progress3, shouldCrossfadeOpacity, isOnlyMember);
        }
        this.root.scheduleUpdateProjection();
        this.scheduleRender();
        this.animationProgress = progress3;
      };
      this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(options) {
      this.notifyListeners("animationStart");
      this.currentAnimation && this.currentAnimation.stop();
      if (this.resumingFrom && this.resumingFrom.currentAnimation) {
        this.resumingFrom.currentAnimation.stop();
      }
      if (this.pendingAnimation) {
        cancelFrame2(this.pendingAnimation);
        this.pendingAnimation = void 0;
      }
      this.pendingAnimation = frame2.update(() => {
        globalProjectionState2.hasAnimatedSinceResize = true;
        activeAnimations2.layout++;
        this.currentAnimation = animateSingleValue2(0, animationTarget2, {
          ...options,
          onUpdate: (latest) => {
            this.mixTargetDelta(latest);
            options.onUpdate && options.onUpdate(latest);
          },
          onStop: () => {
            activeAnimations2.layout--;
          },
          onComplete: () => {
            activeAnimations2.layout--;
            options.onComplete && options.onComplete();
            this.completeAnimation();
          }
        });
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = this.currentAnimation;
        }
        this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      if (this.resumingFrom) {
        this.resumingFrom.currentAnimation = void 0;
        this.resumingFrom.preserveOpacity = void 0;
      }
      const stack2 = this.getStack();
      stack2 && stack2.exitAnimationComplete();
      this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
      this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      if (this.currentAnimation) {
        this.mixTargetDelta && this.mixTargetDelta(animationTarget2);
        this.currentAnimation.stop();
      }
      this.completeAnimation();
    }
    applyTransformsToTarget() {
      const lead = this.getLead();
      let { targetWithTransforms, target, layout: layout3, latestValues } = lead;
      if (!targetWithTransforms || !target || !layout3)
        return;
      if (this !== lead && this.layout && layout3 && shouldAnimatePositionOnly2(this.options.animationType, this.layout.layoutBox, layout3.layoutBox)) {
        target = this.target || createBox2();
        const xLength = calcLength2(this.layout.layoutBox.x);
        target.x.min = lead.target.x.min;
        target.x.max = target.x.min + xLength;
        const yLength = calcLength2(this.layout.layoutBox.y);
        target.y.min = lead.target.y.min;
        target.y.max = target.y.min + yLength;
      }
      copyBoxInto2(targetWithTransforms, target);
      transformBox2(targetWithTransforms, latestValues);
      calcBoxDelta2(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
    }
    registerSharedNode(layoutId, node) {
      if (!this.sharedNodes.has(layoutId)) {
        this.sharedNodes.set(layoutId, new NodeStack2());
      }
      const stack2 = this.sharedNodes.get(layoutId);
      stack2.add(node);
      const config = node.options.initialPromotionConfig;
      node.promote({
        transition: config ? config.transition : void 0,
        preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : void 0
      });
    }
    isLead() {
      const stack2 = this.getStack();
      return stack2 ? stack2.lead === this : true;
    }
    getLead() {
      const { layoutId } = this.options;
      return layoutId ? this.getStack()?.lead || this : this;
    }
    getPrevLead() {
      const { layoutId } = this.options;
      return layoutId ? this.getStack()?.prevLead : void 0;
    }
    getStack() {
      const { layoutId } = this.options;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    }
    promote({ needsReset, transition, preserveFollowOpacity } = {}) {
      const stack2 = this.getStack();
      if (stack2)
        stack2.promote(this, preserveFollowOpacity);
      if (needsReset) {
        this.projectionDelta = void 0;
        this.needsReset = true;
      }
      if (transition)
        this.setOptions({ transition });
    }
    relegate() {
      const stack2 = this.getStack();
      if (stack2) {
        return stack2.relegate(this);
      } else {
        return false;
      }
    }
    resetSkewAndRotation() {
      const { visualElement } = this.options;
      if (!visualElement)
        return;
      let hasDistortingTransform = false;
      const { latestValues } = visualElement;
      if (latestValues.z || latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ || latestValues.skewX || latestValues.skewY) {
        hasDistortingTransform = true;
      }
      if (!hasDistortingTransform)
        return;
      const resetValues = {};
      if (latestValues.z) {
        resetDistortingTransform2("z", visualElement, resetValues, this.animationValues);
      }
      for (let i11 = 0; i11 < transformAxes2.length; i11++) {
        resetDistortingTransform2(`rotate${transformAxes2[i11]}`, visualElement, resetValues, this.animationValues);
        resetDistortingTransform2(`skew${transformAxes2[i11]}`, visualElement, resetValues, this.animationValues);
      }
      visualElement.render();
      for (const key in resetValues) {
        visualElement.setStaticValue(key, resetValues[key]);
        if (this.animationValues) {
          this.animationValues[key] = resetValues[key];
        }
      }
      visualElement.scheduleRender();
    }
    getProjectionStyles(styleProp) {
      if (!this.instance || this.isSVG)
        return void 0;
      if (!this.isVisible) {
        return hiddenVisibility2;
      }
      const styles = {
        visibility: ""
      };
      const transformTemplate = this.getTransformTemplate();
      if (this.needsReset) {
        this.needsReset = false;
        styles.opacity = "";
        styles.pointerEvents = resolveMotionValue2(styleProp?.pointerEvents) || "";
        styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
        return styles;
      }
      const lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        const emptyStyles = {};
        if (this.options.layoutId) {
          emptyStyles.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1;
          emptyStyles.pointerEvents = resolveMotionValue2(styleProp?.pointerEvents) || "";
        }
        if (this.hasProjected && !hasTransform2(this.latestValues)) {
          emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
          this.hasProjected = false;
        }
        return emptyStyles;
      }
      const valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget();
      styles.transform = buildProjectionTransform2(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
      if (transformTemplate) {
        styles.transform = transformTemplate(valuesToRender, styles.transform);
      }
      const { x: x3, y: y3 } = this.projectionDelta;
      styles.transformOrigin = `${x3.origin * 100}% ${y3.origin * 100}% 0`;
      if (lead.animationValues) {
        styles.opacity = lead === this ? valuesToRender.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
      } else {
        styles.opacity = lead === this ? valuesToRender.opacity !== void 0 ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== void 0 ? valuesToRender.opacityExit : 0;
      }
      for (const key in scaleCorrectors2) {
        if (valuesToRender[key] === void 0)
          continue;
        const { correct, applyTo, isCSSVariable } = scaleCorrectors2[key];
        const corrected = styles.transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
        if (applyTo) {
          const num2 = applyTo.length;
          for (let i11 = 0; i11 < num2; i11++) {
            styles[applyTo[i11]] = corrected;
          }
        } else {
          if (isCSSVariable) {
            this.options.visualElement.renderState.vars[key] = corrected;
          } else {
            styles[key] = corrected;
          }
        }
      }
      if (this.options.layoutId) {
        styles.pointerEvents = lead === this ? resolveMotionValue2(styleProp?.pointerEvents) || "" : "none";
      }
      return styles;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((node) => node.currentAnimation?.stop());
      this.root.nodes.forEach(clearMeasurements2);
      this.root.sharedNodes.clear();
    }
  };
}
function updateLayout2(node) {
  node.updateLayout();
}
function notifyLayoutUpdate2(node) {
  const snapshot = node.resumeFrom?.snapshot || node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    const { layoutBox: layout3, measuredBox: measuredLayout } = node.layout;
    const { animationType } = node.options;
    const isShared = snapshot.source !== node.layout.source;
    if (animationType === "size") {
      eachAxis2((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength2(axisSnapshot);
        axisSnapshot.min = layout3[axis].min;
        axisSnapshot.max = axisSnapshot.min + length;
      });
    } else if (shouldAnimatePositionOnly2(animationType, snapshot.layoutBox, layout3)) {
      eachAxis2((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength2(layout3[axis]);
        axisSnapshot.max = axisSnapshot.min + length;
        if (node.relativeTarget && !node.currentAnimation) {
          node.isProjectionDirty = true;
          node.relativeTarget[axis].max = node.relativeTarget[axis].min + length;
        }
      });
    }
    const layoutDelta = createDelta2();
    calcBoxDelta2(layoutDelta, layout3, snapshot.layoutBox);
    const visualDelta = createDelta2();
    if (isShared) {
      calcBoxDelta2(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);
    } else {
      calcBoxDelta2(visualDelta, layout3, snapshot.layoutBox);
    }
    const hasLayoutChanged = !isDeltaZero2(layoutDelta);
    let hasRelativeLayoutChanged = false;
    if (!node.resumeFrom) {
      const relativeParent = node.getClosestProjectingParent();
      if (relativeParent && !relativeParent.resumeFrom) {
        const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
        if (parentSnapshot && parentLayout) {
          const relativeSnapshot = createBox2();
          calcRelativePosition2(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
          const relativeLayout = createBox2();
          calcRelativePosition2(relativeLayout, layout3, parentLayout.layoutBox);
          if (!boxEqualsRounded2(relativeSnapshot, relativeLayout)) {
            hasRelativeLayoutChanged = true;
          }
          if (relativeParent.options.layoutRoot) {
            node.relativeTarget = relativeLayout;
            node.relativeTargetOrigin = relativeSnapshot;
            node.relativeParent = relativeParent;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout3,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeLayoutChanged
    });
  } else if (node.isLead()) {
    const { onExitComplete } = node.options;
    onExitComplete && onExitComplete();
  }
  node.options.transition = void 0;
}
function propagateDirtyNodes2(node) {
  if (statsBuffer2.value) {
    metrics2.nodes++;
  }
  if (!node.parent)
    return;
  if (!node.isProjecting()) {
    node.isProjectionDirty = node.parent.isProjectionDirty;
  }
  node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty));
  node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);
}
function cleanDirtyNodes2(node) {
  node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = false;
}
function clearSnapshot2(node) {
  node.clearSnapshot();
}
function clearMeasurements2(node) {
  node.clearMeasurements();
}
function clearIsLayoutDirty2(node) {
  node.isLayoutDirty = false;
}
function resetTransformStyle2(node) {
  const { visualElement } = node.options;
  if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {
    visualElement.notify("BeforeLayoutMeasure");
  }
  node.resetTransform();
}
function finishAnimation2(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
  node.isProjectionDirty = true;
}
function resolveTargetDelta2(node) {
  node.resolveTargetDelta();
}
function calcProjection2(node) {
  node.calcProjection();
}
function resetSkewAndRotation2(node) {
  node.resetSkewAndRotation();
}
function removeLeadSnapshots2(stack2) {
  stack2.removeLeadSnapshot();
}
function mixAxisDelta2(output, delta, p13) {
  output.translate = mixNumber3(delta.translate, 0, p13);
  output.scale = mixNumber3(delta.scale, 1, p13);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis2(output, from, to, p13) {
  output.min = mixNumber3(from.min, to.min, p13);
  output.max = mixNumber3(from.max, to.max, p13);
}
function mixBox2(output, from, to, p13) {
  mixAxis2(output.x, from.x, to.x, p13);
  mixAxis2(output.y, from.y, to.y, p13);
}
function hasOpacityCrossfade2(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
function roundAxis2(axis) {
  axis.min = roundPoint2(axis.min);
  axis.max = roundPoint2(axis.max);
}
function roundBox2(box3) {
  roundAxis2(box3.x);
  roundAxis2(box3.y);
}
function shouldAnimatePositionOnly2(animationType, snapshot, layout3) {
  return animationType === "position" || animationType === "preserve-aspect" && !isNear2(aspectRatio2(snapshot), aspectRatio2(layout3), 0.2);
}
function checkNodeWasScrollRoot2(node) {
  return node !== node.root && node.scroll?.wasRoot;
}
var metrics2, transformAxes2, hiddenVisibility2, animationTarget2, id4, defaultLayoutTransition2, userAgentContains2, roundPoint2;
var init_create_projection_node2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs"() {
    init_es2();
    init_es();
    init_single_value2();
    init_get_appear_id2();
    init_is_svg_element2();
    init_flat_tree2();
    init_clamp3();
    init_delay2();
    init_number4();
    init_resolve_motion_value2();
    init_mix_values2();
    init_copy2();
    init_delta_apply2();
    init_delta_calc2();
    init_delta_remove2();
    init_models2();
    init_utils12();
    init_stack2();
    init_scale_correction2();
    init_transform4();
    init_each_axis2();
    init_has_transform2();
    init_state5();
    metrics2 = {
      nodes: 0,
      calculatedTargetDeltas: 0,
      calculatedProjections: 0
    };
    transformAxes2 = ["", "X", "Y", "Z"];
    hiddenVisibility2 = { visibility: "hidden" };
    animationTarget2 = 1e3;
    id4 = 0;
    defaultLayoutTransition2 = {
      duration: 0.45,
      ease: [0.4, 0, 0.1, 1]
    };
    userAgentContains2 = (string) => typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(string);
    roundPoint2 = userAgentContains2("applewebkit/") && !userAgentContains2("chrome/") ? Math.round : noop2;
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode2;
var init_DocumentProjectionNode2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs"() {
    init_create_projection_node2();
    init_add_dom_event2();
    DocumentProjectionNode2 = createProjectionNode4({
      attachResizeListener: (ref, notify) => addDomEvent2(ref, "resize", notify),
      measureScroll: () => ({
        x: document.documentElement.scrollLeft || document.body.scrollLeft,
        y: document.documentElement.scrollTop || document.body.scrollTop
      }),
      checkIsScrollRoot: () => true
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode2, HTMLProjectionNode2;
var init_HTMLProjectionNode2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs"() {
    init_create_projection_node2();
    init_DocumentProjectionNode2();
    rootProjectionNode2 = {
      current: void 0
    };
    HTMLProjectionNode2 = createProjectionNode4({
      measureScroll: (instance) => ({
        x: instance.scrollLeft,
        y: instance.scrollTop
      }),
      defaultParent: () => {
        if (!rootProjectionNode2.current) {
          const documentNode = new DocumentProjectionNode2({});
          documentNode.mount(window);
          documentNode.setOptions({ layoutScroll: true });
          rootProjectionNode2.current = documentNode;
        }
        return rootProjectionNode2.current;
      },
      resetTransform: (instance, value) => {
        instance.style.transform = value !== void 0 ? value : "none";
      },
      checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === "fixed")
    });
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag2;
var init_drag4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/drag.mjs"() {
    init_drag3();
    init_pan2();
    init_MeasureLayout2();
    init_HTMLProjectionNode2();
    drag2 = {
      pan: {
        Feature: PanGesture2
      },
      drag: {
        Feature: DragGesture2,
        ProjectionNode: HTMLProjectionNode2,
        MeasureLayout: MeasureLayout2
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/hover.mjs
function handleHoverEvent2(node, event, lifecycle) {
  const { props } = node;
  if (node.animationState && props.whileHover) {
    node.animationState.setActive("whileHover", lifecycle === "Start");
  }
  const eventName = "onHover" + lifecycle;
  const callback = props[eventName];
  if (callback) {
    frame2.postRender(() => callback(event, extractEventInfo2(event)));
  }
}
var HoverGesture2;
var init_hover4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/hover.mjs"() {
    init_es2();
    init_event_info2();
    init_Feature2();
    HoverGesture2 = class extends Feature2 {
      mount() {
        const { current } = this.node;
        if (!current)
          return;
        this.unmount = hover2(current, (_element, startEvent) => {
          handleHoverEvent2(this.node, startEvent, "Start");
          return (endEvent) => handleHoverEvent2(this.node, endEvent, "End");
        });
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/focus.mjs
var FocusGesture2;
var init_focus2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/focus.mjs"() {
    init_add_dom_event2();
    init_Feature2();
    init_pipe2();
    FocusGesture2 = class extends Feature2 {
      constructor() {
        super(...arguments);
        this.isActive = false;
      }
      onFocus() {
        let isFocusVisible = false;
        try {
          isFocusVisible = this.node.current.matches(":focus-visible");
        } catch (e12) {
          isFocusVisible = true;
        }
        if (!isFocusVisible || !this.node.animationState)
          return;
        this.node.animationState.setActive("whileFocus", true);
        this.isActive = true;
      }
      onBlur() {
        if (!this.isActive || !this.node.animationState)
          return;
        this.node.animationState.setActive("whileFocus", false);
        this.isActive = false;
      }
      mount() {
        this.unmount = pipe2(addDomEvent2(this.node.current, "focus", () => this.onFocus()), addDomEvent2(this.node.current, "blur", () => this.onBlur()));
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/press.mjs
function handlePressEvent2(node, event, lifecycle) {
  const { props } = node;
  if (node.current instanceof HTMLButtonElement && node.current.disabled) {
    return;
  }
  if (node.animationState && props.whileTap) {
    node.animationState.setActive("whileTap", lifecycle === "Start");
  }
  const eventName = "onTap" + (lifecycle === "End" ? "" : lifecycle);
  const callback = props[eventName];
  if (callback) {
    frame2.postRender(() => callback(event, extractEventInfo2(event)));
  }
}
var PressGesture2;
var init_press4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/gestures/press.mjs"() {
    init_es2();
    init_event_info2();
    init_Feature2();
    PressGesture2 = class extends Feature2 {
      mount() {
        const { current } = this.node;
        if (!current)
          return;
        this.unmount = press2(current, (_element, startEvent) => {
          handlePressEvent2(this.node, startEvent, "Start");
          return (endEvent, { success }) => handlePressEvent2(this.node, endEvent, success ? "End" : "Cancel");
        }, { useGlobalTarget: this.node.props.globalTapTarget });
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
function initIntersectionObserver2({ root: root5, ...options }) {
  const lookupRoot = root5 || document;
  if (!observers2.has(lookupRoot)) {
    observers2.set(lookupRoot, {});
  }
  const rootObservers = observers2.get(lookupRoot);
  const key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks2, { root: root5, ...options });
  }
  return rootObservers[key];
}
function observeIntersection2(element, options, callback) {
  const rootInteresectionObserver = initIntersectionObserver2(options);
  observerCallbacks2.set(element, callback);
  rootInteresectionObserver.observe(element);
  return () => {
    observerCallbacks2.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}
var observerCallbacks2, observers2, fireObserverCallback2, fireAllObserverCallbacks2;
var init_observers2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs"() {
    observerCallbacks2 = /* @__PURE__ */ new WeakMap();
    observers2 = /* @__PURE__ */ new WeakMap();
    fireObserverCallback2 = (entry) => {
      const callback = observerCallbacks2.get(entry.target);
      callback && callback(entry);
    };
    fireAllObserverCallbacks2 = (entries) => {
      entries.forEach(fireObserverCallback2);
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs
function hasViewportOptionChanged2({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name2) => viewport[name2] !== prevViewport[name2];
}
var thresholdNames2, InViewFeature2;
var init_viewport2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs"() {
    init_Feature2();
    init_observers2();
    thresholdNames2 = {
      some: 0,
      all: 1
    };
    InViewFeature2 = class extends Feature2 {
      constructor() {
        super(...arguments);
        this.hasEnteredView = false;
        this.isInView = false;
      }
      startObserver() {
        this.unmount();
        const { viewport = {} } = this.node.getProps();
        const { root: root5, margin: rootMargin, amount = "some", once } = viewport;
        const options = {
          root: root5 ? root5.current : void 0,
          rootMargin,
          threshold: typeof amount === "number" ? amount : thresholdNames2[amount]
        };
        const onIntersectionUpdate = (entry) => {
          const { isIntersecting } = entry;
          if (this.isInView === isIntersecting)
            return;
          this.isInView = isIntersecting;
          if (once && !isIntersecting && this.hasEnteredView) {
            return;
          } else if (isIntersecting) {
            this.hasEnteredView = true;
          }
          if (this.node.animationState) {
            this.node.animationState.setActive("whileInView", isIntersecting);
          }
          const { onViewportEnter, onViewportLeave } = this.node.getProps();
          const callback = isIntersecting ? onViewportEnter : onViewportLeave;
          callback && callback(entry);
        };
        return observeIntersection2(this.node.current, options, onIntersectionUpdate);
      }
      mount() {
        this.startObserver();
      }
      update() {
        if (typeof IntersectionObserver === "undefined")
          return;
        const { props, prevProps } = this.node;
        const hasOptionsChanged = ["amount", "margin", "root"].some(hasViewportOptionChanged2(props, prevProps));
        if (hasOptionsChanged) {
          this.startObserver();
        }
      }
      unmount() {
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations2;
var init_gestures2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/gestures.mjs"() {
    init_hover4();
    init_focus2();
    init_press4();
    init_viewport2();
    gestureAnimations2 = {
      inView: {
        Feature: InViewFeature2
      },
      tap: {
        Feature: PressGesture2
      },
      focus: {
        Feature: FocusGesture2
      },
      hover: {
        Feature: HoverGesture2
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/layout.mjs
var layout2;
var init_layout2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/motion/features/layout.mjs"() {
    init_HTMLProjectionNode2();
    init_MeasureLayout2();
    layout2 = {
      layout: {
        ProjectionNode: HTMLProjectionNode2,
        MeasureLayout: MeasureLayout2
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs
var prefersReducedMotion2, hasReducedMotionListener2;
var init_state6 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs"() {
    prefersReducedMotion2 = { current: null };
    hasReducedMotionListener2 = { current: false };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs
function initPrefersReducedMotion2() {
  hasReducedMotionListener2.current = true;
  if (!isBrowser4)
    return;
  if (window.matchMedia) {
    const motionMediaQuery = window.matchMedia("(prefers-reduced-motion)");
    const setReducedMotionPreferences = () => prefersReducedMotion2.current = motionMediaQuery.matches;
    motionMediaQuery.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion2.current = false;
  }
}
var init_reduced_motion2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs"() {
    init_is_browser2();
    init_state6();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes2, findValueType2;
var init_find4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs"() {
    init_color3();
    init_complex3();
    init_dimensions2();
    init_test2();
    valueTypes2 = [...dimensionValueTypes2, color2, complex2];
    findValueType2 = (v5) => valueTypes2.find(testValueType2(v5));
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/store.mjs
var visualElementStore2;
var init_store3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/store.mjs"() {
    visualElementStore2 = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps2(element, next, prev) {
  for (const key in next) {
    const nextValue = next[key];
    const prevValue = prev[key];
    if (isMotionValue2(nextValue)) {
      element.addValue(key, nextValue);
      if (false) {
        warnOnce(nextValue.version === "12.7.4", `Attempting to mix Motion versions ${nextValue.version} with 12.7.4 may not work as expected.`);
      }
    } else if (isMotionValue2(prevValue)) {
      element.addValue(key, motionValue2(nextValue, { owner: element }));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        const existingValue = element.getValue(key);
        if (existingValue.liveStyle === true) {
          existingValue.jump(nextValue);
        } else if (!existingValue.hasAnimated) {
          existingValue.set(nextValue);
        }
      } else {
        const latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue2(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
    }
  }
  for (const key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}
var init_motion_values2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs"() {
    init_es2();
    init_is_motion_value2();
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/VisualElement.mjs
var propEventHandlers2, VisualElement2;
var init_VisualElement2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/VisualElement.mjs"() {
    init_es2();
    init_es();
    init_definitions2();
    init_models2();
    init_is_numerical_string2();
    init_is_zero_value_string2();
    init_reduced_motion2();
    init_state6();
    init_complex3();
    init_is_motion_value2();
    init_animatable_none2();
    init_find4();
    init_keys_transform2();
    init_store3();
    init_is_controlling_variants2();
    init_KeyframesResolver2();
    init_motion_values2();
    init_resolve_variants2();
    propEventHandlers2 = [
      "AnimationStart",
      "AnimationComplete",
      "Update",
      "BeforeLayoutMeasure",
      "LayoutMeasure",
      "LayoutAnimationStart",
      "LayoutAnimationComplete"
    ];
    VisualElement2 = class {
      /**
       * This method takes React props and returns found MotionValues. For example, HTML
       * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
       *
       * This isn't an abstract method as it needs calling in the constructor, but it is
       * intended to be one.
       */
      scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {
        return {};
      }
      constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState }, options = {}) {
        this.current = null;
        this.children = /* @__PURE__ */ new Set();
        this.isVariantNode = false;
        this.isControllingVariants = false;
        this.shouldReduceMotion = null;
        this.values = /* @__PURE__ */ new Map();
        this.KeyframeResolver = KeyframeResolver2;
        this.features = {};
        this.valueSubscriptions = /* @__PURE__ */ new Map();
        this.prevMotionValues = {};
        this.events = {};
        this.propEventSubscriptions = {};
        this.notifyUpdate = () => this.notify("Update", this.latestValues);
        this.render = () => {
          if (!this.current)
            return;
          this.triggerBuild();
          this.renderInstance(this.current, this.renderState, this.props.style, this.projection);
        };
        this.renderScheduledAt = 0;
        this.scheduleRender = () => {
          const now3 = time2.now();
          if (this.renderScheduledAt < now3) {
            this.renderScheduledAt = now3;
            frame2.render(this.render, false, true);
          }
        };
        const { latestValues, renderState, onUpdate } = visualState;
        this.onUpdate = onUpdate;
        this.latestValues = latestValues;
        this.baseTarget = { ...latestValues };
        this.initialValues = props.initial ? { ...latestValues } : {};
        this.renderState = renderState;
        this.parent = parent;
        this.props = props;
        this.presenceContext = presenceContext;
        this.depth = parent ? parent.depth + 1 : 0;
        this.reducedMotionConfig = reducedMotionConfig;
        this.options = options;
        this.blockInitialAnimation = Boolean(blockInitialAnimation);
        this.isControllingVariants = isControllingVariants2(props);
        this.isVariantNode = isVariantNode2(props);
        if (this.isVariantNode) {
          this.variantChildren = /* @__PURE__ */ new Set();
        }
        this.manuallyAnimateOnMount = Boolean(parent && parent.current);
        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);
        for (const key in initialMotionValues) {
          const value = initialMotionValues[key];
          if (latestValues[key] !== void 0 && isMotionValue2(value)) {
            value.set(latestValues[key], false);
          }
        }
      }
      mount(instance) {
        this.current = instance;
        visualElementStore2.set(instance, this);
        if (this.projection && !this.projection.instance) {
          this.projection.mount(instance);
        }
        if (this.parent && this.isVariantNode && !this.isControllingVariants) {
          this.removeFromVariantTree = this.parent.addVariantChild(this);
        }
        this.values.forEach((value, key) => this.bindToMotionValue(key, value));
        if (!hasReducedMotionListener2.current) {
          initPrefersReducedMotion2();
        }
        this.shouldReduceMotion = this.reducedMotionConfig === "never" ? false : this.reducedMotionConfig === "always" ? true : prefersReducedMotion2.current;
        if (false) {
          warnOnce(this.shouldReduceMotion !== true, "You have Reduced Motion enabled on your device. Animations may not appear as expected.");
        }
        if (this.parent)
          this.parent.children.add(this);
        this.update(this.props, this.presenceContext);
      }
      unmount() {
        this.projection && this.projection.unmount();
        cancelFrame2(this.notifyUpdate);
        cancelFrame2(this.render);
        this.valueSubscriptions.forEach((remove) => remove());
        this.valueSubscriptions.clear();
        this.removeFromVariantTree && this.removeFromVariantTree();
        this.parent && this.parent.children.delete(this);
        for (const key in this.events) {
          this.events[key].clear();
        }
        for (const key in this.features) {
          const feature = this.features[key];
          if (feature) {
            feature.unmount();
            feature.isMounted = false;
          }
        }
        this.current = null;
      }
      bindToMotionValue(key, value) {
        if (this.valueSubscriptions.has(key)) {
          this.valueSubscriptions.get(key)();
        }
        const valueIsTransform = transformProps2.has(key);
        if (valueIsTransform && this.onBindTransform) {
          this.onBindTransform();
        }
        const removeOnChange = value.on("change", (latestValue) => {
          this.latestValues[key] = latestValue;
          this.props.onUpdate && frame2.preRender(this.notifyUpdate);
          if (valueIsTransform && this.projection) {
            this.projection.isTransformDirty = true;
          }
        });
        const removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
        let removeSyncCheck;
        if (window.MotionCheckAppearSync) {
          removeSyncCheck = window.MotionCheckAppearSync(this, key, value);
        }
        this.valueSubscriptions.set(key, () => {
          removeOnChange();
          removeOnRenderRequest();
          if (removeSyncCheck)
            removeSyncCheck();
          if (value.owner)
            value.stop();
        });
      }
      sortNodePosition(other) {
        if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {
          return 0;
        }
        return this.sortInstanceNodePosition(this.current, other.current);
      }
      updateFeatures() {
        let key = "animation";
        for (key in featureDefinitions2) {
          const featureDefinition = featureDefinitions2[key];
          if (!featureDefinition)
            continue;
          const { isEnabled, Feature: FeatureConstructor } = featureDefinition;
          if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {
            this.features[key] = new FeatureConstructor(this);
          }
          if (this.features[key]) {
            const feature = this.features[key];
            if (feature.isMounted) {
              feature.update();
            } else {
              feature.mount();
              feature.isMounted = true;
            }
          }
        }
      }
      triggerBuild() {
        this.build(this.renderState, this.latestValues, this.props);
      }
      /**
       * Measure the current viewport box with or without transforms.
       * Only measures axis-aligned boxes, rotate and skew must be manually
       * removed with a re-render to work.
       */
      measureViewportBox() {
        return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox2();
      }
      getStaticValue(key) {
        return this.latestValues[key];
      }
      setStaticValue(key, value) {
        this.latestValues[key] = value;
      }
      /**
       * Update the provided props. Ensure any newly-added motion values are
       * added to our map, old ones removed, and listeners updated.
       */
      update(props, presenceContext) {
        if (props.transformTemplate || this.props.transformTemplate) {
          this.scheduleRender();
        }
        this.prevProps = this.props;
        this.props = props;
        this.prevPresenceContext = this.presenceContext;
        this.presenceContext = presenceContext;
        for (let i11 = 0; i11 < propEventHandlers2.length; i11++) {
          const key = propEventHandlers2[i11];
          if (this.propEventSubscriptions[key]) {
            this.propEventSubscriptions[key]();
            delete this.propEventSubscriptions[key];
          }
          const listenerName = "on" + key;
          const listener = props[listenerName];
          if (listener) {
            this.propEventSubscriptions[key] = this.on(key, listener);
          }
        }
        this.prevMotionValues = updateMotionValuesFromProps2(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);
        if (this.handleChildMotionValue) {
          this.handleChildMotionValue();
        }
        this.onUpdate && this.onUpdate(this);
      }
      getProps() {
        return this.props;
      }
      /**
       * Returns the variant definition with a given name.
       */
      getVariant(name2) {
        return this.props.variants ? this.props.variants[name2] : void 0;
      }
      /**
       * Returns the defined default transition on this component.
       */
      getDefaultTransition() {
        return this.props.transition;
      }
      getTransformPagePoint() {
        return this.props.transformPagePoint;
      }
      getClosestVariantNode() {
        return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
      }
      /**
       * Add a child visual element to our set of children.
       */
      addVariantChild(child) {
        const closestVariantNode = this.getClosestVariantNode();
        if (closestVariantNode) {
          closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);
          return () => closestVariantNode.variantChildren.delete(child);
        }
      }
      /**
       * Add a motion value and bind it to this visual element.
       */
      addValue(key, value) {
        const existingValue = this.values.get(key);
        if (value !== existingValue) {
          if (existingValue)
            this.removeValue(key);
          this.bindToMotionValue(key, value);
          this.values.set(key, value);
          this.latestValues[key] = value.get();
        }
      }
      /**
       * Remove a motion value and unbind any active subscriptions.
       */
      removeValue(key) {
        this.values.delete(key);
        const unsubscribe = this.valueSubscriptions.get(key);
        if (unsubscribe) {
          unsubscribe();
          this.valueSubscriptions.delete(key);
        }
        delete this.latestValues[key];
        this.removeValueFromRenderState(key, this.renderState);
      }
      /**
       * Check whether we have a motion value for this key
       */
      hasValue(key) {
        return this.values.has(key);
      }
      getValue(key, defaultValue2) {
        if (this.props.values && this.props.values[key]) {
          return this.props.values[key];
        }
        let value = this.values.get(key);
        if (value === void 0 && defaultValue2 !== void 0) {
          value = motionValue2(defaultValue2 === null ? void 0 : defaultValue2, { owner: this });
          this.addValue(key, value);
        }
        return value;
      }
      /**
       * If we're trying to animate to a previously unencountered value,
       * we need to check for it in our state and as a last resort read it
       * directly from the instance (which might have performance implications).
       */
      readValue(key, target) {
        let value = this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : this.getBaseTargetFromProps(this.props, key) ?? this.readValueFromInstance(this.current, key, this.options);
        if (value !== void 0 && value !== null) {
          if (typeof value === "string" && (isNumericalString2(value) || isZeroValueString2(value))) {
            value = parseFloat(value);
          } else if (!findValueType2(value) && complex2.test(target)) {
            value = getAnimatableNone4(key, target);
          }
          this.setBaseTarget(key, isMotionValue2(value) ? value.get() : value);
        }
        return isMotionValue2(value) ? value.get() : value;
      }
      /**
       * Set the base target to later animate back to. This is currently
       * only hydrated on creation and when we first read a value.
       */
      setBaseTarget(key, value) {
        this.baseTarget[key] = value;
      }
      /**
       * Find the base target for a value thats been removed from all animation
       * props.
       */
      getBaseTarget(key) {
        const { initial } = this.props;
        let valueFromInitial;
        if (typeof initial === "string" || typeof initial === "object") {
          const variant = resolveVariantFromProps2(this.props, initial, this.presenceContext?.custom);
          if (variant) {
            valueFromInitial = variant[key];
          }
        }
        if (initial && valueFromInitial !== void 0) {
          return valueFromInitial;
        }
        const target = this.getBaseTargetFromProps(this.props, key);
        if (target !== void 0 && !isMotionValue2(target))
          return target;
        return this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
      }
      on(eventName, callback) {
        if (!this.events[eventName]) {
          this.events[eventName] = new SubscriptionManager2();
        }
        return this.events[eventName].add(callback);
      }
      notify(eventName, ...args) {
        if (this.events[eventName]) {
          this.events[eventName].notify(...args);
        }
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs
var DOMVisualElement2;
var init_DOMVisualElement2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs"() {
    init_is_motion_value2();
    init_VisualElement2();
    init_DOMKeyframesResolver2();
    DOMVisualElement2 = class extends VisualElement2 {
      constructor() {
        super(...arguments);
        this.KeyframeResolver = DOMKeyframesResolver2;
      }
      sortInstanceNodePosition(a12, b4) {
        return a12.compareDocumentPosition(b4) & 2 ? 1 : -1;
      }
      getBaseTargetFromProps(props, key) {
        return props.style ? props.style[key] : void 0;
      }
      removeValueFromRenderState(key, { vars, style }) {
        delete vars[key];
        delete style[key];
      }
      handleChildMotionValue() {
        if (this.childSubscription) {
          this.childSubscription();
          delete this.childSubscription;
        }
        const { children } = this.props;
        if (isMotionValue2(children)) {
          this.childSubscription = children.on("change", (latest) => {
            if (this.current) {
              this.current.textContent = `${latest}`;
            }
          });
        }
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs
function getComputedStyle3(element) {
  return window.getComputedStyle(element);
}
var HTMLVisualElement2;
var init_HTMLVisualElement2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs"() {
    init_measure4();
    init_DOMVisualElement2();
    init_is_css_variable2();
    init_build_styles2();
    init_keys_transform2();
    init_parse_transform2();
    init_render3();
    init_scrape_motion_values3();
    HTMLVisualElement2 = class extends DOMVisualElement2 {
      constructor() {
        super(...arguments);
        this.type = "html";
        this.renderInstance = renderHTML2;
      }
      readValueFromInstance(instance, key) {
        if (transformProps2.has(key)) {
          return readTransformValue2(instance, key);
        } else {
          const computedStyle = getComputedStyle3(instance);
          const value = (isCSSVariableName2(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
          return typeof value === "string" ? value.trim() : value;
        }
      }
      measureInstanceViewportBox(instance, { transformPagePoint }) {
        return measureViewportBox2(instance, transformPagePoint);
      }
      build(renderState, latestValues, props) {
        buildHTMLStyles2(renderState, latestValues, props.transformTemplate);
      }
      scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return scrapeMotionValuesFromProps3(props, prevProps, visualElement);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs
var SVGVisualElement2;
var init_SVGVisualElement2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"() {
    init_es2();
    init_models2();
    init_DOMVisualElement2();
    init_camel_to_dash2();
    init_defaults3();
    init_keys_transform2();
    init_build_attrs2();
    init_camel_case_attrs2();
    init_is_svg_tag2();
    init_measure3();
    init_render4();
    init_scrape_motion_values4();
    SVGVisualElement2 = class extends DOMVisualElement2 {
      constructor() {
        super(...arguments);
        this.type = "svg";
        this.isSVGTag = false;
        this.measureInstanceViewportBox = createBox2;
        this.updateDimensions = () => {
          if (this.current && !this.renderState.dimensions) {
            updateSVGDimensions2(this.current, this.renderState);
          }
        };
      }
      getBaseTargetFromProps(props, key) {
        return props[key];
      }
      readValueFromInstance(instance, key) {
        if (transformProps2.has(key)) {
          const defaultType = getDefaultValueType2(key);
          return defaultType ? defaultType.default || 0 : 0;
        }
        key = !camelCaseAttributes2.has(key) ? camelToDash2(key) : key;
        return instance.getAttribute(key);
      }
      scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return scrapeMotionValuesFromProps4(props, prevProps, visualElement);
      }
      onBindTransform() {
        if (this.current && !this.renderState.dimensions) {
          frame2.postRender(this.updateDimensions);
        }
      }
      build(renderState, latestValues, props) {
        buildSVGAttrs2(renderState, latestValues, this.isSVGTag, props.transformTemplate);
      }
      renderInstance(instance, renderState, styleProp, projection) {
        renderSVG2(instance, renderState, styleProp, projection);
      }
      mount(instance) {
        this.isSVGTag = isSVGTag2(instance.tagName);
        super.mount(instance);
      }
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var import_react213, createDomVisualElement2;
var init_create_visual_element2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"() {
    import_react213 = __toESM(require_react(), 1);
    init_HTMLVisualElement2();
    init_SVGVisualElement2();
    init_is_svg_component2();
    createDomVisualElement2 = (Component3, options) => {
      return isSVGComponent2(Component3) ? new SVGVisualElement2(options) : new HTMLVisualElement2(options, {
        allowProjection: Component3 !== import_react213.Fragment
      });
    };
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/motion/create.mjs
var createMotionComponent2;
var init_create4 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/motion/create.mjs"() {
    init_animations2();
    init_drag4();
    init_gestures2();
    init_layout2();
    init_create_factory2();
    init_create_visual_element2();
    createMotionComponent2 = /* @__PURE__ */ createMotionComponentFactory2({
      ...animations2,
      ...gestureAnimations2,
      ...drag2,
      ...layout2
    }, createDomVisualElement2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs
var motion2;
var init_proxy2 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs"() {
    init_create_proxy2();
    init_create4();
    motion2 = /* @__PURE__ */ createDOMMotionComponentProxy2(createMotionComponent2);
  }
});

// node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/index.mjs
var init_es3 = __esm({
  "node_modules/.pnpm/framer-motion@12.7.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/index.mjs"() {
    "use client";
    init_proxy2();
  }
});

// dist/server/chunks/chunk-BGA5CCak.js
var wrapper, card2, s25;
var init_chunk_BGA5CCak = __esm({
  "dist/server/chunks/chunk-BGA5CCak.js"() {
    "use strict";
    wrapper = "wk7GU";
    card2 = "AVJwS";
    s25 = {
      wrapper,
      card: card2
    };
  }
});

// dist/server/chunks/chunk-5uWBra5g.js
var stack, s26;
var init_chunk_5uWBra5g = __esm({
  "dist/server/chunks/chunk-5uWBra5g.js"() {
    "use strict";
    stack = "e86ds";
    s26 = {
      stack
    };
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_freeGlobal.js
var freeGlobal, freeGlobal_default;
var init_freeGlobal = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_freeGlobal.js"() {
    freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    freeGlobal_default = freeGlobal;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_root.js
var freeSelf, root2, root_default;
var init_root = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_root.js"() {
    init_freeGlobal();
    freeSelf = typeof self == "object" && self && self.Object === Object && self;
    root2 = freeGlobal_default || freeSelf || Function("return this")();
    root_default = root2;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Symbol.js
var Symbol2, Symbol_default;
var init_Symbol = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Symbol.js"() {
    init_root();
    Symbol2 = root_default.Symbol;
    Symbol_default = Symbol2;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getRawTag.js
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e12) {
  }
  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}
var objectProto, hasOwnProperty, nativeObjectToString, symToStringTag, getRawTag_default;
var init_getRawTag = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getRawTag.js"() {
    init_Symbol();
    objectProto = Object.prototype;
    hasOwnProperty = objectProto.hasOwnProperty;
    nativeObjectToString = objectProto.toString;
    symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
    getRawTag_default = getRawTag;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_objectToString.js
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectProto2, nativeObjectToString2, objectToString_default;
var init_objectToString = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_objectToString.js"() {
    objectProto2 = Object.prototype;
    nativeObjectToString2 = objectProto2.toString;
    objectToString_default = objectToString;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetTag.js
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var nullTag, undefinedTag, symToStringTag2, baseGetTag_default;
var init_baseGetTag = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetTag.js"() {
    init_Symbol();
    init_getRawTag();
    init_objectToString();
    nullTag = "[object Null]";
    undefinedTag = "[object Undefined]";
    symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
    baseGetTag_default = baseGetTag;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default;
var init_isObjectLike = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObjectLike.js"() {
    isObjectLike_default = isObjectLike;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isNumber.js
function isNumber(value) {
  return typeof value == "number" || isObjectLike_default(value) && baseGetTag_default(value) == numberTag;
}
var numberTag, isNumber_default;
var init_isNumber = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isNumber.js"() {
    init_baseGetTag();
    init_isObjectLike();
    numberTag = "[object Number]";
    isNumber_default = isNumber;
  }
});

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/lodash.js
var init_lodash = __esm({
  "node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/lodash.js"() {
    init_isNumber();
  }
});

// dist/server/chunks/chunk-Dag9IUf3.js
var tariff, price, num, full, list2, button, s27;
var init_chunk_Dag9IUf3 = __esm({
  "dist/server/chunks/chunk-Dag9IUf3.js"() {
    "use strict";
    tariff = "_2uar-";
    price = "gbRUO";
    num = "-aCKS";
    full = "_6ods4";
    list2 = "rg9uG";
    button = "A8IJ2";
    s27 = {
      tariff,
      price,
      num,
      full,
      list: list2,
      button
    };
  }
});

// dist/server/chunks/chunk-BI4hU6Kt.js
var flex3, union, s28;
var init_chunk_BI4hU6Kt = __esm({
  "dist/server/chunks/chunk-BI4hU6Kt.js"() {
    "use strict";
    flex3 = "_3qVBQ";
    union = "cKQ-a";
    s28 = {
      flex: flex3,
      union
    };
  }
});

// dist/server/chunks/chunk-CB7-bpg8.js
var wrapper2, title4, flex4, paper2, number3, cardTitle, cardText, s29;
var init_chunk_CB7_bpg8 = __esm({
  "dist/server/chunks/chunk-CB7-bpg8.js"() {
    "use strict";
    wrapper2 = "qanAt";
    title4 = "KsQns";
    flex4 = "ucaHs";
    paper2 = "_8WGW7";
    number3 = "_78TnB";
    cardTitle = "kIgdr";
    cardText = "_25-nr";
    s29 = {
      wrapper: wrapper2,
      title: title4,
      flex: flex4,
      paper: paper2,
      number: number3,
      cardTitle,
      cardText
    };
  }
});

// dist/server/chunks/chunk-DEvQl2lk.js
var wrapper3, items2, container, item, mobile, content, s30;
var init_chunk_DEvQl2lk = __esm({
  "dist/server/chunks/chunk-DEvQl2lk.js"() {
    "use strict";
    wrapper3 = "r-9-V";
    items2 = "XWezW";
    container = "sgmXU";
    item = "KVgjk";
    mobile = "zHZCm";
    content = "Bu689";
    s30 = {
      wrapper: wrapper3,
      items: items2,
      container,
      item,
      mobile,
      content
    };
  }
});

// dist/server/chunks/chunk-CrzyYD85.js
var root3, title5, container2, content2, cardTitle2, cardDescription, images, s31;
var init_chunk_CrzyYD85 = __esm({
  "dist/server/chunks/chunk-CrzyYD85.js"() {
    "use strict";
    root3 = "_0-1PX";
    title5 = "QjnKa";
    container2 = "H9zrB";
    content2 = "F029H";
    cardTitle2 = "qMthH";
    cardDescription = "vWGvW";
    images = "zdbra";
    s31 = {
      root: root3,
      title: title5,
      container: container2,
      content: content2,
      cardTitle: cardTitle2,
      cardDescription,
      images
    };
  }
});

// node_modules/.pnpm/embla-carousel-reactive-utils@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-reactive-utils/esm/embla-carousel-reactive-utils.esm.js
function isObject3(subject) {
  return Object.prototype.toString.call(subject) === "[object Object]";
}
function isRecord(subject) {
  return isObject3(subject) || Array.isArray(subject);
}
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
function areOptionsEqual(optionsA, optionsB) {
  const optionsAKeys = Object.keys(optionsA);
  const optionsBKeys = Object.keys(optionsB);
  if (optionsAKeys.length !== optionsBKeys.length) return false;
  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}));
  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}));
  if (breakpointsA !== breakpointsB) return false;
  return optionsAKeys.every((key) => {
    const valueA = optionsA[key];
    const valueB = optionsB[key];
    if (typeof valueA === "function") return `${valueA}` === `${valueB}`;
    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;
    return areOptionsEqual(valueA, valueB);
  });
}
function sortAndMapPluginToOptions(plugins) {
  return plugins.concat().sort((a12, b4) => a12.name > b4.name ? 1 : -1).map((plugin) => plugin.options);
}
function arePluginsEqual(pluginsA, pluginsB) {
  if (pluginsA.length !== pluginsB.length) return false;
  const optionsA = sortAndMapPluginToOptions(pluginsA);
  const optionsB = sortAndMapPluginToOptions(pluginsB);
  return optionsA.every((optionA, index) => {
    const optionB = optionsB[index];
    return areOptionsEqual(optionA, optionB);
  });
}
var init_embla_carousel_reactive_utils_esm = __esm({
  "node_modules/.pnpm/embla-carousel-reactive-utils@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-reactive-utils/esm/embla-carousel-reactive-utils.esm.js"() {
  }
});

// node_modules/.pnpm/embla-carousel@8.6.0/node_modules/embla-carousel/esm/embla-carousel.esm.js
function isNumber2(subject) {
  return typeof subject === "number";
}
function isString(subject) {
  return typeof subject === "string";
}
function isBoolean(subject) {
  return typeof subject === "boolean";
}
function isObject4(subject) {
  return Object.prototype.toString.call(subject) === "[object Object]";
}
function mathAbs(n12) {
  return Math.abs(n12);
}
function mathSign(n12) {
  return Math.sign(n12);
}
function deltaAbs(valueB, valueA) {
  return mathAbs(valueB - valueA);
}
function factorAbs(valueB, valueA) {
  if (valueB === 0 || valueA === 0) return 0;
  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;
  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));
  return mathAbs(diff / valueB);
}
function roundToTwoDecimals(num2) {
  return Math.round(num2 * 100) / 100;
}
function arrayKeys(array) {
  return objectKeys2(array).map(Number);
}
function arrayLast(array) {
  return array[arrayLastIndex(array)];
}
function arrayLastIndex(array) {
  return Math.max(0, array.length - 1);
}
function arrayIsLastIndex(array, index) {
  return index === arrayLastIndex(array);
}
function arrayFromNumber(n12, startAt = 0) {
  return Array.from(Array(n12), (_3, i11) => startAt + i11);
}
function objectKeys2(object) {
  return Object.keys(object);
}
function objectsMergeDeep(objectA, objectB) {
  return [objectA, objectB].reduce((mergedObjects, currentObject) => {
    objectKeys2(currentObject).forEach((key) => {
      const valueA = mergedObjects[key];
      const valueB = currentObject[key];
      const areObjects = isObject4(valueA) && isObject4(valueB);
      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;
    });
    return mergedObjects;
  }, {});
}
function isMouseEvent(evt, ownerWindow) {
  return typeof ownerWindow.MouseEvent !== "undefined" && evt instanceof ownerWindow.MouseEvent;
}
function Alignment(align, viewSize) {
  const predefined = {
    start,
    center,
    end
  };
  function start() {
    return 0;
  }
  function center(n12) {
    return end(n12) / 2;
  }
  function end(n12) {
    return viewSize - n12;
  }
  function measure2(n12, index) {
    if (isString(align)) return predefined[align](n12);
    return align(viewSize, n12, index);
  }
  const self2 = {
    measure: measure2
  };
  return self2;
}
function EventStore() {
  let listeners = [];
  function add(node, type, handler2, options = {
    passive: true
  }) {
    let removeListener;
    if ("addEventListener" in node) {
      node.addEventListener(type, handler2, options);
      removeListener = () => node.removeEventListener(type, handler2, options);
    } else {
      const legacyMediaQueryList = node;
      legacyMediaQueryList.addListener(handler2);
      removeListener = () => legacyMediaQueryList.removeListener(handler2);
    }
    listeners.push(removeListener);
    return self2;
  }
  function clear() {
    listeners = listeners.filter((remove) => remove());
  }
  const self2 = {
    add,
    clear
  };
  return self2;
}
function Animations(ownerDocument, ownerWindow, update, render) {
  const documentVisibleHandler = EventStore();
  const fixedTimeStep = 1e3 / 60;
  let lastTimeStamp = null;
  let accumulatedTime = 0;
  let animationId = 0;
  function init() {
    documentVisibleHandler.add(ownerDocument, "visibilitychange", () => {
      if (ownerDocument.hidden) reset();
    });
  }
  function destroy() {
    stop();
    documentVisibleHandler.clear();
  }
  function animate(timeStamp) {
    if (!animationId) return;
    if (!lastTimeStamp) {
      lastTimeStamp = timeStamp;
      update();
      update();
    }
    const timeElapsed = timeStamp - lastTimeStamp;
    lastTimeStamp = timeStamp;
    accumulatedTime += timeElapsed;
    while (accumulatedTime >= fixedTimeStep) {
      update();
      accumulatedTime -= fixedTimeStep;
    }
    const alpha4 = accumulatedTime / fixedTimeStep;
    render(alpha4);
    if (animationId) {
      animationId = ownerWindow.requestAnimationFrame(animate);
    }
  }
  function start() {
    if (animationId) return;
    animationId = ownerWindow.requestAnimationFrame(animate);
  }
  function stop() {
    ownerWindow.cancelAnimationFrame(animationId);
    lastTimeStamp = null;
    accumulatedTime = 0;
    animationId = 0;
  }
  function reset() {
    lastTimeStamp = null;
    accumulatedTime = 0;
  }
  const self2 = {
    init,
    destroy,
    start,
    stop,
    update,
    render
  };
  return self2;
}
function Axis(axis, contentDirection) {
  const isRightToLeft = contentDirection === "rtl";
  const isVertical = axis === "y";
  const scroll2 = isVertical ? "y" : "x";
  const cross = isVertical ? "x" : "y";
  const sign = !isVertical && isRightToLeft ? -1 : 1;
  const startEdge = getStartEdge();
  const endEdge = getEndEdge();
  function measureSize(nodeRect) {
    const {
      height,
      width
    } = nodeRect;
    return isVertical ? height : width;
  }
  function getStartEdge() {
    if (isVertical) return "top";
    return isRightToLeft ? "right" : "left";
  }
  function getEndEdge() {
    if (isVertical) return "bottom";
    return isRightToLeft ? "left" : "right";
  }
  function direction(n12) {
    return n12 * sign;
  }
  const self2 = {
    scroll: scroll2,
    cross,
    startEdge,
    endEdge,
    measureSize,
    direction
  };
  return self2;
}
function Limit(min = 0, max = 0) {
  const length = mathAbs(min - max);
  function reachedMin(n12) {
    return n12 < min;
  }
  function reachedMax(n12) {
    return n12 > max;
  }
  function reachedAny(n12) {
    return reachedMin(n12) || reachedMax(n12);
  }
  function constrain(n12) {
    if (!reachedAny(n12)) return n12;
    return reachedMin(n12) ? min : max;
  }
  function removeOffset(n12) {
    if (!length) return n12;
    return n12 - length * Math.ceil((n12 - max) / length);
  }
  const self2 = {
    length,
    max,
    min,
    constrain,
    reachedAny,
    reachedMax,
    reachedMin,
    removeOffset
  };
  return self2;
}
function Counter(max, start, loop) {
  const {
    constrain
  } = Limit(0, max);
  const loopEnd = max + 1;
  let counter = withinLimit(start);
  function withinLimit(n12) {
    return !loop ? constrain(n12) : mathAbs((loopEnd + n12) % loopEnd);
  }
  function get() {
    return counter;
  }
  function set2(n12) {
    counter = withinLimit(n12);
    return self2;
  }
  function add(n12) {
    return clone().set(get() + n12);
  }
  function clone() {
    return Counter(max, get(), loop);
  }
  const self2 = {
    get,
    set: set2,
    add,
    clone
  };
  return self2;
}
function DragHandler(axis, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {
  const {
    cross: crossAxis,
    direction
  } = axis;
  const focusNodes = ["INPUT", "SELECT", "TEXTAREA"];
  const nonPassiveEvent = {
    passive: false
  };
  const initEvents = EventStore();
  const dragEvents = EventStore();
  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));
  const snapForceBoost = {
    mouse: 300,
    touch: 400
  };
  const freeForceBoost = {
    mouse: 500,
    touch: 600
  };
  const baseSpeed = dragFree ? 43 : 25;
  let isMoving = false;
  let startScroll = 0;
  let startCross = 0;
  let pointerIsDown = false;
  let preventScroll = false;
  let preventClick = false;
  let isMouse = false;
  function init(emblaApi) {
    if (!watchDrag) return;
    function downIfAllowed(evt) {
      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);
    }
    const node = rootNode;
    initEvents.add(node, "dragstart", (evt) => evt.preventDefault(), nonPassiveEvent).add(node, "touchmove", () => void 0, nonPassiveEvent).add(node, "touchend", () => void 0).add(node, "touchstart", downIfAllowed).add(node, "mousedown", downIfAllowed).add(node, "touchcancel", up).add(node, "contextmenu", up).add(node, "click", click, true);
  }
  function destroy() {
    initEvents.clear();
    dragEvents.clear();
  }
  function addDragEvents() {
    const node = isMouse ? ownerDocument : rootNode;
    dragEvents.add(node, "touchmove", move, nonPassiveEvent).add(node, "touchend", up).add(node, "mousemove", move, nonPassiveEvent).add(node, "mouseup", up);
  }
  function isFocusNode(node) {
    const nodeName = node.nodeName || "";
    return focusNodes.includes(nodeName);
  }
  function forceBoost() {
    const boost = dragFree ? freeForceBoost : snapForceBoost;
    const type = isMouse ? "mouse" : "touch";
    return boost[type];
  }
  function allowedForce(force, targetChanged) {
    const next = index.add(mathSign(force) * -1);
    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;
    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;
    if (skipSnaps && targetChanged) return baseForce * 0.5;
    return scrollTarget.byIndex(next.get(), 0).distance;
  }
  function down(evt) {
    const isMouseEvt = isMouseEvent(evt, ownerWindow);
    isMouse = isMouseEvt;
    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;
    isMoving = deltaAbs(target.get(), location.get()) >= 2;
    if (isMouseEvt && evt.button !== 0) return;
    if (isFocusNode(evt.target)) return;
    pointerIsDown = true;
    dragTracker.pointerDown(evt);
    scrollBody.useFriction(0).useDuration(0);
    target.set(location);
    addDragEvents();
    startScroll = dragTracker.readPoint(evt);
    startCross = dragTracker.readPoint(evt, crossAxis);
    eventHandler.emit("pointerDown");
  }
  function move(evt) {
    const isTouchEvt = !isMouseEvent(evt, ownerWindow);
    if (isTouchEvt && evt.touches.length >= 2) return up(evt);
    const lastScroll = dragTracker.readPoint(evt);
    const lastCross = dragTracker.readPoint(evt, crossAxis);
    const diffScroll = deltaAbs(lastScroll, startScroll);
    const diffCross = deltaAbs(lastCross, startCross);
    if (!preventScroll && !isMouse) {
      if (!evt.cancelable) return up(evt);
      preventScroll = diffScroll > diffCross;
      if (!preventScroll) return up(evt);
    }
    const diff = dragTracker.pointerMove(evt);
    if (diffScroll > dragThreshold) preventClick = true;
    scrollBody.useFriction(0.3).useDuration(0.75);
    animation.start();
    target.add(direction(diff));
    evt.preventDefault();
  }
  function up(evt) {
    const currentLocation = scrollTarget.byDistance(0, false);
    const targetChanged = currentLocation.index !== index.get();
    const rawForce = dragTracker.pointerUp(evt) * forceBoost();
    const force = allowedForce(direction(rawForce), targetChanged);
    const forceFactor = factorAbs(rawForce, force);
    const speed = baseSpeed - 10 * forceFactor;
    const friction = baseFriction + forceFactor / 50;
    preventScroll = false;
    pointerIsDown = false;
    dragEvents.clear();
    scrollBody.useDuration(speed).useFriction(friction);
    scrollTo.distance(force, !dragFree);
    isMouse = false;
    eventHandler.emit("pointerUp");
  }
  function click(evt) {
    if (preventClick) {
      evt.stopPropagation();
      evt.preventDefault();
      preventClick = false;
    }
  }
  function pointerDown() {
    return pointerIsDown;
  }
  const self2 = {
    init,
    destroy,
    pointerDown
  };
  return self2;
}
function DragTracker(axis, ownerWindow) {
  const logInterval = 170;
  let startEvent;
  let lastEvent;
  function readTime(evt) {
    return evt.timeStamp;
  }
  function readPoint(evt, evtAxis) {
    const property = evtAxis || axis.scroll;
    const coord = `client${property === "x" ? "X" : "Y"}`;
    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord];
  }
  function pointerDown(evt) {
    startEvent = evt;
    lastEvent = evt;
    return readPoint(evt);
  }
  function pointerMove(evt) {
    const diff = readPoint(evt) - readPoint(lastEvent);
    const expired = readTime(evt) - readTime(startEvent) > logInterval;
    lastEvent = evt;
    if (expired) startEvent = evt;
    return diff;
  }
  function pointerUp(evt) {
    if (!startEvent || !lastEvent) return 0;
    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);
    const diffTime = readTime(evt) - readTime(startEvent);
    const expired = readTime(evt) - readTime(lastEvent) > logInterval;
    const force = diffDrag / diffTime;
    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;
    return isFlick ? force : 0;
  }
  const self2 = {
    pointerDown,
    pointerMove,
    pointerUp,
    readPoint
  };
  return self2;
}
function NodeRects() {
  function measure2(node) {
    const {
      offsetTop,
      offsetLeft,
      offsetWidth,
      offsetHeight
    } = node;
    const offset = {
      top: offsetTop,
      right: offsetLeft + offsetWidth,
      bottom: offsetTop + offsetHeight,
      left: offsetLeft,
      width: offsetWidth,
      height: offsetHeight
    };
    return offset;
  }
  const self2 = {
    measure: measure2
  };
  return self2;
}
function PercentOfView(viewSize) {
  function measure2(n12) {
    return viewSize * (n12 / 100);
  }
  const self2 = {
    measure: measure2
  };
  return self2;
}
function ResizeHandler(container5, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {
  const observeNodes = [container5].concat(slides);
  let resizeObserver;
  let containerSize;
  let slideSizes = [];
  let destroyed = false;
  function readSize(node) {
    return axis.measureSize(nodeRects.measure(node));
  }
  function init(emblaApi) {
    if (!watchResize) return;
    containerSize = readSize(container5);
    slideSizes = slides.map(readSize);
    function defaultCallback(entries) {
      for (const entry of entries) {
        if (destroyed) return;
        const isContainer = entry.target === container5;
        const slideIndex = slides.indexOf(entry.target);
        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];
        const newSize = readSize(isContainer ? container5 : slides[slideIndex]);
        const diffSize = mathAbs(newSize - lastSize);
        if (diffSize >= 0.5) {
          emblaApi.reInit();
          eventHandler.emit("resize");
          break;
        }
      }
    }
    resizeObserver = new ResizeObserver((entries) => {
      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {
        defaultCallback(entries);
      }
    });
    ownerWindow.requestAnimationFrame(() => {
      observeNodes.forEach((node) => resizeObserver.observe(node));
    });
  }
  function destroy() {
    destroyed = true;
    if (resizeObserver) resizeObserver.disconnect();
  }
  const self2 = {
    init,
    destroy
  };
  return self2;
}
function ScrollBody(location, offsetLocation, previousLocation, target, baseDuration, baseFriction) {
  let scrollVelocity = 0;
  let scrollDirection = 0;
  let scrollDuration = baseDuration;
  let scrollFriction = baseFriction;
  let rawLocation = location.get();
  let rawLocationPrevious = 0;
  function seek() {
    const displacement = target.get() - location.get();
    const isInstant = !scrollDuration;
    let scrollDistance = 0;
    if (isInstant) {
      scrollVelocity = 0;
      previousLocation.set(target);
      location.set(target);
      scrollDistance = displacement;
    } else {
      previousLocation.set(location);
      scrollVelocity += displacement / scrollDuration;
      scrollVelocity *= scrollFriction;
      rawLocation += scrollVelocity;
      location.add(scrollVelocity);
      scrollDistance = rawLocation - rawLocationPrevious;
    }
    scrollDirection = mathSign(scrollDistance);
    rawLocationPrevious = rawLocation;
    return self2;
  }
  function settled() {
    const diff = target.get() - offsetLocation.get();
    return mathAbs(diff) < 1e-3;
  }
  function duration() {
    return scrollDuration;
  }
  function direction() {
    return scrollDirection;
  }
  function velocity() {
    return scrollVelocity;
  }
  function useBaseDuration() {
    return useDuration(baseDuration);
  }
  function useBaseFriction() {
    return useFriction(baseFriction);
  }
  function useDuration(n12) {
    scrollDuration = n12;
    return self2;
  }
  function useFriction(n12) {
    scrollFriction = n12;
    return self2;
  }
  const self2 = {
    direction,
    duration,
    velocity,
    seek,
    settled,
    useBaseFriction,
    useBaseDuration,
    useFriction,
    useDuration
  };
  return self2;
}
function ScrollBounds(limit, location, target, scrollBody, percentOfView) {
  const pullBackThreshold = percentOfView.measure(10);
  const edgeOffsetTolerance = percentOfView.measure(50);
  const frictionLimit = Limit(0.1, 0.99);
  let disabled = false;
  function shouldConstrain() {
    if (disabled) return false;
    if (!limit.reachedAny(target.get())) return false;
    if (!limit.reachedAny(location.get())) return false;
    return true;
  }
  function constrain(pointerDown) {
    if (!shouldConstrain()) return;
    const edge = limit.reachedMin(location.get()) ? "min" : "max";
    const diffToEdge = mathAbs(limit[edge] - location.get());
    const diffToTarget = target.get() - location.get();
    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);
    target.subtract(diffToTarget * friction);
    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {
      target.set(limit.constrain(target.get()));
      scrollBody.useDuration(25).useBaseFriction();
    }
  }
  function toggleActive(active) {
    disabled = !active;
  }
  const self2 = {
    shouldConstrain,
    constrain,
    toggleActive
  };
  return self2;
}
function ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {
  const scrollBounds = Limit(-contentSize + viewSize, 0);
  const snapsBounded = measureBounded();
  const scrollContainLimit = findScrollContainLimit();
  const snapsContained = measureContained();
  function usePixelTolerance(bound, snap) {
    return deltaAbs(bound, snap) <= 1;
  }
  function findScrollContainLimit() {
    const startSnap = snapsBounded[0];
    const endSnap = arrayLast(snapsBounded);
    const min = snapsBounded.lastIndexOf(startSnap);
    const max = snapsBounded.indexOf(endSnap) + 1;
    return Limit(min, max);
  }
  function measureBounded() {
    return snapsAligned.map((snapAligned, index) => {
      const {
        min,
        max
      } = scrollBounds;
      const snap = scrollBounds.constrain(snapAligned);
      const isFirst = !index;
      const isLast = arrayIsLastIndex(snapsAligned, index);
      if (isFirst) return max;
      if (isLast) return min;
      if (usePixelTolerance(min, snap)) return min;
      if (usePixelTolerance(max, snap)) return max;
      return snap;
    }).map((scrollBound) => parseFloat(scrollBound.toFixed(3)));
  }
  function measureContained() {
    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];
    if (containScroll === "keepSnaps") return snapsBounded;
    const {
      min,
      max
    } = scrollContainLimit;
    return snapsBounded.slice(min, max);
  }
  const self2 = {
    snapsContained,
    scrollContainLimit
  };
  return self2;
}
function ScrollLimit(contentSize, scrollSnaps, loop) {
  const max = scrollSnaps[0];
  const min = loop ? max - contentSize : arrayLast(scrollSnaps);
  const limit = Limit(min, max);
  const self2 = {
    limit
  };
  return self2;
}
function ScrollLooper(contentSize, limit, location, vectors) {
  const jointSafety = 0.1;
  const min = limit.min + jointSafety;
  const max = limit.max + jointSafety;
  const {
    reachedMin,
    reachedMax
  } = Limit(min, max);
  function shouldLoop(direction) {
    if (direction === 1) return reachedMax(location.get());
    if (direction === -1) return reachedMin(location.get());
    return false;
  }
  function loop(direction) {
    if (!shouldLoop(direction)) return;
    const loopDistance = contentSize * (direction * -1);
    vectors.forEach((v5) => v5.add(loopDistance));
  }
  const self2 = {
    loop
  };
  return self2;
}
function ScrollProgress(limit) {
  const {
    max,
    length
  } = limit;
  function get(n12) {
    const currentLocation = n12 - max;
    return length ? currentLocation / -length : 0;
  }
  const self2 = {
    get
  };
  return self2;
}
function ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {
  const {
    startEdge,
    endEdge
  } = axis;
  const {
    groupSlides
  } = slidesToScroll;
  const alignments = measureSizes().map(alignment.measure);
  const snaps = measureUnaligned();
  const snapsAligned = measureAligned();
  function measureSizes() {
    return groupSlides(slideRects).map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);
  }
  function measureUnaligned() {
    return slideRects.map((rect) => containerRect[startEdge] - rect[startEdge]).map((snap) => -mathAbs(snap));
  }
  function measureAligned() {
    return groupSlides(snaps).map((g9) => g9[0]).map((snap, index) => snap + alignments[index]);
  }
  const self2 = {
    snaps,
    snapsAligned
  };
  return self2;
}
function SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {
  const {
    groupSlides
  } = slidesToScroll;
  const {
    min,
    max
  } = scrollContainLimit;
  const slideRegistry = createSlideRegistry();
  function createSlideRegistry() {
    const groupedSlideIndexes = groupSlides(slideIndexes);
    const doNotContain = !containSnaps || containScroll === "keepSnaps";
    if (scrollSnaps.length === 1) return [slideIndexes];
    if (doNotContain) return groupedSlideIndexes;
    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {
      const isFirst = !index;
      const isLast = arrayIsLastIndex(groups, index);
      if (isFirst) {
        const range = arrayLast(groups[0]) + 1;
        return arrayFromNumber(range);
      }
      if (isLast) {
        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;
        return arrayFromNumber(range, arrayLast(groups)[0]);
      }
      return group;
    });
  }
  const self2 = {
    slideRegistry
  };
  return self2;
}
function ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {
  const {
    reachedAny,
    removeOffset,
    constrain
  } = limit;
  function minDistance(distances) {
    return distances.concat().sort((a12, b4) => mathAbs(a12) - mathAbs(b4))[0];
  }
  function findTargetSnap(target) {
    const distance3 = loop ? removeOffset(target) : constrain(target);
    const ascDiffsToSnaps = scrollSnaps.map((snap, index2) => ({
      diff: shortcut(snap - distance3, 0),
      index: index2
    })).sort((d1, d22) => mathAbs(d1.diff) - mathAbs(d22.diff));
    const {
      index
    } = ascDiffsToSnaps[0];
    return {
      index,
      distance: distance3
    };
  }
  function shortcut(target, direction) {
    const targets = [target, target + contentSize, target - contentSize];
    if (!loop) return target;
    if (!direction) return minDistance(targets);
    const matchingTargets = targets.filter((t13) => mathSign(t13) === direction);
    if (matchingTargets.length) return minDistance(matchingTargets);
    return arrayLast(targets) - contentSize;
  }
  function byIndex(index, direction) {
    const diffToSnap = scrollSnaps[index] - targetVector.get();
    const distance3 = shortcut(diffToSnap, direction);
    return {
      index,
      distance: distance3
    };
  }
  function byDistance(distance3, snap) {
    const target = targetVector.get() + distance3;
    const {
      index,
      distance: targetSnapDistance
    } = findTargetSnap(target);
    const reachedBound = !loop && reachedAny(target);
    if (!snap || reachedBound) return {
      index,
      distance: distance3
    };
    const diffToSnap = scrollSnaps[index] - targetSnapDistance;
    const snapDistance = distance3 + shortcut(diffToSnap, 0);
    return {
      index,
      distance: snapDistance
    };
  }
  const self2 = {
    byDistance,
    byIndex,
    shortcut
  };
  return self2;
}
function ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {
  function scrollTo(target) {
    const distanceDiff = target.distance;
    const indexDiff = target.index !== indexCurrent.get();
    targetVector.add(distanceDiff);
    if (distanceDiff) {
      if (scrollBody.duration()) {
        animation.start();
      } else {
        animation.update();
        animation.render(1);
        animation.update();
      }
    }
    if (indexDiff) {
      indexPrevious.set(indexCurrent.get());
      indexCurrent.set(target.index);
      eventHandler.emit("select");
    }
  }
  function distance3(n12, snap) {
    const target = scrollTarget.byDistance(n12, snap);
    scrollTo(target);
  }
  function index(n12, direction) {
    const targetIndex = indexCurrent.clone().set(n12);
    const target = scrollTarget.byIndex(targetIndex.get(), direction);
    scrollTo(target);
  }
  const self2 = {
    distance: distance3,
    index
  };
  return self2;
}
function SlideFocus(root5, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus) {
  const focusListenerOptions = {
    passive: true,
    capture: true
  };
  let lastTabPressTime = 0;
  function init(emblaApi) {
    if (!watchFocus) return;
    function defaultCallback(index) {
      const nowTime = (/* @__PURE__ */ new Date()).getTime();
      const diffTime = nowTime - lastTabPressTime;
      if (diffTime > 10) return;
      eventHandler.emit("slideFocusStart");
      root5.scrollLeft = 0;
      const group = slideRegistry.findIndex((group2) => group2.includes(index));
      if (!isNumber2(group)) return;
      scrollBody.useDuration(0);
      scrollTo.index(group, 0);
      eventHandler.emit("slideFocus");
    }
    eventStore.add(document, "keydown", registerTabPress, false);
    slides.forEach((slide2, slideIndex) => {
      eventStore.add(slide2, "focus", (evt) => {
        if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {
          defaultCallback(slideIndex);
        }
      }, focusListenerOptions);
    });
  }
  function registerTabPress(event) {
    if (event.code === "Tab") lastTabPressTime = (/* @__PURE__ */ new Date()).getTime();
  }
  const self2 = {
    init
  };
  return self2;
}
function Vector1D(initialValue) {
  let value = initialValue;
  function get() {
    return value;
  }
  function set2(n12) {
    value = normalizeInput(n12);
  }
  function add(n12) {
    value += normalizeInput(n12);
  }
  function subtract(n12) {
    value -= normalizeInput(n12);
  }
  function normalizeInput(n12) {
    return isNumber2(n12) ? n12 : n12.get();
  }
  const self2 = {
    get,
    set: set2,
    add,
    subtract
  };
  return self2;
}
function Translate(axis, container5) {
  const translate = axis.scroll === "x" ? x3 : y3;
  const containerStyle = container5.style;
  let previousTarget = null;
  let disabled = false;
  function x3(n12) {
    return `translate3d(${n12}px,0px,0px)`;
  }
  function y3(n12) {
    return `translate3d(0px,${n12}px,0px)`;
  }
  function to(target) {
    if (disabled) return;
    const newTarget = roundToTwoDecimals(axis.direction(target));
    if (newTarget === previousTarget) return;
    containerStyle.transform = translate(newTarget);
    previousTarget = newTarget;
  }
  function toggleActive(active) {
    disabled = !active;
  }
  function clear() {
    if (disabled) return;
    containerStyle.transform = "";
    if (!container5.getAttribute("style")) container5.removeAttribute("style");
  }
  const self2 = {
    clear,
    to,
    toggleActive
  };
  return self2;
}
function SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, location, slides) {
  const roundingSafety = 0.5;
  const ascItems = arrayKeys(slideSizesWithGaps);
  const descItems = arrayKeys(slideSizesWithGaps).reverse();
  const loopPoints = startPoints().concat(endPoints());
  function removeSlideSizes(indexes, from) {
    return indexes.reduce((a12, i11) => {
      return a12 - slideSizesWithGaps[i11];
    }, from);
  }
  function slidesInGap(indexes, gap) {
    return indexes.reduce((a12, i11) => {
      const remainingGap = removeSlideSizes(a12, gap);
      return remainingGap > 0 ? a12.concat([i11]) : a12;
    }, []);
  }
  function findSlideBounds(offset) {
    return snaps.map((snap, index) => ({
      start: snap - slideSizes[index] + roundingSafety + offset,
      end: snap + viewSize - roundingSafety + offset
    }));
  }
  function findLoopPoints(indexes, offset, isEndEdge) {
    const slideBounds = findSlideBounds(offset);
    return indexes.map((index) => {
      const initial = isEndEdge ? 0 : -contentSize;
      const altered = isEndEdge ? contentSize : 0;
      const boundEdge = isEndEdge ? "end" : "start";
      const loopPoint = slideBounds[index][boundEdge];
      return {
        index,
        loopPoint,
        slideLocation: Vector1D(-1),
        translate: Translate(axis, slides[index]),
        target: () => location.get() > loopPoint ? initial : altered
      };
    });
  }
  function startPoints() {
    const gap = scrollSnaps[0];
    const indexes = slidesInGap(descItems, gap);
    return findLoopPoints(indexes, contentSize, false);
  }
  function endPoints() {
    const gap = viewSize - scrollSnaps[0] - 1;
    const indexes = slidesInGap(ascItems, gap);
    return findLoopPoints(indexes, -contentSize, true);
  }
  function canLoop() {
    return loopPoints.every(({
      index
    }) => {
      const otherIndexes = ascItems.filter((i11) => i11 !== index);
      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;
    });
  }
  function loop() {
    loopPoints.forEach((loopPoint) => {
      const {
        target,
        translate,
        slideLocation
      } = loopPoint;
      const shiftLocation = target();
      if (shiftLocation === slideLocation.get()) return;
      translate.to(shiftLocation);
      slideLocation.set(shiftLocation);
    });
  }
  function clear() {
    loopPoints.forEach((loopPoint) => loopPoint.translate.clear());
  }
  const self2 = {
    canLoop,
    clear,
    loop,
    loopPoints
  };
  return self2;
}
function SlidesHandler(container5, eventHandler, watchSlides) {
  let mutationObserver;
  let destroyed = false;
  function init(emblaApi) {
    if (!watchSlides) return;
    function defaultCallback(mutations) {
      for (const mutation of mutations) {
        if (mutation.type === "childList") {
          emblaApi.reInit();
          eventHandler.emit("slidesChanged");
          break;
        }
      }
    }
    mutationObserver = new MutationObserver((mutations) => {
      if (destroyed) return;
      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {
        defaultCallback(mutations);
      }
    });
    mutationObserver.observe(container5, {
      childList: true
    });
  }
  function destroy() {
    if (mutationObserver) mutationObserver.disconnect();
    destroyed = true;
  }
  const self2 = {
    init,
    destroy
  };
  return self2;
}
function SlidesInView(container5, slides, eventHandler, threshold) {
  const intersectionEntryMap = {};
  let inViewCache = null;
  let notInViewCache = null;
  let intersectionObserver;
  let destroyed = false;
  function init() {
    intersectionObserver = new IntersectionObserver((entries) => {
      if (destroyed) return;
      entries.forEach((entry) => {
        const index = slides.indexOf(entry.target);
        intersectionEntryMap[index] = entry;
      });
      inViewCache = null;
      notInViewCache = null;
      eventHandler.emit("slidesInView");
    }, {
      root: container5.parentElement,
      threshold
    });
    slides.forEach((slide2) => intersectionObserver.observe(slide2));
  }
  function destroy() {
    if (intersectionObserver) intersectionObserver.disconnect();
    destroyed = true;
  }
  function createInViewList(inView) {
    return objectKeys2(intersectionEntryMap).reduce((list3, slideIndex) => {
      const index = parseInt(slideIndex);
      const {
        isIntersecting
      } = intersectionEntryMap[index];
      const inViewMatch = inView && isIntersecting;
      const notInViewMatch = !inView && !isIntersecting;
      if (inViewMatch || notInViewMatch) list3.push(index);
      return list3;
    }, []);
  }
  function get(inView = true) {
    if (inView && inViewCache) return inViewCache;
    if (!inView && notInViewCache) return notInViewCache;
    const slideIndexes = createInViewList(inView);
    if (inView) inViewCache = slideIndexes;
    if (!inView) notInViewCache = slideIndexes;
    return slideIndexes;
  }
  const self2 = {
    init,
    destroy,
    get
  };
  return self2;
}
function SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {
  const {
    measureSize,
    startEdge,
    endEdge
  } = axis;
  const withEdgeGap = slideRects[0] && readEdgeGap;
  const startGap = measureStartGap();
  const endGap = measureEndGap();
  const slideSizes = slideRects.map(measureSize);
  const slideSizesWithGaps = measureWithGaps();
  function measureStartGap() {
    if (!withEdgeGap) return 0;
    const slideRect = slideRects[0];
    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);
  }
  function measureEndGap() {
    if (!withEdgeGap) return 0;
    const style = ownerWindow.getComputedStyle(arrayLast(slides));
    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));
  }
  function measureWithGaps() {
    return slideRects.map((rect, index, rects) => {
      const isFirst = !index;
      const isLast = arrayIsLastIndex(rects, index);
      if (isFirst) return slideSizes[index] + startGap;
      if (isLast) return slideSizes[index] + endGap;
      return rects[index + 1][startEdge] - rect[startEdge];
    }).map(mathAbs);
  }
  const self2 = {
    slideSizes,
    slideSizesWithGaps,
    startGap,
    endGap
  };
  return self2;
}
function SlidesToScroll(axis, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {
  const {
    startEdge,
    endEdge,
    direction
  } = axis;
  const groupByNumber = isNumber2(slidesToScroll);
  function byNumber(array, groupSize) {
    return arrayKeys(array).filter((i11) => i11 % groupSize === 0).map((i11) => array.slice(i11, i11 + groupSize));
  }
  function bySize(array) {
    if (!array.length) return [];
    return arrayKeys(array).reduce((groups, rectB, index) => {
      const rectA = arrayLast(groups) || 0;
      const isFirst = rectA === 0;
      const isLast = rectB === arrayLastIndex(array);
      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];
      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];
      const gapA = !loop && isFirst ? direction(startGap) : 0;
      const gapB = !loop && isLast ? direction(endGap) : 0;
      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));
      if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB);
      if (isLast) groups.push(array.length);
      return groups;
    }, []).map((currentSize, index, groups) => {
      const previousSize = Math.max(groups[index - 1] || 0);
      return array.slice(previousSize, currentSize);
    });
  }
  function groupSlides(array) {
    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);
  }
  const self2 = {
    groupSlides
  };
  return self2;
}
function Engine(root5, container5, slides, ownerDocument, ownerWindow, options, eventHandler) {
  const {
    align,
    axis: scrollAxis,
    direction,
    startIndex,
    loop,
    duration,
    dragFree,
    dragThreshold,
    inViewThreshold,
    slidesToScroll: groupSlides,
    skipSnaps,
    containScroll,
    watchResize,
    watchSlides,
    watchDrag,
    watchFocus
  } = options;
  const pixelTolerance = 2;
  const nodeRects = NodeRects();
  const containerRect = nodeRects.measure(container5);
  const slideRects = slides.map(nodeRects.measure);
  const axis = Axis(scrollAxis, direction);
  const viewSize = axis.measureSize(containerRect);
  const percentOfView = PercentOfView(viewSize);
  const alignment = Alignment(align, viewSize);
  const containSnaps = !loop && !!containScroll;
  const readEdgeGap = loop || !!containScroll;
  const {
    slideSizes,
    slideSizesWithGaps,
    startGap,
    endGap
  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);
  const slidesToScroll = SlidesToScroll(axis, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);
  const {
    snaps,
    snapsAligned
  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);
  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);
  const {
    snapsContained,
    scrollContainLimit
  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);
  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;
  const {
    limit
  } = ScrollLimit(contentSize, scrollSnaps, loop);
  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);
  const indexPrevious = index.clone();
  const slideIndexes = arrayKeys(slides);
  const update = ({
    dragHandler,
    scrollBody: scrollBody2,
    scrollBounds,
    options: {
      loop: loop2
    }
  }) => {
    if (!loop2) scrollBounds.constrain(dragHandler.pointerDown());
    scrollBody2.seek();
  };
  const render = ({
    scrollBody: scrollBody2,
    translate,
    location: location2,
    offsetLocation: offsetLocation2,
    previousLocation: previousLocation2,
    scrollLooper,
    slideLooper,
    dragHandler,
    animation: animation2,
    eventHandler: eventHandler2,
    scrollBounds,
    options: {
      loop: loop2
    }
  }, alpha4) => {
    const shouldSettle = scrollBody2.settled();
    const withinBounds = !scrollBounds.shouldConstrain();
    const hasSettled = loop2 ? shouldSettle : shouldSettle && withinBounds;
    const hasSettledAndIdle = hasSettled && !dragHandler.pointerDown();
    if (hasSettledAndIdle) animation2.stop();
    const interpolatedLocation = location2.get() * alpha4 + previousLocation2.get() * (1 - alpha4);
    offsetLocation2.set(interpolatedLocation);
    if (loop2) {
      scrollLooper.loop(scrollBody2.direction());
      slideLooper.loop();
    }
    translate.to(offsetLocation2.get());
    if (hasSettledAndIdle) eventHandler2.emit("settle");
    if (!hasSettled) eventHandler2.emit("scroll");
  };
  const animation = Animations(ownerDocument, ownerWindow, () => update(engine), (alpha4) => render(engine, alpha4));
  const friction = 0.68;
  const startLocation = scrollSnaps[index.get()];
  const location = Vector1D(startLocation);
  const previousLocation = Vector1D(startLocation);
  const offsetLocation = Vector1D(startLocation);
  const target = Vector1D(startLocation);
  const scrollBody = ScrollBody(location, offsetLocation, previousLocation, target, duration, friction);
  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);
  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);
  const scrollProgress = ScrollProgress(limit);
  const eventStore = EventStore();
  const slidesInView = SlidesInView(container5, slides, eventHandler, inViewThreshold);
  const {
    slideRegistry
  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);
  const slideFocus = SlideFocus(root5, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus);
  const engine = {
    ownerDocument,
    ownerWindow,
    eventHandler,
    containerRect,
    slideRects,
    animation,
    axis,
    dragHandler: DragHandler(axis, root5, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),
    eventStore,
    percentOfView,
    index,
    indexPrevious,
    limit,
    location,
    offsetLocation,
    previousLocation,
    options,
    resizeHandler: ResizeHandler(container5, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),
    scrollBody,
    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),
    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, previousLocation, target]),
    scrollProgress,
    scrollSnapList: scrollSnaps.map(scrollProgress.get),
    scrollSnaps,
    scrollTarget,
    scrollTo,
    slideLooper: SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),
    slideFocus,
    slidesHandler: SlidesHandler(container5, eventHandler, watchSlides),
    slidesInView,
    slideIndexes,
    slideRegistry,
    slidesToScroll,
    target,
    translate: Translate(axis, container5)
  };
  return engine;
}
function EventHandler() {
  let listeners = {};
  let api;
  function init(emblaApi) {
    api = emblaApi;
  }
  function getListeners(evt) {
    return listeners[evt] || [];
  }
  function emit(evt) {
    getListeners(evt).forEach((e12) => e12(api, evt));
    return self2;
  }
  function on2(evt, cb) {
    listeners[evt] = getListeners(evt).concat([cb]);
    return self2;
  }
  function off(evt, cb) {
    listeners[evt] = getListeners(evt).filter((e12) => e12 !== cb);
    return self2;
  }
  function clear() {
    listeners = {};
  }
  const self2 = {
    init,
    emit,
    off,
    on: on2,
    clear
  };
  return self2;
}
function OptionsHandler(ownerWindow) {
  function mergeOptions(optionsA, optionsB) {
    return objectsMergeDeep(optionsA, optionsB || {});
  }
  function optionsAtMedia(options) {
    const optionsAtMedia2 = options.breakpoints || {};
    const matchedMediaOptions = objectKeys2(optionsAtMedia2).filter((media) => ownerWindow.matchMedia(media).matches).map((media) => optionsAtMedia2[media]).reduce((a12, mediaOption) => mergeOptions(a12, mediaOption), {});
    return mergeOptions(options, matchedMediaOptions);
  }
  function optionsMediaQueries(optionsList) {
    return optionsList.map((options) => objectKeys2(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);
  }
  const self2 = {
    mergeOptions,
    optionsAtMedia,
    optionsMediaQueries
  };
  return self2;
}
function PluginsHandler(optionsHandler) {
  let activePlugins = [];
  function init(emblaApi, plugins) {
    activePlugins = plugins.filter(({
      options
    }) => optionsHandler.optionsAtMedia(options).active !== false);
    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler));
    return plugins.reduce((map, plugin) => Object.assign(map, {
      [plugin.name]: plugin
    }), {});
  }
  function destroy() {
    activePlugins = activePlugins.filter((plugin) => plugin.destroy());
  }
  const self2 = {
    init,
    destroy
  };
  return self2;
}
function EmblaCarousel(root5, userOptions, userPlugins) {
  const ownerDocument = root5.ownerDocument;
  const ownerWindow = ownerDocument.defaultView;
  const optionsHandler = OptionsHandler(ownerWindow);
  const pluginsHandler = PluginsHandler(optionsHandler);
  const mediaHandlers = EventStore();
  const eventHandler = EventHandler();
  const {
    mergeOptions,
    optionsAtMedia,
    optionsMediaQueries
  } = optionsHandler;
  const {
    on: on2,
    off,
    emit
  } = eventHandler;
  const reInit = reActivate;
  let destroyed = false;
  let engine;
  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);
  let options = mergeOptions(optionsBase);
  let pluginList = [];
  let pluginApis;
  let container5;
  let slides;
  function storeElements() {
    const {
      container: userContainer,
      slides: userSlides
    } = options;
    const customContainer = isString(userContainer) ? root5.querySelector(userContainer) : userContainer;
    container5 = customContainer || root5.children[0];
    const customSlides = isString(userSlides) ? container5.querySelectorAll(userSlides) : userSlides;
    slides = [].slice.call(customSlides || container5.children);
  }
  function createEngine(options2) {
    const engine2 = Engine(root5, container5, slides, ownerDocument, ownerWindow, options2, eventHandler);
    if (options2.loop && !engine2.slideLooper.canLoop()) {
      const optionsWithoutLoop = Object.assign({}, options2, {
        loop: false
      });
      return createEngine(optionsWithoutLoop);
    }
    return engine2;
  }
  function activate(withOptions, withPlugins) {
    if (destroyed) return;
    optionsBase = mergeOptions(optionsBase, withOptions);
    options = optionsAtMedia(optionsBase);
    pluginList = withPlugins || pluginList;
    storeElements();
    engine = createEngine(options);
    optionsMediaQueries([optionsBase, ...pluginList.map(({
      options: options2
    }) => options2)]).forEach((query2) => mediaHandlers.add(query2, "change", reActivate));
    if (!options.active) return;
    engine.translate.to(engine.location.get());
    engine.animation.init();
    engine.slidesInView.init();
    engine.slideFocus.init(self2);
    engine.eventHandler.init(self2);
    engine.resizeHandler.init(self2);
    engine.slidesHandler.init(self2);
    if (engine.options.loop) engine.slideLooper.loop();
    if (container5.offsetParent && slides.length) engine.dragHandler.init(self2);
    pluginApis = pluginsHandler.init(self2, pluginList);
  }
  function reActivate(withOptions, withPlugins) {
    const startIndex = selectedScrollSnap();
    deActivate();
    activate(mergeOptions({
      startIndex
    }, withOptions), withPlugins);
    eventHandler.emit("reInit");
  }
  function deActivate() {
    engine.dragHandler.destroy();
    engine.eventStore.clear();
    engine.translate.clear();
    engine.slideLooper.clear();
    engine.resizeHandler.destroy();
    engine.slidesHandler.destroy();
    engine.slidesInView.destroy();
    engine.animation.destroy();
    pluginsHandler.destroy();
    mediaHandlers.clear();
  }
  function destroy() {
    if (destroyed) return;
    destroyed = true;
    mediaHandlers.clear();
    deActivate();
    eventHandler.emit("destroy");
    eventHandler.clear();
  }
  function scrollTo(index, jump, direction) {
    if (!options.active || destroyed) return;
    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);
    engine.scrollTo.index(index, direction || 0);
  }
  function scrollNext(jump) {
    const next = engine.index.add(1).get();
    scrollTo(next, jump, -1);
  }
  function scrollPrev(jump) {
    const prev = engine.index.add(-1).get();
    scrollTo(prev, jump, 1);
  }
  function canScrollNext() {
    const next = engine.index.add(1).get();
    return next !== selectedScrollSnap();
  }
  function canScrollPrev() {
    const prev = engine.index.add(-1).get();
    return prev !== selectedScrollSnap();
  }
  function scrollSnapList() {
    return engine.scrollSnapList;
  }
  function scrollProgress() {
    return engine.scrollProgress.get(engine.offsetLocation.get());
  }
  function selectedScrollSnap() {
    return engine.index.get();
  }
  function previousScrollSnap() {
    return engine.indexPrevious.get();
  }
  function slidesInView() {
    return engine.slidesInView.get();
  }
  function slidesNotInView() {
    return engine.slidesInView.get(false);
  }
  function plugins() {
    return pluginApis;
  }
  function internalEngine() {
    return engine;
  }
  function rootNode() {
    return root5;
  }
  function containerNode() {
    return container5;
  }
  function slideNodes() {
    return slides;
  }
  const self2 = {
    canScrollNext,
    canScrollPrev,
    containerNode,
    internalEngine,
    destroy,
    off,
    on: on2,
    emit,
    plugins,
    previousScrollSnap,
    reInit,
    rootNode,
    scrollNext,
    scrollPrev,
    scrollProgress,
    scrollSnapList,
    scrollTo,
    selectedScrollSnap,
    slideNodes,
    slidesInView,
    slidesNotInView
  };
  activate(userOptions, userPlugins);
  setTimeout(() => eventHandler.emit("init"), 0);
  return self2;
}
var defaultOptions;
var init_embla_carousel_esm = __esm({
  "node_modules/.pnpm/embla-carousel@8.6.0/node_modules/embla-carousel/esm/embla-carousel.esm.js"() {
    defaultOptions = {
      align: "center",
      axis: "x",
      container: null,
      slides: null,
      containScroll: "trimSnaps",
      direction: "ltr",
      slidesToScroll: 1,
      inViewThreshold: 0,
      breakpoints: {},
      dragFree: false,
      dragThreshold: 10,
      loop: false,
      skipSnaps: false,
      duration: 25,
      startIndex: 0,
      active: true,
      watchDrag: true,
      watchResize: true,
      watchSlides: true,
      watchFocus: true
    };
    EmblaCarousel.globalOptions = void 0;
  }
});

// node_modules/.pnpm/embla-carousel-react@8.6.0_react@19.1.0/node_modules/embla-carousel-react/esm/embla-carousel-react.esm.js
function useEmblaCarousel(options = {}, plugins = []) {
  const storedOptions = (0, import_react214.useRef)(options);
  const storedPlugins = (0, import_react214.useRef)(plugins);
  const [emblaApi, setEmblaApi] = (0, import_react214.useState)();
  const [viewport, setViewport] = (0, import_react214.useState)();
  const reInit = (0, import_react214.useCallback)(() => {
    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current);
  }, [emblaApi]);
  (0, import_react214.useEffect)(() => {
    if (areOptionsEqual(storedOptions.current, options)) return;
    storedOptions.current = options;
    reInit();
  }, [options, reInit]);
  (0, import_react214.useEffect)(() => {
    if (arePluginsEqual(storedPlugins.current, plugins)) return;
    storedPlugins.current = plugins;
    reInit();
  }, [plugins, reInit]);
  (0, import_react214.useEffect)(() => {
    if (canUseDOM() && viewport) {
      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;
      const newEmblaApi = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);
      setEmblaApi(newEmblaApi);
      return () => newEmblaApi.destroy();
    } else {
      setEmblaApi(void 0);
    }
  }, [viewport, setEmblaApi]);
  return [setViewport, emblaApi];
}
var import_react214;
var init_embla_carousel_react_esm = __esm({
  "node_modules/.pnpm/embla-carousel-react@8.6.0_react@19.1.0/node_modules/embla-carousel-react/esm/embla-carousel-react.esm.js"() {
    import_react214 = __toESM(require_react(), 1);
    init_embla_carousel_reactive_utils_esm();
    init_embla_carousel_esm();
    useEmblaCarousel.globalOptions = void 0;
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.context.mjs
var CarouselProvider, useCarouselContext;
var init_Carousel_context = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.context.mjs"() {
    "use client";
    init_esm3();
    [CarouselProvider, useCarouselContext] = createSafeContext(
      "Carousel component was not found in tree"
    );
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.module.css.mjs
var classes29;
var init_Carousel_module_css = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.module.css.mjs"() {
    "use client";
    classes29 = { "root": "m_17884d0f", "viewport": "m_a2dae653", "container": "m_fcd81474", "controls": "m_39bc3463", "control": "m_64f58e10", "indicators": "m_71ea3ab1", "indicator": "m_eae68602", "slide": "m_d98df724" };
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/CarouselSlide/CarouselSlide.mjs
var import_jsx_runtime134, defaultProps60, CarouselSlide;
var init_CarouselSlide = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/CarouselSlide/CarouselSlide.mjs"() {
    "use client";
    import_jsx_runtime134 = __toESM(require_jsx_runtime(), 1);
    init_esm3();
    init_Carousel_context();
    init_Carousel_module_css();
    defaultProps60 = {};
    CarouselSlide = factory((props, ref) => {
      const { classNames, className, style, styles, vars, mod, ...others } = useProps(
        "CarouselSlide",
        defaultProps60,
        props
      );
      const ctx = useCarouselContext();
      return /* @__PURE__ */ (0, import_jsx_runtime134.jsx)(
        Box,
        {
          ref,
          mod: [{ orientation: ctx.orientation }, mod],
          ...ctx.getStyles("slide", { className, style, classNames, styles }),
          ...others
        }
      );
    });
    CarouselSlide.classes = classes29;
    CarouselSlide.displayName = "@mantine/carousel/CarouselSlide";
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/CarouselVariables/CarouselVariables.mjs
function CarouselVariables({ slideGap, slideSize, selector }) {
  const theme2 = useMantineTheme();
  const baseStyles = filterProps({
    "--carousel-slide-gap": getSpacing(getBaseValue(slideGap)),
    "--carousel-slide-size": rem(getBaseValue(slideSize))
  });
  const queries = keys(theme2.breakpoints).reduce(
    (acc, breakpoint) => {
      if (!acc[breakpoint]) {
        acc[breakpoint] = {};
      }
      if (typeof slideGap === "object" && slideGap[breakpoint] !== void 0) {
        acc[breakpoint]["--carousel-slide-gap"] = getSpacing(slideGap[breakpoint]);
      }
      if (typeof slideSize === "object" && slideSize[breakpoint] !== void 0) {
        acc[breakpoint]["--carousel-slide-size"] = getSpacing(slideSize[breakpoint]);
      }
      return acc;
    },
    {}
  );
  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme2.breakpoints).filter(
    (breakpoint) => keys(queries[breakpoint.value]).length > 0
  );
  const media = sortedBreakpoints.map((breakpoint) => ({
    query: `(min-width: ${theme2.breakpoints[breakpoint.value]})`,
    styles: queries[breakpoint.value]
  }));
  return /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(InlineStyles, { styles: baseStyles, media, selector });
}
function getBreakpoints(values2) {
  if (typeof values2 === "object" && values2 !== null) {
    return keys(values2);
  }
  return [];
}
function sortBreakpoints(breakpoints) {
  return breakpoints.sort((a12, b4) => px(a12) - px(b4));
}
function getUniqueBreakpoints({ slideGap, slideSize }) {
  const breakpoints = Array.from(
    /* @__PURE__ */ new Set([...getBreakpoints(slideGap), ...getBreakpoints(slideSize)])
  );
  return sortBreakpoints(breakpoints);
}
function CarouselContainerVariables({
  slideGap,
  slideSize,
  selector
}) {
  const baseStyles = filterProps({
    "--carousel-slide-gap": getSpacing(getBaseValue(slideGap)),
    "--carousel-slide-size": rem(getBaseValue(slideSize))
  });
  const queries = getUniqueBreakpoints({ slideGap, slideSize }).reduce((acc, breakpoint) => {
    if (!acc[breakpoint]) {
      acc[breakpoint] = {};
    }
    if (typeof slideGap === "object" && slideGap[breakpoint] !== void 0) {
      acc[breakpoint]["--carousel-slide-gap"] = getSpacing(slideGap[breakpoint]);
    }
    if (typeof slideSize === "object" && slideSize[breakpoint] !== void 0) {
      acc[breakpoint]["--carousel-slide-size"] = getSpacing(slideSize[breakpoint]);
    }
    return acc;
  }, {});
  const media = Object.keys(queries).map((breakpoint) => ({
    query: `carousel (min-width: ${breakpoint})`,
    styles: queries[breakpoint]
  }));
  return /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(InlineStyles, { styles: baseStyles, container: media, selector });
}
var import_jsx_runtime135;
var init_CarouselVariables = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/CarouselVariables/CarouselVariables.mjs"() {
    "use client";
    import_jsx_runtime135 = __toESM(require_jsx_runtime(), 1);
    init_esm3();
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/get-chevron-rotation.mjs
function getChevronRotation({ dir, orientation, direction }) {
  if (direction === "previous") {
    return orientation === "horizontal" ? 90 * (dir === "ltr" ? 1 : -1) : -180;
  }
  return orientation === "horizontal" ? 90 * (dir === "ltr" ? -1 : 1) : 0;
}
var init_get_chevron_rotation = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/get-chevron-rotation.mjs"() {
    "use client";
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.mjs
var import_jsx_runtime136, import_react215, defaultProps61, varsResolver29, Carousel;
var init_Carousel = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/Carousel.mjs"() {
    "use client";
    import_jsx_runtime136 = __toESM(require_jsx_runtime(), 1);
    import_react215 = __toESM(require_react(), 1);
    init_embla_carousel_react_esm();
    init_esm3();
    init_esm2();
    init_Carousel_context();
    init_CarouselSlide();
    init_CarouselVariables();
    init_get_chevron_rotation();
    init_Carousel_module_css();
    defaultProps61 = {
      controlSize: 26,
      controlsOffset: "sm",
      slideSize: "100%",
      slideGap: 0,
      orientation: "horizontal",
      align: "center",
      slidesToScroll: 1,
      includeGapInSize: true,
      draggable: true,
      dragFree: false,
      loop: false,
      speed: 10,
      initialSlide: 0,
      inViewThreshold: 0,
      withControls: true,
      withIndicators: false,
      skipSnaps: false,
      containScroll: "",
      withKeyboardEvents: true,
      type: "media"
    };
    varsResolver29 = createVarsResolver(
      (_3, { height, controlSize, controlsOffset }) => ({
        root: {
          "--carousel-height": rem(height),
          "--carousel-control-size": rem(controlSize),
          "--carousel-controls-offset": getSpacing(controlsOffset)
        }
      })
    );
    Carousel = factory((_props, ref) => {
      const props = useProps("Carousel", defaultProps61, _props);
      const {
        classNames,
        className,
        style,
        styles,
        unstyled,
        vars,
        children,
        getEmblaApi,
        onNextSlide,
        onPreviousSlide,
        onSlideChange,
        nextControlProps,
        previousControlProps,
        controlSize,
        controlsOffset,
        slideSize,
        slideGap,
        orientation,
        height,
        align,
        slidesToScroll,
        includeGapInSize,
        draggable,
        dragFree,
        loop,
        speed,
        initialSlide,
        inViewThreshold,
        withControls,
        withIndicators,
        plugins,
        nextControlIcon,
        previousControlIcon,
        skipSnaps,
        containScroll,
        withKeyboardEvents,
        mod,
        type,
        ...others
      } = props;
      const getStyles = useStyles({
        name: "Carousel",
        classes: classes29,
        props,
        className,
        style,
        classNames,
        styles,
        unstyled,
        vars,
        varsResolver: varsResolver29
      });
      const responsiveClassName = useRandomClassName();
      const { dir } = useDirection();
      const [emblaRefElement, embla] = useEmblaCarousel(
        {
          axis: orientation === "horizontal" ? "x" : "y",
          direction: orientation === "horizontal" ? dir : void 0,
          startIndex: initialSlide,
          loop,
          align,
          slidesToScroll,
          draggable,
          dragFree,
          speed,
          inViewThreshold,
          skipSnaps,
          containScroll
        },
        plugins
      );
      const [selected, setSelected] = (0, import_react215.useState)(0);
      const [slidesCount, setSlidesCount] = (0, import_react215.useState)(0);
      const handleScroll = (0, import_react215.useCallback)((index) => embla && embla.scrollTo(index), [embla]);
      const handleSelect = (0, import_react215.useCallback)(() => {
        if (!embla) {
          return;
        }
        const slide2 = embla.selectedScrollSnap();
        setSelected(slide2);
        slide2 !== selected && onSlideChange?.(slide2);
      }, [embla, setSelected, onSlideChange, selected]);
      const handlePrevious = (0, import_react215.useCallback)(() => {
        embla?.scrollPrev();
        onPreviousSlide?.();
      }, [embla]);
      const handleNext = (0, import_react215.useCallback)(() => {
        embla?.scrollNext();
        onNextSlide?.();
      }, [embla]);
      const handleKeydown = (0, import_react215.useCallback)(
        (event) => {
          if (withKeyboardEvents) {
            if (event.key === "ArrowRight") {
              event.preventDefault();
              handleNext();
            }
            if (event.key === "ArrowLeft") {
              event.preventDefault();
              handlePrevious();
            }
          }
        },
        [embla]
      );
      (0, import_react215.useEffect)(() => {
        if (embla) {
          getEmblaApi?.(embla);
          handleSelect();
          setSlidesCount(embla.scrollSnapList().length);
          embla.on("select", handleSelect);
          return () => {
            embla.off("select", handleSelect);
          };
        }
        return void 0;
      }, [embla, slidesToScroll, handleSelect]);
      (0, import_react215.useEffect)(() => {
        if (embla) {
          embla.reInit();
          setSlidesCount(embla.scrollSnapList().length);
          setSelected(
            (currentSelected) => clamp(currentSelected, 0, import_react215.Children.toArray(children).length - 1)
          );
        }
      }, [import_react215.Children.toArray(children).length, slidesToScroll]);
      const canScrollPrev = embla?.canScrollPrev() || false;
      const canScrollNext = embla?.canScrollNext() || false;
      const indicators = Array(slidesCount).fill(0).map((_3, index) => /* @__PURE__ */ (0, import_react215.createElement)(
        UnstyledButton,
        {
          ...getStyles("indicator"),
          key: index,
          "data-active": index === selected || void 0,
          "aria-hidden": true,
          tabIndex: -1,
          onClick: () => handleScroll(index),
          "data-orientation": orientation,
          onMouseDown: (event) => event.preventDefault()
        }
      ));
      return /* @__PURE__ */ (0, import_jsx_runtime136.jsxs)(CarouselProvider, { value: { getStyles, orientation }, children: [
        type === "container" ? /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(CarouselContainerVariables, { ...props, selector: `.${responsiveClassName}` }) : /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(CarouselVariables, { ...props, selector: `.${responsiveClassName}` }),
        /* @__PURE__ */ (0, import_jsx_runtime136.jsxs)(
          Box,
          {
            ref,
            ...getStyles("root", { className: "responsiveClassName" }),
            ...others,
            mod: [{ orientation, "include-gap-in-size": includeGapInSize }, mod],
            onKeyDownCapture: handleKeydown,
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime136.jsx)("div", { ...getStyles("viewport"), ref: emblaRefElement, "data-type": type, children: /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
                "div",
                {
                  ...getStyles("container", { className: responsiveClassName }),
                  "data-orientation": orientation,
                  children
                }
              ) }),
              withIndicators && /* @__PURE__ */ (0, import_jsx_runtime136.jsx)("div", { ...getStyles("indicators"), "data-orientation": orientation, children: indicators }),
              withControls && /* @__PURE__ */ (0, import_jsx_runtime136.jsxs)("div", { ...getStyles("controls"), "data-orientation": orientation, children: [
                /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
                  UnstyledButton,
                  {
                    ...previousControlProps,
                    ...getStyles("control", {
                      className: previousControlProps?.className,
                      style: previousControlProps?.style
                    }),
                    onClick: (event) => {
                      handlePrevious();
                      previousControlProps?.onClick?.(event);
                    },
                    "data-inactive": !canScrollPrev || void 0,
                    tabIndex: canScrollPrev ? 0 : -1,
                    children: typeof previousControlIcon !== "undefined" ? previousControlIcon : /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
                      AccordionChevron,
                      {
                        style: {
                          transform: `rotate(${getChevronRotation({
                            dir,
                            orientation,
                            direction: "previous"
                          })}deg)`
                        }
                      }
                    )
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
                  UnstyledButton,
                  {
                    ...getStyles("control", {
                      className: nextControlProps?.className,
                      style: nextControlProps?.style
                    }),
                    ...nextControlProps,
                    onClick: (event) => {
                      handleNext();
                      nextControlProps?.onClick?.(event);
                    },
                    "data-inactive": !canScrollNext || void 0,
                    tabIndex: canScrollNext ? 0 : -1,
                    children: typeof nextControlIcon !== "undefined" ? nextControlIcon : /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
                      AccordionChevron,
                      {
                        style: {
                          transform: `rotate(${getChevronRotation({
                            dir,
                            orientation,
                            direction: "next"
                          })}deg)`
                        }
                      }
                    )
                  }
                )
              ] })
            ]
          }
        )
      ] });
    });
    Carousel.classes = classes29;
    Carousel.displayName = "@mantine/carousel/Carousel";
    Carousel.Slide = CarouselSlide;
  }
});

// node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/index.mjs
var init_esm9 = __esm({
  "node_modules/.pnpm/@mantine+carousel@7.17.1_@mantine+core@7.17.1_@mantine+hooks@7.17.1_react@19.1.0__@type_dfdb44aef3b5312a53a34bf7eea9507d/node_modules/@mantine/carousel/esm/index.mjs"() {
    init_Carousel();
  }
});

// node_modules/.pnpm/embla-carousel-auto-scroll@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-auto-scroll/esm/embla-carousel-auto-scroll.esm.js
function getAutoScrollRootNode(emblaApi, rootNode) {
  const emblaRootNode = emblaApi.rootNode();
  return rootNode && rootNode(emblaRootNode) || emblaRootNode;
}
function AutoScroll(userOptions = {}) {
  let options;
  let emblaApi;
  let destroyed;
  let startDelay;
  let timerId = 0;
  let autoScrollActive = false;
  let mouseIsOver = false;
  let defaultScrollBehaviour;
  function init(emblaApiInstance, optionsHandler) {
    emblaApi = emblaApiInstance;
    const {
      mergeOptions,
      optionsAtMedia
    } = optionsHandler;
    const optionsBase = mergeOptions(defaultOptions2, AutoScroll.globalOptions);
    const allOptions = mergeOptions(optionsBase, userOptions);
    options = optionsAtMedia(allOptions);
    if (emblaApi.scrollSnapList().length <= 1) return;
    startDelay = options.startDelay;
    destroyed = false;
    defaultScrollBehaviour = emblaApi.internalEngine().scrollBody;
    const {
      eventStore
    } = emblaApi.internalEngine();
    const isDraggable = !!emblaApi.internalEngine().options.watchDrag;
    const root5 = getAutoScrollRootNode(emblaApi, options.rootNode);
    if (isDraggable) {
      emblaApi.on("pointerDown", pointerDown);
    }
    if (isDraggable && !options.stopOnInteraction) {
      emblaApi.on("pointerUp", pointerUp);
    }
    if (options.stopOnMouseEnter) {
      eventStore.add(root5, "mouseenter", mouseEnter);
    }
    if (options.stopOnMouseEnter && !options.stopOnInteraction) {
      eventStore.add(root5, "mouseleave", mouseLeave);
    }
    if (options.stopOnFocusIn) {
      emblaApi.on("slideFocusStart", stopAutoScroll);
    }
    if (options.stopOnFocusIn && !options.stopOnInteraction) {
      eventStore.add(emblaApi.containerNode(), "focusout", startAutoScroll);
    }
    if (options.playOnInit) startAutoScroll();
  }
  function destroy() {
    emblaApi.off("pointerDown", pointerDown).off("pointerUp", pointerUp).off("slideFocusStart", stopAutoScroll).off("settle", settle);
    stopAutoScroll();
    destroyed = true;
    autoScrollActive = false;
  }
  function startAutoScroll() {
    if (destroyed) return;
    if (autoScrollActive) return;
    emblaApi.emit("autoScroll:play");
    const engine = emblaApi.internalEngine();
    const {
      ownerWindow
    } = engine;
    timerId = ownerWindow.setTimeout(() => {
      engine.scrollBody = createAutoScrollBehaviour(engine);
      engine.animation.start();
    }, startDelay);
    autoScrollActive = true;
  }
  function stopAutoScroll() {
    if (destroyed) return;
    if (!autoScrollActive) return;
    emblaApi.emit("autoScroll:stop");
    const engine = emblaApi.internalEngine();
    const {
      ownerWindow
    } = engine;
    engine.scrollBody = defaultScrollBehaviour;
    ownerWindow.clearTimeout(timerId);
    timerId = 0;
    autoScrollActive = false;
  }
  function createAutoScrollBehaviour(engine) {
    const {
      location,
      previousLocation,
      offsetLocation,
      target,
      scrollTarget,
      index,
      indexPrevious,
      limit: {
        reachedMin,
        reachedMax,
        constrain
      },
      options: {
        loop
      }
    } = engine;
    const directionSign = options.direction === "forward" ? -1 : 1;
    const noop3 = () => self3;
    let bodyVelocity = 0;
    let scrollDirection = 0;
    let rawLocation = location.get();
    let rawLocationPrevious = 0;
    let hasSettled = false;
    function seek() {
      let directionDiff = 0;
      previousLocation.set(location);
      bodyVelocity = directionSign * options.speed;
      rawLocation += bodyVelocity;
      location.add(bodyVelocity);
      target.set(location);
      directionDiff = rawLocation - rawLocationPrevious;
      scrollDirection = Math.sign(directionDiff);
      rawLocationPrevious = rawLocation;
      const currentIndex = scrollTarget.byDistance(0, false).index;
      if (index.get() !== currentIndex) {
        indexPrevious.set(index.get());
        index.set(currentIndex);
        emblaApi.emit("select");
      }
      const reachedEnd = options.direction === "forward" ? reachedMin(offsetLocation.get()) : reachedMax(offsetLocation.get());
      if (!loop && reachedEnd) {
        hasSettled = true;
        const constrainedLocation = constrain(location.get());
        location.set(constrainedLocation);
        target.set(location);
        stopAutoScroll();
      }
      return self3;
    }
    const self3 = {
      direction: () => scrollDirection,
      duration: () => -1,
      velocity: () => bodyVelocity,
      settled: () => hasSettled,
      seek,
      useBaseFriction: noop3,
      useBaseDuration: noop3,
      useFriction: noop3,
      useDuration: noop3
    };
    return self3;
  }
  function pointerDown() {
    if (!mouseIsOver) stopAutoScroll();
  }
  function pointerUp() {
    if (!mouseIsOver) startAutoScrollOnSettle();
  }
  function mouseEnter() {
    mouseIsOver = true;
    stopAutoScroll();
  }
  function mouseLeave() {
    mouseIsOver = false;
    startAutoScroll();
  }
  function settle() {
    emblaApi.off("settle", settle);
    startAutoScroll();
  }
  function startAutoScrollOnSettle() {
    emblaApi.on("settle", settle);
  }
  function play(startDelayOverride) {
    if (typeof startDelayOverride !== "undefined") {
      startDelay = startDelayOverride;
    }
    startAutoScroll();
  }
  function stop() {
    if (autoScrollActive) stopAutoScroll();
  }
  function reset() {
    if (autoScrollActive) {
      stopAutoScroll();
      startAutoScrollOnSettle();
    }
  }
  function isPlaying() {
    return autoScrollActive;
  }
  const self2 = {
    name: "autoScroll",
    options: userOptions,
    init,
    destroy,
    play,
    stop,
    reset,
    isPlaying
  };
  return self2;
}
var defaultOptions2;
var init_embla_carousel_auto_scroll_esm = __esm({
  "node_modules/.pnpm/embla-carousel-auto-scroll@8.6.0_embla-carousel@8.6.0/node_modules/embla-carousel-auto-scroll/esm/embla-carousel-auto-scroll.esm.js"() {
    defaultOptions2 = {
      direction: "forward",
      speed: 2,
      startDelay: 1e3,
      active: true,
      breakpoints: {},
      playOnInit: true,
      stopOnFocusIn: true,
      stopOnInteraction: true,
      stopOnMouseEnter: false,
      rootNode: null
    };
    AutoScroll.globalOptions = void 0;
  }
});

// node_modules/.pnpm/wheel-gestures@2.2.48/node_modules/wheel-gestures/dist/wheel-gestures.cjs.production.min.js
var require_wheel_gestures_cjs_production_min = __commonJS({
  "node_modules/.pnpm/wheel-gestures@2.2.48/node_modules/wheel-gestures/dist/wheel-gestures.cjs.production.min.js"(exports) {
    "use strict";
    function t13() {
      return (t13 = Object.assign || function(t14) {
        for (var e13 = 1; e13 < arguments.length; e13++) {
          var n13 = arguments[e13];
          for (var i12 in n13) Object.prototype.hasOwnProperty.call(n13, i12) && (t14[i12] = n13[i12]);
        }
        return t14;
      }).apply(this, arguments);
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    var e12 = function(t14, e13) {
      return void 0 === e13 && (e13 = 0.996), t14 * e13 / (1 - e13);
    };
    function n12(t14) {
      return t14[t14.length - 1];
    }
    function i11(t14) {
      return t14.reduce(function(t15, e13) {
        return t15 + e13;
      }) / t14.length;
    }
    var r8 = function(t14, e13, n13) {
      return Math.min(Math.max(e13, t14), n13);
    };
    function o6(t14, e13) {
      if (t14.length !== e13.length) throw new Error("vectors must be same length");
      return t14.map(function(t15, n13) {
        return t15 + e13[n13];
      });
    }
    function a12(t14) {
      return Math.max.apply(Math, t14.map(Math.abs));
    }
    function s37(t14) {
      return Object.freeze(t14), Object.values(t14).forEach(function(t15) {
        null === t15 || "object" != typeof t15 || Object.isFrozen(t15) || s37(t15);
      }), t14;
    }
    var u4 = [1, 18, "undefined" != typeof window && window.innerHeight || 800];
    var c13 = [-1, -1, -1];
    var l9 = s37({ preventWheelAction: true, reverseSign: [true, true, false] });
    function f11(f12) {
      void 0 === f12 && (f12 = {});
      var m11, d6, p13, v5 = function() {
        var t14 = {};
        function e13(e14, n13) {
          t14[e14] = (t14[e14] || []).filter(function(t15) {
            return t15 !== n13;
          });
        }
        return s37({ on: function(n13, i12) {
          return t14[n13] = (t14[n13] || []).concat(i12), function() {
            return e13(n13, i12);
          };
        }, off: e13, dispatch: function(e14, n13) {
          e14 in t14 && t14[e14].forEach(function(t15) {
            return t15(n13);
          });
        } });
      }(), h8 = v5.on, x3 = v5.off, M5 = v5.dispatch, b4 = l9, g9 = { isStarted: false, isStartPublished: false, isMomentum: false, startTime: 0, lastAbsDelta: Infinity, axisMovement: [0, 0, 0], axisVelocity: [0, 0, 0], accelerationFactors: [], scrollPoints: [], scrollPointsToMerge: [], willEndTimeout: 400 }, S3 = false, y3 = function(t14) {
        Array.isArray(t14) ? t14.forEach(function(t15) {
          return T4(t15);
        }) : T4(t14);
      }, D6 = function(e13) {
        return void 0 === e13 && (e13 = {}), Object.values(e13).some(function(t14) {
          return null == t14;
        }) ? b4 : b4 = s37(t13({}, l9, b4, e13));
      }, P3 = function(n13) {
        var i12 = t13({ event: m11, isStart: false, isEnding: false, isMomentumCancel: false, isMomentum: g9.isMomentum, axisDelta: [0, 0, 0], axisVelocity: g9.axisVelocity, axisMovement: g9.axisMovement, get axisMovementProjection() {
          return o6(i12.axisMovement, i12.axisVelocity.map(function(t14) {
            return e12(t14);
          }));
        } }, n13);
        M5("wheel", t13({}, i12, { previous: d6 })), d6 = i12;
      }, T4 = function(e13) {
        var n13, i12 = function(e14) {
          return t13({}, e14, { axisDelta: e14.axisDelta.map(function(t14) {
            return r8(t14, -700, 700);
          }) });
        }(function(e14, n14) {
          if (!n14) return e14;
          var i13 = true === n14 ? c13 : n14.map(function(t14) {
            return t14 ? -1 : 1;
          });
          return t13({}, e14, { axisDelta: e14.axisDelta.map(function(t14, e15) {
            return t14 * i13[e15];
          }) });
        }({ timeStamp: (n13 = e13).timeStamp, axisDelta: [n13.deltaX * u4[n13.deltaMode], n13.deltaY * u4[n13.deltaMode], (n13.deltaZ || 0) * u4[n13.deltaMode]] }, b4.reverseSign)), s38 = i12.axisDelta, l10 = i12.timeStamp, f13 = a12(s38);
        e13.preventDefault && function(t14, e14) {
          var n14 = b4.preventWheelAction, i13 = e14[0], r9 = e14[1], o7 = e14[2];
          if ("boolean" == typeof n14) return n14;
          switch (n14) {
            case "x":
              return Math.abs(i13) >= t14;
            case "y":
              return Math.abs(r9) >= t14;
            case "z":
              return Math.abs(o7) >= t14;
            default:
              return false;
          }
        }(f13, s38) && e13.preventDefault(), g9.isStarted ? g9.isMomentum && f13 > Math.max(2, 2 * g9.lastAbsDelta) && (C5(true), z4()) : z4(), 0 === f13 && Object.is && Object.is(e13.deltaX, -0) ? S3 = true : (m11 = e13, g9.axisMovement = o6(g9.axisMovement, s38), g9.lastAbsDelta = f13, g9.scrollPointsToMerge.push({ axisDelta: s38, timeStamp: l10 }), w8(), P3({ axisDelta: s38, isStart: !g9.isStartPublished }), g9.isStartPublished = true, W4());
      }, w8 = function() {
        2 === g9.scrollPointsToMerge.length ? (g9.scrollPoints.unshift({ axisDeltaSum: g9.scrollPointsToMerge.map(function(t14) {
          return t14.axisDelta;
        }).reduce(o6), timeStamp: i11(g9.scrollPointsToMerge.map(function(t14) {
          return t14.timeStamp;
        })) }), j4(), g9.scrollPointsToMerge.length = 0, g9.scrollPoints.length = 1, g9.isMomentum || A4()) : g9.isStartPublished || E7();
      }, E7 = function() {
        g9.axisVelocity = n12(g9.scrollPointsToMerge).axisDelta.map(function(t14) {
          return t14 / g9.willEndTimeout;
        });
      }, j4 = function() {
        var t14 = g9.scrollPoints, e13 = t14[0], n13 = t14[1];
        if (n13 && e13) {
          var i12 = e13.timeStamp - n13.timeStamp;
          if (!(i12 <= 0)) {
            var r9 = e13.axisDeltaSum.map(function(t15) {
              return t15 / i12;
            }), o7 = r9.map(function(t15, e14) {
              return t15 / (g9.axisVelocity[e14] || 1);
            });
            g9.axisVelocity = r9, g9.accelerationFactors.push(o7), O3(i12);
          }
        }
      }, O3 = function(t14) {
        var e13 = 10 * Math.ceil(t14 / 10) * 1.2;
        g9.isMomentum || (e13 = Math.max(100, 2 * e13)), g9.willEndTimeout = Math.min(1e3, Math.round(e13));
      }, V5 = function(t14) {
        return 0 === t14 || t14 <= 0.96 && t14 >= 0.6;
      }, A4 = function() {
        if (g9.accelerationFactors.length >= 5) {
          if (S3 && (S3 = false, a12(g9.axisVelocity) >= 0.2)) return void F5();
          var t14 = g9.accelerationFactors.slice(-5);
          t14.every(function(t15) {
            var e13 = !!t15.reduce(function(t16, e14) {
              return t16 && t16 < 1 && t16 === e14 ? 1 : 0;
            }), n13 = t15.filter(V5).length === t15.length;
            return e13 || n13;
          }) && F5(), g9.accelerationFactors = t14;
        }
      }, F5 = function() {
        g9.isMomentum = true;
      }, z4 = function() {
        (g9 = { isStarted: false, isStartPublished: false, isMomentum: false, startTime: 0, lastAbsDelta: Infinity, axisMovement: [0, 0, 0], axisVelocity: [0, 0, 0], accelerationFactors: [], scrollPoints: [], scrollPointsToMerge: [], willEndTimeout: 400 }).isStarted = true, g9.startTime = Date.now(), d6 = void 0, S3 = false;
      }, W4 = function() {
        clearTimeout(p13), p13 = setTimeout(C5, g9.willEndTimeout);
      }, C5 = function(t14) {
        void 0 === t14 && (t14 = false), g9.isStarted && (P3(g9.isMomentum && t14 ? { isEnding: true, isMomentumCancel: true } : { isEnding: true }), g9.isMomentum = false, g9.isStarted = false);
      }, I5 = function(t14) {
        var e13 = [], n13 = function(n14) {
          n14.removeEventListener("wheel", t14), e13 = e13.filter(function(t15) {
            return t15 !== n14;
          });
        };
        return s37({ observe: function(i12) {
          return i12.addEventListener("wheel", t14, { passive: false }), e13.push(i12), function() {
            return n13(i12);
          };
        }, unobserve: n13, disconnect: function() {
          e13.forEach(n13);
        } });
      }(y3), L4 = I5.observe, X4 = I5.unobserve, _3 = I5.disconnect;
      return D6(f12), s37({ on: h8, off: x3, observe: L4, unobserve: X4, disconnect: _3, feedWheel: y3, updateOptions: D6 });
    }
    exports.WheelGestures = f11, exports.absMax = a12, exports.addVectors = o6, exports.average = i11, exports.clamp = r8, exports.configDefaults = l9, exports.deepFreeze = s37, exports.default = f11, exports.lastOf = n12, exports.projection = e12;
  }
});

// node_modules/.pnpm/wheel-gestures@2.2.48/node_modules/wheel-gestures/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/.pnpm/wheel-gestures@2.2.48/node_modules/wheel-gestures/dist/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_wheel_gestures_cjs_production_min();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/.pnpm/embla-carousel-wheel-gestures@8.0.2_embla-carousel@8.6.0/node_modules/embla-carousel-wheel-gestures/dist/embla-carousel-wheel-gestures.cjs.production.min.js
var require_embla_carousel_wheel_gestures_cjs_production_min = __commonJS({
  "node_modules/.pnpm/embla-carousel-wheel-gestures@8.0.2_embla-carousel@8.6.0/node_modules/embla-carousel-wheel-gestures/dist/embla-carousel-wheel-gestures.cjs.production.min.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var e12;
    var n12 = (e12 = require_dist2()) && "object" == typeof e12 && "default" in e12 ? e12.default : e12;
    var t13 = { active: true, breakpoints: {}, wheelDraggingClass: "is-wheel-dragging", forceWheelAxis: void 0, target: void 0 };
    function o6(e13) {
      var i11;
      void 0 === e13 && (e13 = {});
      var s37 = function() {
      };
      return { name: "wheelGestures", options: e13, init: function(r8, a12) {
        var u4, m11, c13 = a12.mergeOptions, l9 = a12.optionsAtMedia, d6 = c13(t13, o6.globalOptions), v5 = c13(d6, e13);
        i11 = l9(v5);
        var g9, p13 = r8.internalEngine(), h8 = null != (u4 = i11.target) ? u4 : r8.containerNode().parentNode, f11 = null != (m11 = i11.forceWheelAxis) ? m11 : p13.options.axis, E7 = n12({ preventWheelAction: f11, reverseSign: [true, true, false] }), M5 = E7.observe(h8), w8 = E7.on("wheel", function(e14) {
          var n13 = e14.axisDelta, t14 = n13[0], o7 = n13[1], r9 = "x" === f11 ? o7 : t14, a13 = e14.isEnding && !e14.isMomentum || e14.isMomentum && e14.previous && !e14.previous.isMomentum;
          Math.abs("x" === f11 ? t14 : o7) > Math.abs(r9) && !b4 && !e14.isMomentum && function(e15) {
            try {
              C5(g9 = new MouseEvent("mousedown", e15.event));
            } catch (e16) {
              return s37();
            }
            b4 = true, document.documentElement.addEventListener("mousemove", L4, true), document.documentElement.addEventListener("mouseup", L4, true), document.documentElement.addEventListener("mousedown", L4, true), i11.wheelDraggingClass && h8.classList.add(i11.wheelDraggingClass);
          }(e14), b4 && (a13 ? function(e15) {
            b4 = false, C5(D6("mouseup", e15)), x3(), i11.wheelDraggingClass && h8.classList.remove(i11.wheelDraggingClass);
          }(e14) : C5(D6("mousemove", e14)));
        }), b4 = false;
        function x3() {
          document.documentElement.removeEventListener("mousemove", L4, true), document.documentElement.removeEventListener("mouseup", L4, true), document.documentElement.removeEventListener("mousedown", L4, true);
        }
        function L4(e14) {
          b4 && e14.isTrusted && e14.stopImmediatePropagation();
        }
        function D6(e14, n13) {
          var t14, o7;
          if (f11 === p13.options.axis) {
            var i12 = n13.axisMovement;
            t14 = i12[0], o7 = i12[1];
          } else {
            var s38 = n13.axisMovement;
            o7 = s38[0], t14 = s38[1];
          }
          if (!p13.options.skipSnaps && !p13.options.dragFree) {
            var r9 = p13.containerRect.width, a13 = p13.containerRect.height;
            t14 = t14 < 0 ? Math.max(t14, -r9) : Math.min(t14, r9), o7 = o7 < 0 ? Math.max(o7, -a13) : Math.min(o7, a13);
          }
          return new MouseEvent(e14, { clientX: g9.clientX + t14, clientY: g9.clientY + o7, screenX: g9.screenX + t14, screenY: g9.screenY + o7, movementX: t14, movementY: o7, button: 0, bubbles: true, cancelable: true, composed: true });
        }
        function C5(e14) {
          r8.containerNode().dispatchEvent(e14);
        }
        s37 = function() {
          M5(), w8(), x3();
        };
      }, destroy: function() {
        return s37();
      } };
    }
    o6.globalOptions = void 0, exports.WheelGesturesPlugin = o6;
  }
});

// node_modules/.pnpm/embla-carousel-wheel-gestures@8.0.2_embla-carousel@8.6.0/node_modules/embla-carousel-wheel-gestures/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/.pnpm/embla-carousel-wheel-gestures@8.0.2_embla-carousel@8.6.0/node_modules/embla-carousel-wheel-gestures/dist/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_embla_carousel_wheel_gestures_cjs_production_min();
    } else {
      module.exports = null;
    }
  }
});

// dist/server/chunks/chunk-D7l9tNkh.js
var container3, title6, paper3, name, label, image3, reviewText, drawer, slide, s32;
var init_chunk_D7l9tNkh = __esm({
  "dist/server/chunks/chunk-D7l9tNkh.js"() {
    "use strict";
    container3 = "NCEMR";
    title6 = "c6sr3";
    paper3 = "Es6kP";
    name = "ccUV7";
    label = "UF0t7";
    image3 = "r535f";
    reviewText = "zGZR5";
    drawer = "L4d1D";
    slide = "x4KYx";
    s32 = {
      container: container3,
      title: title6,
      paper: paper3,
      name,
      label,
      image: image3,
      reviewText,
      drawer,
      slide
    };
  }
});

// node_modules/.pnpm/markdown-to-jsx@7.7.4_react@19.1.0/node_modules/markdown-to-jsx/dist/index.module.js
function r7() {
  return r7 = Object.assign ? Object.assign.bind() : function(e12) {
    for (var r8 = 1; r8 < arguments.length; r8++) {
      var n12 = arguments[r8];
      for (var t13 in n12) Object.prototype.hasOwnProperty.call(n12, t13) && (e12[t13] = n12[t13]);
    }
    return e12;
  }, r7.apply(this, arguments);
}
function ue3(e12) {
  return "( *)(" + (1 === e12 ? oe2 : ce2) + ") +";
}
function fe3(e12) {
  return new RegExp("^" + (1 === e12 ? se3 : de3));
}
function me3(e12) {
  return new RegExp("^" + (1 === e12 ? se3 : de3) + "[^\\n]*(?:\\n(?!\\1" + (1 === e12 ? oe2 : ce2) + " )[^\\n]*)*(\\n|$)", "gm");
}
function ke3(e12) {
  var r8 = 1 === e12 ? oe2 : ce2;
  return new RegExp("^( *)(" + r8 + ") [\\s\\S]+?(?:\\n{2,}(?! )(?!\\1" + r8 + " (?!" + r8 + " ))\\n*|\\s*\\n*$)");
}
function be2(e12, r8) {
  var n12 = 1 === r8, t13 = n12 ? ve2 : xe3, a12 = n12 ? ge2 : ye2, l9 = n12 ? pe3 : he2;
  return { match: Oe3(function(e13, r9) {
    var n13 = le3.exec(r9.prevCapture);
    return n13 && (r9.list || !r9.inline && !r9.simple) ? t13.exec(e13 = n13[1] + e13) : null;
  }), order: 1, parse: function(e13, r9, t14) {
    var i11 = n12 ? +e13[2] : void 0, o6 = e13[0].replace(s33, "\n").match(a12), c13 = false;
    return { items: o6.map(function(e14, n13) {
      var i12 = l9.exec(e14)[0].length, a13 = new RegExp("^ {1," + i12 + "}", "gm"), u4 = e14.replace(a13, "").replace(l9, ""), s37 = n13 === o6.length - 1, d6 = -1 !== u4.indexOf("\n\n") || s37 && c13;
      c13 = d6;
      var f11, p13 = t14.inline, h8 = t14.list;
      t14.list = true, d6 ? (t14.inline = false, f11 = ze3(u4) + "\n\n") : (t14.inline = true, f11 = ze3(u4));
      var m11 = r9(f11, t14);
      return t14.inline = p13, t14.list = h8, m11;
    }), ordered: n12, start: i11 };
  }, render: function(r9, n13, t14) {
    return e12(r9.ordered ? "ol" : "ul", { key: t14.key, start: r9.type === i10.orderedList ? r9.start : void 0 }, r9.items.map(function(r10, i11) {
      return e12("li", { key: i11 }, n13(r10, t14));
    }));
  } };
}
function ze3(e12) {
  for (var r8 = e12.length; r8 > 0 && e12[r8 - 1] <= " "; ) r8--;
  return e12.slice(0, r8);
}
function Le2(e12) {
  return e12.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, "a").replace(/[çÇ]/g, "c").replace(/[ðÐ]/g, "d").replace(/[ÈÉÊËéèêë]/g, "e").replace(/[ÏïÎîÍíÌì]/g, "i").replace(/[Ññ]/g, "n").replace(/[øØœŒÕõÔôÓóÒò]/g, "o").replace(/[ÜüÛûÚúÙù]/g, "u").replace(/[ŸÿÝý]/g, "y").replace(/[^a-z0-9- ]/gi, "").replace(/ /gi, "-").toLowerCase();
}
function Ae3(e12) {
  return Q2.test(e12) ? "right" : Z3.test(e12) ? "center" : q2.test(e12) ? "left" : null;
}
function Te2(e12, r8, n12, t13) {
  var i11 = n12.inTable;
  n12.inTable = true;
  var a12 = [[]], l9 = "";
  function o6() {
    if (l9) {
      var e13 = a12[a12.length - 1];
      e13.push.apply(e13, r8(l9, n12)), l9 = "";
    }
  }
  return e12.trim().split(/(`[^`]*`|\\\||\|)/).filter(Boolean).forEach(function(e13, r9, n13) {
    "|" === e13.trim() && (o6(), t13) ? 0 !== r9 && r9 !== n13.length - 1 && a12.push([]) : l9 += e13;
  }), o6(), n12.inTable = i11, a12;
}
function $e2(e12, r8, n12) {
  n12.inline = true;
  var t13 = e12[2] ? e12[2].replace(W3, "").split("|").map(Ae3) : [], a12 = e12[3] ? function(e13, r9, n13) {
    return e13.trim().split("\n").map(function(e14) {
      return Te2(e14, r9, n13, true);
    });
  }(e12[3], r8, n12) : [], l9 = Te2(e12[1], r8, n12, !!a12.length);
  return n12.inline = false, a12.length ? { align: t13, cells: a12, header: l9, type: i10.table } : { children: l9, type: i10.paragraph };
}
function Be3(e12, r8) {
  return null == e12.align[r8] ? {} : { textAlign: e12.align[r8] };
}
function Oe3(e12) {
  return e12.inline = 1, e12;
}
function Me3(e12) {
  return Oe3(function(r8, n12) {
    return n12.inline ? e12.exec(r8) : null;
  });
}
function Re3(e12) {
  return Oe3(function(r8, n12) {
    return n12.inline || n12.simple ? e12.exec(r8) : null;
  });
}
function Ie2(e12) {
  return function(r8, n12) {
    return n12.inline || n12.simple ? null : e12.exec(r8);
  };
}
function Ue2(e12) {
  return Oe3(function(r8) {
    return e12.exec(r8);
  });
}
function De3(e12, r8) {
  if (r8.inline || r8.simple) return null;
  var n12 = "";
  e12.split("\n").every(function(e13) {
    return e13 += "\n", !we2.some(function(r9) {
      return r9.test(e13);
    }) && (n12 += e13, !!e13.trim());
  });
  var t13 = ze3(n12);
  return "" == t13 ? null : [n12, , t13];
}
function Ne3(e12) {
  try {
    if (decodeURIComponent(e12).replace(/[^A-Za-z0-9/:]/g, "").match(/^\s*(javascript|vbscript|data(?!:image)):/i)) return null;
  } catch (e13) {
    return null;
  }
  return e12;
}
function je3(e12) {
  return e12.replace(ae4, "$1");
}
function He2(e12, r8, n12) {
  var t13 = n12.inline || false, i11 = n12.simple || false;
  n12.inline = true, n12.simple = true;
  var a12 = e12(r8, n12);
  return n12.inline = t13, n12.simple = i11, a12;
}
function Pe3(e12, r8, n12) {
  var t13 = n12.inline || false, i11 = n12.simple || false;
  n12.inline = false, n12.simple = true;
  var a12 = e12(r8, n12);
  return n12.inline = t13, n12.simple = i11, a12;
}
function _e2(e12, r8, n12) {
  var t13 = n12.inline || false;
  n12.inline = false;
  var i11 = e12(r8, n12);
  return n12.inline = t13, i11;
}
function Ge3() {
  return {};
}
function We3() {
  return null;
}
function Ze3() {
  return [].slice.call(arguments).filter(Boolean).join(" ");
}
function qe2(e12, r8, n12) {
  for (var t13 = e12, i11 = r8.split("."); i11.length && void 0 !== (t13 = t13[i11[0]]); ) i11.shift();
  return t13 || n12;
}
function Qe3(e12, r8) {
  var n12 = qe2(r8, e12);
  return n12 ? "function" == typeof n12 || "object" == typeof n12 && "render" in n12 ? n12 : qe2(r8, e12 + ".component", e12) : e12;
}
function Ve2(n12, t13) {
  var s37;
  function W4(e12, n13) {
    var i11, a12 = qe2(t13.overrides, e12 + ".props", {});
    return (i11 = t13).createElement.apply(i11, [Qe3(e12, t13.overrides), r7({}, n13, a12, { className: Ze3(null == n13 ? void 0 : n13.className, a12.className) || void 0 })].concat([].slice.call(arguments, 2)));
  }
  function Z4(e12) {
    e12 = e12.replace(w7, "");
    var r8 = false;
    t13.forceInline ? r8 = true : t13.forceBlock || (r8 = false === F4.test(e12));
    for (var n13 = ce3(oe3(r8 ? e12 : ze3(e12).replace(te4, "") + "\n\n", { inline: r8 })); "string" == typeof n13[n13.length - 1] && !n13[n13.length - 1].trim(); ) n13.pop();
    if (null === t13.wrapper) return n13;
    var i11, a12 = t13.wrapper || (r8 ? "span" : "div");
    if (n13.length > 1 || t13.forceWrapper) i11 = n13;
    else {
      if (1 === n13.length) return "string" == typeof (i11 = n13[0]) ? W4("span", { key: "outer" }, i11) : i11;
      i11 = null;
    }
    return t13.createElement(a12, { key: "outer" }, i11);
  }
  function q3(e12, r8) {
    var n13 = r8.match(c12);
    return n13 ? n13.reduce(function(r9, n14) {
      var i11 = n14.indexOf("=");
      if (-1 !== i11) {
        var l9 = function(e13) {
          return -1 !== e13.indexOf("-") && null === e13.match(O2) && (e13 = e13.replace(N4, function(e14, r10) {
            return r10.toUpperCase();
          })), e13;
        }(n14.slice(0, i11)).trim(), o6 = function(e13) {
          var r10 = e13[0];
          return ('"' === r10 || "'" === r10) && e13.length >= 2 && e13[e13.length - 1] === r10 ? e13.slice(1, -1) : e13;
        }(n14.slice(i11 + 1).trim()), c13 = a11[l9] || l9;
        if ("ref" === c13) return r9;
        var u4 = r9[c13] = function(e13, r10, n15, t14) {
          return "style" === r10 ? n15.split(/;\s?/).reduce(function(e14, r11) {
            var n16 = r11.slice(0, r11.indexOf(":"));
            return e14[n16.trim().replace(/(-[a-z])/g, function(e15) {
              return e15[1].toUpperCase();
            })] = r11.slice(n16.length + 1).trim(), e14;
          }, {}) : "href" === r10 || "src" === r10 ? t14(n15, e13, r10) : (n15.match(R12) && (n15 = n15.slice(1, n15.length - 1)), "true" === n15 || "false" !== n15 && n15);
        }(e12, l9, o6, t13.sanitizer);
        "string" == typeof u4 && (T3.test(u4) || M4.test(u4)) && (r9[c13] = Z4(u4.trim()));
      } else "style" !== n14 && (r9[a11[n14] || n14] = true);
      return r9;
    }, {}) : null;
  }
  void 0 === n12 && (n12 = ""), void 0 === t13 && (t13 = {}), t13.overrides = t13.overrides || {}, t13.sanitizer = t13.sanitizer || Ne3, t13.slugify = t13.slugify || Le2, t13.namedCodesToUnicode = t13.namedCodesToUnicode ? r7({}, l8, t13.namedCodesToUnicode) : l8, t13.createElement = t13.createElement || e11.createElement;
  var Q3 = [], V5 = {}, ae5 = ((s37 = {})[i10.blockQuote] = { match: Ie2(d5), order: 1, parse: function(e12, r8, n13) {
    var t14 = e12[0].replace(f10, "").match(p12);
    return { alert: t14[1], children: r8(t14[2], n13) };
  }, render: function(e12, r8, n13) {
    var a12 = { key: n13.key };
    return e12.alert && (a12.className = "markdown-alert-" + t13.slugify(e12.alert.toLowerCase(), Le2), e12.children.unshift({ attrs: {}, children: [{ type: i10.text, text: e12.alert }], noInnerParse: true, type: i10.htmlBlock, tag: "header" })), W4("blockquote", a12, r8(e12.children, n13));
  } }, s37[i10.breakLine] = { match: Ue2(h7), order: 1, parse: Ge3, render: function(e12, r8, n13) {
    return W4("br", { key: n13.key });
  } }, s37[i10.breakThematic] = { match: Ie2(m10), order: 1, parse: Ge3, render: function(e12, r8, n13) {
    return W4("hr", { key: n13.key });
  } }, s37[i10.codeBlock] = { match: Ie2(y2), order: 0, parse: function(e12) {
    return { lang: void 0, text: ze3(e12[0].replace(/^ {4}/gm, "")).replace(re4, "$1") };
  }, render: function(e12, n13, t14) {
    return W4("pre", { key: t14.key }, W4("code", r7({}, e12.attrs, { className: e12.lang ? "lang-" + e12.lang : "" }), e12.text));
  } }, s37[i10.codeFenced] = { match: Ie2(g8), order: 0, parse: function(e12) {
    return { attrs: q3("code", e12[3] || ""), lang: e12[2] || void 0, text: e12[4].replace(re4, "$1"), type: i10.codeBlock };
  } }, s37[i10.codeInline] = { match: Re3(k3), order: 3, parse: function(e12) {
    return { text: e12[2].replace(re4, "$1") };
  }, render: function(e12, r8, n13) {
    return W4("code", { key: n13.key }, e12.text);
  } }, s37[i10.footnote] = { match: Ie2(b3), order: 0, parse: function(e12) {
    return Q3.push({ footnote: e12[2], identifier: e12[1] }), {};
  }, render: We3 }, s37[i10.footnoteReference] = { match: Me3(C4), order: 1, parse: function(e12) {
    return { target: "#" + t13.slugify(e12[1], Le2), text: e12[1] };
  }, render: function(e12, r8, n13) {
    return W4("a", { key: n13.key, href: t13.sanitizer(e12.target, "a", "href") }, W4("sup", { key: n13.key }, e12.text));
  } }, s37[i10.gfmTask] = { match: Me3(E6), order: 1, parse: function(e12) {
    return { completed: "x" === e12[1].toLowerCase() };
  }, render: function(e12, r8, n13) {
    return W4("input", { checked: e12.completed, key: n13.key, readOnly: true, type: "checkbox" });
  } }, s37[i10.heading] = { match: Ie2(t13.enforceAtxHeadings ? L3 : z3), order: 1, parse: function(e12, r8, n13) {
    return { children: He2(r8, e12[2], n13), id: t13.slugify(e12[2], Le2), level: e12[1].length };
  }, render: function(e12, r8, n13) {
    return W4("h" + e12.level, { id: e12.id, key: n13.key }, r8(e12.children, n13));
  } }, s37[i10.headingSetext] = { match: Ie2(A3), order: 0, parse: function(e12, r8, n13) {
    return { children: He2(r8, e12[1], n13), level: "=" === e12[2] ? 1 : 2, type: i10.heading };
  } }, s37[i10.htmlBlock] = { match: Ue2(T3), order: 1, parse: function(e12, r8, n13) {
    var t14, i11 = e12[3].match(ie3), a12 = new RegExp("^" + i11[1], "gm"), l9 = e12[3].replace(a12, ""), c13 = (t14 = l9, Ee3.some(function(e13) {
      return e13.test(t14);
    }) ? _e2 : He2), u4 = e12[1].toLowerCase(), s38 = -1 !== o5.indexOf(u4), d6 = (s38 ? u4 : e12[1]).trim(), f11 = { attrs: q3(d6, e12[2]), noInnerParse: s38, tag: d6 };
    return n13.inAnchor = n13.inAnchor || "a" === u4, s38 ? f11.text = e12[3] : f11.children = c13(r8, l9, n13), n13.inAnchor = false, f11;
  }, render: function(e12, n13, t14) {
    return W4(e12.tag, r7({ key: t14.key }, e12.attrs), e12.text || (e12.children ? n13(e12.children, t14) : ""));
  } }, s37[i10.htmlSelfClosing] = { match: Ue2(M4), order: 1, parse: function(e12) {
    var r8 = e12[1].trim();
    return { attrs: q3(r8, e12[2] || ""), tag: r8 };
  }, render: function(e12, n13, t14) {
    return W4(e12.tag, r7({}, e12.attrs, { key: t14.key }));
  } }, s37[i10.htmlComment] = { match: Ue2(B2), order: 1, parse: function() {
    return {};
  }, render: We3 }, s37[i10.image] = { match: Re3(Se2), order: 1, parse: function(e12) {
    return { alt: e12[1], target: je3(e12[2]), title: e12[3] };
  }, render: function(e12, r8, n13) {
    return W4("img", { key: n13.key, alt: e12.alt || void 0, title: e12.title || void 0, src: t13.sanitizer(e12.target, "img", "src") });
  } }, s37[i10.link] = { match: Me3(Ce3), order: 3, parse: function(e12, r8, n13) {
    return { children: Pe3(r8, e12[1], n13), target: je3(e12[2]), title: e12[3] };
  }, render: function(e12, r8, n13) {
    return W4("a", { key: n13.key, href: t13.sanitizer(e12.target, "a", "href"), title: e12.title }, r8(e12.children, n13));
  } }, s37[i10.linkAngleBraceStyleDetector] = { match: Me3(D5), order: 0, parse: function(e12) {
    return { children: [{ text: e12[1], type: i10.text }], target: e12[1], type: i10.link };
  } }, s37[i10.linkBareUrlDetector] = { match: Oe3(function(e12, r8) {
    return r8.inAnchor || t13.disableAutoLink ? null : Me3(I4)(e12, r8);
  }), order: 0, parse: function(e12) {
    return { children: [{ text: e12[1], type: i10.text }], target: e12[1], title: void 0, type: i10.link };
  } }, s37[i10.linkMailtoDetector] = { match: Me3(U5), order: 0, parse: function(e12) {
    var r8 = e12[1], n13 = e12[1];
    return u3.test(n13) || (n13 = "mailto:" + n13), { children: [{ text: r8.replace("mailto:", ""), type: i10.text }], target: n13, type: i10.link };
  } }, s37[i10.orderedList] = be2(W4, 1), s37[i10.unorderedList] = be2(W4, 2), s37[i10.newlineCoalescer] = { match: Ie2(v4), order: 3, parse: Ge3, render: function() {
    return "\n";
  } }, s37[i10.paragraph] = { match: Oe3(De3), order: 3, parse: Fe3, render: function(e12, r8, n13) {
    return W4("p", { key: n13.key }, r8(e12.children, n13));
  } }, s37[i10.ref] = { match: Me3(H4), order: 0, parse: function(e12) {
    return V5[e12[1]] = { target: e12[2], title: e12[4] }, {};
  }, render: We3 }, s37[i10.refImage] = { match: Re3(P2), order: 0, parse: function(e12) {
    return { alt: e12[1] || void 0, ref: e12[2] };
  }, render: function(e12, r8, n13) {
    return V5[e12.ref] ? W4("img", { key: n13.key, alt: e12.alt, src: t13.sanitizer(V5[e12.ref].target, "img", "src"), title: V5[e12.ref].title }) : null;
  } }, s37[i10.refLink] = { match: Me3(_2), order: 0, parse: function(e12, r8, n13) {
    return { children: r8(e12[1], n13), fallbackChildren: e12[0], ref: e12[2] };
  }, render: function(e12, r8, n13) {
    return V5[e12.ref] ? W4("a", { key: n13.key, href: t13.sanitizer(V5[e12.ref].target, "a", "href"), title: V5[e12.ref].title }, r8(e12.children, n13)) : W4("span", { key: n13.key }, e12.fallbackChildren);
  } }, s37[i10.table] = { match: Ie2(j3), order: 1, parse: $e2, render: function(e12, r8, n13) {
    var t14 = e12;
    return W4("table", { key: n13.key }, W4("thead", null, W4("tr", null, t14.header.map(function(e13, i11) {
      return W4("th", { key: i11, style: Be3(t14, i11) }, r8(e13, n13));
    }))), W4("tbody", null, t14.cells.map(function(e13, i11) {
      return W4("tr", { key: i11 }, e13.map(function(e14, i12) {
        return W4("td", { key: i12, style: Be3(t14, i12) }, r8(e14, n13));
      }));
    })));
  } }, s37[i10.text] = { match: Ue2(ne3), order: 4, parse: function(e12) {
    return { text: e12[0].replace($3, function(e13, r8) {
      return t13.namedCodesToUnicode[r8] ? t13.namedCodesToUnicode[r8] : e13;
    }) };
  }, render: function(e12) {
    return e12.text;
  } }, s37[i10.textBolded] = { match: Re3(X3), order: 2, parse: function(e12, r8, n13) {
    return { children: r8(e12[2], n13) };
  }, render: function(e12, r8, n13) {
    return W4("strong", { key: n13.key }, r8(e12.children, n13));
  } }, s37[i10.textEmphasized] = { match: Re3(J2), order: 3, parse: function(e12, r8, n13) {
    return { children: r8(e12[2], n13) };
  }, render: function(e12, r8, n13) {
    return W4("em", { key: n13.key }, r8(e12.children, n13));
  } }, s37[i10.textEscaped] = { match: Re3(ee3), order: 1, parse: function(e12) {
    return { text: e12[1], type: i10.text };
  } }, s37[i10.textMarked] = { match: Re3(K3), order: 3, parse: Fe3, render: function(e12, r8, n13) {
    return W4("mark", { key: n13.key }, r8(e12.children, n13));
  } }, s37[i10.textStrikethroughed] = { match: Re3(Y4), order: 3, parse: Fe3, render: function(e12, r8, n13) {
    return W4("del", { key: n13.key }, r8(e12.children, n13));
  } }, s37);
  true === t13.disableParsingRawHTML && (delete ae5[i10.htmlBlock], delete ae5[i10.htmlSelfClosing]);
  var le4, oe3 = function(e12) {
    var r8 = Object.keys(e12);
    function n13(t14, i11) {
      var a12, l9, o6 = [], c13 = "", u4 = "";
      for (i11.prevCapture = i11.prevCapture || ""; t14; ) for (var s38 = 0; s38 < r8.length; ) if (a12 = e12[c13 = r8[s38]], !i11.inline || a12.match.inline) {
        var d6 = a12.match(t14, i11);
        if (d6) {
          i11.prevCapture += u4 = d6[0], t14 = t14.substring(u4.length), null == (l9 = a12.parse(d6, n13, i11)).type && (l9.type = c13), o6.push(l9);
          break;
        }
        s38++;
      } else s38++;
      return i11.prevCapture = "", o6;
    }
    return r8.sort(function(r9, n14) {
      var t14 = e12[r9].order, i11 = e12[n14].order;
      return t14 !== i11 ? t14 - i11 : r9 < n14 ? -1 : 1;
    }), function(e13, r9) {
      return n13(function(e14) {
        return e14.replace(x2, "\n").replace(S2, "").replace(G2, "    ");
      }(e13), r9);
    };
  }(ae5), ce3 = (le4 = /* @__PURE__ */ function(e12, r8) {
    return function(n13, t14, i11) {
      var a12 = e12[n13.type].render;
      return r8 ? r8(function() {
        return a12(n13, t14, i11);
      }, n13, t14, i11) : a12(n13, t14, i11);
    };
  }(ae5, t13.renderRule), function e12(r8, n13) {
    if (void 0 === n13 && (n13 = {}), Array.isArray(r8)) {
      for (var t14 = n13.key, i11 = [], a12 = false, l9 = 0; l9 < r8.length; l9++) {
        n13.key = l9;
        var o6 = e12(r8[l9], n13), c13 = "string" == typeof o6;
        c13 && a12 ? i11[i11.length - 1] += o6 : null !== o6 && i11.push(o6), a12 = c13;
      }
      return n13.key = t14, i11;
    }
    return le4(r8, e12, n13);
  }), ue4 = Z4(n12);
  return Q3.length ? W4("div", null, ue4, W4("footer", { key: "footer" }, Q3.map(function(e12) {
    return W4("div", { id: t13.slugify(e12.identifier, Le2), key: e12.identifier }, e12.identifier, ce3(oe3(e12.footnote, { inline: true })));
  }))) : ue4;
}
function index_module_default(r8) {
  var n12 = r8.children, i11 = void 0 === n12 ? "" : n12, a12 = r8.options, l9 = function(e12, r9) {
    if (null == e12) return {};
    var n13, t13, i12 = {}, a13 = Object.keys(e12);
    for (t13 = 0; t13 < a13.length; t13++) r9.indexOf(n13 = a13[t13]) >= 0 || (i12[n13] = e12[n13]);
    return i12;
  }(r8, t12);
  return e11.cloneElement(Ve2(i11, a12), l9);
}
var e11, n11, t12, i10, a11, l8, o5, c12, u3, s33, d5, f10, p12, h7, m10, g8, y2, k3, v4, x2, b3, C4, S2, w7, E6, z3, L3, A3, T3, $3, B2, O2, M4, R12, I4, U5, D5, N4, j3, H4, P2, _2, F4, G2, W3, Z3, q2, Q2, V4, X3, J2, K3, Y4, ee3, re4, ne3, te4, ie3, ae4, le3, oe2, ce2, se3, de3, pe3, he2, ge2, ye2, ve2, xe3, Ce3, Se2, we2, Ee3, Fe3;
var init_index_module = __esm({
  "node_modules/.pnpm/markdown-to-jsx@7.7.4_react@19.1.0/node_modules/markdown-to-jsx/dist/index.module.js"() {
    e11 = __toESM(require_react(), 1);
    t12 = ["children", "options"];
    i10 = { blockQuote: "0", breakLine: "1", breakThematic: "2", codeBlock: "3", codeFenced: "4", codeInline: "5", footnote: "6", footnoteReference: "7", gfmTask: "8", heading: "9", headingSetext: "10", htmlBlock: "11", htmlComment: "12", htmlSelfClosing: "13", image: "14", link: "15", linkAngleBraceStyleDetector: "16", linkBareUrlDetector: "17", linkMailtoDetector: "18", newlineCoalescer: "19", orderedList: "20", paragraph: "21", ref: "22", refImage: "23", refLink: "24", table: "25", tableSeparator: "26", text: "27", textBolded: "28", textEmphasized: "29", textEscaped: "30", textMarked: "31", textStrikethroughed: "32", unorderedList: "33" };
    !function(e12) {
      e12[e12.MAX = 0] = "MAX", e12[e12.HIGH = 1] = "HIGH", e12[e12.MED = 2] = "MED", e12[e12.LOW = 3] = "LOW", e12[e12.MIN = 4] = "MIN";
    }(n11 || (n11 = {}));
    a11 = ["allowFullScreen", "allowTransparency", "autoComplete", "autoFocus", "autoPlay", "cellPadding", "cellSpacing", "charSet", "classId", "colSpan", "contentEditable", "contextMenu", "crossOrigin", "encType", "formAction", "formEncType", "formMethod", "formNoValidate", "formTarget", "frameBorder", "hrefLang", "inputMode", "keyParams", "keyType", "marginHeight", "marginWidth", "maxLength", "mediaGroup", "minLength", "noValidate", "radioGroup", "readOnly", "rowSpan", "spellCheck", "srcDoc", "srcLang", "srcSet", "tabIndex", "useMap"].reduce(function(e12, r8) {
      return e12[r8.toLowerCase()] = r8, e12;
    }, { class: "className", for: "htmlFor" });
    l8 = { amp: "&", apos: "'", gt: ">", lt: "<", nbsp: "\xA0", quot: "\u201C" };
    o5 = ["style", "script"];
    c12 = /([-A-Z0-9_:]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|(?:\{((?:\\.|{[^}]*?}|[^}])*)\})))?/gi;
    u3 = /mailto:/i;
    s33 = /\n{2,}$/;
    d5 = /^(\s*>[\s\S]*?)(?=\n\n|$)/;
    f10 = /^ *> ?/gm;
    p12 = /^(?:\[!([^\]]*)\]\n)?([\s\S]*)/;
    h7 = /^ {2,}\n/;
    m10 = /^(?:( *[-*_])){3,} *(?:\n *)+\n/;
    g8 = /^(?: {1,3})?(`{3,}|~{3,}) *(\S+)? *([^\n]*?)?\n([\s\S]*?)(?:\1\n?|$)/;
    y2 = /^(?: {4}[^\n]+\n*)+(?:\n *)+\n?/;
    k3 = /^(`+)((?:\\`|[^`])+)\1/;
    v4 = /^(?:\n *)*\n/;
    x2 = /\r\n?/g;
    b3 = /^\[\^([^\]]+)](:(.*)((\n+ {4,}.*)|(\n(?!\[\^).+))*)/;
    C4 = /^\[\^([^\]]+)]/;
    S2 = /\f/g;
    w7 = /^---[ \t]*\n(.|\n)*\n---[ \t]*\n/;
    E6 = /^\s*?\[(x|\s)\]/;
    z3 = /^ *(#{1,6}) *([^\n]+?)(?: +#*)?(?:\n *)*(?:\n|$)/;
    L3 = /^ *(#{1,6}) +([^\n]+?)(?: +#*)?(?:\n *)*(?:\n|$)/;
    A3 = /^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/;
    T3 = /^ *(?!<[a-z][^ >/]* ?\/>)<([a-z][^ >/]*) ?((?:[^>]*[^/])?)>\n?(\s*(?:<\1[^>]*?>[\s\S]*?<\/\1>|(?!<\1\b)[\s\S])*?)<\/\1>(?!<\/\1>)\n*/i;
    $3 = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi;
    B2 = /^<!--[\s\S]*?(?:-->)/;
    O2 = /^(data|aria|x)-[a-z_][a-z\d_.-]*$/;
    M4 = /^ *<([a-z][a-z0-9:]*)(?:\s+((?:<.*?>|[^>])*))?\/?>(?!<\/\1>)(\s*\n)?/i;
    R12 = /^\{.*\}$/;
    I4 = /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/;
    U5 = /^<([^ >]+@[^ >]+)>/;
    D5 = /^<([^ >]+:\/[^ >]+)>/;
    N4 = /-([a-z])?/gi;
    j3 = /^(\|.*)\n(?: *(\|? *[-:]+ *\|[-| :]*)\n((?:.*\|.*\n)*))?\n?/;
    H4 = /^\[([^\]]*)\]:\s+<?([^\s>]+)>?\s*("([^"]*)")?/;
    P2 = /^!\[([^\]]*)\] ?\[([^\]]*)\]/;
    _2 = /^\[([^\]]*)\] ?\[([^\]]*)\]/;
    F4 = /(\n|^[-*]\s|^#|^ {2,}|^-{2,}|^>\s)/;
    G2 = /\t/g;
    W3 = /(^ *\||\| *$)/g;
    Z3 = /^ *:-+: *$/;
    q2 = /^ *:-+ *$/;
    Q2 = /^ *-+: *$/;
    V4 = "((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|\\\\\\1|[\\s\\S])+?)";
    X3 = new RegExp("^([*_])\\1" + V4 + "\\1\\1(?!\\1)");
    J2 = new RegExp("^([*_])" + V4 + "\\1(?!\\1)");
    K3 = new RegExp("^(==)" + V4 + "\\1");
    Y4 = new RegExp("^(~~)" + V4 + "\\1");
    ee3 = /^\\([^0-9A-Za-z\s])/;
    re4 = /\\([^0-9A-Za-z\s])/g;
    ne3 = /^([\s\S](?:(?!  |[0-9]\.)[^*_~\-\n<`\\\[!])*)/;
    te4 = /^\n+/;
    ie3 = /^([ \t]*)/;
    ae4 = /\\([^\\])/g;
    le3 = /(?:^|\n)( *)$/;
    oe2 = "(?:\\d+\\.)";
    ce2 = "(?:[*+-])";
    se3 = ue3(1);
    de3 = ue3(2);
    pe3 = fe3(1);
    he2 = fe3(2);
    ge2 = me3(1);
    ye2 = me3(2);
    ve2 = ke3(1);
    xe3 = ke3(2);
    Ce3 = new RegExp(`^\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:\\([^)]*\\)|[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['"]([\\s\\S]*?)['"])?\\s*\\)`);
    Se2 = /^!\[(.*?)\]\( *((?:\([^)]*\)|[^() ])*) *"?([^)"]*)?"?\)/;
    we2 = [d5, g8, y2, z3, A3, L3, j3, ve2, xe3];
    Ee3 = [].concat(we2, [/^[^\n]+(?:  \n|\n{2,})/, T3, B2, M4]);
    Fe3 = function(e12, r8, n12) {
      return { children: He2(r8, e12[2], n12) };
    };
  }
});

// dist/server/chunks/chunk-LRXWADqD.js
var section3, mainTitle, accordionLabel, item2, label2, union2, content3, chevron, s34;
var init_chunk_LRXWADqD = __esm({
  "dist/server/chunks/chunk-LRXWADqD.js"() {
    "use strict";
    section3 = "_5vOBl";
    mainTitle = "f0edn";
    accordionLabel = "FPEK9";
    item2 = "ww-3b";
    label2 = "t-ndd";
    union2 = "OGbCb";
    content3 = "dGZoU";
    chevron = "_2raAR";
    s34 = {
      section: section3,
      mainTitle,
      accordionLabel,
      item: item2,
      label: label2,
      union: union2,
      content: content3,
      chevron
    };
  }
});

// dist/server/chunks/chunk-C0Mje3m-.js
var container4, mainTitle2, paper4, cardTitle3, blogText, image4, s35;
var init_chunk_C0Mje3m = __esm({
  "dist/server/chunks/chunk-C0Mje3m-.js"() {
    "use strict";
    container4 = "WTIy4";
    mainTitle2 = "zYuaB";
    paper4 = "nPJnO";
    cardTitle3 = "eM9Cp";
    blogText = "_0iR97";
    image4 = "gKOz6";
    s35 = {
      container: container4,
      mainTitle: mainTitle2,
      paper: paper4,
      cardTitle: cardTitle3,
      blogText,
      image: image4
    };
  }
});

// dist/server/chunks/chunk-CQP1hOO9.js
var root4, logo, title7, s36;
var init_chunk_CQP1hOO9 = __esm({
  "dist/server/chunks/chunk-CQP1hOO9.js"() {
    "use strict";
    root4 = "RN9dn";
    logo = "A4t7R";
    title7 = "tOzzM";
    s36 = {
      root: root4,
      logo,
      title: title7
    };
  }
});

// node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/Loading.js
function LoadingComponent() {
  return import_react216.default.createElement("div", { style: {
    width: "100%",
    height: "100%",
    maxHeight: "100%",
    background: "linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%)",
    borderRadius: "5px",
    backgroundSize: "200% 100%",
    animation: "1.3s vike-react-shine linear infinite",
    aspectRatio: "2.5/1"
  } });
}
var import_react216, Loading_default;
var init_Loading = __esm({
  "node_modules/.pnpm/vike-react@0.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0_vike@0.4.228_react-streami_9a493da538144cf77c55d5343b407466/node_modules/vike-react/dist/integration/Loading.js"() {
    import_react216 = __toESM(require_react(), 1);
    Loading_default = {
      component: LoadingComponent
    };
  }
});

// dist/server/entries/pages_index.mjs
var pages_index_exports = {};
__export(pages_index_exports, {
  configValuesSerialized: () => configValuesSerialized
});
function Page() {
  return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(IndexPage, {});
}
var import_jsx_runtime137, React7, import_react217, import_embla_carousel_wheel_gestures, SvgUnion$2, Picture, Section2, BASE_TRANSITION, BASE_ITEM_VARIANTS, SpinningText, StickyScrollReveal, Hero, About, StatisticsCard, ForWhomCard, HowItHelpsCard, TariffCard, getMainPageInfoQuery, LandingModel, Statistics, SvgImageCard1, SvgImageCard2, SvgImageCard3, SvgImageCard4, SvgImageCardDesktop1, SvgImageCardDesktop2, SvgImageCardDesktop3, SvgImageCardDesktop4, ForWhom, SvgImage1, SvgImage2, SvgImage3, SvgImage4, CARDS$1, HowItHelps, FREE_TARIFF, FULL_TARIFF, EXPRESS_TARIFF, SvgUnion$1, Tariffs, FLOW_STEPS, One, Two, Three, Decor, icons, HowItWorks, CARDS, WhyUs, ReviewModel, getReviewsQuery, PeopleTalkModel, Desktop, Mobile, PeopleTalk, getFAQQuery, FaqModel, SvgUnion, FAQ, getBlogPostsQuery, getAllBlogPostsQuery, MoreInBlog, LetsContinue, IndexPage, import3, createPageInit, pageInitiated, import8, configValuesSerialized;
var init_pages_index = __esm({
  "dist/server/entries/pages_index.mjs"() {
    "use strict";
    init_onRenderHtml();
    init_chunk_DeA7MPa2();
    import_jsx_runtime137 = __toESM(require_jsx_runtime(), 1);
    init_esm3();
    init_clsx();
    init_usePageContext();
    React7 = __toESM(require_react(), 1);
    import_react217 = __toESM(require_react(), 1);
    init_chunk_DEazhzVf();
    init_chunk_BE_yAshe();
    init_chunk_BwkHABA3();
    init_chunk_Bc_wI8j8();
    init_effector_react();
    init_react();
    init_chunk_BYxqvYEl();
    init_chunk_DsLj9Oyk();
    init_effector();
    init_core();
    init_chunk_BFJ_iPUC();
    init_chunk_BD_HY7OV();
    init_chunk_Bn7F6R0K();
    init_es3();
    init_chunk_BGA5CCak();
    init_chunk_5uWBra5g();
    init_ssr();
    init_lodash();
    init_chunk_Dag9IUf3();
    init_chunk_BI4hU6Kt();
    init_chunk_CB7_bpg8();
    init_chunk_DEvQl2lk();
    init_chunk_CrzyYD85();
    init_esm9();
    init_embla_carousel_auto_scroll_esm();
    import_embla_carousel_wheel_gestures = __toESM(require_dist3(), 1);
    init_chunk_D7l9tNkh();
    init_index_module();
    init_chunk_LRXWADqD();
    init_chunk_C0Mje3m();
    init_chunk_CQP1hOO9();
    init_Loading();
    init_esm5();
    init_chunk_Dy3LQdoT();
    init_chunk_DLmw_jEj();
    init_chunk_Bxs9cBFL();
    init_chunk_BmkqR2v();
    init_chunk_BDst9g7C();
    init_chunk_BxoQfonb();
    init_chunk_WsihrUVn();
    SvgUnion$2 = (props) => /* @__PURE__ */ React7.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 93 85", ...props }, /* @__PURE__ */ React7.createElement("path", { fill: "#D0BFFF", fillRule: "evenodd", d: "M46.623 13.64C28.18 1.2 10.728-3.617 3.525 2.916c-7.203 6.533-2.067 22.52 11.403 39.471C1.314 59.245-3.958 75.197 3.19 81.782c7.148 6.584 24.642 1.888 43.19-10.425C64.825 83.8 82.279 88.617 89.483 82.084c7.203-6.534 2.066-22.523-11.407-39.476C91.688 25.752 96.957 9.802 89.81 3.218 82.662-3.365 65.17 1.33 46.623 13.64Z", clipRule: "evenodd" }));
    Picture = ({
      src,
      width,
      height,
      alt = "",
      draggable = false,
      className,
      extraPath,
      ...props
    }) => {
      var _a;
      const path = (_a = src == null ? void 0 : src.split("/")) == null ? void 0 : _a.at(-1);
      const fullPath = `${src}/${path}${extraPath ? `${extraPath}` : ""}`;
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("picture", { className: clsx_default(s16.picture, className), children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("source", { srcSet: `${fullPath}.avif 1x, ${fullPath}@2x.avif 2x`, type: "image/avif" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("source", { srcSet: `${fullPath}.webp 1x, ${fullPath}@2x.webp 2x`, type: "image/webp" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("source", { srcSet: `${fullPath}.jpeg 1x, ${fullPath}@2x.jpeg 2x` }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("source", { srcSet: `${fullPath}.jpg 1x, ${fullPath}@2x.jpg 2x` }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("source", { srcSet: `${fullPath}.png 1x, ${fullPath}@2x.png 2x` }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Image, { loading: "lazy", draggable, w: width, h: height, width, height, src: fullPath + ".png", alt, "aria-hidden": true, fallbackSrc: fullPath + ".png", ...props })
      ] });
    };
    Section2 = ({
      children,
      filledText,
      title: title8,
      className,
      containerClassName,
      ref,
      id: id5,
      hidden: hidden2 = false,
      ...props
    }) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { id: id5, ref, className: clsx_default(s17.box, className), pos: "relative", component: "section", hidden: hidden2, ...props, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Container, { className: containerClassName, children: [
      (title8 || filledText) && /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { className: s17.title, order: 2, children: [
        title8,
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("span", { children: filledText })
      ] }),
      children
    ] }) });
    BASE_TRANSITION = {
      repeat: Infinity,
      ease: "linear"
    };
    BASE_ITEM_VARIANTS = {
      hidden: {
        opacity: 1
      },
      visible: {
        opacity: 1
      }
    };
    SpinningText = ({
      children,
      duration = 10,
      style,
      className,
      reverse = false,
      radius = 5,
      transition,
      variants
    }) => {
      if (typeof children !== "string" && !Array.isArray(children)) {
        throw new Error("children must be a string or an array of strings");
      }
      if (Array.isArray(children)) {
        if (!children.every((child) => typeof child === "string")) {
          throw new Error("all elements in children array must be strings");
        }
        children = children.join("");
      }
      const letters2 = children.split("");
      letters2.push(" ");
      const finalTransition = {
        ...BASE_TRANSITION,
        ...transition,
        duration: (transition == null ? void 0 : transition.duration) ?? duration
      };
      const containerVariants = {
        visible: {
          rotate: reverse ? -360 : 360
        },
        ...variants == null ? void 0 : variants.container
      };
      const itemVariants = {
        ...BASE_ITEM_VARIANTS,
        ...variants == null ? void 0 : variants.item
      };
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(motion.div, { className: clsx_default(s20.relative, className), style: {
        ...style
      }, initial: "hidden", animate: "visible", variants: containerVariants, transition: finalTransition, children: [
        letters2.map((letter, index) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(motion.span, { "aria-hidden": "true", variants: itemVariants, className: s20.letters, style: {
          "--index": index,
          "--total": letters2.length,
          "--radius": radius
        }, children: letter }, `${index}-${letter}`)),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(VisuallyHidden, { children })
      ] });
    };
    StickyScrollReveal = ({
      content: content4,
      contentClassName,
      titleClassName,
      descriptionClassName
    }) => {
      const [activeCard, setActiveCard] = (0, import_react217.useState)(0);
      const ref = (0, import_react217.useRef)(null);
      const {
        scrollYProgress
      } = useScroll({
        // uncomment line 22 and comment line 23 if you DONT want the overflow container and want to have it change on the entire page scroll
        target: ref,
        // container: ref,
        offset: ["start start", "end start"]
      });
      const cardLength = content4.length;
      useMotionValueEvent(scrollYProgress, "change", (latest) => {
        const cardsBreakpoints = content4.map((_3, index) => index * 2 / cardLength / 2);
        const closestBreakpointIndex = cardsBreakpoints.reduce((acc, breakpoint, index) => {
          const distance3 = Math.abs(latest - breakpoint);
          if (distance3 <= Math.abs(latest - cardsBreakpoints[acc])) {
            return index;
          }
          return acc;
        }, 0);
        setActiveCard(closestBreakpointIndex);
      });
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(motion.div, { className: s30.wrapper, ref, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("div", { className: s30.items, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("div", { className: s30.container, children: content4.map((item3, index) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("div", { className: s30.item, children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(motion.h2, { "data-index": index, initial: {
            opacity: 0
          }, animate: {
            opacity: activeCard === index ? 1 : 0.3
          }, className: clsx_default(s30.title, titleClassName), children: item3.title }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(motion.p, { initial: {
            opacity: 0
          }, animate: {
            opacity: activeCard === index ? 1 : 0.3
          }, className: clsx_default(s30.description, descriptionClassName), children: item3.description }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("div", { style: {
            opacity: activeCard === index ? 1 : 0.3
          }, className: clsx_default(s30.mobile), children: content4[index].content ?? null })
        ] }, item3.title + index)) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("div", { className: clsx_default(s30.content, contentClassName), children: content4[activeCard].content ?? null })
      ] });
    };
    Hero = () => {
      const {
        isMobile
      } = usePageContext();
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Section2, { pt: 0, pb: isMobile ? 0 : 200, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Container, { className: s18.box, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { className: clsx_default(s18.text, s18.title), children: "\u0422\u0435\u0441\u0442 \u043D\u0430 \u0442\u0438\u043F \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Text, { className: clsx_default(s18.text, s18.subtitle), children: [
          "\u0438 \u0432\u044B\u0431\u043E\u0440 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u0438 ",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("br", {}),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("span", { children: [
            "\u0441\xA0",
            /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("span", { className: s18.ai, children: [
              "AI ",
              /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgUnion$2, {})
            ] })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s18.description, children: "\u0423\u0437\u043D\u0430\u0439\u0442\u0435 \u0441\u0432\u043E\u0439 \u0442\u0438\u043F \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 \u0438 \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0435 \u0441\u043E\u0432\u0435\u0442\u044B \u0434\u043B\u044F \u0432\u0430\u0448\u0435\u0433\u043E \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { className: s18.image, src: "/landing/main-hero-char" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { href: "/test", component: "a", className: "mantine-button-rainbow", size: isMobile ? "md" : "xl", children: "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" })
      ] }) });
    };
    About = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Section2, { title: "\u041E \u043F\u043B\u0430\u0442\u0444\u043E\u0440\u043C\u0435 ", filledText: "CognitiveLab", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { className: s19.grid, children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s19.description, children: "\u041F\u0440\u043E\u0439\u0434\u0438\u0442\u0435 \u0442\u0435\u0441\u0442 \u0438 \u0443\u0437\u043D\u0430\u0439\u0442\u0435, \u043A\u0430\u043A\u0438\u0435 \u0441\u043A\u0440\u044B\u0442\u044B\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044B \u0432 \u0432\u0430\u0441 \u0437\u0430\u043B\u043E\u0436\u0435\u043D\u044B \u0438 \u043A\u0430\u043A \u0438\u0445 \u043B\u0443\u0447\u0448\u0435 \u0432\u0441\u0435\u0433\u043E \u043F\u0440\u0438\u043C\u0435\u043D\u044F\u0442\u044C \u0434\u043B\u044F \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u043D\u043E\u0433\u043E \u0440\u043E\u0441\u0442\u0430 \u0438 \u043A\u0430\u0440\u044C\u0435\u0440\u043D\u043E\u0433\u043E \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F." }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { className: s19.image, src: "/landing/letter-main", width: 210, height: 223, "aria-hidden": true, alt: "" })
    ] }) });
    StatisticsCard = ({
      title: title8,
      text: text3
    }) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Paper, { className: s21.paper, children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { className: s21.paperTitle, order: 3, children: title8 }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s21.paperText, children: text3 })
    ] });
    ForWhomCard = ({
      bg,
      text: text3,
      image: image5,
      title: title8
    }) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { className: s23.card, children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { className: s23.cardTop, children: [
        bg,
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { order: 4, children: title8 }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: image5, w: 150, h: 121 })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s23.description, children: text3 })
    ] });
    HowItHelpsCard = ({
      i: i11,
      title: title8,
      bg,
      text: text3
    }) => {
      const container5 = (0, import_react217.useRef)(null);
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { ref: container5, className: s25.wrapper, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(motion2.div, { className: s25.card, style: {
        top: `calc(${i11 * 90}px)`
      }, children: [
        bg,
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { order: 4, children: title8 }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { children: text3 })
      ] }) });
    };
    TariffCard = ({
      title: title8,
      features,
      price: price2,
      description: description4,
      isFull = false,
      buyNow = false
    }) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Paper, { className: clsx_default(s27.tariff, isFull && s27.full), children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { order: 5, children: title8 }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { mih: 63, children: description4 }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: clsx_default(s27.price, isNumber_default(price2) && s27.num), fw: "bold", children: price2 }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Divider, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(List, { className: s27.list, icon: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(n8, { weight: "bold", size: 24 }), children: features == null ? void 0 : features.map((item3) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(List.Item, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { span: true, fw: "600", children: item3.title }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { span: true, children: item3.description })
      ] }, item3.title)) }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { component: "a", href: buyNow ? '/purchase?type=""' : "/test", variant: "outline", className: s27.button, children: buyNow ? "\u041A\u0443\u043F\u0438\u0442\u044C \u0441\u0435\u0439\u0447\u0430\u0441" : "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" })
    ] });
    getMainPageInfoQuery = we({
      sid: "she8ei",
      fn: () => Or({
        effect: createCommonRequestFx(() => ({
          url: API.surveys.mainPage
        })),
        initialData: []
      }),
      name: "getMainPageInfoQuery",
      method: "createQuery"
    });
    LandingModel = atom(() => {
      const $statisticsAndTrust = g([], {
        name: "$statisticsAndTrust",
        sid: "-7v5633"
      });
      M({
        and: [{
          clock: getMainPageInfoQuery.finished.success,
          fn: (res) => {
            var _a;
            return ((_a = res.result.find((el) => el.statistics_and_trust)) == null ? void 0 : _a.statistics_and_trust) ?? [];
          },
          target: $statisticsAndTrust
        }],
        or: {
          sid: "vzo0lh"
        }
      });
      return {
        $statisticsAndTrust
      };
    });
    Statistics = () => {
      const data = i(LandingModel.$statisticsAndTrust, (el) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(StatisticsCard, { title: el.primary_text, text: el.secondary_text }));
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { containerClassName: s22.section, title: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(import_jsx_runtime137.Fragment, { children: [
        "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430",
        " ",
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("span", { children: [
          "\u0438\xA0",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("span", { style: {
            display: "inline"
          }, children: "\u0434\u043E\u0432\u0435\u0440\u0438\u0435" })
        ] })
      ] }), children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Flex, { className: s22.flex, children: data }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SpinningText, { radius: 7, className: s22.spinning, children: "Cognitive Lab \u2726 Cognitive Lab \u2726" })
      ] });
    };
    SvgImageCard1 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 164, height: 122, viewBox: "0 0 164 122", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M163.705 34.0102C122.649 19.4025 103.215 -27.5094 121.942 -66.8922C82.5588 -48.1661 35.6469 -67.6001 21.0392 -108.656C6.43155 -67.6001 -40.4803 -48.1661 -79.8632 -66.8922C-61.137 -27.5094 -80.571 19.4025 -121.627 34.0102C-80.571 48.6178 -61.137 95.5297 -79.8632 134.913C-40.4803 116.186 6.43155 135.62 21.0392 176.676C35.6469 135.62 82.5588 116.186 121.942 134.913C103.215 95.5297 122.649 48.6178 163.705 34.0102Z", fill: "#5F3DC4" }));
    SvgImageCard2 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 164, height: 122, viewBox: "0 0 164 122", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M164 65C118.323 50.1059 82.5589 -6.99908 73.2494 -80C66.6189 -27.971 46.5266 15.9765 19 42.3584C-8.52655 15.9765 -28.6189 -27.9042 -35.2494 -80C-44.5589 -6.99908 -80.3233 50.1059 -126 65C-80.3233 79.8941 -44.5589 136.999 -35.2494 210C-28.6189 157.971 -8.52655 114.023 19 87.6416C46.5266 114.023 66.6189 157.904 73.2494 210C82.5589 136.999 118.323 79.8941 164 65Z", fill: "#82C91E" }));
    SvgImageCard3 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 175, height: 122, viewBox: "0 0 175 122", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M139.677 11.708C131.435 11.708 108.279 14.5338 84.2599 19.2435C104.826 5.50685 123.586 -9.17169 129.473 -15.0588C143.21 -28.7954 143.21 -51.1665 129.473 -64.9031C115.736 -78.6397 93.3653 -78.6397 79.6287 -64.9031C73.5846 -58.859 58.5136 -39.5492 44.5415 -18.4341C49.6437 -43.3955 52.705 -68.1214 52.705 -76.7558C52.705 -96.2225 36.9275 -112 17.4608 -112C-2.00597 -112 -17.7835 -96.2225 -17.7835 -76.7558C-17.7835 -68.4353 -14.8791 -44.8869 -10.0909 -20.7104C-23.8276 -41.2761 -38.5061 -60.0364 -44.3932 -65.9235C-58.1298 -79.6601 -80.5009 -79.6601 -94.2375 -65.9235C-107.974 -52.1869 -107.974 -29.8158 -94.2375 -16.0792C-88.1149 -9.95664 -68.2557 5.50686 -46.7481 19.7144C-71.6309 14.6908 -96.2783 11.6295 -104.756 11.6295C-124.223 11.6295 -140 27.4069 -140 46.8737C-140 66.3404 -124.223 82.1179 -104.756 82.1179C-96.5138 82.1179 -73.2008 79.2921 -49.1814 74.5039C-69.2761 88.005 -87.4084 102.213 -93.1385 107.943C-106.875 121.679 -106.875 144.05 -93.1385 157.787C-79.4019 171.524 -57.0309 171.524 -43.2943 157.787C-37.6427 152.135 -23.9061 134.631 -10.6404 115.007C-15.0361 138.006 -17.7049 159.828 -17.7049 167.756C-17.7049 187.223 -1.92747 203 17.5392 203C37.006 203 52.7835 187.223 52.7835 167.756C52.7835 159.592 49.9577 136.672 45.3264 112.888C58.8276 132.983 73.0352 151.115 78.7653 156.845C92.5019 170.582 114.873 170.582 128.61 156.845C142.346 143.108 142.346 120.737 128.61 107.001C123.036 101.428 106.003 88.0835 86.7717 74.9748C109.849 79.4491 131.828 82.0394 139.756 82.0394C159.223 82.0394 175 66.2619 175 46.7952C175 27.3284 159.144 11.708 139.677 11.708Z", fill: "#D6336C" }));
    SvgImageCard4 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 174, height: 122, viewBox: "0 0 174 122", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("circle", { cx: 18.5, cy: 31.5, r: 155.5, fill: "#F59F00" }));
    SvgImageCardDesktop1 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 217, height: 200, viewBox: "0 0 217 200", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M217 38.5C170.524 21.9639 148.525 -31.141 169.723 -75.7228C125.141 -54.5246 72.0361 -76.5241 55.5 -123C38.9639 -76.5241 -14.141 -54.5246 -58.7228 -75.7228C-37.5246 -31.141 -59.5241 21.9639 -106 38.5C-59.5241 55.0361 -37.5246 108.141 -58.7228 152.723C-14.141 131.525 38.9639 153.524 55.5 200C72.0361 153.524 125.141 131.525 169.723 152.723C148.525 108.141 170.524 55.0361 217 38.5Z", fill: "#5F3DC4" }));
    SvgImageCardDesktop2 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 244, height: 210, viewBox: "0 0 244 210", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M244 65C198.323 50.1059 162.559 -6.99908 153.249 -80C146.619 -27.971 126.527 15.9765 99 42.3584C71.4734 15.9765 51.3811 -27.9042 44.7506 -80C35.4411 -6.99908 -0.323326 50.1059 -46 65C-0.323326 79.8941 35.4411 136.999 44.7506 210C51.3811 157.971 71.4734 114.023 99 87.6416C126.527 114.023 146.619 157.904 153.249 210C162.559 136.999 198.323 79.8941 244 65Z", fill: "#74B816" }));
    SvgImageCardDesktop3 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 195, height: 203, viewBox: "0 0 195 203", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { d: "M159.677 11.708C151.435 11.708 128.279 14.5338 104.26 19.2435C124.826 5.50685 143.586 -9.17169 149.473 -15.0588C163.21 -28.7954 163.21 -51.1665 149.473 -64.9031C135.736 -78.6397 113.365 -78.6397 99.6287 -64.9031C93.5846 -58.859 78.5136 -39.5492 64.5415 -18.4341C69.6437 -43.3955 72.705 -68.1214 72.705 -76.7558C72.705 -96.2225 56.9275 -112 37.4608 -112C17.994 -112 2.21655 -96.2225 2.21655 -76.7558C2.21655 -68.4353 5.12086 -44.8869 9.90906 -20.7104C-3.82755 -41.2761 -18.5061 -60.0364 -24.3932 -65.9235C-38.1298 -79.6601 -60.5009 -79.6601 -74.2375 -65.9235C-87.9741 -52.1869 -87.9741 -29.8158 -74.2375 -16.0792C-68.1149 -9.95664 -48.2557 5.50686 -26.7481 19.7144C-51.6309 14.6908 -76.2783 11.6295 -84.7558 11.6295C-104.223 11.6295 -120 27.4069 -120 46.8737C-120 66.3404 -104.223 82.1179 -84.7558 82.1179C-76.5138 82.1179 -53.2008 79.2921 -29.1814 74.5039C-49.2761 88.005 -67.4084 102.213 -73.1385 107.943C-86.8752 121.679 -86.8752 144.05 -73.1385 157.787C-59.4019 171.524 -37.0309 171.524 -23.2943 157.787C-17.6427 152.135 -3.90605 134.631 9.35959 115.007C4.96387 138.006 2.29505 159.828 2.29505 167.756C2.29505 187.223 18.0725 203 37.5392 203C57.006 203 72.7835 187.223 72.7835 167.756C72.7835 159.592 69.9577 136.672 65.3264 112.888C78.8276 132.983 93.0352 151.115 98.7653 156.845C112.502 170.582 134.873 170.582 148.61 156.845C162.346 143.108 162.346 120.737 148.61 107.001C143.036 101.428 126.003 88.0835 106.772 74.9748C129.849 79.4491 151.828 82.0394 159.756 82.0394C179.223 82.0394 195 66.2619 195 46.7952C195 27.3284 179.144 11.708 159.677 11.708Z", fill: "#D6336C" }));
    SvgImageCardDesktop4 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 224, height: 187, viewBox: "0 0 224 187", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("circle", { cx: 68.5, cy: 31.5, r: 155.5, fill: "#F59F00" }));
    ForWhom = () => {
      const {
        isMobile
      } = usePageContext();
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { title: "\u041A\u043E\u043C\u0443 ", filledText: "\u043F\u043E\u0434\u0445\u043E\u0434\u0438\u0442?", children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Flex, { className: s24.cards, children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(ForWhomCard, { bg: isMobile ? /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCard1, {}) : /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCardDesktop1, {}), title: "\u0421\u0442\u0443\u0434\u0435\u043D\u0442\u0430\u043C \u0438\xA0\u043C\u043E\u043B\u043E\u0434\u044B\u043C \u0441\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442\u0430\u043C", image: "/landing/image-card/1", text: "\u041E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u0435, \u043A\u0430\u043A\u0438\u0435 \u0441\u0444\u0435\u0440\u044B \u0434\u0435\u044F\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u0438 \u0431\u043E\u043B\u044C\u0448\u0435 \u0432\u0441\u0435\u0433\u043E \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u0432\u0430\u0448\u0435\u043C\u0443 \u043F\u0441\u0438\u0445\u043E\u043B\u043E\u0433\u0438\u0447\u0435\u0441\u043A\u043E\u043C\u0443 \u043F\u0440\u043E\u0444\u0438\u043B\u044E, \u0447\u0442\u043E\u0431\u044B\n                \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u044E \u0438 \u043F\u043E\u043D\u044F\u0442\u044C, \u043A\u0430\u043A\u0438\u0435 \u043D\u0430\u0432\u044B\u043A\u0438 \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044C \u0432 \u043F\u0435\u0440\u0432\u0443\u044E \u043E\u0447\u0435\u0440\u0435\u0434\u044C." }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(ForWhomCard, { bg: isMobile ? /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCard2, {}) : /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCardDesktop2, {}), title: "\u0422\u0432\u043E\u0440\u0447\u0435\u0441\u043A\u0438\u043C \u043B\u044E\u0434\u044F\u043C", image: "/landing/image-card/2", text: "\u041D\u0430\u0439\u0434\u0438\u0442\u0435 \u0431\u0430\u043B\u0430\u043D\u0441 \u043C\u0435\u0436\u0434\u0443 \u0432\u0434\u043E\u0445\u043D\u043E\u0432\u0435\u043D\u0438\u0435\u043C \u0438 \u043F\u0440\u0430\u043A\u0442\u0438\u043A\u043E\u0439, \u0440\u0430\u0441\u043A\u0440\u043E\u0439\u0442\u0435 \u0441\u0432\u043E\u0439 \u043F\u043E\u0442\u0435\u043D\u0446\u0438\u0430\u043B, \u043D\u0430\u0443\u0447\u0438\u0442\u0435\u0441\u044C \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u0435\u0435 \u0432\u0437\u0430\u0438\u043C\u043E\u0434\u0435\u0439\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u0441 \u043A\u043E\u043C\u0430\u043D\u0434\u043E\u0439, \u0443\u043F\u0440\u0430\u0432\u043B\u044F\u0442\u044C \u043A\u0440\u0435\u0430\u0442\u0438\u0432\u043D\u044B\u043C\u0438 \u043F\u043E\u0440\u044B\u0432\u0430\u043C\u0438 \u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0442\u044C \u0441\u0442\u0430\u0431\u0438\u043B\u044C\u043D\u0443\u044E \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C." }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(ForWhomCard, { bg: isMobile ? /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCard3, {}) : /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCardDesktop3, {}), title: `\u041F\u0430\u0440\u0442\u043D\u0435\u0440\u0430\u043C \u0432\xA0\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u044F\u0445`, image: "/landing/image-card/3", text: "\u0423\u0437\u043D\u0430\u0439\u0442\u0435, \u043A\u0430\u043A \u043E\u0441\u043E\u0431\u0435\u043D\u043D\u043E\u0441\u0442\u0438 \u0432\u0430\u0448\u0435\u0433\u043E \u0442\u0438\u043F\u0430 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 \u0432\u043B\u0438\u044F\u044E\u0442 \u043D\u0430 \u0432\u0437\u0430\u0438\u043C\u043E\u043F\u043E\u043D\u0438\u043C\u0430\u043D\u0438\u0435 \u0441 \u043F\u0430\u0440\u0442\u043D\u0451\u0440\u043E\u043C \u0438 \u0434\u0440\u0443\u0433\u0438\u043C\u0438 \u0442\u0438\u043F\u0430\u043C\u0438.\n\n \u0423\u0437\u043D\u0430\u0439\u0442\u0435, \u043A\u0430\u043A \u0432\u044B\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044C \u0433\u0430\u0440\u043C\u043E\u043D\u0438\u0447\u043D\u043E\u0435 \u043E\u0431\u0449\u0435\u043D\u0438\u0435 \u0438 \u0441\u043E\u0432\u043C\u0435\u0441\u0442\u043D\u043E \u0440\u0435\u0448\u0430\u0442\u044C \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B \u0434\u043B\u044F \u0443\u043A\u0440\u0435\u043F\u043B\u0435\u043D\u0438\u044F \u0434\u043E\u0432\u0435\u0440\u0438\u044F \u0438 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438." }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(ForWhomCard, { bg: isMobile ? /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCard4, {}) : /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImageCardDesktop4, {}), title: "\u041B\u044E\u0434\u044F\u043C, \u0441\u0442\u0440\u0435\u043C\u044F\u0449\u0438\u043C\u0441\u044F \u043A\xA0\u0441\u0430\u043C\u043E\u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044E", image: "/landing/image-card/4", text: "\u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u0438\u043D\u0441\u0442\u0440\u0443\u043C\u0435\u043D\u0442\u044B \u0434\u043B\u044F \u043E\u0441\u043E\u0437\u043D\u0430\u043D\u043D\u043E\u0433\u043E \u0440\u0430\u0441\u043A\u0440\u044B\u0442\u0438\u044F \u0441\u0438\u043B\u044C\u043D\u044B\u0445 \u0441\u0442\u043E\u0440\u043E\u043D, \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043D\u043E\u0432\u044B\u0445 \u043F\u0440\u0438\u0432\u044B\u0447\u0435\u043A \u0438 \u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u044D\u043C\u043E\u0446\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u043C \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435\u043C.\n\n \u0423\u0437\u043D\u0430\u0439\u0442\u0435, \u043A\u0430\u043A \u0441\u0442\u0430\u0432\u0438\u0442\u044C \u043C\u043E\u0442\u0438\u0432\u0438\u0440\u0443\u044E\u0449\u0438\u0435 \u0446\u0435\u043B\u0438, \u043F\u0440\u0435\u043E\u0434\u043E\u043B\u0435\u0432\u0430\u0442\u044C \u0432\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u0438\u0435 \u0431\u0430\u0440\u044C\u0435\u0440\u044B \u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u044C\u0441\u044F \u043A \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u043D\u043E\u043C\u0443 \u0440\u043E\u0441\u0442\u0443." })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Center, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { size: isMobile ? "md" : "xl", fullWidth: true, maw: 706, component: "a", href: "/test", children: "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" }) })
      ] });
    };
    SvgImage1 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 176, height: 198, viewBox: "0 0 176 198", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M5.78058 0H176V196.236C168.464 197.398 160.748 198 152.894 198C68.4529 198 0 128.38 0 42.5C0 27.7648 2.0152 13.5083 5.78058 0Z", fill: "#6741D9" }));
    SvgImage2 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 187, height: 244, viewBox: "0 0 187 244", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M80.8139 0C65.0655 50.2848 35.5318 87.4139 0 99C45.6767 113.894 81.4411 170.999 90.7506 244C97.3811 191.971 117.473 148.023 145 121.642C162.537 138.449 177.057 162.36 187 190.972V6.99852C177.057 35.6132 162.537 59.5506 145 76.3584C126.046 58.1923 110.616 31.7291 100.68 0H80.8139Z", fill: "#82C91E" }));
    SvgImage3 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 161, height: 223, viewBox: "0 0 161 223", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M53.5929 0C48.0772 27.5388 28.7296 51.778 0 62C46.332 78.4849 68.2634 131.425 47.1308 175.869C91.5746 154.737 144.515 176.668 161 223L161 0H53.5929Z", fill: "#D6336C" }));
    SvgImage4 = (props) => /* @__PURE__ */ React7.createElement("svg", { width: 176, height: 198, viewBox: "0 0 176 198", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, /* @__PURE__ */ React7.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M5.78058 0H176V196.236C168.464 197.398 160.748 198 152.894 198C68.4529 198 0 128.38 0 42.5C0 27.7648 2.0152 13.5083 5.78058 0Z", fill: "#F59F00" }));
    CARDS$1 = [{
      id: 0,
      bg: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImage1, {}),
      title: "\u041F\u043E\u043D\u0438\u043C\u0430\u043D\u0438\u0435 \u0441\u0435\u0431\u044F",
      text: "\u0422\u0435\u0441\u0442 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u0433\u043B\u0443\u0431\u0436\u0435 \u0443\u0437\u043D\u0430\u0442\u044C \u0441\u0432\u043E\u0438 \u0441\u0438\u043B\u044C\u043D\u044B\u0435 \u0441\u0442\u043E\u0440\u043E\u043D\u044B, \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u044B \u0438 \u0441\u043F\u043E\u0441\u043E\u0431\u044B \u0432\u0437\u0430\u0438\u043C\u043E\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0441 \u043E\u043A\u0440\u0443\u0436\u0430\u044E\u0449\u0438\u043C\u0438.\n\n \u041F\u043E\u043D\u0438\u043C\u0430\u043D\u0438\u0435 \u0442\u043E\u0433\u043E, \u043F\u043E\u0447\u0435\u043C\u0443 \u0432\u044B \u043F\u0440\u0438\u043D\u0438\u043C\u0430\u0435\u0442\u0435 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0451\u043D\u043D\u044B\u0435 \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u0438 \u043A\u0430\u043A \u0440\u0435\u0430\u0433\u0438\u0440\u0443\u0435\u0442\u0435 \u043D\u0430 \u0441\u0442\u0440\u0435\u0441\u0441, \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C \u043E\u043F\u0442\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u0435 \u0443\u0441\u043B\u043E\u0432\u0438\u044F \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0438 \u043E\u0431\u0449\u0435\u043D\u0438\u044F."
    }, {
      id: 1,
      bg: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImage2, {}),
      title: "\u0423\u043B\u0443\u0447\u0448\u0435\u043D\u0438\u0435 \u043A\u043E\u043C\u043C\u0443\u043D\u0438\u043A\u0430\u0446\u0438\u0438",
      text: "\u0417\u043D\u0430\u043D\u0438\u0435 \u0441\u0432\u043E\u0435\u0433\u043E \u0442\u0438\u043F\u0430 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 \u0438 \u043E\u0441\u043E\u0431\u0435\u043D\u043D\u043E\u0441\u0442\u0435\u0439 \u0434\u0440\u0443\u0433\u0438\u0445 \u043B\u044E\u0434\u0435\u0439 \u0443\u043B\u0443\u0447\u0448\u0430\u0435\u0442 \u043E\u0431\u0449\u0435\u043D\u0438\u0435.\n\n\u041F\u043E\u043D\u0438\u043C\u0430\u043D\u0438\u0435 \u0440\u0430\u0437\u043B\u0438\u0447\u0438\u0439 \u0432 \u0432\u043E\u0441\u043F\u0440\u0438\u044F\u0442\u0438\u0438 \u0438 \u043F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u0438 \u043E\u0431\u043B\u0435\u0433\u0447\u0430\u0435\u0442 \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u0430 \u0441 \u043A\u043E\u043B\u043B\u0435\u0433\u0430\u043C\u0438, \u0434\u0440\u0443\u0437\u044C\u044F\u043C\u0438 \u0438 \u0431\u043B\u0438\u0437\u043A\u0438\u043C\u0438, \u043F\u043E\u043C\u043E\u0433\u0430\u044F \u0431\u044B\u0441\u0442\u0440\u0435\u0435 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u044C \u043E\u0431\u0449\u0438\u0439 \u044F\u0437\u044B\u043A \u0438 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044C \u043A\u043E\u043D\u0444\u043B\u0438\u043A\u0442\u043E\u0432."
    }, {
      id: 2,
      bg: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImage3, {}),
      title: "\u041F\u0440\u0438\u043D\u044F\u0442\u0438\u0435 \u043E\u0441\u043E\u0437\u043D\u0430\u043D\u043D\u044B\u0445 \u043A\u0430\u0440\u044C\u0435\u0440\u043D\u044B\u0445 \u0440\u0435\u0448\u0435\u043D\u0438\u0439",
      text: "\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B \u0442\u0435\u0441\u0442\u0430 \u043F\u043E\u043C\u043E\u0433\u0430\u044E\u0442 \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u044E \u0438\u043B\u0438 \u0441\u0444\u0435\u0440\u0443 \u0434\u0435\u044F\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u0438, \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0443\u044E \u043F\u0440\u0438\u0440\u043E\u0434\u043D\u044B\u043C \u0441\u043A\u043B\u043E\u043D\u043D\u043E\u0441\u0442\u044F\u043C \u0438 \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u0430\u043C. \n\n\u042D\u0442\u043E \u043F\u043E\u0432\u044B\u0448\u0430\u0435\u0442 \u0448\u0430\u043D\u0441\u044B \u043D\u0430 \u0443\u0441\u043F\u0435\u0445 \u0438 \u0443\u0434\u043E\u0432\u043B\u0435\u0442\u0432\u043E\u0440\u0435\u043D\u0438\u0435 \u043E\u0442 \u0440\u0430\u0431\u043E\u0442\u044B, \u0434\u0435\u043B\u0430\u044F \u0435\u0451 \u043F\u0440\u0438\u044F\u0442\u043D\u043E\u0439 \u0438 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0435\u0439 \u0432\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u0438\u043C \u043F\u0440\u0435\u0434\u043F\u043E\u0447\u0442\u0435\u043D\u0438\u044F\u043C."
    }, {
      id: 3,
      bg: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgImage4, {}),
      title: "\u0423\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u0435\u0441\u0441\u043E\u043C \u0438 \u0432\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u0438\u043C \u0431\u0430\u043B\u0430\u043D\u0441\u043E\u043C",
      text: "\u0412 \u043E\u0442\u0447\u0451\u0442\u0435 \u0432\u044B \u0442\u0430\u043A\u0436\u0435 \u043D\u0430\u0439\u0434\u0451\u0442\u0435 \u0441\u043E\u0432\u0435\u0442\u044B \u043F\u043E \u0442\u043E\u043C\u0443, \u043A\u0430\u043A \u043B\u0443\u0447\u0448\u0435 \u0441\u043F\u0440\u0430\u0432\u043B\u044F\u0442\u044C\u0441\u044F \u0441\u043E \u0441\u0442\u0440\u0435\u0441\u0441\u043E\u0432\u044B\u043C\u0438 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044F\u043C\u0438, \u0443\u0447\u0438\u0442\u044B\u0432\u0430\u044F \u0432\u0430\u0448\u0438 \u043F\u0441\u0438\u0445\u043E\u043B\u043E\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043E\u0441\u043E\u0431\u0435\u043D\u043D\u043E\u0441\u0442\u0438.\n\n\u042D\u0442\u043E \u043F\u043E\u0437\u0432\u043E\u043B\u0438\u0442 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044C \u0441\u0442\u0430\u0431\u0438\u043B\u044C\u043D\u044B\u0439 \u044D\u043C\u043E\u0446\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0444\u043E\u043D, \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0442\u044C \u044D\u043D\u0435\u0440\u0433\u0438\u044E \u0438 \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u0435\u0435 \u0434\u043E\u0441\u0442\u0438\u0433\u0430\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u043D\u044B\u0445 \u0446\u0435\u043B\u0435\u0439."
    }];
    HowItHelps = () => {
      const container5 = (0, import_react217.useRef)(null);
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Section2, { title: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(import_jsx_runtime137.Fragment, { children: [
        "\u041A\u0430\u043A \u0442\u0435\u0441\u0442 ",
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("span", { style: {
          color: "var(--mantine-color-violet-7)"
        }, children: "\u043F\u043E\u043C\u043E\u0436\u0435\u0442 \u0432\u0430\u043C?" })
      ] }), children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Stack, { ref: container5, className: s26.stack, children: CARDS$1.map((card3, i11) => /* @__PURE__ */ (0, import_react217.createElement)(HowItHelpsCard, { ...card3, key: card3.id, i: i11 })) }) });
    };
    FREE_TARIFF = [{
      title: "\u041A\u0440\u0430\u0442\u043A\u0438\u0439 MBTI-\u043F\u0440\u043E\u0444\u0438\u043B\u044C: ",
      description: "\u043F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u0431\u0430\u0437\u043E\u0432\u043E\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043E \u0442\u0438\u043F\u0430 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 \u043F\u043E \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0430\u043C \u0442\u0435\u0441\u0442\u0430."
    }, {
      title: "\u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0441\u0438\u043B\u044C\u043D\u044B\u0435 \u0438 \u0441\u043B\u0430\u0431\u044B\u0435 \u0441\u0442\u043E\u0440\u043E\u043D\u044B: ",
      description: "\u043E\u0431\u0437\u043E\u0440 \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0445 \u043F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432 \u0438 \u0437\u043E\u043D \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F \u0431\u0435\u0437 \u0434\u0435\u0442\u0430\u043B\u044C\u043D\u043E\u0439 \u0430\u043D\u0430\u043B\u0438\u0442\u0438\u043A\u0438."
    }, {
      title: "\u0420\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438 \u043F\u043E \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044E \u0431\u0430\u0437\u043E\u0432\u044B\u0445 \u0444\u0443\u043D\u043A\u0446\u0438\u0439: ",
      description: "\u0443\u0437\u043D\u0430\u0439\u0442\u0435, \u043A\u0430\u043A\u0438\u0435 \u043D\u0430\u0432\u044B\u043A\u0438 \u0438 \u043F\u0440\u0438\u0432\u044B\u0447\u043A\u0438 \u043F\u043E\u043C\u043E\u0433\u0443\u0442 \u0432\u0430\u043C \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043F\u0435\u0440\u0432\u044B\u0439 \u0448\u0430\u0433 \u043A \u0441\u0431\u0430\u043B\u0430\u043D\u0441\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u043E\u043C\u0443 \u0440\u043E\u0441\u0442\u0443."
    }, {
      title: "\u0411\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u0430\u044F \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430: ",
      description: "\u043E\u0446\u0435\u043D\u0438\u0442\u0435 \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u0438 \u0443\u0434\u043E\u0431\u0441\u0442\u0432\u043E \u043E\u0442\u0447\u0451\u0442\u0430, \u043F\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043C \u0440\u0435\u0448\u0430\u0442\u044C, \u043D\u0443\u0436\u0435\u043D \u043B\u0438 \u0432\u0430\u043C \u0431\u043E\u043B\u0435\u0435 \u0433\u043B\u0443\u0431\u043E\u043A\u0438\u0439 \u0440\u0430\u0437\u0431\u043E\u0440."
    }];
    FULL_TARIFF = [{
      title: "\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u044B\u0439 MBTI-\u0430\u043D\u0430\u043B\u0438\u0437: ",
      description: "\u0432\u0441\u0435 \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u0441\u0435\u043A\u0446\u0438\u0438 \u043E\u0442\u0447\u0451\u0442\u0430, \u0432\u043A\u043B\u044E\u0447\u0430\u044F \u0432\u0430\u0448 \u043F\u0441\u0438\u0445\u043E\u043B\u043E\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u043F\u043E\u0440\u0442\u0440\u0435\u0442, \u0441\u0438\u043B\u044C\u043D\u044B\u0435 \u0438 \u0441\u043B\u0430\u0431\u044B\u0435 \u0441\u0442\u043E\u0440\u043E\u043D\u044B, \u0441\u0442\u0440\u0435\u0441\u0441-\u0444\u0430\u043A\u0442\u043E\u0440\u044B \u0438 \u043E\u0441\u043E\u0431\u0435\u043D\u043D\u043E\u0441\u0442\u0438\n\u043F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u044F."
    }, {
      title: "\u041F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0435 \u043A\u0430\u0440\u044C\u0435\u0440\u043D\u044B\u0435 \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438:  ",
      description: "\u043F\u043E\u0434\u0431\u043E\u0440 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u0439 \u0438 \u043D\u0430\u0432\u044B\u043A\u043E\u0432 \u0441 \u0443\u0447\u0451\u0442\u043E\u043C \u0432\u0430\u0448\u0438\u0445 \u043A\u043E\u043D\u043A\u0440\u0435\u0442\u043D\u044B\u0445 \u043E\u0442\u0432\u0435\u0442\u043E\u0432."
    }, {
      title: "\u041B\u0438\u0447\u043D\u044B\u0439 \u043F\u043B\u0430\u043D \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044F:  ",
      description: "\u0447\u0451\u0442\u043A\u0438\u0435 \u0448\u0430\u0433\u0438 \u0438 \u0438\u043D\u0441\u0442\u0440\u0443\u043C\u0435\u043D\u0442\u044B \u0434\u043B\u044F \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0438\n\u043B\u0438\u0447\u043D\u043E\u0441\u0442\u043D\u043E\u0433\u043E \u0440\u043E\u0441\u0442\u0430."
    }, {
      title: "\u0414\u0435\u0442\u0430\u043B\u044C\u043D\u044B\u0439 \u0430\u043D\u0430\u043B\u0438\u0437 \u0441\u043E\u0432\u043C\u0435\u0441\u0442\u0438\u043C\u043E\u0441\u0442\u0438: ",
      description: "\u0441\u043E\u0432\u0435\u0442\u044B \u043F\u043E \u0432\u0437\u0430\u0438\u043C\u043E\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044E \u0441 \u0434\u0440\u0443\u0433\u0438\u043C\u0438 \u0442\u0438\u043F\u0430\u043C\u0438, \u0432\u043A\u043B\u044E\u0447\u0430\u044F \u0433\u0430\u0440\u043C\u043E\u043D\u0438\u0447\u043D\u043E\u0435 \u043E\u0431\u0449\u0435\u043D\u0438\u0435 \u0432 \u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u044F\u0445 \u0438 \u043D\u0430 \u0440\u0430\u0431\u043E\u0442\u0435."
    }];
    EXPRESS_TARIFF = [{
      title: "\u0413\u043E\u0442\u043E\u0432\u044B\u0439 \u043E\u0442\u0447\u0451\u0442 \u0431\u0435\u0437 \u043F\u0440\u043E\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u044F \u0442\u0435\u0441\u0442\u0430: ",
      description: "\u0441\u0440\u0430\u0437\u0443 \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043D\u0443\u0436\u043D\u044B\u0439 \u0442\u0438\u043F \u0438 \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u0434\u0435\u0442\u0430\u043B\u044C\u043D\u044B\u0439 \u043E\u0442\u0447\u0451\u0442"
    }, {
      title: "\u0411\u044B\u0441\u0442\u0440\u044B\u0439 \u0434\u043E\u0441\u0442\u0443\u043F:  ",
      description: "\u044D\u043A\u043E\u043D\u043E\u043C\u0438\u044F \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u0438 \u043C\u0438\u043D\u0438\u043C\u0443\u043C \u0443\u0441\u0438\u043B\u0438\u0439 \u2014 \u043E\u0442\u0447\u0451\u0442 \u0444\u043E\u0440\u043C\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u043C\u043E\u043C\u0435\u043D\u0442\u0430\u043B\u044C\u043D\u043E."
    }, {
      title: "\u0421\u043E\u0432\u0435\u0442\u044B \u043F\u043E \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044E:  ",
      description: "\u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438 \u0438 \u043A\u0430\u0440\u044C\u0435\u0440\u043D\u044B\u0435 \u043F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0438, \u043F\u043E\u0434\u0445\u043E\u0434\u044F\u0449\u0438\u0435 \u0431\u043E\u043B\u044C\u0448\u0438\u043D\u0441\u0442\u0432\u0443 \u043B\u044E\u0434\u0435\u0439 \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u0438\u043F\u0430."
    }, {
      title: "\u0423\u043D\u0438\u0432\u0435\u0440\u0441\u0430\u043B\u044C\u043D\u044B\u0435 \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438 \u043F\u043E \u0432\u0437\u0430\u0438\u043C\u043E\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044E: ",
      description: "\u0441\u043E\u0432\u0435\u0442\u044B \u043F\u043E \u043E\u0431\u0449\u0435\u043D\u0438\u044E \u0441 \u0434\u0440\u0443\u0433\u0438\u043C\u0438 \u0442\u0438\u043F\u0430\u043C\u0438, \u0431\u0435\u0437 \u0443\u0447\u0451\u0442\u0430 \u0432\u0430\u0448\u0438\u0445 \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u044B\u0445 \u043E\u0442\u0432\u0435\u0442\u043E\u0432."
    }];
    SvgUnion$1 = (props) => /* @__PURE__ */ React7.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 229 209", ...props }, /* @__PURE__ */ React7.createElement("path", { fill: "var(--mantine-color-pink-6)", fillRule: "evenodd", d: "M114.322 33.445C69.1 2.94 26.308-8.87 8.646 7.15c-17.66 16.018-5.069 55.218 27.958 96.781-33.384 41.338-46.31 80.457-28.782 96.601 17.529 16.143 60.425 4.63 105.907-25.564 45.227 30.511 88.026 42.325 105.689 26.304 17.664-16.021 5.066-55.228-27.971-96.798 33.374-41.331 46.294-80.441 28.768-96.583-17.526-16.142-60.416-4.633-105.893 25.554Z", clipRule: "evenodd" }));
    Tariffs = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { id: "tariffs", filledText: "\u0422\u0430\u0440\u0438\u0444\u044B", children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgUnion$1, { width: 228, height: 208, className: s28.union }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Flex, { className: s28.flex, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(TariffCard, { title: "\u0411\u0430\u0437\u043E\u0432\u044B\u0439", price: "\u0411\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u043E", features: FREE_TARIFF, description: "\u0414\u043B\u044F \u0442\u0435\u0445, \u043A\u0442\u043E \u0445\u043E\u0447\u0435\u0442 \u0431\u044B\u0441\u0442\u0440\u043E \u043F\u043E\u0437\u043D\u0430\u043A\u043E\u043C\u0438\u0442\u044C\u0441\u044F \u0441 \u043D\u0430\u0448\u0435\u0439 \u043F\u043B\u0430\u0442\u0444\u043E\u0440\u043C\u043E\u0439 \u0438 \u043C\u0435\u0442\u043E\u0434\u0438\u043A\u043E\u0439 MBTI" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(TariffCard, { isFull: true, price: 990, title: "\u041F\u043E\u043B\u043D\u044B\u0439", features: FULL_TARIFF, description: "\u0414\u043B\u044F \u0442\u0435\u0445, \u043A\u0442\u043E \u0445\u043E\u0447\u0435\u0442 \u0434\u0435\u0442\u0430\u043B\u044C\u043D\u044B\u0439 \u0430\u043D\u0430\u043B\u0438\u0437, \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u044B\u0435 \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438 \u0438 \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u043F\u043B\u0430\u043D \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439." }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(TariffCard, { buyNow: true, price: 890, title: "\u042D\u043A\u0441\u043F\u0440\u0435\u0441\u0441", features: EXPRESS_TARIFF, description: "\u0414\u043B\u044F \u0442\u0435\u0445, \u043A\u0442\u043E \u0443\u0436\u0435 \u0437\u043D\u0430\u0435\u0442 \u0441\u0432\u043E\u0439 MBTI-\u0442\u0438\u043F (\u0438\u043B\u0438 \u043F\u0440\u0435\u0434\u043F\u043E\u043B\u0430\u0433\u0430\u0435\u0442) \u0438 \u0445\u043E\u0447\u0435\u0442 \u043C\u0433\u043D\u043E\u0432\u0435\u043D\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u043E\u0431\u0449\u0438\u0439 \u043E\u0442\u0447\u0451\u0442." })
      ] })
    ] });
    FLOW_STEPS = [{
      id: 0,
      label: "\u041F\u0440\u043E\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u0435 \u0442\u0435\u0441\u0442\u0430",
      description: "\u041F\u0440\u043E\u0439\u0434\u0438\u0442\u0435 \u0442\u0435\u0441\u0442, \u0447\u0435\u0441\u0442\u043D\u043E \u043E\u0442\u0432\u0435\u0447\u0430\u044F \u043D\u0430 \u0432\u043E\u043F\u0440\u043E\u0441\u044B \u043E \u0432\u0430\u0448\u0438\u0445 \u043F\u0440\u0435\u0434\u043F\u043E\u0447\u0442\u0435\u043D\u0438\u044F\u0445 \u0438 \u0441\u043A\u043B\u043E\u043D\u043D\u043E\u0441\u0442\u044F\u0445. \u041D\u0430 \u044D\u0442\u043E\u043C \u044D\u0442\u0430\u043F\u0435 \u0444\u043E\u0440\u043C\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u043E\u0441\u043D\u043E\u0432\u0430 \u0434\u043B\u044F \u0442\u043E\u0447\u043D\u043E\u0433\u043E \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0432\u0430\u0448\u0435\u0433\u043E MBTI-\u0442\u0438\u043F\u0430"
    }, {
      id: 1,
      label: "\u0410\u043D\u0430\u043B\u0438\u0437 \u043E\u0442\u0432\u0435\u0442\u043E\u0432",
      description: "\u041D\u0430\u0448\u0438 \u0430\u043B\u0433\u043E\u0440\u0438\u0442\u043C\u044B \u0441\u043E\u0432\u043C\u0435\u0449\u0430\u044E\u0442 \u043C\u0435\u0442\u043E\u0434\u044B MBTI \u0438 \u0438\u0441\u043A\u0443\u0441\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0439 \u0438\u043D\u0442\u0435\u043B\u043B\u0435\u043A\u0442 \u0434\u043B\u044F \u0433\u043B\u0443\u0431\u043E\u043A\u043E\u0439 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0434\u0430\u043D\u043D\u044B\u0445. \u042D\u0442\u043E \u043F\u043E\u0437\u0432\u043E\u043B\u044F\u0435\u0442 \u0443\u0447\u0435\u0441\u0442\u044C \u043D\u044E\u0430\u043D\u0441\u044B \u0438 \u0441\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0442\u043E\u0447\u043D\u044B\u0439 \u043F\u0441\u0438\u0445\u043E\u043B\u043E\u0433\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u043F\u0440\u043E\u0444\u0438\u043B\u044C"
    }, {
      id: 2,
      label: "\u041E\u0442\u0447\u0451\u0442 \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F",
      description: "\u041F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 \u0434\u0435\u0442\u0430\u043B\u044C\u043D\u044B\u0439 \u043E\u0442\u0447\u0451\u0442 \u0441 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435\u043C \u0432\u0430\u0448\u0435\u0433\u043E \u0442\u0438\u043F\u0430 \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438 \u0438 \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u043C\u0438 \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u044F\u043C\u0438. \u041F\u0440\u0438\u043C\u0435\u043D\u044F\u0439\u0442\u0435 \u0438\u0445 \u043D\u0430 \u043F\u0440\u0430\u043A\u0442\u0438\u043A\u0435, \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0439\u0442\u0435 \u043F\u0440\u043E\u0433\u0440\u0435\u0441\u0441 \u0438 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0439 \u043F\u0443\u0442\u044C"
    }];
    One = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 50 50", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("path", { fill: "#fff", d: "M35.113 37.741v3.275H17.21V37.74h7.5V15.14c-.283.422-.758.88-1.427 1.373a14.45 14.45 0 0 1-2.323 1.373c-.845.422-1.69.774-2.535 1.056-.845.282-1.62.423-2.324.423v-3.486c.81 0 1.69-.229 2.64-.686a21.32 21.32 0 0 0 2.747-1.585c.88-.598 1.62-1.162 2.218-1.69.598-.528.933-.88 1.003-1.056h3.697v26.88h6.707Z" }) });
    Two = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 50 50", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("path", { fill: "#fff", d: "M14.233 38.672c0-1.094.096-2.188.29-3.282a11.934 11.934 0 0 1 1.11-3.33c.546-1.093 1.35-2.139 2.412-3.136 1.062-1.03 2.461-1.995 4.198-2.895.933-.483 1.899-.95 2.896-1.4.997-.483 1.93-.997 2.799-1.544.9-.58 1.608-1.223 2.123-1.93.547-.74.82-1.61.82-2.606 0-.805-.24-1.593-.723-2.365-.45-.772-1.159-1.4-2.124-1.882-.933-.483-2.107-.724-3.522-.724-1.03 0-1.963.145-2.8.434-.836.29-1.576.66-2.22 1.11a10.08 10.08 0 0 0-1.64 1.303c-.45.418-.82.772-1.11 1.062l-2.075-2.268c.16-.193.515-.531 1.062-1.013.579-.515 1.303-1.046 2.171-1.593.901-.547 1.947-1.013 3.137-1.4 1.223-.385 2.558-.579 4.005-.579 1.963 0 3.636.354 5.02 1.062 1.415.676 2.492 1.593 3.232 2.75a6.86 6.86 0 0 1 1.11 3.765c0 1.319-.29 2.46-.868 3.426a8.742 8.742 0 0 1-2.172 2.461 19.148 19.148 0 0 1-2.75 1.786c-.934.482-1.786.9-2.558 1.254-1.512.708-2.783 1.416-3.813 2.124-1.03.707-1.85 1.431-2.46 2.171-.612.708-1.095 1.416-1.448 2.124a8.167 8.167 0 0 0-.676 2.123h17.276v2.992H14.233Z" }) });
    Three = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 50 50", children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("path", { fill: "#9775FA", d: "M50 25c0 13.807-11.193 25-25 25S0 38.807 0 25 11.193 0 25 0s25 11.193 25 25Z" }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("path", { fill: "#fff", d: "M28.44 24.067c1.36.212 2.523.695 3.49 1.45a7.805 7.805 0 0 1 2.267 2.857c.544 1.148.816 2.448.816 3.898 0 1.814-.438 3.415-1.315 4.806-.876 1.39-2.1 2.463-3.672 3.218-1.571.756-3.4 1.133-5.485 1.133-2.297 0-4.306-.468-6.03-1.405-1.722-.907-3.021-2.176-3.898-3.808l2.13-1.949c.666 1.3 1.648 2.342 2.948 3.128 1.299.816 2.916 1.224 4.85 1.224 2.236 0 4.005-.56 5.304-1.677 1.33-1.088 1.995-2.66 1.995-4.715 0-2.055-.695-3.687-2.086-4.896-1.36-1.239-3.309-1.858-5.848-1.858h-1.133v-2.63h1.224c2.327 0 4.11-.544 5.35-1.632 1.238-1.088 1.858-2.478 1.858-4.17 0-1.24-.287-2.267-.861-3.083-.575-.816-1.36-1.435-2.358-1.859-.967-.423-2.085-.634-3.354-.634-1.723 0-3.25.393-4.579 1.178a7.297 7.297 0 0 0-2.946 3.174l-1.995-1.904c.514-1.058 1.254-1.98 2.221-2.766.967-.785 2.1-1.39 3.4-1.813 1.3-.453 2.69-.68 4.17-.68 1.875 0 3.522.348 4.942 1.043 1.42.665 2.539 1.602 3.355 2.81.816 1.21 1.224 2.63 1.224 4.262 0 1.209-.242 2.327-.726 3.354a6.932 6.932 0 0 1-2.085 2.584c-.877.695-1.934 1.149-3.173 1.36Z" })
    ] });
    Decor = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 355 363", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("path", { fill: "#5F3DC4", fillRule: "evenodd", d: "M354.286 0C305.636 172.838 171.286 309.779 0 362.059V0h354.286Z", clipRule: "evenodd" }) });
    icons = [/* @__PURE__ */ (0, import_jsx_runtime137.jsx)(One, {}, "one"), /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Two, {}, "two"), /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Three, {}, "three")];
    HowItWorks = () => {
      const {
        isMobile
      } = usePageContext();
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Paper, { className: s29.wrapper, radius: 40, component: "section", children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Decor, {}),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { className: s29.title, order: 2, children: "\u041A\u0430\u043A \u044D\u0442\u043E \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442?" }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Flex, { className: s29.flex, gap: "md", children: FLOW_STEPS.map((step, idx) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Paper, { className: s29.paper, children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { className: s29.number, children: icons[idx] }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { className: s29.cardTitle, order: 4, children: step.label }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s29.cardText, children: step.description })
        ] }, step.id)) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Center, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { maw: 706, fullWidth: true, href: "/test", component: "a", variant: "white", size: isMobile ? "md" : "xl", children: "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" }) })
      ] });
    };
    CARDS = [{
      id: 0,
      color: "lime.8",
      title: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0435\nAI-\u0438\u043D\u0441\u0430\u0439\u0442\u044B",
      description: "\u0418\u0441\u043A\u0443\u0441\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0439 \u0438\u043D\u0442\u0435\u043B\u043B\u0435\u043A\u0442 \u0430\u043D\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u043E\u043D\u043A\u0438\u0435 \u0434\u0435\u0442\u0430\u043B\u0438, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u043E\u0431\u044B\u0447\u043D\u044B\u0435 \u043E\u043F\u0440\u043E\u0441\u044B \u043D\u0435 \u0443\u0447\u0438\u0442\u044B\u0432\u0430\u044E\u0442, \u0441\u043E\u0437\u0434\u0430\u0432\u0430\u044F \u0433\u043B\u0443\u0431\u043E\u043A\u043E \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u043F\u0440\u043E\u0444\u0438\u043B\u044C \u0438 \u043F\u043E\u0432\u044B\u0448\u0430\u044F \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0439.",
      content: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: "/landing/why-us/ENFJ" })
    }, {
      id: 1,
      color: "violet.7",
      title: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043D\u043D\u0430\u044F \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C",
      description: "\u0422\u044B\u0441\u044F\u0447\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439 \u0443\u0436\u0435 \u043E\u0442\u043C\u0435\u0442\u0438\u043B\u0438 \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u043E\u0442\u0447\u0451\u0442\u043E\u0432 \u0438 \u0440\u043E\u0441\u0442 \u043B\u0438\u0447\u043D\u043E\u0439 \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438. \u041F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u0430\u044F \u043E\u0431\u0440\u0430\u0442\u043D\u0430\u044F \u0441\u0432\u044F\u0437\u044C \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u0442 \u043D\u0430\u043C \u0441\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u043F\u0440\u043E\u0434\u0443\u043A\u0442 \u0438 \u0433\u0430\u0440\u0430\u043D\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u044B\u0441\u043E\u043A\u043E\u0435 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u043E \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432.",
      content: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: "/landing/why-us/ENTJ" })
    }, {
      id: 2,
      color: "pink.7",
      title: "\u041F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u043E\u0435 \u0441\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0441\u0442\u0432\u043E\u0432\u0430\u043D\u0438\u0435",
      description: "\u041C\u044B \u043E\u043F\u0438\u0440\u0430\u0435\u043C\u0441\u044F \u043D\u0430 \u043F\u0440\u043E\u0432\u0435\u0440\u0435\u043D\u043D\u044B\u0435 \u0438\u0441\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u043D\u0438\u044F, \u043E\u0442\u0437\u044B\u0432\u044B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439 \u0438 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0435 \u0434\u043E\u0441\u0442\u0438\u0436\u0435\u043D\u0438\u044F \u043F\u043E\u0432\u0435\u0434\u0435\u043D\u0447\u0435\u0441\u043A\u043E\u0439 \u043D\u0430\u0443\u043A\u0438. \u041D\u0430\u0448 \u0442\u0435\u0441\u0442 \u043D\u0435\u043F\u0440\u0435\u0440\u044B\u0432\u043D\u043E \u043E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u0442\u0441\u044F, \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u044F \u0441\u0432\u043E\u044E \u0430\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u0438 \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C.",
      content: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: "/landing/why-us/ESTP" })
    }];
    WhyUs = () => {
      const {
        isMobile
      } = usePageContext();
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { className: s31.root, containerClassName: s31.container, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { order: 2, className: s31.title, ta: "center", children: [
          "\u041F\u043E\u0447\u0435\u043C\u0443 \u0441\u0442\u043E\u0438\u0442 \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0432\xA0",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { span: true, c: "violet", children: "CognitiveLab?" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { className: s31.content, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(StickyScrollReveal, { contentClassName: s31.images, titleClassName: s31.cardTitle, descriptionClassName: s31.cardDescription, content: CARDS }) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { size: isMobile ? "md" : "xl", fullWidth: true, maw: 604, component: "a", href: "/test", children: "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" })
      ] });
    };
    ReviewModel = atom(() => {
      const $allReviews = g([], {
        name: "$allReviews",
        sid: "-fitf2s"
      });
      return {
        $allReviews
      };
    });
    getReviewsQuery = we({
      sid: "-juon18",
      fn: () => Or({
        effect: createCommonRequestFx((params) => ({
          url: API.surveys.comments,
          params: params ?? {}
        }))
      }),
      name: "getReviewsQuery",
      method: "createQuery"
    });
    PeopleTalkModel = atom(() => {
      const $currentReview = g(null, {
        name: "$currentReview",
        sid: "-r3ynw"
      });
      const currentReviewSettled = p2({
        name: "currentReviewSettled",
        sid: "-utio9p"
      });
      M({
        and: [{
          clock: currentReviewSettled,
          fn: (review) => ({
            ...review,
            created_at: review.created_at.includes(".") ? review.created_at : new Date(review.created_at).toLocaleDateString()
          }),
          target: $currentReview
        }],
        or: {
          sid: "-uzz121"
        }
      });
      const $isCarouselActive = g(true, {
        name: "$isCarouselActive",
        sid: "-jdqn76"
      });
      const carouselActiveStateSettled = p2({
        name: "carouselActiveStateSettled",
        sid: "i2r7ze"
      });
      M({
        and: [{
          clock: carouselActiveStateSettled,
          target: $isCarouselActive
        }],
        or: {
          sid: "-uha0vr"
        }
      });
      const $isModalOpened = g(false, {
        name: "$isModalOpened",
        sid: "yskqwb"
      });
      const modalActiveStateSettled = p2({
        name: "modalActiveStateSettled",
        sid: "m4pid5"
      });
      M({
        and: [{
          clock: modalActiveStateSettled,
          target: $isModalOpened
        }],
        or: {
          sid: "-u1vs9n"
        }
      });
      return {
        $currentReview,
        currentReviewSettled,
        $isCarouselActive,
        carouselActiveStateSettled,
        $isModalOpened,
        modalActiveStateSettled
      };
    });
    Desktop = () => {
      const {
        isMobile
      } = usePageContext();
      const [opened, setIsActive, currentReview, close] = c2([PeopleTalkModel.$isModalOpened, PeopleTalkModel.carouselActiveStateSettled, PeopleTalkModel.$currentReview, PeopleTalkModel.modalActiveStateSettled]);
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Modal, { size: "lg", centered: true, opened: !isMobile && opened, onClose: () => {
        close(false);
        setIsActive(true);
      }, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(import_jsx_runtime137.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Group, { px: 40, justify: "space-between", align: "flex-start", gap: "md", wrap: "nowrap", children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Rating, { size: !isMobile ? "lg" : "md", readOnly: true, defaultValue: currentReview == null ? void 0 : currentReview.overall_rate, mb: "xs", fractions: 4 }),
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { mb: "xxs", className: s32.name, children: currentReview == null ? void 0 : currentReview.name }),
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s32.label, children: currentReview == null ? void 0 : currentReview.mbti_type })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: `/types/circles/${currentReview == null ? void 0 : currentReview.mbti_type}`, className: s32.image, w: 100, h: 100 })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { pb: 40, px: 40, className: s32.reviewText, children: currentReview == null ? void 0 : currentReview.text }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { px: 40, fz: 24, c: "dark.2", mt: "auto", children: currentReview == null ? void 0 : currentReview.created_at })
      ] }) });
    };
    Mobile = () => {
      const {
        isMobile
      } = usePageContext();
      const [opened, setIsActive, currentReview, close] = c2([PeopleTalkModel.$isModalOpened, PeopleTalkModel.carouselActiveStateSettled, PeopleTalkModel.$currentReview, PeopleTalkModel.modalActiveStateSettled]);
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Drawer, { className: s32.drawer, position: "bottom", opened: isMobile && opened, onClose: () => {
        close(false);
        setIsActive(true);
      }, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(import_jsx_runtime137.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Group, { justify: "space-between", align: "flex-start", gap: "md", wrap: "nowrap", children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Rating, { size: !isMobile ? "lg" : "md", readOnly: true, defaultValue: currentReview == null ? void 0 : currentReview.overall_rate, mb: "xs", fractions: 4 }),
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { mb: "xxs", className: s32.name, children: currentReview == null ? void 0 : currentReview.name }),
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s32.label, children: currentReview == null ? void 0 : currentReview.mbti_type })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: `/types/circles/${currentReview == null ? void 0 : currentReview.mbti_type}`, className: s32.image, w: 60, h: 60 })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s32.reviewText, children: currentReview == null ? void 0 : currentReview.text }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { fz: 18, c: "dark.2", mt: "auto", children: currentReview == null ? void 0 : currentReview.created_at })
      ] }) });
    };
    PeopleTalk = () => {
      const [reviews] = c2([ReviewModel.$allReviews]);
      const [isActive, setIsActive, setCurrentReview, open] = c2([PeopleTalkModel.$isCarouselActive, PeopleTalkModel.carouselActiveStateSettled, PeopleTalkModel.currentReviewSettled, PeopleTalkModel.modalActiveStateSettled]);
      const autoplay = (0, import_react217.useRef)(AutoScroll({
        playOnInit: true,
        startDelay: 200,
        stopOnMouseEnter: true,
        active: isActive,
        stopOnInteraction: true,
        speed: 0.5
      }));
      const wheel = (0, import_react217.useRef)((0, import_embla_carousel_wheel_gestures.WheelGesturesPlugin)({}));
      const {
        isMobile
      } = usePageContext();
      const allReviewsList = reviews.length > 5 ? reviews : [...reviews, ...reviews, ...reviews];
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { containerClassName: s32.container, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { className: s32.title, children: [
          "\u0427\u0442\u043E \u043E \u043D\u0430\u0441\xA0",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("span", { children: "\u0433\u043E\u0432\u043E\u0440\u044F\u0442?" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Carousel, { loop: true, slideGap: "lg", withControls: false, plugins: [autoplay.current, wheel.current], slideSize: isMobile ? "70%" : 624, onMouseLeave: () => isActive && autoplay.current.play(), onPointerLeave: () => isActive && autoplay.current.play(), onPointerEnter: () => autoplay.current.stop(), children: allReviewsList.map((review, index) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Carousel.Slide, { className: s32.slide, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Paper, { component: "button", display: "flex", w: "100%", ta: "left", style: {
          flexDirection: "column"
        }, onClick: () => {
          setCurrentReview(review);
          open(true);
          setIsActive(false);
        }, withBorder: true, className: s32.paper, children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Group, { w: "100%", justify: "space-between", align: "flex-start", gap: "md", wrap: "nowrap", children: [
            /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Box, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Rating, { size: isMobile ? "md" : "lg", readOnly: true, defaultValue: review.overall_rate, mb: "xs", fractions: 4 }),
              /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { mb: "xxs", className: s32.name, children: review.name }),
              /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s32.label, children: review.mbti_type })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Picture, { src: `/types/circles/${review.mbti_type}`, className: s32.image })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { mb: "xs", lineClamp: isMobile ? 8 : 6, className: s32.reviewText, children: review.text }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { className: s32.reviewText, c: "dark.2", mt: "auto", children: review.created_at })
        ] }) }, index)) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Mobile, {}),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Desktop, {})
      ] });
    };
    getFAQQuery = we({
      sid: "nqw9kt",
      fn: () => Or({
        effect: createCommonRequestFx((params) => ({
          url: API.faq.list,
          params: {
            post_type: "faq",
            ...params
          }
        })),
        initialData: {}
      }),
      name: "getFAQQuery",
      method: "createQuery"
    });
    we({
      sid: "-hhz2ow",
      fn: () => Vr(getFAQQuery),
      name: "none",
      method: "cache"
    });
    FaqModel = atom(() => {
      const $faqItems = A(getFAQQuery.finished.success.map(({
        result
      }) => result.payload), [], {
        name: "$faqItems",
        sid: "-f1wks5"
      });
      return {
        $faqItems
      };
    });
    SvgUnion = (props) => /* @__PURE__ */ React7.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 229 209", ...props }, /* @__PURE__ */ React7.createElement("path", { fill: "#74B816", fillRule: "evenodd", d: "M114.322 33.445C69.1 2.94 26.308-8.87 8.646 7.15c-17.66 16.018-5.069 55.218 27.958 96.781-33.384 41.338-46.31 80.457-28.782 96.601 17.529 16.143 60.425 4.63 105.907-25.564 45.227 30.511 88.026 42.325 105.689 26.304 17.664-16.021 5.066-55.228-27.971-96.798 33.374-41.331 46.294-80.441 28.768-96.583-17.526-16.142-60.416-4.633-105.893 25.554Z", clipRule: "evenodd" }));
    FAQ = () => {
      const items3 = i(FaqModel.$faqItems.map((el) => el.slice(0, 3)), (item3) => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Accordion.Item, { value: item3.title, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Accordion.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { order: 5, className: s34.accordionLabel, fw: "bold", children: item3.title }) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Accordion.Panel, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(index_module_default, { children: item3.body.data }) })
      ] }));
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { className: s34.section, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { className: s34.mainTitle, order: 2, children: [
          "\u0427\u0430\u0441\u0442\u043E \u0437\u0430\u0434\u0430\u0432\u0430\u0435\u043C\u044B\u0435",
          " ",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("a", { href: "/faq", children: [
            "\u0432\u043E\u043F\u0440\u043E\u0441\u044B ",
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(l3, { weight: "bold" })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Accordion, { variant: "filled", classNames: s34, chevron: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(C3, { weight: "bold", size: 24 }), children: items3 }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgUnion, { width: 228, height: 208, className: s34.union })
      ] });
    };
    getBlogPostsQuery = we({
      sid: "8wrxdv",
      fn: () => Or({
        initialData: {},
        effect: createCommonRequestFx((params) => ({
          url: API.blog.posts,
          params: {
            post_type: "post",
            page_size: Number(params.page_size),
            ...params
          }
        })),
        mapData: (data) => {
          var _a;
          if (!data.result) return {};
          const payload = (_a = data.result) == null ? void 0 : _a.payload.toSorted((a12, b4) => Number(b4.pinned) - Number(a12.pinned));
          return {
            ...data.result,
            payload
          };
        }
      }),
      name: "getBlogPostsQuery",
      method: "createQuery"
    });
    getAllBlogPostsQuery = we({
      sid: "-1szoee",
      fn: () => Or({
        initialData: {},
        effect: createCommonRequestFx((params) => ({
          url: API.blog.posts,
          params: {
            post_type: "post",
            page_size: Number(params.page_size),
            show_on_main: true,
            ...params
          }
        })),
        mapData: (data) => {
          var _a;
          if (!data.result) return {};
          const payload = (_a = data.result) == null ? void 0 : _a.payload.toSorted((a12, b4) => Number(b4.pinned) - Number(a12.pinned)).map((data2) => ({
            ...data2,
            updated_at: new Date(data2.updated_at).toLocaleDateString("ru-RU")
          }));
          return {
            ...data.result,
            payload
          };
        }
      }),
      name: "getAllBlogPostsQuery",
      method: "createQuery"
    });
    we({
      sid: "-ck1tj0",
      fn: () => Or({
        effect: createCommonRequestFx((id5) => ({
          url: API.blog.postById(id5)
        }))
      }),
      name: "getBlogPostByIdQuery",
      method: "createQuery"
    });
    we({
      sid: "r1uq9s",
      fn: () => Vr(getBlogPostsQuery),
      name: "none",
      method: "cache"
    });
    MoreInBlog = () => {
      var _a;
      const {
        isMobile
      } = usePageContext();
      const {
        data
      } = c2(getAllBlogPostsQuery);
      const autoplay = (0, import_react217.useRef)(AutoScroll({
        playOnInit: true,
        startDelay: 200,
        stopOnMouseEnter: true,
        stopOnInteraction: true,
        active: true,
        speed: 0.5,
        direction: "backward"
      }));
      const wheel = (0, import_react217.useRef)((0, import_embla_carousel_wheel_gestures.WheelGesturesPlugin)({}));
      const currentBlogPosts = ((_a = data.payload) == null ? void 0 : _a.length) > 5 ? data.payload : [...data.payload ?? [], ...data.payload ?? [], ...data.payload ?? []];
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Section2, { hidden: !currentBlogPosts.length, containerClassName: s35.container, children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { className: s35.mainTitle, order: 2, children: [
          "\u0423\u0437\u043D\u0430\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 ",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("br", {}),
          "\u0432\xA0",
          /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("a", { href: "/blog", children: [
            "\u0431\u043B\u043E\u0433\u0435 ",
            /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(l3, {})
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Carousel, { loop: true, slideGap: "lg", withControls: false, plugins: [autoplay.current, wheel.current], slideSize: isMobile ? "70%" : 466, onMouseLeave: () => {
          var _a2, _b;
          return (_b = (_a2 = autoplay == null ? void 0 : autoplay.current) == null ? void 0 : _a2.play) == null ? void 0 : _b.call(_a2);
        }, onPointerLeave: () => {
          var _a2, _b;
          return (_b = (_a2 = autoplay == null ? void 0 : autoplay.current) == null ? void 0 : _a2.play) == null ? void 0 : _b.call(_a2);
        }, onPointerEnter: () => {
          var _a2, _b;
          return (_b = (_a2 = autoplay == null ? void 0 : autoplay.current) == null ? void 0 : _a2.stop) == null ? void 0 : _b.call(_a2);
        }, children: currentBlogPosts.map((post, index) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Carousel.Slide, { h: "unset", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Paper, { h: "100%", component: "a", href: `/blog/${post.id}`, withBorder: true, className: s35.paper, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Stack, { justify: "space-between", align: "flex-start", gap: "md", children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Image, { src: post.image, className: s35.image, width: 304, height: 304 }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Title, { order: 5, className: s35.cardTitle, children: post.title }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { c: "dark.2", children: post.updated_at }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { mah: 150, style: {
            overflow: "hidden"
          }, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(index_module_default, { options: {
            overrides: {
              p: (props) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Text, { ...props, mah: 150, style: {
                overflow: "hidden"
              }, className: s35.blogText, lineClamp: 6 }),
              a: (props) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(import_jsx_runtime137.Fragment, { children: props.children }),
              blockquote: (props) => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Blockquote, { mah: 150, py: 0, style: {
                overflow: "hidden"
              }, mb: "md", px: "md", color: `violet.9`, bg: "transparent", icon: null, children: props.children })
            }
          }, children: post.body.data }) })
        ] }) }) }, index)) })
      ] });
    };
    LetsContinue = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Box, { component: "section", className: s36.root, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Container, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Center, { className: s36.logo, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(SvgCognitiveLogo, {}) }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(Title, { className: s36.title, order: 2, children: [
        "\u0413\u043E\u0442\u043E\u0432\u044B \u0443\u0437\u043D\u0430\u0442\u044C \u0432\u0430\u0448 ",
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)("span", { children: "\u0442\u0438\u043F \u043B\u0438\u0447\u043D\u043E\u0441\u0442\u0438?" })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Center, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Button, { className: "mantine-button-rainbow", href: "/test", component: "a", children: "\u041F\u0440\u043E\u0439\u0442\u0438 \u0442\u0435\u0441\u0442" }) })
    ] }) });
    IndexPage = () => /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)(import_jsx_runtime137.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Hero, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(About, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Statistics, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(ForWhom, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(HowItHelps, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(Tariffs, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(HowItWorks, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(WhyUs, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(PeopleTalk, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(FAQ, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(MoreInBlog, {}),
      /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(LetsContinue, {})
    ] });
    import3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Page
    }, Symbol.toStringTag, { value: "Module" }));
    createPageInit = () => p2({
      name: "createPageInit",
      sid: "-1l190a"
    });
    pageInitiated = createPageInit();
    M({
      and: [{
        clock: pageInitiated,
        target: [getMainPageInfoQuery.refresh, getReviewsQuery.refresh]
      }],
      or: {
        sid: "oja7sy"
      }
    });
    M({
      and: [{
        clock: pageInitiated,
        fn: () => ({
          page_size: 100
        }),
        target: getAllBlogPostsQuery.refresh
      }],
      or: {
        sid: "om16rr"
      }
    });
    M({
      and: [{
        clock: pageInitiated,
        fn: () => ({
          show_on_main: true
        }),
        target: getFAQQuery.refresh
      }],
      or: {
        sid: "p1z7z8"
      }
    });
    M({
      and: [{
        clock: getReviewsQuery.finished.success,
        fn: ({
          result
        }) => ({
          page_size: result.total_count
        }),
        target: getReviewsQuery.refresh
      }],
      or: {
        sid: "phx96p"
      }
    });
    M({
      and: [{
        clock: getReviewsQuery.finished.success,
        fn: ({
          result
        }) => result.payload.map((data) => ({
          ...data,
          created_at: new Date(data.created_at).toLocaleDateString("ru-RU")
        })),
        target: ReviewModel.$allReviews
      }],
      or: {
        sid: "pxvae6"
      }
    });
    import8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      pageInitiated
    }, Symbol.toStringTag, { value: "Module" }));
    configValuesSerialized = {
      ["isClientRuntimeLoaded"]: {
        type: "computed",
        definedAtData: null,
        valueSerialized: {
          type: "js-serialized",
          value: true
        }
      },
      ["onRenderHtml"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "vike-react/__internal/integration/onRenderHtml", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "pointer-import",
          value: onRenderHtml
        }
      },
      ["onBeforeRender"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+onBeforeRender.ts", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "plus-file",
          exportValues: import2
        }
      },
      ["Page"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/index/+Page.tsx", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "plus-file",
          exportValues: import3
        }
      },
      ["passToClient"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "passToClient"] }, { "filePathToShowToUser": "vike-react/config", "fileExportPathToShowToUser": ["default", "passToClient"] }],
        valueSerialized: [{
          type: "js-serialized",
          value: ["scopeValues", "device", "isMobile"]
        }, {
          type: "js-serialized",
          value: ["_configFromHook", "$$typeof"]
        }]
      },
      ["cacheControl"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "cacheControl"] },
        valueSerialized: {
          type: "js-serialized",
          value: "public, max-age=604800"
        }
      },
      ["Head"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/src/widgets/HeadDefault/index.tsx", "fileExportPathToShowToUser": ["HeadDefault"] }],
        valueSerialized: [{
          type: "pointer-import",
          value: HeadDefault
        }]
      },
      ["Layout"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/src/widgets/RootLayout/index.tsx", "fileExportPathToShowToUser": ["RootLayout"] }],
        valueSerialized: [{
          type: "pointer-import",
          value: RootLayout
        }]
      },
      ["title"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "title"] },
        valueSerialized: {
          type: "js-serialized",
          value: "Cognitive Lab"
        }
      },
      ["lang"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "lang"] },
        valueSerialized: {
          type: "js-serialized",
          value: "ru"
        }
      },
      ["Wrapper"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/pages/+Wrapper.tsx", "fileExportPathToShowToUser": [] }],
        valueSerialized: [{
          type: "plus-file",
          exportValues: import6
        }]
      },
      ["reactStrictMode"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "reactStrictMode"] },
        valueSerialized: {
          type: "js-serialized",
          value: false
        }
      },
      ["Loading"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "vike-react/__internal/integration/Loading", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "pointer-import",
          value: Loading_default
        }
      },
      ["pageInitiated"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/index/+pageInitiated.ts", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "plus-file",
          exportValues: import8
        }
      }
    };
  }
});

// dist/server/entries/pages_test.mjs
var pages_test_exports = {};
__export(pages_test_exports, {
  configValuesSerialized: () => configValuesSerialized2
});
function Page2() {
  return /* @__PURE__ */ (0, import_jsx_runtime138.jsx)(import_jsx_runtime138.Fragment, { children: "Test Page" });
}
var import_jsx_runtime138, import_react219, import32, configValuesSerialized2;
var init_pages_test = __esm({
  "dist/server/entries/pages_test.mjs"() {
    "use strict";
    init_onRenderHtml();
    init_chunk_DeA7MPa2();
    import_jsx_runtime138 = __toESM(require_jsx_runtime(), 1);
    init_Loading();
    init_clsx();
    import_react219 = __toESM(require_react(), 1);
    init_esm5();
    init_core();
    init_chunk_Dy3LQdoT();
    init_chunk_DLmw_jEj();
    init_chunk_Bxs9cBFL();
    init_chunk_BmkqR2v();
    init_chunk_BDst9g7C();
    init_chunk_BxoQfonb();
    init_chunk_WsihrUVn();
    init_usePageContext();
    import32 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Page2
    }, Symbol.toStringTag, { value: "Module" }));
    configValuesSerialized2 = {
      ["isClientRuntimeLoaded"]: {
        type: "computed",
        definedAtData: null,
        valueSerialized: {
          type: "js-serialized",
          value: true
        }
      },
      ["onRenderHtml"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "vike-react/__internal/integration/onRenderHtml", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "pointer-import",
          value: onRenderHtml
        }
      },
      ["onBeforeRender"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+onBeforeRender.ts", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "plus-file",
          exportValues: import2
        }
      },
      ["Page"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/test/+Page.tsx", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "plus-file",
          exportValues: import32
        }
      },
      ["passToClient"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "passToClient"] }, { "filePathToShowToUser": "vike-react/config", "fileExportPathToShowToUser": ["default", "passToClient"] }],
        valueSerialized: [{
          type: "js-serialized",
          value: ["scopeValues", "device", "isMobile"]
        }, {
          type: "js-serialized",
          value: ["_configFromHook", "$$typeof"]
        }]
      },
      ["cacheControl"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "cacheControl"] },
        valueSerialized: {
          type: "js-serialized",
          value: "public, max-age=604800"
        }
      },
      ["Head"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/src/widgets/HeadDefault/index.tsx", "fileExportPathToShowToUser": ["HeadDefault"] }],
        valueSerialized: [{
          type: "pointer-import",
          value: HeadDefault
        }]
      },
      ["Layout"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/src/widgets/RootLayout/index.tsx", "fileExportPathToShowToUser": ["RootLayout"] }],
        valueSerialized: [{
          type: "pointer-import",
          value: RootLayout
        }]
      },
      ["title"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "title"] },
        valueSerialized: {
          type: "js-serialized",
          value: "Cognitive Lab"
        }
      },
      ["lang"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "lang"] },
        valueSerialized: {
          type: "js-serialized",
          value: "ru"
        }
      },
      ["Wrapper"]: {
        type: "cumulative",
        definedAtData: [{ "filePathToShowToUser": "/pages/+Wrapper.tsx", "fileExportPathToShowToUser": [] }],
        valueSerialized: [{
          type: "plus-file",
          exportValues: import6
        }]
      },
      ["reactStrictMode"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "/pages/+config.ts", "fileExportPathToShowToUser": ["default", "reactStrictMode"] },
        valueSerialized: {
          type: "js-serialized",
          value: false
        }
      },
      ["Loading"]: {
        type: "standard",
        definedAtData: { "filePathToShowToUser": "vike-react/__internal/integration/Loading", "fileExportPathToShowToUser": [] },
        valueSerialized: {
          type: "pointer-import",
          value: Loading_default
        }
      }
    };
  }
});

// dist/server/entry.mjs
var entry_exports = {};
var pageFilesLazy, pageFilesEager, pageFilesExportNamesLazy, pageFilesExportNamesEager, pageFilesList, neverLoaded, pageConfigsSerialized, pageConfigGlobalSerialized, pageFilesLazyIsomorph1, pageFilesLazyIsomorph, pageFilesLazyServer1, pageFilesLazyServer, pageFilesEagerRoute1, pageFilesEagerRoute, pageFilesExportNamesEagerClient1, pageFilesExportNamesEagerClient, virtualFileExports;
var init_entry = __esm({
  "dist/server/entry.mjs"() {
    "use strict";
    init_internal();
    pageFilesLazy = {};
    pageFilesEager = {};
    pageFilesExportNamesLazy = {};
    pageFilesExportNamesEager = {};
    pageFilesList = [];
    neverLoaded = {};
    pageConfigsSerialized = [
      {
        pageId: "/pages/index",
        isErrorPage: void 0,
        routeFilesystem: { "routeString": "/", "definedAtLocation": "/pages/index/" },
        loadConfigValuesAll: () => ({ moduleId: "virtual:vike:pageConfigValuesAll:server:/pages/index", moduleExports: Promise.resolve().then(() => (init_pages_index(), pages_index_exports)) }),
        configValuesSerialized: {
          ["isClientRuntimeLoaded"]: {
            type: "computed",
            definedAtData: null,
            valueSerialized: {
              type: "js-serialized",
              value: true
            }
          },
          ["clientRouting"]: {
            type: "standard",
            definedAtData: { "filePathToShowToUser": "vike-react/config", "fileExportPathToShowToUser": ["default", "clientRouting"] },
            valueSerialized: {
              type: "js-serialized",
              value: true
            }
          }
        }
      },
      {
        pageId: "/pages/test",
        isErrorPage: void 0,
        routeFilesystem: { "routeString": "/test", "definedAtLocation": "/pages/test/" },
        loadConfigValuesAll: () => ({ moduleId: "virtual:vike:pageConfigValuesAll:server:/pages/test", moduleExports: Promise.resolve().then(() => (init_pages_test(), pages_test_exports)) }),
        configValuesSerialized: {
          ["isClientRuntimeLoaded"]: {
            type: "computed",
            definedAtData: null,
            valueSerialized: {
              type: "js-serialized",
              value: true
            }
          },
          ["clientRouting"]: {
            type: "standard",
            definedAtData: { "filePathToShowToUser": "vike-react/config", "fileExportPathToShowToUser": ["default", "clientRouting"] },
            valueSerialized: {
              type: "js-serialized",
              value: true
            }
          }
        }
      }
    ];
    pageConfigGlobalSerialized = {
      configValuesSerialized: {}
    };
    pageFilesLazyIsomorph1 = /* @__PURE__ */ Object.assign({});
    pageFilesLazyIsomorph = { ...pageFilesLazyIsomorph1 };
    pageFilesLazy[".page"] = pageFilesLazyIsomorph;
    pageFilesLazyServer1 = /* @__PURE__ */ Object.assign({});
    pageFilesLazyServer = { ...pageFilesLazyServer1 };
    pageFilesLazy[".page.server"] = pageFilesLazyServer;
    pageFilesEagerRoute1 = /* @__PURE__ */ Object.assign({});
    pageFilesEagerRoute = { ...pageFilesEagerRoute1 };
    pageFilesEager[".page.route"] = pageFilesEagerRoute;
    pageFilesExportNamesEagerClient1 = /* @__PURE__ */ Object.assign({});
    pageFilesExportNamesEagerClient = { ...pageFilesExportNamesEagerClient1 };
    pageFilesExportNamesEager[".page.client"] = pageFilesExportNamesEagerClient;
    virtualFileExports = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      neverLoaded,
      pageConfigGlobalSerialized,
      pageConfigsSerialized,
      pageFilesEager,
      pageFilesExportNamesEager,
      pageFilesExportNamesLazy,
      pageFilesLazy,
      pageFilesList
    }, Symbol.toStringTag, { value: "Module" }));
    {
      const assetsManifest = {
        "_chunk--Zd04aop.js": {
          "file": "assets/chunks/chunk--Zd04aop.js",
          "name": "src_pages_IndexPage_ui_Hero_Hero.module-aa2bde3d",
          "css": [
            "assets/static/src_pages_IndexPage_ui_Hero_Hero.BaJ6IuhF.css"
          ]
        },
        "_chunk-65guFjvV.js": {
          "file": "assets/chunks/chunk-65guFjvV.js",
          "name": "src_pages_IndexPage_ui_Tariffs_Tafiffs.module-d40ba9cc",
          "css": [
            "assets/static/src_pages_IndexPage_ui_Tariffs_Tafiffs.C7VAMT2N.css"
          ]
        },
        "_chunk-B1W2AE3s.js": {
          "file": "assets/chunks/chunk-B1W2AE3s.js",
          "name": "src_shared_ui_Picture_Picture.module-694db37f",
          "css": [
            "assets/static/src_shared_ui_Picture_Picture.CMCuYSLW.css"
          ]
        },
        "_chunk-B9aj60V7.js": {
          "file": "assets/chunks/chunk-B9aj60V7.js",
          "name": "src_widgets_RootLayout_ui_List_List.module-e81ef9c0",
          "css": [
            "assets/static/src_widgets_RootLayout_ui_List_List.rzI4jrUR.css"
          ]
        },
        "_chunk-B9riZoTN.js": {
          "file": "assets/chunks/chunk-B9riZoTN.js",
          "name": "src_pages_IndexPage_ui_HowItHelps_HowItHelps.module-01f3d292",
          "css": [
            "assets/static/src_pages_IndexPage_ui_HowItHelps_HowItHelps.hBJW4jfx.css"
          ]
        },
        "_chunk-BBap9ybz.js": {
          "file": "assets/chunks/chunk-BBap9ybz.js",
          "name": "src_shared_ui_StickyScrollReveal_StickyScrollReveal.module-380c96e6",
          "css": [
            "assets/static/src_shared_ui_StickyScrollReveal_StickyScrollReveal.BnoiLhfu.css"
          ]
        },
        "_chunk-BEbw_0AC.js": {
          "file": "assets/chunks/chunk-BEbw_0AC.js",
          "name": "Loading",
          "imports": [
            "_chunk-Bs9liB0q.js",
            "_chunk-DRY9zkUH.js",
            "_chunk-B9aj60V7.js",
            "_chunk-BFxkgyTb.js",
            "_chunk-Bxk40HBS.js",
            "_chunk-BYlX3Wk_.js",
            "_chunk-Ctd1kwdX.js",
            "_chunk-FjVmaxdv.js"
          ],
          "css": [
            "assets/static/vike-react-50ee1291.BcWtY8Ol.css",
            "assets/static/src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css",
            "assets/static/src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css"
          ],
          "assets": [
            "assets/static/raleway-v34-cyrillic_latin-regular.B2J1s-V4.woff2",
            "assets/static/raleway-v34-cyrillic_latin-500.CgpFJeFS.woff2",
            "assets/static/raleway-v34-cyrillic_latin-600.DRu2qh9T.woff2",
            "assets/static/raleway-v34-cyrillic_latin-700.CV4g2AhU.woff2",
            "assets/static/raleway-v34-cyrillic_latin-800.C2UAHJem.woff2"
          ]
        },
        "_chunk-BFxkgyTb.js": {
          "file": "assets/chunks/chunk-BFxkgyTb.js",
          "name": "src_widgets_RootLayout_ui_Metainfo_MetaInfo.module-eec991b5",
          "css": [
            "assets/static/src_widgets_RootLayout_ui_Metainfo_MetaInfo.BNYHSklj.css"
          ]
        },
        "_chunk-BMc1H3Un.js": {
          "file": "assets/chunks/chunk-BMc1H3Un.js",
          "name": "src_entities_Landing_ui_StatisticsCard_StatisticsCard.module-5d13c976",
          "css": [
            "assets/static/src_entities_Landing_ui_StatisticsCard_StatisticsCard.hEuy2PaI.css"
          ]
        },
        "_chunk-BSo9L9IG.js": {
          "file": "assets/chunks/chunk-BSo9L9IG.js",
          "name": "src_shared_ui_SpinningText_SpinningText.module-0b9c1213",
          "css": [
            "assets/static/src_shared_ui_SpinningText_SpinningText.DqhQpHd_.css"
          ]
        },
        "_chunk-BVNA5XK5.js": {
          "file": "assets/chunks/chunk-BVNA5XK5.js",
          "name": "src_pages_IndexPage_ui_WhyUs_WhyUs.module-11031c43",
          "css": [
            "assets/static/src_pages_IndexPage_ui_WhyUs_WhyUs.DaF6s1rj.css"
          ]
        },
        "_chunk-BYlX3Wk_.js": {
          "file": "assets/chunks/chunk-BYlX3Wk_.js",
          "name": "src_widgets_RootLayout_ui_Top_Top.module-572de12f",
          "css": [
            "assets/static/src_widgets_RootLayout_ui_Top_Top.WxISOpgS.css"
          ]
        },
        "_chunk-Bs9liB0q.js": {
          "file": "assets/chunks/chunk-Bs9liB0q.js",
          "name": "executeHook"
        },
        "_chunk-BvUYN6Yk.js": {
          "file": "assets/chunks/chunk-BvUYN6Yk.js",
          "name": "src_pages_IndexPage_ui_HowItWorks_HowItWorks.module-3c798adc",
          "css": [
            "assets/static/src_pages_IndexPage_ui_HowItWorks_HowItWorks.vvwRUcpZ.css"
          ]
        },
        "_chunk-Bxk40HBS.js": {
          "file": "assets/chunks/chunk-Bxk40HBS.js",
          "name": "src_widgets_RootLayout_ui_Section_Section.module-07559090",
          "css": [
            "assets/static/src_widgets_RootLayout_ui_Section_Section.CsVR1-Ac.css"
          ]
        },
        "_chunk-CNsID_Tc.js": {
          "file": "assets/chunks/chunk-CNsID_Tc.js",
          "name": "src_pages_IndexPage_ui_ForWhom_ForWhom.module-88eda7a1",
          "css": [
            "assets/static/src_pages_IndexPage_ui_ForWhom_ForWhom.5DVDJB81.css"
          ]
        },
        "_chunk-CTdPKw3K.js": {
          "file": "assets/chunks/chunk-CTdPKw3K.js",
          "name": "src_pages_IndexPage_ui_FAQ_FAQ.module-937e2981",
          "css": [
            "assets/static/src_pages_IndexPage_ui_FAQ_FAQ.D__PwItM.css"
          ]
        },
        "_chunk-CUokj3a9.js": {
          "file": "assets/chunks/chunk-CUokj3a9.js",
          "name": "src_pages_IndexPage_ui_LetsContinue_LetsContinue.module-27891a34",
          "css": [
            "assets/static/src_pages_IndexPage_ui_LetsContinue_LetsContinue.BZv0n0iO.css"
          ]
        },
        "_chunk-CXo5F32q.js": {
          "file": "assets/chunks/chunk-CXo5F32q.js",
          "name": "src_pages_IndexPage_ui_Statistics_Statistics.module-e8f3e4f2",
          "css": [
            "assets/static/src_pages_IndexPage_ui_Statistics_Statistics.CsAjEHfs.css"
          ]
        },
        "_chunk-CcR76USu.js": {
          "file": "assets/chunks/chunk-CcR76USu.js",
          "name": "src_shared_ui_Section_Section.module-2cd35348",
          "css": [
            "assets/static/src_shared_ui_Section_Section.oc1Wry6T.css"
          ]
        },
        "_chunk-ClJ7o3j-.js": {
          "file": "assets/chunks/chunk-ClJ7o3j-.js",
          "name": "src_entities_Landing_ui_HowItHelpsCard_HowItHelpsCard.module-6d677eab",
          "css": [
            "assets/static/src_entities_Landing_ui_HowItHelpsCard_HowItHelpsCard.Do3ma9QG.css"
          ]
        },
        "_chunk-Ctd1kwdX.js": {
          "file": "assets/chunks/chunk-Ctd1kwdX.js",
          "name": "src_widgets_RootLayout_ui_Footer_Footer.module-1af6fa7a",
          "css": [
            "assets/static/src_widgets_RootLayout_ui_Footer_Footer.BHnFDixU.css"
          ]
        },
        "_chunk-CwTP6ZND.js": {
          "file": "assets/chunks/chunk-CwTP6ZND.js",
          "name": "src_pages_IndexPage_ui_MoreInBlog_MoreInBlog.module-7b74e75c",
          "css": [
            "assets/static/src_pages_IndexPage_ui_MoreInBlog_MoreInBlog.DqcPZpXe.css"
          ]
        },
        "_chunk-DRY9zkUH.js": {
          "file": "assets/chunks/chunk-DRY9zkUH.js",
          "name": "src_features_SubscribeToNews_ui_SubscribeToNews.module-b3272973",
          "css": [
            "assets/static/src_features_SubscribeToNews_ui_SubscribeToNews.5gcOGBuJ.css"
          ]
        },
        "_chunk-DhL4uBru.js": {
          "file": "assets/chunks/chunk-DhL4uBru.js",
          "name": "src_pages_IndexPage_ui_About_About.module-a08f2abd",
          "css": [
            "assets/static/src_pages_IndexPage_ui_About_About.vs3fDfNg.css"
          ]
        },
        "_chunk-DlYS-ihZ.js": {
          "file": "assets/chunks/chunk-DlYS-ihZ.js",
          "name": "src_entities_Landing_ui_TariffCard_TariffCard.module-f5ac351d",
          "css": [
            "assets/static/src_entities_Landing_ui_TariffCard_TariffCard.c-4HbZak.css"
          ]
        },
        "_chunk-FgL5gaKZ.js": {
          "file": "assets/chunks/chunk-FgL5gaKZ.js",
          "name": "src_pages_IndexPage_ui_PeopleTalk_PeopleTalk.module-58a0d6eb",
          "css": [
            "assets/static/src_pages_IndexPage_ui_PeopleTalk_PeopleTalk.BgZEyIQS.css"
          ]
        },
        "_chunk-FjVmaxdv.js": {
          "file": "assets/chunks/chunk-FjVmaxdv.js",
          "name": "src_widgets_RootLayout_RootLayout.module-eccb6268",
          "css": [
            "assets/static/src_widgets_RootLayout_RootLayout.BBl8SsGq.css"
          ]
        },
        "_chunk-OGxLGLWg.js": {
          "file": "assets/chunks/chunk-OGxLGLWg.js",
          "name": "src_entities_Landing_ui_ForWhomCard_ForWhomCard.module-03d70385",
          "css": [
            "assets/static/src_entities_Landing_ui_ForWhomCard_ForWhomCard.Dus_8iAe.css"
          ]
        },
        "_src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css": {
          "file": "assets/static/src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css",
          "src": "_src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css"
        },
        "_src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css": {
          "file": "assets/static/src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css",
          "src": "_src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css"
        },
        "_src_entities_Landing_ui_ForWhomCard_ForWhomCard.Dus_8iAe.css": {
          "file": "assets/static/src_entities_Landing_ui_ForWhomCard_ForWhomCard.Dus_8iAe.css",
          "src": "_src_entities_Landing_ui_ForWhomCard_ForWhomCard.Dus_8iAe.css"
        },
        "_src_entities_Landing_ui_HowItHelpsCard_HowItHelpsCard.Do3ma9QG.css": {
          "file": "assets/static/src_entities_Landing_ui_HowItHelpsCard_HowItHelpsCard.Do3ma9QG.css",
          "src": "_src_entities_Landing_ui_HowItHelpsCard_HowItHelpsCard.Do3ma9QG.css"
        },
        "_src_entities_Landing_ui_StatisticsCard_StatisticsCard.hEuy2PaI.css": {
          "file": "assets/static/src_entities_Landing_ui_StatisticsCard_StatisticsCard.hEuy2PaI.css",
          "src": "_src_entities_Landing_ui_StatisticsCard_StatisticsCard.hEuy2PaI.css"
        },
        "_src_entities_Landing_ui_TariffCard_TariffCard.c-4HbZak.css": {
          "file": "assets/static/src_entities_Landing_ui_TariffCard_TariffCard.c-4HbZak.css",
          "src": "_src_entities_Landing_ui_TariffCard_TariffCard.c-4HbZak.css"
        },
        "_src_features_SubscribeToNews_ui_SubscribeToNews.5gcOGBuJ.css": {
          "file": "assets/static/src_features_SubscribeToNews_ui_SubscribeToNews.5gcOGBuJ.css",
          "src": "_src_features_SubscribeToNews_ui_SubscribeToNews.5gcOGBuJ.css"
        },
        "_src_pages_IndexPage_ui_About_About.vs3fDfNg.css": {
          "file": "assets/static/src_pages_IndexPage_ui_About_About.vs3fDfNg.css",
          "src": "_src_pages_IndexPage_ui_About_About.vs3fDfNg.css"
        },
        "_src_pages_IndexPage_ui_FAQ_FAQ.D__PwItM.css": {
          "file": "assets/static/src_pages_IndexPage_ui_FAQ_FAQ.D__PwItM.css",
          "src": "_src_pages_IndexPage_ui_FAQ_FAQ.D__PwItM.css"
        },
        "_src_pages_IndexPage_ui_ForWhom_ForWhom.5DVDJB81.css": {
          "file": "assets/static/src_pages_IndexPage_ui_ForWhom_ForWhom.5DVDJB81.css",
          "src": "_src_pages_IndexPage_ui_ForWhom_ForWhom.5DVDJB81.css"
        },
        "_src_pages_IndexPage_ui_Hero_Hero.BaJ6IuhF.css": {
          "file": "assets/static/src_pages_IndexPage_ui_Hero_Hero.BaJ6IuhF.css",
          "src": "_src_pages_IndexPage_ui_Hero_Hero.BaJ6IuhF.css"
        },
        "_src_pages_IndexPage_ui_HowItHelps_HowItHelps.hBJW4jfx.css": {
          "file": "assets/static/src_pages_IndexPage_ui_HowItHelps_HowItHelps.hBJW4jfx.css",
          "src": "_src_pages_IndexPage_ui_HowItHelps_HowItHelps.hBJW4jfx.css"
        },
        "_src_pages_IndexPage_ui_HowItWorks_HowItWorks.vvwRUcpZ.css": {
          "file": "assets/static/src_pages_IndexPage_ui_HowItWorks_HowItWorks.vvwRUcpZ.css",
          "src": "_src_pages_IndexPage_ui_HowItWorks_HowItWorks.vvwRUcpZ.css"
        },
        "_src_pages_IndexPage_ui_LetsContinue_LetsContinue.BZv0n0iO.css": {
          "file": "assets/static/src_pages_IndexPage_ui_LetsContinue_LetsContinue.BZv0n0iO.css",
          "src": "_src_pages_IndexPage_ui_LetsContinue_LetsContinue.BZv0n0iO.css"
        },
        "_src_pages_IndexPage_ui_MoreInBlog_MoreInBlog.DqcPZpXe.css": {
          "file": "assets/static/src_pages_IndexPage_ui_MoreInBlog_MoreInBlog.DqcPZpXe.css",
          "src": "_src_pages_IndexPage_ui_MoreInBlog_MoreInBlog.DqcPZpXe.css"
        },
        "_src_pages_IndexPage_ui_PeopleTalk_PeopleTalk.BgZEyIQS.css": {
          "file": "assets/static/src_pages_IndexPage_ui_PeopleTalk_PeopleTalk.BgZEyIQS.css",
          "src": "_src_pages_IndexPage_ui_PeopleTalk_PeopleTalk.BgZEyIQS.css"
        },
        "_src_pages_IndexPage_ui_Statistics_Statistics.CsAjEHfs.css": {
          "file": "assets/static/src_pages_IndexPage_ui_Statistics_Statistics.CsAjEHfs.css",
          "src": "_src_pages_IndexPage_ui_Statistics_Statistics.CsAjEHfs.css"
        },
        "_src_pages_IndexPage_ui_Tariffs_Tafiffs.C7VAMT2N.css": {
          "file": "assets/static/src_pages_IndexPage_ui_Tariffs_Tafiffs.C7VAMT2N.css",
          "src": "_src_pages_IndexPage_ui_Tariffs_Tafiffs.C7VAMT2N.css"
        },
        "_src_pages_IndexPage_ui_WhyUs_WhyUs.DaF6s1rj.css": {
          "file": "assets/static/src_pages_IndexPage_ui_WhyUs_WhyUs.DaF6s1rj.css",
          "src": "_src_pages_IndexPage_ui_WhyUs_WhyUs.DaF6s1rj.css"
        },
        "_src_shared_ui_Picture_Picture.CMCuYSLW.css": {
          "file": "assets/static/src_shared_ui_Picture_Picture.CMCuYSLW.css",
          "src": "_src_shared_ui_Picture_Picture.CMCuYSLW.css"
        },
        "_src_shared_ui_Section_Section.oc1Wry6T.css": {
          "file": "assets/static/src_shared_ui_Section_Section.oc1Wry6T.css",
          "src": "_src_shared_ui_Section_Section.oc1Wry6T.css"
        },
        "_src_shared_ui_SpinningText_SpinningText.DqhQpHd_.css": {
          "file": "assets/static/src_shared_ui_SpinningText_SpinningText.DqhQpHd_.css",
          "src": "_src_shared_ui_SpinningText_SpinningText.DqhQpHd_.css"
        },
        "_src_shared_ui_StickyScrollReveal_StickyScrollReveal.BnoiLhfu.css": {
          "file": "assets/static/src_shared_ui_StickyScrollReveal_StickyScrollReveal.BnoiLhfu.css",
          "src": "_src_shared_ui_StickyScrollReveal_StickyScrollReveal.BnoiLhfu.css"
        },
        "_src_widgets_RootLayout_RootLayout.BBl8SsGq.css": {
          "file": "assets/static/src_widgets_RootLayout_RootLayout.BBl8SsGq.css",
          "src": "_src_widgets_RootLayout_RootLayout.BBl8SsGq.css"
        },
        "_src_widgets_RootLayout_ui_Footer_Footer.BHnFDixU.css": {
          "file": "assets/static/src_widgets_RootLayout_ui_Footer_Footer.BHnFDixU.css",
          "src": "_src_widgets_RootLayout_ui_Footer_Footer.BHnFDixU.css"
        },
        "_src_widgets_RootLayout_ui_List_List.rzI4jrUR.css": {
          "file": "assets/static/src_widgets_RootLayout_ui_List_List.rzI4jrUR.css",
          "src": "_src_widgets_RootLayout_ui_List_List.rzI4jrUR.css"
        },
        "_src_widgets_RootLayout_ui_Metainfo_MetaInfo.BNYHSklj.css": {
          "file": "assets/static/src_widgets_RootLayout_ui_Metainfo_MetaInfo.BNYHSklj.css",
          "src": "_src_widgets_RootLayout_ui_Metainfo_MetaInfo.BNYHSklj.css"
        },
        "_src_widgets_RootLayout_ui_Section_Section.CsVR1-Ac.css": {
          "file": "assets/static/src_widgets_RootLayout_ui_Section_Section.CsVR1-Ac.css",
          "src": "_src_widgets_RootLayout_ui_Section_Section.CsVR1-Ac.css"
        },
        "_src_widgets_RootLayout_ui_Top_Top.WxISOpgS.css": {
          "file": "assets/static/src_widgets_RootLayout_ui_Top_Top.WxISOpgS.css",
          "src": "_src_widgets_RootLayout_ui_Top_Top.WxISOpgS.css"
        },
        "_vike-react-50ee1291.BcWtY8Ol.css": {
          "file": "assets/static/vike-react-50ee1291.BcWtY8Ol.css",
          "src": "_vike-react-50ee1291.BcWtY8Ol.css"
        },
        "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/client/client-routing-runtime/entry.js": {
          "file": "assets/entries/entry-client-routing.Cjfzbx9l.js",
          "name": "entries/entry-client-routing",
          "src": "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/client/client-routing-runtime/entry.js",
          "isEntry": true,
          "imports": [
            "_chunk-Bs9liB0q.js"
          ],
          "dynamicImports": [
            "virtual:vike:pageConfigValuesAll:client:/pages/index",
            "virtual:vike:pageConfigValuesAll:client:/pages/test"
          ]
        },
        "src/app/assets/fonts/raleway-v34-cyrillic_latin-500.woff2": {
          "file": "assets/static/raleway-v34-cyrillic_latin-500.CgpFJeFS.woff2",
          "src": "src/app/assets/fonts/raleway-v34-cyrillic_latin-500.woff2"
        },
        "src/app/assets/fonts/raleway-v34-cyrillic_latin-600.woff2": {
          "file": "assets/static/raleway-v34-cyrillic_latin-600.DRu2qh9T.woff2",
          "src": "src/app/assets/fonts/raleway-v34-cyrillic_latin-600.woff2"
        },
        "src/app/assets/fonts/raleway-v34-cyrillic_latin-700.woff2": {
          "file": "assets/static/raleway-v34-cyrillic_latin-700.CV4g2AhU.woff2",
          "src": "src/app/assets/fonts/raleway-v34-cyrillic_latin-700.woff2"
        },
        "src/app/assets/fonts/raleway-v34-cyrillic_latin-800.woff2": {
          "file": "assets/static/raleway-v34-cyrillic_latin-800.C2UAHJem.woff2",
          "src": "src/app/assets/fonts/raleway-v34-cyrillic_latin-800.woff2"
        },
        "src/app/assets/fonts/raleway-v34-cyrillic_latin-regular.woff2": {
          "file": "assets/static/raleway-v34-cyrillic_latin-regular.B2J1s-V4.woff2",
          "src": "src/app/assets/fonts/raleway-v34-cyrillic_latin-regular.woff2"
        },
        "virtual:vike:pageConfigValuesAll:client:/pages/index": {
          "file": "assets/entries/pages_index.CVq_yQlp.js",
          "name": "entries/pages/index",
          "src": "virtual:vike:pageConfigValuesAll:client:/pages/index",
          "isEntry": true,
          "isDynamicEntry": true,
          "imports": [
            "_chunk-BEbw_0AC.js",
            "_chunk-B1W2AE3s.js",
            "_chunk-CcR76USu.js",
            "_chunk--Zd04aop.js",
            "_chunk-DhL4uBru.js",
            "_chunk-BSo9L9IG.js",
            "_chunk-BMc1H3Un.js",
            "_chunk-CXo5F32q.js",
            "_chunk-OGxLGLWg.js",
            "_chunk-CNsID_Tc.js",
            "_chunk-ClJ7o3j-.js",
            "_chunk-B9riZoTN.js",
            "_chunk-DlYS-ihZ.js",
            "_chunk-65guFjvV.js",
            "_chunk-BvUYN6Yk.js",
            "_chunk-BBap9ybz.js",
            "_chunk-BVNA5XK5.js",
            "_chunk-FgL5gaKZ.js",
            "_chunk-CTdPKw3K.js",
            "_chunk-CwTP6ZND.js",
            "_chunk-CUokj3a9.js",
            "_chunk-Bs9liB0q.js",
            "_chunk-DRY9zkUH.js",
            "_chunk-B9aj60V7.js",
            "_chunk-BFxkgyTb.js",
            "_chunk-Bxk40HBS.js",
            "_chunk-BYlX3Wk_.js",
            "_chunk-Ctd1kwdX.js",
            "_chunk-FjVmaxdv.js"
          ],
          "css": [
            "assets/static/vike-react-50ee1291.BcWtY8Ol.css",
            "assets/static/src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css",
            "assets/static/src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css"
          ],
          "assets": [
            "assets/static/raleway-v34-cyrillic_latin-regular.B2J1s-V4.woff2",
            "assets/static/raleway-v34-cyrillic_latin-500.CgpFJeFS.woff2",
            "assets/static/raleway-v34-cyrillic_latin-600.DRu2qh9T.woff2",
            "assets/static/raleway-v34-cyrillic_latin-700.CV4g2AhU.woff2",
            "assets/static/raleway-v34-cyrillic_latin-800.C2UAHJem.woff2"
          ]
        },
        "virtual:vike:pageConfigValuesAll:client:/pages/test": {
          "file": "assets/entries/pages_test.BUv8EInU.js",
          "name": "entries/pages/test",
          "src": "virtual:vike:pageConfigValuesAll:client:/pages/test",
          "isEntry": true,
          "isDynamicEntry": true,
          "imports": [
            "_chunk-BEbw_0AC.js",
            "_chunk-Bs9liB0q.js",
            "_chunk-DRY9zkUH.js",
            "_chunk-B9aj60V7.js",
            "_chunk-BFxkgyTb.js",
            "_chunk-Bxk40HBS.js",
            "_chunk-BYlX3Wk_.js",
            "_chunk-Ctd1kwdX.js",
            "_chunk-FjVmaxdv.js"
          ],
          "css": [
            "assets/static/vike-react-50ee1291.BcWtY8Ol.css",
            "assets/static/src_app_providers_Mantine_mantine-styles-15e70b9c.Gr6mvit1.css",
            "assets/static/src_app_assets_styles_index-dbda4d7c.DKnFo9Kh.css"
          ],
          "assets": [
            "assets/static/raleway-v34-cyrillic_latin-regular.B2J1s-V4.woff2",
            "assets/static/raleway-v34-cyrillic_latin-500.CgpFJeFS.woff2",
            "assets/static/raleway-v34-cyrillic_latin-600.DRu2qh9T.woff2",
            "assets/static/raleway-v34-cyrillic_latin-700.CV4g2AhU.woff2",
            "assets/static/raleway-v34-cyrillic_latin-800.C2UAHJem.woff2"
          ]
        }
      };
      const buildInfo = {
        "versionAtBuildTime": "0.4.228",
        "usesClientRouter": false,
        "viteConfigRuntime": {
          "root": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab",
          "build": {
            "outDir": "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/dist/"
          },
          "_baseViteOriginal": "/__UNSET__",
          "vitePluginServerEntry": {}
        }
      };
      setGlobalContext_buildEntry({
        virtualFileExports,
        assetsManifest,
        buildInfo
      });
    }
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/autoImporter.js
var autoImporter_exports = {};
__export(autoImporter_exports, {
  loadServerEntry: () => loadServerEntry,
  paths: () => paths,
  pluginVersion: () => pluginVersion,
  status: () => status
});
var status, pluginVersion, loadServerEntry, paths;
var init_autoImporter = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/autoImporter.js"() {
    status = "SET";
    pluginVersion = "0.7.5";
    loadServerEntry = async () => {
      await Promise.resolve().then(() => (init_entry(), entry_exports));
    };
    paths = {
      autoImporterFilePathOriginal: "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/autoImporter.js",
      autoImporterFilePathActual: (() => {
        try {
          return import.meta.url;
        } catch {
          return null;
        }
      })(),
      serverEntryFilePathRelative: "../../../../../../../../../dist/server/entry.mjs",
      serverEntryFilePathOriginal: "/Users/ilaolovannikov/WebstormProjects/cognitive-lab/dist/server/entry.mjs",
      serverEntryFilePathResolved: () => import.meta.resolve("../../../../../../../../../dist/server/entry.mjs")
    };
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/importServerProductionEntry.js
async function importServerProductionEntry(args = {}) {
  const autoImporter = await Promise.resolve().then(() => (init_autoImporter(), autoImporter_exports));
  debugLogsRuntimePre(autoImporter);
  let success = false;
  let requireError;
  let isOutsideOfCwd = null;
  if (autoImporter.status === "SET") {
    isOutsideOfCwd = isServerEntryOutsideOfCwd(autoImporter.paths);
    if (isOutsideOfCwd === false || isOutsideOfCwd === null) {
      try {
        await autoImporter.loadServerEntry();
        success = true;
      } catch (err) {
        if (!DEBUG2) {
          throw err;
        } else {
          requireError = err;
        }
      }
    }
  }
  if (!success) {
    const outFilePath = await crawlOutDir({
      ...args,
      outFileSearch: [serverEntryFileNameBase, serverEntryFileNameBaseAlternative]
    });
    if (outFilePath) {
      await import_(outFilePath);
      success = true;
    }
  }
  debugLogsRuntimePost({ success, requireError, isOutsideOfCwd, ...args });
  if (args.tolerateDoesNotExist) {
    return success;
  } else {
    assertUsage2(success, wrongUsageNotBuilt);
    return null;
  }
}
function isServerEntryOutsideOfCwd(paths2) {
  const cwd = getCwdSafe();
  if (!cwd)
    return null;
  let serverEntryFilePath;
  try {
    serverEntryFilePath = paths2.serverEntryFilePathResolved();
  } catch {
    return null;
  }
  serverEntryFilePath = removeFilePrefix(serverEntryFilePath);
  if (isWebpackResolve(serverEntryFilePath, cwd))
    return null;
  serverEntryFilePath = toPosixPath2(serverEntryFilePath);
  assertPosixPath2(cwd);
  return !serverEntryFilePath.startsWith(cwd);
}
function removeFilePrefix(filePath) {
  assert2(process);
  const filePrefix = process.platform === "win32" ? "file:///" : "file://";
  if (filePath.startsWith(filePrefix))
    filePath = filePath.slice(filePrefix.length);
  return filePath;
}
var wrongUsageNotBuilt;
var init_importServerProductionEntry = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/importServerProductionEntry.js"() {
    init_utils5();
    init_debugLogsRuntime();
    init_debug3();
    init_serverEntryFileNameBase();
    init_crawlOutDir();
    init_esm();
    wrongUsageNotBuilt = "The server production entry is missing. (Re-)build your app and try again. If you still get this error, then you need to manually import the server production entry, see https://github.com/brillout/vite-plugin-server-entry#manual-import";
  }
});

// node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/index.js
var init_runtime = __esm({
  "node_modules/.pnpm/@brillout+vite-plugin-server-entry@0.7.5/node_modules/@brillout/vite-plugin-server-entry/dist/esm/runtime/index.js"() {
    init_importServerProductionEntry();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files/virtualFileImportUserCode.js
var idBase2, virtualFileIdImportUserCodeServer, virtualFileIdImportUserCodeClientSR, virtualFileIdImportUserCodeClientCR;
var init_virtualFileImportUserCode = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/virtual-files/virtualFileImportUserCode.js"() {
    init_utils2();
    init_virtual_files();
    idBase2 = "virtual:vike:importUserCode";
    virtualFileIdImportUserCodeServer = `${idBase2}:server`;
    virtualFileIdImportUserCodeClientSR = `${idBase2}:client:server-routing`;
    virtualFileIdImportUserCodeClientCR = `${idBase2}:client:client-routing`;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/deduceRouteStringFromFilesystemPath.js
function deduceRouteStringFromFilesystemPath(pageId, filesystemRoots) {
  const filesystemRootsMatch = filesystemRoots.filter(({ filesystemRoot }) => pageId.startsWith(filesystemRoot)).sort(higherFirst(({ filesystemRoot }) => filesystemRoot.length));
  const fsBase = filesystemRootsMatch[0];
  let filesystemRoute;
  if (fsBase) {
    const { filesystemRoot, urlRoot } = fsBase;
    const debugInfo = { pageId, filesystemRoot, urlRoot };
    assert(urlRoot.startsWith("/") && pageId.startsWith("/") && filesystemRoot.startsWith("/"), debugInfo);
    assert(pageId.startsWith(filesystemRoot), debugInfo);
    if (filesystemRoot !== "/") {
      assert(!filesystemRoot.endsWith("/"), debugInfo);
      filesystemRoute = slice(pageId, filesystemRoot.length, 0);
    } else {
      filesystemRoute = pageId;
    }
    assert(filesystemRoute.startsWith("/"), debugInfo);
    filesystemRoute = urlRoot + (urlRoot.endsWith("/") ? "" : "/") + slice(filesystemRoute, 1, 0);
  } else {
    filesystemRoute = pageId;
  }
  assert(filesystemRoute.startsWith("/"));
  filesystemRoute = filesystemRoute.split("/").filter((dir) => dir !== "pages" && dir !== "src" && dir !== "index").join("/");
  assert(!filesystemRoute.includes(".page."));
  assert(!filesystemRoute.endsWith("."));
  if (filesystemRoute.endsWith("/index")) {
    filesystemRoute = slice(filesystemRoute, 0, -"/index".length);
  }
  if (filesystemRoute === "") {
    filesystemRoute = "/";
  }
  assert(filesystemRoute.startsWith("/"));
  assert(!filesystemRoute.endsWith("/") || filesystemRoute === "/");
  return filesystemRoute;
}
var init_deduceRouteStringFromFilesystemPath = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/deduceRouteStringFromFilesystemPath.js"() {
    init_utils4();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/loadPageRoutes.js
async function loadPageRoutes(pageFilesAll, pageConfigs, pageConfigGlobal, allPageIds) {
  await Promise.all(pageFilesAll.filter((p13) => p13.fileType === ".page.route").map((p13) => p13.loadFile?.()));
  const { onBeforeRouteHook, filesystemRoots } = getGlobalHooks(pageFilesAll, pageConfigs, pageConfigGlobal);
  const pageRoutes = getPageRoutes(filesystemRoots, pageFilesAll, pageConfigs, allPageIds);
  return { pageRoutes, onBeforeRouteHook };
}
function getPageRoutes(filesystemRoots, pageFilesAll, pageConfigs, allPageIds) {
  const pageRoutes = [];
  if (pageConfigs.length > 0) {
    assert(filesystemRoots === null);
    const comesFromV1PageConfig = true;
    pageConfigs.filter((p13) => !p13.isErrorPage).forEach((pageConfig) => {
      const pageId = pageConfig.pageId;
      let pageRoute = null;
      {
        const configName = "route";
        const configValue = getConfigValueRuntime(pageConfig, configName);
        if (configValue) {
          const route2 = configValue.value;
          assert(configValue.definedAtData);
          const definedAtString = getDefinedAtString(configValue.definedAtData, configName);
          if (typeof route2 === "string") {
            pageRoute = {
              pageId,
              comesFromV1PageConfig,
              routeString: route2,
              routeDefinedAtString: definedAtString,
              routeType: "STRING"
            };
          } else {
            assert(isCallable(route2));
            if (getConfigValueRuntime(pageConfig, "iKnowThePerformanceRisksOfAsyncRouteFunctions", "boolean"))
              warnDeprecatedAllowKey();
            pageRoute = {
              pageId,
              comesFromV1PageConfig,
              routeFunction: route2,
              routeDefinedAtString: definedAtString,
              routeType: "FUNCTION"
            };
          }
        }
      }
      if (!pageRoute) {
        const { routeFilesystem } = pageConfig;
        assert(routeFilesystem);
        const { routeString, definedAtLocation } = routeFilesystem;
        assert(routeFilesystem.routeString.startsWith("/"));
        pageRoute = {
          pageId,
          routeFilesystemDefinedBy: definedAtLocation,
          comesFromV1PageConfig,
          routeString,
          routeDefinedAtString: null,
          routeType: "FILESYSTEM"
        };
      }
      assert(pageRoute);
      pageRoutes.push(pageRoute);
    });
  }
  if (pageConfigs.length === 0) {
    assert(filesystemRoots);
    const comesFromV1PageConfig = false;
    allPageIds.filter((pageId) => !isErrorPageId(pageId, false)).forEach((pageId) => {
      const pageRouteFile = pageFilesAll.find((p13) => p13.pageId === pageId && p13.fileType === ".page.route");
      if (!pageRouteFile || !("default" in pageRouteFile.fileExports)) {
        const routeString = deduceRouteStringFromFilesystemPath(pageId, filesystemRoots);
        assert(routeString.startsWith("/"));
        assert(!routeString.endsWith("/") || routeString === "/");
        pageRoutes.push({
          pageId,
          comesFromV1PageConfig,
          routeString,
          routeDefinedAtString: null,
          routeFilesystemDefinedBy: `${pageId}.page.*`,
          routeType: "FILESYSTEM"
        });
      } else {
        const { filePath, fileExports } = pageRouteFile;
        assert(fileExports.default);
        if (hasProp(fileExports, "default", "string")) {
          const routeString = fileExports.default;
          assertUsage(routeString.startsWith("/"), `A Route String should start with a leading slash '/' but ${filePath} has \`export default '${routeString}'\`. Make sure to \`export default '/${routeString}'\` instead.`);
          pageRoutes.push({
            pageId,
            comesFromV1PageConfig,
            routeString,
            routeDefinedAtString: filePath,
            routeType: "STRING"
          });
          return;
        }
        if (hasProp(fileExports, "default", "function")) {
          const routeFunction = fileExports.default;
          {
            const allowKey = "iKnowThePerformanceRisksOfAsyncRouteFunctions";
            if (allowKey in fileExports) {
              warnDeprecatedAllowKey();
            }
          }
          pageRoutes.push({
            pageId,
            comesFromV1PageConfig,
            routeFunction,
            routeDefinedAtString: filePath,
            routeType: "FUNCTION"
          });
          return;
        }
        assertUsage(false, `The default export of ${filePath} should be a string or a function.`);
      }
    });
  }
  return pageRoutes;
}
function getGlobalHooks(pageFilesAll, pageConfigs, pageConfigGlobal) {
  if (pageConfigs.length > 0) {
    const hook = getHookFromPageConfigGlobal(pageConfigGlobal, "onBeforeRoute");
    return { onBeforeRouteHook: hook, filesystemRoots: null };
  }
  let onBeforeRouteHook = null;
  const filesystemRoots = [];
  pageFilesAll.filter((p13) => p13.fileType === ".page.route" && p13.isDefaultPageFile).forEach(({ filePath, fileExports }) => {
    assert(fileExports);
    if ("onBeforeRoute" in fileExports) {
      assertUsage(hasProp(fileExports, "onBeforeRoute", "function"), `\`export { onBeforeRoute }\` of ${filePath} should be a function.`);
      const { onBeforeRoute } = fileExports;
      const hookName = "onBeforeRoute";
      onBeforeRouteHook = {
        hookFilePath: filePath,
        hookFn: onBeforeRoute,
        hookName,
        hookTimeout: getHookTimeoutDefault(hookName)
      };
    }
    if ("filesystemRoutingRoot" in fileExports) {
      assertUsage(hasProp(fileExports, "filesystemRoutingRoot", "string"), `\`export { filesystemRoutingRoot }\` of ${filePath} should be a string.`);
      assertUsage(hasProp(fileExports, "filesystemRoutingRoot", "string"), `\`export { filesystemRoutingRoot }\` of ${filePath} is \`'${fileExports.filesystemRoutingRoot}'\` but it should start with a leading slash \`/\`.`);
      filesystemRoots.push({
        filesystemRoot: dirname(filePath),
        urlRoot: fileExports.filesystemRoutingRoot
      });
    }
  });
  return { onBeforeRouteHook, filesystemRoots };
}
function dirname(filePath) {
  assert(filePath.startsWith("/"));
  assert(!filePath.endsWith("/"));
  const paths2 = filePath.split("/");
  const dirPath = slice(paths2, 0, -1).join("/") || "/";
  assert(dirPath.startsWith("/"));
  assert(!dirPath.endsWith("/") || dirPath === "/");
  return dirPath;
}
var init_loadPageRoutes = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/loadPageRoutes.js"() {
    init_error_page();
    init_utils4();
    init_deduceRouteStringFromFilesystemPath();
    init_utils();
    init_getConfigValueRuntime();
    init_getConfigDefinedAt();
    init_resolveRouteFunction();
    init_getHook();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/assertV1Design.js
function assertV1Design(pageConfigs, pageFilesAll) {
  const isOldDesign = pageFilesAll === true || pageFilesAll !== false && pageFilesAll.length > 0;
  const isV1Design = pageConfigs === true || pageConfigs !== false && pageConfigs.length > 0;
  if (isV1Design && isOldDesign) {
    const lines = ["Mixing the new V1 design with the old V0.4 design is forbidden."];
    const indent = "- ";
    if (typeof pageConfigs !== "boolean") {
      assert(pageConfigs.length > 0);
      const filesV1 = unique(pageConfigs.map((p13) => Object.values(p13.configValueSources).map((sources) => sources.map((c13) => c13.definedAt).map((definedAt) => definedAt.definedBy ? null : definedAt.filePathAbsoluteUserRootDir).filter(isNotNullish).map((filePathToShowToUser) => indent + filePathToShowToUser))).flat(2));
      lines.push(...["V1 design files:", ...filesV1]);
    }
    if (typeof pageFilesAll !== "boolean") {
      assert(pageFilesAll.length > 0);
      const filesOld = pageFilesAll.map((p13) => indent + p13.filePath);
      lines.push(...["Old design files:", ...filesOld]);
    }
    assertUsage(false, lines.join("\n"));
  }
  assertWarning2(!isOldDesign, "You are using Vike's deprecated design. Update to the new V1 design, see https://vike.dev/migration/v1-design for how to migrate.", { onlyOnce: true });
}
var init_assertV1Design = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/assertV1Design.js"() {
    init_utils2();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/determinePageIdOld.js
function determinePageIdOld(filePath) {
  const pageSuffix = ".page.";
  const pageId = slice(filePath.split(pageSuffix), 0, -1).join(pageSuffix);
  assert(!pageId.includes("\\"));
  return pageId;
}
var init_determinePageIdOld = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/determinePageIdOld.js"() {
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/fileTypes.js
function determineFileType(filePath) {
  {
    const isCSS = filePath.endsWith(".css");
    if (isCSS) {
      return ".css";
    }
  }
  assert(isScriptFile(filePath), filePath);
  const fileName = filePath.split("/").slice(-1)[0];
  const parts = fileName.split(".");
  const suffix1 = parts.slice(-3)[0];
  const suffix2 = parts.slice(-2)[0];
  if (suffix2 === "page") {
    return ".page";
  }
  assert(suffix1 === "page", filePath);
  if (suffix2 === "server") {
    return ".page.server";
  }
  if (suffix2 === "client") {
    return ".page.client";
  }
  if (suffix2 === "route") {
    return ".page.route";
  }
  assert(false, filePath);
}
var fileTypes;
var init_fileTypes = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/fileTypes.js"() {
    init_utils();
    init_isScriptFile();
    fileTypes = [
      ".page",
      ".page.server",
      ".page.route",
      ".page.client",
      // New type `.page.css`/`.page.server.css`/`.page.client.css` for `extensions[number].pageFileDist`.
      //  - Extensions using `pageFileDist` are expected to use a bundler that generates a `.css` colocated next to the original `.page.js` file (e.g. `/renderer/_default.page.server.css` for `/renderer/_default.page.server.js`.
      //  - Since these `.page.css` files Bundlers We can therefore expect that there isn't any `.page.server.sass`/...
      ".css"
    ];
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/getPageFileObject.js
function getPageFileObject(filePath) {
  const isRelevant = (pageId) => pageFile.pageId === pageId || pageFile.isDefaultPageFile && (isRendererFilePath(pageFile.filePath) || isAncestorDefaultPage(pageId, pageFile.filePath));
  const fileType = determineFileType(filePath);
  const isEnv = (env2) => {
    assert(fileType !== ".page.route");
    if (env2 === "CLIENT_ONLY") {
      return fileType === ".page.client" || fileType === ".css";
    }
    if (env2 === "SERVER_ONLY") {
      return fileType === ".page.server";
    }
    if (env2 === "CLIENT_AND_SERVER") {
      return fileType === ".page";
    }
    assert(false);
  };
  const pageFile = {
    filePath,
    fileType,
    isEnv,
    isRelevant,
    isDefaultPageFile: isDefaultFilePath(filePath),
    isRendererPageFile: fileType !== ".css" && isDefaultFilePath(filePath) && isRendererFilePath(filePath),
    isErrorPageFile: isErrorPageId(filePath, false),
    pageId: determinePageIdOld(filePath)
  };
  return pageFile;
}
function isDefaultFilePath(filePath) {
  if (isErrorPageId(filePath, false)) {
    return false;
  }
  return filePath.includes("/_default");
}
function isRendererFilePath(filePath) {
  return filePath.includes("/renderer/");
}
function isAncestorDefaultPage(pageId, defaultPageFilePath) {
  assert(!pageId.endsWith("/"));
  assert(!defaultPageFilePath.endsWith("/"));
  assert(isDefaultFilePath(defaultPageFilePath));
  const defaultPageDir = slice(defaultPageFilePath.split("/"), 0, -1).filter((filePathSegment) => filePathSegment !== "_default").join("/");
  return pageId.startsWith(defaultPageDir);
}
var init_getPageFileObject = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/getPageFileObject.js"() {
    init_determinePageIdOld();
    init_error_page();
    init_utils();
    init_fileTypes();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/parseGlobResults.js
function parseGlobResults(pageFilesExports) {
  assert(hasProp(pageFilesExports, "pageFilesLazy", "object"));
  assert(hasProp(pageFilesExports, "pageFilesEager", "object"));
  assert(hasProp(pageFilesExports, "pageFilesExportNamesLazy", "object"));
  assert(hasProp(pageFilesExports, "pageFilesExportNamesEager", "object"));
  assert(hasProp(pageFilesExports.pageFilesLazy, ".page"));
  assert(hasProp(pageFilesExports.pageFilesLazy, ".page.client") || hasProp(pageFilesExports.pageFilesLazy, ".page.server"));
  assert(hasProp(pageFilesExports, "pageFilesList", "string[]"));
  assert(hasProp(pageFilesExports, "pageConfigsSerialized"));
  assert(hasProp(pageFilesExports, "pageConfigGlobalSerialized"));
  const { pageConfigsSerialized: pageConfigsSerialized2, pageConfigGlobalSerialized: pageConfigGlobalSerialized2 } = pageFilesExports;
  assertPageConfigsSerialized(pageConfigsSerialized2);
  assertPageConfigGlobalSerialized(pageConfigGlobalSerialized2);
  const { pageConfigs, pageConfigGlobal } = parsePageConfigs(pageConfigsSerialized2, pageConfigGlobalSerialized2);
  const pageFilesMap = {};
  parseGlobResult(pageFilesExports.pageFilesLazy).forEach(({ filePath, pageFile, globValue }) => {
    pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;
    const loadModule = globValue;
    assertLoadModule(loadModule);
    pageFile.loadFile = async () => {
      if (!("fileExports" in pageFile)) {
        pageFile.fileExports = await loadModule();
        assertExportValues(pageFile);
      }
    };
  });
  parseGlobResult(pageFilesExports.pageFilesExportNamesLazy).forEach(({ filePath, pageFile, globValue }) => {
    pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;
    const loadModule = globValue;
    assertLoadModule(loadModule);
    pageFile.loadExportNames = async () => {
      if (!("exportNames" in pageFile)) {
        const moduleExports = await loadModule();
        assert(hasProp(moduleExports, "exportNames", "string[]"), pageFile.filePath);
        pageFile.exportNames = moduleExports.exportNames;
      }
    };
  });
  parseGlobResult(pageFilesExports.pageFilesEager).forEach(({ filePath, pageFile, globValue }) => {
    pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;
    const moduleExports = globValue;
    assert(isObject(moduleExports));
    pageFile.fileExports = moduleExports;
  });
  parseGlobResult(pageFilesExports.pageFilesExportNamesEager).forEach(({ filePath, pageFile, globValue }) => {
    pageFile = pageFilesMap[filePath] = pageFilesMap[filePath] ?? pageFile;
    const moduleExports = globValue;
    assert(isObject(moduleExports));
    assert(hasProp(moduleExports, "exportNames", "string[]"), pageFile.filePath);
    pageFile.exportNames = moduleExports.exportNames;
  });
  pageFilesExports.pageFilesList.forEach((filePath) => {
    pageFilesMap[filePath] = pageFilesMap[filePath] ?? getPageFileObject(filePath);
  });
  const pageFilesAll = Object.values(pageFilesMap);
  pageFilesAll.forEach(({ filePath }) => {
    assert(!filePath.includes("\\"));
  });
  return { pageFilesAll, pageConfigs, pageConfigGlobal };
}
function parseGlobResult(globObject) {
  const ret = [];
  Object.entries(globObject).forEach(([fileType, globFiles]) => {
    cast(fileType);
    assert(fileTypes.includes(fileType));
    assert(isObject(globFiles));
    Object.entries(globFiles).forEach(([filePath, globValue]) => {
      const pageFile = getPageFileObject(filePath);
      assert(pageFile.fileType === fileType);
      ret.push({ filePath, pageFile, globValue });
    });
  });
  return ret;
}
function assertLoadModule(globValue) {
  assert(isCallable(globValue));
}
function assertPageConfigsSerialized(pageConfigsSerialized2) {
  assert(isArray(pageConfigsSerialized2));
  pageConfigsSerialized2.forEach((pageConfigSerialized) => {
    assert(isObject(pageConfigSerialized));
    assert(hasProp(pageConfigSerialized, "pageId", "string"));
    assert(hasProp(pageConfigSerialized, "routeFilesystem"));
    assert(hasProp(pageConfigSerialized, "configValuesSerialized"));
  });
}
function assertPageConfigGlobalSerialized(pageConfigGlobalSerialized2) {
  assert(hasProp(pageConfigGlobalSerialized2, "configValuesSerialized"));
}
var init_parseGlobResults = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageFiles/parseGlobResults.js"() {
    init_utils();
    init_assert_exports_old_design();
    init_getPageFileObject();
    init_fileTypes();
    init_parsePageConfigs();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageConfigsRuntime.js
function getPageConfigsRuntime(virtualFileExports2) {
  const { pageFilesAll, pageConfigs, pageConfigGlobal } = parseGlobResults(virtualFileExports2);
  const allPageIds = getAllPageIds(pageFilesAll, pageConfigs);
  const globalConfig = getPageConfigGlobalUserFriendly({ pageConfigGlobalValues: pageConfigGlobal.configValues });
  const pageConfigsUserFriendly = Object.fromEntries(pageConfigs.map((pageConfig) => {
    return getPageConfigUserFriendly(pageConfigGlobal.configValues, pageConfig, pageConfig.configValues);
  }));
  return { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal, globalConfig, pageConfigsUserFriendly };
}
function getAllPageIds(pageFilesAll, pageConfigs) {
  const fileIds = pageFilesAll.filter(({ isDefaultPageFile }) => !isDefaultPageFile).map(({ pageId }) => pageId);
  const allPageIds = unique(fileIds);
  const allPageIds2 = pageConfigs.map((p13) => p13.pageId);
  return [...allPageIds, ...allPageIds2];
}
var init_getPageConfigsRuntime = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageConfigsRuntime.js"() {
    init_parseGlobResults();
    init_getPageConfigUserFriendly();
    init_utils();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/resolveBase.js
function resolveBase(baseViteOriginal, baseServerUnresolved, baseAssetsUnresolved) {
  if (baseViteOriginal === "/__UNSET__")
    baseViteOriginal = null;
  {
    const wrongBase = (val) => `should start with ${picocolors_default.cyan("/")}, ${picocolors_default.cyan("http://")}, or ${picocolors_default.cyan("https://")} (it's ${picocolors_default.cyan(val)} instead)`;
    assertUsage(baseViteOriginal === null || isBaseAssets(baseViteOriginal), `vite.config.js#base ${wrongBase(baseViteOriginal)}`);
    assertUsage(baseAssetsUnresolved === null || isBaseAssets(baseAssetsUnresolved), `Config ${picocolors_default.cyan("baseAssets")} ${wrongBase(baseAssetsUnresolved)}`);
    assertUsage(baseServerUnresolved === null || baseServerUnresolved.startsWith("/"), `Config ${picocolors_default.cyan("baseServer")} should start with a leading slash ${picocolors_default.cyan("/")} (it's ${picocolors_default.cyan(String(baseServerUnresolved))} instead)`);
  }
  if (baseViteOriginal) {
    if (baseViteOriginal.startsWith("http")) {
      baseAssetsUnresolved = baseAssetsUnresolved ?? baseViteOriginal;
    } else {
      baseAssetsUnresolved = baseAssetsUnresolved ?? baseViteOriginal;
      baseServerUnresolved = baseServerUnresolved ?? baseViteOriginal;
    }
  }
  const baseServer2 = baseServerUnresolved ?? "/";
  const baseAssets = baseAssetsUnresolved ?? "/";
  assert(isBaseAssets(baseAssets));
  assert(isBaseServer(baseServer2));
  return {
    baseServer: baseServer2,
    baseAssets
  };
}
var init_resolveBase = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/shared/resolveBase.js"() {
    init_utils2();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/globalContext.js
async function getGlobalContextInternal() {
  assert(globalObject9.isInitialized);
  assertGlobalContextIsDefined();
  if (globalObject9.isProduction !== true)
    await globalObject9.waitForUserFilesUpdate;
  const { globalContext } = globalObject9;
  assertIsDefined(globalContext);
  return globalContext;
}
function assertIsDefined(globalContext) {
  if (!globalContext) {
    debug4("globalContext", globalContext);
    debug4("assertIsDefined()", new Error().stack);
    assert(false);
  }
}
function assertGlobalContextIsDefined() {
  assertIsDefined(globalObject9.globalContext);
  assert(globalObject9.globalContext_public);
}
function makePublic(globalContext) {
  const globalContextPublic = makePublicCopy(globalContext, "globalContext", [
    "assetsManifest",
    "config",
    "viteConfig",
    "viteConfigRuntime",
    "pages",
    "baseServer",
    "baseAssets"
  ]);
  return globalContextPublic;
}
async function initGlobalContext_renderPage() {
  debug4("initGlobalContext_renderPage()");
  if (globalObject9.isProduction === void 0)
    setIsProduction(true);
  await initGlobalContext();
}
async function waitForViteDevServer() {
  debug4("waitForViteDevServer()");
  const waitFor = 20;
  const timeout = setTimeout(() => {
    assertWarning2(false, `Vite's development server still not created after ${waitFor} seconds.`, {
      onlyOnce: false,
      showStackTrace: true
    });
  }, waitFor * 1e3);
  await globalObject9.viteDevServerPromise;
  clearTimeout(timeout);
  assertGlobalContextIsDefined();
}
async function initGlobalContext() {
  const { isProduction } = globalObject9;
  assert(typeof isProduction === "boolean");
  if (!isProduction) {
    await waitForViteDevServer();
  } else {
    await loadBuildEntry(globalObject9.viteConfigRuntime?.build.outDir);
  }
  assertGlobalContextIsDefined();
  globalObject9.isInitialized = true;
}
function setIsProduction(isProduction) {
  debug4("setIsProduction", isProduction);
  assert(typeof isProduction === "boolean");
  if (globalObject9.isProduction !== void 0)
    assert(globalObject9.isProduction === isProduction);
  globalObject9.isProduction = isProduction;
}
function defineGlobalContext() {
  const globalContext = resolveGlobalContext();
  assertIsDefined(globalContext);
  const globalContext_public = makePublic(globalContext);
  objectAssign(globalContext, { globalContext_public });
  globalObject9.globalContext = globalContext;
  globalObject9.globalContext_public = globalContext_public;
  assertGlobalContextIsDefined();
  onSetupRuntime();
}
function resolveGlobalContext() {
  const { viteDevServer, viteConfig, viteConfigRuntime, isPrerendering, isProduction, userFiles } = globalObject9;
  assert(typeof isProduction === "boolean");
  let globalContext;
  if (!isProduction) {
    if (!viteDevServer)
      return null;
    assert(userFiles);
    assert(viteConfig);
    assert(viteConfigRuntime);
    assert(!isPrerendering);
    globalContext = {
      isProduction: false,
      isPrerendering: false,
      assetsManifest: null,
      viteDevServer,
      viteConfig,
      ...userFiles,
      viteConfigRuntime,
      ...resolveBaseRuntime(viteConfigRuntime, userFiles.config)
    };
  } else {
    if (!globalObject9.buildEntry)
      return null;
    assert(userFiles);
    const { buildInfo, assetsManifest } = globalObject9;
    assert(buildInfo);
    assert(assetsManifest);
    const globalContext_ = {
      isProduction: true,
      assetsManifest,
      ...userFiles,
      viteDevServer: null,
      viteConfigRuntime: buildInfo.viteConfigRuntime,
      usesClientRouter: buildInfo.usesClientRouter,
      ...resolveBaseRuntime(buildInfo.viteConfigRuntime, userFiles.config)
    };
    if (isPrerendering) {
      assert(viteConfig);
      objectAssign(globalContext_, {
        isPrerendering: true,
        viteConfig
      });
      globalContext = globalContext_;
    } else {
      objectAssign(globalContext_, {
        isPrerendering: false,
        viteConfig: null
      });
      globalContext = globalContext_;
    }
  }
  return globalContext;
}
async function getUserFiles() {
  const globalObject_ = globalObject9;
  const { pageConfigsRuntime } = globalObject_;
  assert(pageConfigsRuntime);
  const { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal, globalConfig, pageConfigsUserFriendly } = pageConfigsRuntime;
  const { pageRoutes, onBeforeRouteHook } = await loadPageRoutes(pageFilesAll, pageConfigs, pageConfigGlobal, allPageIds);
  const userFiles = {
    pageFilesAll,
    pageConfigs,
    pageConfigGlobal,
    allPageIds,
    pageRoutes,
    onBeforeRouteHook,
    pages: pageConfigsUserFriendly,
    config: globalConfig.config
  };
  assertV1Design(
    // pageConfigs is PageConfigRuntime[] but assertV1Design() requires PageConfigBuildTime[]
    pageConfigs.length > 0,
    pageFilesAll
  );
  return userFiles;
}
function assertViteManifest(manifest) {
  assert(isPlainObject(manifest));
}
async function loadBuildEntry(outDir) {
  debug4("loadBuildEntry()");
  if (globalObject9.userFiles) {
    assert(globalObject9.buildInfo);
    assert(globalObject9.assetsManifest);
    assert(globalObject9.buildEntry);
    return;
  }
  if (!globalObject9.buildEntry) {
    debug4("importServerProductionEntry()");
    await importServerProductionEntry({ outDir });
    if (!globalObject9.buildEntry) {
      debug4("globalObject.buildEntryPrevious");
      globalObject9.buildEntry = globalObject9.buildEntryPrevious;
    }
    assert(globalObject9.buildEntry);
    assertWarning2(
      // vike-server => `vitePluginServerEntry.inject === true`
      // vike-node => `vitePluginServerEntry.inject === [ 'index' ]`
      globalObject9.buildInfo?.viteConfigRuntime.vitePluginServerEntry.inject !== true,
      /* TO-DO/eventually:
      !!globalObject.buildInfo?.viteConfigRuntime.vitePluginServerEntry.inject,
      */
      `Run the built server entry (e.g. ${picocolors_default.cyan("$ node dist/server/index.mjs")}) instead of the original server entry (e.g. ${picocolors_default.cyan("$ ts-node server/index.ts")})`,
      { onlyOnce: true }
    );
  }
  const { buildEntry } = globalObject9;
  assertBuildEntry(buildEntry);
  globalObject9.assetsManifest = buildEntry.assetsManifest;
  globalObject9.buildInfo = buildEntry.buildInfo;
  await setUserFiles(buildEntry.virtualFileExports);
}
async function setGlobalContext_buildEntry(buildEntry) {
  debug4("setGlobalContext_buildEntry()");
  setIsProduction(true);
  assertBuildEntry(buildEntry);
  globalObject9.buildEntry = buildEntry;
  globalObject9.buildEntryPrevious = buildEntry;
  assert(globalObject9.buildEntry);
  await loadBuildEntry();
  assertGlobalContextIsDefined();
}
function assertBuildEntry(buildEntry) {
  assert(isObject(buildEntry));
  assert(hasProp(buildEntry, "virtualFileExports", "object"));
  const { virtualFileExports: virtualFileExports2 } = buildEntry;
  assert(hasProp(buildEntry, "assetsManifest", "object"));
  const { assetsManifest } = buildEntry;
  assertViteManifest(assetsManifest);
  assert(hasProp(buildEntry, "buildInfo", "object"));
  const { buildInfo } = buildEntry;
  assertBuildInfo(buildInfo);
  checkType({ virtualFileExports: virtualFileExports2, assetsManifest, buildInfo });
}
function assertBuildInfo(buildInfo) {
  assert(isObject(buildInfo));
  assert(hasProp(buildInfo, "versionAtBuildTime", "string"));
  assertVersionAtBuildTime(buildInfo.versionAtBuildTime);
  assert(hasProp(buildInfo, "viteConfigRuntime", "object"));
  assert(hasProp(buildInfo.viteConfigRuntime, "_baseViteOriginal", "string"));
  assert(hasProp(buildInfo.viteConfigRuntime, "root", "string"));
  assert(hasProp(buildInfo.viteConfigRuntime, "build", "object"));
  assert(hasProp(buildInfo.viteConfigRuntime.build, "outDir", "string"));
  assert(hasProp(buildInfo.viteConfigRuntime, "vitePluginServerEntry", "object"));
  assert(hasProp(buildInfo, "usesClientRouter", "boolean"));
}
function assertVersionAtBuildTime(versionAtBuildTime) {
  const versionAtRuntime = PROJECT_VERSION;
  const pretty = (version) => picocolors_default.bold(`vike@${version}`);
  assertUsage(versionAtBuildTime === versionAtRuntime, `Re-build your app (you're using ${pretty(versionAtRuntime)} but your app was built with ${pretty(versionAtBuildTime)})`);
}
async function setUserFiles(virtualFileExports2) {
  globalObject9.pageConfigsRuntime = getPageConfigsRuntime(virtualFileExports2);
  const userFiles = await getUserFiles();
  globalObject9.userFiles = userFiles;
  defineGlobalContext();
  assertGlobalContextIsDefined();
}
function getInitialGlobalContext() {
  debug4("getInitialGlobalContext()");
  const { promise: viteDevServerPromise, resolve: viteDevServerPromiseResolve } = genPromise();
  return {
    viteDevServerPromise,
    viteDevServerPromiseResolve
  };
}
function resolveBaseRuntime(viteConfigRuntime, config) {
  const baseViteOriginal = viteConfigRuntime._baseViteOriginal;
  const baseServerUnresolved = config.baseServer ?? null;
  const baseAssetsUnresolved = config.baseAssets ?? null;
  return resolveBase(baseViteOriginal, baseServerUnresolved, baseAssetsUnresolved);
}
var debug4, globalObject9;
var init_globalContext = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/globalContext.js"() {
    init_utils3();
    init_runtime();
    init_virtualFileImportUserCode();
    init_picocolors();
    init_loadPageRoutes();
    init_assertV1Design();
    init_getPageConfigsRuntime();
    init_resolveBase();
    debug4 = createDebugger("vike:globalContext");
    globalObject9 = getGlobalObject("runtime/globalContext.ts", getInitialGlobalContext());
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContextRequestUrl.js
var pageContextJsonFileExtension, doNotCreateExtraDirectory;
var init_getPageContextRequestUrl = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/getPageContextRequestUrl.js"() {
    init_urlToFile();
    pageContextJsonFileExtension = ".pageContext.json";
    doNotCreateExtraDirectory = false;
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/handlePageContextRequestUrl.js
function handlePageContextRequestUrl(url) {
  if (!hasSuffix(url)) {
    return { urlWithoutPageContextRequestSuffix: url, isPageContextRequest: false };
  }
  return { urlWithoutPageContextRequestSuffix: removePageContextUrlSuffix(url), isPageContextRequest: true };
}
function hasSuffix(url) {
  const { pathnameOriginal, pathname } = parseUrl(url, baseServer);
  assert(pathnameOriginal.endsWith(pageContextJsonFileExtension) === pathname.endsWith(pageContextJsonFileExtension), {
    url
  });
  return pathnameOriginal.endsWith(pageContextJsonFileExtension);
}
function removePageContextUrlSuffix(url) {
  const urlParsed = parseUrl(url, baseServer);
  const { origin, pathnameOriginal, searchOriginal, hashOriginal } = urlParsed;
  assert(doNotCreateExtraDirectory === false);
  const urlSuffix = `/index${pageContextJsonFileExtension}`;
  assert(pathnameOriginal.endsWith(urlSuffix), { url });
  let pathnameModified = slice(pathnameOriginal, 0, -1 * urlSuffix.length);
  if (pathnameModified === "")
    pathnameModified = "/";
  assert(url === `${origin || ""}${pathnameOriginal}${searchOriginal || ""}${hashOriginal || ""}`, { url });
  return `${origin || ""}${pathnameModified}${searchOriginal || ""}${hashOriginal || ""}`;
}
var init_handlePageContextRequestUrl = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/handlePageContextRequestUrl.js"() {
    init_getPageContextRequestUrl();
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/assertArguments.js
function assertArguments(...args) {
  const prefix2 = `${picocolors_default.code("renderPage(pageContextInit)")} (https://vike.dev/renderPage)`;
  const pageContextInit = args[0];
  assertUsage(pageContextInit !== void 0 && pageContextInit !== null, prefix2 + ` argument ${picocolors_default.cyan("pageContextInit")} is missing`, { showStackTrace: true });
  const len = args.length;
  assertUsage(len === 1, `${prefix2} called with ${len} arguments but renderPage() accepts only one argument.'`, {
    showStackTrace: true
  });
  assertUsage(isObject(pageContextInit), `${prefix2} called with ${picocolors_default.code(`typeof pageContextInit === ${JSON.stringify(typeof pageContextInit)}`)} but ${picocolors_default.code("pageContextInit")} should be an object.`, { showStackTrace: true });
  if ("url" in pageContextInit) {
    assertWarning2(false, "`pageContextInit.url` has been renamed to `pageContextInit.urlOriginal`: replace `renderPage({ url })` with `renderPage({ urlOriginal })`. (See https://vike.dev/migration/0.4.23 for more information.)", { showStackTrace: true, onlyOnce: true });
    pageContextInit.urlOriginal = pageContextInit.url;
    delete pageContextInit.url;
  }
  assert(!("url" in pageContextInit));
  assertUsage(hasProp(pageContextInit, "urlOriginal"), prefix2 + ` ${picocolors_default.cyan("pageContextInit")} is missing the property ${picocolors_default.cyan("pageContextInit.urlOriginal")}`, { showStackTrace: true });
  const { urlOriginal } = pageContextInit;
  assertUsage(typeof urlOriginal === "string", prefix2 + ` ${picocolors_default.cyan("pageContextInit.urlOriginal")} should be a string but ${picocolors_default.cyan(`typeof pageContextInit.urlOriginal === ${JSON.stringify(typeof urlOriginal)}`)}`, { showStackTrace: true });
  assertUsage(urlOriginal.startsWith("/") || urlOriginal.startsWith("https://") || urlOriginal.startsWith("http://"), prefix2 + ` ${picocolors_default.cyan("pageContextInit.urlOriginal")} should start with ${picocolors_default.cyan("/")} (e.g. ${picocolors_default.cyan("/product/42")}), ${picocolors_default.cyan("http://")}, or ${picocolors_default.cyan("https://")} (e.g. ${picocolors_default.cyan("https://example.com/product/42")}), but ${picocolors_default.cyan(`pageContextInit.urlOriginal === ${JSON.stringify(urlOriginal)}`)}`, { showStackTrace: true });
  const urlOriginalWithoutOrigin = urlOriginal.startsWith("http") ? urlOriginal : "http://fake-origin.example.org" + urlOriginal;
  try {
    new URL(urlOriginalWithoutOrigin);
  } catch (err) {
    assertUsage(false, prefix2 + ` ${picocolors_default.cyan("pageContextInit.urlOriginal")} should be a URL but ${picocolors_default.cyan(`pageContextInit.urlOriginal === ${JSON.stringify(urlOriginal)}`)}`, { showStackTrace: true });
  }
}
var init_assertArguments = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/assertArguments.js"() {
    init_utils3();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/noRouteMatch.js
var noRouteMatch;
var init_noRouteMatch = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/noRouteMatch.js"() {
    noRouteMatch = "doesn't match the route of any of your pages";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/log404/index.js
async function log404(pageContext) {
  const { urlPathname } = pageContext;
  const pageRoutes = pageContext._pageRoutes;
  assertUsage(
    pageRoutes.length > 0,
    "No page found."
    /* TODO/v1-release: use this
    'No page found. Create at least one /pages/some-page/+Page.js file.'
    */
  );
  const globalContext = pageContext._globalContext;
  if (!globalContext.isProduction && !isFileRequest(urlPathname) && !pageContext.isClientSideNavigation) {
    const routesInfo = getRoutesInfo(pageRoutes);
    let msg = `URL ${picocolors_default.cyan(urlPathname)} ${noRouteMatch}`;
    const outro = "See https://vike.dev/routing for more information about routing.";
    if (!routesInfo) {
      msg = `${msg}. ${picocolors_default.dim(outro)}`;
    } else {
      msg = `${msg}:
${routesInfo}
${outro}`;
    }
    assertInfo(false, msg, { onlyOnce: false });
  }
}
function getRoutesInfo(pageRoutes) {
  const entries = pageRoutes.map((pageRoute) => {
    let routeStr;
    let routeTypeSrc;
    let routeDefinedBy;
    if (pageRoute.routeType === "FILESYSTEM") {
      assert(pageRoute.routeFilesystemDefinedBy);
      routeDefinedBy = pageRoute.routeFilesystemDefinedBy;
    } else {
      assert(pageRoute.routeDefinedAtString);
      routeDefinedBy = pageRoute.routeDefinedAtString;
    }
    if (pageRoute.routeType === "STRING") {
      routeStr = pageRoute.routeString;
      routeTypeSrc = "Route String";
    } else if (pageRoute.routeType === "FUNCTION") {
      routeStr = String(pageRoute.routeFunction);
      routeTypeSrc = "Route Function";
    } else {
      routeStr = pageRoute.routeString;
      routeTypeSrc = "Filesystem Route";
    }
    assert(routeStr && routeTypeSrc && routeDefinedBy);
    return { routeStr, routeTypeSrc, routeDefinedBy };
  }).sort((e1, e22) => {
    if (e1.routeTypeSrc !== "Route Function" && e22.routeTypeSrc === "Route Function") {
      return -1;
    }
    if (e1.routeTypeSrc === "Route Function" && e22.routeTypeSrc !== "Route Function") {
      return 1;
    }
    return compareString(e1.routeStr, e22.routeStr);
  });
  const linesContent = [
    {
      routeStr: "ROUTE",
      routeTypeSrc: "TYPE",
      routeDefinedBy: "DEFINED BY"
    },
    ...entries
  ];
  const terminalWidth = getTerminalWidth() || 134;
  let width2 = Math.max(...linesContent.map(({ routeTypeSrc }) => stripAnsi(routeTypeSrc).length));
  let width3 = Math.max(...linesContent.map(({ routeDefinedBy }) => stripAnsi(routeDefinedBy).length));
  const width1_max = terminalWidth - width3 - width2 - // Total width of table border & padding
  10;
  if (width1_max < 10)
    return null;
  linesContent.forEach((lineContent) => {
    let { routeStr } = lineContent;
    if (lineContent.routeTypeSrc === "Route Function") {
      routeStr = truncateRouteFunction(routeStr, width1_max);
      assert(stripAnsi(routeStr).length <= width1_max);
    }
    lineContent.routeStr = routeStr;
  });
  let width1 = Math.max(...linesContent.map(({ routeStr }) => stripAnsi(routeStr).length));
  if (width1 > width1_max)
    return null;
  let lines = linesContent.map(({ routeStr, routeTypeSrc, routeDefinedBy }, i11) => {
    let cell1 = padEnd(routeStr, width1 + (stripAnsi(routeStr).length - stripAnsi(routeStr).length));
    let cell2 = padEnd(routeTypeSrc, width2);
    let cell3 = padEnd(routeDefinedBy, width3);
    const isHeader = i11 === 0;
    if (isHeader) {
      cell1 = picocolors_default.dim(cell1);
      cell2 = picocolors_default.dim(cell2);
      cell3 = picocolors_default.dim(cell3);
    }
    let line = [cell1, cell2, cell3].join(picocolors_default.dim(" \u2502 "));
    line = picocolors_default.dim("\u2502 ") + line + picocolors_default.dim(" \u2502");
    return line;
  });
  width1 = width1 + 2;
  width2 = width2 + 2;
  width3 = width3 + 2;
  lines = [
    picocolors_default.dim(`\u250C${"\u2500".repeat(width1)}\u252C${"\u2500".repeat(width2)}\u252C${"\u2500".repeat(width3)}\u2510`),
    lines[0],
    picocolors_default.dim(`\u251C${"\u2500".repeat(width1)}\u253C${"\u2500".repeat(width2)}\u253C${"\u2500".repeat(width3)}\u2524`),
    ...lines.slice(1),
    picocolors_default.dim(`\u2514${"\u2500".repeat(width1)}\u2534${"\u2500".repeat(width2)}\u2534${"\u2500".repeat(width3)}\u2518`)
  ];
  lines.forEach((line) => {
    assert(stripAnsi(line).length <= terminalWidth);
  });
  return lines.join("\n");
}
function truncateRouteFunction(routeStr, lenMax) {
  routeStr = stripAnsi(routeStr);
  routeStr = removeNonAscii(routeStr);
  routeStr = routeStr.split(/\s/).filter(Boolean).join(" ");
  routeStr = truncateString(routeStr, lenMax);
  return routeStr;
}
function padEnd(str, width) {
  const padWidth = Math.max(0, width - stripAnsi(str).length);
  return str + "".padEnd(padWidth, " ");
}
function removeNonAscii(str) {
  return str.replace(/[^\x00-\x7F]/g, "");
}
function isFileRequest(urlPathname) {
  assert(urlPathname.startsWith("/"));
  const paths2 = urlPathname.split("/");
  const lastPath = paths2[paths2.length - 1];
  assert(typeof lastPath === "string");
  const parts = lastPath.split(".");
  if (parts.length < 2) {
    return false;
  }
  const fileExtension = parts[parts.length - 1];
  assert(typeof fileExtension === "string");
  return /^[a-z0-9]+$/.test(fileExtension);
}
var init_log404 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/log404/index.js"() {
    init_noRouteMatch();
    init_utils3();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isVikeConfigInvalid.js
var isVikeConfigInvalid;
var init_isVikeConfigInvalid = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/isVikeConfigInvalid.js"() {
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/handleErrorWithoutErrorPage.js
async function handleErrorWithoutErrorPage(pageContext) {
  assert(pageContext.pageId === null);
  assert(pageContext.errorWhileRendering || pageContext.is404);
  {
    const isV1 = pageContext._pageConfigs.length > 0;
    await warnMissingErrorPage(isV1, pageContext._globalContext.isProduction);
  }
  if (!pageContext.isClientSideNavigation) {
    const httpResponse = createHttpResponseError(pageContext);
    objectAssign(pageContext, { httpResponse });
    return pageContext;
  } else {
    const __getPageAssets = async () => [];
    objectAssign(pageContext, { __getPageAssets });
    const httpResponse = await createHttpResponsePage((0, import_stringify2.stringify)({ serverSideError: true }), null, pageContext);
    objectAssign(pageContext, { httpResponse });
    return pageContext;
  }
}
async function warnMissingErrorPage(isV1, isProduction) {
  if (!isProduction) {
    const msg = [
      `No ${isV1 ? "error page" : picocolors_default.cyan("_error.page.js")} found,`,
      "we recommend defining one",
      "https://vike.dev/error-page"
    ].join(" ");
    assertWarning2(false, msg, { onlyOnce: true });
  }
}
var import_stringify2;
var init_handleErrorWithoutErrorPage = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/handleErrorWithoutErrorPage.js"() {
    import_stringify2 = __toESM(require_stringify(), 1);
    init_utils3();
    init_createHttpResponse();
    init_picocolors();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveUrlPathname.js
function resolveUrlPathname(routeString, routeParams) {
  let parts = [{ val: routeString, type: "ROUTE_STRING" }];
  Object.entries(routeParams).forEach(([key, val]) => {
    if (key.startsWith("*")) {
      assert(key === "*" || /\d+/.test(key.slice(1)));
      assertUsage(key === "*", "Resolving URL with multiple globs isn't implemented yet");
    } else {
      key = `@${key}`;
    }
    parts = parts.map((part) => {
      if (part.type === "URL") {
        return part;
      } else {
        return part.val.split(key).map((rest, i11) => {
          const partURL = { val, type: "URL" };
          const partRouteString = { val: rest, type: "ROUTE_STRING" };
          return i11 === 0 ? [partRouteString] : [partURL, partRouteString];
        }).flat();
      }
    }).flat();
  });
  const urlPathname = parts.map((p13) => p13.val).join("");
  return urlPathname;
}
var init_resolveUrlPathname = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/shared/route/resolveUrlPathname.js"() {
    init_assertIsNotBrowser();
    init_utils();
    assertIsNotBrowser();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/resolveRedirects.js
function resolveRedirects(redirectsAll, urlPathname) {
  const redirects = merge(redirectsAll);
  for (const [urlSource, urlTarget] of Object.entries(redirects)) {
    const urlResolved = resolveRouteStringRedirect(urlSource, urlTarget, urlPathname);
    if (urlResolved)
      return urlResolved;
  }
  return null;
}
function resolveRouteStringRedirect(urlSource, urlTarget, urlPathname) {
  assertRouteString(urlSource, `${redirectsErrPrefix} Invalid`);
  assertUsageUrlRedirectTarget(urlTarget, `${redirectsErrPrefix} The URL redirection target`, true);
  assertParams(urlSource, urlTarget);
  const match = resolveRouteString(urlSource, urlPathname);
  if (!match)
    return null;
  const urlResolved = resolveUrlPathname(urlTarget, match.routeParams);
  if (urlResolved === urlPathname)
    return null;
  assert(isUrlRedirectTarget(urlResolved));
  return urlResolved;
}
function assertParams(urlSource, urlTarget) {
  const routeSegments = urlTarget.split("/");
  routeSegments.forEach((routeSegment) => {
    if (routeSegment.startsWith("@") || routeSegment.startsWith("*")) {
      const segments = urlSource.split("/");
      assertUsage(segments.includes(routeSegment), `${redirectsErrPrefix} The redirection source URL ${picocolors_default.string(urlSource)} is missing the URL parameter ${picocolors_default.string(routeSegment)} used by the redirection target URL ${picocolors_default.string(urlTarget)}`);
    }
  });
}
function merge(objs) {
  const obj = {};
  objs.forEach((e12) => {
    Object.assign(obj, e12);
  });
  return obj;
}
var redirectsErrPrefix;
var init_resolveRedirects = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage/resolveRedirects.js"() {
    init_assertIsNotBrowser();
    init_utils();
    init_resolveUrlPathname();
    init_resolveRouteString();
    init_picocolors();
    assertIsNotBrowser();
    redirectsErrPrefix = "[+redirects]";
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage.js
async function renderPage(pageContextInit) {
  assertArguments(...arguments);
  assert(hasProp(pageContextInit, "urlOriginal", "string"));
  assertIsUrl(pageContextInit.urlOriginal);
  onSetupRuntime();
  const pageContextInvalidRequest = renderInvalidRequest(pageContextInit);
  if (pageContextInvalidRequest)
    return pageContextInvalidRequest;
  const httpRequestId = getRequestId();
  const urlOriginalPretty = getUrlPretty(pageContextInit.urlOriginal);
  logHttpRequest(urlOriginalPretty, httpRequestId);
  const { pageContextReturn } = await asyncHookWrapper(httpRequestId, () => renderPageAndPrepare(pageContextInit, httpRequestId));
  logHttpResponse(urlOriginalPretty, httpRequestId, pageContextReturn);
  checkType(pageContextReturn);
  assert(pageContextReturn.httpResponse);
  return pageContextReturn;
}
async function renderPageAndPrepare(pageContextInit, httpRequestId) {
  if (isVikeConfigInvalid) {
    if (1 < 2) {
      return renderInvalidVikeConfig(isVikeConfigInvalid.err, pageContextInit, httpRequestId);
    }
  }
  try {
    await initGlobalContext_renderPage();
  } catch (err) {
    assert(!isAbortError(err));
    logRuntimeError(err, httpRequestId);
    const pageContextWithError = getPageContextHttpResponseError(err, pageContextInit, null);
    return pageContextWithError;
  }
  if (isVikeConfigInvalid) {
    return renderInvalidVikeConfig(isVikeConfigInvalid.err, pageContextInit, httpRequestId);
  } else {
  }
  const globalContext = await getGlobalContextInternal();
  {
    const pageContextHttpResponse = await checkBaseUrl(pageContextInit, globalContext);
    if (pageContextHttpResponse)
      return pageContextHttpResponse;
  }
  {
    const pageContextHttpResponse = await normalizeUrl(pageContextInit, globalContext, httpRequestId);
    if (pageContextHttpResponse)
      return pageContextHttpResponse;
  }
  {
    const pageContextHttpResponse = await getPermanentRedirect(pageContextInit, globalContext, httpRequestId);
    if (pageContextHttpResponse)
      return pageContextHttpResponse;
  }
  return await renderPageAlreadyPrepared(pageContextInit, globalContext, httpRequestId, []);
}
async function renderPageAlreadyPrepared(pageContextInit, globalContext, httpRequestId, pageContextsFromRewrite) {
  assertNoInfiniteAbortLoop(
    pageContextsFromRewrite.length,
    // There doesn't seem to be a way to count the number of HTTP redirects (vike don't have access to the HTTP request headers/cookies)
    // https://stackoverflow.com/questions/9683007/detect-infinite-http-redirect-loop-on-server-side
    0
  );
  let pageContextNominalPageSuccess;
  const pageContextFromAllRewrites = getPageContextFromAllRewrites(pageContextsFromRewrite);
  const pageContextNominalPageInit = await getPageContextInitEnhancedSSR(pageContextInit, globalContext, pageContextFromAllRewrites._urlRewrite, httpRequestId);
  objectAssign(pageContextNominalPageInit, pageContextFromAllRewrites);
  let errNominalPage;
  {
    try {
      pageContextNominalPageSuccess = await renderPageNominal(pageContextNominalPageInit);
    } catch (err) {
      errNominalPage = err;
      assert(errNominalPage);
      logRuntimeError(errNominalPage, httpRequestId);
    }
    if (!errNominalPage) {
      assert(pageContextNominalPageSuccess === pageContextNominalPageInit);
    }
  }
  if (pageContextNominalPageSuccess && "is404" in pageContextNominalPageSuccess && pageContextNominalPageSuccess.is404 === true) {
    await log404(pageContextNominalPageSuccess);
  }
  if (errNominalPage === void 0) {
    assert(pageContextNominalPageSuccess);
    return pageContextNominalPageSuccess;
  } else {
    assert(errNominalPage);
    assert(pageContextNominalPageSuccess === void 0);
    assert(pageContextNominalPageInit);
    assert(hasProp(pageContextNominalPageInit, "urlOriginal", "string"));
    const pageContextErrorPageInit = await getPageContextErrorPageInit(pageContextInit, globalContext, errNominalPage, pageContextNominalPageInit, httpRequestId);
    if (isAbortError(errNominalPage)) {
      const handled = await handleAbortError(errNominalPage, pageContextsFromRewrite, pageContextInit, pageContextNominalPageInit, httpRequestId, pageContextErrorPageInit, globalContext);
      if (handled.pageContextReturn) {
        return handled.pageContextReturn;
      } else {
      }
      Object.assign(pageContextErrorPageInit, handled.pageContextAbort);
    }
    {
      const errorPageId = getErrorPageId(globalContext.pageFilesAll, globalContext.pageConfigs);
      if (!errorPageId) {
        objectAssign(pageContextErrorPageInit, { pageId: null });
        return handleErrorWithoutErrorPage(pageContextErrorPageInit);
      } else {
        objectAssign(pageContextErrorPageInit, { pageId: errorPageId });
      }
    }
    let pageContextErrorPage;
    try {
      pageContextErrorPage = await renderPageAlreadyRouted(pageContextErrorPageInit);
    } catch (errErrorPage) {
      if (isAbortError(errErrorPage)) {
        const handled = await handleAbortError(errErrorPage, pageContextsFromRewrite, pageContextInit, pageContextNominalPageInit, httpRequestId, pageContextErrorPageInit, globalContext);
        if (!handled.pageContextReturn) {
          const pageContextAbort = errErrorPage._pageContextAbort;
          assertWarning2(false, `Failed to render error page because ${picocolors_default.cyan(pageContextAbort._abortCall)} was called: make sure ${picocolors_default.cyan(pageContextAbort._abortCaller)} doesn't occur while the error page is being rendered.`, { onlyOnce: false });
          const pageContextHttpWithError = getPageContextHttpResponseError(errNominalPage, pageContextInit, pageContextErrorPageInit);
          return pageContextHttpWithError;
        }
        return handled.pageContextReturn;
      }
      if (isNewError(errErrorPage, errNominalPage)) {
        logRuntimeError(errErrorPage, httpRequestId);
      }
      const pageContextWithError = getPageContextHttpResponseError(errNominalPage, pageContextInit, pageContextErrorPageInit);
      return pageContextWithError;
    }
    return pageContextErrorPage;
  }
}
function logHttpRequest(urlOriginal, httpRequestId) {
  logRuntimeInfo?.(getRequestInfoMessage(urlOriginal), httpRequestId, "info");
}
function getRequestInfoMessage(urlOriginal) {
  return `HTTP request: ${prettyUrl(urlOriginal)}`;
}
function logHttpResponse(urlOriginalPretty, httpRequestId, pageContextReturn) {
  const statusCode = pageContextReturn.httpResponse?.statusCode ?? null;
  let msg;
  let isNominal;
  {
    const { errorWhileRendering } = pageContextReturn;
    const isSkipped = statusCode === null && !errorWhileRendering;
    if (isSkipped) {
      assert(errorWhileRendering === null || errorWhileRendering === void 0);
      msg = `HTTP response ${prettyUrl(urlOriginalPretty)} ${picocolors_default.dim("null")}`;
      isNominal = true;
    } else {
      const isSuccess = statusCode !== null && statusCode >= 200 && statusCode <= 399;
      isNominal = isSuccess || statusCode === 404;
      const color3 = (s37) => picocolors_default.bold(isSuccess ? picocolors_default.green(String(s37)) : picocolors_default.red(String(s37)));
      const isRedirect = statusCode && 300 <= statusCode && statusCode <= 399;
      const type = isRedirect ? "redirect" : "response";
      if (isRedirect) {
        assert(pageContextReturn.httpResponse);
        const headerRedirect = pageContextReturn.httpResponse.headers.slice().reverse().find((header) => header[0] === "Location");
        assert(headerRedirect);
        const urlRedirect = headerRedirect[1];
        urlOriginalPretty = urlRedirect;
      }
      msg = `HTTP ${type} ${prettyUrl(urlOriginalPretty)} ${color3(statusCode ?? "ERR")}`;
    }
  }
  logRuntimeInfo?.(msg, httpRequestId, isNominal ? "info" : "error");
}
function prettyUrl(url) {
  return picocolors_default.bold(decodeURI(url));
}
function getPageContextHttpResponseError(err, pageContextInit, pageContext) {
  const pageContextWithError = createPageContext(pageContextInit, false);
  const httpResponse = createHttpResponseError(pageContext);
  objectAssign(pageContextWithError, {
    httpResponse,
    errorWhileRendering: err
  });
  return pageContextWithError;
}
async function renderPageNominal(pageContext) {
  objectAssign(pageContext, { errorWhileRendering: null });
  {
    const pageContextFromRoute = await route(pageContext);
    objectAssign(pageContext, pageContextFromRoute);
    objectAssign(pageContext, { is404: pageContext.pageId ? null : true });
    if (pageContext.pageId === null) {
      const errorPageId = getErrorPageId(pageContext._pageFilesAll, pageContext._pageConfigs);
      if (!errorPageId) {
        assert(hasProp(pageContext, "pageId", "null"));
        return handleErrorWithoutErrorPage(pageContext);
      }
      objectAssign(pageContext, { pageId: errorPageId });
    }
  }
  assert(hasProp(pageContext, "pageId", "string"));
  assert(pageContext.errorWhileRendering === null);
  const pageContextAfterRender = await renderPageAlreadyRouted(pageContext);
  assert(pageContext === pageContextAfterRender);
  return pageContextAfterRender;
}
async function getPageContextErrorPageInit(pageContextInit, globalContext, errNominalPage, pageContextNominalPagePartial, httpRequestId) {
  const pageContext = await getPageContextInitEnhancedSSR(pageContextInit, globalContext, null, httpRequestId);
  assert(errNominalPage);
  objectAssign(pageContext, {
    is404: false,
    errorWhileRendering: errNominalPage,
    routeParams: {}
  });
  objectAssign(pageContext, {
    _debugRouteMatches: pageContextNominalPagePartial._debugRouteMatches || "ROUTING_ERROR"
  });
  assert(pageContext.errorWhileRendering);
  return pageContext;
}
async function getPageContextInitEnhancedSSR(pageContextInit, globalContext, urlRewrite, httpRequestId) {
  const { isClientSideNavigation, _urlHandler } = handlePageContextUrl(pageContextInit.urlOriginal);
  const pageContextInitEnhanced = await getPageContextInitEnhanced(pageContextInit, globalContext, false, {
    ssr: {
      urlRewrite,
      urlHandler: _urlHandler,
      isClientSideNavigation
    }
  });
  objectAssign(pageContextInitEnhanced, { _httpRequestId: httpRequestId });
  return pageContextInitEnhanced;
}
function handlePageContextUrl(urlOriginal) {
  const { isPageContextRequest } = handlePageContextRequestUrl(urlOriginal);
  return {
    isClientSideNavigation: isPageContextRequest,
    _urlHandler: (url) => handlePageContextRequestUrl(url).urlWithoutPageContextRequestSuffix
  };
}
function getRequestId() {
  const httpRequestId = ++globalObject10.httpRequestsCount;
  assert(httpRequestId >= 1);
  return httpRequestId;
}
function assertIsUrl(urlOriginal) {
  assertUsage(isUrl(urlOriginal), `${picocolors_default.code("renderPage(pageContextInit)")} (https://vike.dev/renderPage) called with ${picocolors_default.code(`pageContextInit.urlOriginal===${JSON.stringify(urlOriginal)}`)} which isn't a valid URL.`);
}
function assertIsNotViteRequest(urlPathname, urlOriginal) {
  const isViteRequest = urlPathname.startsWith("/@vite/client") || urlPathname.startsWith("/@fs/") || urlPathname.startsWith("/__vite_ping");
  if (!isViteRequest)
    return;
  assertUsage(false, `${picocolors_default.code("renderPage(pageContextInit)")} called with ${picocolors_default.code(`pageContextInit.urlOriginal===${JSON.stringify(urlOriginal)}`)} which is unexpected because the URL ${picocolors_default.bold(urlOriginal)} should have already been handled by the development middleware: make sure the ${picocolors_default.cyan("createDevMiddleware()")} middleware is executed *before* the ${picocolors_default.cyan("renderPage()")} middleware, see ${picocolors_default.underline("https://vike.dev/renderPage")}`);
}
async function normalizeUrl(pageContextInit, globalContext, httpRequestId) {
  const { trailingSlash, disableUrlNormalization } = globalContext.config;
  if (disableUrlNormalization)
    return null;
  const { urlOriginal } = pageContextInit;
  const { isPageContextRequest } = handlePageContextRequestUrl(urlOriginal);
  if (isPageContextRequest)
    return null;
  const urlNormalized = normalizeUrlPathname(urlOriginal, trailingSlash ?? false, globalContext.baseServer);
  if (!urlNormalized)
    return null;
  logRuntimeInfo?.(`URL normalized from ${picocolors_default.cyan(urlOriginal)} to ${picocolors_default.cyan(urlNormalized)} (https://vike.dev/url-normalization)`, httpRequestId, "info");
  const httpResponse = createHttpResponseRedirect({ url: urlNormalized, statusCode: 301 }, pageContextInit);
  const pageContextHttpResponse = createPageContext(pageContextInit, false);
  objectAssign(pageContextHttpResponse, { httpResponse });
  return pageContextHttpResponse;
}
async function getPermanentRedirect(pageContextInit, globalContext, httpRequestId) {
  const urlWithoutBase = removeBaseServer2(pageContextInit.urlOriginal, globalContext.baseServer);
  let origin = null;
  let urlTargetExternal = null;
  let urlTarget = modifyUrlPathname(urlWithoutBase, (urlPathname) => {
    const urlTarget2 = resolveRedirects(globalContext.config.redirects ?? [], urlPathname);
    if (urlTarget2 === null)
      return null;
    if (!isUrl(urlTarget2)) {
      assert(isUri(urlTarget2));
      urlTargetExternal = urlTarget2;
      return null;
    }
    const { urlModified, origin: origin_ } = removeUrlOrigin(urlTarget2);
    origin = origin_;
    return urlModified;
  });
  if (urlTargetExternal) {
    urlTarget = urlTargetExternal;
  } else {
    let originChanged = false;
    if (origin) {
      const urlModified = setUrlOrigin(urlTarget, origin);
      if (urlModified !== false) {
        originChanged = true;
        urlTarget = urlModified;
      }
    }
    if (normalize2(urlTarget) === normalize2(urlWithoutBase))
      return null;
    if (!originChanged)
      urlTarget = prependBase(urlTarget, globalContext.baseServer);
    assert(urlTarget !== pageContextInit.urlOriginal);
  }
  logRuntimeInfo?.(`Permanent redirection defined by config.redirects (https://vike.dev/redirects)`, httpRequestId, "info");
  const httpResponse = createHttpResponseRedirect({ url: urlTarget, statusCode: 301 }, pageContextInit);
  const pageContextHttpResponse = createPageContext(pageContextInit, false);
  objectAssign(pageContextHttpResponse, { httpResponse });
  return pageContextHttpResponse;
}
function normalize2(url) {
  return url || "/";
}
async function handleAbortError(errAbort, pageContextsFromRewrite, pageContextInit, pageContextNominalPageInit, httpRequestId, pageContextErrorPageInit, globalContext) {
  logAbortErrorHandled(errAbort, globalContext.isProduction, pageContextNominalPageInit);
  const pageContextAbort = errAbort._pageContextAbort;
  let pageContextSerialized;
  if (pageContextNominalPageInit.isClientSideNavigation) {
    if (pageContextAbort.abortStatusCode) {
      const errorPageId = getErrorPageId(globalContext.pageFilesAll, globalContext.pageConfigs);
      const abortCall = pageContextAbort._abortCall;
      assert(abortCall);
      assertUsage(errorPageId, `You called ${picocolors_default.cyan(abortCall)} but you didn't define an error page, make sure to define one https://vike.dev/error-page`);
      const pageContext = createPageContext({}, false);
      objectAssign(pageContext, { pageId: errorPageId });
      objectAssign(pageContext, pageContextAbort);
      objectAssign(pageContext, pageContextErrorPageInit, true);
      objectAssign(pageContext, await loadUserFilesServerSide(pageContext));
      pageContextSerialized = serializePageContextClientSide(pageContext);
    } else {
      pageContextSerialized = serializePageContextAbort(pageContextAbort);
    }
    const httpResponse = await createHttpResponsePageContextJson(pageContextSerialized);
    const pageContextReturn = { httpResponse };
    return { pageContextReturn };
  }
  if (pageContextAbort._urlRewrite) {
    const pageContextReturn = await renderPageAlreadyPrepared(pageContextInit, globalContext, httpRequestId, [
      ...pageContextsFromRewrite,
      pageContextAbort
    ]);
    Object.assign(pageContextReturn, pageContextAbort);
    return { pageContextReturn };
  }
  if (pageContextAbort._urlRedirect) {
    const pageContextReturn = createPageContext(pageContextInit, false);
    objectAssign(pageContextReturn, pageContextAbort);
    const httpResponse = createHttpResponseRedirect(pageContextAbort._urlRedirect, pageContextInit);
    objectAssign(pageContextReturn, { httpResponse });
    return { pageContextReturn };
  }
  assert(pageContextAbort.abortStatusCode);
  return { pageContextAbort };
}
async function checkBaseUrl(pageContextInit, globalContext) {
  const { baseServer: baseServer2 } = globalContext;
  const { urlOriginal } = pageContextInit;
  const { isBaseMissing } = parseUrl(urlOriginal, baseServer2);
  if (!isBaseMissing)
    return;
  const pageContext = createPageContext(pageContextInit, false);
  const httpResponse = createHttpResponseBaseIsMissing(urlOriginal, baseServer2);
  objectAssign(pageContext, {
    httpResponse,
    isBaseMissing: true
  });
  checkType(pageContext);
  return pageContext;
}
function renderInvalidRequest(pageContextInit) {
  const urlPathnameWithBase = parseUrl(pageContextInit.urlOriginal, "/").pathname;
  assertIsNotViteRequest(urlPathnameWithBase, pageContextInit.urlOriginal);
  if (urlPathnameWithBase.endsWith("/favicon.ico")) {
    const pageContext = createPageContext(pageContextInit, false);
    const httpResponse = createHttpResponseFavicon404();
    objectAssign(pageContext, { httpResponse });
    checkType(pageContext);
    return pageContext;
  }
  return null;
}
function renderInvalidVikeConfig(err, pageContextInit, httpRequestId) {
  logRuntimeInfo?.(picocolors_default.bold(picocolors_default.red("Error while loading a Vike config file, see error above.")), httpRequestId, "error");
  const pageContextWithError = getPageContextHttpResponseError(err, pageContextInit, null);
  return pageContextWithError;
}
var globalObject10, asyncHookWrapper;
var init_renderPage = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/renderPage.js"() {
    init_renderPageAlreadyRouted();
    init_route();
    init_utils3();
    init_abort();
    init_globalContext();
    init_handlePageContextRequestUrl();
    init_createHttpResponse();
    init_loggerRuntime();
    init_isNewError();
    init_assertArguments();
    init_log404();
    init_isVikeConfigInvalid();
    init_picocolors();
    init_serializePageContextClientSide();
    init_error_page();
    init_handleErrorWithoutErrorPage();
    init_loadUserFilesServerSide();
    init_resolveRedirects();
    globalObject10 = getGlobalObject("runtime/renderPage.ts", {
      httpRequestsCount: 0
    });
    asyncHookWrapper = async (_httpRequestId, ret) => ({
      pageContextReturn: await ret()
    });
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime-dev/index.js
var init_runtime_dev = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime-dev/index.js"() {
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/injectAssets__public.js
var init_injectAssets_public = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/html/injectAssets/injectAssets__public.js"() {
    init_utils3();
    init_injectAssets();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/createPageRenderer.js
var init_createPageRenderer = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/createPageRenderer.js"() {
    init_renderPage();
    init_utils3();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/index-common.js
var init_index_common = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/index-common.js"() {
    init_renderPage();
    init_renderHtml();
    init_stream();
    init_utils3();
    init_globalContext();
    init_runtime_dev();
    init_injectAssets_public();
    init_createPageRenderer();
  }
});

// node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/index.js
var init_runtime2 = __esm({
  "node_modules/.pnpm/vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_react@19.1.0__react@19.1.0__vite@6._ccc88ec1d405b1fc4ca02828ddcdcfca/node_modules/vike/dist/esm/node/runtime/index.js"() {
    init_isBrowser();
    init_assert();
    init_index_common();
    assertUsage(!isBrowser(), "It's forbidden to `import { something } from 'vike/server'` on the client-side: the module 'vike/server' is a server-only module.", { showStackTrace: true });
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js"(exports, module) {
    "use strict";
    module.exports = TypeError;
  }
});

// node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/util.inspect.js
var require_util_inspect = __commonJS({
  "node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/util.inspect.js"(exports, module) {
    module.exports = __require("util").inspect;
  }
});

// node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/.pnpm/object-inspect@1.13.4/node_modules/object-inspect/index.js"(exports, module) {
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString2 = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O3) {
      return O3.__proto__;
    } : null);
    function addNumericSeparator(num2, str) {
      if (num2 === Infinity || num2 === -Infinity || num2 !== num2 || num2 && num2 > -1e3 && num2 < 1e3 || $test.call(/e/, str)) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num2 === "number") {
        var int3 = num2 < 0 ? -$floor(-num2) : $floor(num2);
        if (int3 !== num2) {
          var intStr = String(int3);
          var dec = $slice.call(str, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str, sepRegex, "$&_");
    }
    var utilInspect = require_util_inspect();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    var quotes = {
      __proto__: null,
      "double": '"',
      single: "'"
    };
    var quoteREs = {
      __proto__: null,
      "double": /(["\\])/g,
      single: /(['\\])/g
    };
    module.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && !has(quotes, opts.quoteStyle)) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth3 = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth3 && maxDepth3 > 0 && typeof obj === "object") {
        return isArray2(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name2 = nameOf(obj);
        var keys3 = arrObjKeys(obj, inspect);
        return "[Function" + (name2 ? ": " + name2 : " (anonymous)") + "]" + (keys3.length > 0 ? " { " + $join.call(keys3, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement2(obj)) {
        var s37 = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i11 = 0; i11 < attrs.length; i11++) {
          s37 += " " + attrs[i11].name + "=" + wrapQuotes(quote(attrs[i11].value), "double", opts);
        }
        s37 += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s37 += "...";
        }
        s37 += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s37;
      }
      if (isArray2(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs2 = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs2)) {
          return "[" + indentedJoin(xs2, indent) + "]";
        }
        return "[ " + $join.call(xs2, ", ") + " ]";
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth3 - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
          });
        }
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber3(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean2(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString2(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (typeof window !== "undefined" && obj === window) {
        return "{ [object Window] }";
      }
      if (typeof globalThis !== "undefined" && obj === globalThis || typeof global !== "undefined" && obj === global) {
        return "{ [object globalThis] }";
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys2 = arrObjKeys(obj, inspect);
        var isPlainObject2 = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag = !isPlainObject2 && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject2 || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
        if (ys2.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys2, indent) + "}";
        }
        return tag + "{ " + $join.call(ys2, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s37, defaultStyle, opts) {
      var style = opts.quoteStyle || defaultStyle;
      var quoteChar = quotes[style];
      return quoteChar + s37 + quoteChar;
    }
    function quote(s37) {
      return $replace.call(String(s37), /"/g, "&quot;");
    }
    function canTrustToString(obj) {
      return !toStringTag || !(typeof obj === "object" && (toStringTag in obj || typeof obj[toStringTag] !== "undefined"));
    }
    function isArray2(obj) {
      return toStr(obj) === "[object Array]" && canTrustToString(obj);
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && canTrustToString(obj);
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && canTrustToString(obj);
    }
    function isError(obj) {
      return toStr(obj) === "[object Error]" && canTrustToString(obj);
    }
    function isString2(obj) {
      return toStr(obj) === "[object String]" && canTrustToString(obj);
    }
    function isNumber3(obj) {
      return toStr(obj) === "[object Number]" && canTrustToString(obj);
    }
    function isBoolean2(obj) {
      return toStr(obj) === "[object Boolean]" && canTrustToString(obj);
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e12) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e12) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString2.call(obj);
    }
    function nameOf(f11) {
      if (f11.name) {
        return f11.name;
      }
      var m11 = $match.call(functionToString.call(f11), /^function\s*([\w$]+)/);
      if (m11) {
        return m11[1];
      }
      return null;
    }
    function indexOf(xs2, x3) {
      if (xs2.indexOf) {
        return xs2.indexOf(x3);
      }
      for (var i11 = 0, l9 = xs2.length; i11 < l9; i11++) {
        if (xs2[i11] === x3) {
          return i11;
        }
      }
      return -1;
    }
    function isMap(x3) {
      if (!mapSize || !x3 || typeof x3 !== "object") {
        return false;
      }
      try {
        mapSize.call(x3);
        try {
          setSize.call(x3);
        } catch (s37) {
          return true;
        }
        return x3 instanceof Map;
      } catch (e12) {
      }
      return false;
    }
    function isWeakMap(x3) {
      if (!weakMapHas || !x3 || typeof x3 !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x3, weakMapHas);
        try {
          weakSetHas.call(x3, weakSetHas);
        } catch (s37) {
          return true;
        }
        return x3 instanceof WeakMap;
      } catch (e12) {
      }
      return false;
    }
    function isWeakRef(x3) {
      if (!weakRefDeref || !x3 || typeof x3 !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x3);
        return true;
      } catch (e12) {
      }
      return false;
    }
    function isSet(x3) {
      if (!setSize || !x3 || typeof x3 !== "object") {
        return false;
      }
      try {
        setSize.call(x3);
        try {
          mapSize.call(x3);
        } catch (m11) {
          return true;
        }
        return x3 instanceof Set;
      } catch (e12) {
      }
      return false;
    }
    function isWeakSet(x3) {
      if (!weakSetHas || !x3 || typeof x3 !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x3, weakSetHas);
        try {
          weakMapHas.call(x3, weakMapHas);
        } catch (s37) {
          return true;
        }
        return x3 instanceof WeakSet;
      } catch (e12) {
      }
      return false;
    }
    function isElement2(x3) {
      if (!x3 || typeof x3 !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x3 instanceof HTMLElement) {
        return true;
      }
      return typeof x3.nodeName === "string" && typeof x3.getAttribute === "function";
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
      }
      var quoteRE = quoteREs[opts.quoteStyle || "single"];
      quoteRE.lastIndex = 0;
      var s37 = $replace.call($replace.call(str, quoteRE, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s37, "single", opts);
    }
    function lowbyte(c13) {
      var n12 = c13.charCodeAt(0);
      var x3 = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n12];
      if (x3) {
        return "\\" + x3;
      }
      return "\\x" + (n12 < 16 ? "0" : "") + $toUpperCase.call(n12.toString(16));
    }
    function markBoxed(str) {
      return "Object(" + str + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs2) {
      for (var i11 = 0; i11 < xs2.length; i11++) {
        if (indexOf(xs2[i11], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs2, indent) {
      if (xs2.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs2, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray2(obj);
      var xs2 = [];
      if (isArr) {
        xs2.length = obj.length;
        for (var i11 = 0; i11 < obj.length; i11++) {
          xs2[i11] = has(obj, i11) ? inspect(obj[i11], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k4 = 0; k4 < syms.length; k4++) {
          symMap["$" + syms[k4]] = syms[k4];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs2.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs2.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j4 = 0; j4 < syms.length; j4++) {
          if (isEnumerable.call(obj, syms[j4])) {
            xs2.push("[" + inspect(syms[j4]) + "]: " + inspect(obj[syms[j4]], obj));
          }
        }
      }
      return xs2;
    }
  }
});

// node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js
var require_side_channel_list = __commonJS({
  "node_modules/.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js"(exports, module) {
    "use strict";
    var inspect = require_object_inspect();
    var $TypeError = require_type();
    var listGetNode = function(list3, key, isDelete) {
      var prev = list3;
      var curr;
      for (; (curr = prev.next) != null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          if (!isDelete) {
            curr.next = /** @type {NonNullable<typeof list.next>} */
            list3.next;
            list3.next = curr;
          }
          return curr;
        }
      }
    };
    var listGet = function(objects, key) {
      if (!objects) {
        return void 0;
      }
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function(objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */
        {
          // eslint-disable-line no-param-reassign, no-extra-parens
          key,
          next: objects.next,
          value
        };
      }
    };
    var listHas = function(objects, key) {
      if (!objects) {
        return false;
      }
      return !!listGetNode(objects, key);
    };
    var listDelete = function(objects, key) {
      if (objects) {
        return listGetNode(objects, key, true);
      }
    };
    module.exports = function getSideChannelList() {
      var $o2;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          var root5 = $o2 && $o2.next;
          var deletedNode = listDelete($o2, key);
          if (deletedNode && root5 && root5 === deletedNode) {
            $o2 = void 0;
          }
          return !!deletedNode;
        },
        get: function(key) {
          return listGet($o2, key);
        },
        has: function(key) {
          return listHas($o2, key);
        },
        set: function(key, value) {
          if (!$o2) {
            $o2 = {
              next: void 0
            };
          }
          listSet(
            /** @type {NonNullable<typeof $o>} */
            $o2,
            key,
            value
          );
        }
      };
      return channel;
    };
  }
});

// node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js
var require_es_object_atoms = __commonJS({
  "node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js"(exports, module) {
    "use strict";
    module.exports = Object;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js"(exports, module) {
    "use strict";
    module.exports = Error;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"(exports, module) {
    "use strict";
    module.exports = EvalError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js"(exports, module) {
    "use strict";
    module.exports = RangeError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js"(exports, module) {
    "use strict";
    module.exports = ReferenceError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js"(exports, module) {
    "use strict";
    module.exports = SyntaxError;
  }
});

// node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js"(exports, module) {
    "use strict";
    module.exports = URIError;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js
var require_abs = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js"(exports, module) {
    "use strict";
    module.exports = Math.abs;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js
var require_floor = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js"(exports, module) {
    "use strict";
    module.exports = Math.floor;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js
var require_max = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js"(exports, module) {
    "use strict";
    module.exports = Math.max;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js
var require_min = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js"(exports, module) {
    "use strict";
    module.exports = Math.min;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js
var require_pow = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js"(exports, module) {
    "use strict";
    module.exports = Math.pow;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js
var require_round = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js"(exports, module) {
    "use strict";
    module.exports = Math.round;
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js"(exports, module) {
    "use strict";
    module.exports = Number.isNaN || function isNaN2(a12) {
      return a12 !== a12;
    };
  }
});

// node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js
var require_sign = __commonJS({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js"(exports, module) {
    "use strict";
    var $isNaN = require_isNaN();
    module.exports = function sign(number4) {
      if ($isNaN(number4) || number4 === 0) {
        return number4;
      }
      return number4 < 0 ? -1 : 1;
    };
  }
});

// node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js
var require_gOPD = __commonJS({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js"(exports, module) {
    "use strict";
    module.exports = Object.getOwnPropertyDescriptor;
  }
});

// node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js"(exports, module) {
    "use strict";
    var $gOPD = require_gOPD();
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e12) {
        $gOPD = null;
      }
    }
    module.exports = $gOPD;
  }
});

// node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = Object.defineProperty || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e12) {
        $defineProperty = false;
      }
    }
    module.exports = $defineProperty;
  }
});

// node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (var _3 in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(obj, sym)
        );
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js
var require_Reflect_getPrototypeOf = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect.getPrototypeOf || null;
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js
var require_Object_getPrototypeOf = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js"(exports, module) {
    "use strict";
    var $Object = require_es_object_atoms();
    module.exports = $Object.getPrototypeOf || null;
  }
});

// node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a12, b4) {
      var arr = [];
      for (var i11 = 0; i11 < a12.length; i11 += 1) {
        arr[i11] = a12[i11];
      }
      for (var j4 = 0; j4 < b4.length; j4 += 1) {
        arr[j4 + a12.length] = b4[j4];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset) {
      var arr = [];
      for (var i11 = offset || 0, j4 = 0; i11 < arrLike.length; i11 += 1, j4 += 1) {
        arr[j4] = arrLike[i11];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i11 = 0; i11 < arr.length; i11 += 1) {
        str += arr[i11];
        if (i11 + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max(0, target.length - args.length);
      var boundArgs = [];
      for (var i11 = 0; i11 < boundLength; i11++) {
        boundArgs[i11] = "$" + i11;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js
var require_functionCall = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionCall.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.call;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionApply.js
var require_functionApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/functionApply.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.apply;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/reflectApply.js
var require_reflectApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/reflectApply.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect && Reflect.apply;
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/actualApply.js
var require_actualApply = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/actualApply.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var $reflectApply = require_reflectApply();
    module.exports = $reflectApply || bind.call($call, $apply);
  }
});

// node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/index.js
var require_call_bind_apply_helpers = __commonJS({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.1/node_modules/call-bind-apply-helpers/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $TypeError = require_type();
    var $call = require_functionCall();
    var $actualApply = require_actualApply();
    module.exports = function callBindBasic(args) {
      if (args.length < 1 || typeof args[0] !== "function") {
        throw new $TypeError("a function is required");
      }
      return $actualApply(bind, $call, args);
    };
  }
});

// node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js
var require_get = __commonJS({
  "node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js"(exports, module) {
    "use strict";
    var callBind = require_call_bind_apply_helpers();
    var gOPD = require_gopd();
    var hasProtoAccessor;
    try {
      hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (e12) {
      if (!e12 || typeof e12 !== "object" || !("code" in e12) || e12.code !== "ERR_PROTO_ACCESS") {
        throw e12;
      }
    }
    var desc = !!hasProtoAccessor && gOPD && gOPD(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    );
    var $Object = Object;
    var $getPrototypeOf = $Object.getPrototypeOf;
    module.exports = desc && typeof desc.get === "function" ? callBind([desc.get]) : typeof $getPrototypeOf === "function" ? (
      /** @type {import('./get')} */
      function getDunder(value) {
        return $getPrototypeOf(value == null ? value : $Object(value));
      }
    ) : false;
  }
});

// node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js
var require_get_proto = __commonJS({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js"(exports, module) {
    "use strict";
    var reflectGetProto = require_Reflect_getPrototypeOf();
    var originalGetProto = require_Object_getPrototypeOf();
    var getDunderProto = require_get();
    module.exports = reflectGetProto ? function getProto(O3) {
      return reflectGetProto(O3);
    } : originalGetProto ? function getProto(O3) {
      if (!O3 || typeof O3 !== "object" && typeof O3 !== "function") {
        throw new TypeError("getProto: not an object");
      }
      return originalGetProto(O3);
    } : getDunderProto ? function getProto(O3) {
      return getDunderProto(O3);
    } : null;
  }
});

// node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js"(exports, module) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/.pnpm/get-intrinsic@1.2.7/node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/.pnpm/get-intrinsic@1.2.7/node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $Object = require_es_object_atoms();
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var abs = require_abs();
    var floor = require_floor();
    var max = require_max();
    var min = require_min();
    var pow = require_pow();
    var round2 = require_round();
    var sign = require_sign();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e12) {
      }
    };
    var $gOPD = require_gopd();
    var $defineProperty = require_es_define_property();
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = require_get_proto();
    var $ObjectGPO = require_Object_getPrototypeOf();
    var $ReflectGPO = require_Reflect_getPrototypeOf();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": $Object,
      "%Object.getOwnPropertyDescriptor%": $gOPD,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet,
      "%Function.prototype.call%": $call,
      "%Function.prototype.apply%": $apply,
      "%Object.defineProperty%": $defineProperty,
      "%Object.getPrototypeOf%": $ObjectGPO,
      "%Math.abs%": abs,
      "%Math.floor%": floor,
      "%Math.max%": max,
      "%Math.min%": min,
      "%Math.pow%": pow,
      "%Math.round%": round2,
      "%Math.sign%": sign,
      "%Reflect.getPrototypeOf%": $ReflectGPO
    };
    if (getProto) {
      try {
        null.error;
      } catch (e12) {
        errorProto = getProto(getProto(e12));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name2) {
      var value;
      if (name2 === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name2 === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name2 === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name2 === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name2 === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name2] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call($call, Array.prototype.concat);
    var $spliceApply = bind.call($apply, Array.prototype.splice);
    var $replace = bind.call($call, String.prototype.replace);
    var $strSlice = bind.call($call, String.prototype.slice);
    var $exec = bind.call($call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number4, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number4 || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name2, allowMissing) {
      var intrinsicName = name2;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name2 + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name2 + " does not exist!");
    };
    module.exports = function GetIntrinsic(name2, allowMissing) {
      if (typeof name2 !== "string" || name2.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name2) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name2);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i11 = 1, isOwn = true; i11 < parts.length; i11 += 1) {
        var part = parts[i11];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name2 + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i11 + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/.pnpm/call-bound@1.0.3/node_modules/call-bound/index.js
var require_call_bound = __commonJS({
  "node_modules/.pnpm/call-bound@1.0.3/node_modules/call-bound/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBindBasic = require_call_bind_apply_helpers();
    var $indexOf = callBindBasic([GetIntrinsic("%String.prototype.indexOf%")]);
    module.exports = function callBoundIntrinsic(name2, allowMissing) {
      var intrinsic = (
        /** @type {Parameters<typeof callBindBasic>[0][0]} */
        GetIntrinsic(name2, !!allowMissing)
      );
      if (typeof intrinsic === "function" && $indexOf(name2, ".prototype.") > -1) {
        return callBindBasic([intrinsic]);
      }
      return intrinsic;
    };
  }
});

// node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js
var require_side_channel_map = __commonJS({
  "node_modules/.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_call_bound();
    var inspect = require_object_inspect();
    var $TypeError = require_type();
    var $Map = GetIntrinsic("%Map%", true);
    var $mapGet = callBound("Map.prototype.get", true);
    var $mapSet = callBound("Map.prototype.set", true);
    var $mapHas = callBound("Map.prototype.has", true);
    var $mapDelete = callBound("Map.prototype.delete", true);
    var $mapSize = callBound("Map.prototype.size", true);
    module.exports = !!$Map && /** @type {Exclude<import('.'), false>} */
    function getSideChannelMap() {
      var $m;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          if ($m) {
            var result = $mapDelete($m, key);
            if ($mapSize($m) === 0) {
              $m = void 0;
            }
            return result;
          }
          return false;
        },
        get: function(key) {
          if ($m) {
            return $mapGet($m, key);
          }
        },
        has: function(key) {
          if ($m) {
            return $mapHas($m, key);
          }
          return false;
        },
        set: function(key, value) {
          if (!$m) {
            $m = new $Map();
          }
          $mapSet($m, key, value);
        }
      };
      return channel;
    };
  }
});

// node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js
var require_side_channel_weakmap = __commonJS({
  "node_modules/.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_call_bound();
    var inspect = require_object_inspect();
    var getSideChannelMap = require_side_channel_map();
    var $TypeError = require_type();
    var $WeakMap = GetIntrinsic("%WeakMap%", true);
    var $weakMapGet = callBound("WeakMap.prototype.get", true);
    var $weakMapSet = callBound("WeakMap.prototype.set", true);
    var $weakMapHas = callBound("WeakMap.prototype.has", true);
    var $weakMapDelete = callBound("WeakMap.prototype.delete", true);
    module.exports = $WeakMap ? (
      /** @type {Exclude<import('.'), false>} */
      function getSideChannelWeakMap() {
        var $wm;
        var $m;
        var channel = {
          assert: function(key) {
            if (!channel.has(key)) {
              throw new $TypeError("Side channel does not contain " + inspect(key));
            }
          },
          "delete": function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapDelete($wm, key);
              }
            } else if (getSideChannelMap) {
              if ($m) {
                return $m["delete"](key);
              }
            }
            return false;
          },
          get: function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapGet($wm, key);
              }
            }
            return $m && $m.get(key);
          },
          has: function(key) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if ($wm) {
                return $weakMapHas($wm, key);
              }
            }
            return !!$m && $m.has(key);
          },
          set: function(key, value) {
            if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
              if (!$wm) {
                $wm = new $WeakMap();
              }
              $weakMapSet($wm, key, value);
            } else if (getSideChannelMap) {
              if (!$m) {
                $m = getSideChannelMap();
              }
              $m.set(key, value);
            }
          }
        };
        return channel;
      }
    ) : getSideChannelMap;
  }
});

// node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  "node_modules/.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js"(exports, module) {
    "use strict";
    var $TypeError = require_type();
    var inspect = require_object_inspect();
    var getSideChannelList = require_side_channel_list();
    var getSideChannelMap = require_side_channel_map();
    var getSideChannelWeakMap = require_side_channel_weakmap();
    var makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;
    module.exports = function getSideChannel() {
      var $channelData;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        "delete": function(key) {
          return !!$channelData && $channelData["delete"](key);
        },
        get: function(key) {
          return $channelData && $channelData.get(key);
        },
        has: function(key) {
          return !!$channelData && $channelData.has(key);
        },
        set: function(key, value) {
          if (!$channelData) {
            $channelData = makeChannel();
          }
          $channelData.set(key, value);
        }
      };
      return channel;
    };
  }
});

// node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  "node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/formats.js"(exports, module) {
    "use strict";
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: "RFC1738",
      RFC3986: "RFC3986"
    };
    module.exports = {
      "default": Format.RFC3986,
      formatters: {
        RFC1738: function(value) {
          return replace.call(value, percentTwenties, "+");
        },
        RFC3986: function(value) {
          return String(value);
        }
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986
    };
  }
});

// node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/utils.js
var require_utils4 = __commonJS({
  "node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/utils.js"(exports, module) {
    "use strict";
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray2 = Array.isArray;
    var hexTable = function() {
      var array = [];
      for (var i11 = 0; i11 < 256; ++i11) {
        array.push("%" + ((i11 < 16 ? "0" : "") + i11.toString(16)).toUpperCase());
      }
      return array;
    }();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item3 = queue.pop();
        var obj = item3.obj[item3.prop];
        if (isArray2(obj)) {
          var compacted = [];
          for (var j4 = 0; j4 < obj.length; ++j4) {
            if (typeof obj[j4] !== "undefined") {
              compacted.push(obj[j4]);
            }
          }
          item3.obj[item3.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj = options && options.plainObjects ? { __proto__: null } : {};
      for (var i11 = 0; i11 < source.length; ++i11) {
        if (typeof source[i11] !== "undefined") {
          obj[i11] = source[i11];
        }
      }
      return obj;
    };
    var merge2 = function merge3(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== "object" && typeof source !== "function") {
        if (isArray2(target)) {
          target.push(source);
        } else if (target && typeof target === "object") {
          if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== "object") {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray2(target) && !isArray2(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray2(target) && isArray2(source)) {
        source.forEach(function(item3, i11) {
          if (has.call(target, i11)) {
            var targetItem = target[i11];
            if (targetItem && typeof targetItem === "object" && item3 && typeof item3 === "object") {
              target[i11] = merge3(targetItem, item3, options);
            } else {
              target.push(item3);
            }
          } else {
            target[i11] = item3;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge3(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode2 = function(str, defaultDecoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, " ");
      if (charset === "iso-8859-1") {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e12) {
        return strWithoutPlus;
      }
    };
    var limit = 1024;
    var encode2 = function encode3(str, defaultEncoder, charset, kind, format) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === "symbol") {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== "string") {
        string = String(str);
      }
      if (charset === "iso-8859-1") {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
          return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
        });
      }
      var out = "";
      for (var j4 = 0; j4 < string.length; j4 += limit) {
        var segment = string.length >= limit ? string.slice(j4, j4 + limit) : string;
        var arr = [];
        for (var i11 = 0; i11 < segment.length; ++i11) {
          var c13 = segment.charCodeAt(i11);
          if (c13 === 45 || c13 === 46 || c13 === 95 || c13 === 126 || c13 >= 48 && c13 <= 57 || c13 >= 65 && c13 <= 90 || c13 >= 97 && c13 <= 122 || format === formats.RFC1738 && (c13 === 40 || c13 === 41)) {
            arr[arr.length] = segment.charAt(i11);
            continue;
          }
          if (c13 < 128) {
            arr[arr.length] = hexTable[c13];
            continue;
          }
          if (c13 < 2048) {
            arr[arr.length] = hexTable[192 | c13 >> 6] + hexTable[128 | c13 & 63];
            continue;
          }
          if (c13 < 55296 || c13 >= 57344) {
            arr[arr.length] = hexTable[224 | c13 >> 12] + hexTable[128 | c13 >> 6 & 63] + hexTable[128 | c13 & 63];
            continue;
          }
          i11 += 1;
          c13 = 65536 + ((c13 & 1023) << 10 | segment.charCodeAt(i11) & 1023);
          arr[arr.length] = hexTable[240 | c13 >> 18] + hexTable[128 | c13 >> 12 & 63] + hexTable[128 | c13 >> 6 & 63] + hexTable[128 | c13 & 63];
        }
        out += arr.join("");
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: "o" }];
      var refs = [];
      for (var i11 = 0; i11 < queue.length; ++i11) {
        var item3 = queue[i11];
        var obj = item3.obj[item3.prop];
        var keys3 = Object.keys(obj);
        for (var j4 = 0; j4 < keys3.length; ++j4) {
          var key = keys3[j4];
          var val = obj[key];
          if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== "object") {
        return false;
      }
      return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
    };
    var combine = function combine2(a12, b4) {
      return [].concat(a12, b4);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray2(val)) {
        var mapped = [];
        for (var i11 = 0; i11 < val.length; i11 += 1) {
          mapped.push(fn(val[i11]));
        }
        return mapped;
      }
      return fn(val);
    };
    module.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode: decode2,
      encode: encode2,
      isBuffer,
      isRegExp,
      maybeMap,
      merge: merge2
    };
  }
});

// node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/stringify.js
var require_stringify2 = __commonJS({
  "node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/stringify.js"(exports, module) {
    "use strict";
    var getSideChannel = require_side_channel();
    var utils = require_utils4();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix2) {
        return prefix2 + "[]";
      },
      comma: "comma",
      indices: function indices(prefix2, key) {
        return prefix2 + "[" + key + "]";
      },
      repeat: function repeat(prefix2) {
        return prefix2;
      }
    };
    var isArray2 = Array.isArray;
    var push = Array.prototype.push;
    var pushToArray = function(arr, valueOrArray) {
      push.apply(arr, isArray2(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats["default"];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      allowEmptyArrays: false,
      arrayFormat: "indices",
      charset: "utf-8",
      charsetSentinel: false,
      commaRoundTrip: false,
      delimiter: "&",
      encode: true,
      encodeDotInKeys: false,
      encoder: utils.encode,
      encodeValuesOnly: false,
      filter: void 0,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      // deprecated
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v5) {
      return typeof v5 === "string" || typeof v5 === "number" || typeof v5 === "boolean" || typeof v5 === "symbol" || typeof v5 === "bigint";
    };
    var sentinel = {};
    var stringify3 = function stringify4(object, prefix2, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder2, filter3, sort, allowDots, serializeDate, format, formatter2, encodeValuesOnly, charset, sideChannel) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== "undefined") {
          if (pos === step) {
            throw new RangeError("Cyclic object value");
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === "undefined") {
          step = 0;
        }
      }
      if (typeof filter3 === "function") {
        obj = filter3(prefix2, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === "comma" && isArray2(obj)) {
        obj = utils.maybeMap(obj, function(value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder2 && !encodeValuesOnly ? encoder2(prefix2, defaults.encoder, charset, "key", format) : prefix2;
        }
        obj = "";
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder2) {
          var keyValue = encodeValuesOnly ? prefix2 : encoder2(prefix2, defaults.encoder, charset, "key", format);
          return [formatter2(keyValue) + "=" + formatter2(encoder2(obj, defaults.encoder, charset, "value", format))];
        }
        return [formatter2(prefix2) + "=" + formatter2(String(obj))];
      }
      var values2 = [];
      if (typeof obj === "undefined") {
        return values2;
      }
      var objKeys;
      if (generateArrayPrefix === "comma" && isArray2(obj)) {
        if (encodeValuesOnly && encoder2) {
          obj = utils.maybeMap(obj, encoder2);
        }
        objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
      } else if (isArray2(filter3)) {
        objKeys = filter3;
      } else {
        var keys3 = Object.keys(obj);
        objKeys = sort ? keys3.sort(sort) : keys3;
      }
      var encodedPrefix = encodeDotInKeys ? String(prefix2).replace(/\./g, "%2E") : String(prefix2);
      var adjustedPrefix = commaRoundTrip && isArray2(obj) && obj.length === 1 ? encodedPrefix + "[]" : encodedPrefix;
      if (allowEmptyArrays && isArray2(obj) && obj.length === 0) {
        return adjustedPrefix + "[]";
      }
      for (var j4 = 0; j4 < objKeys.length; ++j4) {
        var key = objKeys[j4];
        var value = typeof key === "object" && key && typeof key.value !== "undefined" ? key.value : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\./g, "%2E") : String(key);
        var keyPrefix = isArray2(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + encodedKey : "[" + encodedKey + "]");
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values2, stringify4(
          value,
          keyPrefix,
          generateArrayPrefix,
          commaRoundTrip,
          allowEmptyArrays,
          strictNullHandling,
          skipNulls,
          encodeDotInKeys,
          generateArrayPrefix === "comma" && encodeValuesOnly && isArray2(obj) ? null : encoder2,
          filter3,
          sort,
          allowDots,
          serializeDate,
          format,
          formatter2,
          encodeValuesOnly,
          charset,
          valueSideChannel
        ));
      }
      return values2;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.encodeDotInKeys !== "undefined" && typeof opts.encodeDotInKeys !== "boolean") {
        throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
        throw new TypeError("Encoder has to be a function.");
      }
      var charset = opts.charset || defaults.charset;
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var format = formats["default"];
      if (typeof opts.format !== "undefined") {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError("Unknown format option provided.");
        }
        format = opts.format;
      }
      var formatter2 = formats.formatters[format];
      var filter3 = defaults.filter;
      if (typeof opts.filter === "function" || isArray2(opts.filter)) {
        filter3 = opts.filter;
      }
      var arrayFormat;
      if (opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if ("indices" in opts) {
        arrayFormat = opts.indices ? "indices" : "repeat";
      } else {
        arrayFormat = defaults.arrayFormat;
      }
      if ("commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
        throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        arrayFormat,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        commaRoundTrip: !!opts.commaRoundTrip,
        delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
        encodeDotInKeys: typeof opts.encodeDotInKeys === "boolean" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,
        encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter3,
        format,
        formatter: formatter2,
        serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === "function" ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module.exports = function(object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter3;
      if (typeof options.filter === "function") {
        filter3 = options.filter;
        obj = filter3("", obj);
      } else if (isArray2(options.filter)) {
        filter3 = options.filter;
        objKeys = filter3;
      }
      var keys3 = [];
      if (typeof obj !== "object" || obj === null) {
        return "";
      }
      var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];
      var commaRoundTrip = generateArrayPrefix === "comma" && options.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i11 = 0; i11 < objKeys.length; ++i11) {
        var key = objKeys[i11];
        var value = obj[key];
        if (options.skipNulls && value === null) {
          continue;
        }
        pushToArray(keys3, stringify3(
          value,
          key,
          generateArrayPrefix,
          commaRoundTrip,
          options.allowEmptyArrays,
          options.strictNullHandling,
          options.skipNulls,
          options.encodeDotInKeys,
          options.encode ? options.encoder : null,
          options.filter,
          options.sort,
          options.allowDots,
          options.serializeDate,
          options.format,
          options.formatter,
          options.encodeValuesOnly,
          options.charset,
          sideChannel
        ));
      }
      var joined = keys3.join(options.delimiter);
      var prefix2 = options.addQueryPrefix === true ? "?" : "";
      if (options.charsetSentinel) {
        if (options.charset === "iso-8859-1") {
          prefix2 += "utf8=%26%2310003%3B&";
        } else {
          prefix2 += "utf8=%E2%9C%93&";
        }
      }
      return joined.length > 0 ? prefix2 + joined : "";
    };
  }
});

// node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/parse.js
var require_parse2 = __commonJS({
  "node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/parse.js"(exports, module) {
    "use strict";
    var utils = require_utils4();
    var has = Object.prototype.hasOwnProperty;
    var isArray2 = Array.isArray;
    var defaults = {
      allowDots: false,
      allowEmptyArrays: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: false,
      comma: false,
      decodeDotInKeys: false,
      decoder: utils.decode,
      delimiter: "&",
      depth: 5,
      duplicates: "combine",
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictDepth: false,
      strictNullHandling: false,
      throwOnLimitExceeded: false
    };
    var interpretNumericEntities = function(str) {
      return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function(val, options, currentArrayLength) {
      if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
        return val.split(",");
      }
      if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {
        throw new RangeError("Array limit exceeded. Only " + options.arrayLimit + " element" + (options.arrayLimit === 1 ? "" : "s") + " allowed in an array.");
      }
      return val;
    };
    var isoSentinel = "utf8=%26%2310003%3B";
    var charsetSentinel = "utf8=%E2%9C%93";
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = { __proto__: null };
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
      cleanStr = cleanStr.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
      var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(
        options.delimiter,
        options.throwOnLimitExceeded ? limit + 1 : limit
      );
      if (options.throwOnLimitExceeded && parts.length > limit) {
        throw new RangeError("Parameter limit exceeded. Only " + limit + " parameter" + (limit === 1 ? "" : "s") + " allowed.");
      }
      var skipIndex = -1;
      var i11;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i11 = 0; i11 < parts.length; ++i11) {
          if (parts[i11].indexOf("utf8=") === 0) {
            if (parts[i11] === charsetSentinel) {
              charset = "utf-8";
            } else if (parts[i11] === isoSentinel) {
              charset = "iso-8859-1";
            }
            skipIndex = i11;
            i11 = parts.length;
          }
        }
      }
      for (i11 = 0; i11 < parts.length; ++i11) {
        if (i11 === skipIndex) {
          continue;
        }
        var part = parts[i11];
        var bracketEqualsPos = part.indexOf("]=");
        var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
        var key;
        var val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, "key");
          val = options.strictNullHandling ? null : "";
        } else {
          key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
          val = utils.maybeMap(
            parseArrayValue(
              part.slice(pos + 1),
              options,
              isArray2(obj[key]) ? obj[key].length : 0
            ),
            function(encodedVal) {
              return options.decoder(encodedVal, defaults.decoder, charset, "value");
            }
          );
        }
        if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
          val = interpretNumericEntities(String(val));
        }
        if (part.indexOf("[]=") > -1) {
          val = isArray2(val) ? [val] : val;
        }
        var existing = has.call(obj, key);
        if (existing && options.duplicates === "combine") {
          obj[key] = utils.combine(obj[key], val);
        } else if (!existing || options.duplicates === "last") {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function(chain, val, options, valuesParsed) {
      var currentArrayLength = 0;
      if (chain.length > 0 && chain[chain.length - 1] === "[]") {
        var parentKey = chain.slice(0, -1).join("");
        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;
      }
      var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);
      for (var i11 = chain.length - 1; i11 >= 0; --i11) {
        var obj;
        var root5 = chain[i11];
        if (root5 === "[]" && options.parseArrays) {
          obj = options.allowEmptyArrays && (leaf === "" || options.strictNullHandling && leaf === null) ? [] : utils.combine([], leaf);
        } else {
          obj = options.plainObjects ? { __proto__: null } : {};
          var cleanRoot = root5.charAt(0) === "[" && root5.charAt(root5.length - 1) === "]" ? root5.slice(1, -1) : root5;
          var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, ".") : cleanRoot;
          var index = parseInt(decodedRoot, 10);
          if (!options.parseArrays && decodedRoot === "") {
            obj = { 0: leaf };
          } else if (!isNaN(index) && root5 !== decodedRoot && String(index) === decodedRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
            obj = [];
            obj[index] = leaf;
          } else if (decodedRoot !== "__proto__") {
            obj[decodedRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys3 = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys3.push(parent);
      }
      var i11 = 0;
      while (options.depth > 0 && (segment = child.exec(key)) !== null && i11 < options.depth) {
        i11 += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys3.push(segment[1]);
      }
      if (segment) {
        if (options.strictDepth === true) {
          throw new RangeError("Input depth exceeded depth option of " + options.depth + " and strictDepth is true");
        }
        keys3.push("[" + key.slice(segment.index) + "]");
      }
      return parseObject(keys3, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (typeof opts.allowEmptyArrays !== "undefined" && typeof opts.allowEmptyArrays !== "boolean") {
        throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
      }
      if (typeof opts.decodeDotInKeys !== "undefined" && typeof opts.decodeDotInKeys !== "boolean") {
        throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
      }
      if (opts.decoder !== null && typeof opts.decoder !== "undefined" && typeof opts.decoder !== "function") {
        throw new TypeError("Decoder has to be a function.");
      }
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      if (typeof opts.throwOnLimitExceeded !== "undefined" && typeof opts.throwOnLimitExceeded !== "boolean") {
        throw new TypeError("`throwOnLimitExceeded` option must be a boolean");
      }
      var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
      var duplicates = typeof opts.duplicates === "undefined" ? defaults.duplicates : opts.duplicates;
      if (duplicates !== "combine" && duplicates !== "first" && duplicates !== "last") {
        throw new TypeError("The duplicates option must be either combine, first, or last");
      }
      var allowDots = typeof opts.allowDots === "undefined" ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
      return {
        allowDots,
        allowEmptyArrays: typeof opts.allowEmptyArrays === "boolean" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
        allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
        decodeDotInKeys: typeof opts.decodeDotInKeys === "boolean" ? opts.decodeDotInKeys : defaults.decodeDotInKeys,
        decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
        duplicates,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
        strictDepth: typeof opts.strictDepth === "boolean" ? !!opts.strictDepth : defaults.strictDepth,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling,
        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === "boolean" ? opts.throwOnLimitExceeded : false
      };
    };
    module.exports = function(str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === "" || str === null || typeof str === "undefined") {
        return options.plainObjects ? { __proto__: null } : {};
      }
      var tempObj = typeof str === "string" ? parseValues(str, options) : str;
      var obj = options.plainObjects ? { __proto__: null } : {};
      var keys3 = Object.keys(tempObj);
      for (var i11 = 0; i11 < keys3.length; ++i11) {
        var key = keys3[i11];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  }
});

// node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/index.js
var require_lib = __commonJS({
  "node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/index.js"(exports, module) {
    "use strict";
    var stringify3 = require_stringify2();
    var parse3 = require_parse2();
    var formats = require_formats();
    module.exports = {
      formats,
      parse: parse3,
      stringify: stringify3
    };
  }
});

// node_modules/.pnpm/@vite-plugin-vercel+vike@9.0.4_vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_reac_b39267bfb01181a9df9c25bd773515a2/node_modules/@vite-plugin-vercel/vike/templates/ssr_.template.ts
init_runtime2();

// node_modules/.pnpm/@vite-plugin-vercel+vike@9.0.4_vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_reac_b39267bfb01181a9df9c25bd773515a2/node_modules/@vite-plugin-vercel/vike/templates/utils.ts
var import_qs = __toESM(require_lib(), 1);
function getOriginalUrl(xNowRouteMatchesHeader, originalPath, url) {
  const matches = (
    // FIXME x-now-route-matches is not definitive https://github.com/orgs/vercel/discussions/577#discussioncomment-2769478
    typeof xNowRouteMatchesHeader === "string" ? (0, import_qs.parse)(xNowRouteMatchesHeader) : null
  );
  return typeof originalPath === "string" ? originalPath : matches && typeof matches?.["1"] === "string" ? matches["1"] : url ?? "";
}

// node_modules/.pnpm/@vite-plugin-vercel+vike@9.0.4_vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_reac_b39267bfb01181a9df9c25bd773515a2/node_modules/@vite-plugin-vercel/vike/templates/node-helpers.ts
function getDefaultPageContextInit(request) {
  const query2 = request.query ?? {};
  const url = getOriginalUrl(request.headers["x-now-route-matches"], query2.__original_path, request.url);
  return {
    url,
    urlOriginal: url,
    body: request.body,
    cookies: request.cookies
  };
}
function getDefaultEmptyResponseHandler(response) {
  response.statusCode = 200;
  response.setHeader("content-type", "text/html; charset=UTF-8");
  return response.end("");
}
function getDefaultResponseHandler(response, httpResponse) {
  const { statusCode, body, headers } = httpResponse;
  response.statusCode = statusCode;
  for (const [name2, value] of headers) {
    response.setHeader(name2, value);
  }
  return response.end(body);
}

// node_modules/.pnpm/@vite-plugin-vercel+vike@9.0.4_vike@0.4.228_react-streaming@0.4.2_react-dom@19.1.0_reac_b39267bfb01181a9df9c25bd773515a2/node_modules/@vite-plugin-vercel/vike/templates/ssr_.template.ts
async function handler(request, response) {
  console.debug("query", request.query);
  console.debug("url", request.url);
  console.debug("headers", request.headers);
  const pageContextInit = getDefaultPageContextInit(request);
  const pageContext = await renderPage(pageContextInit);
  const { httpResponse } = pageContext;
  if (!httpResponse) {
    return getDefaultEmptyResponseHandler(response);
  }
  return getDefaultResponseHandler(response, httpResponse);
}
export {
  handler as default
};
/*! src/features/SubscribeToNews/ui/SubscribeToNews.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/List/List.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Metainfo/MetaInfo.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Section/Section.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Top/Top.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Footer/Footer.module.css [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/RootLayout.module.css [vike:pluginModuleBanner] */
/*! pages/+onBeforeRender.ts [vike:pluginModuleBanner] */
/*! src/shared/api/constants.ts [vike:pluginModuleBanner] */
/*! src/shared/api/create-request-fx.ts [vike:pluginModuleBanner] */
/*! src/shared/api/index.ts [vike:pluginModuleBanner] */
/*! src/shared/factories/atom.ts [vike:pluginModuleBanner] */
/*! src/app/assets/images/cognitive-logo.svg?react [vike:pluginModuleBanner] */
/*! src/widgets/HeadDefault/index.tsx [vike:pluginModuleBanner] */
/*! src/features/SubscribeToNews/api/index.ts [vike:pluginModuleBanner] */
/*! src/features/SubscribeToNews/model/index.ts [vike:pluginModuleBanner] */
/*! src/features/SubscribeToNews/schema/index.ts [vike:pluginModuleBanner] */
/*! src/features/SubscribeToNews/ui/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/const/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/List/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Metainfo/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Section/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Top/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/ui/Footer/index.tsx [vike:pluginModuleBanner] */
/*! src/widgets/RootLayout/index.tsx [vike:pluginModuleBanner] */
/*! src/app/providers/Mantine/theme.ts [vike:pluginModuleBanner] */
/*! src/app/providers/Mantine/provider.tsx [vike:pluginModuleBanner] */
/*! src/shared/lib/effector/getScope.ts [vike:pluginModuleBanner] */
/*! src/shared/lib/effector/ScopeProvider.tsx [vike:pluginModuleBanner] */
/*! src/shared/lib/effector/EffectorProvider.tsx [vike:pluginModuleBanner] */
/*! pages/+Wrapper.tsx [vike:pluginModuleBanner] */
/*! src/shared/ui/Picture/Picture.module.css [vike:pluginModuleBanner] */
/*! src/shared/ui/Section/Section.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Hero/Hero.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/About/About.module.css [vike:pluginModuleBanner] */
/*! src/shared/ui/SpinningText/SpinningText.module.css [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/StatisticsCard/StatisticsCard.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Statistics/Statistics.module.css [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/ForWhomCard/ForWhomCard.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/ForWhom.module.css [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/HowItHelpsCard/HowItHelpsCard.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/HowItHelps.module.css [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/TariffCard/TariffCard.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Tariffs/Tafiffs.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItWorks/HowItWorks.module.css [vike:pluginModuleBanner] */
/*! src/shared/ui/StickyScrollReveal/StickyScrollReveal.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/WhyUs/WhyUs.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/PeopleTalk/PeopleTalk.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/FAQ/FAQ.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/MoreInBlog/MoreInBlog.module.css [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/LetsContinue/LetsContinue.module.css [vike:pluginModuleBanner] */
/*! src/app/assets/images/union.svg?react [vike:pluginModuleBanner] */
/*! src/shared/ui/Picture/index.tsx [vike:pluginModuleBanner] */
/*! src/shared/ui/Section/index.tsx [vike:pluginModuleBanner] */
/*! src/shared/ui/SpinningText/index.tsx [vike:pluginModuleBanner] */
/*! src/shared/ui/StickyScrollReveal/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Hero/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/About/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/StatisticsCard/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/ForWhomCard/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/HowItHelpsCard/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Landing/ui/TariffCard/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Landing/api/index.ts [vike:pluginModuleBanner] */
/*! src/entities/Landing/model/index.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Statistics/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-1.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-2.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-3.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-4.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-desktop-1.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-desktop-2.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-desktop-3.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/img/image-card-desktop-4.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/ForWhom/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/img/image-1.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/img/image-2.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/img/image-3.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/img/image-4.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/const/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItHelps/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Tariffs/const.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Tariffs/union.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/Tariffs/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItWorks/const.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItWorks/Icons.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/HowItWorks/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/WhyUs/const.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/WhyUs/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Review/model/index.ts [vike:pluginModuleBanner] */
/*! src/entities/Review/api/index.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/PeopleTalk/model.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/PeopleTalk/desktop.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/PeopleTalk/mobile.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/PeopleTalk/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/FAQ/api/index.ts [vike:pluginModuleBanner] */
/*! src/entities/FAQ/model/index.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/FAQ/union.svg?react [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/FAQ/index.tsx [vike:pluginModuleBanner] */
/*! src/entities/Blog/api/index.ts [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/MoreInBlog/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/ui/LetsContinue/index.tsx [vike:pluginModuleBanner] */
/*! src/pages/IndexPage/index.tsx [vike:pluginModuleBanner] */
/*! pages/index/+Page.tsx [vike:pluginModuleBanner] */
/*! src/shared/lib/effector/events.ts [vike:pluginModuleBanner] */
/*! pages/index/+pageInitiated.ts [vike:pluginModuleBanner] */
/*! virtual:vike:pageConfigValuesAll:server:/pages/index [vike:pluginModuleBanner] */
/*! pages/test/+Page.tsx [vike:pluginModuleBanner] */
/*! virtual:vike:pageConfigValuesAll:server:/pages/test [vike:pluginModuleBanner] */
/*! virtual:vike:importUserCode:server [vike:pluginModuleBanner] */
/*! virtual:@brillout/vite-plugin-server-entry:serverEntry [vike:pluginModuleBanner] */
/*! Bundled license information:

react/cjs/react.production.js:
  (**
   * @license React
   * react.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.production.js:
  (**
   * @license React
   * react-dom.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.node.production.js:
  (**
   * @license React
   * react-dom-server-legacy.node.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.production.js:
  (**
   * @license React
   * react-dom-server.node.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.edge.production.js:
  (**
   * @license React
   * react-dom-server.edge.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.browser.production.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-runtime.production.js:
  (**
   * @license React
   * react-jsx-runtime.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim.production.js:
  (**
   * @license React
   * use-sync-external-store-shim.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

node-fetch-native/dist/node.mjs:
  (**
  * @license
  * web-streams-polyfill v3.3.3
  * Copyright 2024 Mattias Buelens, Diwank Singh Tomer and other contributors.
  * This code is released under the MIT license.
  * SPDX-License-Identifier: MIT
  *)
  (*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)
  (*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)
  (*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
